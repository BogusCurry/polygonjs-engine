{"version":3,"sources":["webpack://POLY/./node_modules/three/src/materials/LineBasicMaterial.js","webpack://POLY/./node_modules/three/src/objects/LineSegments.js","webpack://POLY/./node_modules/three/src/geometries/PolyhedronGeometry.js","webpack://POLY/./node_modules/three/src/lights/Light.js","webpack://POLY/./node_modules/three/src/objects/Line.js","webpack://POLY/./node_modules/three/src/geometries/SphereGeometry.js","webpack://POLY/./node_modules/three/src/core/Raycaster.js","webpack://POLY/./node_modules/three/src/geometries/OctahedronGeometry.js","webpack://POLY/./node_modules/lodash/sum.js","webpack://POLY/./node_modules/three/src/lights/LightShadow.js","webpack://POLY/./node_modules/three/src/lights/DirectionalLightShadow.js","webpack://POLY/./node_modules/three/src/lights/DirectionalLight.js","webpack://POLY/./node_modules/three/src/lights/PointLightShadow.js","webpack://POLY/./node_modules/three/src/lights/PointLight.js","webpack://POLY/./node_modules/three/src/lights/SpotLightShadow.js","webpack://POLY/./node_modules/three/src/lights/SpotLight.js","webpack://POLY/./node_modules/three/src/lights/AmbientLight.js","webpack://POLY/./node_modules/three/src/lights/RectAreaLight.js","webpack://POLY/./node_modules/three/src/lights/HemisphereLight.js","webpack://POLY/./node_modules/three/src/scenes/FogExp2.js","webpack://POLY/./node_modules/three/src/scenes/Fog.js","webpack://POLY/./node_modules/lodash/_baseSum.js"],"names":["LineBasicMaterial","parameters","call","this","type","color","linewidth","linecap","linejoin","setValues","prototype","Object","create","constructor","isLineBasicMaterial","copy","source","_start","_end","LineSegments","geometry","material","assign","isLineSegments","computeLineDistances","isBufferGeometry","index","positionAttribute","attributes","position","lineDistances","i","l","count","fromBufferAttribute","distanceTo","setAttribute","console","warn","isGeometry","vertices","length","PolyhedronGeometry","indices","radius","detail","fromBufferGeometry","PolyhedronBufferGeometry","mergeVertices","vertexBuffer","uvBuffer","subdivideFace","a","b","c","j","cols","Math","pow","v","aj","clone","lerp","bj","rows","k","floor","pushVertex","vertex","push","x","y","z","getVertexByIndex","stride","correctUV","uv","vector","azimuth","PI","atan2","subdivide","normalize","multiplyScalar","applyRadius","u","sqrt","centroid","uvA","uvB","uvC","set","add","divideScalar","azi","correctUVs","x0","x1","x2","max","min","correctSeam","generateUVs","slice","computeVertexNormals","normalizeNormals","Light","intensity","undefined","receiveShadow","isLight","toJSON","meta","data","object","getHex","groundColor","distance","angle","decay","penumbra","shadow","_inverseMatrix","_ray","_sphere","Line","mode","error","isLine","raycast","raycaster","intersects","matrixWorld","threshold","params","boundingSphere","computeBoundingSphere","applyMatrix4","ray","intersectsSphere","getInverse","localThreshold","scale","localThresholdSq","vStart","vEnd","interSegment","interRay","step","positions","array","fromArray","distanceSqToSegment","origin","near","far","point","face","faceIndex","nbVertices","SphereGeometry","widthSegments","heightSegments","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","ix","iy","thetaEnd","grid","normal","normals","uvs","verticesRow","uOffset","cos","sin","d","setIndex","Raycaster","direction","Infinity","camera","layers","Mesh","LOD","Points","Sprite","defineProperties","PointCloud","get","ascSort","intersectObject","recursive","test","children","setFromCamera","coords","isPerspectiveCamera","setFromMatrixPosition","unproject","sub","isOrthographicCamera","transformDirection","optionalTarget","sort","intersectObjects","objects","Array","isArray","OctahedronGeometry","OctahedronBufferGeometry","baseSum","identity","module","exports","LightShadow","bias","mapSize","map","mapPass","matrix","_frustum","_frameExtents","_viewportCount","_viewports","_projScreenMatrix","_lightPositionWorld","_lookTarget","getViewportCount","getFrustum","updateMatrices","light","shadowCamera","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","target","lookAt","updateMatrixWorld","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromProjectionMatrix","multiply","getViewport","viewportIndex","getFrameExtents","toArray","DirectionalLightShadow","OrthographicCamera","isDirectionalLightShadow","DirectionalLight","Object3D","DefaultUp","updateMatrix","isDirectionalLight","PointLightShadow","PerspectiveCamera","Vector2","Vector4","_cubeDirections","Vector3","_cubeUps","PointLight","defineProperty","power","isPointLightShadow","up","makeTranslation","isPointLight","SpotLightShadow","isSpotLightShadow","fov","MathUtils","RAD2DEG","aspect","width","height","updateProjectionMatrix","SpotLight","isSpotLight","AmbientLight","castShadow","isAmbientLight","RectAreaLight","isRectAreaLight","HemisphereLight","skyColor","isHemisphereLight","FogExp2","density","name","isFogExp2","Fog","isFog","iteratee","result","current"],"mappings":"kHAAA,uDAiBA,SAASA,EAAmBC,GAE3B,IAASC,KAAMC,MAEfA,KAAKC,KAAO,oBAEZD,KAAKE,MAAQ,IAAI,IAAO,UAExBF,KAAKG,UAAY,EACjBH,KAAKI,QAAU,QACfJ,KAAKK,SAAW,QAEhBL,KAAKM,UAAWR,GAIjBD,EAAkBU,UAAYC,OAAOC,OAAQ,IAASF,WACtDV,EAAkBU,UAAUG,YAAcb,EAE1CA,EAAkBU,UAAUI,qBAAsB,EAElDd,EAAkBU,UAAUK,KAAO,SAAWC,GAU7C,OARA,IAASN,UAAUK,KAAKb,KAAMC,KAAMa,GAEpCb,KAAKE,MAAMU,KAAMC,EAAOX,OAExBF,KAAKG,UAAYU,EAAOV,UACxBH,KAAKI,QAAUS,EAAOT,QACtBJ,KAAKK,SAAWQ,EAAOR,SAEhBL,O,iCChDR,+DAQIc,EAAS,IAAI,IACbC,EAAO,IAAI,IAEf,SAASC,EAAcC,EAAUC,GAEhC,IAAKnB,KAAMC,KAAMiB,EAAUC,GAE3BlB,KAAKC,KAAO,eAIbe,EAAaT,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ,IAAKF,WAAa,CAExEG,YAAaM,EAEbI,gBAAgB,EAEhBC,qBAAsB,WAErB,IAAIJ,EAAWjB,KAAKiB,SAEpB,GAAKA,EAASK,iBAIb,GAAwB,OAAnBL,EAASM,MAAiB,CAK9B,IAHA,IAAIC,EAAoBP,EAASQ,WAAWC,SACxCC,EAAgB,GAEVC,EAAI,EAAGC,EAAIL,EAAkBM,MAAOF,EAAIC,EAAGD,GAAK,EAEzDd,EAAOiB,oBAAqBP,EAAmBI,GAC/Cb,EAAKgB,oBAAqBP,EAAmBI,EAAI,GAEjDD,EAAeC,GAAc,IAANA,EAAY,EAAID,EAAeC,EAAI,GAC1DD,EAAeC,EAAI,GAAMD,EAAeC,GAAMd,EAAOkB,WAAYjB,GAIlEE,EAASgB,aAAc,eAAgB,IAAI,IAAwBN,EAAe,SAIlFO,QAAQC,KAAM,8GAIT,GAAKlB,EAASmB,WAEpB,KAAIC,EAAWpB,EAASoB,SAGxB,IAFIV,EAAgBV,EAASU,cAEnBC,EAAI,EAAGC,EAAIQ,EAASC,OAAQV,EAAIC,EAAGD,GAAK,EAEjDd,EAAOF,KAAMyB,EAAUT,IACvBb,EAAKH,KAAMyB,EAAUT,EAAI,IAEzBD,EAAeC,GAAc,IAANA,EAAY,EAAID,EAAeC,EAAI,GAC1DD,EAAeC,EAAI,GAAMD,EAAeC,GAAMd,EAAOkB,WAAYjB,GAMnE,OAAOf,S,iCCzET,kHAeA,SAASuC,EAAoBF,EAAUG,EAASC,EAAQC,GAEvD,IAAS3C,KAAMC,MAEfA,KAAKC,KAAO,qBAEZD,KAAKF,WAAa,CACjBuC,SAAUA,EACVG,QAASA,EACTC,OAAQA,EACRC,OAAQA,GAGT1C,KAAK2C,mBAAoB,IAAIC,EAA0BP,EAAUG,EAASC,EAAQC,IAClF1C,KAAK6C,gBASN,SAASD,EAA0BP,EAAUG,EAASC,EAAQC,GAE7D,IAAe3C,KAAMC,MAErBA,KAAKC,KAAO,2BAEZD,KAAKF,WAAa,CACjBuC,SAAUA,EACVG,QAASA,EACTC,OAAQA,EACRC,OAAQA,GAGTD,EAASA,GAAU,EAKnB,IAAIK,EAAe,GACfC,EAAW,GAwDf,SAASC,EAAeC,EAAGC,EAAGC,EAAGT,GAEhC,IAMId,EAAGwB,EANHC,EAAOC,KAAKC,IAAK,EAAGb,GAIpBc,EAAI,GAMR,IAAM5B,EAAI,EAAGA,GAAKyB,EAAMzB,IAAO,CAE9B4B,EAAG5B,GAAM,GAET,IAAI6B,EAAKR,EAAES,QAAQC,KAAMR,EAAGvB,EAAIyB,GAC5BO,EAAKV,EAAEQ,QAAQC,KAAMR,EAAGvB,EAAIyB,GAE5BQ,EAAOR,EAAOzB,EAElB,IAAMwB,EAAI,EAAGA,GAAKS,EAAMT,IAItBI,EAAG5B,GAAKwB,GAFE,IAANA,GAAWxB,IAAMyB,EAEPI,EAIAA,EAAGC,QAAQC,KAAMC,EAAIR,EAAIS,GAU1C,IAAMjC,EAAI,EAAGA,EAAIyB,EAAMzB,IAEtB,IAAMwB,EAAI,EAAGA,EAAI,GAAMC,EAAOzB,GAAM,EAAGwB,IAAO,CAE7C,IAAIU,EAAIR,KAAKS,MAAOX,EAAI,GAEnBA,EAAI,GAAM,GAEdY,EAAYR,EAAG5B,GAAKkC,EAAI,IACxBE,EAAYR,EAAG5B,EAAI,GAAKkC,IACxBE,EAAYR,EAAG5B,GAAKkC,MAIpBE,EAAYR,EAAG5B,GAAKkC,EAAI,IACxBE,EAAYR,EAAG5B,EAAI,GAAKkC,EAAI,IAC5BE,EAAYR,EAAG5B,EAAI,GAAKkC,MAmF5B,SAASE,EAAYC,GAEpBnB,EAAaoB,KAAMD,EAAOE,EAAGF,EAAOG,EAAGH,EAAOI,GAI/C,SAASC,EAAkB/C,EAAO0C,GAEjC,IAAIM,EAAiB,EAARhD,EAEb0C,EAAOE,EAAI9B,EAAUkC,EAAS,GAC9BN,EAAOG,EAAI/B,EAAUkC,EAAS,GAC9BN,EAAOI,EAAIhC,EAAUkC,EAAS,GAsC/B,SAASC,EAAWC,EAAIF,EAAQG,EAAQC,GAEhCA,EAAU,GAAkB,IAATF,EAAGN,IAE5BpB,EAAUwB,GAAWE,EAAGN,EAAI,GAIT,IAAbO,EAAOP,GAA4B,IAAbO,EAAOL,IAEnCtB,EAAUwB,GAAWI,EAAU,EAAIrB,KAAKsB,GAAK,IAQ/C,SAASD,EAASD,GAEjB,OAAOpB,KAAKuB,MAAOH,EAAOL,GAAKK,EAAOP,IAxOvC,SAAoBzB,GAQnB,IANA,IAAIO,EAAI,IAAI,IACRC,EAAI,IAAI,IACRC,EAAI,IAAI,IAIFvB,EAAI,EAAGA,EAAIY,EAAQF,OAAQV,GAAK,EAIzC0C,EAAkB9B,EAASZ,EAAI,GAAKqB,GACpCqB,EAAkB9B,EAASZ,EAAI,GAAKsB,GACpCoB,EAAkB9B,EAASZ,EAAI,GAAKuB,GAIpCH,EAAeC,EAAGC,EAAGC,EAAGT,GA9C1BoC,CATApC,EAASA,GAAU,GA8HnB,SAAsBD,GAMrB,IAJA,IAAIwB,EAAS,IAAI,IAIPrC,EAAI,EAAGA,EAAIkB,EAAaR,OAAQV,GAAK,EAE9CqC,EAAOE,EAAIrB,EAAclB,EAAI,GAC7BqC,EAAOG,EAAItB,EAAclB,EAAI,GAC7BqC,EAAOI,EAAIvB,EAAclB,EAAI,GAE7BqC,EAAOc,YAAYC,eAAgBvC,GAEnCK,EAAclB,EAAI,GAAMqC,EAAOE,EAC/BrB,EAAclB,EAAI,GAAMqC,EAAOG,EAC/BtB,EAAclB,EAAI,GAAMqC,EAAOI,EAjIjCY,CAAaxC,GAuIb,WAIC,IAFA,IAAIwB,EAAS,IAAI,IAEPrC,EAAI,EAAGA,EAAIkB,EAAaR,OAAQV,GAAK,EAAI,CAElDqC,EAAOE,EAAIrB,EAAclB,EAAI,GAC7BqC,EAAOG,EAAItB,EAAclB,EAAI,GAC7BqC,EAAOI,EAAIvB,EAAclB,EAAI,GAE7B,IAAIsD,EAAIP,EAASV,GAAW,EAAIX,KAAKsB,GAAK,GACtCpB,GAqHgBkB,EArHCT,EAuHfX,KAAKuB,OAASH,EAAON,EAAGd,KAAK6B,KAAQT,EAAOP,EAAIO,EAAOP,EAAQO,EAAOL,EAAIK,EAAOL,IAvHvDf,KAAKsB,GAAK,IAC1C7B,EAASmB,KAAMgB,EAAG,EAAI1B,GAoHxB,IAAsBkB,GA7DtB,WAYC,IAVA,IAAIzB,EAAI,IAAI,IACRC,EAAI,IAAI,IACRC,EAAI,IAAI,IAERiC,EAAW,IAAI,IAEfC,EAAM,IAAI,IACVC,EAAM,IAAI,IACVC,EAAM,IAAI,IAEJ3D,EAAI,EAAGwB,EAAI,EAAGxB,EAAIkB,EAAaR,OAAQV,GAAK,EAAGwB,GAAK,EAAI,CAEjEH,EAAEuC,IAAK1C,EAAclB,EAAI,GAAKkB,EAAclB,EAAI,GAAKkB,EAAclB,EAAI,IACvEsB,EAAEsC,IAAK1C,EAAclB,EAAI,GAAKkB,EAAclB,EAAI,GAAKkB,EAAclB,EAAI,IACvEuB,EAAEqC,IAAK1C,EAAclB,EAAI,GAAKkB,EAAclB,EAAI,GAAKkB,EAAclB,EAAI,IAEvEyD,EAAIG,IAAKzC,EAAUK,EAAI,GAAKL,EAAUK,EAAI,IAC1CkC,EAAIE,IAAKzC,EAAUK,EAAI,GAAKL,EAAUK,EAAI,IAC1CmC,EAAIC,IAAKzC,EAAUK,EAAI,GAAKL,EAAUK,EAAI,IAE1CgC,EAASxE,KAAMqC,GAAIwC,IAAKvC,GAAIuC,IAAKtC,GAAIuC,aAAc,GAEnD,IAAIC,EAAMhB,EAASS,GAEnBZ,EAAWa,EAAKjC,EAAI,EAAGH,EAAG0C,GAC1BnB,EAAWc,EAAKlC,EAAI,EAAGF,EAAGyC,GAC1BnB,EAAWe,EAAKnC,EAAI,EAAGD,EAAGwC,KA/E3BC,GAMD,WAIC,IAAM,IAAIhE,EAAI,EAAGA,EAAImB,EAAST,OAAQV,GAAK,EAAI,CAI9C,IAAIiE,EAAK9C,EAAUnB,EAAI,GACnBkE,EAAK/C,EAAUnB,EAAI,GACnBmE,EAAKhD,EAAUnB,EAAI,GAEnBoE,EAAM1C,KAAK0C,IAAKH,EAAIC,EAAIC,GACxBE,EAAM3C,KAAK2C,IAAKJ,EAAIC,EAAIC,GAIvBC,EAAM,IAAOC,EAAM,KAElBJ,EAAK,KAAM9C,EAAUnB,EAAI,IAAO,GAChCkE,EAAK,KAAM/C,EAAUnB,EAAI,IAAO,GAChCmE,EAAK,KAAMhD,EAAUnB,EAAI,IAAO,KAzBvCsE,GArJDC,GAIAnG,KAAKiC,aAAc,WAAY,IAAI,IAAwBa,EAAc,IACzE9C,KAAKiC,aAAc,SAAU,IAAI,IAAwBa,EAAasD,QAAS,IAC/EpG,KAAKiC,aAAc,KAAM,IAAI,IAAwBc,EAAU,IAE/C,IAAXL,EAEJ1C,KAAKqG,uBAILrG,KAAKsG,mBAlDP/D,EAAmBhC,UAAYC,OAAOC,OAAQ,IAASF,WACvDgC,EAAmBhC,UAAUG,YAAc6B,EA8S3CK,EAAyBrC,UAAYC,OAAOC,OAAQ,IAAeF,WACnEqC,EAAyBrC,UAAUG,YAAckC,G,iCCjVjD,sDAQA,SAAS2D,EAAOrG,EAAOsG,GAEtB,IAASzG,KAAMC,MAEfA,KAAKC,KAAO,QAEZD,KAAKE,MAAQ,IAAI,IAAOA,GACxBF,KAAKwG,eAA0BC,IAAdD,EAA0BA,EAAY,EAEvDxG,KAAK0G,mBAAgBD,EAItBF,EAAMhG,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ,IAASF,WAAa,CAErEG,YAAa6F,EAEbI,SAAS,EAET/F,KAAM,SAAWC,GAOhB,OALA,IAASN,UAAUK,KAAKb,KAAMC,KAAMa,GAEpCb,KAAKE,MAAMU,KAAMC,EAAOX,OACxBF,KAAKwG,UAAY3F,EAAO2F,UAEjBxG,MAIR4G,OAAQ,SAAWC,GAElB,IAAIC,EAAO,IAASvG,UAAUqG,OAAO7G,KAAMC,KAAM6G,GAcjD,OAZAC,EAAKC,OAAO7G,MAAQF,KAAKE,MAAM8G,SAC/BF,EAAKC,OAAOP,UAAYxG,KAAKwG,eAEHC,IAArBzG,KAAKiH,cAA4BH,EAAKC,OAAOE,YAAcjH,KAAKiH,YAAYD,eAE1DP,IAAlBzG,KAAKkH,WAAyBJ,EAAKC,OAAOG,SAAWlH,KAAKkH,eAC3CT,IAAfzG,KAAKmH,QAAsBL,EAAKC,OAAOI,MAAQnH,KAAKmH,YACrCV,IAAfzG,KAAKoH,QAAsBN,EAAKC,OAAOK,MAAQpH,KAAKoH,YAClCX,IAAlBzG,KAAKqH,WAAyBP,EAAKC,OAAOM,SAAWrH,KAAKqH,eAE1CZ,IAAhBzG,KAAKsH,SAAuBR,EAAKC,OAAOO,OAAStH,KAAKsH,OAAOV,UAE3DE,M,iCCtDT,0GAaIhG,EAAS,IAAI,IACbC,EAAO,IAAI,IACXwG,EAAiB,IAAI,IACrBC,EAAO,IAAI,IACXC,EAAU,IAAI,IAElB,SAASC,EAAMzG,EAAUC,EAAUyG,GAEpB,IAATA,GAEJzF,QAAQ0F,MAAO,+FAIhB,IAAS7H,KAAMC,MAEfA,KAAKC,KAAO,OAEZD,KAAKiB,cAAwBwF,IAAbxF,EAAyBA,EAAW,IAAI,IACxDjB,KAAKkB,cAAwBuF,IAAbvF,EAAyBA,EAAW,IAAI,IAIzDwG,EAAKnH,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ,IAASF,WAAa,CAEpEG,YAAagH,EAEbG,QAAQ,EAERxG,qBAAsB,WAErB,IAAIJ,EAAWjB,KAAKiB,SAEpB,GAAKA,EAASK,iBAIb,GAAwB,OAAnBL,EAASM,MAAiB,CAK9B,IAHA,IAAIC,EAAoBP,EAASQ,WAAWC,SACxCC,EAAgB,CAAE,GAEZC,EAAI,EAAGC,EAAIL,EAAkBM,MAAOF,EAAIC,EAAGD,IAEpDd,EAAOiB,oBAAqBP,EAAmBI,EAAI,GACnDb,EAAKgB,oBAAqBP,EAAmBI,GAE7CD,EAAeC,GAAMD,EAAeC,EAAI,GACxCD,EAAeC,IAAOd,EAAOkB,WAAYjB,GAI1CE,EAASgB,aAAc,eAAgB,IAAI,IAAwBN,EAAe,SAIlFO,QAAQC,KAAM,sGAIT,GAAKlB,EAASmB,WAAa,CAEjC,IAAIC,EAAWpB,EAASoB,UACpBV,EAAgBV,EAASU,eAEd,GAAM,EAErB,IAAUC,EAAI,EAAGC,EAAIQ,EAASC,OAAQV,EAAIC,EAAGD,IAE5CD,EAAeC,GAAMD,EAAeC,EAAI,GACxCD,EAAeC,IAAOS,EAAUT,EAAI,GAAII,WAAYK,EAAUT,IAMhE,OAAO5B,MAIR8H,QAAS,SAAWC,EAAWC,GAE9B,IAAI/G,EAAWjB,KAAKiB,SAChBgH,EAAcjI,KAAKiI,YACnBC,EAAYH,EAAUI,OAAOT,KAAKQ,UAUtC,GANiC,OAA5BjH,EAASmH,gBAA0BnH,EAASoH,wBAEjDZ,EAAQ7G,KAAMK,EAASmH,gBACvBX,EAAQa,aAAcL,GACtBR,EAAQhF,QAAUyF,GAEiC,IAA9CH,EAAUQ,IAAIC,iBAAkBf,GAArC,CAIAF,EAAekB,WAAYR,GAC3BT,EAAK5G,KAAMmH,EAAUQ,KAAMD,aAAcf,GAEzC,IAAImB,EAAiBR,IAAgBlI,KAAK2I,MAAMxE,EAAInE,KAAK2I,MAAMvE,EAAIpE,KAAK2I,MAAMtE,GAAM,GAChFuE,EAAmBF,EAAiBA,EAEpCG,EAAS,IAAI,IACbC,EAAO,IAAI,IACXC,EAAe,IAAI,IACnBC,EAAW,IAAI,IACfC,EAASjJ,MAAQA,KAAKoB,eAAmB,EAAI,EAEjD,GAAKH,EAASK,iBAAmB,CAEhC,IAAIC,EAAQN,EAASM,MAEjB2H,EADajI,EAASQ,WACCC,SAASyH,MAEpC,GAAe,OAAV5H,EAIJ,IAFA,IAAIiB,EAAUjB,EAAM4H,MAEVvH,EAAI,EAAGC,EAAIW,EAAQF,OAAS,EAAGV,EAAIC,EAAGD,GAAKqH,EAAO,CAE3D,IAAIhG,EAAIT,EAASZ,GACbsB,EAAIV,EAASZ,EAAI,GAOrB,GALAiH,EAAOO,UAAWF,EAAe,EAAJjG,GAC7B6F,EAAKM,UAAWF,EAAe,EAAJhG,KAEdsE,EAAK6B,oBAAqBR,EAAQC,EAAME,EAAUD,GAEjDH,GAEdI,EAASV,aAActI,KAAKiI,cAExBf,EAAWa,EAAUQ,IAAIe,OAAOtH,WAAYgH,IAEhCjB,EAAUwB,MAAQrC,EAAWa,EAAUyB,KAEvDxB,EAAW9D,KAAM,CAEhBgD,SAAUA,EAGVuC,MAAOV,EAAarF,QAAQ4E,aAActI,KAAKiI,aAC/C1G,MAAOK,EACP8H,KAAM,KACNC,UAAW,KACX5C,OAAQ/G,YAQV,IAAU4B,EAAI,EAAGC,EAAIqH,EAAU5G,OAAS,EAAI,EAAGV,EAAIC,EAAGD,GAAKqH,EAAO,CAOjE,GALAJ,EAAOO,UAAWF,EAAW,EAAItH,GACjCkH,EAAKM,UAAWF,EAAW,EAAItH,EAAI,KAEtB4F,EAAK6B,oBAAqBR,EAAQC,EAAME,EAAUD,GAEjDH,GAEdI,EAASV,aAActI,KAAKiI,cAExBf,EAAWa,EAAUQ,IAAIe,OAAOtH,WAAYgH,IAEhCjB,EAAUwB,MAAQrC,EAAWa,EAAUyB,KAEvDxB,EAAW9D,KAAM,CAEhBgD,SAAUA,EAGVuC,MAAOV,EAAarF,QAAQ4E,aAActI,KAAKiI,aAC/C1G,MAAOK,EACP8H,KAAM,KACNC,UAAW,KACX5C,OAAQ/G,aAQL,GAAKiB,EAASmB,WAEpB,KAAIC,EAAWpB,EAASoB,SACpBuH,EAAavH,EAASC,OAE1B,IAAUV,EAAI,EAAGA,EAAIgI,EAAa,EAAGhI,GAAKqH,EAAO,CAEhD,IAMI/B,EAJJ,KAFaM,EAAK6B,oBAAqBhH,EAAUT,GAAKS,EAAUT,EAAI,GAAKoH,EAAUD,GAErEH,GAEdI,EAASV,aAActI,KAAKiI,cAExBf,EAAWa,EAAUQ,IAAIe,OAAOtH,WAAYgH,IAEhCjB,EAAUwB,MAAQrC,EAAWa,EAAUyB,KAEvDxB,EAAW9D,KAAM,CAEhBgD,SAAUA,EAGVuC,MAAOV,EAAarF,QAAQ4E,aAActI,KAAKiI,aAC/C1G,MAAOK,EACP8H,KAAM,KACNC,UAAW,KACX5C,OAAQ/G,WAUZ0D,MAAO,WAEN,OAAO,IAAI1D,KAAKU,YAAaV,KAAKiB,SAAUjB,KAAKkB,UAAWN,KAAMZ,U,iCC9OpE,0GAaA,SAAS6J,EAAgBpH,EAAQqH,EAAeC,EAAgBC,EAAUC,EAAWC,EAAYC,GAEhG,IAASpK,KAAMC,MAEfA,KAAKC,KAAO,iBAEZD,KAAKF,WAAa,CACjB2C,OAAQA,EACRqH,cAAeA,EACfC,eAAgBA,EAChBC,SAAUA,EACVC,UAAWA,EACXC,WAAYA,EACZC,YAAaA,GAGdnK,KAAK2C,mBAAoB,IAAIyH,EAAsB3H,EAAQqH,EAAeC,EAAgBC,EAAUC,EAAWC,EAAYC,IAC3HnK,KAAK6C,gBASN,SAASuH,EAAsB3H,EAAQqH,EAAeC,EAAgBC,EAAUC,EAAWC,EAAYC,GAEtG,IAAepK,KAAMC,MAErBA,KAAKC,KAAO,uBAEZD,KAAKF,WAAa,CACjB2C,OAAQA,EACRqH,cAAeA,EACfC,eAAgBA,EAChBC,SAAUA,EACVC,UAAWA,EACXC,WAAYA,EACZC,YAAaA,GAGd1H,EAASA,GAAU,EAEnBqH,EAAgBxG,KAAK0C,IAAK,EAAG1C,KAAKS,MAAO+F,IAAmB,GAC5DC,EAAiBzG,KAAK0C,IAAK,EAAG1C,KAAKS,MAAOgG,IAAoB,GAE9DC,OAAwBvD,IAAbuD,EAAyBA,EAAW,EAC/CC,OAA0BxD,IAAdwD,EAA0BA,EAAsB,EAAV3G,KAAKsB,GAEvDsF,OAA4BzD,IAAfyD,EAA2BA,EAAa,EACrDC,OAA8B1D,IAAhB0D,EAA4BA,EAAc7G,KAAKsB,GAE7D,IAEIyF,EAAIC,EAFJC,EAAWjH,KAAK2C,IAAKiE,EAAaC,EAAa7G,KAAKsB,IAIpDrD,EAAQ,EACRiJ,EAAO,GAEPvG,EAAS,IAAI,IACbwG,EAAS,IAAI,IAIbjI,EAAU,GACVH,EAAW,GACXqI,EAAU,GACVC,EAAM,GAIV,IAAML,EAAK,EAAGA,GAAMP,EAAgBO,IAAQ,CAE3C,IAAIM,EAAc,GAEdpH,EAAI8G,EAAKP,EAITc,EAAU,EAYd,IAVW,GAANP,GAAyB,GAAdJ,EAEfW,EAAU,GAAMf,EAELQ,GAAMP,GAAkBQ,GAAYjH,KAAKsB,KAEpDiG,GAAY,GAAMf,GAIbO,EAAK,EAAGA,GAAMP,EAAeO,IAAQ,CAE1C,IAAInF,EAAImF,EAAKP,EAIb7F,EAAOE,GAAM1B,EAASa,KAAKwH,IAAKd,EAAW9E,EAAI+E,GAAc3G,KAAKyH,IAAKb,EAAa1G,EAAI2G,GACxFlG,EAAOG,EAAI3B,EAASa,KAAKwH,IAAKZ,EAAa1G,EAAI2G,GAC/ClG,EAAOI,EAAI5B,EAASa,KAAKyH,IAAKf,EAAW9E,EAAI+E,GAAc3G,KAAKyH,IAAKb,EAAa1G,EAAI2G,GAEtF9H,EAAS6B,KAAMD,EAAOE,EAAGF,EAAOG,EAAGH,EAAOI,GAI1CoG,EAAO7J,KAAMqD,GAASc,YACtB2F,EAAQxG,KAAMuG,EAAOtG,EAAGsG,EAAOrG,EAAGqG,EAAOpG,GAIzCsG,EAAIzG,KAAMgB,EAAI2F,EAAS,EAAIrH,GAE3BoH,EAAY1G,KAAM3C,KAInBiJ,EAAKtG,KAAM0G,GAMZ,IAAMN,EAAK,EAAGA,EAAKP,EAAgBO,IAElC,IAAMD,EAAK,EAAGA,EAAKP,EAAeO,IAAQ,CAEzC,IAAIpH,EAAIuH,EAAMF,GAAMD,EAAK,GACrBnH,EAAIsH,EAAMF,GAAMD,GAChBlH,EAAIqH,EAAMF,EAAK,GAAKD,GACpBW,EAAIR,EAAMF,EAAK,GAAKD,EAAK,IAEjB,IAAPC,GAAYJ,EAAa,IAAI1H,EAAQ0B,KAAMjB,EAAGC,EAAG8H,IACjDV,IAAOP,EAAiB,GAAKQ,EAAWjH,KAAKsB,KAAKpC,EAAQ0B,KAAMhB,EAAGC,EAAG6H,GAQ7EhL,KAAKiL,SAAUzI,GACfxC,KAAKiC,aAAc,WAAY,IAAI,IAAwBI,EAAU,IACrErC,KAAKiC,aAAc,SAAU,IAAI,IAAwByI,EAAS,IAClE1K,KAAKiC,aAAc,KAAM,IAAI,IAAwB0I,EAAK,IA3H3Dd,EAAetJ,UAAYC,OAAOC,OAAQ,IAASF,WACnDsJ,EAAetJ,UAAUG,YAAcmJ,EA8HvCO,EAAqB7J,UAAYC,OAAOC,OAAQ,IAAeF,WAC/D6J,EAAqB7J,UAAUG,YAAc0J,G,iCClK7C,wDASA,SAASc,EAAW5B,EAAQ6B,EAAW5B,EAAMC,GAE5CxJ,KAAKuI,IAAM,IAAI,IAAKe,EAAQ6B,GAG5BnL,KAAKuJ,KAAOA,GAAQ,EACpBvJ,KAAKwJ,IAAMA,GAAO4B,IAClBpL,KAAKqL,OAAS,KACdrL,KAAKsL,OAAS,IAAI,IAElBtL,KAAKmI,OAAS,CACboD,KAAM,GACN7D,KAAM,CAAEQ,UAAW,GACnBsD,IAAK,GACLC,OAAQ,CAAEvD,UAAW,GACrBwD,OAAQ,IAGTlL,OAAOmL,iBAAkB3L,KAAKmI,OAAQ,CACrCyD,WAAY,CACXC,IAAK,WAGJ,OADA3J,QAAQC,KAAM,yEACPnC,KAAKyL,WAQhB,SAASK,EAAS7I,EAAGC,GAEpB,OAAOD,EAAEiE,SAAWhE,EAAEgE,SAIvB,SAAS6E,EAAiBhF,EAAQgB,EAAWC,EAAYgE,GAQxD,GANKjF,EAAOuE,OAAOW,KAAMlE,EAAUuD,SAElCvE,EAAOe,QAASC,EAAWC,IAIT,IAAdgE,EAIJ,IAFA,IAAIE,EAAWnF,EAAOmF,SAEZtK,EAAI,EAAGC,EAAIqK,EAAS5J,OAAQV,EAAIC,EAAGD,IAE5CmK,EAAiBG,EAAUtK,GAAKmG,EAAWC,GAAY,GAQ1DxH,OAAOW,OAAQ+J,EAAU3K,UAAW,CAEnCiF,IAAK,SAAW8D,EAAQ6B,GAIvBnL,KAAKuI,IAAI/C,IAAK8D,EAAQ6B,IAIvBgB,cAAe,SAAWC,EAAQf,GAE1BA,GAAUA,EAAOgB,qBAEvBrM,KAAKuI,IAAIe,OAAOgD,sBAAuBjB,EAAOpD,aAC9CjI,KAAKuI,IAAI4C,UAAU3F,IAAK4G,EAAOjI,EAAGiI,EAAOhI,EAAG,IAAMmI,UAAWlB,GAASmB,IAAKxM,KAAKuI,IAAIe,QAASvE,YAC7F/E,KAAKqL,OAASA,GAEDA,GAAUA,EAAOoB,sBAE9BzM,KAAKuI,IAAIe,OAAO9D,IAAK4G,EAAOjI,EAAGiI,EAAOhI,GAAKiH,EAAO9B,KAAO8B,EAAO7B,MAAU6B,EAAO9B,KAAO8B,EAAO7B,MAAQ+C,UAAWlB,GAClHrL,KAAKuI,IAAI4C,UAAU3F,IAAK,EAAG,GAAK,GAAIkH,mBAAoBrB,EAAOpD,aAC/DjI,KAAKqL,OAASA,GAIdnJ,QAAQ0F,MAAO,8CAMjBmE,gBAAiB,SAAWhF,EAAQiF,EAAWW,GAE9C,IAAI3E,EAAa2E,GAAkB,GAMnC,OAJAZ,EAAiBhF,EAAQ/G,KAAMgI,EAAYgE,GAE3ChE,EAAW4E,KAAMd,GAEV9D,GAIR6E,iBAAkB,SAAWC,EAASd,EAAWW,GAEhD,IAAI3E,EAAa2E,GAAkB,GAEnC,IAAkC,IAA7BI,MAAMC,QAASF,GAGnB,OADA5K,QAAQC,KAAM,8DACP6F,EAIR,IAAM,IAAIpG,EAAI,EAAGC,EAAIiL,EAAQxK,OAAQV,EAAIC,EAAGD,IAE3CmK,EAAiBe,EAASlL,GAAK5B,KAAMgI,EAAYgE,GAMlD,OAFAhE,EAAW4E,KAAMd,GAEV9D,M,iCCnIT,0FAUA,SAASiF,EAAoBxK,EAAQC,GAEpC,IAAS3C,KAAMC,MAEfA,KAAKC,KAAO,qBAEZD,KAAKF,WAAa,CACjB2C,OAAQA,EACRC,OAAQA,GAGT1C,KAAK2C,mBAAoB,IAAIuK,EAA0BzK,EAAQC,IAC/D1C,KAAK6C,gBASN,SAASqK,EAA0BzK,EAAQC,GAa1C,IAAyB3C,KAAMC,KAXhB,CACd,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,GAAK,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,GAAK,GAGhB,CACb,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,GAGwCyC,EAAQC,GAEhE1C,KAAKC,KAAO,2BAEZD,KAAKF,WAAa,CACjB2C,OAAQA,EACRC,OAAQA,GAxBVuK,EAAmB1M,UAAYC,OAAOC,OAAQ,IAASF,WACvD0M,EAAmB1M,UAAUG,YAAcuM,EA4B3CC,EAAyB3M,UAAYC,OAAOC,OAAQ,IAAyBF,WAC7E2M,EAAyB3M,UAAUG,YAAcwM,G,oBCxDjD,IAAIC,EAAU,EAAQ,KAClBC,EAAW,EAAQ,IAsBvBC,EAAOC,QANP,SAAanE,GACX,OAAQA,GAASA,EAAM7G,OACnB6K,EAAQhE,EAAOiE,GACf,I,iCCpBN,8EAUA,SAASG,EAAalC,GAErBrL,KAAKqL,OAASA,EAEdrL,KAAKwN,KAAO,EACZxN,KAAKyC,OAAS,EAEdzC,KAAKyN,QAAU,IAAI,IAAS,IAAK,KAEjCzN,KAAK0N,IAAM,KACX1N,KAAK2N,QAAU,KACf3N,KAAK4N,OAAS,IAAI,IAElB5N,KAAK6N,SAAW,IAAI,IACpB7N,KAAK8N,cAAgB,IAAI,IAAS,EAAG,GAErC9N,KAAK+N,eAAiB,EAEtB/N,KAAKgO,WAAa,CAEjB,IAAI,IAAS,EAAG,EAAG,EAAG,IAMxBxN,OAAOW,OAAQoM,EAAYhN,UAAW,CAErC0N,kBAAmB,IAAI,IAEvBC,oBAAqB,IAAI,IAEzBC,YAAa,IAAI,IAEjBC,iBAAkB,WAEjB,OAAOpO,KAAK+N,gBAIbM,WAAY,WAEX,OAAOrO,KAAK6N,UAIbS,eAAgB,SAAWC,GAE1B,IAAIC,EAAexO,KAAKqL,OACvBoD,EAAezO,KAAK4N,OACpBc,EAAmB1O,KAAKiO,kBACxBU,EAAa3O,KAAKmO,YAClBS,EAAqB5O,KAAKkO,oBAE3BU,EAAmBtC,sBAAuBiC,EAAMtG,aAChDuG,EAAa9M,SAASd,KAAMgO,GAE5BD,EAAWrC,sBAAuBiC,EAAMM,OAAO5G,aAC/CuG,EAAaM,OAAQH,GACrBH,EAAaO,oBAEbL,EAAiBM,iBAAkBR,EAAaS,iBAAkBT,EAAaU,oBAC/ElP,KAAK6N,SAASsB,wBAAyBT,GAEvCD,EAAajJ,IACZ,GAAK,EAAK,EAAK,GACf,EAAK,GAAK,EAAK,GACf,EAAK,EAAK,GAAK,GACf,EAAK,EAAK,EAAK,GAGhBiJ,EAAaW,SAAUZ,EAAaS,kBACpCR,EAAaW,SAAUZ,EAAaU,qBAIrCG,YAAa,SAAWC,GAEvB,OAAOtP,KAAKgO,WAAYsB,IAIzBC,gBAAiB,WAEhB,OAAOvP,KAAK8N,eAIblN,KAAM,SAAWC,GAShB,OAPAb,KAAKqL,OAASxK,EAAOwK,OAAO3H,QAE5B1D,KAAKwN,KAAO3M,EAAO2M,KACnBxN,KAAKyC,OAAS5B,EAAO4B,OAErBzC,KAAKyN,QAAQ7M,KAAMC,EAAO4M,SAEnBzN,MAIR0D,MAAO,WAEN,OAAO,IAAI1D,KAAKU,aAAcE,KAAMZ,OAIrC4G,OAAQ,WAEP,IAAIG,EAAS,GASb,OAPmB,IAAd/G,KAAKwN,OAAazG,EAAOyG,KAAOxN,KAAKwN,MACrB,IAAhBxN,KAAKyC,SAAesE,EAAOtE,OAASzC,KAAKyC,QACtB,MAAnBzC,KAAKyN,QAAQtJ,GAAgC,MAAnBnE,KAAKyN,QAAQrJ,IAAY2C,EAAO0G,QAAUzN,KAAKyN,QAAQ+B,WAEtFzI,EAAOsE,OAASrL,KAAKqL,OAAOzE,QAAQ,GAAQG,cACrCA,EAAOsE,OAAOuC,OAEd7G,M,kGCzHT,SAAS0I,IAERlC,EAAA,EAAYxN,KAAMC,KAAM,IAAI0P,EAAA,GAAsB,EAAG,EAAG,GAAK,EAAG,GAAK,MAItED,EAAuBlP,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ8M,EAAA,EAAYhN,WAAa,CAEzFG,YAAa+O,EAEbE,0BAA0B,EAE1BrB,eAAgB,SAAWC,GAE1BhB,EAAA,EAAYhN,UAAU+N,eAAevO,KAAMC,KAAMuO,M,YCZnD,SAASqB,EAAkB1P,EAAOsG,GAEjCD,EAAA,EAAMxG,KAAMC,KAAME,EAAOsG,GAEzBxG,KAAKC,KAAO,mBAEZD,KAAK0B,SAASd,KAAMiP,EAAA,EAASC,WAC7B9P,KAAK+P,eAEL/P,KAAK6O,OAAS,IAAIgB,EAAA,EAElB7P,KAAKsH,OAAS,IAAImI,EAInBG,EAAiBrP,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ8F,EAAA,EAAMhG,WAAa,CAE7EG,YAAakP,EAEbI,oBAAoB,EAEpBpP,KAAM,SAAWC,GAQhB,OANA0F,EAAA,EAAMhG,UAAUK,KAAKb,KAAMC,KAAMa,GAEjCb,KAAK6O,OAAShO,EAAOgO,OAAOnL,QAE5B1D,KAAKsH,OAASzG,EAAOyG,OAAO5D,QAErB1D,S,yHChCT,SAASiQ,IAER1C,EAAA,EAAYxN,KAAMC,KAAM,IAAIkQ,EAAA,EAAmB,GAAI,EAAG,GAAK,MAE3DlQ,KAAK8N,cAAgB,IAAIqC,EAAA,EAAS,EAAG,GAErCnQ,KAAK+N,eAAiB,EAEtB/N,KAAKgO,WAAa,CAejB,IAAIoC,EAAA,EAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,EAAA,EAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,EAAA,EAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,EAAA,EAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,EAAA,EAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,EAAA,EAAS,EAAG,EAAG,EAAG,IAGvBpQ,KAAKqQ,gBAAkB,CACtB,IAAIC,EAAA,EAAS,EAAG,EAAG,GAAK,IAAIA,EAAA,GAAW,EAAG,EAAG,GAAK,IAAIA,EAAA,EAAS,EAAG,EAAG,GACrE,IAAIA,EAAA,EAAS,EAAG,GAAK,GAAK,IAAIA,EAAA,EAAS,EAAG,EAAG,GAAK,IAAIA,EAAA,EAAS,GAAK,EAAG,IAGxEtQ,KAAKuQ,SAAW,CACf,IAAID,EAAA,EAAS,EAAG,EAAG,GAAK,IAAIA,EAAA,EAAS,EAAG,EAAG,GAAK,IAAIA,EAAA,EAAS,EAAG,EAAG,GACnE,IAAIA,EAAA,EAAS,EAAG,EAAG,GAAK,IAAIA,EAAA,EAAS,EAAG,EAAG,GAAK,IAAIA,EAAA,EAAS,EAAG,GAAK,ICzCvE,SAASE,EAAYtQ,EAAOsG,EAAWU,EAAUE,GAEhDb,EAAA,EAAMxG,KAAMC,KAAME,EAAOsG,GAEzBxG,KAAKC,KAAO,aAEZO,OAAOiQ,eAAgBzQ,KAAM,QAAS,CACrC6L,IAAK,WAIJ,OAAwB,EAAjB7L,KAAKwG,UAAgBlD,KAAKsB,IAGlCY,IAAK,SAAWkL,GAIf1Q,KAAKwG,UAAYkK,GAAU,EAAIpN,KAAKsB,OAKtC5E,KAAKkH,cAA0BT,IAAbS,EAA2BA,EAAW,EACxDlH,KAAKoH,WAAoBX,IAAVW,EAAwBA,EAAQ,EAE/CpH,KAAKsH,OAAS,IAAI2I,EDoBnBA,EAAiB1P,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ8M,EAAA,EAAYhN,WAAa,CAEnFG,YAAauP,EAEbU,oBAAoB,EAEpBrC,eAAgB,SAAWC,EAAOe,QAEV7I,IAAlB6I,IAA8BA,EAAgB,GAEnD,IAAIjE,EAASrL,KAAKqL,OACjBoD,EAAezO,KAAK4N,OACpBgB,EAAqB5O,KAAKkO,oBAC1BS,EAAa3O,KAAKmO,YAClBO,EAAmB1O,KAAKiO,kBAEzBW,EAAmBtC,sBAAuBiC,EAAMtG,aAChDoD,EAAO3J,SAASd,KAAMgO,GAEtBD,EAAW/N,KAAMyK,EAAO3J,UACxBiN,EAAWlJ,IAAKzF,KAAKqQ,gBAAiBf,IACtCjE,EAAOuF,GAAGhQ,KAAMZ,KAAKuQ,SAAUjB,IAC/BjE,EAAOyD,OAAQH,GACftD,EAAO0D,oBAEPN,EAAaoC,iBAAmBjC,EAAmBzK,GAAKyK,EAAmBxK,GAAKwK,EAAmBvK,GAEnGqK,EAAiBM,iBAAkB3D,EAAO4D,iBAAkB5D,EAAO6D,oBACnElP,KAAK6N,SAASsB,wBAAyBT,MC5CzC8B,EAAWjQ,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ8F,EAAA,EAAMhG,WAAa,CAEvEG,YAAa8P,EAEbM,cAAc,EAEdlQ,KAAM,SAAWC,GAShB,OAPA0F,EAAA,EAAMhG,UAAUK,KAAKb,KAAMC,KAAMa,GAEjCb,KAAKkH,SAAWrG,EAAOqG,SACvBlH,KAAKoH,MAAQvG,EAAOuG,MAEpBpH,KAAKsH,OAASzG,EAAOyG,OAAO5D,QAErB1D,S,0GC7CT,SAAS+Q,IAERxD,EAAA,EAAYxN,KAAMC,KAAM,IAAIkQ,EAAA,EAAmB,GAAI,EAAG,GAAK,MAI5Da,EAAgBxQ,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ8M,EAAA,EAAYhN,WAAa,CAElFG,YAAaqQ,EAEbC,mBAAmB,EAEnB1C,eAAgB,SAAWC,GAE1B,IAAIlD,EAASrL,KAAKqL,OAEd4F,EAA0B,EAApBC,EAAA,EAAUC,QAAc5C,EAAMpH,MACpCiK,EAASpR,KAAKyN,QAAQ4D,MAAQrR,KAAKyN,QAAQ6D,OAC3C9H,EAAM+E,EAAMrH,UAAYmE,EAAO7B,IAE9ByH,IAAQ5F,EAAO4F,KAAOG,IAAW/F,EAAO+F,QAAU5H,IAAQ6B,EAAO7B,MAErE6B,EAAO4F,IAAMA,EACb5F,EAAO+F,OAASA,EAChB/F,EAAO7B,IAAMA,EACb6B,EAAOkG,0BAIRhE,EAAA,EAAYhN,UAAU+N,eAAevO,KAAMC,KAAMuO,M,YC7BnD,SAASiD,EAAWtR,EAAOsG,EAAWU,EAAUC,EAAOE,EAAUD,GAEhEb,EAAA,EAAMxG,KAAMC,KAAME,EAAOsG,GAEzBxG,KAAKC,KAAO,YAEZD,KAAK0B,SAASd,KAAMiP,EAAA,EAASC,WAC7B9P,KAAK+P,eAEL/P,KAAK6O,OAAS,IAAIgB,EAAA,EAElBrP,OAAOiQ,eAAgBzQ,KAAM,QAAS,CACrC6L,IAAK,WAIJ,OAAO7L,KAAKwG,UAAYlD,KAAKsB,IAG9BY,IAAK,SAAWkL,GAIf1Q,KAAKwG,UAAYkK,EAAQpN,KAAKsB,MAKhC5E,KAAKkH,cAA0BT,IAAbS,EAA2BA,EAAW,EACxDlH,KAAKmH,WAAoBV,IAAVU,EAAwBA,EAAQ7D,KAAKsB,GAAK,EACzD5E,KAAKqH,cAA0BZ,IAAbY,EAA2BA,EAAW,EACxDrH,KAAKoH,WAAoBX,IAAVW,EAAwBA,EAAQ,EAE/CpH,KAAKsH,OAAS,IAAIyJ,EAInBS,EAAUjR,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ8F,EAAA,EAAMhG,WAAa,CAEtEG,YAAa8Q,EAEbC,aAAa,EAEb7Q,KAAM,SAAWC,GAahB,OAXA0F,EAAA,EAAMhG,UAAUK,KAAKb,KAAMC,KAAMa,GAEjCb,KAAKkH,SAAWrG,EAAOqG,SACvBlH,KAAKmH,MAAQtG,EAAOsG,MACpBnH,KAAKqH,SAAWxG,EAAOwG,SACvBrH,KAAKoH,MAAQvG,EAAOuG,MAEpBpH,KAAK6O,OAAShO,EAAOgO,OAAOnL,QAE5B1D,KAAKsH,OAASzG,EAAOyG,OAAO5D,QAErB1D,S,iCChET,+CAMA,SAAS0R,EAAcxR,EAAOsG,GAE7B,IAAMzG,KAAMC,KAAME,EAAOsG,GAEzBxG,KAAKC,KAAO,eAEZD,KAAK2R,gBAAalL,EAInBiL,EAAanR,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ,IAAMF,WAAa,CAEzEG,YAAagR,EAEbE,gBAAgB,K,iCCpBjB,+CAMA,SAASC,EAAe3R,EAAOsG,EAAW6K,EAAOC,GAEhD,IAAMvR,KAAMC,KAAME,EAAOsG,GAEzBxG,KAAKC,KAAO,gBAEZD,KAAKqR,WAAoB5K,IAAV4K,EAAwBA,EAAQ,GAC/CrR,KAAKsR,YAAsB7K,IAAX6K,EAAyBA,EAAS,GAInDO,EAActR,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ,IAAMF,WAAa,CAE1EG,YAAamR,EAEbC,iBAAiB,EAEjBlR,KAAM,SAAWC,GAOhB,OALA,IAAMN,UAAUK,KAAKb,KAAMC,KAAMa,GAEjCb,KAAKqR,MAAQxQ,EAAOwQ,MACpBrR,KAAKsR,OAASzQ,EAAOyQ,OAEdtR,MAIR4G,OAAQ,SAAWC,GAElB,IAAIC,EAAO,IAAMvG,UAAUqG,OAAO7G,KAAMC,KAAM6G,GAK9C,OAHAC,EAAKC,OAAOsK,MAAQrR,KAAKqR,MACzBvK,EAAKC,OAAOuK,OAAStR,KAAKsR,OAEnBxK,M,iCCzCT,+DAQA,SAASiL,EAAiBC,EAAU/K,EAAaT,GAEhD,IAAMzG,KAAMC,KAAMgS,EAAUxL,GAE5BxG,KAAKC,KAAO,kBAEZD,KAAK2R,gBAAalL,EAElBzG,KAAK0B,SAASd,KAAM,IAASkP,WAC7B9P,KAAK+P,eAEL/P,KAAKiH,YAAc,IAAI,IAAOA,GAI/B8K,EAAgBxR,UAAYC,OAAOW,OAAQX,OAAOC,OAAQ,IAAMF,WAAa,CAE5EG,YAAaqR,EAEbE,mBAAmB,EAEnBrR,KAAM,SAAWC,GAMhB,OAJA,IAAMN,UAAUK,KAAKb,KAAMC,KAAMa,GAEjCb,KAAKiH,YAAYrG,KAAMC,EAAOoG,aAEvBjH,S,iCCnCT,8CAOA,SAASkS,EAAShS,EAAOiS,GAExBnS,KAAKoS,KAAO,GAEZpS,KAAKE,MAAQ,IAAI,IAAOA,GACxBF,KAAKmS,aAAwB1L,IAAZ0L,EAA0BA,EAAU,MAItD3R,OAAOW,OAAQ+Q,EAAQ3R,UAAW,CAEjC8R,WAAW,EAEX3O,MAAO,WAEN,OAAO,IAAIwO,EAASlS,KAAKE,MAAOF,KAAKmS,UAItCvL,OAAQ,WAEP,MAAO,CACN3G,KAAM,UACNC,MAAOF,KAAKE,MAAM8G,SAClBmL,QAASnS,KAAKmS,a,iCC/BjB,8CAOA,SAASG,EAAKpS,EAAOqJ,EAAMC,GAE1BxJ,KAAKoS,KAAO,GAEZpS,KAAKE,MAAQ,IAAI,IAAOA,GAExBF,KAAKuJ,UAAkB9C,IAAT8C,EAAuBA,EAAO,EAC5CvJ,KAAKwJ,SAAgB/C,IAAR+C,EAAsBA,EAAM,IAI1ChJ,OAAOW,OAAQmR,EAAI/R,UAAW,CAE7BgS,OAAO,EAEP7O,MAAO,WAEN,OAAO,IAAI4O,EAAKtS,KAAKE,MAAOF,KAAKuJ,KAAMvJ,KAAKwJ,MAI7C5C,OAAQ,WAEP,MAAO,CACN3G,KAAM,MACNC,MAAOF,KAAKE,MAAM8G,SAClBuC,KAAMvJ,KAAKuJ,KACXC,IAAKxJ,KAAKwJ,S,kBCXb6D,EAAOC,QAdP,SAAiBnE,EAAOqJ,GAKtB,IAJA,IAAIC,EACAlR,GAAS,EACTe,EAAS6G,EAAM7G,SAEVf,EAAQe,GAAQ,CACvB,IAAIoQ,EAAUF,EAASrJ,EAAM5H,SACbkF,IAAZiM,IACFD,OAAoBhM,IAAXgM,EAAuBC,EAAWD,EAASC,GAGxD,OAAOD","file":"vendors~Obj~Sop.bundle.js","sourcesContent":["import { Material } from './Material.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n\nexport { LineBasicMaterial };\n","import { Line } from './Line.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _start = new Vector3();\nvar _end = new Vector3();\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\tvar lineDistances = [];\n\n\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t_start.copy( vertices[ i ] );\n\t\t\t\t_end.copy( vertices[ i + 1 ] );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { LineSegments };\n","/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tapplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction applyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\nexport { PolyhedronGeometry, PolyhedronBufferGeometry };\n","import { Object3D } from '../core/Object3D.js';\nimport { Color } from '../math/Color.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n\nexport { Light };\n","import { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _start = new Vector3();\nvar _end = new Vector3();\nvar _inverseMatrix = new Matrix4();\nvar _ray = new Ray();\nvar _sphere = new Sphere();\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial();\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar geometry = this.geometry;\n\t\tvar matrixWorld = this.matrixWorld;\n\t\tvar threshold = raycaster.params.Line.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\tvar vStart = new Vector3();\n\t\tvar vEnd = new Vector3();\n\t\tvar interSegment = new Vector3();\n\t\tvar interRay = new Vector3();\n\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\tvar distSq = _ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\tvar distSq = _ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar nbVertices = vertices.length;\n\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\tvar distSq = _ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n\nexport { Line };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = 0;\n\n\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t}\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\nexport { SphereGeometry, SphereBufferGeometry };\n","import { Ray } from '../math/Ray.js';\nimport { Layers } from './Layers.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\tthis.camera = null;\n\tthis.layers = new Layers();\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: { threshold: 1 },\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n\nexport { Raycaster };\n","/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { Geometry } from '../core/Geometry.js';\nimport { PolyhedronBufferGeometry } from './PolyhedronGeometry.js';\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\nexport { OctahedronGeometry, OctahedronBufferGeometry };\n","var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.mapPass = null;\n\tthis.matrix = new Matrix4();\n\n\tthis._frustum = new Frustum();\n\tthis._frameExtents = new Vector2( 1, 1 );\n\n\tthis._viewportCount = 1;\n\n\tthis._viewports = [\n\n\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t];\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\t_projScreenMatrix: new Matrix4(),\n\n\t_lightPositionWorld: new Vector3(),\n\n\t_lookTarget: new Vector3(),\n\n\tgetViewportCount: function () {\n\n\t\treturn this._viewportCount;\n\n\t},\n\n\tgetFrustum: function () {\n\n\t\treturn this._frustum;\n\n\t},\n\n\tupdateMatrices: function ( light ) {\n\n\t\tvar shadowCamera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t},\n\n\tgetViewport: function ( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t},\n\n\tgetFrameExtents: function () {\n\n\t\treturn this._frameExtents;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n\nexport { LightShadow };\n","import { LightShadow } from './LightShadow.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow() {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow,\n\n\tisDirectionalLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n\nexport { DirectionalLightShadow };\n","import { Light } from './Light.js';\nimport { DirectionalLightShadow } from './DirectionalLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { DirectionalLight };\n","import { LightShadow } from './LightShadow.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\n\nfunction PointLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\tthis._frameExtents = new Vector2( 4, 2 );\n\n\tthis._viewportCount = 6;\n\n\tthis._viewports = [\n\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t// following orientation:\n\t\t//\n\t\t//  xzXZ\n\t\t//   y Y\n\t\t//\n\t\t// X - Positive x direction\n\t\t// x - Negative x direction\n\t\t// Y - Positive y direction\n\t\t// y - Negative y direction\n\t\t// Z - Positive z direction\n\t\t// z - Negative z direction\n\n\t\t// positive X\n\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t// negative X\n\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t// positive Z\n\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t// negative Z\n\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t// positive Y\n\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t// negative Y\n\t\tnew Vector4( 1, 0, 1, 1 )\n\t];\n\n\tthis._cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tthis._cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n}\n\nPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: PointLightShadow,\n\n\tisPointLightShadow: true,\n\n\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\tif ( viewportIndex === undefined ) viewportIndex = 0;\n\n\t\tvar camera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.copy( camera.position );\n\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( projScreenMatrix );\n\n\t}\n\n} );\n\n\nexport { PointLightShadow };\n","import { Light } from './Light.js';\nimport { PointLightShadow } from './PointLightShadow.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new PointLightShadow();\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { PointLight };\n","import { LightShadow } from './LightShadow.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = MathUtils.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n\nexport { SpotLightShadow };\n","import { Light } from './Light.js';\nimport { SpotLightShadow } from './SpotLightShadow.js';\nimport { Object3D } from '../core/Object3D.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { SpotLight };\n","import { Light } from './Light.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n\nexport { AmbientLight };\n","import { Light } from './Light.js';\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nexport { RectAreaLight };\n","import { Light } from './Light.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from '../core/Object3D.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { HemisphereLight };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport { Color } from '../math/Color.js';\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\nexport { FogExp2 };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport { Color } from '../math/Color.js';\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\nexport { Fog };\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n"],"sourceRoot":""}