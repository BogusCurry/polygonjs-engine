{"version":3,"sources":["webpack://POLY/./node_modules/three/src/loaders/Loader.js","webpack://POLY/./node_modules/three/src/textures/VideoTexture.js","webpack://POLY/./node_modules/three/src/loaders/Cache.js","webpack://POLY/./node_modules/lodash/_assignMergeValue.js","webpack://POLY/./node_modules/lodash/_safeGet.js","webpack://POLY/./node_modules/three/src/loaders/ImageLoader.js","webpack://POLY/./node_modules/three/src/loaders/LoadingManager.js","webpack://POLY/./node_modules/three/src/loaders/TextureLoader.js","webpack://POLY/./node_modules/lodash/intersection.js","webpack://POLY/./node_modules/lodash/merge.js","webpack://POLY/./node_modules/lodash/_baseMerge.js","webpack://POLY/./node_modules/lodash/_baseMergeDeep.js","webpack://POLY/./node_modules/lodash/isPlainObject.js","webpack://POLY/./node_modules/lodash/toPlainObject.js","webpack://POLY/./node_modules/lodash/_createAssigner.js","webpack://POLY/./node_modules/lodash/_baseIntersection.js","webpack://POLY/./node_modules/lodash/_castArrayLikeObject.js","webpack://POLY/./node_modules/three/src/materials/RawShaderMaterial.js","webpack://POLY/./node_modules/three/src/extras/PMREMGenerator.js"],"names":["Loader","manager","this","undefined","crossOrigin","path","resourcePath","Object","assign","prototype","load","parse","setCrossOrigin","setPath","setResourcePath","VideoTexture","video","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","call","generateMipmaps","create","constructor","isVideoTexture","update","image","readyState","HAVE_CURRENT_DATA","needsUpdate","Cache","enabled","files","add","key","file","get","remove","clear","baseAssignValue","eq","module","exports","object","value","ImageLoader","url","onLoad","onProgress","onError","resolveURL","scope","cached","itemStart","setTimeout","itemEnd","document","createElementNS","onImageLoad","removeEventListener","onImageError","event","itemError","addEventListener","substr","src","LoadingManager","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","setURLModifier","transform","addHandler","regex","loader","push","removeHandler","index","indexOf","splice","getHandler","i","l","length","global","lastIndex","test","DefaultLoadingManager","TextureLoader","texture","isJPEG","search","arrayMap","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","baseMerge","merge","createAssigner","source","srcIndex","Stack","assignMergeValue","baseFor","baseMergeDeep","isObject","keysIn","safeGet","customizer","stack","srcValue","newValue","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArguments","isArray","isArrayLikeObject","isBuffer","isFunction","isPlainObject","isTypedArray","toPlainObject","mergeFunc","objValue","stacked","isCommon","isArr","isBuff","isTyped","set","baseGetTag","getPrototype","isObjectLike","funcProto","Function","objectProto","funcToString","toString","hasOwnProperty","objectCtorString","proto","Ctor","copyObject","isIterateeCall","assigner","sources","guard","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","iteratee","comparator","includes","othLength","othIndex","caches","Array","maxLength","Infinity","result","array","seen","outer","computed","cache","RawShaderMaterial","parameters","isRawShaderMaterial","maxSamples","weights","poleAxis","shaderMaterial","SIZE_MAX","pow","EXTRA_LOD_SIGMA","TOTAL_LODS","LOD_MAX","ENCODINGS","_flatCamera","_blurMaterial","Float32Array","defines","uniforms","vertexShader","_getCommonVertexShader","fragmentShader","_getEncodings","blending","depthTest","depthWrite","_equirectShader","_cubemapShader","_lodPlanes","_sizeLods","_sigmas","lod","sizeLod","sigma","texelSize","max","uv1","position","positionSize","uv","uvSize","faceIndex","faceIndexSize","face","x","y","coordinates","fill","planes","setAttribute","_createPlanes","_pingPongRenderTarget","_renderer","_oldTarget","PHI","sqrt","INV_PHI","_axisDirections","PMREMGenerator","renderer","_compileMaterial","_allocateTargets","equirectangular","params","encoding","depthBuffer","stencilBuffer","cubeUVRenderTarget","_createRenderTarget","_cleanup","outputTarget","dispose","setRenderTarget","scissorTest","setSize","width","height","material","tmpScene","compile","name","_setViewport","target","viewport","scissor","_applyPMREM","autoClear","_blur","lodIn","lodOut","_halfBlur","targetIn","targetOut","sigmaRadians","direction","console","error","blurScene","blurUniforms","pixels","radiansPerPixel","isFinite","PI","sigmaPixels","samples","floor","warn","sum","weight","exp","outputSize","render","_getEquirectShader","_getCubemapShader","fromScene","scene","near","far","getRenderTarget","cubeCamera","upSign","forwardSign","outputEncoding","toneMapping","toneMappingExposure","clearColor","getClearColor","clearAlpha","getClearAlpha","scale","z","background","isColor","convertSRGBToLinear","maxComponent","r","g","b","fExp","ceil","log2","multiplyScalar","alpha","setClearColor","col","up","lookAt","_sceneToCubeUV","fromEquirectangular","fromCubemap","cubemap","isCubeTexture","_textureToCubeUV","compileCubemapShader","compileEquirectangularShader"],"mappings":"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","file":"vendors~Cop.bundle.js","sourcesContent":["import { DefaultLoadingManager } from './LoadingManager.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.crossOrigin = 'anonymous';\n\tthis.path = '';\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( Loader.prototype, {\n\n\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\tparse: function ( /* data */ ) {},\n\n\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { Loader };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { RGBFormat, LinearFilter } from '../constants.js';\nimport { Texture } from './Texture.js';\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport { VideoTexture };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n\nexport { Cache };\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nfunction ImageLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n} );\n\n\nexport { ImageLoader };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\tvar handlers = [];\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\n\t\treturn this;\n\n\t};\n\n\tthis.addHandler = function ( regex, loader ) {\n\n\t\thandlers.push( regex, loader );\n\n\t\treturn this;\n\n\t};\n\n\tthis.removeHandler = function ( regex ) {\n\n\t\tvar index = handlers.indexOf( regex );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\thandlers.splice( index, 2 );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.getHandler = function ( file ) {\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n\nexport { DefaultLoadingManager, LoadingManager };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { RGBAFormat, RGBFormat } from '../constants.js';\nimport { ImageLoader } from './ImageLoader.js';\nimport { Texture } from '../textures/Texture.js';\nimport { Loader } from './Loader.js';\n\nfunction TextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: TextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n\nexport { TextureLoader };\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","import { ShaderMaterial } from './ShaderMaterial.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\nexport { RawShaderMaterial };\n","/**\n * @author Emmett Lalish / elalish\n *\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n */\n\nimport {\n\tCubeUVReflectionMapping,\n\tGammaEncoding,\n\tLinearEncoding,\n\tLinearToneMapping,\n\tNearestFilter,\n\tNoBlending,\n\tRGBDEncoding,\n\tRGBEEncoding,\n\tRGBEFormat,\n\tRGBM16Encoding,\n\tRGBM7Encoding,\n\tUnsignedByteType,\n\tsRGBEncoding\n} from \"../constants.js\";\n\nimport { BufferAttribute } from \"../core/BufferAttribute.js\";\nimport { BufferGeometry } from \"../core/BufferGeometry.js\";\nimport { Mesh } from \"../objects/Mesh.js\";\nimport { OrthographicCamera } from \"../cameras/OrthographicCamera.js\";\nimport { PerspectiveCamera } from \"../cameras/PerspectiveCamera.js\";\nimport { RawShaderMaterial } from \"../materials/RawShaderMaterial.js\";\nimport { Scene } from \"../scenes/Scene.js\";\nimport { Vector2 } from \"../math/Vector2.js\";\nimport { Vector3 } from \"../math/Vector3.js\";\nimport { WebGLRenderTarget } from \"../renderers/WebGLRenderTarget.js\";\n\nvar LOD_MIN = 4;\nvar LOD_MAX = 8;\nvar SIZE_MAX = Math.pow( 2, LOD_MAX );\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nvar EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\nvar TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nvar MAX_SAMPLES = 20;\nvar ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nvar _flatCamera = new OrthographicCamera();\nvar _blurMaterial = _getBlurShader( MAX_SAMPLES );\nvar _equirectShader = null;\nvar _cubemapShader = null;\n\nvar { _lodPlanes, _sizeLods, _sigmas } = _createPlanes();\nvar _pingPongRenderTarget = null;\nvar _renderer = null;\n\nvar _oldTarget = null;\n\n// Golden Ratio\nvar PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nvar INV_PHI = 1 / PHI;\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nvar _axisDirections = [\n\tnew Vector3( 1, 1, 1 ),\n\tnew Vector3( - 1, 1, 1 ),\n\tnew Vector3( 1, 1, - 1 ),\n\tnew Vector3( - 1, 1, - 1 ),\n\tnew Vector3( 0, PHI, INV_PHI ),\n\tnew Vector3( 0, PHI, - INV_PHI ),\n\tnew Vector3( INV_PHI, 0, PHI ),\n\tnew Vector3( - INV_PHI, 0, PHI ),\n\tnew Vector3( PHI, INV_PHI, 0 ),\n\tnew Vector3( - PHI, INV_PHI, 0 ) ];\n\nfunction PMREMGenerator( renderer ) {\n\n\t_renderer = renderer;\n\t_compileMaterial( _blurMaterial );\n\n}\n\nPMREMGenerator.prototype = {\n\n\tconstructor: PMREMGenerator,\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene: function ( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = _renderer.getRenderTarget();\n\t\tvar cubeUVRenderTarget = _allocateTargets();\n\t\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\t_blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\t\t_applyPMREM( cubeUVRenderTarget );\n\t\t_cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t},\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular: function ( equirectangular ) {\n\n\t\tequirectangular.magFilter = NearestFilter;\n\t\tequirectangular.minFilter = NearestFilter;\n\t\tequirectangular.generateMipmaps = false;\n\n\t\treturn this.fromCubemap( equirectangular );\n\n\t},\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap: function ( cubemap ) {\n\n\t\t_oldTarget = _renderer.getRenderTarget();\n\t\tvar cubeUVRenderTarget = _allocateTargets( cubemap );\n\t\t_textureToCubeUV( cubemap, cubeUVRenderTarget );\n\t\t_applyPMREM( cubeUVRenderTarget );\n\t\t_cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t},\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader: function () {\n\n\t\tif ( _cubemapShader == null ) {\n\n\t\t\t_cubemapShader = _getCubemapShader();\n\t\t\t_compileMaterial( _cubemapShader );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader: function () {\n\n\t\tif ( _equirectShader == null ) {\n\n\t\t\t_equirectShader = _getEquirectShader();\n\t\t\t_compileMaterial( _equirectShader );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose: function () {\n\n\t\t_blurMaterial.dispose();\n\n\t\tif ( _cubemapShader != null ) _cubemapShader.dispose();\n\t\tif ( _equirectShader != null ) _equirectShader.dispose();\n\n\t\tfor ( var i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t},\n\n};\n\nfunction _createPlanes() {\n\n\tvar _lodPlanes = [];\n\tvar _sizeLods = [];\n\tvar _sigmas = [];\n\n\tvar lod = LOD_MAX;\n\tfor ( var i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tvar sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tvar sigma = 1.0 / sizeLod;\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\t\t_sigmas.push( sigma );\n\n\t\tvar texelSize = 1.0 / ( sizeLod - 1 );\n\t\tvar min = - texelSize / 2;\n\t\tvar max = 1 + texelSize / 2;\n\t\tvar uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tvar cubeFaces = 6;\n\t\tvar vertices = 6;\n\t\tvar positionSize = 3;\n\t\tvar uvSize = 2;\n\t\tvar faceIndexSize = 1;\n\n\t\tvar position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tvar uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tvar faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( var face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tvar x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tvar y = face > 2 ? 0 : - 1;\n\t\t\tvar coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tvar fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\t\tvar planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _allocateTargets( equirectangular ) {\n\n\tvar params = {\n\t\tmagFilter: NearestFilter,\n\t\tminFilter: NearestFilter,\n\t\tgenerateMipmaps: false,\n\t\ttype: equirectangular ? equirectangular.type : UnsignedByteType,\n\t\tformat: equirectangular ? equirectangular.format : RGBEFormat,\n\t\tencoding: equirectangular ? equirectangular.encoding : RGBEEncoding,\n\t\tdepthBuffer: false,\n\t\tstencilBuffer: false\n\t};\n\tvar cubeUVRenderTarget = _createRenderTarget( params );\n\tcubeUVRenderTarget.depthBuffer = equirectangular ? false : true;\n\t_pingPongRenderTarget = _createRenderTarget( params );\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _cleanup( outputTarget ) {\n\n\t_pingPongRenderTarget.dispose();\n\t_renderer.setRenderTarget( _oldTarget );\n\toutputTarget.scissorTest = false;\n\t// reset viewport and scissor\n\toutputTarget.setSize( outputTarget.width, outputTarget.height );\n\n}\n\nfunction _sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\tvar fov = 90;\n\tvar aspect = 1;\n\tvar cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\tvar upSign = [ 1, 1, 1, 1, - 1, 1 ];\n\tvar forwardSign = [ 1, 1, - 1, - 1, - 1, 1 ];\n\n\tvar outputEncoding = _renderer.outputEncoding;\n\tvar toneMapping = _renderer.toneMapping;\n\tvar toneMappingExposure = _renderer.toneMappingExposure;\n\tvar clearColor = _renderer.getClearColor();\n\tvar clearAlpha = _renderer.getClearAlpha();\n\n\t_renderer.toneMapping = LinearToneMapping;\n\t_renderer.toneMappingExposure = 1.0;\n\t_renderer.outputEncoding = LinearEncoding;\n\tscene.scale.z *= - 1;\n\n\tvar background = scene.background;\n\tif ( background && background.isColor ) {\n\n\t\tbackground.convertSRGBToLinear();\n\t\t// Convert linear to RGBE\n\t\tvar maxComponent = Math.max( background.r, background.g, background.b );\n\t\tvar fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\t\tbackground = background.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\t\tvar alpha = ( fExp + 128.0 ) / 255.0;\n\t\t_renderer.setClearColor( background, alpha );\n\t\tscene.background = null;\n\n\t}\n\n\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\tvar col = i % 3;\n\t\tif ( col == 0 ) {\n\n\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t} else if ( col == 1 ) {\n\n\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t} else {\n\n\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t}\n\t\t_setViewport( cubeUVRenderTarget,\n\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t_renderer.setRenderTarget( cubeUVRenderTarget );\n\t\t_renderer.render( scene, cubeCamera );\n\n\t}\n\n\t_renderer.toneMapping = toneMapping;\n\t_renderer.toneMappingExposure = toneMappingExposure;\n\t_renderer.outputEncoding = outputEncoding;\n\t_renderer.setClearColor( clearColor, clearAlpha );\n\tscene.scale.z *= - 1;\n\n}\n\nfunction _textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\tvar scene = new Scene();\n\tif ( texture.isCubeTexture ) {\n\n\t\tif ( _cubemapShader == null ) {\n\n\t\t\t_cubemapShader = _getCubemapShader();\n\n\t\t}\n\n\t} else {\n\n\t\tif ( _equirectShader == null ) {\n\n\t\t\t_equirectShader = _getEquirectShader();\n\n\t\t}\n\n\t}\n\tvar material = texture.isCubeTexture ? _cubemapShader : _equirectShader;\n\tscene.add( new Mesh( _lodPlanes[ 0 ], material ) );\n\tvar uniforms = material.uniforms;\n\n\tuniforms[ 'envMap' ].value = texture;\n\tif ( ! texture.isCubeTexture ) {\n\n\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t}\n\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\n\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\t_renderer.setRenderTarget( cubeUVRenderTarget );\n\t_renderer.render( scene, _flatCamera );\n\n}\n\nfunction _compileMaterial( material ) {\n\n\tvar tmpScene = new Scene();\n\ttmpScene.add( new Mesh( _lodPlanes[ 0 ], material ) );\n\t_renderer.compile( tmpScene, _flatCamera );\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tvar cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _applyPMREM( cubeUVRenderTarget ) {\n\n\tvar autoClear = _renderer.autoClear;\n\t_renderer.autoClear = false;\n\n\tfor ( var i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\tvar sigma = Math.sqrt(\n\t\t\t_sigmas[ i ] * _sigmas[ i ] -\n\t\t_sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\t\tvar poleAxis =\n\t\t_axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\t\t_blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t}\n\n\t_renderer.autoClear = autoClear;\n\n}\n\n/**\n * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n * vertically and horizontally, but this breaks down on a cube. Here we apply\n * the blur latitudinally (around the poles), and then longitudinally (towards\n * the poles) to approximate the orthogonally-separable blur. It is least\n * accurate at the poles, but still does a decent job.\n */\nfunction _blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t_halfBlur(\n\t\tcubeUVRenderTarget,\n\t\t_pingPongRenderTarget,\n\t\tlodIn,\n\t\tlodOut,\n\t\tsigma,\n\t\t'latitudinal',\n\t\tpoleAxis );\n\n\t_halfBlur(\n\t\t_pingPongRenderTarget,\n\t\tcubeUVRenderTarget,\n\t\tlodOut,\n\t\tlodOut,\n\t\tsigma,\n\t\t'longitudinal',\n\t\tpoleAxis );\n\n}\n\nfunction _halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\tconsole.error(\n\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t}\n\n\t// Number of standard deviations at which to cut off the discrete approximation.\n\tvar STANDARD_DEVIATIONS = 3;\n\n\tvar blurScene = new Scene();\n\tblurScene.add( new Mesh( _lodPlanes[ lodOut ], _blurMaterial ) );\n\tvar blurUniforms = _blurMaterial.uniforms;\n\n\tvar pixels = _sizeLods[ lodIn ] - 1;\n\tvar radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\tvar sigmaPixels = sigmaRadians / radiansPerPixel;\n\tvar samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\tif ( samples > MAX_SAMPLES ) {\n\n\t\tconsole.warn( `sigmaRadians, ${\n\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t}\n\n\tvar weights = [];\n\tvar sum = 0;\n\n\tfor ( var i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\tvar x = i / sigmaPixels;\n\t\tvar weight = Math.exp( - x * x / 2 );\n\t\tweights.push( weight );\n\n\t\tif ( i == 0 ) {\n\n\t\t\tsum += weight;\n\n\t\t} else if ( i < samples ) {\n\n\t\t\tsum += 2 * weight;\n\n\t\t}\n\n\t}\n\n\tfor ( var i = 0; i < weights.length; i ++ ) {\n\n\t\tweights[ i ] = weights[ i ] / sum;\n\n\t}\n\n\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\tblurUniforms[ 'samples' ].value = samples;\n\tblurUniforms[ 'weights' ].value = weights;\n\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\tif ( poleAxis ) {\n\n\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t}\n\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\tvar outputSize = _sizeLods[ lodOut ];\n\tvar x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\tvar y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) +\n\t2 * outputSize *\n\t\t( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t_renderer.setRenderTarget( targetOut );\n\t_renderer.render( blurScene, _flatCamera );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tvar weights = new Float32Array( maxSamples );\n\tvar poleAxis = new Vector3( 0, 1, 0 );\n\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${_getEncodings()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\tshaderMaterial.type = 'SphericalGaussianBlur';\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tvar texelSize = new Vector2( 1, 1 );\n\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${_getEncodings()}\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\tshaderMaterial.type = 'EquirectangularToCubeUV';\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tvar shaderMaterial = new RawShaderMaterial( {\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: `\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${_getEncodings()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\tshaderMaterial.type = 'CubemapToCubeUV';\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn `\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn `\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t`;\n\n}\n\nexport { PMREMGenerator };\n"],"sourceRoot":""}