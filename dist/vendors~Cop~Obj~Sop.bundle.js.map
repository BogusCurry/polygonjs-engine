{"version":3,"sources":["webpack://POLY/./node_modules/three/src/core/BufferAttribute.js","webpack://POLY/./node_modules/three/src/core/DirectGeometry.js","webpack://POLY/./node_modules/three/src/core/BufferGeometry.js","webpack://POLY/./node_modules/three/src/core/Geometry.js","webpack://POLY/./node_modules/three/src/objects/Mesh.js","webpack://POLY/./node_modules/three/src/geometries/PlaneGeometry.js","webpack://POLY/./node_modules/three/src/math/Sphere.js","webpack://POLY/./node_modules/three/src/cameras/PerspectiveCamera.js","webpack://POLY/./node_modules/three/src/math/Box3.js","webpack://POLY/./node_modules/three/src/cameras/OrthographicCamera.js","webpack://POLY/./node_modules/three/src/math/Ray.js","webpack://POLY/./node_modules/three/src/geometries/BoxGeometry.js","webpack://POLY/./node_modules/three/src/renderers/WebGLRenderTarget.js","webpack://POLY/./node_modules/three/src/cameras/Camera.js","webpack://POLY/./node_modules/three/src/math/Frustum.js","webpack://POLY/./node_modules/three/src/materials/MeshDepthMaterial.js","webpack://POLY/./node_modules/three/src/materials/MeshDistanceMaterial.js","webpack://POLY/./node_modules/three/src/core/Face3.js","webpack://POLY/./node_modules/three/src/utils.js","webpack://POLY/./node_modules/three/src/textures/CubeTexture.js"],"names":["_vector","BufferAttribute","array","itemSize","normalized","Array","isArray","TypeError","this","name","count","undefined","length","usage","updateRange","offset","version","Int8BufferAttribute","call","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","Object","defineProperty","prototype","set","value","assign","isBufferAttribute","onUploadCallback","setUsage","copy","source","constructor","copyAt","index1","attribute","index2","i","l","copyArray","copyColorsArray","colors","color","console","warn","r","g","b","copyVector2sArray","vectors","vector","x","y","copyVector3sArray","z","copyVector4sArray","w","applyMatrix3","m","getX","getY","getZ","setXYZ","applyMatrix4","applyNormalMatrix","transformDirection","index","setX","setY","setZ","getW","setW","setXY","setXYZW","onUpload","callback","clone","toJSON","type","slice","create","DirectGeometry","vertices","normals","uvs","uvs2","groups","morphTargets","skinWeights","skinIndices","boundingBox","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","computeGroups","geometry","group","materialIndex","faces","face","start","push","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","data","position","morphTargetsNormal","morphNormals","morphNormalsLength","normal","hasSkinIndices","hasSkinWeights","error","a","c","vertexNormals","vertexUvs","vertexColors","Vector2","j","morphTarget","morphNormal","_bufferGeometryId","_m1","Matrix4","_obj","Object3D","_offset","Vector3","_box","Box3","_boxMorphTargets","BufferGeometry","uuid","MathUtils","generateUUID","attributes","morphAttributes","morphTargetsRelative","drawRange","Infinity","userData","EventDispatcher","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","addGroup","clearGroups","setDrawRange","matrix","needsUpdate","normalMatrix","Matrix3","getNormalMatrix","tangent","computeBoundingBox","computeBoundingSphere","rotateX","angle","makeRotationX","rotateY","makeRotationY","rotateZ","makeRotationZ","translate","makeTranslation","scale","makeScale","lookAt","updateMatrix","center","getCenter","negate","setFromObject","object","isPoints","isLine","positions","lineDistances","isMesh","isGeometry","setFromPoints","points","point","updateFromObject","direct","__directGeometry","elementsNeedUpdate","uv","lineDistancesNeedUpdate","lineDistance","fromDirectGeometry","morphAttributesPosition","setFromBufferAttribute","il","morphAttribute","addVectors","min","expandByPoint","max","makeEmpty","isNaN","Sphere","maxRadiusSq","fromBufferAttribute","Math","distanceToSquared","jl","add","radius","sqrt","computeFaceNormals","computeVertexNormals","vA","vB","vC","pA","pB","pC","cb","ab","indices","fromArray","subVectors","cross","normalizeNormals","merge","key","attributeArray1","attribute2","attributeArray2","attributeOffset","normalize","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","metadata","generator","keys","parameters","attributeData","hasMorphAttributes","attributeArray","JSON","parse","stringify","toArray","dispose","dispatchEvent","_geometryId","Geometry","fromBufferGeometry","scope","uv2","addFace","s","f","fl","areaWeighted","v","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","faceVertexUvs2","uvsCopy","k","kl","mergeMesh","mesh","matrixAutoUpdate","mergeVertices","verticesMap","unique","changes","precision","pow","round","faceIndicesToRemove","n","idx","splice","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","uvs1","id","vertex","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","toString","getHex","srcVertexNormal","destVertexNormal","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","material","updateMorphTargets","checkIntersection","raycaster","ray","side","intersectTriangle","matrixWorld","distance","origin","distanceTo","near","far","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","addScaledVector","sub","intersection","getUV","getNormal","morphTargetDictionary","ml","String","raycast","intersects","intersectsSphere","getInverse","intersectsBox","groupMaterial","faceIndex","floor","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","PlaneGeometry","width","height","widthSegments","heightSegments","PlaneBufferGeometry","ix","iy","width_half","height_half","gridX","gridY","gridX1","gridY1","segment_width","segment_height","d","optionalCenter","sphere","empty","containsPoint","distanceToPoint","radiusSum","box","intersectsPlane","plane","abs","clampPoint","target","deltaLengthSq","multiplyScalar","getBoundingBox","expandByScalar","getMaxScaleOnAxis","equals","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","isPerspectiveCamera","recursive","setFocalLength","focalLength","vExtentSlope","getFilmHeight","RAD2DEG","atan","getFocalLength","tan","DEG2RAD","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","top","left","skew","projectionMatrix","makePerspective","projectionMatrixInverse","meta","_points","_v0","_v1","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","satForAxes","axes","v0","v1","v2","extents","p0","dot","p1","p2","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromCenterAndSize","size","halfSize","expandByObject","isEmpty","getSize","expandByVector","scalar","addScalar","updateWorldMatrix","union","children","containsBox","getParameter","constant","intersectsTriangle","triangle","crossVectors","clamp","getBoundingSphere","intersect","OrthographicCamera","right","bottom","isOrthographicCamera","dx","dy","cx","cy","scaleW","scaleH","makeOrthographic","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","direction","at","t","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","s1","sqrDist","extDet","segExtent","a01","b0","b1","lengthSq","det","invDet","intersectSphere","tca","d2","radius2","thc","t0","t1","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","matrix4","BoxGeometry","depth","depthSegments","super","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","u","udir","vdir","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","vertexCounter","groupCount","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","image","generateMipmaps","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","Camera","matrixWorldInverse","isCamera","getWorldDirection","updateMatrixWorld","e","elements","force","updateParents","updateChildren","Frustum","p3","p4","p5","planes","frustum","setFromProjectionMatrix","me","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","intersectsSprite","sprite","negRadius","MeshDepthMaterial","depthPacking","skinning","map","alphaMap","displacementMap","displacementScale","displacementBias","wireframe","wireframeLinewidth","fog","setValues","isMeshDepthMaterial","MeshDistanceMaterial","referencePosition","nearDistance","farDistance","isMeshDistanceMaterial","Face3","isVector3","isColor","arrayMax","CubeTexture","images","flipY","isCubeTexture","get"],"mappings":"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","file":"vendors~Cop~Obj~Sop.bundle.js","sourcesContent":["import { Vector4 } from '../math/Vector4.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\nimport { StaticDrawUsage } from '../constants.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _vector = new Vector3();\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyMatrix3( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\tfor ( var i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector.x = this.getX( i );\n\t\t\t_vector.y = this.getY( i );\n\t\t\t_vector.z = this.getZ( i );\n\n\t\t\t_vector.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n//\n\nexport {\n\tFloat64BufferAttribute,\n\tFloat32BufferAttribute,\n\tUint32BufferAttribute,\n\tInt32BufferAttribute,\n\tUint16BufferAttribute,\n\tInt16BufferAttribute,\n\tUint8ClampedBufferAttribute,\n\tUint8BufferAttribute,\n\tInt8BufferAttribute,\n\tBufferAttribute\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Vector2 } from '../math/Vector2.js';\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { DirectGeometry };\n","import { Vector3 } from '../math/Vector3.js';\nimport { Box3 } from '../math/Box3.js';\nimport { EventDispatcher } from './EventDispatcher.js';\nimport { BufferAttribute, Float32BufferAttribute, Uint16BufferAttribute, Uint32BufferAttribute } from './BufferAttribute.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { DirectGeometry } from './DirectGeometry.js';\nimport { Object3D } from './Object3D.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { arrayMax } from '../utils.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nvar _m1 = new Matrix4();\nvar _obj = new Object3D();\nvar _offset = new Vector3();\nvar _box = new Box3();\nvar _boxMorphTargets = new Box3();\nvar _vector = new Vector3();\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\tthis.morphTargetsRelative = false;\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tsetAttribute: function ( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tdeleteAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.min, _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.max, _box.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t_box.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector.addVectors( _box.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t\t_vector.addVectors( _box.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box.expandByPoint( _vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar normals = this.attributes.normal;\n\n\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector.x = normals.getX( i );\n\t\t\t_vector.y = normals.getY( i );\n\t\t\t_vector.z = normals.getZ( i );\n\n\t\t\t_vector.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\nexport { BufferGeometry };\n","import { EventDispatcher } from './EventDispatcher.js';\nimport { Face3 } from './Face3.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { Box3 } from '../math/Box3.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\nimport { Object3D } from './Object3D.js';\nimport { MathUtils } from '../math/MathUtils.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar _geometryId = 0; // Geometry uses even numbers as Id\nvar _m1 = new Matrix4();\nvar _obj = new Object3D();\nvar _offset = new Vector3();\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\tthis.uuid = MathUtils.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tif ( attributes.position === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( var i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) this.faceVertexUvs[ i ] = [];\n\n\t\t\tfor ( var j = 0, jl = faceVertexUvs2.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs2 = faceVertexUvs2[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\nexport { Geometry };\n","import { Vector3 } from '../math/Vector3.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Sphere } from '../math/Sphere.js';\nimport { Ray } from '../math/Ray.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Triangle } from '../math/Triangle.js';\nimport { Face3 } from '../core/Face3.js';\nimport { DoubleSide, BackSide } from '../constants.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nvar _inverseMatrix = new Matrix4();\nvar _ray = new Ray();\nvar _sphere = new Sphere();\n\nvar _vA = new Vector3();\nvar _vB = new Vector3();\nvar _vC = new Vector3();\n\nvar _tempA = new Vector3();\nvar _tempB = new Vector3();\nvar _tempC = new Vector3();\n\nvar _morphA = new Vector3();\nvar _morphB = new Vector3();\nvar _morphC = new Vector3();\n\nvar _uvA = new Vector2();\nvar _uvB = new Vector2();\nvar _uvC = new Vector2();\n\nvar _intersectionPoint = new Vector3();\nvar _intersectionPointWorld = new Vector3();\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial();\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar geometry = this.geometry;\n\t\tvar material = this.material;\n\t\tvar matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tvar intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar a, b, c;\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tvar uv = geometry.attributes.uv;\n\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\tvar groups = geometry.groups;\n\t\t\tvar drawRange = geometry.drawRange;\n\t\t\tvar i, j, il, jl;\n\t\t\tvar group, groupMaterial;\n\t\t\tvar start, end;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar fvA, fvB, fvC;\n\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar uvs;\n\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = faces[ f ];\n\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = face;\n\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tvar intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tvar morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tvar influence = morphInfluences[ i ];\n\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA.add( _morphA );\n\t\t_vB.add( _morphB );\n\t\t_vC.add( _morphC );\n\n\t}\n\n\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tvar face = new Face3( a, b, c );\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nexport { Mesh };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\nexport { PlaneGeometry, PlaneBufferGeometry };\n","import { Box3 } from './Box3.js';\nimport { Vector3 } from './Vector3.js';\n\nvar _box = new Box3();\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\tvar center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tvar maxRadiusSq = 0;\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n\nexport { Sphere };\n","import { Camera } from './Camera.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { MathUtils } from '../math/MathUtils.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n\nexport { PerspectiveCamera };\n","import { Vector3 } from './Vector3.js';\n\nvar _points = [\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3()\n];\n\nvar _vector = new Vector3();\n\nvar _box = new Box3();\n\n// triangle centered vertices\n\nvar _v0 = new Vector3();\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\n\n// triangle edge vectors\n\nvar _f0 = new Vector3();\nvar _f1 = new Vector3();\nvar _f2 = new Vector3();\n\nvar _center = new Vector3();\nvar _extents = new Vector3();\nvar _triangleNormal = new Vector3();\nvar _testAxis = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function ( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: function ( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1, _v0 );\n\t\t_f1.subVectors( _v2, _v1 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tvar axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tgetBoundingSphere: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\n\n\t\treturn target;\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tvar i, j;\n\n\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tvar p0 = v0.dot( _testAxis );\n\t\tvar p1 = v1.dot( _testAxis );\n\t\tvar p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nexport { Box3 };\n","import { Camera } from './Camera.js';\nimport { Object3D } from '../core/Object3D.js';\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n\nexport { OrthographicCamera };\n","import { Vector3 } from './Vector3.js';\n\nvar _vector = new Vector3();\nvar _segCenter = new Vector3();\nvar _segDir = new Vector3();\nvar _diff = new Vector3();\n\nvar _edge1 = new Vector3();\nvar _edge2 = new Vector3();\nvar _normal = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function ( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector ) );\n\n\t\treturn this;\n\n\t},\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function ( point ) {\n\n\t\tvar directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector.distanceToSquared( point );\n\n\t},\n\n\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tvar a01 = - this.direction.dot( _segDir );\n\t\tvar b0 = _diff.dot( this.direction );\n\t\tvar b1 = - _diff.dot( _segDir );\n\t\tvar c = _diff.lengthSq();\n\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\tvar s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t},\n\n\tintersectSphere: function ( sphere, target ) {\n\n\t\t_vector.subVectors( sphere.center, this.origin );\n\t\tvar tca = _vector.dot( this.direction );\n\t\tvar d2 = _vector.dot( _vector ) - tca * tca;\n\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tvar t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tvar t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn this.intersectBox( box, _vector ) !== null;\n\n\t},\n\n\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tvar DdN = this.direction.dot( _normal );\n\t\tvar sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t},\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n\nexport { Ray };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { Geometry } from '../core/Geometry.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n// BoxGeometry\n\nclass BoxGeometry extends Geometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n// BoxBufferGeometry\n\nclass BoxBufferGeometry extends BufferGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\t\tdepth = depth || 1;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\nexport { BoxGeometry, BoxBufferGeometry };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n\nexport { WebGLRenderTarget };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tObject3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\nexport { Camera };\n","import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nvar _sphere = new Sphere();\nvar _vector = new Vector3();\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromProjectionMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t},\n\n\tintersectsSprite: function ( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n\nexport { Frustum };\n","import { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n\nexport { MeshDepthMaterial };\n","import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n\nexport { MeshDistanceMaterial };\n","import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Face3 };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMin( array ) {\n\n\tif ( array.length === 0 ) return Infinity;\n\n\tvar min = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] < min ) min = array[ i ];\n\n\t}\n\n\treturn min;\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nexport { arrayMin, arrayMax };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Texture } from './Texture.js';\nimport { CubeReflectionMapping, RGBFormat } from '../constants.js';\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n\nexport { CubeTexture };\n"],"sourceRoot":""}