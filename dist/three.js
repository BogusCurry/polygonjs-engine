(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{0:function(t,e,n){"use strict";n.r(e),n.d(e,"REVISION",(function(){return r})),n.d(e,"MOUSE",(function(){return i})),n.d(e,"TOUCH",(function(){return a})),n.d(e,"CullFaceNone",(function(){return o})),n.d(e,"CullFaceBack",(function(){return s})),n.d(e,"CullFaceFront",(function(){return c})),n.d(e,"CullFaceFrontBack",(function(){return l})),n.d(e,"FrontFaceDirectionCW",(function(){return u})),n.d(e,"FrontFaceDirectionCCW",(function(){return h})),n.d(e,"BasicShadowMap",(function(){return p})),n.d(e,"PCFShadowMap",(function(){return d})),n.d(e,"PCFSoftShadowMap",(function(){return f})),n.d(e,"VSMShadowMap",(function(){return m})),n.d(e,"FrontSide",(function(){return v})),n.d(e,"BackSide",(function(){return g})),n.d(e,"DoubleSide",(function(){return y})),n.d(e,"FlatShading",(function(){return _})),n.d(e,"SmoothShading",(function(){return x})),n.d(e,"NoColors",(function(){return b})),n.d(e,"FaceColors",(function(){return M})),n.d(e,"VertexColors",(function(){return w})),n.d(e,"NoBlending",(function(){return S})),n.d(e,"NormalBlending",(function(){return T})),n.d(e,"AdditiveBlending",(function(){return E})),n.d(e,"SubtractiveBlending",(function(){return A})),n.d(e,"MultiplyBlending",(function(){return L})),n.d(e,"CustomBlending",(function(){return R})),n.d(e,"AddEquation",(function(){return C})),n.d(e,"SubtractEquation",(function(){return P})),n.d(e,"ReverseSubtractEquation",(function(){return N})),n.d(e,"MinEquation",(function(){return D})),n.d(e,"MaxEquation",(function(){return I})),n.d(e,"ZeroFactor",(function(){return O})),n.d(e,"OneFactor",(function(){return F})),n.d(e,"SrcColorFactor",(function(){return B})),n.d(e,"OneMinusSrcColorFactor",(function(){return V})),n.d(e,"SrcAlphaFactor",(function(){return U})),n.d(e,"OneMinusSrcAlphaFactor",(function(){return G})),n.d(e,"DstAlphaFactor",(function(){return z})),n.d(e,"OneMinusDstAlphaFactor",(function(){return k})),n.d(e,"DstColorFactor",(function(){return H})),n.d(e,"OneMinusDstColorFactor",(function(){return j})),n.d(e,"SrcAlphaSaturateFactor",(function(){return W})),n.d(e,"NeverDepth",(function(){return X})),n.d(e,"AlwaysDepth",(function(){return q})),n.d(e,"LessDepth",(function(){return Y})),n.d(e,"LessEqualDepth",(function(){return Z})),n.d(e,"EqualDepth",(function(){return J})),n.d(e,"GreaterEqualDepth",(function(){return K})),n.d(e,"GreaterDepth",(function(){return Q})),n.d(e,"NotEqualDepth",(function(){return $})),n.d(e,"MultiplyOperation",(function(){return tt})),n.d(e,"MixOperation",(function(){return et})),n.d(e,"AddOperation",(function(){return nt})),n.d(e,"NoToneMapping",(function(){return rt})),n.d(e,"LinearToneMapping",(function(){return it})),n.d(e,"ReinhardToneMapping",(function(){return at})),n.d(e,"Uncharted2ToneMapping",(function(){return ot})),n.d(e,"CineonToneMapping",(function(){return st})),n.d(e,"ACESFilmicToneMapping",(function(){return ct})),n.d(e,"UVMapping",(function(){return lt})),n.d(e,"CubeReflectionMapping",(function(){return ut})),n.d(e,"CubeRefractionMapping",(function(){return ht})),n.d(e,"EquirectangularReflectionMapping",(function(){return pt})),n.d(e,"EquirectangularRefractionMapping",(function(){return dt})),n.d(e,"SphericalReflectionMapping",(function(){return ft})),n.d(e,"CubeUVReflectionMapping",(function(){return mt})),n.d(e,"CubeUVRefractionMapping",(function(){return vt})),n.d(e,"RepeatWrapping",(function(){return gt})),n.d(e,"ClampToEdgeWrapping",(function(){return yt})),n.d(e,"MirroredRepeatWrapping",(function(){return _t})),n.d(e,"NearestFilter",(function(){return xt})),n.d(e,"NearestMipmapNearestFilter",(function(){return bt})),n.d(e,"NearestMipMapNearestFilter",(function(){return Mt})),n.d(e,"NearestMipmapLinearFilter",(function(){return wt})),n.d(e,"NearestMipMapLinearFilter",(function(){return St})),n.d(e,"LinearFilter",(function(){return Tt})),n.d(e,"LinearMipmapNearestFilter",(function(){return Et})),n.d(e,"LinearMipMapNearestFilter",(function(){return At})),n.d(e,"LinearMipmapLinearFilter",(function(){return Lt})),n.d(e,"LinearMipMapLinearFilter",(function(){return Rt})),n.d(e,"UnsignedByteType",(function(){return Ct})),n.d(e,"ByteType",(function(){return Pt})),n.d(e,"ShortType",(function(){return Nt})),n.d(e,"UnsignedShortType",(function(){return Dt})),n.d(e,"IntType",(function(){return It})),n.d(e,"UnsignedIntType",(function(){return Ot})),n.d(e,"FloatType",(function(){return Ft})),n.d(e,"HalfFloatType",(function(){return Bt})),n.d(e,"UnsignedShort4444Type",(function(){return Vt})),n.d(e,"UnsignedShort5551Type",(function(){return Ut})),n.d(e,"UnsignedShort565Type",(function(){return Gt})),n.d(e,"UnsignedInt248Type",(function(){return zt})),n.d(e,"AlphaFormat",(function(){return kt})),n.d(e,"RGBFormat",(function(){return Ht})),n.d(e,"RGBAFormat",(function(){return jt})),n.d(e,"LuminanceFormat",(function(){return Wt})),n.d(e,"LuminanceAlphaFormat",(function(){return Xt})),n.d(e,"RGBEFormat",(function(){return qt})),n.d(e,"DepthFormat",(function(){return Yt})),n.d(e,"DepthStencilFormat",(function(){return Zt})),n.d(e,"RedFormat",(function(){return Jt})),n.d(e,"RedIntegerFormat",(function(){return Kt})),n.d(e,"RGFormat",(function(){return Qt})),n.d(e,"RGIntegerFormat",(function(){return $t})),n.d(e,"RGBIntegerFormat",(function(){return te})),n.d(e,"RGBAIntegerFormat",(function(){return ee})),n.d(e,"RGB_S3TC_DXT1_Format",(function(){return ne})),n.d(e,"RGBA_S3TC_DXT1_Format",(function(){return re})),n.d(e,"RGBA_S3TC_DXT3_Format",(function(){return ie})),n.d(e,"RGBA_S3TC_DXT5_Format",(function(){return ae})),n.d(e,"RGB_PVRTC_4BPPV1_Format",(function(){return oe})),n.d(e,"RGB_PVRTC_2BPPV1_Format",(function(){return se})),n.d(e,"RGBA_PVRTC_4BPPV1_Format",(function(){return ce})),n.d(e,"RGBA_PVRTC_2BPPV1_Format",(function(){return le})),n.d(e,"RGB_ETC1_Format",(function(){return ue})),n.d(e,"RGBA_ASTC_4x4_Format",(function(){return he})),n.d(e,"RGBA_ASTC_5x4_Format",(function(){return pe})),n.d(e,"RGBA_ASTC_5x5_Format",(function(){return de})),n.d(e,"RGBA_ASTC_6x5_Format",(function(){return fe})),n.d(e,"RGBA_ASTC_6x6_Format",(function(){return me})),n.d(e,"RGBA_ASTC_8x5_Format",(function(){return ve})),n.d(e,"RGBA_ASTC_8x6_Format",(function(){return ge})),n.d(e,"RGBA_ASTC_8x8_Format",(function(){return ye})),n.d(e,"RGBA_ASTC_10x5_Format",(function(){return _e})),n.d(e,"RGBA_ASTC_10x6_Format",(function(){return xe})),n.d(e,"RGBA_ASTC_10x8_Format",(function(){return be})),n.d(e,"RGBA_ASTC_10x10_Format",(function(){return Me})),n.d(e,"RGBA_ASTC_12x10_Format",(function(){return we})),n.d(e,"RGBA_ASTC_12x12_Format",(function(){return Se})),n.d(e,"LoopOnce",(function(){return Te})),n.d(e,"LoopRepeat",(function(){return Ee})),n.d(e,"LoopPingPong",(function(){return Ae})),n.d(e,"InterpolateDiscrete",(function(){return Le})),n.d(e,"InterpolateLinear",(function(){return Re})),n.d(e,"InterpolateSmooth",(function(){return Ce})),n.d(e,"ZeroCurvatureEnding",(function(){return Pe})),n.d(e,"ZeroSlopeEnding",(function(){return Ne})),n.d(e,"WrapAroundEnding",(function(){return De})),n.d(e,"TrianglesDrawMode",(function(){return Ie})),n.d(e,"TriangleStripDrawMode",(function(){return Oe})),n.d(e,"TriangleFanDrawMode",(function(){return Fe})),n.d(e,"LinearEncoding",(function(){return Be})),n.d(e,"sRGBEncoding",(function(){return Ve})),n.d(e,"GammaEncoding",(function(){return Ue})),n.d(e,"RGBEEncoding",(function(){return Ge})),n.d(e,"LogLuvEncoding",(function(){return ze})),n.d(e,"RGBM7Encoding",(function(){return ke})),n.d(e,"RGBM16Encoding",(function(){return He})),n.d(e,"RGBDEncoding",(function(){return je})),n.d(e,"BasicDepthPacking",(function(){return We})),n.d(e,"RGBADepthPacking",(function(){return Xe})),n.d(e,"TangentSpaceNormalMap",(function(){return qe})),n.d(e,"ObjectSpaceNormalMap",(function(){return Ye})),n.d(e,"ZeroStencilOp",(function(){return Ze})),n.d(e,"KeepStencilOp",(function(){return Je})),n.d(e,"ReplaceStencilOp",(function(){return Ke})),n.d(e,"IncrementStencilOp",(function(){return Qe})),n.d(e,"DecrementStencilOp",(function(){return $e})),n.d(e,"IncrementWrapStencilOp",(function(){return tn})),n.d(e,"DecrementWrapStencilOp",(function(){return en})),n.d(e,"InvertStencilOp",(function(){return nn})),n.d(e,"NeverStencilFunc",(function(){return rn})),n.d(e,"LessStencilFunc",(function(){return an})),n.d(e,"EqualStencilFunc",(function(){return on})),n.d(e,"LessEqualStencilFunc",(function(){return sn})),n.d(e,"GreaterStencilFunc",(function(){return cn})),n.d(e,"NotEqualStencilFunc",(function(){return ln})),n.d(e,"GreaterEqualStencilFunc",(function(){return un})),n.d(e,"AlwaysStencilFunc",(function(){return hn})),n.d(e,"StaticDrawUsage",(function(){return pn})),n.d(e,"DynamicDrawUsage",(function(){return dn})),n.d(e,"StreamDrawUsage",(function(){return fn})),n.d(e,"StaticReadUsage",(function(){return mn})),n.d(e,"DynamicReadUsage",(function(){return vn})),n.d(e,"StreamReadUsage",(function(){return gn})),n.d(e,"StaticCopyUsage",(function(){return yn})),n.d(e,"DynamicCopyUsage",(function(){return _n})),n.d(e,"StreamCopyUsage",(function(){return xn}));var r="112",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},o=0,s=1,c=2,l=3,u=0,h=1,p=0,d=1,f=2,m=3,v=0,g=1,y=2,_=1,x=2,b=0,M=1,w=2,S=0,T=1,E=2,A=3,L=4,R=5,C=100,P=101,N=102,D=103,I=104,O=200,F=201,B=202,V=203,U=204,G=205,z=206,k=207,H=208,j=209,W=210,X=0,q=1,Y=2,Z=3,J=4,K=5,Q=6,$=7,tt=0,et=1,nt=2,rt=0,it=1,at=2,ot=3,st=4,ct=5,lt=300,ut=301,ht=302,pt=303,dt=304,ft=305,mt=306,vt=307,gt=1e3,yt=1001,_t=1002,xt=1003,bt=1004,Mt=1004,wt=1005,St=1005,Tt=1006,Et=1007,At=1007,Lt=1008,Rt=1008,Ct=1009,Pt=1010,Nt=1011,Dt=1012,It=1013,Ot=1014,Ft=1015,Bt=1016,Vt=1017,Ut=1018,Gt=1019,zt=1020,kt=1021,Ht=1022,jt=1023,Wt=1024,Xt=1025,qt=jt,Yt=1026,Zt=1027,Jt=1028,Kt=1029,Qt=1030,$t=1031,te=1032,ee=1033,ne=33776,re=33777,ie=33778,ae=33779,oe=35840,se=35841,ce=35842,le=35843,ue=36196,he=37808,pe=37809,de=37810,fe=37811,me=37812,ve=37813,ge=37814,ye=37815,_e=37816,xe=37817,be=37818,Me=37819,we=37820,Se=37821,Te=2200,Ee=2201,Ae=2202,Le=2300,Re=2301,Ce=2302,Pe=2400,Ne=2401,De=2402,Ie=0,Oe=1,Fe=2,Be=3e3,Ve=3001,Ue=3007,Ge=3002,ze=3003,ke=3004,He=3005,je=3006,We=3200,Xe=3201,qe=0,Ye=1,Ze=0,Je=7680,Ke=7681,Qe=7682,$e=7683,tn=34055,en=34056,nn=5386,rn=512,an=513,on=514,sn=515,cn=516,ln=517,un=518,hn=519,pn=35044,dn=35048,fn=35040,mn=35045,vn=35049,gn=35041,yn=35046,_n=35050,xn=35042},1:function(t,e,n){"use strict";n.r(e),n.d(e,"Vector3",(function(){return s}));var r=n(13),i=n(31),a=new s,o=new i.Quaternion;function s(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0}Object.assign(s.prototype,{isVector3:!0,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(o.setFromEuler(t))},applyAxisAngle:function(t,e){return this.applyQuaternion(o.setFromAxisAngle(t,e))},applyMatrix3:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this},applyNormalMatrix:function(t){return this.applyMatrix3(t).normalize()},applyMatrix4:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements,a=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*a,this},applyQuaternion:function(t){var e=this.x,n=this.y,r=this.z,i=t.x,a=t.y,o=t.z,s=t.w,c=s*e+a*r-o*n,l=s*n+o*e-i*r,u=s*r+i*n-a*e,h=-i*e-a*n-o*r;return this.x=c*s+h*-i+l*-o-u*-a,this.y=l*s+h*-a+u*-i-c*-o,this.z=u*s+h*-o+c*-a-l*-i,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){var e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this},clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var n=t.x,r=t.y,i=t.z,a=e.x,o=e.y,s=e.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(t){return a.copy(this).projectOnVector(t),this.sub(a)},reflect:function(t){return this.sub(a.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){var e=Math.sqrt(this.lengthSq()*t.lengthSq());0===e&&console.error("THREE.Vector3: angleTo() can't handle zero length vectors.");var n=this.dot(t)/e;return Math.acos(r._Math.clamp(n,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,n){var r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}})},10:function(t,e,n){"use strict";n.r(e);var r=n(31),i=n(1),a=n(15),o=n(30),s=n(159);function c(){this.mask=1}Object.assign(c.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=-1},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return 0!=(this.mask&t.mask)}});var l=n(20),u=n(13);n.d(e,"Object3D",(function(){return S}));var h=0,p=new i.Vector3,d=new r.Quaternion,f=new a.Matrix4,m=new i.Vector3,v=new i.Vector3,g=new i.Vector3,y=new r.Quaternion,_=new i.Vector3(1,0,0),x=new i.Vector3(0,1,0),b=new i.Vector3(0,0,1),M={type:"added"},w={type:"removed"};function S(){Object.defineProperty(this,"id",{value:h++}),this.uuid=u._Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=S.DefaultUp.clone();var t=new i.Vector3,e=new s.Euler,n=new r.Quaternion,o=new i.Vector3(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new a.Matrix4},normalMatrix:{value:new l.a}}),this.matrix=new a.Matrix4,this.matrixWorld=new a.Matrix4,this.matrixAutoUpdate=S.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new c,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}S.DefaultUp=new i.Vector3(0,1,0),S.DefaultMatrixAutoUpdate=!0,S.prototype=Object.assign(Object.create(o.a.prototype),{constructor:S,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return d.setFromAxisAngle(t,e),this.quaternion.multiply(d),this},rotateOnWorldAxis:function(t,e){return d.setFromAxisAngle(t,e),this.quaternion.premultiply(d),this},rotateX:function(t){return this.rotateOnAxis(_,t)},rotateY:function(t){return this.rotateOnAxis(x,t)},rotateZ:function(t){return this.rotateOnAxis(b,t)},translateOnAxis:function(t,e){return p.copy(t).applyQuaternion(this.quaternion),this.position.add(p.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(_,t)},translateY:function(t){return this.translateOnAxis(x,t)},translateZ:function(t){return this.translateOnAxis(b,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(f.getInverse(this.matrixWorld))},lookAt:function(t,e,n){t.isVector3?m.copy(t):m.set(t,e,n);var r=this.parent;this.updateWorldMatrix(!0,!1),v.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?f.lookAt(v,m,this.up):f.lookAt(m,v,this.up),this.quaternion.setFromRotationMatrix(f),r&&(f.extractRotation(r.matrixWorld),d.setFromRotationMatrix(f),this.quaternion.premultiply(d.inverse()))},add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(M)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var n=this.children.indexOf(t);return-1!==n&&(t.parent=null,this.children.splice(n,1),t.dispatchEvent(w)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),f.getInverse(this.matrixWorld),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),f.multiply(t.parent.matrixWorld)),t.applyMatrix(f),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new i.Vector3),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new r.Quaternion),this.updateMatrixWorld(!0),this.matrixWorld.decompose(v,t,g),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new i.Vector3),this.updateMatrixWorld(!0),this.matrixWorld.decompose(v,y,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new i.Vector3),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,n=0,r=e.length;n<r;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e)for(var r=this.children,i=0,a=r.length;i<a;i++)r[i].updateWorldMatrix(!1,!0)},toJSON:function(t){var e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var o=a.shapes;if(Array.isArray(o))for(var s=0,c=o.length;s<c;s++){var l=o[s];i(t.shapes,l)}else i(t.shapes,o)}}if(void 0!==this.material)if(Array.isArray(this.material)){var u=[];for(s=0,c=this.material.length;s<c;s++)u.push(i(t.materials,this.material[s]));r.material=u}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(s=0;s<this.children.length;s++)r.children.push(this.children[s].toJSON(t).object)}if(e){var h=m(t.geometries),p=m(t.materials),d=m(t.textures),f=m(t.images);o=m(t.shapes);h.length>0&&(n.geometries=h),p.length>0&&(n.materials=p),d.length>0&&(n.textures=d),f.length>0&&(n.images=f),o.length>0&&(n.shapes=o)}return n.object=r,n;function m(t){var e=[];for(var n in t){var r=t[n];delete r.metadata,e.push(r)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var n=0;n<t.children.length;n++){var r=t.children[n];this.add(r.clone())}return this}})},105:function(t,e,n){"use strict";n.r(e),n.d(e,"BoxGeometry",(function(){return s})),n.d(e,"BoxBufferGeometry",(function(){return c}));var r=n(11),i=n(5),a=n(4),o=n(1);class s extends r.a{constructor(t,e,n,r,i,a){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:a},this.fromBufferGeometry(new c(t,e,n,r,i,a)),this.mergeVertices()}}class c extends i.BufferGeometry{constructor(t,e,n,r,i,s){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};var c=this;t=t||1,e=e||1,n=n||1,r=Math.floor(r)||1,i=Math.floor(i)||1,s=Math.floor(s)||1;var l=[],u=[],h=[],p=[],d=0,f=0;function m(t,e,n,r,i,a,s,m,v,g,y){var _,x,b=a/v,M=s/g,w=a/2,S=s/2,T=m/2,E=v+1,A=g+1,L=0,R=0,C=new o.Vector3;for(x=0;x<A;x++){var P=x*M-S;for(_=0;_<E;_++){var N=_*b-w;C[t]=N*r,C[e]=P*i,C[n]=T,u.push(C.x,C.y,C.z),C[t]=0,C[e]=0,C[n]=m>0?1:-1,h.push(C.x,C.y,C.z),p.push(_/v),p.push(1-x/g),L+=1}}for(x=0;x<g;x++)for(_=0;_<v;_++){var D=d+_+E*x,I=d+_+E*(x+1),O=d+(_+1)+E*(x+1),F=d+(_+1)+E*x;l.push(D,I,F),l.push(I,O,F),R+=6}c.addGroup(f,R,y),f+=R,d+=L}m("z","y","x",-1,-1,n,e,t,s,i,0),m("z","y","x",1,-1,n,e,-t,s,i,1),m("x","z","y",1,1,t,n,e,r,s,2),m("x","z","y",1,-1,t,n,-e,r,s,3),m("x","y","z",1,-1,t,e,n,r,i,4),m("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(l),this.setAttribute("position",new a.Float32BufferAttribute(u,3)),this.setAttribute("normal",new a.Float32BufferAttribute(h,3)),this.setAttribute("uv",new a.Float32BufferAttribute(p,2))}}},106:function(t,e,n){"use strict";n.d(e,"b",(function(){return l})),n.d(e,"a",(function(){return u}));var r=n(11),i=n(5),a=n(4),o=n(2),s=n(1),c=n(71);function l(t,e){r.a.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new u(t,e)),this.mergeVertices()}function u(t,e){i.BufferGeometry.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];for(var n=this,r=[],l=[],u=0,p=t.length;u<p;u++){d(t[u])}function d(t){var i=[],a=void 0!==e.curveSegments?e.curveSegments:12,u=void 0!==e.steps?e.steps:1,p=void 0!==e.depth?e.depth:100,d=void 0===e.bevelEnabled||e.bevelEnabled,f=void 0!==e.bevelThickness?e.bevelThickness:6,m=void 0!==e.bevelSize?e.bevelSize:f-2,v=void 0!==e.bevelOffset?e.bevelOffset:0,g=void 0!==e.bevelSegments?e.bevelSegments:3,y=e.extrudePath,_=void 0!==e.UVGenerator?e.UVGenerator:h;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),p=e.amount);var x,b,M,w,S,T,E,A,L=!1;y&&(x=y.getSpacedPoints(u),L=!0,d=!1,b=y.computeFrenetFrames(u,!1),M=new s.Vector3,w=new s.Vector3,S=new s.Vector3),d||(g=0,f=0,m=0,v=0);var R=t.extractPoints(a),C=R.shape,P=R.holes;if(!c.a.isClockWise(C))for(C=C.reverse(),E=0,A=P.length;E<A;E++)T=P[E],c.a.isClockWise(T)&&(P[E]=T.reverse());var N=c.a.triangulateShape(C,P),D=C;for(E=0,A=P.length;E<A;E++)T=P[E],C=C.concat(T);function I(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}var O,F,B,V,U,G,z=C.length,k=N.length;function H(t,e,n){var r,i,a,s=t.x-e.x,c=t.y-e.y,l=n.x-t.x,u=n.y-t.y,h=s*s+c*c,p=s*u-c*l;if(Math.abs(p)>Number.EPSILON){var d=Math.sqrt(h),f=Math.sqrt(l*l+u*u),m=e.x-c/d,v=e.y+s/d,g=((n.x-u/f-m)*u-(n.y+l/f-v)*l)/(s*u-c*l),y=(r=m+s*g-t.x)*r+(i=v+c*g-t.y)*i;if(y<=2)return new o.Vector2(r,i);a=Math.sqrt(y/2)}else{var _=!1;s>Number.EPSILON?l>Number.EPSILON&&(_=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(_=!0):Math.sign(c)===Math.sign(u)&&(_=!0),_?(r=-c,i=s,a=Math.sqrt(h)):(r=s,i=c,a=Math.sqrt(h/2))}return new o.Vector2(r/a,i/a)}for(var j=[],W=0,X=D.length,q=X-1,Y=W+1;W<X;W++,q++,Y++)q===X&&(q=0),Y===X&&(Y=0),j[W]=H(D[W],D[q],D[Y]);var Z,J,K=[],Q=j.concat();for(E=0,A=P.length;E<A;E++){for(T=P[E],Z=[],W=0,q=(X=T.length)-1,Y=W+1;W<X;W++,q++,Y++)q===X&&(q=0),Y===X&&(Y=0),Z[W]=H(T[W],T[q],T[Y]);K.push(Z),Q=Q.concat(Z)}for(O=0;O<g;O++){for(B=O/g,V=f*Math.cos(B*Math.PI/2),F=m*Math.sin(B*Math.PI/2)+v,W=0,X=D.length;W<X;W++)tt((U=I(D[W],j[W],F)).x,U.y,-V);for(E=0,A=P.length;E<A;E++)for(T=P[E],Z=K[E],W=0,X=T.length;W<X;W++)tt((U=I(T[W],Z[W],F)).x,U.y,-V)}for(F=m+v,W=0;W<z;W++)U=d?I(C[W],Q[W],F):C[W],L?(w.copy(b.normals[0]).multiplyScalar(U.x),M.copy(b.binormals[0]).multiplyScalar(U.y),S.copy(x[0]).add(w).add(M),tt(S.x,S.y,S.z)):tt(U.x,U.y,0);for(J=1;J<=u;J++)for(W=0;W<z;W++)U=d?I(C[W],Q[W],F):C[W],L?(w.copy(b.normals[J]).multiplyScalar(U.x),M.copy(b.binormals[J]).multiplyScalar(U.y),S.copy(x[J]).add(w).add(M),tt(S.x,S.y,S.z)):tt(U.x,U.y,p/u*J);for(O=g-1;O>=0;O--){for(B=O/g,V=f*Math.cos(B*Math.PI/2),F=m*Math.sin(B*Math.PI/2)+v,W=0,X=D.length;W<X;W++)tt((U=I(D[W],j[W],F)).x,U.y,p+V);for(E=0,A=P.length;E<A;E++)for(T=P[E],Z=K[E],W=0,X=T.length;W<X;W++)U=I(T[W],Z[W],F),L?tt(U.x,U.y+x[u-1].y,x[u-1].x+V):tt(U.x,U.y,p+V)}function $(t,e){var n,r;for(W=t.length;--W>=0;){n=W,(r=W-1)<0&&(r=t.length-1);var i=0,a=u+2*g;for(i=0;i<a;i++){var o=z*i,s=z*(i+1);nt(e+n+o,e+r+o,e+r+s,e+n+s)}}}function tt(t,e,n){i.push(t),i.push(e),i.push(n)}function et(t,e,i){rt(t),rt(e),rt(i);var a=r.length/3,o=_.generateTopUV(n,r,a-3,a-2,a-1);it(o[0]),it(o[1]),it(o[2])}function nt(t,e,i,a){rt(t),rt(e),rt(a),rt(e),rt(i),rt(a);var o=r.length/3,s=_.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);it(s[0]),it(s[1]),it(s[3]),it(s[1]),it(s[2]),it(s[3])}function rt(t){r.push(i[3*t+0]),r.push(i[3*t+1]),r.push(i[3*t+2])}function it(t){l.push(t.x),l.push(t.y)}!function(){var t=r.length/3;if(d){var e=0,i=z*e;for(W=0;W<k;W++)et((G=N[W])[2]+i,G[1]+i,G[0]+i);for(i=z*(e=u+2*g),W=0;W<k;W++)et((G=N[W])[0]+i,G[1]+i,G[2]+i)}else{for(W=0;W<k;W++)et((G=N[W])[2],G[1],G[0]);for(W=0;W<k;W++)et((G=N[W])[0]+z*u,G[1]+z*u,G[2]+z*u)}n.addGroup(t,r.length/3-t,0)}(),function(){var t=r.length/3,e=0;for($(D,e),e+=D.length,E=0,A=P.length;E<A;E++)$(T=P[E],e),e+=T.length;n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new a.Float32BufferAttribute(r,3)),this.setAttribute("uv",new a.Float32BufferAttribute(l,2)),this.computeVertexNormals()}l.prototype=Object.create(r.a.prototype),l.prototype.constructor=l,l.prototype.toJSON=function(){var t=r.a.prototype.toJSON.call(this);return p(this.parameters.shapes,this.parameters.options,t)},u.prototype=Object.create(i.BufferGeometry.prototype),u.prototype.constructor=u,u.prototype.toJSON=function(){var t=i.BufferGeometry.prototype.toJSON.call(this);return p(this.parameters.shapes,this.parameters.options,t)};var h={generateTopUV:function(t,e,n,r,i){var a=e[3*n],s=e[3*n+1],c=e[3*r],l=e[3*r+1],u=e[3*i],h=e[3*i+1];return[new o.Vector2(a,s),new o.Vector2(c,l),new o.Vector2(u,h)]},generateSideWallUV:function(t,e,n,r,i,a){var s=e[3*n],c=e[3*n+1],l=e[3*n+2],u=e[3*r],h=e[3*r+1],p=e[3*r+2],d=e[3*i],f=e[3*i+1],m=e[3*i+2],v=e[3*a],g=e[3*a+1],y=e[3*a+2];return Math.abs(c-h)<.01?[new o.Vector2(s,1-l),new o.Vector2(u,1-p),new o.Vector2(d,1-m),new o.Vector2(v,1-y)]:[new o.Vector2(c,1-l),new o.Vector2(h,1-p),new o.Vector2(f,1-m),new o.Vector2(g,1-y)]}};function p(t,e,n){if(n.shapes=[],Array.isArray(t))for(var r=0,i=t.length;r<i;r++){var a=t[r];n.shapes.push(a.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}},107:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(1),i=n(33),a=n(59),o=new i.Sphere,s=new r.Vector3;function c(t,e,n,r,i,o){this.planes=[void 0!==t?t:new a.a,void 0!==e?e:new a.a,void 0!==n?n:new a.a,void 0!==r?r:new a.a,void 0!==i?i:new a.a,void 0!==o?o:new a.a]}Object.assign(c.prototype,{set:function(t,e,n,r,i,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromMatrix:function(t){var e=this.planes,n=t.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],c=n[5],l=n[6],u=n[7],h=n[8],p=n[9],d=n[10],f=n[11],m=n[12],v=n[13],g=n[14],y=n[15];return e[0].setComponents(o-r,u-s,f-h,y-m).normalize(),e[1].setComponents(o+r,u+s,f+h,y+m).normalize(),e[2].setComponents(o+i,u+c,f+p,y+v).normalize(),e[3].setComponents(o-i,u-c,f-p,y-v).normalize(),e[4].setComponents(o-a,u-l,f-d,y-g).normalize(),e[5].setComponents(o+a,u+l,f+d,y+g).normalize(),this},intersectsObject:function(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),o.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(o)},intersectsSprite:function(t){return o.center.set(0,0,0),o.radius=.7071067811865476,o.applyMatrix4(t.matrixWorld),this.intersectsSphere(o)},intersectsSphere:function(t){for(var e=this.planes,n=t.center,r=-t.radius,i=0;i<6;i++){if(e[i].distanceToPoint(n)<r)return!1}return!0},intersectsBox:function(t){for(var e=this.planes,n=0;n<6;n++){var r=e[n];if(s.x=r.normal.x>0?t.max.x:t.min.x,s.y=r.normal.y>0?t.max.y:t.min.y,s.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(s)<0)return!1}return!0},containsPoint:function(t){for(var e=this.planes,n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}})},108:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(0);function i(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=r.StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(i.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(i.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(var r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}})},109:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(29);function i(t,e,n,i){r.a.call(this,t,e,n,i)}i.prototype=Object.assign(Object.create(r.a.prototype),{constructor:i,ValueTypeName:"number"})},11:function(t,e,n){"use strict";n.d(e,"a",(function(){return y}));var r=n(30),i=n(122),a=n(20),o=n(33),s=n(44),c=n(1),l=n(15),u=n(2),h=n(6),p=n(10),d=n(13),f=0,m=new l.Matrix4,v=new p.Object3D,g=new c.Vector3;function y(){Object.defineProperty(this,"id",{value:f+=2}),this.uuid=d._Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}y.prototype=Object.assign(Object.create(r.a.prototype),{constructor:y,isGeometry:!0,applyMatrix:function(t){for(var e=(new a.a).getNormalMatrix(t),n=0,r=this.vertices.length;n<r;n++){this.vertices[n].applyMatrix4(t)}for(n=0,r=this.faces.length;n<r;n++){var i=this.faces[n];i.normal.applyMatrix3(e).normalize();for(var o=0,s=i.vertexNormals.length;o<s;o++)i.vertexNormals[o].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return m.makeRotationX(t),this.applyMatrix(m),this},rotateY:function(t){return m.makeRotationY(t),this.applyMatrix(m),this},rotateZ:function(t){return m.makeRotationZ(t),this.applyMatrix(m),this},translate:function(t,e,n){return m.makeTranslation(t,e,n),this.applyMatrix(m),this},scale:function(t,e,n){return m.makeScale(t,e,n),this.applyMatrix(m),this},lookAt:function(t){return v.lookAt(t),v.updateMatrix(),this.applyMatrix(v.matrix),this},fromBufferGeometry:function(t){var e=this,n=null!==t.index?t.index.array:void 0,r=t.attributes;if(void 0===r.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var a=r.position.array,o=void 0!==r.normal?r.normal.array:void 0,s=void 0!==r.color?r.color.array:void 0,l=void 0!==r.uv?r.uv.array:void 0,p=void 0!==r.uv2?r.uv2.array:void 0;void 0!==p&&(this.faceVertexUvs[1]=[]);for(var d=0;d<a.length;d+=3)e.vertices.push((new c.Vector3).fromArray(a,d)),void 0!==s&&e.colors.push((new h.Color).fromArray(s,d));function f(t,n,r,a){var h=void 0===s?[]:[e.colors[t].clone(),e.colors[n].clone(),e.colors[r].clone()],d=void 0===o?[]:[(new c.Vector3).fromArray(o,3*t),(new c.Vector3).fromArray(o,3*n),(new c.Vector3).fromArray(o,3*r)],f=new i.a(t,n,r,d,h,a);e.faces.push(f),void 0!==l&&e.faceVertexUvs[0].push([(new u.Vector2).fromArray(l,2*t),(new u.Vector2).fromArray(l,2*n),(new u.Vector2).fromArray(l,2*r)]),void 0!==p&&e.faceVertexUvs[1].push([(new u.Vector2).fromArray(p,2*t),(new u.Vector2).fromArray(p,2*n),(new u.Vector2).fromArray(p,2*r)])}var m=t.groups;if(m.length>0)for(d=0;d<m.length;d++)for(var v=m[d],g=v.start,y=g,_=g+v.count;y<_;y+=3)void 0!==n?f(n[y],n[y+1],n[y+2],v.materialIndex):f(y,y+1,y+2,v.materialIndex);else if(void 0!==n)for(d=0;d<n.length;d+=3)f(n[d],n[d+1],n[d+2]);else for(d=0;d<a.length/3;d+=3)f(d,d+1,d+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(g).negate(),this.translate(g.x,g.y,g.z),this},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,r=new l.Matrix4;return r.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var t=new c.Vector3,e=new c.Vector3,n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],a=this.vertices[i.a],o=this.vertices[i.b],s=this.vertices[i.c];t.subVectors(s,o),e.subVectors(a,o),t.cross(e),t.normalize(),i.normal.copy(t)}},computeVertexNormals:function(t){var e,n,r,i,a,o;for(void 0===t&&(t=!0),o=new Array(this.vertices.length),e=0,n=this.vertices.length;e<n;e++)o[e]=new c.Vector3;if(t){var s,l,u,h=new c.Vector3,p=new c.Vector3;for(r=0,i=this.faces.length;r<i;r++)a=this.faces[r],s=this.vertices[a.a],l=this.vertices[a.b],u=this.vertices[a.c],h.subVectors(u,l),p.subVectors(s,l),h.cross(p),o[a.a].add(h),o[a.b].add(h),o[a.c].add(h)}else for(this.computeFaceNormals(),r=0,i=this.faces.length;r<i;r++)o[(a=this.faces[r]).a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(e=0,n=this.vertices.length;e<n;e++)o[e].normalize();for(r=0,i=this.faces.length;r<i;r++){var d=(a=this.faces[r]).vertexNormals;3===d.length?(d[0].copy(o[a.a]),d[1].copy(o[a.b]),d[2].copy(o[a.c])):(d[0]=o[a.a].clone(),d[1]=o[a.b].clone(),d[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,n;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var r=(n=this.faces[t]).vertexNormals;3===r.length?(r[0].copy(n.normal),r[1].copy(n.normal),r[2].copy(n.normal)):(r[0]=n.normal.clone(),r[1]=n.normal.clone(),r[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,n,r,i;for(n=0,r=this.faces.length;n<r;n++)for((i=this.faces[n]).__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),t=0,e=i.vertexNormals.length;t<e;t++)i.__originalVertexNormals[t]?i.__originalVertexNormals[t].copy(i.vertexNormals[t]):i.__originalVertexNormals[t]=i.vertexNormals[t].clone();var a=new y;for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var o=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(n=0,r=this.faces.length;n<r;n++)l=new c.Vector3,u={a:new c.Vector3,b:new c.Vector3,c:new c.Vector3},o.push(l),s.push(u)}var l,u,h=this.morphNormals[t];for(a.vertices=this.morphTargets[t].vertices,a.computeFaceNormals(),a.computeVertexNormals(),n=0,r=this.faces.length;n<r;n++)i=this.faces[n],l=h.faceNormals[n],u=h.vertexNormals[n],l.copy(i.normal),u.a.copy(i.vertexNormals[0]),u.b.copy(i.vertexNormals[1]),u.c.copy(i.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)(i=this.faces[n]).normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new s.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new o.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(t&&t.isGeometry){var r,o=this.vertices.length,s=this.vertices,c=t.vertices,l=this.faces,u=t.faces,h=this.colors,p=t.colors;void 0===n&&(n=0),void 0!==e&&(r=(new a.a).getNormalMatrix(e));for(var d=0,f=c.length;d<f;d++){var m=c[d].clone();void 0!==e&&m.applyMatrix4(e),s.push(m)}for(d=0,f=p.length;d<f;d++)h.push(p[d].clone());for(d=0,f=u.length;d<f;d++){var v,g,y,_=u[d],x=_.vertexNormals,b=_.vertexColors;(v=new i.a(_.a+o,_.b+o,_.c+o)).normal.copy(_.normal),void 0!==r&&v.normal.applyMatrix3(r).normalize();for(var M=0,w=x.length;M<w;M++)g=x[M].clone(),void 0!==r&&g.applyMatrix3(r).normalize(),v.vertexNormals.push(g);v.color.copy(_.color);for(M=0,w=b.length;M<w;M++)y=b[M],v.vertexColors.push(y.clone());v.materialIndex=_.materialIndex+n,l.push(v)}for(d=0,f=t.faceVertexUvs.length;d<f;d++){var S=t.faceVertexUvs[d];void 0===this.faceVertexUvs[d]&&(this.faceVertexUvs[d]=[]);for(M=0,w=S.length;M<w;M++){for(var T=S[M],E=[],A=0,L=T.length;A<L;A++)E.push(T[A].clone());this.faceVertexUvs[d].push(E)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e,n,r,i,a,o,s,c={},l=[],u=[],h=Math.pow(10,4);for(n=0,r=this.vertices.length;n<r;n++)t=this.vertices[n],void 0===c[e=Math.round(t.x*h)+"_"+Math.round(t.y*h)+"_"+Math.round(t.z*h)]?(c[e]=n,l.push(this.vertices[n]),u[n]=l.length-1):u[n]=u[c[e]];var p=[];for(n=0,r=this.faces.length;n<r;n++){(i=this.faces[n]).a=u[i.a],i.b=u[i.b],i.c=u[i.c],a=[i.a,i.b,i.c];for(var d=0;d<3;d++)if(a[d]===a[(d+1)%3]){p.push(n);break}}for(n=p.length-1;n>=0;n--){var f=p[n];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var m=this.vertices.length-l.length;return this.vertices=l,m},setFromPoints:function(t){this.vertices=[];for(var e=0,n=t.length;e<n;e++){var r=t[e];this.vertices.push(new c.Vector3(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,n=0;n<e;n++)t[n]._id=n;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));var r,i,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===e&&(r=[]),o&&o.length===e&&(i=[]);for(n=0;n<e;n++){var s=t[n]._id;r&&r.push(a[s]),i&&i.push(o[s])}r&&(this.faceVertexUvs[0]=r),i&&(this.faceVertexUvs[1]=i)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var n in e)void 0!==e[n]&&(t[n]=e[n]);return t}for(var r=[],i=0;i<this.vertices.length;i++){var a=this.vertices[i];r.push(a.x,a.y,a.z)}var o=[],s=[],c={},l=[],u={},h=[],p={};for(i=0;i<this.faces.length;i++){var d=this.faces[i],f=void 0!==this.faceVertexUvs[0][i],m=d.normal.length()>0,v=d.vertexNormals.length>0,g=1!==d.color.r||1!==d.color.g||1!==d.color.b,y=d.vertexColors.length>0,_=0;if(_=w(_,0,0),_=w(_,1,!0),_=w(_,2,!1),_=w(_,3,f),_=w(_,4,m),_=w(_,5,v),_=w(_,6,g),_=w(_,7,y),o.push(_),o.push(d.a,d.b,d.c),o.push(d.materialIndex),f){var x=this.faceVertexUvs[0][i];o.push(E(x[0]),E(x[1]),E(x[2]))}if(m&&o.push(S(d.normal)),v){var b=d.vertexNormals;o.push(S(b[0]),S(b[1]),S(b[2]))}if(g&&o.push(T(d.color)),y){var M=d.vertexColors;o.push(T(M[0]),T(M[1]),T(M[2]))}}function w(t,e,n){return n?t|1<<e:t&~(1<<e)}function S(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==c[e]?c[e]:(c[e]=s.length/3,s.push(t.x,t.y,t.z),c[e])}function T(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==u[e]?u[e]:(u[e]=l.length,l.push(t.getHex()),u[e])}function E(t){var e=t.x.toString()+t.y.toString();return void 0!==p[e]?p[e]:(p[e]=h.length/2,h.push(t.x,t.y),p[e])}return t.data={},t.data.vertices=r,t.data.normals=s,l.length>0&&(t.data.colors=l),h.length>0&&(t.data.uvs=[h]),t.data.faces=o,t},clone:function(){return(new y).copy(this)},copy:function(t){var e,n,r,i,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,n=s.length;e<n;e++)this.vertices.push(s[e].clone());var c=t.colors;for(e=0,n=c.length;e<n;e++)this.colors.push(c[e].clone());var l=t.faces;for(e=0,n=l.length;e<n;e++)this.faces.push(l[e].clone());for(e=0,n=t.faceVertexUvs.length;e<n;e++){var u=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),r=0,i=u.length;r<i;r++){var h=u[r],p=[];for(a=0,o=h.length;a<o;a++){var d=h[a];p.push(d.clone())}this.faceVertexUvs[e].push(p)}}var f=t.morphTargets;for(e=0,n=f.length;e<n;e++){var m={};if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],r=0,i=f[e].vertices.length;r<i;r++)m.vertices.push(f[e].vertices[r].clone());if(void 0!==f[e].normals)for(m.normals=[],r=0,i=f[e].normals.length;r<i;r++)m.normals.push(f[e].normals[r].clone());this.morphTargets.push(m)}var v=t.morphNormals;for(e=0,n=v.length;e<n;e++){var g={};if(void 0!==v[e].vertexNormals)for(g.vertexNormals=[],r=0,i=v[e].vertexNormals.length;r<i;r++){var y=v[e].vertexNormals[r],_={};_.a=y.a.clone(),_.b=y.b.clone(),_.c=y.c.clone(),g.vertexNormals.push(_)}if(void 0!==v[e].faceNormals)for(g.faceNormals=[],r=0,i=v[e].faceNormals.length;r<i;r++)g.faceNormals.push(v[e].faceNormals[r].clone());this.morphNormals.push(g)}var x=t.skinWeights;for(e=0,n=x.length;e<n;e++)this.skinWeights.push(x[e].clone());var b=t.skinIndices;for(e=0,n=b.length;e<n;e++)this.skinIndices.push(b[e].clone());var M=t.lineDistances;for(e=0,n=M.length;e<n;e++)this.lineDistances.push(M[e]);var w=t.boundingBox;null!==w&&(this.boundingBox=w.clone());var S=t.boundingSphere;return null!==S&&(this.boundingSphere=S.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}})},110:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(29);function i(t,e,n,i){r.a.call(this,t,e,n,i)}i.prototype=Object.assign(Object.create(r.a.prototype),{constructor:i,ValueTypeName:"vector"})},111:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(52),i=n(13);function a(t){r.a.call(this,t),this.uuid=i._Math.generateUUID(),this.type="Shape",this.holes=[]}a.prototype=Object.assign(Object.create(r.a.prototype),{constructor:a,getPointsHoles:function(t){for(var e=[],n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){r.a.prototype.copy.call(this,t),this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){var t=r.a.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,n=this.holes.length;e<n;e++){var i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){r.a.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push((new r.a).fromJSON(i))}return this}})},112:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}}},113:function(t,e,n){"use strict";n.r(e);var r=n(95);function i(t,e,n,i,a,o){r.a.call(this,t,e,n,n,i,a,o),this.type="ArcCurve"}i.prototype=Object.create(r.a.prototype),i.prototype.constructor=i,i.prototype.isArcCurve=!0;var a=n(217),o=n(162),s=n(12),c=n(35),l=n(1);function u(t,e,n,r){s.a.call(this),this.type="CubicBezierCurve3",this.v0=t||new l.Vector3,this.v1=e||new l.Vector3,this.v2=n||new l.Vector3,this.v3=r||new l.Vector3}u.prototype=Object.create(s.a.prototype),u.prototype.constructor=u,u.prototype.isCubicBezierCurve3=!0,u.prototype.getPoint=function(t,e){var n=e||new l.Vector3,r=this.v0,i=this.v1,a=this.v2,o=this.v3;return n.set(Object(c.b)(t,r.x,i.x,a.x,o.x),Object(c.b)(t,r.y,i.y,a.y,o.y),Object(c.b)(t,r.z,i.z,a.z,o.z)),n},u.prototype.copy=function(t){return s.a.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},u.prototype.toJSON=function(){var t=s.a.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},u.prototype.fromJSON=function(t){return s.a.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};var h=n(163);function p(t,e){s.a.call(this),this.type="LineCurve3",this.v1=t||new l.Vector3,this.v2=e||new l.Vector3}p.prototype=Object.create(s.a.prototype),p.prototype.constructor=p,p.prototype.isLineCurve3=!0,p.prototype.getPoint=function(t,e){var n=e||new l.Vector3;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},p.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},p.prototype.copy=function(t){return s.a.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},p.prototype.toJSON=function(){var t=s.a.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},p.prototype.fromJSON=function(t){return s.a.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};var d=n(164);function f(t,e,n){s.a.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new l.Vector3,this.v1=e||new l.Vector3,this.v2=n||new l.Vector3}f.prototype=Object.create(s.a.prototype),f.prototype.constructor=f,f.prototype.isQuadraticBezierCurve3=!0,f.prototype.getPoint=function(t,e){var n=e||new l.Vector3,r=this.v0,i=this.v1,a=this.v2;return n.set(Object(c.c)(t,r.x,i.x,a.x),Object(c.c)(t,r.y,i.y,a.y),Object(c.c)(t,r.z,i.z,a.z)),n},f.prototype.copy=function(t){return s.a.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},f.prototype.toJSON=function(){var t=s.a.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},f.prototype.fromJSON=function(t){return s.a.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};var m=n(165);n.d(e,"ArcCurve",(function(){return i})),n.d(e,"CatmullRomCurve3",(function(){return a.CatmullRomCurve3})),n.d(e,"CubicBezierCurve",(function(){return o.a})),n.d(e,"CubicBezierCurve3",(function(){return u})),n.d(e,"EllipseCurve",(function(){return r.a})),n.d(e,"LineCurve",(function(){return h.a})),n.d(e,"LineCurve3",(function(){return p})),n.d(e,"QuadraticBezierCurve",(function(){return d.a})),n.d(e,"QuadraticBezierCurve3",(function(){return f})),n.d(e,"SplineCurve",(function(){return m.a}))},12:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(13),i=n(1),a=n(15);function o(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(o.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,n,r=[],i=this.getPoint(0),a=0;for(r.push(0),n=1;n<=t;n++)a+=(e=this.getPoint(n/t)).distanceTo(i),r.push(a),i=e;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var n,r=this.getLengths(),i=0,a=r.length;n=e||t*r[a-1];for(var o,s=0,c=a-1;s<=c;)if((o=r[i=Math.floor(s+(c-s)/2)]-n)<0)s=i+1;else{if(!(o>0)){c=i;break}c=i-1}if(r[i=c]===n)return i/(a-1);var l=r[i];return(i+(n-l)/(r[i+1]-l))/(a-1)},getTangent:function(t){var e=t-1e-4,n=t+1e-4;e<0&&(e=0),n>1&&(n=1);var r=this.getPoint(e);return this.getPoint(n).clone().sub(r).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var n,o,s,c=new i.Vector3,l=[],u=[],h=[],p=new i.Vector3,d=new a.Matrix4;for(n=0;n<=t;n++)o=n/t,l[n]=this.getTangentAt(o),l[n].normalize();u[0]=new i.Vector3,h[0]=new i.Vector3;var f=Number.MAX_VALUE,m=Math.abs(l[0].x),v=Math.abs(l[0].y),g=Math.abs(l[0].z);for(m<=f&&(f=m,c.set(1,0,0)),v<=f&&(f=v,c.set(0,1,0)),g<=f&&c.set(0,0,1),p.crossVectors(l[0],c).normalize(),u[0].crossVectors(l[0],p),h[0].crossVectors(l[0],u[0]),n=1;n<=t;n++)u[n]=u[n-1].clone(),h[n]=h[n-1].clone(),p.crossVectors(l[n-1],l[n]),p.length()>Number.EPSILON&&(p.normalize(),s=Math.acos(r._Math.clamp(l[n-1].dot(l[n]),-1,1)),u[n].applyMatrix4(d.makeRotationAxis(p,s))),h[n].crossVectors(l[n],u[n]);if(!0===e)for(s=Math.acos(r._Math.clamp(u[0].dot(u[t]),-1,1)),s/=t,l[0].dot(p.crossVectors(u[0],u[t]))>0&&(s=-s),n=1;n<=t;n++)u[n].applyMatrix4(d.makeRotationAxis(l[n],s*n)),h[n].crossVectors(l[n],u[n]);return{tangents:l,normals:u,binormals:h}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}})},121:function(t,e,n){"use strict";n.r(e),n.d(e,"SkinnedMesh",(function(){return o}));var r=n(23),i=n(15),a=n(17);function o(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),r.Mesh.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new i.Matrix4,this.bindMatrixInverse=new i.Matrix4}o.prototype=Object.assign(Object.create(r.Mesh.prototype),{constructor:o,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var t=new a.Vector4,e=this.geometry.attributes.skinWeight,n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);var i=1/t.manhattanLength();i!==1/0?t.multiplyScalar(i):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){r.Mesh.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}})},122:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(6),i=n(1);function a(t,e,n,a,o,s){this.a=t,this.b=e,this.c=n,this.normal=a&&a.isVector3?a:new i.Vector3,this.vertexNormals=Array.isArray(a)?a:[],this.color=o&&o.isColor?o:new r.Color,this.vertexColors=Array.isArray(o)?o:[],this.materialIndex=void 0!==s?s:0}Object.assign(a.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}})},123:function(t,e,n){"use strict";var r=n(0),i=n(29),a=n(40),o=n(31);function s(t,e,n,r){a.a.call(this,t,e,n,r)}function c(t,e,n,r){i.a.call(this,t,e,n,r)}s.prototype=Object.assign(Object.create(a.a.prototype),{constructor:s,interpolate_:function(t,e,n,r){for(var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,c=t*s,l=(n-e)/(r-e),u=c+s;c!==u;c+=4)o.Quaternion.slerpFlat(i,0,a,c-s,a,c,l);return i}}),n.d(e,"a",(function(){return c})),c.prototype=Object.assign(Object.create(i.a.prototype),{constructor:c,ValueTypeName:"quaternion",DefaultInterpolation:r.InterpolateLinear,InterpolantFactoryMethodLinear:function(t){return new s(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0})},13:function(t,e,n){"use strict";n.r(e),n.d(e,"_Math",(function(){return a}));for(var r=[],i=0;i<256;i++)r[i]=(i<16?"0":"")+i.toString(16);var a={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(r[255&t]+r[t>>8&255]+r[t>>16&255]+r[t>>24&255]+"-"+r[255&e]+r[e>>8&255]+"-"+r[e>>16&15|64]+r[e>>24&255]+"-"+r[63&n|128]+r[n>>8&255]+"-"+r[n>>16&255]+r[n>>24&255]+r[255&i]+r[i>>8&255]+r[i>>16&255]+r[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*a.DEG2RAD},radToDeg:function(t){return t*a.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}}},15:function(t,e,n){"use strict";n.r(e),n.d(e,"Matrix4",(function(){return h}));var r=n(1),i=new r.Vector3,a=new h,o=new r.Vector3(0,0,0),s=new r.Vector3(1,1,1),c=new r.Vector3,l=new r.Vector3,u=new r.Vector3;function h(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(h.prototype,{isMatrix4:!0,set:function(t,e,n,r,i,a,o,s,c,l,u,h,p,d,f,m){var v=this.elements;return v[0]=t,v[4]=e,v[8]=n,v[12]=r,v[1]=i,v[5]=a,v[9]=o,v[13]=s,v[2]=c,v[6]=l,v[10]=u,v[14]=h,v[3]=p,v[7]=d,v[11]=f,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new h).fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){var e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(t){var e=this.elements,n=t.elements,r=1/i.setFromMatrixColumn(t,0).length(),a=1/i.setFromMatrixColumn(t,1).length(),o=1/i.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*a,e[5]=n[5]*a,e[6]=n[6]*a,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,n=t.x,r=t.y,i=t.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),c=Math.sin(r),l=Math.cos(i),u=Math.sin(i);if("XYZ"===t.order){var h=a*l,p=a*u,d=o*l,f=o*u;e[0]=s*l,e[4]=-s*u,e[8]=c,e[1]=p+d*c,e[5]=h-f*c,e[9]=-o*s,e[2]=f-h*c,e[6]=d+p*c,e[10]=a*s}else if("YXZ"===t.order){var m=s*l,v=s*u,g=c*l,y=c*u;e[0]=m+y*o,e[4]=g*o-v,e[8]=a*c,e[1]=a*u,e[5]=a*l,e[9]=-o,e[2]=v*o-g,e[6]=y+m*o,e[10]=a*s}else if("ZXY"===t.order){m=s*l,v=s*u,g=c*l,y=c*u;e[0]=m-y*o,e[4]=-a*u,e[8]=g+v*o,e[1]=v+g*o,e[5]=a*l,e[9]=y-m*o,e[2]=-a*c,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){h=a*l,p=a*u,d=o*l,f=o*u;e[0]=s*l,e[4]=d*c-p,e[8]=h*c+f,e[1]=s*u,e[5]=f*c+h,e[9]=p*c-d,e[2]=-c,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var _=a*s,x=a*c,b=o*s,M=o*c;e[0]=s*l,e[4]=M-_*u,e[8]=b*u+x,e[1]=u,e[5]=a*l,e[9]=-o*l,e[2]=-c*l,e[6]=x*u+b,e[10]=_-M*u}else if("XZY"===t.order){_=a*s,x=a*c,b=o*s,M=o*c;e[0]=s*l,e[4]=-u,e[8]=c*l,e[1]=_*u+M,e[5]=a*l,e[9]=x*u-b,e[2]=b*u-x,e[6]=o*l,e[10]=M*u+_}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(o,t,s)},lookAt:function(t,e,n){var r=this.elements;return u.subVectors(t,e),0===u.lengthSq()&&(u.z=1),u.normalize(),c.crossVectors(n,u),0===c.lengthSq()&&(1===Math.abs(n.z)?u.x+=1e-4:u.z+=1e-4,u.normalize(),c.crossVectors(n,u)),c.normalize(),l.crossVectors(u,c),r[0]=c.x,r[4]=l.x,r[8]=u.x,r[1]=c.y,r[5]=l.y,r[9]=u.y,r[2]=c.z,r[6]=l.z,r[10]=u.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,r=e.elements,i=this.elements,a=n[0],o=n[4],s=n[8],c=n[12],l=n[1],u=n[5],h=n[9],p=n[13],d=n[2],f=n[6],m=n[10],v=n[14],g=n[3],y=n[7],_=n[11],x=n[15],b=r[0],M=r[4],w=r[8],S=r[12],T=r[1],E=r[5],A=r[9],L=r[13],R=r[2],C=r[6],P=r[10],N=r[14],D=r[3],I=r[7],O=r[11],F=r[15];return i[0]=a*b+o*T+s*R+c*D,i[4]=a*M+o*E+s*C+c*I,i[8]=a*w+o*A+s*P+c*O,i[12]=a*S+o*L+s*N+c*F,i[1]=l*b+u*T+h*R+p*D,i[5]=l*M+u*E+h*C+p*I,i[9]=l*w+u*A+h*P+p*O,i[13]=l*S+u*L+h*N+p*F,i[2]=d*b+f*T+m*R+v*D,i[6]=d*M+f*E+m*C+v*I,i[10]=d*w+f*A+m*P+v*O,i[14]=d*S+f*L+m*N+v*F,i[3]=g*b+y*T+_*R+x*D,i[7]=g*M+y*E+_*C+x*I,i[11]=g*w+y*A+_*P+x*O,i[15]=g*S+y*L+_*N+x*F,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(t){for(var e=0,n=t.count;e<n;e++)i.x=t.getX(e),i.y=t.getY(e),i.z=t.getZ(e),i.applyMatrix4(this),t.setXYZ(e,i.x,i.y,i.z);return t},determinant:function(){var t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],a=t[1],o=t[5],s=t[9],c=t[13],l=t[2],u=t[6],h=t[10],p=t[14];return t[3]*(+i*s*u-r*c*u-i*o*h+n*c*h+r*o*p-n*s*p)+t[7]*(+e*s*p-e*c*h+i*a*h-r*a*p+r*c*l-i*s*l)+t[11]*(+e*c*u-e*o*p-i*a*u+n*a*p+i*o*l-n*c*l)+t[15]*(-r*o*l-e*s*u+e*o*h+r*a*u-n*a*h+n*s*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t,e,n){var r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this},getInverse:function(t,e){var n=this.elements,r=t.elements,i=r[0],a=r[1],o=r[2],s=r[3],c=r[4],l=r[5],u=r[6],h=r[7],p=r[8],d=r[9],f=r[10],m=r[11],v=r[12],g=r[13],y=r[14],_=r[15],x=d*y*h-g*f*h+g*u*m-l*y*m-d*u*_+l*f*_,b=v*f*h-p*y*h-v*u*m+c*y*m+p*u*_-c*f*_,M=p*g*h-v*d*h+v*l*m-c*g*m-p*l*_+c*d*_,w=v*d*u-p*g*u-v*l*f+c*g*f+p*l*y-c*d*y,S=i*x+a*b+o*M+s*w;if(0===S){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var E=1/S;return n[0]=x*E,n[1]=(g*f*s-d*y*s-g*o*m+a*y*m+d*o*_-a*f*_)*E,n[2]=(l*y*s-g*u*s+g*o*h-a*y*h-l*o*_+a*u*_)*E,n[3]=(d*u*s-l*f*s-d*o*h+a*f*h+l*o*m-a*u*m)*E,n[4]=b*E,n[5]=(p*y*s-v*f*s+v*o*m-i*y*m-p*o*_+i*f*_)*E,n[6]=(v*u*s-c*y*s-v*o*h+i*y*h+c*o*_-i*u*_)*E,n[7]=(c*f*s-p*u*s+p*o*h-i*f*h-c*o*m+i*u*m)*E,n[8]=M*E,n[9]=(v*d*s-p*g*s-v*a*m+i*g*m+p*a*_-i*d*_)*E,n[10]=(c*g*s-v*l*s+v*a*h-i*g*h-c*a*_+i*l*_)*E,n[11]=(p*l*s-c*d*s-p*a*h+i*d*h+c*a*m-i*l*m)*E,n[12]=w*E,n[13]=(p*g*o-v*d*o+v*a*f-i*g*f-p*a*y+i*d*y)*E,n[14]=(v*l*o-c*g*o-v*a*u+i*g*u+c*a*y-i*l*y)*E,n[15]=(c*d*o-p*l*o+p*a*u-i*d*u-c*a*f+i*l*f)*E,this},scale:function(t){var e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=Math.cos(e),r=Math.sin(e),i=1-n,a=t.x,o=t.y,s=t.z,c=i*a,l=i*o;return this.set(c*a+n,c*o-r*s,c*s+r*o,0,c*o+r*s,l*o+n,l*s-r*a,0,c*s-r*o,l*s+r*a,i*s*s+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){var r=this.elements,i=e._x,a=e._y,o=e._z,s=e._w,c=i+i,l=a+a,u=o+o,h=i*c,p=i*l,d=i*u,f=a*l,m=a*u,v=o*u,g=s*c,y=s*l,_=s*u,x=n.x,b=n.y,M=n.z;return r[0]=(1-(f+v))*x,r[1]=(p+_)*x,r[2]=(d-y)*x,r[3]=0,r[4]=(p-_)*b,r[5]=(1-(h+v))*b,r[6]=(m+g)*b,r[7]=0,r[8]=(d+y)*M,r[9]=(m-g)*M,r[10]=(1-(h+f))*M,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this},decompose:function(t,e,n){var r=this.elements,o=i.set(r[0],r[1],r[2]).length(),s=i.set(r[4],r[5],r[6]).length(),c=i.set(r[8],r[9],r[10]).length();this.determinant()<0&&(o=-o),t.x=r[12],t.y=r[13],t.z=r[14],a.copy(this);var l=1/o,u=1/s,h=1/c;return a.elements[0]*=l,a.elements[1]*=l,a.elements[2]*=l,a.elements[4]*=u,a.elements[5]*=u,a.elements[6]*=u,a.elements[8]*=h,a.elements[9]*=h,a.elements[10]*=h,e.setFromRotationMatrix(a),n.x=o,n.y=s,n.z=c,this},makePerspective:function(t,e,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*i/(e-t),c=2*i/(n-r),l=(e+t)/(e-t),u=(n+r)/(n-r),h=-(a+i)/(a-i),p=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=h,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,n,r,i,a){var o=this.elements,s=1/(e-t),c=1/(n-r),l=1/(a-i),u=(e+t)*s,h=(n+r)*c,p=(a+i)*l;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-h,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,n=t.elements,r=0;r<16;r++)if(e[r]!==n[r])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var n=0;n<16;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}})},151:function(t,e,n){"use strict";n.r(e),n.d(e,"IcosahedronGeometry",(function(){return a})),n.d(e,"IcosahedronBufferGeometry",(function(){return o}));var r=n(11),i=n(39);function a(t,e){r.a.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new o(t,e)),this.mergeVertices()}function o(t,e){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1];i.a.call(this,r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,o.prototype=Object.create(i.a.prototype),o.prototype.constructor=o},152:function(t,e,n){"use strict";n.r(e),n.d(e,"TorusKnotGeometry",(function(){return s})),n.d(e,"TorusKnotBufferGeometry",(function(){return c}));var r=n(11),i=n(5),a=n(4),o=n(1);function s(t,e,n,i,a,o,s){r.a.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:a,q:o},void 0!==s&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new c(t,e,n,i,a,o)),this.mergeVertices()}function c(t,e,n,r,s,c){i.BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:s,q:c},t=t||1,e=e||.4,n=Math.floor(n)||64,r=Math.floor(r)||8,s=s||2,c=c||3;var l,u,h=[],p=[],d=[],f=[],m=new o.Vector3,v=new o.Vector3,g=new o.Vector3,y=new o.Vector3,_=new o.Vector3,x=new o.Vector3,b=new o.Vector3;for(l=0;l<=n;++l){var M=l/n*s*Math.PI*2;for(C(M,s,c,t,g),C(M+.01,s,c,t,y),x.subVectors(y,g),b.addVectors(y,g),_.crossVectors(x,b),b.crossVectors(_,x),_.normalize(),b.normalize(),u=0;u<=r;++u){var w=u/r*Math.PI*2,S=-e*Math.cos(w),T=e*Math.sin(w);m.x=g.x+(S*b.x+T*_.x),m.y=g.y+(S*b.y+T*_.y),m.z=g.z+(S*b.z+T*_.z),p.push(m.x,m.y,m.z),v.subVectors(m,g).normalize(),d.push(v.x,v.y,v.z),f.push(l/n),f.push(u/r)}}for(u=1;u<=n;u++)for(l=1;l<=r;l++){var E=(r+1)*(u-1)+(l-1),A=(r+1)*u+(l-1),L=(r+1)*u+l,R=(r+1)*(u-1)+l;h.push(E,A,R),h.push(A,L,R)}function C(t,e,n,r,i){var a=Math.cos(t),o=Math.sin(t),s=n/e*t,c=Math.cos(s);i.x=r*(2+c)*.5*a,i.y=r*(2+c)*o*.5,i.z=r*Math.sin(s)*.5}this.setIndex(h),this.setAttribute("position",new a.Float32BufferAttribute(p,3)),this.setAttribute("normal",new a.Float32BufferAttribute(d,3)),this.setAttribute("uv",new a.Float32BufferAttribute(f,2))}s.prototype=Object.create(r.a.prototype),s.prototype.constructor=s,c.prototype=Object.create(i.BufferGeometry.prototype),c.prototype.constructor=c},153:function(t,e,n){"use strict";n.r(e),n.d(e,"TorusGeometry",(function(){return s})),n.d(e,"TorusBufferGeometry",(function(){return c}));var r=n(11),i=n(5),a=n(4),o=n(1);function s(t,e,n,i,a){r.a.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:a},this.fromBufferGeometry(new c(t,e,n,i,a)),this.mergeVertices()}function c(t,e,n,r,s){i.BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:r,arc:s},t=t||1,e=e||.4,n=Math.floor(n)||8,r=Math.floor(r)||6,s=s||2*Math.PI;var c,l,u=[],h=[],p=[],d=[],f=new o.Vector3,m=new o.Vector3,v=new o.Vector3;for(c=0;c<=n;c++)for(l=0;l<=r;l++){var g=l/r*s,y=c/n*Math.PI*2;m.x=(t+e*Math.cos(y))*Math.cos(g),m.y=(t+e*Math.cos(y))*Math.sin(g),m.z=e*Math.sin(y),h.push(m.x,m.y,m.z),f.x=t*Math.cos(g),f.y=t*Math.sin(g),v.subVectors(m,f).normalize(),p.push(v.x,v.y,v.z),d.push(l/r),d.push(c/n)}for(c=1;c<=n;c++)for(l=1;l<=r;l++){var _=(r+1)*c+l-1,x=(r+1)*(c-1)+l-1,b=(r+1)*(c-1)+l,M=(r+1)*c+l;u.push(_,x,M),u.push(x,b,M)}this.setIndex(u),this.setAttribute("position",new a.Float32BufferAttribute(h,3)),this.setAttribute("normal",new a.Float32BufferAttribute(p,3)),this.setAttribute("uv",new a.Float32BufferAttribute(d,2))}s.prototype=Object.create(r.a.prototype),s.prototype.constructor=s,c.prototype=Object.create(i.BufferGeometry.prototype),c.prototype.constructor=c},154:function(t,e,n){"use strict";n.r(e),n.d(e,"TextGeometry",(function(){return a})),n.d(e,"TextBufferGeometry",(function(){return o}));var r=n(11),i=n(106);function a(t,e){r.a.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new o(t,e)),this.mergeVertices()}function o(t,e){var n=(e=e||{}).font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new r.a;var a=n.generateShapes(t,e.size);e.depth=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),i.a.call(this,a,e),this.type="TextBufferGeometry"}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,o.prototype=Object.create(i.a.prototype),o.prototype.constructor=o},155:function(t,e,n){"use strict";n.r(e),n.d(e,"SphereGeometry",(function(){return s})),n.d(e,"SphereBufferGeometry",(function(){return c}));var r=n(11),i=n(5),a=n(4),o=n(1);function s(t,e,n,i,a,o,s){r.a.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new c(t,e,n,i,a,o,s)),this.mergeVertices()}function c(t,e,n,r,s,c,l){i.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:s,thetaStart:c,thetaLength:l},t=t||1,e=Math.max(3,Math.floor(e)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,s=void 0!==s?s:2*Math.PI,c=void 0!==c?c:0,l=void 0!==l?l:Math.PI;var u,h,p=Math.min(c+l,Math.PI),d=0,f=[],m=new o.Vector3,v=new o.Vector3,g=[],y=[],_=[],x=[];for(h=0;h<=n;h++){var b=[],M=h/n,w=0;for(0==h&&0==c?w=.5/e:h==n&&p==Math.PI&&(w=-.5/e),u=0;u<=e;u++){var S=u/e;m.x=-t*Math.cos(r+S*s)*Math.sin(c+M*l),m.y=t*Math.cos(c+M*l),m.z=t*Math.sin(r+S*s)*Math.sin(c+M*l),y.push(m.x,m.y,m.z),v.copy(m).normalize(),_.push(v.x,v.y,v.z),x.push(S+w,1-M),b.push(d++)}f.push(b)}for(h=0;h<n;h++)for(u=0;u<e;u++){var T=f[h][u+1],E=f[h][u],A=f[h+1][u],L=f[h+1][u+1];(0!==h||c>0)&&g.push(T,E,L),(h!==n-1||p<Math.PI)&&g.push(E,A,L)}this.setIndex(g),this.setAttribute("position",new a.Float32BufferAttribute(y,3)),this.setAttribute("normal",new a.Float32BufferAttribute(_,3)),this.setAttribute("uv",new a.Float32BufferAttribute(x,2))}s.prototype=Object.create(r.a.prototype),s.prototype.constructor=s,c.prototype=Object.create(i.BufferGeometry.prototype),c.prototype.constructor=c},156:function(t,e,n){"use strict";n.r(e),n.d(e,"ShapeGeometry",(function(){return s})),n.d(e,"ShapeBufferGeometry",(function(){return c}));var r=n(11),i=n(5),a=n(4),o=n(71);function s(t,e){r.a.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new c(t,e)),this.mergeVertices()}function c(t,e){i.BufferGeometry.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var n=[],r=[],s=[],c=[],l=0,u=0;if(!1===Array.isArray(t))p(t);else for(var h=0;h<t.length;h++)p(t[h]),this.addGroup(l,u,h),l+=u,u=0;function p(t){var i,a,l,h=r.length/3,p=t.extractPoints(e),d=p.shape,f=p.holes;for(!1===o.a.isClockWise(d)&&(d=d.reverse()),i=0,a=f.length;i<a;i++)l=f[i],!0===o.a.isClockWise(l)&&(f[i]=l.reverse());var m=o.a.triangulateShape(d,f);for(i=0,a=f.length;i<a;i++)l=f[i],d=d.concat(l);for(i=0,a=d.length;i<a;i++){var v=d[i];r.push(v.x,v.y,0),s.push(0,0,1),c.push(v.x,v.y)}for(i=0,a=m.length;i<a;i++){var g=m[i],y=g[0]+h,_=g[1]+h,x=g[2]+h;n.push(y,_,x),u+=3}}this.setIndex(n),this.setAttribute("position",new a.Float32BufferAttribute(r,3)),this.setAttribute("normal",new a.Float32BufferAttribute(s,3)),this.setAttribute("uv",new a.Float32BufferAttribute(c,2))}function l(t,e){if(e.shapes=[],Array.isArray(t))for(var n=0,r=t.length;n<r;n++){var i=t[n];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}s.prototype=Object.create(r.a.prototype),s.prototype.constructor=s,s.prototype.toJSON=function(){var t=r.a.prototype.toJSON.call(this);return l(this.parameters.shapes,t)},c.prototype=Object.create(i.BufferGeometry.prototype),c.prototype.constructor=c,c.prototype.toJSON=function(){var t=i.BufferGeometry.prototype.toJSON.call(this);return l(this.parameters.shapes,t)}},157:function(t,e,n){"use strict";n.r(e),n.d(e,"CircleGeometry",(function(){return c})),n.d(e,"CircleBufferGeometry",(function(){return l}));var r=n(11),i=n(5),a=n(4),o=n(1),s=n(2);function c(t,e,n,i){r.a.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new l(t,e,n,i)),this.mergeVertices()}function l(t,e,n,r){i.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},t=t||1,e=void 0!==e?Math.max(3,e):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var c,l,u=[],h=[],p=[],d=[],f=new o.Vector3,m=new s.Vector2;for(h.push(0,0,0),p.push(0,0,1),d.push(.5,.5),l=0,c=3;l<=e;l++,c+=3){var v=n+l/e*r;f.x=t*Math.cos(v),f.y=t*Math.sin(v),h.push(f.x,f.y,f.z),p.push(0,0,1),m.x=(h[c]/t+1)/2,m.y=(h[c+1]/t+1)/2,d.push(m.x,m.y)}for(c=1;c<=e;c++)u.push(c,c+1,0);this.setIndex(u),this.setAttribute("position",new a.Float32BufferAttribute(h,3)),this.setAttribute("normal",new a.Float32BufferAttribute(p,3)),this.setAttribute("uv",new a.Float32BufferAttribute(d,2))}c.prototype=Object.create(r.a.prototype),c.prototype.constructor=c,l.prototype=Object.create(i.BufferGeometry.prototype),l.prototype.constructor=l},159:function(t,e,n){"use strict";n.r(e),n.d(e,"Euler",(function(){return l}));var r=n(31),i=n(1),a=n(15),o=n(13),s=new a.Matrix4,c=new r.Quaternion;function l(t,e,n,r){this._x=t||0,this._y=e||0,this._z=n||0,this._order=r||l.DefaultOrder}l.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],l.DefaultOrder="XYZ",Object.defineProperties(l.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this._onChangeCallback()}}}),Object.assign(l.prototype,{isEuler:!0,set:function(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._order=r||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this},setFromRotationMatrix:function(t,e,n){var r=o._Math.clamp,i=t.elements,a=i[0],s=i[4],c=i[8],l=i[1],u=i[5],h=i[9],p=i[2],d=i[6],f=i[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(d,u),this._z=0)):"YXZ"===e?(this._x=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(c,f),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-p,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-p,f),this._z=Math.atan2(-s,u)):(this._y=0,this._z=Math.atan2(l,a))):"ZYX"===e?(this._y=Math.asin(-r(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,u))):"YZX"===e?(this._z=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,u),this._y=Math.atan2(-p,a)):(this._x=0,this._y=Math.atan2(c,f))):"XZY"===e?(this._z=Math.asin(-r(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(d,u),this._y=Math.atan2(c,a)):(this._x=Math.atan2(-h,f),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==n&&this._onChangeCallback(),this},setFromQuaternion:function(t,e,n){return s.makeRotationFromQuaternion(t),this.setFromRotationMatrix(s,e,n)},setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(t){return c.setFromEuler(this),this.setFromQuaternion(c,t)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new i.Vector3(this._x,this._y,this._z)},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}})},16:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r={alphamap_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",alphamap_pars_fragment:"\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",alphatest_fragment:"\n#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",aomap_fragment:"\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\n\t#endif\n\n#endif\n",aomap_pars_fragment:"\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n",bsdfs:'\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via \'environmentBRDF\' from "Physically Based Shading on Mobile"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n}\n\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t// page 32, equation 26: E[window1]\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t// this is intended to be used on spot and point lights who are represented as luminous intensity\n\t// but who must be converted to luminous irradiance for surface lighting calculation\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\tif( cutoffDistance > 0.0 ) {\n\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t}\n\n\treturn distanceFalloff;\n\n#else\n\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n#endif\n\n}\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t// float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\n\t// See F_Schlick\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\n\treturn Fr * fresnel + F0;\n\n}\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term (normalized) = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\t// also see #12151\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\t// dotNL and dotNV are explicitly swapped. This is not a mistake.\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\n\treturn specularColor * brdf.x + brdf.y;\n\n} // validated\n\n// Fdez-Agüera\'s "Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\n\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L94\nfloat D_Charlie(float roughness, float NoH) {\n\t// Estevez and Kulla 2017, "Production Friendly Microfacet Sheen BRDF"\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs#L136\nfloat V_Neubelt(float NoV, float NoL) {\n\t// Neubelt and Pettineo 2013, "Crafting a Next-gen Material Pipeline for The Order: 1886"\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\n\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n\n}\n\n#endif\n',bumpmap_pars_fragment:"\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",clipping_planes_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n",clipping_planes_pars_fragment:"\n#if NUM_CLIPPING_PLANES > 0\n\n\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n",clipping_planes_pars_vertex:"\n#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"\n#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"\n#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n",color_pars_fragment:"\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",color_pars_vertex:"\n#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",color_vertex:"\n#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif\n",common:"\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n  return m[ 2 ][ 3 ] == - 1.0;\n\n}\n",cube_uv_reflection_fragment:"\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\n\n// These shader functions convert between the UV coordinates of a single face of\n// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n// sampling a textureCube (not generally normalized).\n\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\n\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\n\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n\n// These defines must match with PMREMGenerator\n\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\n\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);// 1.16 = 1.79^0.25\n  }\n  return mip;\n}\n\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif\n",defaultnormal_vertex:"\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n",displacementmap_pars_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",displacementmap_vertex:"\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n",emissivemap_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n",emissivemap_pars_fragment:"\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",encodings_fragment:"\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\n// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\n\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\n\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\n\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\n\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\n\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\n\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\n\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\n\n// M matrix, for encoding\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\n\n// Inverse M matrix, for decoding\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}\n",envmap_fragment:"\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t}  else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ), 0.0 );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\tvec2 sampleUV;\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\treflectVec = normalize( reflectVec );\n\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\n\t\tenvColor = envMapTexelToLinear( envColor );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",envmap_common_pars_fragment:"\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n",envmap_pars_fragment:"\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n",envmap_pars_vertex:"\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n",envmap_physical_pars_fragment:"\n#if defined( USE_ENVMAP )\n\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\n\tvec3 getLightProbeIndirectIrradiance( /*const in SpecularLightProbe specularLightProbe,*/ const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\n\t\t#else\n\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\n\t\t#endif\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// Trowbridge-Reitz distribution to Mip level, following the logic of http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance( /*const in SpecularLightProbe specularLightProbe,*/ const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\n\t\t  // Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t#else\n\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\n\t\t#endif\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n",envmap_vertex:"\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) { \n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\n\n\tfogDepth = -mvPosition.z;\n\n#endif\n",fog_pars_vertex:"\n#ifdef USE_FOG\n\n\tvarying float fogDepth;\n\n#endif\n",fog_fragment:"\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n",fog_pars_fragment:"\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n",gradientmap_pars_fragment:"\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n\n",lightmap_fragment:"\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n",lightmap_pars_fragment:"\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n",lights_lambert_vertex:"\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\n#endif\n\n/*\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\t// TODO (abelnation): implement\n\n\t}\n\n#endif\n*/\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\n#endif\n",lights_pars_begin:"\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI;\n\n\t#endif\n\n\treturn irradiance;\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// directLight is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( angleCos > spotLight.coneCos ) {\n\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tirradiance *= PI;\n\n\t\t#endif\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n",lights_toon_fragment:"\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_toon_pars_fragment:"\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct ToonMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n",lights_phong_fragment:"\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n\n#ifdef REFLECTIVITY\n\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\n#endif\n\n#ifdef CLEARCOAT\n\n\tmaterial.clearcoat = saturate( clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheen;\n\n#endif\n",lights_physical_pars_fragment:"\nstruct PhysicalMaterial {\n\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n\n};\n\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n// Clear coat directional hemishperical reflectance (this approximation should be improved)\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\tirradiance *= PI; // punctual light\n\n\t#endif\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tccIrradiance *= PI; // punctual light\n\n\t\t#endif\n\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef CLEARCOAT\n\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\n\t#else\n\n\t\tfloat clearcoatDHR = 0.0;\n\n\t#endif\n\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n",lights_fragment_begin:"\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n",lights_fragment_maps:"\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\n\t\t\tlightMapIrradiance *= PI; // factor of PI should not be present; included here to prevent breakage\n\n\t\t#endif\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( /*lightProbe,*/ geometry, maxMipLevel );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\n\t#ifdef CLEARCOAT\n\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( /*specularLightProbe,*/ geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\n\t#endif\n\n#endif\n",lights_fragment_end:"\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n",logdepthbuf_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n",logdepthbuf_pars_fragment:"\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n",logdepthbuf_pars_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n",logdepthbuf_vertex:"\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n",map_fragment:"\n#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n\n#endif\n",map_pars_fragment:"\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n",map_particle_fragment:"\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n",map_particle_pars_fragment:"\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",metalnessmap_fragment:"\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n",metalnessmap_pars_fragment:"\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n",morphnormal_vertex:"\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n#endif\n",morphtarget_pars_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif\n",morphtarget_vertex:"\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",normal_fragment_begin:"\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n",normal_fragment_maps:"\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n",normalmap_pars_fragment:"\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tmat3 tsn = mat3( S, T, N );\n\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",clearcoat_normal_fragment_begin:"\n#ifdef CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n",clearcoat_normal_fragment_maps:"\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\n\t#endif\n\n#endif\n",clearcoat_normalmap_pars_fragment:"\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n",packing:"\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n",project_vertex:"\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n",dithering_pars_fragment:"\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n",roughnessmap_fragment:"\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n",roughnessmap_pars_fragment:"\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n",shadowmap_pars_fragment:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n\t\tvec2 f = fract( uv * size + 0.5 );\n\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\n\t\treturn c;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n",shadowmap_pars_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n",shadowmap_vertex:"\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n",shadowmask_pars_fragment:"\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLight directionalLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLight spotLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLight pointLight;\n\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n",skinbase_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n",skinning_pars_vertex:"\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",skinning_vertex:"\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n",skinnormal_vertex:"\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n",specularmap_fragment:"\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n",specularmap_pars_fragment:"\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n",tonemapping_fragment:"\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n",tonemapping_pars_fragment:"\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\n\t// John Hable's filmic operator from Uncharted 2 video game\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n\n}\n\n// source: http://filmicgames.com/archives/75\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n\n}\n",uv_pars_fragment:"\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n",uv_pars_vertex:"\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n",uv_vertex:"\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n",uv2_pars_fragment:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n",uv2_pars_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n",uv2_vertex:"\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n",worldpos_vertex:"\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n",background_frag:"\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tvec4 texColor = texture2D( t2D, vUv );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",background_vert:"\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n",cube_frag:"\n\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",cube_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n",depth_frag:"\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\n\t#endif\n\n}\n",depth_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n}\n",distanceRGBA_frag:"\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n",distanceRGBA_vert:"\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n",equirect_frag:"\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV;\n\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\n\tgl_FragColor = mapTexelToLinear( texColor );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n",equirect_vert:"\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n",linedashed_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",linedashed_vert:"\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\n\tvLineDistance = scale * lineDistance;\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n",meshbasic_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",meshbasic_vert:"\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_ENVMAP\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshlambert_frag:"\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshmatcap_frag:"\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( 1.0 );\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",meshmatcap_vert:"\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\t\tvNormal = normalize( transformedNormal );\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n",meshtoon_frag:"\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshtoon_vert:"\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshphong_frag:"\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphong_vert:"\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",meshphysical_frag:"\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t// this is a stub for the transparency model\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n",meshphysical_vert:"\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",normal_frag:"\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n}\n",normal_vert:"\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n",points_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",points_vert:"\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n",shadow_frag:"\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <fog_fragment>\n\n}\n",shadow_vert:"\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n",sprite_frag:"\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n",sprite_vert:"\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n"}},160:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(8),i=n(0);function a(t){r.a.call(this),this.type="MeshDepthMaterial",this.depthPacking=i.BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isMeshDepthMaterial=!0,a.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}},161:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(8),i=n(1);function a(t){r.a.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new i.Vector3,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isMeshDistanceMaterial=!0,a.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}},162:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(12),i=n(35),a=n(2);function o(t,e,n,i){r.a.call(this),this.type="CubicBezierCurve",this.v0=t||new a.Vector2,this.v1=e||new a.Vector2,this.v2=n||new a.Vector2,this.v3=i||new a.Vector2}o.prototype=Object.create(r.a.prototype),o.prototype.constructor=o,o.prototype.isCubicBezierCurve=!0,o.prototype.getPoint=function(t,e){var n=e||new a.Vector2,r=this.v0,o=this.v1,s=this.v2,c=this.v3;return n.set(Object(i.b)(t,r.x,o.x,s.x,c.x),Object(i.b)(t,r.y,o.y,s.y,c.y)),n},o.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},o.prototype.toJSON=function(){var t=r.a.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},o.prototype.fromJSON=function(t){return r.a.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},163:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(2),i=n(12);function a(t,e){i.a.call(this),this.type="LineCurve",this.v1=t||new r.Vector2,this.v2=e||new r.Vector2}a.prototype=Object.create(i.a.prototype),a.prototype.constructor=a,a.prototype.isLineCurve=!0,a.prototype.getPoint=function(t,e){var n=e||new r.Vector2;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},a.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},a.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},a.prototype.copy=function(t){return i.a.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},a.prototype.toJSON=function(){var t=i.a.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},a.prototype.fromJSON=function(t){return i.a.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},164:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(12),i=n(35),a=n(2);function o(t,e,n){r.a.call(this),this.type="QuadraticBezierCurve",this.v0=t||new a.Vector2,this.v1=e||new a.Vector2,this.v2=n||new a.Vector2}o.prototype=Object.create(r.a.prototype),o.prototype.constructor=o,o.prototype.isQuadraticBezierCurve=!0,o.prototype.getPoint=function(t,e){var n=e||new a.Vector2,r=this.v0,o=this.v1,s=this.v2;return n.set(Object(i.c)(t,r.x,o.x,s.x),Object(i.c)(t,r.y,o.y,s.y)),n},o.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},o.prototype.toJSON=function(){var t=r.a.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},o.prototype.fromJSON=function(t){return r.a.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},165:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(12),i=n(35),a=n(2);function o(t){r.a.call(this),this.type="SplineCurve",this.points=t||[]}o.prototype=Object.create(r.a.prototype),o.prototype.constructor=o,o.prototype.isSplineCurve=!0,o.prototype.getPoint=function(t,e){var n=e||new a.Vector2,r=this.points,o=(r.length-1)*t,s=Math.floor(o),c=o-s,l=r[0===s?s:s-1],u=r[s],h=r[s>r.length-2?r.length-1:s+1],p=r[s>r.length-3?r.length-1:s+2];return n.set(Object(i.a)(c,l.x,u.x,h.x,p.x),Object(i.a)(c,l.y,u.y,h.y,p.y)),n},o.prototype.copy=function(t){r.a.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(i.clone())}return this},o.prototype.toJSON=function(){var t=r.a.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var i=this.points[e];t.points.push(i.toArray())}return t},o.prototype.fromJSON=function(t){r.a.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push((new a.Vector2).fromArray(i))}return this}},166:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(0),i=n(8),a=n(2),o=n(6);function s(t){i.a.call(this),this.type="MeshPhongMaterial",this.color=new o.Color(16777215),this.specular=new o.Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new o.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=r.TangentSpaceNormalMap,this.normalScale=new a.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=r.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}s.prototype=Object.create(i.a.prototype),s.prototype.constructor=s,s.prototype.isMeshPhongMaterial=!0,s.prototype.copy=function(t){return i.a.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}},167:function(t,e,n){"use strict";function r(t){if(0===t.length)return-1/0;for(var e=t[0],n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}n.d(e,"a",(function(){return r}))},168:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(28),i=n(0);function a(t,e,n,a,o,s,c,l,u,h){t=void 0!==t?t:[],e=void 0!==e?e:i.CubeReflectionMapping,c=void 0!==c?c:i.RGBFormat,r.a.call(this,t,e,n,a,o,s,c,l,u,h),this.flipY=!1}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isCubeTexture=!0,Object.defineProperty(a.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}})},169:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(40);function i(t,e,n,i){r.a.call(this,t,e,n,i)}i.prototype=Object.assign(Object.create(r.a.prototype),{constructor:i,interpolate_:function(t,e,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,l=(n-e)/(r-e),u=1-l,h=0;h!==o;++h)i[h]=a[c+h]*u+a[s+h]*l;return i}})},17:function(t,e,n){"use strict";function r(t,e,n,r){this.x=t||0,this.y=e||0,this.z=n||0,this.w=void 0!==r?r:1}n.r(e),n.d(e,"Vector4",(function(){return r})),Object.defineProperties(r.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}}),Object.assign(r.prototype,{isVector4:!0,set:function(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,n=this.y,r=this.z,i=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*e+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*e+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*e+a[7]*n+a[11]*r+a[15]*i,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,n,r,i,a=t.elements,o=a[0],s=a[4],c=a[8],l=a[1],u=a[5],h=a[9],p=a[2],d=a[6],f=a[10];if(Math.abs(s-l)<.01&&Math.abs(c-p)<.01&&Math.abs(h-d)<.01){if(Math.abs(s+l)<.1&&Math.abs(c+p)<.1&&Math.abs(h+d)<.1&&Math.abs(o+u+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var m=(o+1)/2,v=(u+1)/2,g=(f+1)/2,y=(s+l)/4,_=(c+p)/4,x=(h+d)/4;return m>v&&m>g?m<.01?(n=0,r=.707106781,i=.707106781):(r=y/(n=Math.sqrt(m)),i=_/n):v>g?v<.01?(n=.707106781,r=0,i=.707106781):(n=y/(r=Math.sqrt(v)),i=x/r):g<.01?(n=.707106781,r=.707106781,i=0):(n=_/(i=Math.sqrt(g)),r=x/i),this.set(n,r,i,e),this}var b=Math.sqrt((d-h)*(d-h)+(c-p)*(c-p)+(l-s)*(l-s));return Math.abs(b)<.001&&(b=1),this.x=(d-h)/b,this.y=(c-p)/b,this.z=(l-s)/b,this.w=Math.acos((o+u+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this},clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}})},170:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=new RegExp("[\\[\\]\\.:\\/]","g"),i="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",a=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),o=/(WCOD+)?/.source.replace("WCOD",i),s=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),c=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),l=new RegExp("^"+a+o+s+c+"$"),u=["material","materials","bones"];function h(t,e,n){var r=n||p.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}function p(t,e,n){this.path=e,this.parsedPath=n||p.parseTrackName(e),this.node=p.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(h.prototype,{getValue:function(t,e){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)},setValue:function(t,e){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(p,{Composite:h,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new p.Composite(t,e,n):new p(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(r,"")},parseTrackName:function(t){var e=l.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);var n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var i=n.nodeName.substring(r+1);-1!==u.indexOf(i)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){var r=function(t){for(var n=0;n<t.length;n++){var i=t[n];if(i.name===e||i.uuid===e)return i;var a=r(i.children);if(a)return a}return null},i=r(t.children);if(i)return i}return null}}),Object.assign(p.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)t[e++]=n[r]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=t[e++]},function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,n=e.objectName,r=e.propertyName,i=e.propertyIndex;if(t||(t=p.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(n){var a=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var o=0;o<t.length;o++)if(t[o].name===a){a=o;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==a){if(void 0===t[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[a]}}var s=t[r];if(void 0!==s){var c=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?c=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate);var l=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(t.geometry.morphAttributes.position[o].name===i){i=o;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(o=0;o<this.node.geometry.morphTargets.length;o++)if(t.geometry.morphTargets[o].name===i){i=o;break}}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=i}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][c]}else{var u=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+u+"."+r+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(p.prototype,{_getValue_unbound:p.prototype.getValue,_setValue_unbound:p.prototype.setValue})},171:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(69);function i(t,e){r.a.call(this,t,e),this.type="LineLoop"}i.prototype=Object.assign(Object.create(r.a.prototype),{constructor:i,isLineLoop:!0})},172:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(112),i=n(18);function a(t){i.a.call(this,t)}a.prototype=Object.assign(Object.create(i.a.prototype),{constructor:a,load:function(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var a=this,o=r.a.get(t);if(void 0!==o)return a.manager.itemStart(t),setTimeout((function(){e&&e(o),a.manager.itemEnd(t)}),0),o;var s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function c(){s.removeEventListener("load",c,!1),s.removeEventListener("error",l,!1),r.a.add(t,this),e&&e(this),a.manager.itemEnd(t)}function l(e){s.removeEventListener("load",c,!1),s.removeEventListener("error",l,!1),i&&i(e),a.manager.itemError(t),a.manager.itemEnd(t)}return s.addEventListener("load",c,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),a.manager.itemStart(t),s.src=t,s}})},173:function(t,e,n){"use strict";function r(t,e,n){var r=this,i=!1,a=0,o=0,s=void 0,c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===i&&void 0!==r.onStart&&r.onStart(t,a,o),i=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,o),a===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this},this.addHandler=function(t,e){return c.push(t,e),this},this.removeHandler=function(t){var e=c.indexOf(t);return-1!==e&&c.splice(e,2),this},this.getHandler=function(t){for(var e=0,n=c.length;e<n;e+=2){var r=c[e],i=c[e+1];if(r.global&&(r.lastIndex=0),r.test(t))return i}return null}}n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return r}));var i=new r},174:function(t,e,n){"use strict";var r=n(24),i=n(61),a=n(13),o=n(37);function s(){i.a.call(this,new o.PerspectiveCamera(50,1,.5,500))}s.prototype=Object.assign(Object.create(i.a.prototype),{constructor:s,isSpotLightShadow:!0,updateMatrices:function(t){var e=this.camera,n=2*a._Math.RAD2DEG*t.angle,r=this.mapSize.width/this.mapSize.height,o=t.distance||e.far;n===e.fov&&r===e.aspect&&o===e.far||(e.fov=n,e.aspect=r,e.far=o,e.updateProjectionMatrix()),i.a.prototype.updateMatrices.call(this,t)}});var c=n(10);function l(t,e,n,i,a,o){r.a.call(this,t,e),this.type="SpotLight",this.position.copy(c.Object3D.DefaultUp),this.updateMatrix(),this.target=new c.Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==i?i:Math.PI/3,this.penumbra=void 0!==a?a:0,this.decay=void 0!==o?o:1,this.shadow=new s}n.d(e,"a",(function(){return l})),l.prototype=Object.assign(Object.create(r.a.prototype),{constructor:l,isSpotLight:!0,copy:function(t){return r.a.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}})},175:function(t,e,n){"use strict";var r=n(24),i=n(61),a=n(37),o=n(2),s=n(1),c=n(17);function l(){i.a.call(this,new a.PerspectiveCamera(90,1,.5,500)),this._frameExtents=new o.Vector2(4,2),this._viewportCount=6,this._viewports=[new c.Vector4(2,1,1,1),new c.Vector4(0,1,1,1),new c.Vector4(3,1,1,1),new c.Vector4(1,1,1,1),new c.Vector4(3,0,1,1),new c.Vector4(1,0,1,1)],this._cubeDirections=[new s.Vector3(1,0,0),new s.Vector3(-1,0,0),new s.Vector3(0,0,1),new s.Vector3(0,0,-1),new s.Vector3(0,1,0),new s.Vector3(0,-1,0)],this._cubeUps=[new s.Vector3(0,1,0),new s.Vector3(0,1,0),new s.Vector3(0,1,0),new s.Vector3(0,1,0),new s.Vector3(0,0,1),new s.Vector3(0,0,-1)]}function u(t,e,n,i){r.a.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==i?i:1,this.shadow=new l}l.prototype=Object.assign(Object.create(i.a.prototype),{constructor:l,isPointLightShadow:!0,updateMatrices:function(t,e){void 0===e&&(e=0);var n=this.camera,r=this.matrix,i=this._lightPositionWorld,a=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(t.matrixWorld),n.position.copy(i),a.copy(n.position),a.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(a),n.updateMatrixWorld(),r.makeTranslation(-i.x,-i.y,-i.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromMatrix(o)}}),n.d(e,"a",(function(){return u})),u.prototype=Object.assign(Object.create(r.a.prototype),{constructor:u,isPointLight:!0,copy:function(t){return r.a.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}})},176:function(t,e,n){"use strict";var r=n(24),i=n(61),a=n(57);function o(){i.a.call(this,new a.OrthographicCamera(-5,5,5,-5,.5,500))}o.prototype=Object.assign(Object.create(i.a.prototype),{constructor:o,isDirectionalLightShadow:!0,updateMatrices:function(t){i.a.prototype.updateMatrices.call(this,t)}});var s=n(10);function c(t,e){r.a.call(this,t,e),this.type="DirectionalLight",this.position.copy(s.Object3D.DefaultUp),this.updateMatrix(),this.target=new s.Object3D,this.shadow=new o}n.d(e,"a",(function(){return c})),c.prototype=Object.assign(Object.create(r.a.prototype),{constructor:c,isDirectionalLight:!0,copy:function(t){return r.a.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}})},18:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(173);function i(t){this.manager=void 0!==t?t:r.a,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(i.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this}})},2:function(t,e,n){"use strict";function r(t,e){this.x=t||0,this.y=e||0}n.r(e),n.d(e,"Vector2",(function(){return r})),Object.defineProperties(r.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(r.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this},clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,a=this.y-t.y;return this.x=i*n-a*r+t.x,this.y=i*r+a*n+t.y,this}})},20:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=new(n(1).Vector3);function i(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(i.prototype,{isMatrix3:!0,set:function(t,e,n,r,i,a,o,s,c){var l=this.elements;return l[0]=t,l[1]=r,l[2]=o,l[3]=e,l[4]=i,l[5]=s,l[6]=n,l[7]=a,l[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(t){for(var e=0,n=t.count;e<n;e++)r.x=t.getX(e),r.y=t.getY(e),r.z=t.getZ(e),r.applyMatrix3(this),t.setXYZ(e,r.x,r.y,r.z);return t},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,r=e.elements,i=this.elements,a=n[0],o=n[3],s=n[6],c=n[1],l=n[4],u=n[7],h=n[2],p=n[5],d=n[8],f=r[0],m=r[3],v=r[6],g=r[1],y=r[4],_=r[7],x=r[2],b=r[5],M=r[8];return i[0]=a*f+o*g+s*x,i[3]=a*m+o*y+s*b,i[6]=a*v+o*_+s*M,i[1]=c*f+l*g+u*x,i[4]=c*m+l*y+u*b,i[7]=c*v+l*_+u*M,i[2]=h*f+p*g+d*x,i[5]=h*m+p*y+d*b,i[8]=h*v+p*_+d*M,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],a=t[4],o=t[5],s=t[6],c=t[7],l=t[8];return e*a*l-e*o*c-n*i*l+n*o*s+r*i*c-r*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var n=t.elements,r=this.elements,i=n[0],a=n[1],o=n[2],s=n[3],c=n[4],l=n[5],u=n[6],h=n[7],p=n[8],d=p*c-l*h,f=l*u-p*s,m=h*s-c*u,v=i*d+a*f+o*m;if(0===v){var g="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(g);return console.warn(g),this.identity()}var y=1/v;return r[0]=d*y,r[1]=(o*h-p*a)*y,r[2]=(l*a-o*c)*y,r[3]=f*y,r[4]=(p*i-o*u)*y,r[5]=(o*s-l*i)*y,r[6]=m*y,r[7]=(a*u-h*i)*y,r[8]=(c*i-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,r,i,a,o){var s=Math.cos(i),c=Math.sin(i);this.set(n*s,n*c,-n*(s*a+c*o)+a+t,-r*c,r*s,-r*(-c*a+s*o)+o+e,0,0,1)},scale:function(t,e){var n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){var e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],a=r[3],o=r[6],s=r[1],c=r[4],l=r[7];return r[0]=e*i+n*s,r[3]=e*a+n*c,r[6]=e*o+n*l,r[1]=-n*i+e*s,r[4]=-n*a+e*c,r[7]=-n*o+e*l,this},translate:function(t,e){var n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){for(var e=this.elements,n=t.elements,r=0;r<9;r++)if(e[r]!==n[r])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var n=0;n<9;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}})},213:function(t,e,n){"use strict";n.r(e),n.d(e,"MeshLambertMaterial",(function(){return o}));var r=n(8),i=n(0),a=n(6);function o(t){r.a.call(this),this.type="MeshLambertMaterial",this.color=new a.Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new a.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=i.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}o.prototype=Object.create(r.a.prototype),o.prototype.constructor=o,o.prototype.isMeshLambertMaterial=!0,o.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}},217:function(t,e,n){"use strict";n.r(e),n.d(e,"CatmullRomCurve3",(function(){return u}));var r=n(1),i=n(12);function a(){var t=0,e=0,n=0,r=0;function i(i,a,o,s){t=i,e=o,n=-3*i+3*a-2*o-s,r=2*i-2*a+o+s}return{initCatmullRom:function(t,e,n,r,a){i(e,n,a*(n-t),a*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,a,o,s){var c=(e-t)/a-(n-t)/(a+o)+(n-e)/o,l=(n-e)/o-(r-e)/(o+s)+(r-n)/s;i(e,n,c*=o,l*=o)},calc:function(i){var a=i*i;return t+e*i+n*a+r*(a*i)}}}var o=new r.Vector3,s=new a,c=new a,l=new a;function u(t,e,n,r){i.a.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=r||.5}u.prototype=Object.create(i.a.prototype),u.prototype.constructor=u,u.prototype.isCatmullRomCurve3=!0,u.prototype.getPoint=function(t,e){var n,i,a,u,h=e||new r.Vector3,p=this.points,d=p.length,f=(d-(this.closed?0:1))*t,m=Math.floor(f),v=f-m;if(this.closed?m+=m>0?0:(Math.floor(Math.abs(m)/d)+1)*d:0===v&&m===d-1&&(m=d-2,v=1),this.closed||m>0?n=p[(m-1)%d]:(o.subVectors(p[0],p[1]).add(p[0]),n=o),i=p[m%d],a=p[(m+1)%d],this.closed||m+2<d?u=p[(m+2)%d]:(o.subVectors(p[d-1],p[d-2]).add(p[d-1]),u=o),"centripetal"===this.curveType||"chordal"===this.curveType){var g="chordal"===this.curveType?.5:.25,y=Math.pow(n.distanceToSquared(i),g),_=Math.pow(i.distanceToSquared(a),g),x=Math.pow(a.distanceToSquared(u),g);_<1e-4&&(_=1),y<1e-4&&(y=_),x<1e-4&&(x=_),s.initNonuniformCatmullRom(n.x,i.x,a.x,u.x,y,_,x),c.initNonuniformCatmullRom(n.y,i.y,a.y,u.y,y,_,x),l.initNonuniformCatmullRom(n.z,i.z,a.z,u.z,y,_,x)}else"catmullrom"===this.curveType&&(s.initCatmullRom(n.x,i.x,a.x,u.x,this.tension),c.initCatmullRom(n.y,i.y,a.y,u.y,this.tension),l.initCatmullRom(n.z,i.z,a.z,u.z,this.tension));return h.set(s.calc(v),c.calc(v),l.calc(v)),h},u.prototype.copy=function(t){i.a.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var r=t.points[e];this.points.push(r.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},u.prototype.toJSON=function(){var t=i.a.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var r=this.points[e];t.points.push(r.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},u.prototype.fromJSON=function(t){i.a.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var a=t.points[e];this.points.push((new r.Vector3).fromArray(a))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}},22:function(t,e,n){"use strict";function r(t){var e={};for(var n in t)for(var r in e[n]={},t[n]){var i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}return e}function i(t){for(var e={},n=0;n<t.length;n++){var i=r(t[n]);for(var a in i)e[a]=i[a]}return e}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return i})),n.d(e,"a",(function(){return a}));var a={clone:r,merge:i}},223:function(t,e,n){"use strict";n.r(e),n.d(e,"DataTexture",(function(){return a}));var r=n(28),i=n(0);function a(t,e,n,a,o,s,c,l,u,h,p,d){r.a.call(this,null,s,c,l,u,h,a,o,p,d),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==u?u:i.NearestFilter,this.minFilter=void 0!==h?h:i.NearestFilter,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isDataTexture=!0},224:function(t,e,n){"use strict";n.r(e),n.d(e,"CubicInterpolant",(function(){return a}));var r=n(0),i=n(40);function a(t,e,n,r){i.a.call(this,t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}a.prototype=Object.assign(Object.create(i.a.prototype),{constructor:a,DefaultSettings_:{endingStart:r.ZeroCurvatureEnding,endingEnd:r.ZeroCurvatureEnding},intervalChanged_:function(t,e,n){var i=this.parameterPositions,a=t-2,o=t+1,s=i[a],c=i[o];if(void 0===s)switch(this.getSettings_().endingStart){case r.ZeroSlopeEnding:a=t,s=2*e-n;break;case r.WrapAroundEnding:s=e+i[a=i.length-2]-i[a+1];break;default:a=t,s=n}if(void 0===c)switch(this.getSettings_().endingEnd){case r.ZeroSlopeEnding:o=t,c=2*n-e;break;case r.WrapAroundEnding:o=1,c=n+i[1]-i[0];break;default:o=t-1,c=e}var l=.5*(n-e),u=this.valueSize;this._weightPrev=l/(e-s),this._weightNext=l/(c-n),this._offsetPrev=a*u,this._offsetNext=o*u},interpolate_:function(t,e,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,l=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,p=this._weightNext,d=(n-e)/(r-e),f=d*d,m=f*d,v=-h*m+2*h*f-h*d,g=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,_=p*m-p*f,x=0;x!==o;++x)i[x]=v*a[l+x]+g*a[c+x]+y*a[s+x]+_*a[u+x];return i}})},225:function(t,e,n){"use strict";n.r(e),n.d(e,"AmbientLight",(function(){return i}));var r=n(24);function i(t,e){r.a.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}i.prototype=Object.assign(Object.create(r.a.prototype),{constructor:i,isAmbientLight:!0})},226:function(t,e,n){"use strict";n.r(e),n.d(e,"FogExp2",(function(){return i}));var r=n(6);function i(t,e){this.name="",this.color=new r.Color(t),this.density=void 0!==e?e:25e-5}Object.assign(i.prototype,{isFogExp2:!0,clone:function(){return new i(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}})},227:function(t,e,n){"use strict";n.r(e),n.d(e,"Fog",(function(){return i}));var r=n(6);function i(t,e,n){this.name="",this.color=new r.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==n?n:1e3}Object.assign(i.prototype,{isFog:!0,clone:function(){return new i(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}})},228:function(t,e,n){"use strict";n.r(e),n.d(e,"Bone",(function(){return i}));var r=n(10);function i(){r.Object3D.call(this),this.type="Bone"}i.prototype=Object.assign(Object.create(r.Object3D.prototype),{constructor:i,isBone:!0})},229:function(t,e,n){"use strict";n.r(e),n.d(e,"InstancedBufferGeometry",(function(){return i}));var r=n(5);function i(){r.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}i.prototype=Object.assign(Object.create(r.BufferGeometry.prototype),{constructor:i,isInstancedBufferGeometry:!0,copy:function(t){return r.BufferGeometry.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t=r.BufferGeometry.prototype.toJSON.call(this);return t.maxInstancedCount=this.maxInstancedCount,t.isInstancedBufferGeometry=!0,t}})},23:function(t,e,n){"use strict";n.r(e),n.d(e,"Mesh",(function(){return P}));var r=n(1),i=n(2),a=n(33),o=n(85),s=n(15),c=n(10),l=n(77),u=n(122),h=n(0),p=n(50),d=n(5),f=new s.Matrix4,m=new o.a,v=new a.Sphere,g=new r.Vector3,y=new r.Vector3,_=new r.Vector3,x=new r.Vector3,b=new r.Vector3,M=new r.Vector3,w=new r.Vector3,S=new r.Vector3,T=new r.Vector3,E=new i.Vector2,A=new i.Vector2,L=new i.Vector2,R=new r.Vector3,C=new r.Vector3;function P(t,e){c.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new d.BufferGeometry,this.material=void 0!==e?e:new p.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()}function N(t,e,n,r,i,a,o,s){if(null===(e.side===h.BackSide?r.intersectTriangle(o,a,i,!0,s):r.intersectTriangle(i,a,o,e.side!==h.DoubleSide,s)))return null;C.copy(s),C.applyMatrix4(t.matrixWorld);var c=n.ray.origin.distanceTo(C);return c<n.near||c>n.far?null:{distance:c,point:C.clone(),object:t}}function D(t,e,n,r,a,o,s,c,h,p,d,f){g.fromBufferAttribute(a,p),y.fromBufferAttribute(a,d),_.fromBufferAttribute(a,f);var m=t.morphTargetInfluences;if(e.morphTargets&&o&&m){w.set(0,0,0),S.set(0,0,0),T.set(0,0,0);for(var v=0,C=o.length;v<C;v++){var P=m[v],D=o[v];0!==P&&(x.fromBufferAttribute(D,p),b.fromBufferAttribute(D,d),M.fromBufferAttribute(D,f),s?(w.addScaledVector(x,P),S.addScaledVector(b,P),T.addScaledVector(M,P)):(w.addScaledVector(x.sub(g),P),S.addScaledVector(b.sub(y),P),T.addScaledVector(M.sub(_),P)))}g.add(w),y.add(S),_.add(T)}var I=N(t,e,n,r,g,y,_,R);if(I){c&&(E.fromBufferAttribute(c,p),A.fromBufferAttribute(c,d),L.fromBufferAttribute(c,f),I.uv=l.Triangle.getUV(R,g,y,_,E,A,L,new i.Vector2)),h&&(E.fromBufferAttribute(h,p),A.fromBufferAttribute(h,d),L.fromBufferAttribute(h,f),I.uv2=l.Triangle.getUV(R,g,y,_,E,A,L,new i.Vector2));var O=new u.a(p,d,f);l.Triangle.getNormal(g,y,_,O.normal),I.face=O}return I}P.prototype=Object.assign(Object.create(c.Object3D.prototype),{constructor:P,isMesh:!0,copy:function(t){return c.Object3D.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,n,r=this.geometry;if(r.isBufferGeometry){var i=r.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)n=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}else{var s=r.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){var n,r=this.geometry,a=this.material,o=this.matrixWorld;if(void 0!==a&&(null===r.boundingSphere&&r.computeBoundingSphere(),v.copy(r.boundingSphere),v.applyMatrix4(o),!1!==t.ray.intersectsSphere(v)&&(f.getInverse(o),m.copy(t.ray).applyMatrix4(f),null===r.boundingBox||!1!==m.intersectsBox(r.boundingBox))))if(r.isBufferGeometry){var s,c,u,h,p,d,g,y,_,x=r.index,b=r.attributes.position,M=r.morphAttributes.position,w=r.morphTargetsRelative,S=r.attributes.uv,T=r.attributes.uv2,C=r.groups,P=r.drawRange;if(null!==x)if(Array.isArray(a))for(h=0,d=C.length;h<d;h++)for(_=a[(y=C[h]).materialIndex],p=Math.max(y.start,P.start),g=Math.min(y.start+y.count,P.start+P.count);p<g;p+=3)s=x.getX(p),c=x.getX(p+1),u=x.getX(p+2),(n=D(this,_,t,m,b,M,w,S,T,s,c,u))&&(n.faceIndex=Math.floor(p/3),n.face.materialIndex=y.materialIndex,e.push(n));else for(h=Math.max(0,P.start),d=Math.min(x.count,P.start+P.count);h<d;h+=3)s=x.getX(h),c=x.getX(h+1),u=x.getX(h+2),(n=D(this,a,t,m,b,M,w,S,T,s,c,u))&&(n.faceIndex=Math.floor(h/3),e.push(n));else if(void 0!==b)if(Array.isArray(a))for(h=0,d=C.length;h<d;h++)for(_=a[(y=C[h]).materialIndex],p=Math.max(y.start,P.start),g=Math.min(y.start+y.count,P.start+P.count);p<g;p+=3)(n=D(this,_,t,m,b,M,w,S,T,s=p,c=p+1,u=p+2))&&(n.faceIndex=Math.floor(p/3),n.face.materialIndex=y.materialIndex,e.push(n));else for(h=Math.max(0,P.start),d=Math.min(b.count,P.start+P.count);h<d;h+=3)(n=D(this,a,t,m,b,M,w,S,T,s=h,c=h+1,u=h+2))&&(n.faceIndex=Math.floor(h/3),e.push(n))}else if(r.isGeometry){var I,O,F,B,V=Array.isArray(a),U=r.vertices,G=r.faces,z=r.faceVertexUvs[0];z.length>0&&(B=z);for(var k=0,H=G.length;k<H;k++){var j=G[k],W=V?a[j.materialIndex]:a;if(void 0!==W&&(I=U[j.a],O=U[j.b],F=U[j.c],n=N(this,W,t,m,I,O,F,R))){if(B&&B[k]){var X=B[k];E.copy(X[0]),A.copy(X[1]),L.copy(X[2]),n.uv=l.Triangle.getUV(R,I,O,F,E,A,L,new i.Vector2)}n.face=j,n.faceIndex=k,e.push(n)}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}})},230:function(t,e,n){"use strict";n.r(e),n.d(e,"InstancedBufferAttribute",(function(){return i}));var r=n(4);function i(t,e,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),r.BufferAttribute.call(this,t,e,n),this.meshPerAttribute=i||1}i.prototype=Object.assign(Object.create(r.BufferAttribute.prototype),{constructor:i,isInstancedBufferAttribute:!0,copy:function(t){return r.BufferAttribute.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){var t=r.BufferAttribute.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}})},231:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(13);function i(t,e,n){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==n?n:0,this}Object.assign(i.prototype,{set:function(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(r._Math.clamp(e/this.radius,-1,1))),this}})},24:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(10),i=n(6);function a(t,e){r.Object3D.call(this),this.type="Light",this.color=new i.Color(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}a.prototype=Object.assign(Object.create(r.Object3D.prototype),{constructor:a,isLight:!0,copy:function(t){return r.Object3D.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=r.Object3D.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}})},27:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(112),i=n(18),a={};function o(t){i.a.call(this,t)}o.prototype=Object.assign(Object.create(i.a.prototype),{constructor:o,load:function(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var o=this,s=r.a.get(t);if(void 0!==s)return o.manager.itemStart(t),setTimeout((function(){e&&e(s),o.manager.itemEnd(t)}),0),s;if(void 0===a[t]){var c=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(c){var l=c[1],u=!!c[2],h=c[3];h=decodeURIComponent(h),u&&(h=atob(h));try{var p,d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":for(var f=new Uint8Array(h.length),m=0;m<h.length;m++)f[m]=h.charCodeAt(m);p="blob"===d?new Blob([f.buffer],{type:l}):f.buffer;break;case"document":var v=new DOMParser;p=v.parseFromString(h,l);break;case"json":p=JSON.parse(h);break;default:p=h}setTimeout((function(){e&&e(p),o.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){i&&i(e),o.manager.itemError(t),o.manager.itemEnd(t)}),0)}}else{a[t]=[],a[t].push({onLoad:e,onProgress:n,onError:i});var g=new XMLHttpRequest;for(var y in g.open("GET",t,!0),g.addEventListener("load",(function(e){var n=this.response,i=a[t];if(delete a[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),r.a.add(t,n);for(var s=0,c=i.length;s<c;s++){(l=i[s]).onLoad&&l.onLoad(n)}o.manager.itemEnd(t)}else{for(s=0,c=i.length;s<c;s++){var l;(l=i[s]).onError&&l.onError(e)}o.manager.itemError(t),o.manager.itemEnd(t)}}),!1),g.addEventListener("progress",(function(e){for(var n=a[t],r=0,i=n.length;r<i;r++){var o=n[r];o.onProgress&&o.onProgress(e)}}),!1),g.addEventListener("error",(function(e){var n=a[t];delete a[t];for(var r=0,i=n.length;r<i;r++){var s=n[r];s.onError&&s.onError(e)}o.manager.itemError(t),o.manager.itemEnd(t)}),!1),g.addEventListener("abort",(function(e){var n=a[t];delete a[t];for(var r=0,i=n.length;r<i;r++){var s=n[r];s.onError&&s.onError(e)}o.manager.itemError(t),o.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(g.responseType=this.responseType),void 0!==this.withCredentials&&(g.withCredentials=this.withCredentials),g.overrideMimeType&&g.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)g.setRequestHeader(y,this.requestHeader[y]);g.send(null)}return o.manager.itemStart(t),g}a[t].push({onLoad:e,onProgress:n,onError:i})},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}})},28:function(t,e,n){"use strict";var r,i=n(30),a=n(0),o=n(13),s=n(2),c=n(20),l=function(t){var e;if("undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)e=t;else{void 0===r&&(r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),r.width=t.width,r.height=t.height;var n=r.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=r}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")};n.d(e,"a",(function(){return h}));var u=0;function h(t,e,n,r,i,l,p,d,f,m){Object.defineProperty(this,"id",{value:u++}),this.uuid=o._Math.generateUUID(),this.name="",this.image=void 0!==t?t:h.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:h.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:a.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:a.ClampToEdgeWrapping,this.magFilter=void 0!==i?i:a.LinearFilter,this.minFilter=void 0!==l?l:a.LinearMipmapLinearFilter,this.anisotropy=void 0!==f?f:1,this.format=void 0!==p?p:a.RGBAFormat,this.internalFormat=null,this.type=void 0!==d?d:a.UnsignedByteType,this.offset=new s.Vector2(0,0),this.repeat=new s.Vector2(1,1),this.center=new s.Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new c.a,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==m?m:a.LinearEncoding,this.version=0,this.onUpdate=null}h.DEFAULT_IMAGE=void 0,h.DEFAULT_MAPPING=a.UVMapping,h.prototype=Object.assign(Object.create(i.a.prototype),{constructor:h,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var r=this.image;if(void 0===r.uuid&&(r.uuid=o._Math.generateUUID()),!e&&void 0===t.images[r.uuid]){var i;if(Array.isArray(r)){i=[];for(var a=0,s=r.length;a<s;a++)i.push(l(r[a]))}else i=l(r);t.images[r.uuid]={uuid:r.uuid,url:i}}n.image=r.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==a.UVMapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case a.RepeatWrapping:t.x=t.x-Math.floor(t.x);break;case a.ClampToEdgeWrapping:t.x=t.x<0?0:1;break;case a.MirroredRepeatWrapping:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case a.RepeatWrapping:t.y=t.y-Math.floor(t.y);break;case a.ClampToEdgeWrapping:t.y=t.y<0?0:1;break;case a.MirroredRepeatWrapping:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(h.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}})},29:function(t,e,n){"use strict";var r=n(0),i=n(224),a=n(169),o=n(40);function s(t,e,n,r){o.a.call(this,t,e,n,r)}s.prototype=Object.assign(Object.create(o.a.prototype),{constructor:s,interpolate_:function(t){return this.copySampleValue_(t-1)}});var c=n(32);function l(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=c.a.convertArray(e,this.TimeBufferType),this.values=c.a.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}n.d(e,"a",(function(){return l})),Object.assign(l,{toJSON:function(t){var e,n=t.constructor;if(void 0!==n.toJSON)e=n.toJSON(t);else{e={name:t.name,times:c.a.convertArray(t.times,Array),values:c.a.convertArray(t.values,Array)};var r=t.getInterpolation();r!==t.DefaultInterpolation&&(e.interpolation=r)}return e.type=t.ValueTypeName,e}}),Object.assign(l.prototype,{constructor:l,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:r.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(t){return new s(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new a.a(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new i.CubicInterpolant(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case r.InterpolateDiscrete:e=this.InterpolantFactoryMethodDiscrete;break;case r.InterpolateLinear:e=this.InterpolantFactoryMethodLinear;break;case r.InterpolateSmooth:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return r.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return r.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return r.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,n=0,r=e.length;n!==r;++n)e[n]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,n=0,r=e.length;n!==r;++n)e[n]*=t;return this},trim:function(t,e){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<t;)++i;for(;-1!==a&&n[a]>e;)--a;if(++a,0!==i||a!==r){i>=a&&(i=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=c.a.arraySlice(n,i,a),this.values=c.a.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s),t=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a),t=!1;break}a=s}if(void 0!==r&&c.a.isTypedArray(r)){o=0;for(var l=r.length;o!==l;++o){var u=r[o];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,u),t=!1;break}}}return t},optimize:function(){for(var t=this.times,e=this.values,n=this.getValueSize(),i=this.getInterpolation()===r.InterpolateSmooth,a=1,o=t.length-1,s=1;s<o;++s){var l=!1,u=t[s];if(u!==t[s+1]&&(1!==s||u!==u[0]))if(i)l=!0;else for(var h=s*n,p=h-n,d=h+n,f=0;f!==n;++f){var m=e[h+f];if(m!==e[p+f]||m!==e[d+f]){l=!0;break}}if(l){if(s!==a){t[a]=t[s];var v=s*n,g=a*n;for(f=0;f!==n;++f)e[g+f]=e[v+f]}++a}}if(o>0){t[a]=t[o];for(v=o*n,g=a*n,f=0;f!==n;++f)e[g+f]=e[v+f];++a}return a!==t.length&&(this.times=c.a.arraySlice(t,0,a),this.values=c.a.arraySlice(e,0,a*n)),this},clone:function(){var t=c.a.arraySlice(this.times,0),e=c.a.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}})},291:function(t,e,n){"use strict";n.r(e),n.d(e,"Raycaster",(function(){return i}));var r=n(85);function i(t,e,n,i){this.ray=new r.a(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function a(t,e){return t.distance-e.distance}function o(t,e,n,r){if(!1!==t.visible&&(t.raycast(e,n),!0===r))for(var i=t.children,a=0,s=i.length;a<s;a++)o(i[a],e,n,!0)}Object.assign(i.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){var r=n||[];return o(t,this,r,e),r.sort(a),r},intersectObjects:function(t,e,n){var r=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,s=t.length;i<s;i++)o(t[i],this,r,e);return r.sort(a),r}})},30:function(t,e,n){"use strict";function r(){}n.d(e,"a",(function(){return r})),Object.assign(r.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var n=this._listeners[t];if(void 0!==n){var r=n.indexOf(e);-1!==r&&n.splice(r,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var n=e.slice(0),r=0,i=n.length;r<i;r++)n[r].call(this,t)}}}})},31:function(t,e,n){"use strict";n.r(e),n.d(e,"Quaternion",(function(){return i}));var r=n(13);function i(t,e,n,r){this._x=t||0,this._y=e||0,this._z=n||0,this._w=void 0!==r?r:1}Object.assign(i,{slerp:function(t,e,n,r){return n.copy(t).slerp(e,r)},slerpFlat:function(t,e,n,r,i,a,o){var s=n[r+0],c=n[r+1],l=n[r+2],u=n[r+3],h=i[a+0],p=i[a+1],d=i[a+2],f=i[a+3];if(u!==f||s!==h||c!==p||l!==d){var m=1-o,v=s*h+c*p+l*d+u*f,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var _=Math.sqrt(y),x=Math.atan2(_,v*g);m=Math.sin(m*x)/_,o=Math.sin(o*x)/_}var b=o*g;if(s=s*m+h*b,c=c*m+p*b,l=l*m+d*b,u=u*m+f*b,m===1-o){var M=1/Math.sqrt(s*s+c*c+l*l+u*u);s*=M,c*=M,l*=M,u*=M}}t[e]=s,t[e+1]=c,t[e+2]=l,t[e+3]=u}}),Object.defineProperties(i.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this._onChangeCallback()}}}),Object.assign(i.prototype,{isQuaternion:!0,set:function(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=t._x,r=t._y,i=t._z,a=t.order,o=Math.cos,s=Math.sin,c=o(n/2),l=o(r/2),u=o(i/2),h=s(n/2),p=s(r/2),d=s(i/2);return"XYZ"===a?(this._x=h*l*u+c*p*d,this._y=c*p*u-h*l*d,this._z=c*l*d+h*p*u,this._w=c*l*u-h*p*d):"YXZ"===a?(this._x=h*l*u+c*p*d,this._y=c*p*u-h*l*d,this._z=c*l*d-h*p*u,this._w=c*l*u+h*p*d):"ZXY"===a?(this._x=h*l*u-c*p*d,this._y=c*p*u+h*l*d,this._z=c*l*d+h*p*u,this._w=c*l*u-h*p*d):"ZYX"===a?(this._x=h*l*u-c*p*d,this._y=c*p*u+h*l*d,this._z=c*l*d-h*p*u,this._w=c*l*u+h*p*d):"YZX"===a?(this._x=h*l*u+c*p*d,this._y=c*p*u+h*l*d,this._z=c*l*d-h*p*u,this._w=c*l*u-h*p*d):"XZY"===a&&(this._x=h*l*u-c*p*d,this._y=c*p*u-h*l*d,this._z=c*l*d+h*p*u,this._w=c*l*u+h*p*d),!1!==e&&this._onChangeCallback(),this},setFromAxisAngle:function(t,e){var n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this},setFromRotationMatrix:function(t){var e,n=t.elements,r=n[0],i=n[4],a=n[8],o=n[1],s=n[5],c=n[9],l=n[2],u=n[6],h=n[10],p=r+s+h;return p>0?(e=.5/Math.sqrt(p+1),this._w=.25/e,this._x=(u-c)*e,this._y=(a-l)*e,this._z=(o-i)*e):r>s&&r>h?(e=2*Math.sqrt(1+r-s-h),this._w=(u-c)/e,this._x=.25*e,this._y=(i+o)/e,this._z=(a+l)/e):s>h?(e=2*Math.sqrt(1+s-r-h),this._w=(a-l)/e,this._x=(i+o)/e,this._y=.25*e,this._z=(c+u)/e):(e=2*Math.sqrt(1+h-r-s),this._w=(o-i)/e,this._x=(a+l)/e,this._y=(c+u)/e,this._z=.25*e),this._onChangeCallback(),this},setFromUnitVectors:function(t,e){var n=t.dot(e)+1;return n<1e-6?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(r._Math.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var n=this.angleTo(t);if(0===n)return this;var r=Math.min(1,e/n);return this.slerp(t,r),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var n=t._x,r=t._y,i=t._z,a=t._w,o=e._x,s=e._y,c=e._z,l=e._w;return this._x=n*l+a*o+r*c-i*s,this._y=r*l+a*s+i*o-n*c,this._z=i*l+a*c+n*s-r*o,this._w=a*l-n*o-r*s-i*c,this._onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*t._w+n*t._x+r*t._y+i*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var c=1-e;return this._w=c*a+e*this._w,this._x=c*n+e*this._x,this._y=c*r+e*this._y,this._z=c*i+e*this._z,this.normalize(),this._onChangeCallback(),this}var l=Math.sqrt(s),u=Math.atan2(l,o),h=Math.sin((1-e)*u)/l,p=Math.sin(e*u)/l;return this._w=a*h+this._w*p,this._x=n*h+this._x*p,this._y=r*h+this._y*p,this._z=i*h+this._z*p,this._onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}})},32:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r={arraySlice:function(t,e,n){return r.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){for(var e=t.length,n=new Array(e),r=0;r!==e;++r)n[r]=r;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){for(var r=t.length,i=new t.constructor(r),a=0,o=0;o!==r;++a)for(var s=n[a]*e,c=0;c!==e;++c)i[o++]=t[s+c];return i},flattenJSON:function(t,e,n,r){for(var i=1,a=t[0];void 0!==a&&void 0===a[r];)a=t[i++];if(void 0!==a){var o=a[r];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[r])&&(e.push(a.time),n.push.apply(n,o)),a=t[i++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[r])&&(e.push(a.time),o.toArray(n,n.length)),a=t[i++]}while(void 0!==a);else do{void 0!==(o=a[r])&&(e.push(a.time),n.push(o)),a=t[i++]}while(void 0!==a)}},subclip:function(t,e,n,i,a){a=a||30;var o=t.clone();o.name=e;for(var s=[],c=0;c<o.tracks.length;++c){for(var l=o.tracks[c],u=l.getValueSize(),h=[],p=[],d=0;d<l.times.length;++d){var f=l.times[d]*a;if(!(f<n||f>=i)){h.push(l.times[d]);for(var m=0;m<u;++m)p.push(l.values[d*u+m])}}0!==h.length&&(l.times=r.convertArray(h,l.times.constructor),l.values=r.convertArray(p,l.values.constructor),s.push(l))}o.tracks=s;var v=1/0;for(c=0;c<o.tracks.length;++c)v>o.tracks[c].times[0]&&(v=o.tracks[c].times[0]);for(c=0;c<o.tracks.length;++c)o.tracks[c].shift(-1*v);return o.resetDuration(),o}}},33:function(t,e,n){"use strict";n.r(e),n.d(e,"Sphere",(function(){return o}));var r=n(44),i=n(1),a=new r.Box3;function o(t,e){this.center=void 0!==t?t:new i.Vector3,this.radius=void 0!==e?e:0}Object.assign(o.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(t,e){var n=this.center;void 0!==e?n.copy(e):a.setFromPoints(t).getCenter(n);for(var r=0,i=0,o=t.length;i<o;i++)r=Math.max(r,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(r),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new i.Vector3),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new r.Box3),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}})},330:function(t,e,n){"use strict";n.r(e);var r={};n.r(r),n.d(r,"ShadowMaterial",(function(){return vt})),n.d(r,"SpriteMaterial",(function(){return T})),n.d(r,"RawShaderMaterial",(function(){return yt})),n.d(r,"ShaderMaterial",(function(){return gt.a})),n.d(r,"PointsMaterial",(function(){return _t.PointsMaterial})),n.d(r,"MeshPhysicalMaterial",(function(){return bt})),n.d(r,"MeshStandardMaterial",(function(){return xt.MeshStandardMaterial})),n.d(r,"MeshPhongMaterial",(function(){return Mt.a})),n.d(r,"MeshToonMaterial",(function(){return wt})),n.d(r,"MeshNormalMaterial",(function(){return St})),n.d(r,"MeshLambertMaterial",(function(){return Tt.MeshLambertMaterial})),n.d(r,"MeshDepthMaterial",(function(){return Et.a})),n.d(r,"MeshDistanceMaterial",(function(){return At.a})),n.d(r,"MeshBasicMaterial",(function(){return Lt.MeshBasicMaterial})),n.d(r,"MeshMatcapMaterial",(function(){return Rt})),n.d(r,"LineDashedMaterial",(function(){return Pt})),n.d(r,"LineBasicMaterial",(function(){return Ct.LineBasicMaterial})),n.d(r,"Material",(function(){return S.a}));var i={};n.r(i),n.d(i,"WireframeGeometry",(function(){return Ut})),n.d(i,"ParametricGeometry",(function(){return zt})),n.d(i,"ParametricBufferGeometry",(function(){return kt})),n.d(i,"TetrahedronGeometry",(function(){return jt})),n.d(i,"TetrahedronBufferGeometry",(function(){return Wt})),n.d(i,"OctahedronGeometry",(function(){return Xt})),n.d(i,"OctahedronBufferGeometry",(function(){return qt})),n.d(i,"IcosahedronGeometry",(function(){return Yt.IcosahedronGeometry})),n.d(i,"IcosahedronBufferGeometry",(function(){return Yt.IcosahedronBufferGeometry})),n.d(i,"DodecahedronGeometry",(function(){return Zt})),n.d(i,"DodecahedronBufferGeometry",(function(){return Jt})),n.d(i,"PolyhedronGeometry",(function(){return Ht.b})),n.d(i,"PolyhedronBufferGeometry",(function(){return Ht.a})),n.d(i,"TubeGeometry",(function(){return Kt})),n.d(i,"TubeBufferGeometry",(function(){return Qt})),n.d(i,"TorusKnotGeometry",(function(){return $t.TorusKnotGeometry})),n.d(i,"TorusKnotBufferGeometry",(function(){return $t.TorusKnotBufferGeometry})),n.d(i,"TorusGeometry",(function(){return te.TorusGeometry})),n.d(i,"TorusBufferGeometry",(function(){return te.TorusBufferGeometry})),n.d(i,"TextGeometry",(function(){return ee.TextGeometry})),n.d(i,"TextBufferGeometry",(function(){return ee.TextBufferGeometry})),n.d(i,"SphereGeometry",(function(){return ne.SphereGeometry})),n.d(i,"SphereBufferGeometry",(function(){return ne.SphereBufferGeometry})),n.d(i,"RingGeometry",(function(){return re})),n.d(i,"RingBufferGeometry",(function(){return ie})),n.d(i,"PlaneGeometry",(function(){return ae.PlaneGeometry})),n.d(i,"PlaneBufferGeometry",(function(){return ae.PlaneBufferGeometry})),n.d(i,"LatheGeometry",(function(){return se})),n.d(i,"LatheBufferGeometry",(function(){return ce})),n.d(i,"ShapeGeometry",(function(){return le.ShapeGeometry})),n.d(i,"ShapeBufferGeometry",(function(){return le.ShapeBufferGeometry})),n.d(i,"ExtrudeGeometry",(function(){return ue.b})),n.d(i,"ExtrudeBufferGeometry",(function(){return ue.a})),n.d(i,"EdgesGeometry",(function(){return he})),n.d(i,"ConeGeometry",(function(){return de})),n.d(i,"ConeBufferGeometry",(function(){return fe})),n.d(i,"CylinderGeometry",(function(){return pe.CylinderGeometry})),n.d(i,"CylinderBufferGeometry",(function(){return pe.CylinderBufferGeometry})),n.d(i,"CircleGeometry",(function(){return me.CircleGeometry})),n.d(i,"CircleBufferGeometry",(function(){return me.CircleBufferGeometry})),n.d(i,"BoxGeometry",(function(){return ve.BoxGeometry})),n.d(i,"BoxBufferGeometry",(function(){return ve.BoxBufferGeometry}));var a=n(0),o=n(4),s=n(6),c=n(10),l=n(36),u=n(23),h=n(15),p=new h.Matrix4,d=new h.Matrix4,f=[],m=new u.Mesh;function v(t,e,n){u.Mesh.call(this,t,e),this.instanceMatrix=new o.BufferAttribute(new Float32Array(16*n),16),this.count=n}v.prototype=Object.assign(Object.create(u.Mesh.prototype),{constructor:v,isInstancedMesh:!0,getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){var n=this.matrixWorld,r=this.count;if(m.geometry=this.geometry,m.material=this.material,void 0!==m.material)for(var i=0;i<r;i++)this.getMatrixAt(i,p),d.multiplyMatrices(n,p),m.matrixWorld=d,m.raycast(t,f),f.length>0&&(f[0].instanceId=i,f[0].object=this,e.push(f[0]),f.length=0)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){}});var g,y=n(2),_=n(1),x=n(77),b=n(5),M=n(108),w=n(76),S=n(8);function T(t){S.a.call(this),this.type="SpriteMaterial",this.color=new s.Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}T.prototype=Object.create(S.a.prototype),T.prototype.constructor=T,T.prototype.isSpriteMaterial=!0,T.prototype.copy=function(t){return S.a.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};var E=new _.Vector3,A=new _.Vector3,L=new _.Vector3,R=new y.Vector2,C=new y.Vector2,P=new h.Matrix4,N=new _.Vector3,D=new _.Vector3,I=new _.Vector3,O=new y.Vector2,F=new y.Vector2,B=new y.Vector2;function V(t){if(c.Object3D.call(this),this.type="Sprite",void 0===g){g=new b.BufferGeometry;var e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new M.a(e,5);g.setIndex([0,1,2,0,2,3]),g.setAttribute("position",new w.InterleavedBufferAttribute(n,3,0,!1)),g.setAttribute("uv",new w.InterleavedBufferAttribute(n,2,3,!1))}this.geometry=g,this.material=void 0!==t?t:new T,this.center=new y.Vector2(.5,.5)}function U(t,e,n,r,i,a){R.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(C.x=a*R.x-i*R.y,C.y=i*R.x+a*R.y):C.copy(R),t.copy(e),t.x+=C.x,t.y+=C.y,t.applyMatrix4(P)}V.prototype=Object.assign(Object.create(c.Object3D.prototype),{constructor:V,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),A.setFromMatrixScale(this.matrixWorld),P.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),L.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&A.multiplyScalar(-L.z);var n,r,i=this.material.rotation;0!==i&&(r=Math.cos(i),n=Math.sin(i));var a=this.center;U(N.set(-.5,-.5,0),L,a,A,n,r),U(D.set(.5,-.5,0),L,a,A,n,r),U(I.set(.5,.5,0),L,a,A,n,r),O.set(0,0),F.set(1,0),B.set(1,1);var o=t.ray.intersectTriangle(N,D,I,!1,E);if(null!==o||(U(D.set(-.5,.5,0),L,a,A,n,r),F.set(0,1),null!==(o=t.ray.intersectTriangle(N,I,D,!1,E)))){var s=t.ray.origin.distanceTo(E);s<t.near||s>t.far||e.push({distance:s,point:E.clone(),uv:x.Triangle.getUV(E,N,D,I,O,F,B,new y.Vector2),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return c.Object3D.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this}});var G=n(75),z=n(69),k=n(171),H=n(66),j=new _.Vector3,W=new _.Vector3;function X(){c.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}X.prototype=Object.assign(Object.create(c.Object3D.prototype),{constructor:X,isLOD:!0,copy:function(t){c.Object3D.prototype.copy.call(this,t,!1);for(var e=t.levels,n=0,r=e.length;n<r;n++){var i=e[n];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var n=this.levels,r=0;r<n.length&&!(e<n[r].distance);r++);return n.splice(r,0,{distance:e,object:t}),this.add(t),this},getObjectForDistance:function(t){var e=this.levels;if(e.length>0){for(var n=1,r=e.length;n<r&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){j.setFromMatrixPosition(this.matrixWorld);var n=t.ray.origin.distanceTo(j);this.getObjectForDistance(n).raycast(t,e)}},update:function(t){var e=this.levels;if(e.length>1){j.setFromMatrixPosition(t.matrixWorld),W.setFromMatrixPosition(this.matrixWorld);var n=j.distanceTo(W);e[0].object.visible=!0;for(var r=1,i=e.length;r<i&&n>=e[r].distance;r++)e[r-1].object.visible=!1,e[r].object.visible=!0;for(;r<i;r++)e[r].object.visible=!1}},toJSON:function(t){var e=c.Object3D.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];for(var n=this.levels,r=0,i=n.length;r<i;r++){var a=n[r];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}});var q=n(121),Y=n(111),Z=n(227),J=n(226),K=n(24);function Q(t,e,n){K.a.call(this,t,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(c.Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new s.Color(e)}Q.prototype=Object.assign(Object.create(K.a.prototype),{constructor:Q,isHemisphereLight:!0,copy:function(t){return K.a.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});var $=n(174),tt=n(175),et=n(176),nt=n(225);function rt(t,e,n,r){K.a.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}rt.prototype=Object.assign(Object.create(K.a.prototype),{constructor:rt,isRectAreaLight:!0,copy:function(t){return K.a.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=K.a.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});var it=n(57),at=n(37),ot=n(84),st=n(168),ct=n(28),lt=n(172),ut=n(173),ht=n(96),pt=n(17),dt=n(20),ft=n(27),mt=n(18);function vt(t){S.a.call(this),this.type="ShadowMaterial",this.color=new s.Color(0),this.transparent=!0,this.setValues(t)}vt.prototype=Object.create(S.a.prototype),vt.prototype.constructor=vt,vt.prototype.isShadowMaterial=!0,vt.prototype.copy=function(t){return S.a.prototype.copy.call(this,t),this.color.copy(t.color),this};var gt=n(34);function yt(t){gt.a.call(this,t),this.type="RawShaderMaterial"}yt.prototype=Object.create(gt.a.prototype),yt.prototype.constructor=yt,yt.prototype.isRawShaderMaterial=!0;var _t=n(58),xt=n(68);function bt(t){xt.MeshStandardMaterial.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearcoat=0,this.clearcoatRoughness=0,this.sheen=null,this.clearcoatNormalScale=new y.Vector2(1,1),this.clearcoatNormalMap=null,this.transparency=0,this.setValues(t)}bt.prototype=Object.create(xt.MeshStandardMaterial.prototype),bt.prototype.constructor=bt,bt.prototype.isMeshPhysicalMaterial=!0,bt.prototype.copy=function(t){return xt.MeshStandardMaterial.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearcoat=t.clearcoat,this.clearcoatRoughness=t.clearcoatRoughness,t.sheen?this.sheen=(this.sheen||new s.Color).copy(t.sheen):this.sheen=null,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.transparency=t.transparency,this};var Mt=n(166);function wt(t){S.a.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new s.Color(16777215),this.specular=new s.Color(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new s.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=a.TangentSpaceNormalMap,this.normalScale=new y.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function St(t){S.a.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=a.TangentSpaceNormalMap,this.normalScale=new y.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}wt.prototype=Object.create(S.a.prototype),wt.prototype.constructor=wt,wt.prototype.isMeshToonMaterial=!0,wt.prototype.copy=function(t){return S.a.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},St.prototype=Object.create(S.a.prototype),St.prototype.constructor=St,St.prototype.isMeshNormalMaterial=!0,St.prototype.copy=function(t){return S.a.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};var Tt=n(213),Et=n(160),At=n(161),Lt=n(50);function Rt(t){S.a.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new s.Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=a.TangentSpaceNormalMap,this.normalScale=new y.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Rt.prototype=Object.create(S.a.prototype),Rt.prototype.constructor=Rt,Rt.prototype.isMeshMatcapMaterial=!0,Rt.prototype.copy=function(t){return S.a.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};var Ct=n(38);function Pt(t){Ct.LineBasicMaterial.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}function Nt(t){mt.a.call(this,t),this.textures={}}Pt.prototype=Object.create(Ct.LineBasicMaterial.prototype),Pt.prototype.constructor=Pt,Pt.prototype.isLineDashedMaterial=!0,Pt.prototype.copy=function(t){return Ct.LineBasicMaterial.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this},Nt.prototype=Object.assign(Object.create(mt.a.prototype),{constructor:Nt,load:function(t,e,n,r){var i=this,a=new ft.a(i.manager);a.setPath(i.path),a.load(t,(function(t){e(i.parse(JSON.parse(t)))}),n,r)},parse:function(t){var e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}var i=new r[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=(new s.Color).setHex(t.sheen)),void 0!==t.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&i.specular.setHex(t.specular),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.vertexColors&&(i.vertexColors=t.vertexColors),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(i.skinning=t.skinning),void 0!==t.morphTargets&&(i.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(i.morphNormals=t.morphNormals),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.uniforms)for(var a in t.uniforms){var o=t.uniforms[a];switch(i.uniforms[a]={},o.type){case"t":i.uniforms[a].value=n(o.value);break;case"c":i.uniforms[a].value=(new s.Color).setHex(o.value);break;case"v2":i.uniforms[a].value=(new y.Vector2).fromArray(o.value);break;case"v3":i.uniforms[a].value=(new _.Vector3).fromArray(o.value);break;case"v4":i.uniforms[a].value=(new pt.Vector4).fromArray(o.value);break;case"m3":i.uniforms[a].value=(new dt.a).fromArray(o.value);case"m4":i.uniforms[a].value=(new h.Matrix4).fromArray(o.value);break;default:i.uniforms[a].value=o.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(var c in t.extensions)i.extensions[c]=t.extensions[c];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=n(t.map)),void 0!==t.matcap&&(i.matcap=n(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=n(t.alphaMap),i.transparent=!0),void 0!==t.bumpMap&&(i.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){var l=t.normalScale;!1===Array.isArray(l)&&(l=[l,l]),i.normalScale=(new y.Vector2).fromArray(l)}return void 0!==t.displacementMap&&(i.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=n(t.specularMap)),void 0!==t.envMap&&(i.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new y.Vector2).fromArray(t.clearcoatNormalScale)),i},setTextures:function(t){return this.textures=t,this}});var Dt=n(87),It=n(33),Ot=n(229),Ft=n(230);function Bt(t){mt.a.call(this,t)}Bt.prototype=Object.assign(Object.create(mt.a.prototype),{constructor:Bt,load:function(t,e,n,r){var i=this,a=new ft.a(i.manager);a.setPath(i.path),a.load(t,(function(t){e(i.parse(JSON.parse(t)))}),n,r)},parse:function(t){var e=t.isInstancedBufferGeometry?new Ot.InstancedBufferGeometry:new b.BufferGeometry,n=t.data.index;if(void 0!==n){var r=new Vt[n.type](n.array);e.setIndex(new o.BufferAttribute(r,1))}var i=t.data.attributes;for(var a in i){var s=i[a],c=(r=new Vt[s.type](s.array),new(s.isInstancedBufferAttribute?Ft.InstancedBufferAttribute:o.BufferAttribute)(r,s.itemSize,s.normalized));void 0!==s.name&&(c.name=s.name),e.setAttribute(a,c)}var l=t.data.morphAttributes;if(l)for(var a in l){for(var u=l[a],h=[],p=0,d=u.length;p<d;p++){s=u[p],r=new Vt[s.type](s.array),c=new o.BufferAttribute(r,s.itemSize,s.normalized);void 0!==s.name&&(c.name=s.name),h.push(c)}e.morphAttributes[a]=h}t.data.morphTargetsRelative&&(e.morphTargetsRelative=!0);var f=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==f){p=0;for(var m=f.length;p!==m;++p){var v=f[p];e.addGroup(v.start,v.count,v.materialIndex)}}var g=t.data.boundingSphere;if(void 0!==g){var y=new _.Vector3;void 0!==g.center&&y.fromArray(g.center),e.boundingSphere=new It.Sphere(y,g.radius)}return t.name&&(e.name=t.name),t.userData&&(e.userData=t.userData),e}});var Vt={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ut(t){b.BufferGeometry.call(this),this.type="WireframeGeometry";var e,n,r,i,a,s,c,l,u,h,p=[],d=[0,0],f={},m=["a","b","c"];if(t&&t.isGeometry){var v=t.faces;for(e=0,r=v.length;e<r;e++){var g=v[e];for(n=0;n<3;n++)c=g[m[n]],l=g[m[(n+1)%3]],d[0]=Math.min(c,l),d[1]=Math.max(c,l),void 0===f[u=d[0]+","+d[1]]&&(f[u]={index1:d[0],index2:d[1]})}for(u in f)s=f[u],h=t.vertices[s.index1],p.push(h.x,h.y,h.z),h=t.vertices[s.index2],p.push(h.x,h.y,h.z)}else if(t&&t.isBufferGeometry){var y,x,M,w,S,T,E;if(h=new _.Vector3,null!==t.index){for(y=t.attributes.position,x=t.index,0===(M=t.groups).length&&(M=[{start:0,count:x.count,materialIndex:0}]),i=0,a=M.length;i<a;++i)for(e=S=(w=M[i]).start,r=S+w.count;e<r;e+=3)for(n=0;n<3;n++)c=x.getX(e+n),l=x.getX(e+(n+1)%3),d[0]=Math.min(c,l),d[1]=Math.max(c,l),void 0===f[u=d[0]+","+d[1]]&&(f[u]={index1:d[0],index2:d[1]});for(u in f)s=f[u],h.fromBufferAttribute(y,s.index1),p.push(h.x,h.y,h.z),h.fromBufferAttribute(y,s.index2),p.push(h.x,h.y,h.z)}else for(e=0,r=(y=t.attributes.position).count/3;e<r;e++)for(n=0;n<3;n++)T=3*e+n,h.fromBufferAttribute(y,T),p.push(h.x,h.y,h.z),E=3*e+(n+1)%3,h.fromBufferAttribute(y,E),p.push(h.x,h.y,h.z)}this.setAttribute("position",new o.Float32BufferAttribute(p,3))}Ut.prototype=Object.create(b.BufferGeometry.prototype),Ut.prototype.constructor=Ut;var Gt=n(11);function zt(t,e,n){Gt.a.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new kt(t,e,n)),this.mergeVertices()}function kt(t,e,n){b.BufferGeometry.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};var r,i,a=[],s=[],c=[],l=[],u=new _.Vector3,h=new _.Vector3,p=new _.Vector3,d=new _.Vector3,f=new _.Vector3;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var m=e+1;for(r=0;r<=n;r++){var v=r/n;for(i=0;i<=e;i++){var g=i/e;t(g,v,h),s.push(h.x,h.y,h.z),g-1e-5>=0?(t(g-1e-5,v,p),d.subVectors(h,p)):(t(g+1e-5,v,p),d.subVectors(p,h)),v-1e-5>=0?(t(g,v-1e-5,p),f.subVectors(h,p)):(t(g,v+1e-5,p),f.subVectors(p,h)),u.crossVectors(d,f).normalize(),c.push(u.x,u.y,u.z),l.push(g,v)}}for(r=0;r<n;r++)for(i=0;i<e;i++){var y=r*m+i,x=r*m+i+1,M=(r+1)*m+i+1,w=(r+1)*m+i;a.push(y,x,w),a.push(x,M,w)}this.setIndex(a),this.setAttribute("position",new o.Float32BufferAttribute(s,3)),this.setAttribute("normal",new o.Float32BufferAttribute(c,3)),this.setAttribute("uv",new o.Float32BufferAttribute(l,2))}zt.prototype=Object.create(Gt.a.prototype),zt.prototype.constructor=zt,kt.prototype=Object.create(b.BufferGeometry.prototype),kt.prototype.constructor=kt;var Ht=n(39);function jt(t,e){Gt.a.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Wt(t,e)),this.mergeVertices()}function Wt(t,e){Ht.a.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Xt(t,e){Gt.a.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new qt(t,e)),this.mergeVertices()}function qt(t,e){Ht.a.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}jt.prototype=Object.create(Gt.a.prototype),jt.prototype.constructor=jt,Wt.prototype=Object.create(Ht.a.prototype),Wt.prototype.constructor=Wt,Xt.prototype=Object.create(Gt.a.prototype),Xt.prototype.constructor=Xt,qt.prototype=Object.create(Ht.a.prototype),qt.prototype.constructor=qt;var Yt=n(151);function Zt(t,e){Gt.a.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Jt(t,e)),this.mergeVertices()}function Jt(t,e){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r];Ht.a.call(this,i,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Kt(t,e,n,r,i,a){Gt.a.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Qt(t,e,n,r,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function Qt(t,e,n,r,i){b.BufferGeometry.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:i},e=e||64,n=n||1,r=r||8,i=i||!1;var a=t.computeFrenetFrames(e,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var s,c,l=new _.Vector3,u=new _.Vector3,h=new y.Vector2,p=new _.Vector3,d=[],f=[],m=[],v=[];function g(i){p=t.getPointAt(i/e,p);var o=a.normals[i],s=a.binormals[i];for(c=0;c<=r;c++){var h=c/r*Math.PI*2,m=Math.sin(h),v=-Math.cos(h);u.x=v*o.x+m*s.x,u.y=v*o.y+m*s.y,u.z=v*o.z+m*s.z,u.normalize(),f.push(u.x,u.y,u.z),l.x=p.x+n*u.x,l.y=p.y+n*u.y,l.z=p.z+n*u.z,d.push(l.x,l.y,l.z)}}!function(){for(s=0;s<e;s++)g(s);g(!1===i?e:0),function(){for(s=0;s<=e;s++)for(c=0;c<=r;c++)h.x=s/e,h.y=c/r,m.push(h.x,h.y)}(),function(){for(c=1;c<=e;c++)for(s=1;s<=r;s++){var t=(r+1)*(c-1)+(s-1),n=(r+1)*c+(s-1),i=(r+1)*c+s,a=(r+1)*(c-1)+s;v.push(t,n,a),v.push(n,i,a)}}()}(),this.setIndex(v),this.setAttribute("position",new o.Float32BufferAttribute(d,3)),this.setAttribute("normal",new o.Float32BufferAttribute(f,3)),this.setAttribute("uv",new o.Float32BufferAttribute(m,2))}Zt.prototype=Object.create(Gt.a.prototype),Zt.prototype.constructor=Zt,Jt.prototype=Object.create(Ht.a.prototype),Jt.prototype.constructor=Jt,Kt.prototype=Object.create(Gt.a.prototype),Kt.prototype.constructor=Kt,Qt.prototype=Object.create(b.BufferGeometry.prototype),Qt.prototype.constructor=Qt,Qt.prototype.toJSON=function(){var t=b.BufferGeometry.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t};var $t=n(152),te=n(153),ee=n(154),ne=n(155);function re(t,e,n,r,i,a){Gt.a.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new ie(t,e,n,r,i,a)),this.mergeVertices()}function ie(t,e,n,r,i,a){b.BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},t=t||.5,e=e||1,i=void 0!==i?i:0,a=void 0!==a?a:2*Math.PI,n=void 0!==n?Math.max(3,n):8;var s,c,l,u=[],h=[],p=[],d=[],f=t,m=(e-t)/(r=void 0!==r?Math.max(1,r):1),v=new _.Vector3,g=new y.Vector2;for(c=0;c<=r;c++){for(l=0;l<=n;l++)s=i+l/n*a,v.x=f*Math.cos(s),v.y=f*Math.sin(s),h.push(v.x,v.y,v.z),p.push(0,0,1),g.x=(v.x/e+1)/2,g.y=(v.y/e+1)/2,d.push(g.x,g.y);f+=m}for(c=0;c<r;c++){var x=c*(n+1);for(l=0;l<n;l++){var M=s=l+x,w=s+n+1,S=s+n+2,T=s+1;u.push(M,w,T),u.push(w,S,T)}}this.setIndex(u),this.setAttribute("position",new o.Float32BufferAttribute(h,3)),this.setAttribute("normal",new o.Float32BufferAttribute(p,3)),this.setAttribute("uv",new o.Float32BufferAttribute(d,2))}re.prototype=Object.create(Gt.a.prototype),re.prototype.constructor=re,ie.prototype=Object.create(b.BufferGeometry.prototype),ie.prototype.constructor=ie;var ae=n(56),oe=n(13);function se(t,e,n,r){Gt.a.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},this.fromBufferGeometry(new ce(t,e,n,r)),this.mergeVertices()}function ce(t,e,n,r){b.BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e)||12,n=n||0,r=r||2*Math.PI,r=oe._Math.clamp(r,0,2*Math.PI);var i,a,s,c=[],l=[],u=[],h=1/e,p=new _.Vector3,d=new y.Vector2;for(a=0;a<=e;a++){var f=n+a*h*r,m=Math.sin(f),v=Math.cos(f);for(s=0;s<=t.length-1;s++)p.x=t[s].x*m,p.y=t[s].y,p.z=t[s].x*v,l.push(p.x,p.y,p.z),d.x=a/e,d.y=s/(t.length-1),u.push(d.x,d.y)}for(a=0;a<e;a++)for(s=0;s<t.length-1;s++){var g=i=s+a*t.length,x=i+t.length,M=i+t.length+1,w=i+1;c.push(g,x,w),c.push(x,M,w)}if(this.setIndex(c),this.setAttribute("position",new o.Float32BufferAttribute(l,3)),this.setAttribute("uv",new o.Float32BufferAttribute(u,2)),this.computeVertexNormals(),r===2*Math.PI){var S=this.attributes.normal.array,T=new _.Vector3,E=new _.Vector3,A=new _.Vector3;for(i=e*t.length*3,a=0,s=0;a<t.length;a++,s+=3)T.x=S[s+0],T.y=S[s+1],T.z=S[s+2],E.x=S[i+s+0],E.y=S[i+s+1],E.z=S[i+s+2],A.addVectors(T,E).normalize(),S[s+0]=S[i+s+0]=A.x,S[s+1]=S[i+s+1]=A.y,S[s+2]=S[i+s+2]=A.z}}se.prototype=Object.create(Gt.a.prototype),se.prototype.constructor=se,ce.prototype=Object.create(b.BufferGeometry.prototype),ce.prototype.constructor=ce;var le=n(156),ue=n(106);function he(t,e){b.BufferGeometry.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var n,r,i,a,s=[],c=Math.cos(oe._Math.DEG2RAD*e),l=[0,0],u={},h=["a","b","c"];t.isBufferGeometry?(a=new Gt.a).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();for(var p=a.vertices,d=a.faces,f=0,m=d.length;f<m;f++)for(var v=d[f],g=0;g<3;g++)n=v[h[g]],r=v[h[(g+1)%3]],l[0]=Math.min(n,r),l[1]=Math.max(n,r),void 0===u[i=l[0]+","+l[1]]?u[i]={index1:l[0],index2:l[1],face1:f,face2:void 0}:u[i].face2=f;for(i in u){var y=u[i];if(void 0===y.face2||d[y.face1].normal.dot(d[y.face2].normal)<=c){var _=p[y.index1];s.push(_.x,_.y,_.z),_=p[y.index2],s.push(_.x,_.y,_.z)}}this.setAttribute("position",new o.Float32BufferAttribute(s,3))}he.prototype=Object.create(b.BufferGeometry.prototype),he.prototype.constructor=he;var pe=n(67);function de(t,e,n,r,i,a,o){pe.CylinderGeometry.call(this,0,t,e,n,r,i,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}function fe(t,e,n,r,i,a,o){pe.CylinderBufferGeometry.call(this,0,t,e,n,r,i,a,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}de.prototype=Object.create(pe.CylinderGeometry.prototype),de.prototype.constructor=de,fe.prototype=Object.create(pe.CylinderBufferGeometry.prototype),fe.prototype.constructor=fe;var me=n(157),ve=n(105),ge=n(113);function ye(t){mt.a.call(this,t)}n.d(e,"ObjectLoader",(function(){return ye})),ye.prototype=Object.assign(Object.create(mt.a.prototype),{constructor:ye,load:function(t,e,n,r){var i=this,a=""===this.path?Dt.a.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||a;var o=new ft.a(i.manager);o.setPath(this.path),o.load(t,(function(n){var a=null;try{a=JSON.parse(n)}catch(e){return void 0!==r&&r(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}var o=a.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?i.parse(a,e):console.error("THREE.ObjectLoader: Can't load "+t)}),n,r)},parse:function(t,e){var n=this.parseShape(t.shapes),r=this.parseGeometries(t.geometries,n),i=this.parseImages(t.images,(function(){void 0!==e&&e(s)})),a=this.parseTextures(t.textures,i),o=this.parseMaterials(t.materials,a),s=this.parseObject(t.object,r,o);return t.animations&&(s.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(s),s},parseShape:function(t){var e={};if(void 0!==t)for(var n=0,r=t.length;n<r;n++){var i=(new Y.a).fromJSON(t[n]);e[i.uuid]=i}return e},parseGeometries:function(t,e){var n={};if(void 0!==t)for(var r=new Bt,a=0,o=t.length;a<o;a++){var s,c=t[a];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new i[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":s=new i[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new i[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new i[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new i[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new i[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new i[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new i[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new i[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new i[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":s=new i[c.type]((new ge[c.path.type]).fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":s=new i[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new i[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var l=[],u=0,h=c.shapes.length;u<h;u++){var p=e[c.shapes[u]];l.push(p)}s=new i[c.type](l,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(l=[],u=0,h=c.shapes.length;u<h;u++){p=e[c.shapes[u]];l.push(p)}var d=c.options.extrudePath;void 0!==d&&(c.options.extrudePath=(new ge[d.type]).fromJSON(d)),s=new i[c.type](l,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":s=r.parse(c);break;case"Geometry":if("THREE"in window&&"LegacyJSONLoader"in THREE)s=(new THREE.LegacyJSONLoader).parse(c,this.resourcePath).geometry;else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}s.uuid=c.uuid,void 0!==c.name&&(s.name=c.name),!0===s.isBufferGeometry&&void 0!==c.userData&&(s.userData=c.userData),n[c.uuid]=s}return n},parseMaterials:function(t,e){var n={},r={};if(void 0!==t){var i=new Nt;i.setTextures(e);for(var a=0,o=t.length;a<o;a++){var s=t[a];if("MultiMaterial"===s.type){for(var c=[],l=0;l<s.materials.length;l++){var u=s.materials[l];void 0===n[u.uuid]&&(n[u.uuid]=i.parse(u)),c.push(n[u.uuid])}r[s.uuid]=c}else void 0===n[s.uuid]&&(n[s.uuid]=i.parse(s)),r[s.uuid]=n[s.uuid]}}return r},parseAnimations:function(t){for(var e=[],n=0;n<t.length;n++){var r=t[n],i=ht.a.parse(r);void 0!==r.uuid&&(i.uuid=r.uuid),e.push(i)}return e},parseImages:function(t,e){var n=this,r={};function i(t){return n.manager.itemStart(t),o.load(t,(function(){n.manager.itemEnd(t)}),void 0,(function(){n.manager.itemError(t),n.manager.itemEnd(t)}))}if(void 0!==t&&t.length>0){var a=new ut.b(e),o=new lt.a(a);o.setCrossOrigin(this.crossOrigin);for(var s=0,c=t.length;s<c;s++){var l=t[s],u=l.url;if(Array.isArray(u)){r[l.uuid]=[];for(var h=0,p=u.length;h<p;h++){var d=u[h],f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;r[l.uuid].push(i(f))}}else{f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:n.resourcePath+l.url;r[l.uuid]=i(f)}}}return r},parseTextures:function(t,e){function n(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var r={};if(void 0!==t)for(var i=0,a=t.length;i<a;i++){var o,s=t[i];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),(o=Array.isArray(e[s.image])?new st.a(e[s.image]):new ct.a(e[s.image])).needsUpdate=!0,o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=n(s.mapping,_e)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=n(s.wrap[0],xe),o.wrapT=n(s.wrap[1],xe)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=n(s.minFilter,be)),void 0!==s.magFilter&&(o.magFilter=n(s.magFilter,be)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),r[s.uuid]=o}return r},parseObject:function(t,e,n){var r;function i(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],r=0,i=t.length;r<i;r++){var a=t[r];void 0===n[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),e.push(n[a])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}switch(t.type){case"Scene":r=new ot.Scene,void 0!==t.background&&Number.isInteger(t.background)&&(r.background=new s.Color(t.background)),void 0!==t.fog&&("Fog"===t.fog.type?r.fog=new Z.Fog(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(r.fog=new J.FogExp2(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":r=new at.PerspectiveCamera(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(r.focus=t.focus),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.filmGauge&&(r.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(r.filmOffset=t.filmOffset),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"OrthographicCamera":r=new it.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(r.zoom=t.zoom),void 0!==t.view&&(r.view=Object.assign({},t.view));break;case"AmbientLight":r=new nt.AmbientLight(t.color,t.intensity);break;case"DirectionalLight":r=new et.a(t.color,t.intensity);break;case"PointLight":r=new tt.a(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":r=new rt(t.color,t.intensity,t.width,t.height);break;case"SpotLight":r=new $.a(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":r=new Q(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var h=i(t.geometry),p=a(t.material);r=h.bones&&h.bones.length>0?new q.SkinnedMesh(h,p):new u.Mesh(h,p);break;case"InstancedMesh":h=i(t.geometry),p=a(t.material);var d=t.count,f=t.instanceMatrix;(r=new v(h,p,d)).instanceMatrix=new o.BufferAttribute(new Float32Array(f.array),16);break;case"LOD":r=new X;break;case"Line":r=new z.a(i(t.geometry),a(t.material),t.mode);break;case"LineLoop":r=new k.a(i(t.geometry),a(t.material));break;case"LineSegments":r=new H.LineSegments(i(t.geometry),a(t.material));break;case"PointCloud":case"Points":r=new G.Points(i(t.geometry),a(t.material));break;case"Sprite":r=new V(a(t.material));break;case"Group":r=new l.Group;break;default:r=new c.Object3D}if(r.uuid=t.uuid,void 0!==t.name&&(r.name=t.name),void 0!==t.matrix?(r.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(r.matrixAutoUpdate=t.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==t.position&&r.position.fromArray(t.position),void 0!==t.rotation&&r.rotation.fromArray(t.rotation),void 0!==t.quaternion&&r.quaternion.fromArray(t.quaternion),void 0!==t.scale&&r.scale.fromArray(t.scale)),void 0!==t.castShadow&&(r.castShadow=t.castShadow),void 0!==t.receiveShadow&&(r.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(r.shadow.bias=t.shadow.bias),void 0!==t.shadow.radius&&(r.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&r.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(r.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.frustumCulled&&(r.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(r.renderOrder=t.renderOrder),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.layers&&(r.layers.mask=t.layers),void 0!==t.children)for(var m=t.children,g=0;g<m.length;g++)r.add(this.parseObject(m[g],e,n));if("LOD"===t.type){void 0!==t.autoUpdate&&(r.autoUpdate=t.autoUpdate);for(var y=t.levels,_=0;_<y.length;_++){var x=y[_],b=r.getObjectByProperty("uuid",x.object);void 0!==b&&r.addLevel(b,x.distance)}}return r}});var _e={UVMapping:a.UVMapping,CubeReflectionMapping:a.CubeReflectionMapping,CubeRefractionMapping:a.CubeRefractionMapping,EquirectangularReflectionMapping:a.EquirectangularReflectionMapping,EquirectangularRefractionMapping:a.EquirectangularRefractionMapping,SphericalReflectionMapping:a.SphericalReflectionMapping,CubeUVReflectionMapping:a.CubeUVReflectionMapping,CubeUVRefractionMapping:a.CubeUVRefractionMapping},xe={RepeatWrapping:a.RepeatWrapping,ClampToEdgeWrapping:a.ClampToEdgeWrapping,MirroredRepeatWrapping:a.MirroredRepeatWrapping},be={NearestFilter:a.NearestFilter,NearestMipmapNearestFilter:a.NearestMipmapNearestFilter,NearestMipmapLinearFilter:a.NearestMipmapLinearFilter,LinearFilter:a.LinearFilter,LinearMipmapNearestFilter:a.LinearMipmapNearestFilter,LinearMipmapLinearFilter:a.LinearMipmapLinearFilter}},331:function(t,e,n){"use strict";function r(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}n.d(e,"a",(function(){return r})),Object.assign(r.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}})},332:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(15),i=new r.Matrix4,a=new r.Matrix4;function o(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new r.Matrix4)}}Object.assign(o.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var n=new r.Matrix4;this.bones[t]&&n.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(n)}},pose:function(){var t,e,n;for(e=0,n=this.bones.length;e<n;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,n=this.bones.length;e<n;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){for(var t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture,o=0,s=t.length;o<s;o++){var c=t[o]?t[o].matrixWorld:a;i.multiplyMatrices(c,e[o]),i.toArray(n,16*o)}void 0!==r&&(r.needsUpdate=!0)},clone:function(){return new o(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,n=this.bones.length;e<n;e++){var r=this.bones[e];if(r.name===t)return r}}})},333:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(0),i=n(172),a=n(28),o=n(18);function s(t){o.a.call(this,t)}s.prototype=Object.assign(Object.create(o.a.prototype),{constructor:s,load:function(t,e,n,o){var s=new a.a,c=new i.a(this.manager);return c.setCrossOrigin(this.crossOrigin),c.setPath(this.path),c.load(t,(function(n){s.image=n;var i=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);s.format=i?r.RGBFormat:r.RGBAFormat,s.needsUpdate=!0,void 0!==e&&e(s)}),n,o),s}})},34:function(t,e,n){"use strict";var r=n(8),i=n(22);function a(t){r.a.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",this.fragmentShader="\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}n.d(e,"a",(function(){return a})),a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isShaderMaterial=!0,a.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Object(i.b)(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},a.prototype.toJSON=function(t){var e=r.a.prototype.toJSON.call(this,t);for(var n in e.uniforms={},this.uniforms){var i=this.uniforms[n].value;i&&i.isTexture?e.uniforms[n]={type:"t",value:i.toJSON(t).uuid}:i&&i.isColor?e.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?e.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?e.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?e.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?e.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?e.uniforms[n]={type:"m4",value:i.toArray()}:e.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var a={};for(var o in this.extensions)!0===this.extensions[o]&&(a[o]=!0);return Object.keys(a).length>0&&(e.extensions=a),e}},35:function(t,e,n){"use strict";function r(t,e,n,r,i){var a=.5*(r-e),o=.5*(i-n),s=t*t;return(2*n-2*r+a+o)*(t*s)+(-3*n+3*r-2*a-o)*s+a*t+n}function i(t,e,n,r){return function(t,e){var n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function a(t,e,n,r,i){return function(t,e){var n=1-t;return n*n*n*e}(t,e)+function(t,e){var n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return i})),n.d(e,"b",(function(){return a}))},36:function(t,e,n){"use strict";n.r(e),n.d(e,"Group",(function(){return i}));var r=n(10);function i(){r.Object3D.call(this),this.type="Group"}i.prototype=Object.assign(Object.create(r.Object3D.prototype),{constructor:i,isGroup:!0})},37:function(t,e,n){"use strict";n.r(e),n.d(e,"PerspectiveCamera",(function(){return o}));var r=n(86),i=n(10),a=n(13);function o(t,e,n,i){r.a.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==n?n:.1,this.far=void 0!==i?i:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}o.prototype=Object.assign(Object.create(r.a.prototype),{constructor:o,isPerspectiveCamera:!0,copy:function(t,e){return r.a.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*a._Math.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*a._Math.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*a._Math.RAD2DEG*Math.atan(Math.tan(.5*a._Math.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,r,i,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*a._Math.DEG2RAD*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r,o=this.view;if(null!==this.view&&this.view.enabled){var s=o.fullWidth,c=o.fullHeight;i+=o.offsetX*r/s,e-=o.offsetY*n/c,r*=o.width/s,n*=o.height/c}var l=this.filmOffset;0!==l&&(i+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=i.Object3D.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}})},38:function(t,e,n){"use strict";n.r(e),n.d(e,"LineBasicMaterial",(function(){return a}));var r=n(8),i=n(6);function a(t){r.a.call(this),this.type="LineBasicMaterial",this.color=new i.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isLineBasicMaterial=!0,a.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this}},39:function(t,e,n){"use strict";n.d(e,"b",(function(){return c})),n.d(e,"a",(function(){return l}));var r=n(11),i=n(5),a=n(4),o=n(1),s=n(2);function c(t,e,n,i){r.a.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},this.fromBufferGeometry(new l(t,e,n,i)),this.mergeVertices()}function l(t,e,n,r){i.BufferGeometry.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r},n=n||1;var c=[],l=[];function u(t,e,n,r){var i,a,o=Math.pow(2,r),s=[];for(i=0;i<=o;i++){s[i]=[];var c=t.clone().lerp(n,i/o),l=e.clone().lerp(n,i/o),u=o-i;for(a=0;a<=u;a++)s[i][a]=0===a&&i===o?c:c.clone().lerp(l,a/u)}for(i=0;i<o;i++)for(a=0;a<2*(o-i)-1;a++){var p=Math.floor(a/2);a%2==0?(h(s[i][p+1]),h(s[i+1][p]),h(s[i][p])):(h(s[i][p+1]),h(s[i+1][p+1]),h(s[i+1][p]))}}function h(t){c.push(t.x,t.y,t.z)}function p(e,n){var r=3*e;n.x=t[r+0],n.y=t[r+1],n.z=t[r+2]}function d(t,e,n,r){r<0&&1===t.x&&(l[e]=t.x-1),0===n.x&&0===n.z&&(l[e]=r/2/Math.PI+.5)}function f(t){return Math.atan2(t.z,-t.x)}!function(t){for(var n=new o.Vector3,r=new o.Vector3,i=new o.Vector3,a=0;a<e.length;a+=3)p(e[a+0],n),p(e[a+1],r),p(e[a+2],i),u(n,r,i,t)}(r=r||0),function(t){for(var e=new o.Vector3,n=0;n<c.length;n+=3)e.x=c[n+0],e.y=c[n+1],e.z=c[n+2],e.normalize().multiplyScalar(t),c[n+0]=e.x,c[n+1]=e.y,c[n+2]=e.z}(n),function(){for(var t=new o.Vector3,e=0;e<c.length;e+=3){t.x=c[e+0],t.y=c[e+1],t.z=c[e+2];var n=f(t)/2/Math.PI+.5,r=(i=t,Math.atan2(-i.y,Math.sqrt(i.x*i.x+i.z*i.z))/Math.PI+.5);l.push(n,1-r)}var i;(function(){for(var t=new o.Vector3,e=new o.Vector3,n=new o.Vector3,r=new o.Vector3,i=new s.Vector2,a=new s.Vector2,u=new s.Vector2,h=0,p=0;h<c.length;h+=9,p+=6){t.set(c[h+0],c[h+1],c[h+2]),e.set(c[h+3],c[h+4],c[h+5]),n.set(c[h+6],c[h+7],c[h+8]),i.set(l[p+0],l[p+1]),a.set(l[p+2],l[p+3]),u.set(l[p+4],l[p+5]),r.copy(t).add(e).add(n).divideScalar(3);var m=f(r);d(i,p+0,t,m),d(a,p+2,e,m),d(u,p+4,n,m)}})(),function(){for(var t=0;t<l.length;t+=6){var e=l[t+0],n=l[t+2],r=l[t+4],i=Math.max(e,n,r),a=Math.min(e,n,r);i>.9&&a<.1&&(e<.2&&(l[t+0]+=1),n<.2&&(l[t+2]+=1),r<.2&&(l[t+4]+=1))}}()}(),this.setAttribute("position",new a.Float32BufferAttribute(c,3)),this.setAttribute("normal",new a.Float32BufferAttribute(c.slice(),3)),this.setAttribute("uv",new a.Float32BufferAttribute(l,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}c.prototype=Object.create(r.a.prototype),c.prototype.constructor=c,l.prototype=Object.create(i.BufferGeometry.prototype),l.prototype.constructor=l},4:function(t,e,n){"use strict";n.r(e),n.d(e,"Float64BufferAttribute",(function(){return y})),n.d(e,"Float32BufferAttribute",(function(){return g})),n.d(e,"Uint32BufferAttribute",(function(){return v})),n.d(e,"Int32BufferAttribute",(function(){return m})),n.d(e,"Uint16BufferAttribute",(function(){return f})),n.d(e,"Int16BufferAttribute",(function(){return d})),n.d(e,"Uint8ClampedBufferAttribute",(function(){return p})),n.d(e,"Uint8BufferAttribute",(function(){return h})),n.d(e,"Int8BufferAttribute",(function(){return u})),n.d(e,"BufferAttribute",(function(){return l}));var r=n(17),i=n(1),a=n(2),o=n(6),s=n(0),c=new i.Vector3;function l(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=s.StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}function u(t,e,n){l.call(this,new Int8Array(t),e,n)}function h(t,e,n){l.call(this,new Uint8Array(t),e,n)}function p(t,e,n){l.call(this,new Uint8ClampedArray(t),e,n)}function d(t,e,n){l.call(this,new Int16Array(t),e,n)}function f(t,e,n){l.call(this,new Uint16Array(t),e,n)}function m(t,e,n){l.call(this,new Int32Array(t),e,n)}function v(t,e,n){l.call(this,new Uint32Array(t),e,n)}function g(t,e,n){l.call(this,new Float32Array(t),e,n)}function y(t,e,n){l.call(this,new Float64Array(t),e,n)}Object.defineProperty(l.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(l.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,n=0,r=0,i=t.length;r<i;r++){var a=t[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new o.Color),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,r=0,i=t.length;r<i;r++){var o=t[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new a.Vector2),e[n++]=o.x,e[n++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,n=0,r=0,a=t.length;r<a;r++){var o=t[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new i.Vector3),e[n++]=o.x,e[n++]=o.y,e[n++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,n=0,i=0,a=t.length;i<a;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new r.Vector4),e[n++]=o.x,e[n++]=o.y,e[n++]=o.z,e[n++]=o.w}return this},applyMatrix3:function(t){for(var e=0,n=this.count;e<n;e++)c.x=this.getX(e),c.y=this.getY(e),c.z=this.getZ(e),c.applyMatrix3(t),this.setXYZ(e,c.x,c.y,c.z);return this},applyMatrix4:function(t){for(var e=0,n=this.count;e<n;e++)c.x=this.getX(e),c.y=this.getY(e),c.z=this.getZ(e),c.applyMatrix4(t),this.setXYZ(e,c.x,c.y,c.z);return this},applyNormalMatrix:function(t){for(var e=0,n=this.count;e<n;e++)c.x=this.getX(e),c.y=this.getY(e),c.z=this.getZ(e),c.applyNormalMatrix(t),this.setXYZ(e,c.x,c.y,c.z);return this},transformDirection:function(t){for(var e=0,n=this.count;e<n;e++)c.x=this.getX(e),c.y=this.getY(e),c.z=this.getZ(e),c.transformDirection(t),this.setXYZ(e,c.x,c.y,c.z);return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this},setXYZW:function(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),u.prototype=Object.create(l.prototype),u.prototype.constructor=u,h.prototype=Object.create(l.prototype),h.prototype.constructor=h,p.prototype=Object.create(l.prototype),p.prototype.constructor=p,d.prototype=Object.create(l.prototype),d.prototype.constructor=d,f.prototype=Object.create(l.prototype),f.prototype.constructor=f,m.prototype=Object.create(l.prototype),m.prototype.constructor=m,v.prototype=Object.create(l.prototype),v.prototype.constructor=v,g.prototype=Object.create(l.prototype),g.prototype.constructor=g,y.prototype=Object.create(l.prototype),y.prototype.constructor=y},40:function(t,e,n){"use strict";function r(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n}n.d(e,"a",(function(){return r})),Object.assign(r.prototype,{evaluate:function(t){var e=this.parameterPositions,n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{var a;n:{r:if(!(t<r)){for(var o=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===o)break;if(i=r,t<(r=e[++n]))break e}a=e.length;break n}if(t>=i)break t;var s=e[1];t<s&&(n=2,i=s);for(o=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===o)break;if(r=i,t>=(i=e[--n-1]))break e}a=n,n=0}for(;n<a;){var c=n+a>>>1;t<e[c]?a=c:n=c+1}if(r=e[n],void 0===(i=e[n-1]))return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r,a=0;a!==r;++a)e[a]=n[i+a];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(r.prototype,{beforeStart_:r.prototype.copySampleValue_,afterEnd_:r.prototype.copySampleValue_})},44:function(t,e,n){"use strict";n.r(e),n.d(e,"Box3",(function(){return g}));var r=n(1),i=[new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3],a=new r.Vector3,o=new g,s=new r.Vector3,c=new r.Vector3,l=new r.Vector3,u=new r.Vector3,h=new r.Vector3,p=new r.Vector3,d=new r.Vector3,f=new r.Vector3,m=new r.Vector3,v=new r.Vector3;function g(t,e){this.min=void 0!==t?t:new r.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new r.Vector3(-1/0,-1/0,-1/0)}function y(t,e,n,r,i){var a,o;for(a=0,o=t.length-3;a<=o;a+=3){v.fromArray(t,a);var s=i.x*Math.abs(v.x)+i.y*Math.abs(v.y)+i.z*Math.abs(v.z),c=e.dot(v),l=n.dot(v),u=r.dot(v);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>s)return!1}return!0}Object.assign(g.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=t.length;s<c;s+=3){var l=t[s],u=t[s+1],h=t[s+2];l<e&&(e=l),u<n&&(n=u),h<r&&(r=h),l>i&&(i=l),u>a&&(a=u),h>o&&(o=h)}return this.min.set(e,n,r),this.max.set(i,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,c=t.count;s<c;s++){var l=t.getX(s),u=t.getY(s),h=t.getZ(s);l<e&&(e=l),u<n&&(n=u),h<r&&(r=h),l>i&&(i=l),u>a&&(a=u),h>o&&(o=h)}return this.min.set(e,n,r),this.max.set(i,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var n=a.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new r.Vector3),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new r.Vector3),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){t.updateWorldMatrix(!1,!1);var e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),o.copy(e.boundingBox),o.applyMatrix4(t.matrixWorld),this.expandByPoint(o.min),this.expandByPoint(o.max));for(var n=t.children,r=0,i=n.length;r<i;r++)this.expandByObject(n[r]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new r.Vector3),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,a),a.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){var e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant},intersectsTriangle:function(t){if(this.isEmpty())return!1;this.getCenter(d),f.subVectors(this.max,d),s.subVectors(t.a,d),c.subVectors(t.b,d),l.subVectors(t.c,d),u.subVectors(c,s),h.subVectors(l,c),p.subVectors(s,l);var e=[0,-u.z,u.y,0,-h.z,h.y,0,-p.z,p.y,u.z,0,-u.x,h.z,0,-h.x,p.z,0,-p.x,-u.y,u.x,0,-h.y,h.x,0,-p.y,p.x,0];return!!y(e,s,c,l,f)&&(!!y(e=[1,0,0,0,1,0,0,0,1],s,c,l,f)&&(m.crossVectors(u,h),y(e=[m.x,m.y,m.z],s,c,l,f)))},clampPoint:function(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new r.Vector3),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){return a.copy(t).clamp(this.min,this.max).sub(t).length()},getBoundingSphere:function(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(a).length(),t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()?this:(i[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),i[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),i[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),i[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),i[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),i[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),i[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),i[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(i),this)},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}})},5:function(t,e,n){"use strict";n.r(e);var r=n(1),i=n(44),a=n(30),o=n(4),s=n(33),c=n(2);function l(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(l.prototype,{computeGroups:function(t){for(var e,n=[],r=void 0,i=t.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==r&&(r=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,n.push(e)),e={start:3*a,materialIndex:r})}void 0!==e&&(e.count=3*a-e.start,n.push(e)),this.groups=n},fromGeometry:function(t){var e,n=t.faces,r=t.vertices,i=t.faceVertexUvs,a=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=t.morphTargets,l=s.length;if(l>0){e=[];for(var u=0;u<l;u++)e[u]={name:s[u].name,data:[]};this.morphTargets.position=e}var h,p=t.morphNormals,d=p.length;if(d>0){h=[];for(u=0;u<d;u++)h[u]={name:p[u].name,data:[]};this.morphTargets.normal=h}var f=t.skinIndices,m=t.skinWeights,v=f.length===r.length,g=m.length===r.length;r.length>0&&0===n.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(u=0;u<n.length;u++){var y=n[u];this.vertices.push(r[y.a],r[y.b],r[y.c]);var _=y.vertexNormals;if(3===_.length)this.normals.push(_[0],_[1],_[2]);else{var x=y.normal;this.normals.push(x,x,x)}var b,M=y.vertexColors;if(3===M.length)this.colors.push(M[0],M[1],M[2]);else{var w=y.color;this.colors.push(w,w,w)}if(!0===a)void 0!==(b=i[0][u])?this.uvs.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",u),this.uvs.push(new c.Vector2,new c.Vector2,new c.Vector2));if(!0===o)void 0!==(b=i[1][u])?this.uvs2.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",u),this.uvs2.push(new c.Vector2,new c.Vector2,new c.Vector2));for(var S=0;S<l;S++){var T=s[S].vertices;e[S].data.push(T[y.a],T[y.b],T[y.c])}for(S=0;S<d;S++){var E=p[S].vertexNormals[u];h[S].data.push(E.a,E.b,E.c)}v&&this.skinIndices.push(f[y.a],f[y.b],f[y.c]),g&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}});var u=n(10),h=n(15),p=n(20),d=n(13),f=n(167);n.d(e,"BufferGeometry",(function(){return M}));var m=1,v=new h.Matrix4,g=new u.Object3D,y=new r.Vector3,_=new i.Box3,x=new i.Box3,b=new r.Vector3;function M(){Object.defineProperty(this,"id",{value:m+=2}),this.uuid=d._Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}M.prototype=Object.assign(Object.create(a.a.prototype),{constructor:M,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Object(f.a)(t)>65535?o.Uint32BufferAttribute:o.Uint16BufferAttribute)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){var r=(new p.a).getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}var i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return v.makeRotationX(t),this.applyMatrix(v),this},rotateY:function(t){return v.makeRotationY(t),this.applyMatrix(v),this},rotateZ:function(t){return v.makeRotationZ(t),this.applyMatrix(v),this},translate:function(t,e,n){return v.makeTranslation(t,e,n),this.applyMatrix(v),this},scale:function(t,e,n){return v.makeScale(t,e,n),this.applyMatrix(v),this},lookAt:function(t){return g.lookAt(t),g.updateMatrix(),this.applyMatrix(g.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(y).negate(),this.translate(y.x,y.y,y.z),this},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var n=new o.Float32BufferAttribute(3*e.vertices.length,3),r=new o.Float32BufferAttribute(3*e.colors.length,3);if(this.setAttribute("position",n.copyVector3sArray(e.vertices)),this.setAttribute("color",r.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var i=new o.Float32BufferAttribute(e.lineDistances.length,1);this.setAttribute("lineDistance",i.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],n=0,r=t.length;n<r;n++){var i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new o.Float32BufferAttribute(e,3)),this},updateFromObject:function(t){var e,n=t.geometry;if(t.isMesh){var r=n.__directGeometry;if(!0===n.elementsNeedUpdate&&(r=void 0,n.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(n);r.verticesNeedUpdate=n.verticesNeedUpdate,r.normalsNeedUpdate=n.normalsNeedUpdate,r.colorsNeedUpdate=n.colorsNeedUpdate,r.uvsNeedUpdate=n.uvsNeedUpdate,r.groupsNeedUpdate=n.groupsNeedUpdate,n.verticesNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.groupsNeedUpdate=!1,n=r}return!0===n.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(n.vertices),e.needsUpdate=!0),n.verticesNeedUpdate=!1),!0===n.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(n.normals),e.needsUpdate=!0),n.normalsNeedUpdate=!1),!0===n.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(n.colors),e.needsUpdate=!0),n.colorsNeedUpdate=!1),n.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(n.uvs),e.needsUpdate=!0),n.uvsNeedUpdate=!1),n.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(n.lineDistances),e.needsUpdate=!0),n.lineDistancesNeedUpdate=!1),n.groupsNeedUpdate&&(n.computeGroups(t.geometry),this.groups=n.groups,n.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new l).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new o.BufferAttribute(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var n=new Float32Array(3*t.normals.length);this.setAttribute("normal",new o.BufferAttribute(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var r=new Float32Array(3*t.colors.length);this.setAttribute("color",new o.BufferAttribute(r,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var i=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new o.BufferAttribute(i,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new o.BufferAttribute(a,2).copyVector2sArray(t.uvs2))}for(var s in this.groups=t.groups,t.morphTargets){for(var c=[],l=t.morphTargets[s],u=0,h=l.length;u<h;u++){var p=l[u],d=new o.Float32BufferAttribute(3*p.data.length,3);d.name=p.name,c.push(d.copyVector3sArray(p.data))}this.morphAttributes[s]=c}if(t.skinIndices.length>0){var f=new o.Float32BufferAttribute(4*t.skinIndices.length,4);this.setAttribute("skinIndex",f.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var m=new o.Float32BufferAttribute(4*t.skinWeights.length,4);this.setAttribute("skinWeight",m.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new i.Box3);var t=this.attributes.position,e=this.morphAttributes.position;if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(var n=0,r=e.length;n<r;n++){var a=e[n];_.setFromBufferAttribute(a),this.morphTargetsRelative?(b.addVectors(this.boundingBox.min,_.min),this.boundingBox.expandByPoint(b),b.addVectors(this.boundingBox.max,_.max),this.boundingBox.expandByPoint(b)):(this.boundingBox.expandByPoint(_.min),this.boundingBox.expandByPoint(_.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new s.Sphere);var t=this.attributes.position,e=this.morphAttributes.position;if(t){var n=this.boundingSphere.center;if(_.setFromBufferAttribute(t),e)for(var r=0,i=e.length;r<i;r++){var a=e[r];x.setFromBufferAttribute(a),this.morphTargetsRelative?(b.addVectors(_.min,x.min),_.expandByPoint(b),b.addVectors(_.max,x.max),_.expandByPoint(b)):(_.expandByPoint(x.min),_.expandByPoint(x.max))}_.getCenter(n);var o=0;for(r=0,i=t.count;r<i;r++)b.fromBufferAttribute(t,r),o=Math.max(o,n.distanceToSquared(b));if(e)for(r=0,i=e.length;r<i;r++){a=e[r];for(var c=this.morphTargetsRelative,l=0,u=a.count;l<u;l++)b.fromBufferAttribute(a,l),c&&(y.fromBufferAttribute(t,l),b.add(y)),o=Math.max(o,n.distanceToSquared(b))}this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var n=e.position.array;if(void 0===e.normal)this.setAttribute("normal",new o.BufferAttribute(new Float32Array(n.length),3));else for(var i=e.normal.array,a=0,s=i.length;a<s;a++)i[a]=0;var c,l,u,h=e.normal.array,p=new r.Vector3,d=new r.Vector3,f=new r.Vector3,m=new r.Vector3,v=new r.Vector3;if(t){var g=t.array;for(a=0,s=t.count;a<s;a+=3)c=3*g[a+0],l=3*g[a+1],u=3*g[a+2],p.fromArray(n,c),d.fromArray(n,l),f.fromArray(n,u),m.subVectors(f,d),v.subVectors(p,d),m.cross(v),h[c]+=m.x,h[c+1]+=m.y,h[c+2]+=m.z,h[l]+=m.x,h[l+1]+=m.y,h[l+2]+=m.z,h[u]+=m.x,h[u+1]+=m.y,h[u+2]+=m.z}else for(a=0,s=n.length;a<s;a+=9)p.fromArray(n,a),d.fromArray(n,a+3),f.fromArray(n,a+6),m.subVectors(f,d),v.subVectors(p,d),m.cross(v),h[a]=m.x,h[a+1]=m.y,h[a+2]=m.z,h[a+3]=m.x,h[a+4]=m.y,h[a+5]=m.z,h[a+6]=m.x,h[a+7]=m.y,h[a+8]=m.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var r in n)if(void 0!==t.attributes[r])for(var i=n[r].array,a=t.attributes[r],o=a.array,s=a.itemSize*e,c=Math.min(o.length,i.length-s),l=0,u=s;l<c;l++,u++)i[u]=o[l];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){for(var t=this.attributes.normal,e=0,n=t.count;e<n;e++)b.x=t.getX(e),b.y=t.getY(e),b.z=t.getZ(e),b.normalize(),t.setXYZ(e,b.x,b.y,b.z)},toNonIndexed:function(){function t(t,e){for(var n=t.array,r=t.itemSize,i=new n.constructor(e.length*r),a=0,s=0,c=0,l=e.length;c<l;c++){a=e[c]*r;for(var u=0;u<r;u++)i[s++]=n[a++]}return new o.BufferAttribute(i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new M,n=this.index.array,r=this.attributes;for(var i in r){var a=t(r[i],n);e.setAttribute(i,a)}var s=this.morphAttributes;for(i in s){for(var c=[],l=s[i],u=0,h=l.length;u<h;u++){a=t(l[u],n);c.push(a)}e.morphAttributes[i]=c}e.morphTargetsRelative=this.morphTargetsRelative;for(var p=this.groups,d=(u=0,p.length);u<d;u++){var f=p[u];e.addGroup(f.start,f.count,f.materialIndex)}return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(var n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};var r=this.index;null!==r&&(t.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var i=this.attributes;for(var n in i){var a=(p=i[n]).toJSON();""!==p.name&&(a.name=p.name),t.data.attributes[n]=a}var o={},s=!1;for(var n in this.morphAttributes){for(var c=this.morphAttributes[n],l=[],u=0,h=c.length;u<h;u++){var p;a=(p=c[u]).toJSON();""!==p.name&&(a.name=p.name),l.push(a)}l.length>0&&(o[n]=l,s=!0)}s&&(t.data.morphAttributes=o,t.data.morphTargetsRelative=this.morphTargetsRelative);var d=this.groups;d.length>0&&(t.data.groups=JSON.parse(JSON.stringify(d)));var f=this.boundingSphere;return null!==f&&(t.data.boundingSphere={center:f.center.toArray(),radius:f.radius}),t},clone:function(){return(new M).copy(this)},copy:function(t){var e,n,r;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var i=t.index;null!==i&&this.setIndex(i.clone());var a=t.attributes;for(e in a){var o=a[e];this.setAttribute(e,o.clone())}var s=t.morphAttributes;for(e in s){var c=[],l=s[e];for(n=0,r=l.length;n<r;n++)c.push(l[n].clone());this.morphAttributes[e]=c}this.morphTargetsRelative=t.morphTargetsRelative;var u=t.groups;for(n=0,r=u.length;n<r;n++){var h=u[n];this.addGroup(h.start,h.count,h.materialIndex)}var p=t.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=t.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}})},50:function(t,e,n){"use strict";n.r(e),n.d(e,"MeshBasicMaterial",(function(){return o}));var r=n(8),i=n(0),a=n(6);function o(t){r.a.call(this),this.type="MeshBasicMaterial",this.color=new a.Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=i.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}o.prototype=Object.create(r.a.prototype),o.prototype.constructor=o,o.prototype.isMeshBasicMaterial=!0,o.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}},52:function(t,e,n){"use strict";var r=n(2),i=n(12),a=n(113);function o(){i.a.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}o.prototype=Object.assign(Object.create(i.a.prototype),{constructor:o,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new a.LineCurve(e,t))},getPoint:function(t){for(var e=t*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=e){var i=n[r]-e,a=this.curves[r],o=a.getLength(),s=0===o?0:1-i/o;return a.getPointAt(s)}r++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,n=[],r=0,i=this.curves;r<i.length;r++)for(var a=i[r],o=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),c=0;c<s.length;c++){var l=s[c];e&&e.equals(l)||(n.push(l),e=l)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},copy:function(t){i.a.prototype.copy.call(this,t),this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var r=t.curves[e];this.curves.push(r.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=i.a.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,n=this.curves.length;e<n;e++){var r=this.curves[e];t.curves.push(r.toJSON())}return t},fromJSON:function(t){i.a.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var r=t.curves[e];this.curves.push((new a[r.type]).fromJSON(r))}return this}});var s=n(95),c=n(165),l=n(162),u=n(164),h=n(163);function p(t){o.call(this),this.type="Path",this.currentPoint=new r.Vector2,t&&this.setFromPoints(t)}n.d(e,"a",(function(){return p})),p.prototype=Object.assign(Object.create(o.prototype),{constructor:p,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){var n=new h.a(this.currentPoint.clone(),new r.Vector2(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){var a=new u.a(this.currentPoint.clone(),new r.Vector2(t,e),new r.Vector2(n,i));return this.curves.push(a),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,a,o){var s=new l.a(this.currentPoint.clone(),new r.Vector2(t,e),new r.Vector2(n,i),new r.Vector2(a,o));return this.curves.push(s),this.currentPoint.set(a,o),this},splineThru:function(t){var e=[this.currentPoint.clone()].concat(t),n=new c.a(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,r,i,a){var o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(t+o,e+s,n,r,i,a),this},absarc:function(t,e,n,r,i,a){return this.absellipse(t,e,n,n,r,i,a),this},ellipse:function(t,e,n,r,i,a,o,s){var c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(t+c,e+l,n,r,i,a,o,s),this},absellipse:function(t,e,n,r,i,a,o,c){var l=new s.a(t,e,n,r,i,a,o,c);if(this.curves.length>0){var u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);var h=l.getPoint(1);return this.currentPoint.copy(h),this},copy:function(t){return o.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=o.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return o.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}})},56:function(t,e,n){"use strict";n.r(e),n.d(e,"PlaneGeometry",(function(){return o})),n.d(e,"PlaneBufferGeometry",(function(){return s}));var r=n(11),i=n(5),a=n(4);function o(t,e,n,i){r.a.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new s(t,e,n,i)),this.mergeVertices()}function s(t,e,n,r){i.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};var o,s,c=(t=t||1)/2,l=(e=e||1)/2,u=Math.floor(n)||1,h=Math.floor(r)||1,p=u+1,d=h+1,f=t/u,m=e/h,v=[],g=[],y=[],_=[];for(s=0;s<d;s++){var x=s*m-l;for(o=0;o<p;o++){var b=o*f-c;g.push(b,-x,0),y.push(0,0,1),_.push(o/u),_.push(1-s/h)}}for(s=0;s<h;s++)for(o=0;o<u;o++){var M=o+p*s,w=o+p*(s+1),S=o+1+p*(s+1),T=o+1+p*s;v.push(M,w,T),v.push(w,S,T)}this.setIndex(v),this.setAttribute("position",new a.Float32BufferAttribute(g,3)),this.setAttribute("normal",new a.Float32BufferAttribute(y,3)),this.setAttribute("uv",new a.Float32BufferAttribute(_,2))}o.prototype=Object.create(r.a.prototype),o.prototype.constructor=o,s.prototype=Object.create(i.BufferGeometry.prototype),s.prototype.constructor=s},57:function(t,e,n){"use strict";n.r(e),n.d(e,"OrthographicCamera",(function(){return a}));var r=n(86),i=n(10);function a(t,e,n,i,a,o){r.a.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==t?t:-1,this.right=void 0!==e?e:1,this.top=void 0!==n?n:1,this.bottom=void 0!==i?i:-1,this.near=void 0!==a?a:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}a.prototype=Object.assign(Object.create(r.a.prototype),{constructor:a,isOrthographicCamera:!0,copy:function(t,e){return r.a.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-t,a=n+t,o=r+e,s=r-e;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),l=this.zoom/(this.view.height/this.view.fullHeight),u=(this.right-this.left)/this.view.width,h=(this.top-this.bottom)/this.view.height;a=(i+=u*(this.view.offsetX/c))+u*(this.view.width/c),s=(o-=h*(this.view.offsetY/l))-h*(this.view.height/l)}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=i.Object3D.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}})},58:function(t,e,n){"use strict";n.r(e),n.d(e,"PointsMaterial",(function(){return a}));var r=n(8),i=n(6);function a(t){r.a.call(this),this.type="PointsMaterial",this.color=new i.Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isPointsMaterial=!0,a.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}},59:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(20),i=n(1),a=new i.Vector3,o=new i.Vector3,s=new r.a;function c(t,e){this.normal=void 0!==t?t:new i.Vector3(1,0,0),this.constant=void 0!==e?e:0}Object.assign(c.prototype,{isPlane:!0,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(t,e,n){var r=a.subVectors(n,e).cross(o.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new i.Vector3),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new i.Vector3);var n=t.delta(a),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;var o=-(t.start.dot(this.normal)+this.constant)/r;return o<0||o>1?void 0:e.copy(n).multiplyScalar(o).add(t.start)},intersectsLine:function(t){var e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new i.Vector3),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,e){var n=e||s.getNormalMatrix(t),r=this.coplanarPoint(a).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}})},6:function(t,e,n){"use strict";n.r(e),n.d(e,"Color",(function(){return s}));var r=n(13),i={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},a={h:0,s:0,l:0},o={h:0,s:0,l:0};function s(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}function c(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function l(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function u(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}Object.assign(s.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(t,e,n){if(t=r._Math.euclideanModulo(t,1),e=r._Math.clamp(e,0,1),n=r._Math.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{var i=n<=.5?n*(1+e):n+e-n*e,a=2*n-i;this.r=c(a,i,t+1/3),this.g=c(a,i,t),this.b=c(a,i,t-1/3)}return this},setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var r,i=n[1],a=n[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,e(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,e(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(r[1])/360,s=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return e(r[5]),this.setHSL(o,s,c)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){var l=n[1],u=l.length;if(3===u)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===u)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this},setColorName:function(t){var e=i[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=l(t.r),this.g=l(t.g),this.b=l(t.b),this},copyLinearToSRGB:function(t){return this.r=u(t.r),this.g=u(t.g),this.b=u(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var e,n,r=this.r,i=this.g,a=this.b,o=Math.max(r,i,a),s=Math.min(r,i,a),c=(s+o)/2;if(s===o)e=0,n=0;else{var l=o-s;switch(n=c<=.5?l/(o+s):l/(2-o-s),o){case r:e=(i-a)/l+(i<a?6:0);break;case i:e=(a-r)/l+2;break;case a:e=(r-i)/l+4}e/=6}return t.h=e,t.s=n,t.l=c,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,n){return this.getHSL(a),a.h+=t,a.s+=e,a.l+=n,this.setHSL(a.h,a.s,a.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(t,e){this.getHSL(a),t.getHSL(o);var n=r._Math.lerp(a.h,o.h,e),i=r._Math.lerp(a.s,o.s,e),s=r._Math.lerp(a.l,o.l,e);return this.setHSL(n,i,s),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}}),s.NAMES=i},60:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(16),i=n(22),a=n(2),o=n(1),s=n(7),c=n(6),l=n(20),u={basic:{uniforms:Object(i.c)([s.a.common,s.a.specularmap,s.a.envmap,s.a.aomap,s.a.lightmap,s.a.fog]),vertexShader:r.a.meshbasic_vert,fragmentShader:r.a.meshbasic_frag},lambert:{uniforms:Object(i.c)([s.a.common,s.a.specularmap,s.a.envmap,s.a.aomap,s.a.lightmap,s.a.emissivemap,s.a.fog,s.a.lights,{emissive:{value:new c.Color(0)}}]),vertexShader:r.a.meshlambert_vert,fragmentShader:r.a.meshlambert_frag},phong:{uniforms:Object(i.c)([s.a.common,s.a.specularmap,s.a.envmap,s.a.aomap,s.a.lightmap,s.a.emissivemap,s.a.bumpmap,s.a.normalmap,s.a.displacementmap,s.a.fog,s.a.lights,{emissive:{value:new c.Color(0)},specular:{value:new c.Color(1118481)},shininess:{value:30}}]),vertexShader:r.a.meshphong_vert,fragmentShader:r.a.meshphong_frag},standard:{uniforms:Object(i.c)([s.a.common,s.a.envmap,s.a.aomap,s.a.lightmap,s.a.emissivemap,s.a.bumpmap,s.a.normalmap,s.a.displacementmap,s.a.roughnessmap,s.a.metalnessmap,s.a.fog,s.a.lights,{emissive:{value:new c.Color(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:r.a.meshphysical_vert,fragmentShader:r.a.meshphysical_frag},toon:{uniforms:Object(i.c)([s.a.common,s.a.specularmap,s.a.aomap,s.a.lightmap,s.a.emissivemap,s.a.bumpmap,s.a.normalmap,s.a.displacementmap,s.a.gradientmap,s.a.fog,s.a.lights,{emissive:{value:new c.Color(0)},specular:{value:new c.Color(1118481)},shininess:{value:30}}]),vertexShader:r.a.meshtoon_vert,fragmentShader:r.a.meshtoon_frag},matcap:{uniforms:Object(i.c)([s.a.common,s.a.bumpmap,s.a.normalmap,s.a.displacementmap,s.a.fog,{matcap:{value:null}}]),vertexShader:r.a.meshmatcap_vert,fragmentShader:r.a.meshmatcap_frag},points:{uniforms:Object(i.c)([s.a.points,s.a.fog]),vertexShader:r.a.points_vert,fragmentShader:r.a.points_frag},dashed:{uniforms:Object(i.c)([s.a.common,s.a.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:r.a.linedashed_vert,fragmentShader:r.a.linedashed_frag},depth:{uniforms:Object(i.c)([s.a.common,s.a.displacementmap]),vertexShader:r.a.depth_vert,fragmentShader:r.a.depth_frag},normal:{uniforms:Object(i.c)([s.a.common,s.a.bumpmap,s.a.normalmap,s.a.displacementmap,{opacity:{value:1}}]),vertexShader:r.a.normal_vert,fragmentShader:r.a.normal_frag},sprite:{uniforms:Object(i.c)([s.a.sprite,s.a.fog]),vertexShader:r.a.sprite_vert,fragmentShader:r.a.sprite_frag},background:{uniforms:{uvTransform:{value:new l.a},t2D:{value:null}},vertexShader:r.a.background_vert,fragmentShader:r.a.background_frag},cube:{uniforms:Object(i.c)([s.a.envmap,{opacity:{value:1}}]),vertexShader:r.a.cube_vert,fragmentShader:r.a.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:r.a.equirect_vert,fragmentShader:r.a.equirect_frag},distanceRGBA:{uniforms:Object(i.c)([s.a.common,s.a.displacementmap,{referencePosition:{value:new o.Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:r.a.distanceRGBA_vert,fragmentShader:r.a.distanceRGBA_frag},shadow:{uniforms:Object(i.c)([s.a.lights,s.a.fog,{color:{value:new c.Color(0)},opacity:{value:1}}]),vertexShader:r.a.shadow_vert,fragmentShader:r.a.shadow_frag}};u.physical={uniforms:Object(i.c)([u.standard.uniforms,{transparency:{value:0},clearcoat:{value:0},clearcoatRoughness:{value:0},sheen:{value:new c.Color(0)},clearcoatNormalScale:{value:new a.Vector2(1,1)},clearcoatNormalMap:{value:null}}]),vertexShader:r.a.meshphysical_vert,fragmentShader:r.a.meshphysical_frag}},61:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(15),i=n(2),a=n(1),o=n(17),s=n(107);function c(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new i.Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new r.Matrix4,this._frustum=new s.a,this._frameExtents=new i.Vector2(1,1),this._viewportCount=1,this._viewports=[new o.Vector4(0,0,1,1)]}Object.assign(c.prototype,{_projScreenMatrix:new r.Matrix4,_lightPositionWorld:new a.Vector3,_lookTarget:new a.Vector3,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){var e=this.camera,n=this.matrix,r=this._projScreenMatrix,i=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(t.matrixWorld),e.position.copy(a),i.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(i),e.updateMatrixWorld(),r.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromMatrix(r),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}})},66:function(t,e,n){"use strict";n.r(e),n.d(e,"LineSegments",(function(){return c}));var r=n(69),i=n(1),a=n(4),o=new i.Vector3,s=new i.Vector3;function c(t,e){r.a.call(this,t,e),this.type="LineSegments"}c.prototype=Object.assign(Object.create(r.a.prototype),{constructor:c,isLineSegments:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,n=[],r=0,i=e.count;r<i;r+=2)o.fromBufferAttribute(e,r),s.fromBufferAttribute(e,r+1),n[r]=0===r?0:n[r-1],n[r+1]=n[r]+o.distanceTo(s);t.setAttribute("lineDistance",new a.Float32BufferAttribute(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var c=t.vertices;for(n=t.lineDistances,r=0,i=c.length;r<i;r+=2)o.copy(c[r]),s.copy(c[r+1]),n[r]=0===r?0:n[r-1],n[r+1]=n[r]+o.distanceTo(s)}return this}})},67:function(t,e,n){"use strict";n.r(e),n.d(e,"CylinderGeometry",(function(){return c})),n.d(e,"CylinderBufferGeometry",(function(){return l}));var r=n(11),i=n(5),a=n(4),o=n(1),s=n(2);function c(t,e,n,i,a,o,s,c){r.a.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:a,openEnded:o,thetaStart:s,thetaLength:c},this.fromBufferGeometry(new l(t,e,n,i,a,o,s,c)),this.mergeVertices()}function l(t,e,n,r,c,l,u,h){i.BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:c,openEnded:l,thetaStart:u,thetaLength:h};var p=this;t=void 0!==t?t:1,e=void 0!==e?e:1,n=n||1,r=Math.floor(r)||8,c=Math.floor(c)||1,l=void 0!==l&&l,u=void 0!==u?u:0,h=void 0!==h?h:2*Math.PI;var d=[],f=[],m=[],v=[],g=0,y=[],_=n/2,x=0;function b(n){var i,a,c,l=new s.Vector2,y=new o.Vector3,b=0,M=!0===n?t:e,w=!0===n?1:-1;for(a=g,i=1;i<=r;i++)f.push(0,_*w,0),m.push(0,w,0),v.push(.5,.5),g++;for(c=g,i=0;i<=r;i++){var S=i/r*h+u,T=Math.cos(S),E=Math.sin(S);y.x=M*E,y.y=_*w,y.z=M*T,f.push(y.x,y.y,y.z),m.push(0,w,0),l.x=.5*T+.5,l.y=.5*E*w+.5,v.push(l.x,l.y),g++}for(i=0;i<r;i++){var A=a+i,L=c+i;!0===n?d.push(L,L+1,A):d.push(L+1,L,A),b+=3}p.addGroup(x,b,!0===n?1:2),x+=b}!function(){var i,a,s=new o.Vector3,l=new o.Vector3,b=0,M=(e-t)/n;for(a=0;a<=c;a++){var w=[],S=a/c,T=S*(e-t)+t;for(i=0;i<=r;i++){var E=i/r,A=E*h+u,L=Math.sin(A),R=Math.cos(A);l.x=T*L,l.y=-S*n+_,l.z=T*R,f.push(l.x,l.y,l.z),s.set(L,M,R).normalize(),m.push(s.x,s.y,s.z),v.push(E,1-S),w.push(g++)}y.push(w)}for(i=0;i<r;i++)for(a=0;a<c;a++){var C=y[a][i],P=y[a+1][i],N=y[a+1][i+1],D=y[a][i+1];d.push(C,P,D),d.push(P,N,D),b+=6}p.addGroup(x,b,0),x+=b}(),!1===l&&(t>0&&b(!0),e>0&&b(!1)),this.setIndex(d),this.setAttribute("position",new a.Float32BufferAttribute(f,3)),this.setAttribute("normal",new a.Float32BufferAttribute(m,3)),this.setAttribute("uv",new a.Float32BufferAttribute(v,2))}c.prototype=Object.create(r.a.prototype),c.prototype.constructor=c,l.prototype=Object.create(i.BufferGeometry.prototype),l.prototype.constructor=l},68:function(t,e,n){"use strict";n.r(e),n.d(e,"MeshStandardMaterial",(function(){return s}));var r=n(0),i=n(8),a=n(2),o=n(6);function s(t){i.a.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new o.Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new o.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=r.TangentSpaceNormalMap,this.normalScale=new a.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}s.prototype=Object.create(i.a.prototype),s.prototype.constructor=s,s.prototype.isMeshStandardMaterial=!0,s.prototype.copy=function(t){return i.a.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}},69:function(t,e,n){"use strict";n.d(e,"a",(function(){return v}));var r=n(33),i=n(85),a=n(15),o=n(10),s=n(1),c=n(38),l=n(5),u=n(4),h=new s.Vector3,p=new s.Vector3,d=new a.Matrix4,f=new i.a,m=new r.Sphere;function v(t,e,n){1===n&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),o.Object3D.call(this),this.type="Line",this.geometry=void 0!==t?t:new l.BufferGeometry,this.material=void 0!==e?e:new c.LineBasicMaterial({color:16777215*Math.random()})}v.prototype=Object.assign(Object.create(o.Object3D.prototype),{constructor:v,isLine:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(null===t.index){for(var e=t.attributes.position,n=[0],r=1,i=e.count;r<i;r++)h.fromBufferAttribute(e,r-1),p.fromBufferAttribute(e,r),n[r]=n[r-1],n[r]+=h.distanceTo(p);t.setAttribute("lineDistance",new u.Float32BufferAttribute(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var a=t.vertices;(n=t.lineDistances)[0]=0;for(r=1,i=a.length;r<i;r++)n[r]=n[r-1],n[r]+=a[r-1].distanceTo(a[r])}return this},raycast:function(t,e){var n=t.linePrecision,r=this.geometry,i=this.matrixWorld;if(null===r.boundingSphere&&r.computeBoundingSphere(),m.copy(r.boundingSphere),m.applyMatrix4(i),m.radius+=n,!1!==t.ray.intersectsSphere(m)){d.getInverse(i),f.copy(t.ray).applyMatrix4(d);var a=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,c=new s.Vector3,l=new s.Vector3,u=new s.Vector3,h=new s.Vector3,p=this&&this.isLineSegments?2:1;if(r.isBufferGeometry){var v=r.index,g=r.attributes.position.array;if(null!==v)for(var y=v.array,_=0,x=y.length-1;_<x;_+=p){var b=y[_],M=y[_+1];if(c.fromArray(g,3*b),l.fromArray(g,3*M),!(f.distanceSqToSegment(c,l,h,u)>o))h.applyMatrix4(this.matrixWorld),(T=t.ray.origin.distanceTo(h))<t.near||T>t.far||e.push({distance:T,point:u.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}else for(_=0,x=g.length/3-1;_<x;_+=p){if(c.fromArray(g,3*_),l.fromArray(g,3*_+3),!(f.distanceSqToSegment(c,l,h,u)>o))h.applyMatrix4(this.matrixWorld),(T=t.ray.origin.distanceTo(h))<t.near||T>t.far||e.push({distance:T,point:u.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}else if(r.isGeometry){var w=r.vertices,S=w.length;for(_=0;_<S-1;_+=p){var T;if(!(f.distanceSqToSegment(w[_],w[_+1],h,u)>o))h.applyMatrix4(this.matrixWorld),(T=t.ray.origin.distanceTo(h))<t.near||T>t.far||e.push({distance:T,point:u.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}})},7:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(6),i=n(2),a=n(20),o={common:{diffuse:{value:new r.Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new a.a},uv2Transform:{value:new a.a},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new i.Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new r.Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new r.Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new a.a}},sprite:{diffuse:{value:new r.Color(15658734)},opacity:{value:1},center:{value:new i.Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new a.a}}}},70:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(30),i=n(28),a=n(0),o=n(17);function s(t,e,n){this.width=t,this.height=e,this.scissor=new o.Vector4(0,0,t,e),this.scissorTest=!1,this.viewport=new o.Vector4(0,0,t,e),n=n||{},this.texture=new i.a(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:a.LinearFilter,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0===n.stencilBuffer||n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}s.prototype=Object.assign(Object.create(r.a.prototype),{constructor:s,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}})},71:function(t,e,n){"use strict";var r=function(t,e,n){n=n||2;var r,s,c,l,u,d,m,v=e&&e.length,g=v?e[0]*n:t.length,y=i(t,0,g,n,!0),_=[];if(!y||y.next===y.prev)return _;if(v&&(y=function(t,e,n,r){var o,s,c,l,u,d=[];for(o=0,s=e.length;o<s;o++)c=e[o]*r,l=o<s-1?e[o+1]*r:t.length,(u=i(t,c,l,r,!1))===u.next&&(u.steiner=!0),d.push(f(u));for(d.sort(h),o=0;o<d.length;o++)p(d[o],n),n=a(n,n.next);return n}(t,e,y,n)),t.length>80*n){r=c=t[0],s=l=t[1];for(var x=n;x<g;x+=n)(u=t[x])<r&&(r=u),(d=t[x+1])<s&&(s=d),u>c&&(c=u),d>l&&(l=d);m=0!==(m=Math.max(c-r,l-s))?1/m:0}return o(y,_,n,r,s,m),_};function i(t,e,n,r,i){var a,o;if(i===function(t,e,n,r){for(var i=0,a=e,o=n-r;a<n;a+=r)i+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return i}(t,e,n,r)>0)for(a=e;a<n;a+=r)o=M(a,t[a],t[a+1],o);else for(a=n-r;a>=e;a-=r)o=M(a,t[a],t[a+1],o);return o&&y(o,o.next)&&(w(o),o=o.next),o}function a(t,e){if(!t)return t;e||(e=t);var n,r=t;do{if(n=!1,r.steiner||!y(r,r.next)&&0!==g(r.prev,r,r.next))r=r.next;else{if(w(r),(r=e=r.prev)===r.next)break;n=!0}}while(n||r!==e);return e}function o(t,e,n,r,i,h,p){if(t){!p&&h&&function(t,e,n,r){var i=t;do{null===i.z&&(i.z=d(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){var e,n,r,i,a,o,s,c,l=1;do{for(n=t,t=null,a=null,o=0;n;){for(o++,r=n,s=0,e=0;e<l&&(s++,r=r.nextZ);e++);for(c=l;s>0||c>0&&r;)0!==s&&(0===c||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,c--),a?a.nextZ=i:t=i,i.prevZ=a,a=i;n=r}a.nextZ=null,l*=2}while(o>1)}(i)}(t,r,i,h);for(var f,m,v=t;t.prev!==t.next;)if(f=t.prev,m=t.next,h?c(t,r,i,h):s(t))e.push(f.i/n),e.push(t.i/n),e.push(m.i/n),w(t),t=m.next,v=m.next;else if((t=m)===v){p?1===p?o(t=l(t,e,n),e,n,r,i,h,2):2===p&&u(t,e,n,r,i,h):o(a(t),e,n,r,i,h,1);break}}}function s(t){var e=t.prev,n=t,r=t.next;if(g(e,n,r)>=0)return!1;for(var i=t.next.next;i!==t.prev;){if(m(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&g(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function c(t,e,n,r){var i=t.prev,a=t,o=t.next;if(g(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,l=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,u=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,h=d(s,c,e,n,r),p=d(l,u,e,n,r),f=t.prevZ,v=t.nextZ;f&&f.z>=h&&v&&v.z<=p;){if(f!==t.prev&&f!==t.next&&m(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&g(f.prev,f,f.next)>=0)return!1;if(f=f.prevZ,v!==t.prev&&v!==t.next&&m(i.x,i.y,a.x,a.y,o.x,o.y,v.x,v.y)&&g(v.prev,v,v.next)>=0)return!1;v=v.nextZ}for(;f&&f.z>=h;){if(f!==t.prev&&f!==t.next&&m(i.x,i.y,a.x,a.y,o.x,o.y,f.x,f.y)&&g(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;v&&v.z<=p;){if(v!==t.prev&&v!==t.next&&m(i.x,i.y,a.x,a.y,o.x,o.y,v.x,v.y)&&g(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function l(t,e,n){var r=t;do{var i=r.prev,a=r.next.next;!y(i,a)&&_(i,r,r.next,a)&&x(i,a)&&x(a,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(a.i/n),w(r),w(r.next),r=t=a),r=r.next}while(r!==t);return r}function u(t,e,n,r,i,s){var c=t;do{for(var l=c.next.next;l!==c.prev;){if(c.i!==l.i&&v(c,l)){var u=b(c,l);return c=a(c,c.next),u=a(u,u.next),o(c,e,n,r,i,s),void o(u,e,n,r,i,s)}l=l.next}c=c.next}while(c!==t)}function h(t,e){return t.x-e.x}function p(t,e){if(e=function(t,e){var n,r=e,i=t.x,a=t.y,o=-1/0;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){var s=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=i&&s>o){if(o=s,s===i){if(a===r.y)return r;if(a===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==e);if(!n)return null;if(i===o)return n.prev;var c,l=n,u=n.x,h=n.y,p=1/0;r=n.next;for(;r!==l;)i>=r.x&&r.x>=u&&i!==r.x&&m(a<h?i:o,a,u,h,a<h?o:i,a,r.x,r.y)&&((c=Math.abs(a-r.y)/(i-r.x))<p||c===p&&r.x>n.x)&&x(r,t)&&(n=r,p=c),r=r.next;return n}(t,e)){var n=b(e,t);a(n,n.next)}}function d(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function f(t){var e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function m(t,e,n,r,i,a,o,s){return(i-o)*(e-s)-(t-o)*(a-s)>=0&&(t-o)*(r-s)-(n-o)*(e-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0}function v(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&_(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&x(t,e)&&x(e,t)&&function(t,e){var n=t,r=!1,i=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)}function g(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function y(t,e){return t.x===e.x&&t.y===e.y}function _(t,e,n,r){return!!(y(t,n)&&y(e,r)||y(t,r)&&y(n,e))||g(t,e,n)>0!=g(t,e,r)>0&&g(n,r,t)>0!=g(n,r,e)>0}function x(t,e){return g(t.prev,t,t.next)<0?g(t,e,t.next)>=0&&g(t,t.prev,e)>=0:g(t,e,t.prev)<0||g(t,t.next,e)<0}function b(t,e){var n=new S(t.i,t.x,t.y),r=new S(e.i,e.x,e.y),i=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function M(t,e,n,r){var i=new S(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function w(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function S(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}n.d(e,"a",(function(){return T}));var T={area:function(t){for(var e=t.length,n=0,r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n},isClockWise:function(t){return T.area(t)<0},triangulateShape:function(t,e){var n=[],i=[],a=[];E(t),A(n,t);var o=t.length;e.forEach(E);for(var s=0;s<e.length;s++)i.push(o),o+=e[s].length,A(n,e[s]);var c=r(n,i);for(s=0;s<c.length;s+=3)a.push(c.slice(s,s+3));return a}};function E(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function A(t,e){for(var n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}},72:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(6),i=n(52),a=n(111),o=n(71);function s(){this.type="ShapePath",this.color=new r.Color,this.subPaths=[],this.currentPath=null}Object.assign(s.prototype,{moveTo:function(t,e){return this.currentPath=new i.a,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this},bezierCurveTo:function(t,e,n,r,i,a){return this.currentPath.bezierCurveTo(t,e,n,r,i,a),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(t){for(var e=[],n=0,r=t.length;n<r;n++){var i=t[n],o=new a.a;o.curves=i.curves,e.push(o)}return e}function r(t,e){for(var n=e.length,r=!1,i=n-1,a=0;a<n;i=a++){var o=e[i],s=e[a],c=s.x-o.x,l=s.y-o.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(o=e[a],c=-c,s=e[i],l=-l),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var u=l*(t.x-o.x)-c*(t.y-o.y);if(0===u)return!0;if(u<0)continue;r=!r}}else{if(t.y!==o.y)continue;if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return r}var i=o.a.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===e)return n(s);var c,l,u,h=[];if(1===s.length)return l=s[0],(u=new a.a).curves=l.curves,h.push(u),h;var p=!i(s[0].getPoints());p=t?!p:p;var d,f,m=[],v=[],g=[],y=0;v[y]=void 0,g[y]=[];for(var _=0,x=s.length;_<x;_++)c=i(d=(l=s[_]).getPoints()),(c=t?!c:c)?(!p&&v[y]&&y++,v[y]={s:new a.a,p:d},v[y].s.curves=l.curves,p&&y++,g[y]=[]):g[y].push({h:l,p:d[0]});if(!v[0])return n(s);if(v.length>1){for(var b=!1,M=[],w=0,S=v.length;w<S;w++)m[w]=[];for(w=0,S=v.length;w<S;w++)for(var T=g[w],E=0;E<T.length;E++){for(var A=T[E],L=!0,R=0;R<v.length;R++)r(A.p,v[R].p)&&(w!==R&&M.push({froms:w,tos:R,hole:E}),L?(L=!1,m[R].push(A)):b=!0);L&&m[w].push(A)}M.length>0&&(b||(g=m))}_=0;for(var C=v.length;_<C;_++){u=v[_].s,h.push(u);for(var P=0,N=(f=g[_]).length;P<N;P++)u.holes.push(f[P].h)}return h}})},75:function(t,e,n){"use strict";n.r(e),n.d(e,"Points",(function(){return f}));var r=n(33),i=n(85),a=n(15),o=n(10),s=n(1),c=n(58),l=n(5),u=new a.Matrix4,h=new i.a,p=new r.Sphere,d=new s.Vector3;function f(t,e){o.Object3D.call(this),this.type="Points",this.geometry=void 0!==t?t:new l.BufferGeometry,this.material=void 0!==e?e:new c.PointsMaterial({color:16777215*Math.random()}),this.updateMorphTargets()}function m(t,e,n,r,i,a,o){var c=h.distanceSqToPoint(t);if(c<n){var l=new s.Vector3;h.closestPointToPoint(t,l),l.applyMatrix4(r);var u=i.ray.origin.distanceTo(l);if(u<i.near||u>i.far)return;a.push({distance:u,distanceToRay:Math.sqrt(c),point:l,index:e,face:null,object:o})}}f.prototype=Object.assign(Object.create(o.Object3D.prototype),{constructor:f,isPoints:!0,raycast:function(t,e){var n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),p.copy(n.boundingSphere),p.applyMatrix4(r),p.radius+=i,!1!==t.ray.intersectsSphere(p)){u.getInverse(r),h.copy(t.ray).applyMatrix4(u);var a=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(n.isBufferGeometry){var s=n.index,c=n.attributes.position.array;if(null!==s)for(var l=s.array,f=0,v=l.length;f<v;f++){var g=l[f];d.fromArray(c,3*g),m(d,g,o,r,t,e,this)}else{f=0;for(var y=c.length/3;f<y;f++)d.fromArray(c,3*f),m(d,f,o,r,t,e,this)}}else{var _=n.vertices;for(f=0,y=_.length;f<y;f++)m(_[f],f,o,r,t,e,this)}}},updateMorphTargets:function(){var t,e,n,r=this.geometry;if(r.isBufferGeometry){var i=r.morphAttributes,a=Object.keys(i);if(a.length>0){var o=i[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)n=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}else{var s=r.morphTargets;void 0!==s&&s.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}})},76:function(t,e,n){"use strict";n.r(e),n.d(e,"InterleavedBufferAttribute",(function(){return i}));var r=new(n(1).Vector3);function i(t,e,n,r){this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}Object.defineProperties(i.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(i.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(var e=0,n=this.data.count;e<n;e++)r.x=this.getX(e),r.y=this.getY(e),r.z=this.getZ(e),r.applyMatrix4(t),this.setXYZ(e,r.x,r.y,r.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this},setXYZW:function(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this}})},77:function(t,e,n){"use strict";n.r(e),n.d(e,"Triangle",(function(){return m}));var r=n(1),i=n(59),a=new r.Vector3,o=new r.Vector3,s=new r.Vector3,c=new r.Vector3,l=new r.Vector3,u=new r.Vector3,h=new r.Vector3,p=new r.Vector3,d=new r.Vector3,f=new r.Vector3;function m(t,e,n){this.a=void 0!==t?t:new r.Vector3,this.b=void 0!==e?e:new r.Vector3,this.c=void 0!==n?n:new r.Vector3}Object.assign(m,{getNormal:function(t,e,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new r.Vector3),i.subVectors(n,e),a.subVectors(t,e),i.cross(a);var o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)},getBarycoord:function(t,e,n,i,c){a.subVectors(i,e),o.subVectors(n,e),s.subVectors(t,e);var l=a.dot(a),u=a.dot(o),h=a.dot(s),p=o.dot(o),d=o.dot(s),f=l*p-u*u;if(void 0===c&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),c=new r.Vector3),0===f)return c.set(-2,-1,-1);var m=1/f,v=(p*h-u*d)*m,g=(l*d-u*h)*m;return c.set(1-v-g,g,v)},containsPoint:function(t,e,n,r){return m.getBarycoord(t,e,n,r,c),c.x>=0&&c.y>=0&&c.x+c.y<=1},getUV:function(t,e,n,r,i,a,o,s){return this.getBarycoord(t,e,n,r,c),s.set(0,0),s.addScaledVector(i,c.x),s.addScaledVector(a,c.y),s.addScaledVector(o,c.z),s},isFrontFacing:function(t,e,n,r){return a.subVectors(n,e),o.subVectors(t,e),a.cross(o).dot(r)<0}}),Object.assign(m.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return a.subVectors(this.c,this.b),o.subVectors(this.a,this.b),.5*a.cross(o).length()},getMidpoint:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new r.Vector3),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return m.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new i.a),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return m.getBarycoord(t,this.a,this.b,this.c,e)},getUV:function(t,e,n,r,i){return m.getUV(t,this.a,this.b,this.c,e,n,r,i)},containsPoint:function(t){return m.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return m.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new r.Vector3);var n,i,a=this.a,o=this.b,s=this.c;l.subVectors(o,a),u.subVectors(s,a),p.subVectors(t,a);var c=l.dot(p),m=u.dot(p);if(c<=0&&m<=0)return e.copy(a);d.subVectors(t,o);var v=l.dot(d),g=u.dot(d);if(v>=0&&g<=v)return e.copy(o);var y=c*g-v*m;if(y<=0&&c>=0&&v<=0)return n=c/(c-v),e.copy(a).addScaledVector(l,n);f.subVectors(t,s);var _=l.dot(f),x=u.dot(f);if(x>=0&&_<=x)return e.copy(s);var b=_*m-c*x;if(b<=0&&m>=0&&x<=0)return i=m/(m-x),e.copy(a).addScaledVector(u,i);var M=v*x-_*g;if(M<=0&&g-v>=0&&_-x>=0)return h.subVectors(s,o),i=(g-v)/(g-v+(_-x)),e.copy(o).addScaledVector(h,i);var w=1/(M+b+y);return n=b*w,i=y*w,e.copy(a).addScaledVector(l,n).addScaledVector(u,i)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}})},791:function(t,e,n){"use strict";n.r(e);var r=n(0),i=n(13),a=n(223),o=n(107),s=n(15),c=n(60),l=n(7),u=n(22),h=n(2),p=n(1),d=n(17),f=n(84);function m(){var t=null,e=!1,n=null;function r(i,a){!1!==e&&(n(i,a),t.requestAnimationFrame(r))}return{start:function(){!0!==e&&null!==n&&(t.requestAnimationFrame(r),e=!0)},stop:function(){e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function v(t){var e=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e.get(t)},remove:function(n){n.isInterleavedBufferAttribute&&(n=n.data);var r=e.get(n);r&&(t.deleteBuffer(r.buffer),e.delete(n))},update:function(n,r){n.isInterleavedBufferAttribute&&(n=n.data);var i=e.get(n);void 0===i?e.set(n,function(e,n){var r=e.array,i=e.usage,a=t.createBuffer();t.bindBuffer(n,a),t.bufferData(n,r,i),e.onUploadCallback();var o=t.FLOAT;return r instanceof Float32Array?o=t.FLOAT:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?o=t.UNSIGNED_SHORT:r instanceof Int16Array?o=t.SHORT:r instanceof Uint32Array?o=t.UNSIGNED_INT:r instanceof Int32Array?o=t.INT:r instanceof Int8Array?o=t.BYTE:r instanceof Uint8Array&&(o=t.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(n,r)):i.version<n.version&&(!function(e,n,r){var i=n.array,a=n.updateRange;t.bindBuffer(r,e),-1===a.count?t.bufferSubData(r,0,i):(t.bufferSubData(r,a.offset*i.BYTES_PER_ELEMENT,i.subarray(a.offset,a.offset+a.count)),a.count=-1)}(i.buffer,n,r),i.version=n.version)}}}var g=n(105),y=n(56),_=n(34),x=n(6),b=n(23);function M(t,e,n,i){var a,o,s=new x.Color(0),l=0,h=null,p=0;function d(t,n){e.buffers.color.setClear(t.r,t.g,t.b,n,i)}return{getClearColor:function(){return s},setClearColor:function(t,e){s.set(t),d(s,l=void 0!==e?e:1)},getClearAlpha:function(){return l},setClearAlpha:function(t){d(s,l=t)},render:function(e,i,f,m){var v=i.background,x=t.xr,M=x.getSession&&x.getSession();if(M&&"additive"===M.environmentBlendMode&&(v=null),null===v?(d(s,l),h=null,p=0):v&&v.isColor&&(d(v,1),m=!0,h=null,p=0),(t.autoClear||m)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),v&&(v.isCubeTexture||v.isWebGLRenderTargetCube||v.mapping===r.CubeUVReflectionMapping)){void 0===o&&((o=new b.Mesh(new g.BoxBufferGeometry(1,1,1),new _.a({type:"BackgroundCubeMaterial",uniforms:Object(u.b)(c.a.cube.uniforms),vertexShader:c.a.cube.vertexShader,fragmentShader:c.a.cube.fragmentShader,side:r.BackSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(o));var w=v.isWebGLRenderTargetCube?v.texture:v;o.material.uniforms.envMap.value=w,o.material.uniforms.flipEnvMap.value=w.isCubeTexture?-1:1,h===v&&p===w.version||(o.material.needsUpdate=!0,h=v,p=w.version),e.unshift(o,o.geometry,o.material,0,0,null)}else v&&v.isTexture&&(void 0===a&&((a=new b.Mesh(new y.PlaneBufferGeometry(2,2),new _.a({type:"BackgroundMaterial",uniforms:Object(u.b)(c.a.background.uniforms),vertexShader:c.a.background.vertexShader,fragmentShader:c.a.background.fragmentShader,side:r.FrontSide,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(a)),a.material.uniforms.t2D.value=v,!0===v.matrixAutoUpdate&&v.updateMatrix(),a.material.uniforms.uvTransform.value.copy(v.matrix),h===v&&p===v.version||(a.material.needsUpdate=!0,h=v,p=v.version),e.unshift(a,a.geometry,a.material,0,0,null))}}}function w(t,e,n,r){var i,a=r.isWebGL2;this.setMode=function(t){i=t},this.render=function(e,r){t.drawArrays(i,e,r),n.update(r,i)},this.renderInstances=function(r,o,s,c){if(0!==c){var l,u;if(a)l=t,u="drawArraysInstanced";else if(u="drawArraysInstancedANGLE",null===(l=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](i,o,s,c),n.update(s,i,c)}}}function S(t,e,n){var r;function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext,o=void 0!==n.precision?n.precision:"highp",s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var c=!0===n.logarithmicDepthBuffer,l=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),d=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),v=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),g=u>0,y=a||!!e.get("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;var n=e.get("EXT_texture_filter_anisotropic");return r=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:c,maxTextures:l,maxVertexTextures:u,maxTextureSize:h,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:v,vertexTextures:g,floatFragmentTextures:y,floatVertexTextures:g&&y,maxSamples:a?t.getParameter(t.MAX_SAMPLES):0}}var T=n(20),E=n(59);function A(){var t=this,e=null,n=0,r=!1,i=!1,a=new E.a,o=new T.a,s={value:null,needsUpdate:!1};function c(){s.value!==e&&(s.value=e,s.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function l(e,n,r,i){var c=null!==e?e.length:0,l=null;if(0!==c){if(l=s.value,!0!==i||null===l){var u=r+4*c,h=n.matrixWorldInverse;o.getNormalMatrix(h),(null===l||l.length<u)&&(l=new Float32Array(u));for(var p=0,d=r;p!==c;++p,d+=4)a.copy(e[p]).applyMatrix4(h,o),a.normal.toArray(l,d),l[d+3]=a.constant}s.value=l,s.needsUpdate=!0}return t.numPlanes=c,l}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,a){var o=0!==t.length||i||0!==n||r;return r=i,e=l(t,a,0),n=t.length,o},this.beginShadows=function(){i=!0,l(null)},this.endShadows=function(){i=!1,c()},this.setState=function(t,a,o,u,h,p){if(!r||null===t||0===t.length||i&&!o)i?l(null):c();else{var d=i?0:n,f=4*d,m=h.clippingState||null;s.value=m,m=l(t,u,f,p);for(var v=0;v!==f;++v)m[v]=e[v];h.clippingState=m,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=d}}}function L(t){var e={};return{get:function(n){if(void 0!==e[n])return e[n];var r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return null===r&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]=r,r}}}var R=n(4),C=n(5),P=n(167);function N(t,e,n){var r=new WeakMap,i=new WeakMap;function a(t){var o=t.target,s=r.get(o);for(var c in null!==s.index&&e.remove(s.index),s.attributes)e.remove(s.attributes[c]);o.removeEventListener("dispose",a),r.delete(o);var l=i.get(s);l&&(e.remove(l),i.delete(s)),n.memory.geometries--}function o(n){var r=[],a=n.index,o=n.attributes.position,s=0;if(null!==a){var c=a.array;s=a.version;for(var l=0,u=c.length;l<u;l+=3){var h=c[l+0],p=c[l+1],d=c[l+2];r.push(h,p,p,d,d,h)}}else{c=o.array;s=o.version;for(l=0,u=c.length/3-1;l<u;l+=3){h=l+0,p=l+1,d=l+2;r.push(h,p,p,d,d,h)}}var f=new(Object(P.a)(r)>65535?R.Uint32BufferAttribute:R.Uint16BufferAttribute)(r,1);f.version=s,e.update(f,t.ELEMENT_ARRAY_BUFFER);var m=i.get(n);m&&e.remove(m),i.set(n,f)}return{get:function(t,e){var i=r.get(e);return i||(e.addEventListener("dispose",a),e.isBufferGeometry?i=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new C.BufferGeometry).setFromObject(t)),i=e._bufferGeometry),r.set(e,i),n.memory.geometries++,i)},update:function(n){var r=n.index,i=n.attributes;for(var a in null!==r&&e.update(r,t.ELEMENT_ARRAY_BUFFER),i)e.update(i[a],t.ARRAY_BUFFER);var o=n.morphAttributes;for(var a in o)for(var s=o[a],c=0,l=s.length;c<l;c++)e.update(s[c],t.ARRAY_BUFFER)},getWireframeAttribute:function(t){var e=i.get(t);if(e){var n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return i.get(t)}}}function D(t,e,n,r){var i,a,o,s=r.isWebGL2;this.setMode=function(t){i=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,r){t.drawElements(i,r,a,e*o),n.update(r,i)},this.renderInstances=function(r,c,l,u){if(0!==u){var h,p;if(s)h=t,p="drawElementsInstanced";else if(p="drawElementsInstancedANGLE",null===(h=e.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[p](i,l,a,c*o,u),n.update(l,i,u)}}}function I(t){var e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,r,i){switch(i=i||1,e.calls++,r){case t.TRIANGLES:e.triangles+=i*(n/3);break;case t.LINES:e.lines+=i*(n/2);break;case t.LINE_STRIP:e.lines+=i*(n-1);break;case t.LINE_LOOP:e.lines+=i*n;break;case t.POINTS:e.points+=i*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function O(t,e){return Math.abs(e[1])-Math.abs(t[1])}function F(t){var e={},n=new Float32Array(8);return{update:function(r,i,a,o){var s=r.morphTargetInfluences,c=void 0===s?0:s.length,l=e[i.id];if(void 0===l){l=[];for(var u=0;u<c;u++)l[u]=[u,0];e[i.id]=l}var h=a.morphTargets&&i.morphAttributes.position,p=a.morphNormals&&i.morphAttributes.normal;for(u=0;u<c;u++){0!==(f=l[u])[1]&&(h&&i.deleteAttribute("morphTarget"+u),p&&i.deleteAttribute("morphNormal"+u))}for(u=0;u<c;u++){(f=l[u])[0]=u,f[1]=s[u]}l.sort(O);var d=0;for(u=0;u<8;u++){var f;if(f=l[u]){var m=f[0],v=f[1];if(v){h&&i.setAttribute("morphTarget"+u,h[m]),p&&i.setAttribute("morphNormal"+u,p[m]),n[u]=v,d+=v;continue}}n[u]=0}var g=i.morphTargetsRelative?1:1-d;o.getUniforms().setValue(t,"morphTargetBaseInfluence",g),o.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function B(t,e,n,r){var i={};return{update:function(a){var o=r.render.frame,s=a.geometry,c=e.get(a,s);return i[c.id]!==o&&(s.isGeometry&&c.updateFromObject(a),e.update(c),i[c.id]=o),a.isInstancedMesh&&n.update(a.instanceMatrix,t.ARRAY_BUFFER),c},dispose:function(){i={}}}}var V=n(168),U=n(28);function G(t,e,n,i){U.a.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=r.NearestFilter,this.minFilter=r.NearestFilter,this.wrapR=r.ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function z(t,e,n,i){U.a.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=r.NearestFilter,this.minFilter=r.NearestFilter,this.wrapR=r.ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}G.prototype=Object.create(U.a.prototype),G.prototype.constructor=G,G.prototype.isDataTexture2DArray=!0,z.prototype=Object.create(U.a.prototype),z.prototype.constructor=z,z.prototype.isDataTexture3D=!0;var k=new U.a,H=new G,j=new z,W=new V.a,X=[],q=[],Y=new Float32Array(16),Z=new Float32Array(9),J=new Float32Array(4);function K(t,e,n){var r=t[0];if(r<=0||r>0)return t;var i=e*n,a=X[i];if(void 0===a&&(a=new Float32Array(i),X[i]=a),0!==e){r.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=n,t[o].toArray(a,s)}return a}function Q(t,e){if(t.length!==e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function $(t,e){for(var n=0,r=e.length;n<r;n++)t[n]=e[n]}function tt(t,e){var n=q[e];void 0===n&&(n=new Int32Array(e),q[e]=n);for(var r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function et(t,e){var n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function nt(t,e){var n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Q(n,e))return;t.uniform2fv(this.addr,e),$(n,e)}}function rt(t,e){var n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Q(n,e))return;t.uniform3fv(this.addr,e),$(n,e)}}function it(t,e){var n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Q(n,e))return;t.uniform4fv(this.addr,e),$(n,e)}}function at(t,e){var n=this.cache,r=e.elements;if(void 0===r){if(Q(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),$(n,e)}else{if(Q(n,r))return;J.set(r),t.uniformMatrix2fv(this.addr,!1,J),$(n,r)}}function ot(t,e){var n=this.cache,r=e.elements;if(void 0===r){if(Q(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),$(n,e)}else{if(Q(n,r))return;Z.set(r),t.uniformMatrix3fv(this.addr,!1,Z),$(n,r)}}function st(t,e){var n=this.cache,r=e.elements;if(void 0===r){if(Q(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),$(n,e)}else{if(Q(n,r))return;Y.set(r),t.uniformMatrix4fv(this.addr,!1,Y),$(n,r)}}function ct(t,e,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(e||k,i)}function lt(t,e,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||H,i)}function ut(t,e,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||j,i)}function ht(t,e,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(e||W,i)}function pt(t,e){var n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function dt(t,e){var n=this.cache;Q(n,e)||(t.uniform2iv(this.addr,e),$(n,e))}function ft(t,e){var n=this.cache;Q(n,e)||(t.uniform3iv(this.addr,e),$(n,e))}function mt(t,e){var n=this.cache;Q(n,e)||(t.uniform4iv(this.addr,e),$(n,e))}function vt(t,e){t.uniform1fv(this.addr,e)}function gt(t,e){t.uniform1iv(this.addr,e)}function yt(t,e){t.uniform2iv(this.addr,e)}function _t(t,e){t.uniform3iv(this.addr,e)}function xt(t,e){t.uniform4iv(this.addr,e)}function bt(t,e){var n=K(e,this.size,2);t.uniform2fv(this.addr,n)}function Mt(t,e){var n=K(e,this.size,3);t.uniform3fv(this.addr,n)}function wt(t,e){var n=K(e,this.size,4);t.uniform4fv(this.addr,n)}function St(t,e){var n=K(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Tt(t,e){var n=K(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Et(t,e){var n=K(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function At(t,e,n){var r=e.length,i=tt(n,r);t.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.safeSetTexture2D(e[a]||k,i[a])}function Lt(t,e,n){var r=e.length,i=tt(n,r);t.uniform1iv(this.addr,i);for(var a=0;a!==r;++a)n.safeSetTextureCube(e[a]||W,i[a])}function Rt(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return et;case 35664:return nt;case 35665:return rt;case 35666:return it;case 35674:return at;case 35675:return ot;case 35676:return st;case 35678:case 36198:return ct;case 35679:return ut;case 35680:return ht;case 36289:return lt;case 5124:case 35670:return pt;case 35667:case 35671:return dt;case 35668:case 35672:return ft;case 35669:case 35673:return mt}}(e.type)}function Ct(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return vt;case 35664:return bt;case 35665:return Mt;case 35666:return wt;case 35674:return St;case 35675:return Tt;case 35676:return Et;case 35678:case 36198:case 36298:case 36306:return At;case 35680:case 36300:case 36308:return Lt;case 5124:case 35670:return gt;case 35667:case 35671:return yt;case 35668:case 35672:return _t;case 35669:case 35673:return xt}}(e.type)}function Pt(t){this.id=t,this.seq=[],this.map={}}Ct.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),$(e,t)},Pt.prototype.setValue=function(t,e,n){for(var r=this.seq,i=0,a=r.length;i!==a;++i){var o=r[i];o.setValue(t,e[o.id],n)}};var Nt=/([\w\d_]+)(\])?(\[|\.)?/g;function Dt(t,e){t.seq.push(e),t.map[e.id]=e}function It(t,e,n){var r=t.name,i=r.length;for(Nt.lastIndex=0;;){var a=Nt.exec(r),o=Nt.lastIndex,s=a[1],c="]"===a[2],l=a[3];if(c&&(s|=0),void 0===l||"["===l&&o+2===i){Dt(n,void 0===l?new Rt(s,t,e):new Ct(s,t,e));break}var u=n.map[s];void 0===u&&Dt(n,u=new Pt(s)),n=u}}function Ot(t,e){this.seq=[],this.map={};for(var n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),r=0;r<n;++r){var i=t.getActiveUniform(e,r);It(i,t.getUniformLocation(e,i.name),this)}}function Ft(t,e,n){var r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}Ot.prototype.setValue=function(t,e,n,r){var i=this.map[e];void 0!==i&&i.setValue(t,n,r)},Ot.prototype.setOptional=function(t,e,n){var r=e[n];void 0!==r&&this.setValue(t,n,r)},Ot.upload=function(t,e,n,r){for(var i=0,a=e.length;i!==a;++i){var o=e[i],s=n[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,r)}},Ot.seqWithValue=function(t,e){for(var n=[],r=0,i=t.length;r!==i;++r){var a=t[r];a.id in e&&n.push(a)}return n};var Bt=n(16),Vt=0;function Ut(t){switch(t){case r.LinearEncoding:return["Linear","( value )"];case r.sRGBEncoding:return["sRGB","( value )"];case r.RGBEEncoding:return["RGBE","( value )"];case r.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case r.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case r.RGBDEncoding:return["RGBD","( value, 256.0 )"];case r.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case r.LogLuvEncoding:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+t)}}function Gt(t,e,n){var r=t.getShaderParameter(e,t.COMPILE_STATUS),i=t.getShaderInfoLog(e).trim();return r&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+i+function(t){for(var e=t.split("\n"),n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join("\n")}(t.getShaderSource(e))}function zt(t,e){var n=Ut(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function kt(t,e){var n;switch(e){case r.LinearToneMapping:n="Linear";break;case r.ReinhardToneMapping:n="Reinhard";break;case r.Uncharted2ToneMapping:n="Uncharted2";break;case r.CineonToneMapping:n="OptimizedCineon";break;case r.ACESFilmicToneMapping:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Ht(t){return""!==t}function jt(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Wt(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var Xt=/^[ \t]*#include +<([\w\d./]+)>/gm;function qt(t){return t.replace(Xt,Yt)}function Yt(t,e){var n=Bt.a[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return qt(n)}var Zt=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function Jt(t){return t.replace(Zt,Kt)}function Kt(t,e,n,r){for(var i="",a=parseInt(e);a<parseInt(n);a++)i+=r.replace(/\[ i \]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function Qt(t){var e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function $t(t,e,n,i,a,o){var s,c,l,u,h,p=t.getContext(),d=i.defines,f=a.vertexShader,m=a.fragmentShader,v=function(t){var e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===r.PCFShadowMap?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===r.PCFSoftShadowMap?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===r.VSMShadowMap&&(e="SHADOWMAP_TYPE_VSM"),e}(o),g=function(t){var e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case r.CubeReflectionMapping:case r.CubeRefractionMapping:e="ENVMAP_TYPE_CUBE";break;case r.CubeUVReflectionMapping:case r.CubeUVRefractionMapping:e="ENVMAP_TYPE_CUBE_UV";break;case r.EquirectangularReflectionMapping:case r.EquirectangularRefractionMapping:e="ENVMAP_TYPE_EQUIREC";break;case r.SphericalReflectionMapping:e="ENVMAP_TYPE_SPHERE"}return e}(o),y=function(t){var e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case r.CubeRefractionMapping:case r.EquirectangularRefractionMapping:e="ENVMAP_MODE_REFRACTION"}return e}(o),_=function(t){var e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case r.MultiplyOperation:e="ENVMAP_BLENDING_MULTIPLY";break;case r.MixOperation:e="ENVMAP_BLENDING_MIX";break;case r.AddOperation:e="ENVMAP_BLENDING_ADD"}return e}(o),x=t.gammaFactor>0?t.gammaFactor:1,b=o.isWebGL2?"":function(t,e,n){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ht).join("\n")}(i.extensions,o,e),M=function(t){var e=[];for(var n in t){var r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(d),w=p.createProgram(),S=o.numMultiviewViews;if(i.isRawShaderMaterial?((s=[M].filter(Ht).join("\n")).length>0&&(s+="\n"),(c=[b,M].filter(Ht).join("\n")).length>0&&(c+="\n")):(s=[Qt(o),"#define SHADER_NAME "+a.name,M,o.instancing?"#define USE_INSTANCING":"",o.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+x,"#define MAX_BONES "+o.maxBones,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+y:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.normalMap&&o.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",o.normalMap&&o.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",o.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",o.displacementMap&&o.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexTangents?"#define USE_TANGENT":"",o.vertexColors?"#define USE_COLOR":"",o.vertexUvs?"#define USE_UV":"",o.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",o.flatShading?"#define FLAT_SHADED":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals&&!1===o.flatShading?"#define USE_MORPHNORMALS":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ht).join("\n"),c=[b,Qt(o),"#define SHADER_NAME "+a.name,M,o.alphaTest?"#define ALPHATEST "+o.alphaTest+(o.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+x,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp2?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.matcap?"#define USE_MATCAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+g:"",o.envMap?"#define "+y:"",o.envMap?"#define "+_:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.normalMap&&o.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",o.normalMap&&o.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",o.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.sheen?"#define USE_SHEEN":"",o.vertexTangents?"#define USE_TANGENT":"",o.vertexColors?"#define USE_COLOR":"",o.vertexUvs?"#define USE_UV":"",o.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",o.gradientMap?"#define USE_GRADIENTMAP":"",o.flatShading?"#define FLAT_SHADED":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+v:"",o.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",o.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&(o.isWebGL2||e.get("EXT_frag_depth"))?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensions&&i.extensions.shaderTextureLOD||o.envMap)&&(o.isWebGL2||e.get("EXT_shader_texture_lod"))?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",o.toneMapping!==r.NoToneMapping?"#define TONE_MAPPING":"",o.toneMapping!==r.NoToneMapping?Bt.a.tonemapping_pars_fragment:"",o.toneMapping!==r.NoToneMapping?kt("toneMapping",o.toneMapping):"",o.dithering?"#define DITHERING":"",o.outputEncoding||o.mapEncoding||o.matcapEncoding||o.envMapEncoding||o.emissiveMapEncoding||o.lightMapEncoding?Bt.a.encodings_pars_fragment:"",o.mapEncoding?zt("mapTexelToLinear",o.mapEncoding):"",o.matcapEncoding?zt("matcapTexelToLinear",o.matcapEncoding):"",o.envMapEncoding?zt("envMapTexelToLinear",o.envMapEncoding):"",o.emissiveMapEncoding?zt("emissiveMapTexelToLinear",o.emissiveMapEncoding):"",o.lightMapEncoding?zt("lightMapTexelToLinear",o.lightMapEncoding):"",o.outputEncoding?(l="linearToOutputTexel",u=o.outputEncoding,h=Ut(u),"vec4 "+l+"( vec4 value ) { return LinearTo"+h[0]+h[1]+"; }"):"",o.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(Ht).join("\n")),f=Wt(f=jt(f=qt(f),o),o),m=Wt(m=jt(m=qt(m),o),o),f=Jt(f),m=Jt(m),o.isWebGL2&&!i.isRawShaderMaterial){var T=!1,E=/^\s*#version\s+300\s+es\s*\n/;i.isShaderMaterial&&null!==f.match(E)&&null!==m.match(E)&&(T=!0,f=f.replace(E,""),m=m.replace(E,"")),s=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+s,c=["#version 300 es\n","#define varying in",T?"":"out highp vec4 pc_fragColor;",T?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+c,S>0&&(s=(s=s.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","layout(num_views = "+S+") in;","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace(["uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;"].join("\n"),["uniform mat4 modelViewMatrices["+S+"];","uniform mat4 projectionMatrices["+S+"];","uniform mat4 viewMatrices["+S+"];","uniform mat3 normalMatrices["+S+"];","#define modelViewMatrix modelViewMatrices[VIEW_ID]","#define projectionMatrix projectionMatrices[VIEW_ID]","#define viewMatrix viewMatrices[VIEW_ID]","#define normalMatrix normalMatrices[VIEW_ID]"].join("\n")),c=(c=c.replace("#version 300 es\n",["#version 300 es\n","#extension GL_OVR_multiview2 : require","#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace("uniform mat4 viewMatrix;",["uniform mat4 viewMatrices["+S+"];","#define viewMatrix viewMatrices[VIEW_ID]"].join("\n")))}var A,L,R=s+f,C=c+m,P=Ft(p,p.VERTEX_SHADER,R),N=Ft(p,p.FRAGMENT_SHADER,C);if(p.attachShader(w,P),p.attachShader(w,N),void 0!==i.index0AttributeName?p.bindAttribLocation(w,0,i.index0AttributeName):!0===o.morphTargets&&p.bindAttribLocation(w,0,"position"),p.linkProgram(w),t.debug.checkShaderErrors){var D=p.getProgramInfoLog(w).trim(),I=p.getShaderInfoLog(P).trim(),O=p.getShaderInfoLog(N).trim(),F=!0,B=!0;if(!1===p.getProgramParameter(w,p.LINK_STATUS)){F=!1;var V=Gt(p,P,"vertex"),U=Gt(p,N,"fragment");console.error("THREE.WebGLProgram: shader error: ",p.getError(),"gl.VALIDATE_STATUS",p.getProgramParameter(w,p.VALIDATE_STATUS),"gl.getProgramInfoLog",D,V,U)}else""!==D?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",D):""!==I&&""!==O||(B=!1);B&&(this.diagnostics={runnable:F,material:i,programLog:D,vertexShader:{log:I,prefix:s},fragmentShader:{log:O,prefix:c}})}return p.deleteShader(P),p.deleteShader(N),this.getUniforms=function(){return void 0===A&&(A=new Ot(p,w)),A},this.getAttributes=function(){return void 0===L&&(L=function(t,e){for(var n={},r=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),i=0;i<r;i++){var a=t.getActiveAttrib(e,i).name;n[a]=t.getAttribLocation(e,a)}return n}(p,w)),L},this.destroy=function(){p.deleteProgram(w),this.program=void 0},this.name=a.name,this.id=Vt++,this.cacheKey=n,this.usedTimes=1,this.program=w,this.vertexShader=P,this.fragmentShader=N,this.numMultiviewViews=S,this}function te(t,e,n){var i=[],a=n.isWebGL2,o=n.logarithmicDepthBuffer,s=n.floatVertexTextures,c=n.precision,l=n.maxVertexUniforms,u=n.vertexTextures,h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","numMultiviewViews","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function d(t){var e;return t?t.isTexture?e=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=r.LinearEncoding,e}this.getParameters=function(e,i,p,f,m,v,g){var y=f.fog,_=e.isMeshStandardMaterial?f.environment:null,x=e.envMap||_,b=h[e.type],M=g.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(s)return 1024;var n=l,r=Math.floor((n-20)/4),i=Math.min(r,e.length);return i<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+i+"."),0):i}(g):0;null!==e.precision&&(c=n.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",c,"instead.");var w=t.getRenderTarget(),S=w&&w.isWebGLMultiviewRenderTarget?w.numViews:0;return{isWebGL2:a,shaderID:b,precision:c,instancing:!0===g.isInstancedMesh,supportsVertexTextures:u,numMultiviewViews:S,outputEncoding:null!==w?d(w.texture):t.outputEncoding,map:!!e.map,mapEncoding:d(e.map),matcap:!!e.matcap,matcapEncoding:d(e.matcap),envMap:!!x,envMapMode:x&&x.mapping,envMapEncoding:d(x),envMapCubeUV:!!x&&(x.mapping===r.CubeUVReflectionMapping||x.mapping===r.CubeUVRefractionMapping),lightMap:!!e.lightMap,lightMapEncoding:d(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:d(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===r.ObjectSpaceNormalMap,tangentSpaceNormalMap:e.normalMapType===r.TangentSpaceNormalMap,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.displacementMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||!e.displacementMap),fog:!!y,useFog:e.fog,fogExp2:y&&y.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:o,skinning:e.skinning&&M>0,maxBones:M,useVertexTexture:s,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numRectAreaLights:i.rectArea.length,numHemiLights:i.hemi.length,numDirLightShadows:i.directionalShadowMap.length,numPointLightShadows:i.pointShadowMap.length,numSpotLightShadows:i.spotShadowMap.length,numClippingPlanes:m,numClipIntersection:v,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&p.length>0,shadowMapType:t.shadowMap.type,toneMapping:e.toneMapped?t.toneMapping:r.NoToneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===r.DoubleSide,flipSided:e.side===r.BackSide,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCacheKey=function(e,n){var r=[];if(n.shaderID?r.push(n.shaderID):(r.push(e.fragmentShader),r.push(e.vertexShader)),void 0!==e.defines)for(var i in e.defines)r.push(i),r.push(e.defines[i]);if(void 0===e.isRawShaderMaterial){for(var a=0;a<p.length;a++)r.push(n[p[a]]);r.push(t.outputEncoding),r.push(t.gammaFactor)}return r.push(e.onBeforeCompile.toString()),r.join()},this.acquireProgram=function(n,r,a,o){for(var s,c=0,l=i.length;c<l;c++){var u=i[c];if(u.cacheKey===o){++(s=u).usedTimes;break}}return void 0===s&&(s=new $t(t,e,o,n,r,a),i.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=i.indexOf(t);i[e]=i[i.length-1],i.pop(),t.destroy()}},this.programs=i}function ee(){var t=new WeakMap;return{get:function(e){var n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function ne(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function re(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function ie(){var t=[],e=0,n=[],r=[],i={id:-1};function a(n,r,a,o,s,c){var l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:r,material:a,program:a.program||i,groupOrder:o,renderOrder:n.renderOrder,z:s,group:c},t[e]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=a,l.program=a.program||i,l.groupOrder=o,l.renderOrder=n.renderOrder,l.z=s,l.group=c),e++,l}return{opaque:n,transparent:r,init:function(){e=0,n.length=0,r.length=0},push:function(t,e,i,o,s,c){var l=a(t,e,i,o,s,c);(!0===i.transparent?r:n).push(l)},unshift:function(t,e,i,o,s,c){var l=a(t,e,i,o,s,c);(!0===i.transparent?r:n).unshift(l)},sort:function(t,e){n.length>1&&n.sort(t||ne),r.length>1&&r.sort(e||re)}}}function ae(){var t=new WeakMap;function e(n){var r=n.target;r.removeEventListener("dispose",e),t.delete(r)}return{get:function(n,r){var i,a=t.get(n);return void 0===a?(i=new ie,t.set(n,new WeakMap),t.get(n).set(r,i),n.addEventListener("dispose",e)):void 0===(i=a.get(r))&&(i=new ie,a.set(r,i)),i},dispose:function(){t=new WeakMap}}}function oe(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var n;switch(e.type){case"DirectionalLight":n={direction:new p.Vector3,color:new x.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new h.Vector2};break;case"SpotLight":n={position:new p.Vector3,direction:new p.Vector3,color:new x.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new h.Vector2};break;case"PointLight":n={position:new p.Vector3,color:new x.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new h.Vector2,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new p.Vector3,skyColor:new x.Color,groundColor:new x.Color};break;case"RectAreaLight":n={color:new x.Color,position:new p.Vector3,halfWidth:new p.Vector3,halfHeight:new p.Vector3}}return t[e.id]=n,n}}}var se=0;function ce(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function le(){for(var t=new oe,e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},n=0;n<9;n++)e.probe.push(new p.Vector3);var r=new p.Vector3,i=new s.Matrix4,a=new s.Matrix4;return{setup:function(n,o,s){for(var c=0,l=0,u=0,h=0;h<9;h++)e.probe[h].set(0,0,0);var p=0,d=0,f=0,m=0,v=0,g=0,y=0,_=0,x=s.matrixWorldInverse;n.sort(ce),h=0;for(var b=n.length;h<b;h++){var M=n[h],w=M.color,S=M.intensity,T=M.distance,E=M.shadow&&M.shadow.map?M.shadow.map.texture:null;if(M.isAmbientLight)c+=w.r*S,l+=w.g*S,u+=w.b*S;else if(M.isLightProbe)for(var A=0;A<9;A++)e.probe[A].addScaledVector(M.sh.coefficients[A],S);else if(M.isDirectionalLight){if((R=t.get(M)).color.copy(M.color).multiplyScalar(M.intensity),R.direction.setFromMatrixPosition(M.matrixWorld),r.setFromMatrixPosition(M.target.matrixWorld),R.direction.sub(r),R.direction.transformDirection(x),R.shadow=M.castShadow,M.castShadow){var L=M.shadow;R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,e.directionalShadowMap[p]=E,e.directionalShadowMatrix[p]=M.shadow.matrix,g++}e.directional[p]=R,p++}else if(M.isSpotLight){if((R=t.get(M)).position.setFromMatrixPosition(M.matrixWorld),R.position.applyMatrix4(x),R.color.copy(w).multiplyScalar(S),R.distance=T,R.direction.setFromMatrixPosition(M.matrixWorld),r.setFromMatrixPosition(M.target.matrixWorld),R.direction.sub(r),R.direction.transformDirection(x),R.coneCos=Math.cos(M.angle),R.penumbraCos=Math.cos(M.angle*(1-M.penumbra)),R.decay=M.decay,R.shadow=M.castShadow,M.castShadow){L=M.shadow;R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,e.spotShadowMap[f]=E,e.spotShadowMatrix[f]=M.shadow.matrix,_++}e.spot[f]=R,f++}else if(M.isRectAreaLight){(R=t.get(M)).color.copy(w).multiplyScalar(S),R.position.setFromMatrixPosition(M.matrixWorld),R.position.applyMatrix4(x),a.identity(),i.copy(M.matrixWorld),i.premultiply(x),a.extractRotation(i),R.halfWidth.set(.5*M.width,0,0),R.halfHeight.set(0,.5*M.height,0),R.halfWidth.applyMatrix4(a),R.halfHeight.applyMatrix4(a),e.rectArea[m]=R,m++}else if(M.isPointLight){if((R=t.get(M)).position.setFromMatrixPosition(M.matrixWorld),R.position.applyMatrix4(x),R.color.copy(M.color).multiplyScalar(M.intensity),R.distance=M.distance,R.decay=M.decay,R.shadow=M.castShadow,M.castShadow){L=M.shadow;R.shadowBias=L.bias,R.shadowRadius=L.radius,R.shadowMapSize=L.mapSize,R.shadowCameraNear=L.camera.near,R.shadowCameraFar=L.camera.far,e.pointShadowMap[d]=E,e.pointShadowMatrix[d]=M.shadow.matrix,y++}e.point[d]=R,d++}else if(M.isHemisphereLight){var R;(R=t.get(M)).direction.setFromMatrixPosition(M.matrixWorld),R.direction.transformDirection(x),R.direction.normalize(),R.skyColor.copy(M.color).multiplyScalar(S),R.groundColor.copy(M.groundColor).multiplyScalar(S),e.hemi[v]=R,v++}}e.ambient[0]=c,e.ambient[1]=l,e.ambient[2]=u;var C=e.hash;C.directionalLength===p&&C.pointLength===d&&C.spotLength===f&&C.rectAreaLength===m&&C.hemiLength===v&&C.numDirectionalShadows===g&&C.numPointShadows===y&&C.numSpotShadows===_||(e.directional.length=p,e.spot.length=f,e.rectArea.length=m,e.point.length=d,e.hemi.length=v,e.directionalShadowMap.length=g,e.pointShadowMap.length=y,e.spotShadowMap.length=_,e.directionalShadowMatrix.length=g,e.pointShadowMatrix.length=y,e.spotShadowMatrix.length=_,C.directionalLength=p,C.pointLength=d,C.spotLength=f,C.rectAreaLength=m,C.hemiLength=v,C.numDirectionalShadows=g,C.numPointShadows=y,C.numSpotShadows=_,e.version=se++)},state:e}}function ue(){var t=new le,e=[],n=[];return{init:function(){e.length=0,n.length=0},state:{lightsArray:e,shadowsArray:n,lights:t},setupLights:function(r){t.setup(e,n,r)},pushLight:function(t){e.push(t)},pushShadow:function(t){n.push(t)}}}function he(){var t=new WeakMap;function e(n){var r=n.target;r.removeEventListener("dispose",e),t.delete(r)}return{get:function(n,r){var i;return!1===t.has(n)?(i=new ue,t.set(n,new WeakMap),t.get(n).set(r,i),n.addEventListener("dispose",e)):!1===t.get(n).has(r)?(i=new ue,t.get(n).set(r,i)):i=t.get(n).get(r),i},dispose:function(){t=new WeakMap}}}var pe=n(70),de=n(160),fe=n(161);function me(t,e,n){var i=new o.a,a=new h.Vector2,s=new h.Vector2,c=new d.Vector4,l=[],u=[],p={},f={0:r.BackSide,1:r.FrontSide,2:r.DoubleSide},m=new _.a({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new h.Vector2},radius:{value:4}},vertexShader:"\n\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n\n",fragmentShader:"\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n    #ifdef HORIZONAL_PASS\n\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n    #else\n\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n\n    #endif\n\n  }\n\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n  float std_dev = sqrt( squared_mean - mean * mean );\n\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n"}),v=m.clone();v.defines.HORIZONAL_PASS=1;var g=new C.BufferGeometry;g.setAttribute("position",new R.BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var y=new b.Mesh(g,m),x=this;function M(n,r){var i=e.update(y);m.uniforms.shadow_pass.value=n.map.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,i,m,y,null),v.uniforms.shadow_pass.value=n.mapPass.texture,v.uniforms.resolution.value=n.mapSize,v.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,i,v,y,null)}function w(t,e,n){var i=t<<0|e<<1|n<<2,a=l[i];return void 0===a&&(a=new de.a({depthPacking:r.RGBADepthPacking,morphTargets:t,skinning:e}),l[i]=a),a}function S(t,e,n){var r=t<<0|e<<1|n<<2,i=u[r];return void 0===i&&(i=new fe.a({morphTargets:t,skinning:e}),u[r]=i),i}function T(e,n,i,a,o,s){var c=e.geometry,l=null,u=w,h=e.customDepthMaterial;if(!0===i.isPointLight&&(u=S,h=e.customDistanceMaterial),void 0===h){var d=!1;!0===n.morphTargets&&(!0===c.isBufferGeometry?d=c.morphAttributes&&c.morphAttributes.position&&c.morphAttributes.position.length>0:!0===c.isGeometry&&(d=c.morphTargets&&c.morphTargets.length>0));var m=!1;!0===e.isSkinnedMesh&&(!0===n.skinning?m=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),l=u(d,m,!0===e.isInstancedMesh)}else l=h;if(t.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){var v=l.uuid,g=n.uuid,y=p[v];void 0===y&&(y={},p[v]=y);var _=y[g];void 0===_&&(_=l.clone(),y[g]=_),l=_}return l.visible=n.visible,l.wireframe=n.wireframe,s===r.VSMShadowMap?l.side=null!==n.shadowSide?n.shadowSide:n.side:l.side=null!==n.shadowSide?n.shadowSide:f[n.side],l.clipShadows=n.clipShadows,l.clippingPlanes=n.clippingPlanes,l.clipIntersection=n.clipIntersection,l.wireframeLinewidth=n.wireframeLinewidth,l.linewidth=n.linewidth,!0===i.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(i.matrixWorld),l.nearDistance=a,l.farDistance=o),l}function E(n,a,o,s,c){if(!1!==n.visible){if(n.layers.test(a.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&c===r.VSMShadowMap)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,n.matrixWorld);var l=e.update(n),u=n.material;if(Array.isArray(u))for(var h=l.groups,p=0,d=h.length;p<d;p++){var f=h[p],m=u[f.materialIndex];if(m&&m.visible){var v=T(n,m,s,o.near,o.far,c);t.renderBufferDirect(o,null,l,v,n,f)}}else if(u.visible){v=T(n,u,s,o.near,o.far,c);t.renderBufferDirect(o,null,l,v,n,null)}}for(var g=n.children,y=0,_=g.length;y<_;y++)E(g[y],a,o,s,c)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=r.PCFShadowMap,this.render=function(e,o,l){if(!1!==x.enabled&&(!1!==x.autoUpdate||!1!==x.needsUpdate)&&0!==e.length){var u=t.getRenderTarget(),h=t.getActiveCubeFace(),p=t.getActiveMipmapLevel(),d=t.state;d.setBlending(r.NoBlending),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(var f=0,m=e.length;f<m;f++){var v=e[f],g=v.shadow;if(void 0!==g){a.copy(g.mapSize);var y=g.getFrameExtents();if(a.multiply(y),s.copy(g.mapSize),(a.x>n||a.y>n)&&(console.warn("THREE.WebGLShadowMap:",v,"has shadow exceeding max texture size, reducing"),a.x>n&&(s.x=Math.floor(n/y.x),a.x=s.x*y.x,g.mapSize.x=s.x),a.y>n&&(s.y=Math.floor(n/y.y),a.y=s.y*y.y,g.mapSize.y=s.y)),null===g.map&&!g.isPointLightShadow&&this.type===r.VSMShadowMap){var _={minFilter:r.LinearFilter,magFilter:r.LinearFilter,format:r.RGBAFormat};g.map=new pe.a(a.x,a.y,_),g.map.texture.name=v.name+".shadowMap",g.mapPass=new pe.a(a.x,a.y,_),g.camera.updateProjectionMatrix()}if(null===g.map){_={minFilter:r.NearestFilter,magFilter:r.NearestFilter,format:r.RGBAFormat};g.map=new pe.a(a.x,a.y,_),g.map.texture.name=v.name+".shadowMap",g.camera.updateProjectionMatrix()}t.setRenderTarget(g.map),t.clear();for(var b=g.getViewportCount(),w=0;w<b;w++){var S=g.getViewport(w);c.set(s.x*S.x,s.y*S.y,s.x*S.z,s.y*S.w),d.viewport(c),g.updateMatrices(v,w),i=g.getFrustum(),E(o,l,g.camera,v,this.type)}g.isPointLightShadow||this.type!==r.VSMShadowMap||M(g,l)}else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}x.needsUpdate=!1,t.setRenderTarget(u,h,p)}}}function ve(t,e,n){var i=n.isWebGL2;var a=new function(){var e=!1,n=new d.Vector4,r=null,i=new d.Vector4(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,a,o,s){!0===s&&(e*=o,r*=o,a*=o),n.set(e,r,a,o),!1===i.equals(n)&&(t.clearColor(e,r,a,o),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},o=new function(){var e=!1,n=null,i=null,a=null;return{setTest:function(e){e?G(t.DEPTH_TEST):z(t.DEPTH_TEST)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(i!==e){if(e)switch(e){case r.NeverDepth:t.depthFunc(t.NEVER);break;case r.AlwaysDepth:t.depthFunc(t.ALWAYS);break;case r.LessDepth:t.depthFunc(t.LESS);break;case r.LessEqualDepth:t.depthFunc(t.LEQUAL);break;case r.EqualDepth:t.depthFunc(t.EQUAL);break;case r.GreaterEqualDepth:t.depthFunc(t.GEQUAL);break;case r.GreaterDepth:t.depthFunc(t.GREATER);break;case r.NotEqualDepth:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);i=e}},setLocked:function(t){e=t},setClear:function(e){a!==e&&(t.clearDepth(e),a=e)},reset:function(){e=!1,n=null,i=null,a=null}}},s=new function(){var e=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,l=null;return{setTest:function(n){e||(n?G(t.STENCIL_TEST):z(t.STENCIL_TEST))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,o){r===e&&i===n&&a===o||(t.stencilFunc(e,n,o),r=e,i=n,a=o)},setOp:function(e,n,r){o===e&&s===n&&c===r||(t.stencilOp(e,n,r),o=e,s=n,c=r)},setLocked:function(t){e=t},setClear:function(e){l!==e&&(t.clearStencil(e),l=e)},reset:function(){e=!1,n=null,r=null,i=null,a=null,o=null,s=null,c=null,l=null}}},c=t.getParameter(t.MAX_VERTEX_ATTRIBS),l=new Uint8Array(c),u=new Uint8Array(c),h=new Uint8Array(c),p={},f=null,m=null,v=null,g=null,y=null,_=null,x=null,b=null,M=null,w=!1,S=null,T=null,E=null,A=null,L=null,R=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),C=!1,P=0,N=t.getParameter(t.VERSION);-1!==N.indexOf("WebGL")?(P=parseFloat(/^WebGL\ ([0-9])/.exec(N)[1]),C=P>=1):-1!==N.indexOf("OpenGL ES")&&(P=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(N)[1]),C=P>=2);var D=null,I={},O=new d.Vector4,F=new d.Vector4;function B(e,n,r){var i=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<r;o++)t.texImage2D(n+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,i);return a}var V={};function U(n,r){(l[n]=1,0===u[n]&&(t.enableVertexAttribArray(n),u[n]=1),h[n]!==r)&&((i?t:e.get("ANGLE_instanced_arrays"))[i?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),h[n]=r)}function G(e){!0!==p[e]&&(t.enable(e),p[e]=!0)}function z(e){!1!==p[e]&&(t.disable(e),p[e]=!1)}V[t.TEXTURE_2D]=B(t.TEXTURE_2D,t.TEXTURE_2D,1),V[t.TEXTURE_CUBE_MAP]=B(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),a.setClear(0,0,0,1),o.setClear(1),s.setClear(0),G(t.DEPTH_TEST),o.setFunc(r.LessEqualDepth),X(!1),q(r.CullFaceBack),G(t.CULL_FACE),W(r.NoBlending);var k={[r.AddEquation]:t.FUNC_ADD,[r.SubtractEquation]:t.FUNC_SUBTRACT,[r.ReverseSubtractEquation]:t.FUNC_REVERSE_SUBTRACT};if(i)k[r.MinEquation]=t.MIN,k[r.MaxEquation]=t.MAX;else{var H=e.get("EXT_blend_minmax");null!==H&&(k[r.MinEquation]=H.MIN_EXT,k[r.MaxEquation]=H.MAX_EXT)}var j={[r.ZeroFactor]:t.ZERO,[r.OneFactor]:t.ONE,[r.SrcColorFactor]:t.SRC_COLOR,[r.SrcAlphaFactor]:t.SRC_ALPHA,[r.SrcAlphaSaturateFactor]:t.SRC_ALPHA_SATURATE,[r.DstColorFactor]:t.DST_COLOR,[r.DstAlphaFactor]:t.DST_ALPHA,[r.OneMinusSrcColorFactor]:t.ONE_MINUS_SRC_COLOR,[r.OneMinusSrcAlphaFactor]:t.ONE_MINUS_SRC_ALPHA,[r.OneMinusDstColorFactor]:t.ONE_MINUS_DST_COLOR,[r.OneMinusDstAlphaFactor]:t.ONE_MINUS_DST_ALPHA};function W(e,n,i,a,o,s,c,l){if(e!==r.NoBlending){if(m||(G(t.BLEND),m=!0),e===r.CustomBlending)o=o||n,s=s||i,c=c||a,n===g&&o===x||(t.blendEquationSeparate(k[n],k[o]),g=n,x=o),i===y&&a===_&&s===b&&c===M||(t.blendFuncSeparate(j[i],j[a],j[s],j[c]),y=i,_=a,b=s,M=c),v=e,w=null;else if(e!==v||l!==w){if(g===r.AddEquation&&x===r.AddEquation||(t.blendEquation(t.FUNC_ADD),g=r.AddEquation,x=r.AddEquation),l)switch(e){case r.NormalBlending:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case r.AdditiveBlending:t.blendFunc(t.ONE,t.ONE);break;case r.SubtractiveBlending:t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA);break;case r.MultiplyBlending:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case r.NormalBlending:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case r.AdditiveBlending:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case r.SubtractiveBlending:t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR);break;case r.MultiplyBlending:t.blendFunc(t.ZERO,t.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}y=null,_=null,b=null,M=null,v=e,w=l}}else m&&(z(t.BLEND),m=!1)}function X(e){S!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),S=e)}function q(e){e!==r.CullFaceNone?(G(t.CULL_FACE),e!==T&&(e===r.CullFaceBack?t.cullFace(t.BACK):e===r.CullFaceFront?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):z(t.CULL_FACE),T=e}function Y(e,n,r){e?(G(t.POLYGON_OFFSET_FILL),A===n&&L===r||(t.polygonOffset(n,r),A=n,L=r)):z(t.POLYGON_OFFSET_FILL)}function Z(e){void 0===e&&(e=t.TEXTURE0+R-1),D!==e&&(t.activeTexture(e),D=e)}return{buffers:{color:a,depth:o,stencil:s},initAttributes:function(){for(var t=0,e=l.length;t<e;t++)l[t]=0},enableAttribute:function(t){U(t,0)},enableAttributeAndDivisor:U,disableUnusedAttributes:function(){for(var e=0,n=u.length;e!==n;++e)u[e]!==l[e]&&(t.disableVertexAttribArray(e),u[e]=0)},enable:G,disable:z,useProgram:function(e){return f!==e&&(t.useProgram(e),f=e,!0)},setBlending:W,setMaterial:function(e,n){e.side===r.DoubleSide?z(t.CULL_FACE):G(t.CULL_FACE);var i=e.side===r.BackSide;n&&(i=!i),X(i),e.blending===r.NormalBlending&&!1===e.transparent?W(r.NoBlending):W(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),o.setFunc(e.depthFunc),o.setTest(e.depthTest),o.setMask(e.depthWrite),a.setMask(e.colorWrite);var c=e.stencilWrite;s.setTest(c),c&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Y(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:X,setCullFace:q,setLineWidth:function(e){e!==E&&(C&&t.lineWidth(e),E=e)},setPolygonOffset:Y,setScissorTest:function(e){e?G(t.SCISSOR_TEST):z(t.SCISSOR_TEST)},activeTexture:Z,bindTexture:function(e,n){null===D&&Z();var r=I[D];void 0===r&&(r={type:void 0,texture:void 0},I[D]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||V[e]),r.type=e,r.texture=n)},unbindTexture:function(){var e=I[D];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===O.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),O.copy(e))},viewport:function(e){!1===F.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),F.copy(e))},reset:function(){for(var e=0;e<u.length;e++)1===u[e]&&(t.disableVertexAttribArray(e),u[e]=0);p={},D=null,I={},f=null,v=null,S=null,T=null,a.reset(),o.reset(),s.reset()}}}function ge(t,e,n,a,o,s,c){var l,u=o.isWebGL2,h=o.maxTextures,p=o.maxCubemapSize,d=o.maxTextureSize,f=o.maxSamples,m=new WeakMap,v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function g(t,e){return v?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(t,e,n,r){var a=1;if((t.width>r||t.height>r)&&(a=r/Math.max(t.width,t.height)),a<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){var o=e?i._Math.floorPowerOfTwo:Math.floor,s=o(a*t.width),c=o(a*t.height);void 0===l&&(l=g(s,c));var u=n?g(s,c):l;return u.width=s,u.height=c,u.getContext("2d").drawImage(t,0,0,s,c),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+s+"x"+c+")."),u}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function _(t){return i._Math.isPowerOfTwo(t.width)&&i._Math.isPowerOfTwo(t.height)}function x(t,e){return t.generateMipmaps&&e&&t.minFilter!==r.NearestFilter&&t.minFilter!==r.LinearFilter}function b(e,n,r,i){t.generateMipmap(e),a.get(n).__maxMipLevel=Math.log(Math.max(r,i))*Math.LOG2E}function M(n,r,i){if(!1===u)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}var a=r;return r===t.RED&&(i===t.FLOAT&&(a=t.R32F),i===t.HALF_FLOAT&&(a=t.R16F),i===t.UNSIGNED_BYTE&&(a=t.R8)),r===t.RGB&&(i===t.FLOAT&&(a=t.RGB32F),i===t.HALF_FLOAT&&(a=t.RGB16F),i===t.UNSIGNED_BYTE&&(a=t.RGB8)),r===t.RGBA&&(i===t.FLOAT&&(a=t.RGBA32F),i===t.HALF_FLOAT&&(a=t.RGBA16F),i===t.UNSIGNED_BYTE&&(a=t.RGBA8)),a===t.R16F||a===t.R32F||a===t.RGBA16F||a===t.RGBA32F?e.get("EXT_color_buffer_float"):a!==t.RGB16F&&a!==t.RGB32F||console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),a}function w(e){return e===r.NearestFilter||e===r.NearestMipmapNearestFilter||e===r.NearestMipmapLinearFilter?t.NEAREST:t.LINEAR}function S(e){var n=e.target;n.removeEventListener("dispose",S),function(e){var n=a.get(e);if(void 0===n.__webglInit)return;t.deleteTexture(n.__webglTexture),a.remove(e)}(n),n.isVideoTexture&&m.delete(n),c.memory.textures--}function T(e){var n=e.target;n.removeEventListener("dispose",T),function(e){var n=a.get(e),r=a.get(e.texture);if(!e)return;void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var i=0;i<6;i++)t.deleteFramebuffer(n.__webglFramebuffer[i]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[i]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer);if(e.isWebGLMultiviewRenderTarget){t.deleteTexture(n.__webglColorTexture),t.deleteTexture(n.__webglDepthStencilTexture),c.memory.textures-=2;i=0;for(var o=n.__webglViewFramebuffers.length;i<o;i++)t.deleteFramebuffer(n.__webglViewFramebuffers[i])}a.remove(e.texture),a.remove(e)}(n),c.memory.textures--}var E=0;function A(e,r){var i=a.get(e);if(e.isVideoTexture&&function(t){var e=c.render.frame;m.get(t)!==e&&(m.set(t,e),t.update())}(e),e.version>0&&i.__version!==e.version){var o=e.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==o.complete)return void I(i,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_2D,i.__webglTexture)}function L(e,i){if(6===e.image.length){var o=a.get(e);if(e.version>0&&o.__version!==e.version){D(o,e),n.activeTexture(t.TEXTURE0+i),n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var c=e&&e.isCompressedTexture,l=e.image[0]&&e.image[0].isDataTexture,h=[],d=0;d<6;d++)h[d]=c||l?l?e.image[d].image:e.image[d]:y(e.image[d],!1,!0,p);var f,m=h[0],v=_(m)||u,g=s.convert(e.format),w=s.convert(e.type),S=M(e.internalFormat,g,w);if(N(t.TEXTURE_CUBE_MAP,e,v),c){for(d=0;d<6;d++){f=h[d].mipmaps;for(var T=0;T<f.length;T++){var E=f[T];e.format!==r.RGBAFormat&&e.format!==r.RGBFormat?null!==g?n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+d,T,S,E.width,E.height,0,E.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+d,T,S,E.width,E.height,0,g,w,E.data)}}o.__maxMipLevel=f.length-1}else{f=e.mipmaps;for(d=0;d<6;d++)if(l){n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,S,h[d].width,h[d].height,0,g,w,h[d].data);for(T=0;T<f.length;T++){var A=(E=f[T]).image[d].image;n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+d,T+1,S,A.width,A.height,0,g,w,A.data)}}else{n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,S,g,w,h[d]);for(T=0;T<f.length;T++){E=f[T];n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+d,T+1,S,g,w,E.image[d])}}o.__maxMipLevel=f.length}x(e,v)&&b(t.TEXTURE_CUBE_MAP,e,m.width,m.height),o.__version=e.version,e.onUpdate&&e.onUpdate(e)}else n.activeTexture(t.TEXTURE0+i),n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture)}}function R(e,r){n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_CUBE_MAP,a.get(e).__webglTexture)}var C={[r.RepeatWrapping]:t.REPEAT,[r.ClampToEdgeWrapping]:t.CLAMP_TO_EDGE,[r.MirroredRepeatWrapping]:t.MIRRORED_REPEAT},P={[r.NearestFilter]:t.NEAREST,[r.NearestMipmapNearestFilter]:t.NEAREST_MIPMAP_NEAREST,[r.NearestMipmapLinearFilter]:t.NEAREST_MIPMAP_LINEAR,[r.LinearFilter]:t.LINEAR,[r.LinearMipmapNearestFilter]:t.LINEAR_MIPMAP_NEAREST,[r.LinearMipmapLinearFilter]:t.LINEAR_MIPMAP_LINEAR};function N(n,i,s){s?(t.texParameteri(n,t.TEXTURE_WRAP_S,C[i.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,C[i.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,C[i.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,P[i.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,P[i.minFilter])):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),i.wrapS===r.ClampToEdgeWrapping&&i.wrapT===r.ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,t.TEXTURE_MAG_FILTER,w(i.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,w(i.minFilter)),i.minFilter!==r.NearestFilter&&i.minFilter!==r.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var c=e.get("EXT_texture_filter_anisotropic");if(c){if(i.type===r.FloatType&&null===e.get("OES_texture_float_linear"))return;if(i.type===r.HalfFloatType&&null===(u||e.get("OES_texture_half_float_linear")))return;(i.anisotropy>1||a.get(i).__currentAnisotropy)&&(t.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,o.getMaxAnisotropy())),a.get(i).__currentAnisotropy=i.anisotropy)}}function D(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",S),e.__webglTexture=t.createTexture(),c.memory.textures++)}function I(e,i,a){var o=t.TEXTURE_2D;i.isDataTexture2DArray&&(o=t.TEXTURE_2D_ARRAY),i.isDataTexture3D&&(o=t.TEXTURE_3D),D(e,i),n.activeTexture(t.TEXTURE0+a),n.bindTexture(o,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,i.unpackAlignment);var c=function(t){return!u&&(t.wrapS!==r.ClampToEdgeWrapping||t.wrapT!==r.ClampToEdgeWrapping||t.minFilter!==r.NearestFilter&&t.minFilter!==r.LinearFilter)}(i)&&!1===_(i.image),l=y(i.image,c,!1,d),h=_(l)||u,p=s.convert(i.format),f=s.convert(i.type),m=M(i.internalFormat,p,f);N(o,i,h);var v,g=i.mipmaps;if(i.isDepthTexture){if(m=t.DEPTH_COMPONENT,i.type===r.FloatType){if(!1===u)throw new Error("Float Depth Texture only supported in WebGL2.0");m=t.DEPTH_COMPONENT32F}else u&&(m=t.DEPTH_COMPONENT16);i.format===r.DepthFormat&&m===t.DEPTH_COMPONENT&&i.type!==r.UnsignedShortType&&i.type!==r.UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=r.UnsignedShortType,f=s.convert(i.type)),i.format===r.DepthStencilFormat&&(m=t.DEPTH_STENCIL,i.type!==r.UnsignedInt248Type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=r.UnsignedInt248Type,f=s.convert(i.type))),n.texImage2D(t.TEXTURE_2D,0,m,l.width,l.height,0,p,f,null)}else if(i.isDataTexture)if(g.length>0&&h){for(var w=0,S=g.length;w<S;w++)v=g[w],n.texImage2D(t.TEXTURE_2D,w,m,v.width,v.height,0,p,f,v.data);i.generateMipmaps=!1,e.__maxMipLevel=g.length-1}else n.texImage2D(t.TEXTURE_2D,0,m,l.width,l.height,0,p,f,l.data),e.__maxMipLevel=0;else if(i.isCompressedTexture){for(w=0,S=g.length;w<S;w++)v=g[w],i.format!==r.RGBAFormat&&i.format!==r.RGBFormat?null!==p?n.compressedTexImage2D(t.TEXTURE_2D,w,m,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(t.TEXTURE_2D,w,m,v.width,v.height,0,p,f,v.data);e.__maxMipLevel=g.length-1}else if(i.isDataTexture2DArray)n.texImage3D(t.TEXTURE_2D_ARRAY,0,m,l.width,l.height,l.depth,0,p,f,l.data),e.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(t.TEXTURE_3D,0,m,l.width,l.height,l.depth,0,p,f,l.data),e.__maxMipLevel=0;else if(g.length>0&&h){for(w=0,S=g.length;w<S;w++)v=g[w],n.texImage2D(t.TEXTURE_2D,w,m,p,f,v);i.generateMipmaps=!1,e.__maxMipLevel=g.length-1}else n.texImage2D(t.TEXTURE_2D,0,m,p,f,l),e.__maxMipLevel=0;x(i,h)&&b(o,i,l.width,l.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}function O(e,r,i,o){var c=s.convert(r.texture.format),l=s.convert(r.texture.type),u=M(r.texture.internalFormat,c,l);n.texImage2D(o,0,u,r.width,r.height,0,c,l,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,i,o,a.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function F(e,n,r){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer&&!n.stencilBuffer){if(r){var i=V(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,i,t.DEPTH_COMPONENT16,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)}else if(n.depthBuffer&&n.stencilBuffer){if(r){i=V(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,i,t.DEPTH24_STENCIL8,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)}else{var a=s.convert(n.texture.format),o=s.convert(n.texture.type),c=M(n.texture.internalFormat,a,o);if(r){i=V(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,i,c,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,c,n.width,n.height)}t.bindRenderbuffer(t.RENDERBUFFER,null)}function B(e){var n=a.get(e),i=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");a.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),A(n.depthTexture,0);var i=a.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===r.DepthFormat)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,i,0);else{if(n.depthTexture.format!==r.DepthStencilFormat)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,i,0)}}(n.__webglFramebuffer,e)}else if(i){n.__webglDepthbuffer=[];for(var o=0;o<6;o++)t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer[o]),n.__webglDepthbuffer[o]=t.createRenderbuffer(),F(n.__webglDepthbuffer[o],e)}else t.bindFramebuffer(t.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),F(n.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}function V(t){return u&&t.isWebGLMultisampleRenderTarget?Math.min(f,t.samples):0}var U=!1,G=!1;this.allocateTextureUnit=function(){var t=E;return t>=h&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+h),E+=1,t},this.resetTextureUnits=function(){E=0},this.setTexture2D=A,this.setTexture2DArray=function(e,r){var i=a.get(e);e.version>0&&i.__version!==e.version?I(i,e,r):(n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_2D_ARRAY,i.__webglTexture))},this.setTexture3D=function(e,r){var i=a.get(e);e.version>0&&i.__version!==e.version?I(i,e,r):(n.activeTexture(t.TEXTURE0+r),n.bindTexture(t.TEXTURE_3D,i.__webglTexture))},this.setTextureCube=L,this.setTextureCubeDynamic=R,this.setupRenderTarget=function(r){var i=a.get(r),o=a.get(r.texture);r.addEventListener("dispose",T),o.__webglTexture=t.createTexture(),c.memory.textures++;var l=!0===r.isWebGLRenderTargetCube,h=!0===r.isWebGLMultisampleRenderTarget,p=!0===r.isWebGLMultiviewRenderTarget,d=_(r)||u;if(l){i.__webglFramebuffer=[];for(var f=0;f<6;f++)i.__webglFramebuffer[f]=t.createFramebuffer()}else if(i.__webglFramebuffer=t.createFramebuffer(),h)if(u){i.__webglMultisampledFramebuffer=t.createFramebuffer(),i.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,i.__webglColorRenderbuffer);var m=s.convert(r.texture.format),v=s.convert(r.texture.type),g=M(r.texture.internalFormat,m,v),y=V(r);t.renderbufferStorageMultisample(t.RENDERBUFFER,y,g,r.width,r.height),t.bindFramebuffer(t.FRAMEBUFFER,i.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,i.__webglColorRenderbuffer),t.bindRenderbuffer(t.RENDERBUFFER,null),r.depthBuffer&&(i.__webglDepthRenderbuffer=t.createRenderbuffer(),F(i.__webglDepthRenderbuffer,r,!0)),t.bindFramebuffer(t.FRAMEBUFFER,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");else if(p){var w=r.width,S=r.height,E=r.numViews;t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer);var A=e.get("OVR_multiview2");c.memory.textures+=2;var L=t.createTexture();t.bindTexture(t.TEXTURE_2D_ARRAY,L),t.texParameteri(t.TEXTURE_2D_ARRAY,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D_ARRAY,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texImage3D(t.TEXTURE_2D_ARRAY,0,t.RGBA8,w,S,E,0,t.RGBA,t.UNSIGNED_BYTE,null),A.framebufferTextureMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,L,0,0,E);var R=t.createTexture();t.bindTexture(t.TEXTURE_2D_ARRAY,R),t.texParameteri(t.TEXTURE_2D_ARRAY,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D_ARRAY,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texImage3D(t.TEXTURE_2D_ARRAY,0,t.DEPTH24_STENCIL8,w,S,E,0,t.DEPTH_STENCIL,t.UNSIGNED_INT_24_8,null),A.framebufferTextureMultiviewOVR(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,R,0,0,E);var C=new Array(E);for(f=0;f<E;++f)C[f]=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,C[f]),t.framebufferTextureLayer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,L,0,f);i.__webglColorTexture=L,i.__webglDepthStencilTexture=R,i.__webglViewFramebuffers=C,t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindTexture(t.TEXTURE_2D_ARRAY,null)}if(l){n.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture),N(t.TEXTURE_CUBE_MAP,r.texture,d);for(f=0;f<6;f++)O(i.__webglFramebuffer[f],r,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+f);x(r.texture,d)&&b(t.TEXTURE_CUBE_MAP,r.texture,r.width,r.height),n.bindTexture(t.TEXTURE_CUBE_MAP,null)}else p||(n.bindTexture(t.TEXTURE_2D,o.__webglTexture),N(t.TEXTURE_2D,r.texture,d),O(i.__webglFramebuffer,r,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),x(r.texture,d)&&b(t.TEXTURE_2D,r.texture,r.width,r.height),n.bindTexture(t.TEXTURE_2D,null));r.depthBuffer&&B(r)},this.updateRenderTargetMipmap=function(e){var r=e.texture;if(x(r,_(e)||u)){var i=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,o=a.get(r).__webglTexture;n.bindTexture(i,o),b(i,r,e.width,e.height),n.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(u){var n=a.get(e);t.bindFramebuffer(t.READ_FRAMEBUFFER,n.__webglMultisampledFramebuffer),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,n.__webglFramebuffer);var r=e.width,i=e.height,o=t.COLOR_BUFFER_BIT;e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&(o|=t.STENCIL_BUFFER_BIT),t.blitFramebuffer(0,0,r,i,0,0,r,i,o,t.NEAREST)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===U&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),U=!0),t=t.texture),A(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLRenderTargetCube&&(!1===G&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),G=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?L(t,e):R(t,e)}}function ye(t,e,n){var i=n.isWebGL2;return{convert:function(n){var a;if(n===r.UnsignedByteType)return t.UNSIGNED_BYTE;if(n===r.UnsignedShort4444Type)return t.UNSIGNED_SHORT_4_4_4_4;if(n===r.UnsignedShort5551Type)return t.UNSIGNED_SHORT_5_5_5_1;if(n===r.UnsignedShort565Type)return t.UNSIGNED_SHORT_5_6_5;if(n===r.ByteType)return t.BYTE;if(n===r.ShortType)return t.SHORT;if(n===r.UnsignedShortType)return t.UNSIGNED_SHORT;if(n===r.IntType)return t.INT;if(n===r.UnsignedIntType)return t.UNSIGNED_INT;if(n===r.FloatType)return t.FLOAT;if(n===r.HalfFloatType)return i?t.HALF_FLOAT:null!==(a=e.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(n===r.AlphaFormat)return t.ALPHA;if(n===r.RGBFormat)return t.RGB;if(n===r.RGBAFormat)return t.RGBA;if(n===r.LuminanceFormat)return t.LUMINANCE;if(n===r.LuminanceAlphaFormat)return t.LUMINANCE_ALPHA;if(n===r.DepthFormat)return t.DEPTH_COMPONENT;if(n===r.DepthStencilFormat)return t.DEPTH_STENCIL;if(n===r.RedFormat)return t.RED;if(n===r.RedIntegerFormat)return t.RED_INTEGER;if(n===r.RGFormat)return t.RG;if(n===r.RGIntegerFormat)return t.RG_INTEGER;if(n===r.RGBIntegerFormat)return t.RGB_INTEGER;if(n===r.RGBAIntegerFormat)return t.RGBA_INTEGER;if(n===r.RGB_S3TC_DXT1_Format||n===r.RGBA_S3TC_DXT1_Format||n===r.RGBA_S3TC_DXT3_Format||n===r.RGBA_S3TC_DXT5_Format){if(null===(a=e.get("WEBGL_compressed_texture_s3tc")))return null;if(n===r.RGB_S3TC_DXT1_Format)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===r.RGBA_S3TC_DXT1_Format)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===r.RGBA_S3TC_DXT3_Format)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===r.RGBA_S3TC_DXT5_Format)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===r.RGB_PVRTC_4BPPV1_Format||n===r.RGB_PVRTC_2BPPV1_Format||n===r.RGBA_PVRTC_4BPPV1_Format||n===r.RGBA_PVRTC_2BPPV1_Format){if(null===(a=e.get("WEBGL_compressed_texture_pvrtc")))return null;if(n===r.RGB_PVRTC_4BPPV1_Format)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===r.RGB_PVRTC_2BPPV1_Format)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===r.RGBA_PVRTC_4BPPV1_Format)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===r.RGBA_PVRTC_2BPPV1_Format)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}return n===r.RGB_ETC1_Format?null!==(a=e.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null:n===r.RGBA_ASTC_4x4_Format||n===r.RGBA_ASTC_5x4_Format||n===r.RGBA_ASTC_5x5_Format||n===r.RGBA_ASTC_6x5_Format||n===r.RGBA_ASTC_6x6_Format||n===r.RGBA_ASTC_8x5_Format||n===r.RGBA_ASTC_8x6_Format||n===r.RGBA_ASTC_8x8_Format||n===r.RGBA_ASTC_10x5_Format||n===r.RGBA_ASTC_10x6_Format||n===r.RGBA_ASTC_10x8_Format||n===r.RGBA_ASTC_10x10_Format||n===r.RGBA_ASTC_12x10_Format||n===r.RGBA_ASTC_12x12_Format?null!==(a=e.get("WEBGL_compressed_texture_astc"))?n:null:n===r.UnsignedInt248Type?i?t.UNSIGNED_INT_24_8:null!==(a=e.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}function _e(t,e,n,r){pe.a.call(this,t,e,r),this.depthBuffer=!1,this.stencilBuffer=!1,this.numViews=n}function xe(t,e){var n,r,i,a,o,c,l,u=t.extensions,p=t.properties,d=0;function f(t){return t.isArrayCamera?t.cameras:(o[0]=t,o)}this.isAvailable=function(){if(void 0===l){var t=u.get("OVR_multiview2");if(l=null!==t&&!1===e.getContextAttributes().antialias){d=e.getParameter(t.MAX_VIEWS_OVR),n=new _e(0,0,2),c=new h.Vector2,a=[],i=[],o=[];for(var r=0;r<d;r++)a[r]=new s.Matrix4,i[r]=new T.a}}return l},this.attachCamera=function(e){!1!==function(t){if(void 0===t.isArrayCamera)return!0;var e=t.cameras;if(e.length>d)return!1;for(var n=1,r=e.length;n<r;n++)if(e[0].viewport.z!==e[n].viewport.z||e[0].viewport.w!==e[n].viewport.w)return!1;return!0}(e)&&(r=t.getRenderTarget(),function(e){if(r?c.set(r.width,r.height):t.getDrawingBufferSize(c),e.isArrayCamera){var i=e.cameras[0].viewport;n.setSize(i.z,i.w),n.setNumViews(e.cameras.length)}else n.setSize(c.x,c.y),n.setNumViews(2)}(e),t.setRenderTarget(n))},this.detachCamera=function(i){n===t.getRenderTarget()&&(t.setRenderTarget(r),function(t){var r=n,i=r.numViews,a=p.get(r).__webglViewFramebuffers,o=r.width,s=r.height;if(t.isArrayCamera)for(var l=0;l<i;l++){var u=t.cameras[l].viewport,h=u.x,d=u.y,f=h+u.z,m=d+u.w;e.bindFramebuffer(e.READ_FRAMEBUFFER,a[l]),e.blitFramebuffer(0,0,o,s,h,d,f,m,e.COLOR_BUFFER_BIT,e.NEAREST)}else e.bindFramebuffer(e.READ_FRAMEBUFFER,a[0]),e.blitFramebuffer(0,0,o,s,0,0,c.x,c.y,e.COLOR_BUFFER_BIT,e.NEAREST)}(i))},this.updateCameraProjectionMatricesUniform=function(t,n){for(var r=f(t),i=0;i<r.length;i++)a[i].copy(r[i].projectionMatrix);n.setValue(e,"projectionMatrices",a)},this.updateCameraViewMatricesUniform=function(t,n){for(var r=f(t),i=0;i<r.length;i++)a[i].copy(r[i].matrixWorldInverse);n.setValue(e,"viewMatrices",a)},this.updateObjectMatricesUniforms=function(t,n,r){for(var o=f(n),s=0;s<o.length;s++)a[s].multiplyMatrices(o[s].matrixWorldInverse,t.matrixWorld),i[s].getNormalMatrix(a[s]);r.setValue(e,"modelViewMatrices",a),r.setValue(e,"normalMatrices",i)}}_e.prototype=Object.assign(Object.create(pe.a.prototype),{constructor:_e,isWebGLMultiviewRenderTarget:!0,copy:function(t){return pe.a.prototype.copy.call(this,t),this.numViews=t.numViews,this},setNumViews:function(t){return this.numViews!==t&&(this.numViews=t,this.dispose()),this}});var be=n(37);function Me(t){be.PerspectiveCamera.call(this),this.cameras=t||[]}Me.prototype=Object.assign(Object.create(be.PerspectiveCamera.prototype),{constructor:Me,isArrayCamera:!0});var we=n(30),Se=n(36);function Te(t,e){var n=this,r=null,i=null,a="local-floor",o=null,s=[],c=new Map,l=new be.PerspectiveCamera;l.layers.enable(1),l.viewport=new d.Vector4;var u=new be.PerspectiveCamera;u.layers.enable(2),u.viewport=new d.Vector4;var h=new Me([l,u]);function f(t){var e=c.get(t.inputSource);e&&e.dispatchEvent({type:t.type})}function v(){c.forEach((function(t,e){t.dispatchEvent({type:"disconnected",data:e}),t.visible=!1})),c.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),w.stop(),n.dispatchEvent({type:"sessionend"}),n.isPresenting=!1}function g(t){i=t,w.setContext(r),w.start(),n.dispatchEvent({type:"sessionstart"}),n.isPresenting=!0}function y(t){for(var e=r.inputSources,n=0;n<s.length;n++)c.set(e[n],s[n]);for(n=0;n<t.removed.length;n++){var i=t.removed[n];(a=c.get(i))&&(a.dispatchEvent({type:"disconnected",data:i}),c.delete(i))}for(n=0;n<t.added.length;n++){var a;i=t.added[n];(a=c.get(i))&&a.dispatchEvent({type:"connected",data:i})}}h.layers.enable(1),h.layers.enable(2),this.enabled=!1,this.isPresenting=!1,this.getController=function(t){var e=s[t];return void 0===e&&((e=new Se.Group).matrixAutoUpdate=!1,e.visible=!1,s[t]=e),e},this.setFramebufferScaleFactor=function(){},this.setReferenceSpaceType=function(t){a=t},this.getReferenceSpace=function(){return i},this.getSession=function(){return r},this.setSession=function(t){if(null!==(r=t)){r.addEventListener("select",f),r.addEventListener("selectstart",f),r.addEventListener("selectend",f),r.addEventListener("squeeze",f),r.addEventListener("squeezestart",f),r.addEventListener("squeezeend",f),r.addEventListener("end",v);var n=e.getContextAttributes(),i={antialias:n.antialias,alpha:n.alpha,depth:n.depth,stencil:n.stencil},o=new XRWebGLLayer(r,e,i);r.updateRenderState({baseLayer:o}),r.requestReferenceSpace(a).then(g),r.addEventListener("inputsourceschange",y)}};var _=new p.Vector3,x=new p.Vector3;function b(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.getInverse(t.matrixWorld)}this.getCamera=function(t){var e=t.parent,n=h.cameras;b(h,e);for(var r=0;r<n.length;r++)b(n[r],e);t.matrixWorld.copy(h.matrixWorld);for(var i=t.children,a=(r=0,i.length);r<a;r++)i[r].updateMatrixWorld(!0);return function(t,e,n){_.setFromMatrixPosition(e.matrixWorld),x.setFromMatrixPosition(n.matrixWorld);var r=_.distanceTo(x),i=e.projectionMatrix.elements,a=n.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),c=(i[9]+1)/i[5],l=(i[9]-1)/i[5],u=(i[8]-1)/i[0],h=(a[8]+1)/a[0],p=o*u,d=o*h,f=r/(-u+h),m=f*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.getInverse(t.matrixWorld);var v=o+f,g=s+f,y=p-m,b=d+(r-m),M=c*s/g*v,w=l*s/g*v;t.projectionMatrix.makePerspective(y,b,M,w,v,g)}(h,l,u),h};var M=null;var w=new m;w.setAnimationLoop((function(e,n){if(null!==(o=n.getViewerPose(i))){var a=o.views,c=r.renderState.baseLayer;t.setFramebuffer(c.framebuffer);for(var l=0;l<a.length;l++){var u=a[l],p=c.getViewport(u),d=u.transform.inverse.matrix,f=h.cameras[l];f.matrix.fromArray(d).getInverse(f.matrix),f.projectionMatrix.fromArray(u.projectionMatrix),f.viewport.set(p.x,p.y,p.width,p.height),0===l&&h.matrix.copy(f.matrix)}}var m=r.inputSources;for(l=0;l<s.length;l++){var v=s[l],g=m[l];if(g){var y=n.getPose(g.targetRaySpace,i);if(null!==y){v.matrix.fromArray(y.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.visible=!0;continue}}v.visible=!1}M&&M(e,n)})),this.setAnimationLoop=function(t){M=t},this.dispose=function(){}}function Ee(t){var e=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=void 0!==t.context?t.context:null,g=void 0!==t.alpha&&t.alpha,y=void 0===t.depth||t.depth,_=void 0===t.stencil||t.stencil,x=void 0!==t.antialias&&t.antialias,b=void 0===t.premultipliedAlpha||t.premultipliedAlpha,T=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,E=void 0!==t.powerPreference?t.powerPreference:"default",R=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat,C=null,P=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=r.LinearEncoding,this.physicallyCorrectLights=!1,this.toneMapping=r.LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var O,V,U,G,z,k,H,j,W,X,q,Y,Z,J,K,Q,$,tt,et=this,nt=!1,rt=null,it=0,at=0,ot=null,st=null,ct=-1,lt={geometry:null,program:null,wireframe:!1},ut=null,ht=null,pt=new d.Vector4,dt=new d.Vector4,ft=null,mt=e.width,vt=e.height,gt=1,yt=null,_t=null,xt=new d.Vector4(0,0,mt,vt),bt=new d.Vector4(0,0,mt,vt),Mt=!1,wt=new o.a,St=new A,Tt=!1,Et=!1,At=new s.Matrix4,Lt=new p.Vector3;function Rt(){return null===ot?gt:1}try{var Ct={alpha:g,depth:y,stencil:_,antialias:x,premultipliedAlpha:b,preserveDrawingBuffer:T,powerPreference:E,failIfMajorPerformanceCaveat:R,xrCompatible:!0};if(e.addEventListener("webglcontextlost",Ft,!1),e.addEventListener("webglcontextrestored",Bt,!1),null===(O=n||e.getContext("webgl",Ct)||e.getContext("experimental-webgl",Ct)))throw null!==e.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===O.getShaderPrecisionFormat&&(O.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Pt(){V=new L(O),!1===(U=new S(O,V,t)).isWebGL2&&(V.get("WEBGL_depth_texture"),V.get("OES_texture_float"),V.get("OES_texture_half_float"),V.get("OES_texture_half_float_linear"),V.get("OES_standard_derivatives"),V.get("OES_element_index_uint"),V.get("ANGLE_instanced_arrays")),V.get("OES_texture_float_linear"),tt=new ye(O,V,U),(G=new ve(O,V,U)).scissor(dt.copy(bt).multiplyScalar(gt).floor()),G.viewport(pt.copy(xt).multiplyScalar(gt).floor()),z=new I(O),k=new ee,H=new ge(O,V,G,k,U,tt,z),j=new v(O),W=new N(O,j,z),X=new B(O,W,j,z),K=new F(O),q=new te(et,V,U),Y=new ae,Z=new he,J=new M(et,G,X,b),Q=new w(O,V,z,U),$=new D(O,V,z,U),z.programs=q.programs,et.capabilities=U,et.extensions=V,et.properties=k,et.renderLists=Y,et.state=G,et.info=z}Pt();var Nt=new Te(et,O);this.xr=Nt;var Dt=new xe(et,O),It=new me(et,X,U.maxTextureSize);function Ft(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),nt=!0}function Bt(){console.log("THREE.WebGLRenderer: Context Restored."),nt=!1,Pt()}function Vt(t){var e=t.target;e.removeEventListener("dispose",Vt),function(t){Ut(t),k.remove(t)}(e)}function Ut(t){var e=k.get(t).program;t.program=void 0,void 0!==e&&q.releaseProgram(e)}this.shadowMap=It,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){var t=V.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=V.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return gt},this.setPixelRatio=function(t){void 0!==t&&(gt=t,this.setSize(mt,vt,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new h.Vector2),t.set(mt,vt)},this.setSize=function(t,n,r){Nt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(mt=t,vt=n,e.width=Math.floor(t*gt),e.height=Math.floor(n*gt),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new h.Vector2),t.set(mt*gt,vt*gt).floor()},this.setDrawingBufferSize=function(t,n,r){mt=t,vt=n,gt=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new d.Vector4),t.copy(pt)},this.getViewport=function(t){return t.copy(xt)},this.setViewport=function(t,e,n,r){t.isVector4?xt.set(t.x,t.y,t.z,t.w):xt.set(t,e,n,r),G.viewport(pt.copy(xt).multiplyScalar(gt).floor())},this.getScissor=function(t){return t.copy(bt)},this.setScissor=function(t,e,n,r){t.isVector4?bt.set(t.x,t.y,t.z,t.w):bt.set(t,e,n,r),G.scissor(dt.copy(bt).multiplyScalar(gt).floor())},this.getScissorTest=function(){return Mt},this.setScissorTest=function(t){G.setScissorTest(Mt=t)},this.setOpaqueSort=function(t){yt=t},this.setTransparentSort=function(t){_t=t},this.getClearColor=function(){return J.getClearColor()},this.setClearColor=function(){J.setClearColor.apply(J,arguments)},this.getClearAlpha=function(){return J.getClearAlpha()},this.setClearAlpha=function(){J.setClearAlpha.apply(J,arguments)},this.clear=function(t,e,n){var r=0;(void 0===t||t)&&(r|=O.COLOR_BUFFER_BIT),(void 0===e||e)&&(r|=O.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=O.STENCIL_BUFFER_BIT),O.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ft,!1),e.removeEventListener("webglcontextrestored",Bt,!1),Y.dispose(),Z.dispose(),k.dispose(),X.dispose(),Nt.dispose(),kt.stop()},this.renderBufferImmediate=function(t,e){G.initAttributes();var n=k.get(t);t.hasPositions&&!n.position&&(n.position=O.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=O.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=O.createBuffer()),t.hasColors&&!n.color&&(n.color=O.createBuffer());var r=e.getAttributes();t.hasPositions&&(O.bindBuffer(O.ARRAY_BUFFER,n.position),O.bufferData(O.ARRAY_BUFFER,t.positionArray,O.DYNAMIC_DRAW),G.enableAttribute(r.position),O.vertexAttribPointer(r.position,3,O.FLOAT,!1,0,0)),t.hasNormals&&(O.bindBuffer(O.ARRAY_BUFFER,n.normal),O.bufferData(O.ARRAY_BUFFER,t.normalArray,O.DYNAMIC_DRAW),G.enableAttribute(r.normal),O.vertexAttribPointer(r.normal,3,O.FLOAT,!1,0,0)),t.hasUvs&&(O.bindBuffer(O.ARRAY_BUFFER,n.uv),O.bufferData(O.ARRAY_BUFFER,t.uvArray,O.DYNAMIC_DRAW),G.enableAttribute(r.uv),O.vertexAttribPointer(r.uv,2,O.FLOAT,!1,0,0)),t.hasColors&&(O.bindBuffer(O.ARRAY_BUFFER,n.color),O.bufferData(O.ARRAY_BUFFER,t.colorArray,O.DYNAMIC_DRAW),G.enableAttribute(r.color),O.vertexAttribPointer(r.color,3,O.FLOAT,!1,0,0)),G.disableUnusedAttributes(),O.drawArrays(O.TRIANGLES,0,t.count),t.count=0};var Gt=new f.Scene;this.renderBufferDirect=function(t,e,n,r,i,a){null===e&&(e=Gt);var o=i.isMesh&&i.matrixWorld.determinant()<0,s=qt(t,e,r,i);G.setMaterial(r,o);var c=!1;lt.geometry===n.id&&lt.program===s.id&&lt.wireframe===(!0===r.wireframe)||(lt.geometry=n.id,lt.program=s.id,lt.wireframe=!0===r.wireframe,c=!0),(r.morphTargets||r.morphNormals)&&(K.update(i,n,r,s),c=!0);var l=n.index,u=n.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;var h,p=1;!0===r.wireframe&&(l=W.getWireframeAttribute(n),p=2);var d=Q;null!==l&&(h=j.get(l),(d=$).setIndex(h)),c&&(!function(t,e,n,r){if(!1===U.isWebGL2&&(t.isInstancedMesh||e.isInstancedBufferGeometry)&&null===V.get("ANGLE_instanced_arrays"))return;G.initAttributes();var i=e.attributes,a=r.getAttributes(),o=n.defaultAttributeValues;for(var s in a){var c=a[s];if(c>=0){var l=i[s];if(void 0!==l){var u=l.normalized,h=l.itemSize;if(void 0===(y=j.get(l)))continue;var p=y.buffer,d=y.type,f=y.bytesPerElement;if(l.isInterleavedBufferAttribute){var m=l.data,v=m.stride,g=l.offset;m&&m.isInstancedInterleavedBuffer?(G.enableAttributeAndDivisor(c,m.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=m.meshPerAttribute*m.count)):G.enableAttribute(c),O.bindBuffer(O.ARRAY_BUFFER,p),O.vertexAttribPointer(c,h,d,u,v*f,g*f)}else l.isInstancedBufferAttribute?(G.enableAttributeAndDivisor(c,l.meshPerAttribute),void 0===e.maxInstancedCount&&(e.maxInstancedCount=l.meshPerAttribute*l.count)):G.enableAttribute(c),O.bindBuffer(O.ARRAY_BUFFER,p),O.vertexAttribPointer(c,h,d,u,0,0)}else if("instanceMatrix"===s){var y;if(void 0===(y=j.get(t.instanceMatrix)))continue;p=y.buffer,d=y.type;G.enableAttributeAndDivisor(c+0,1),G.enableAttributeAndDivisor(c+1,1),G.enableAttributeAndDivisor(c+2,1),G.enableAttributeAndDivisor(c+3,1),O.bindBuffer(O.ARRAY_BUFFER,p),O.vertexAttribPointer(c+0,4,d,!1,64,0),O.vertexAttribPointer(c+1,4,d,!1,64,16),O.vertexAttribPointer(c+2,4,d,!1,64,32),O.vertexAttribPointer(c+3,4,d,!1,64,48)}else if(void 0!==o){var _=o[s];if(void 0!==_)switch(_.length){case 2:O.vertexAttrib2fv(c,_);break;case 3:O.vertexAttrib3fv(c,_);break;case 4:O.vertexAttrib4fv(c,_);break;default:O.vertexAttrib1fv(c,_)}}}}G.disableUnusedAttributes()}(i,n,r,s),null!==l&&O.bindBuffer(O.ELEMENT_ARRAY_BUFFER,h.buffer));var f=null!==l?l.count:u.count,m=n.drawRange.start*p,v=n.drawRange.count*p,g=null!==a?a.start*p:0,y=null!==a?a.count*p:1/0,_=Math.max(m,g),x=Math.min(f,m+v,g+y)-1,b=Math.max(0,x-_+1);if(0!==b){if(i.isMesh)!0===r.wireframe?(G.setLineWidth(r.wireframeLinewidth*Rt()),d.setMode(O.LINES)):d.setMode(O.TRIANGLES);else if(i.isLine){var M=r.linewidth;void 0===M&&(M=1),G.setLineWidth(M*Rt()),i.isLineSegments?d.setMode(O.LINES):i.isLineLoop?d.setMode(O.LINE_LOOP):d.setMode(O.LINE_STRIP)}else i.isPoints?d.setMode(O.POINTS):i.isSprite&&d.setMode(O.TRIANGLES);i.isInstancedMesh?d.renderInstances(n,_,b,i.count):n.isInstancedBufferGeometry?d.renderInstances(n,_,b,n.maxInstancedCount):d.render(_,b)}},this.compile=function(t,e){(P=Z.get(t,e)).init(),t.traverse((function(t){t.isLight&&(P.pushLight(t),t.castShadow&&P.pushShadow(t))})),P.setupLights(e),t.traverse((function(e){if(e.material)if(Array.isArray(e.material))for(var n=0;n<e.material.length;n++)Xt(e.material[n],t,e);else Xt(e.material,t,e)}))};var zt=null;var kt=new m;function Ht(t,e,n,r){if(!1!==t.visible){if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)P.pushLight(t),t.castShadow&&P.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||wt.intersectsSprite(t)){r&&Lt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(At);var i=X.update(t);(a=t.material).visible&&C.push(t,i,a,n,Lt.z,null)}}else if(t.isImmediateRenderObject)r&&Lt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(At),C.push(t,null,t.material,n,Lt.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==z.render.frame&&(t.skeleton.update(),t.skeleton.frame=z.render.frame),!t.frustumCulled||wt.intersectsObject(t))){r&&Lt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(At);i=X.update(t);var a=t.material;if(Array.isArray(a))for(var o=i.groups,s=0,c=o.length;s<c;s++){var l=o[s],u=a[l.materialIndex];u&&u.visible&&C.push(t,i,u,n,Lt.z,l)}else a.visible&&C.push(t,i,a,n,Lt.z,null)}var h=t.children;for(s=0,c=h.length;s<c;s++)Ht(h[s],e,n,r)}}function jt(t,e,n,r){for(var i=0,a=t.length;i<a;i++){var o=t[i],s=o.object,c=o.geometry,l=void 0===r?o.material:r,u=o.group;if(n.isArrayCamera)if(ht=n,Nt.enabled&&Dt.isAvailable())Wt(s,e,n,c,l,u);else for(var h=n.cameras,p=0,d=h.length;p<d;p++){var f=h[p];s.layers.test(f.layers)&&(G.viewport(pt.copy(f.viewport)),P.setupLights(f),Wt(s,e,f,c,l,u))}else ht=null,Wt(s,e,n,c,l,u)}}function Wt(t,e,n,r,i,a){if(t.onBeforeRender(et,e,n,r,i,a),P=Z.get(e,ht||n),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){var o=qt(n,e,i,t);G.setMaterial(i),lt.geometry=null,lt.program=null,lt.wireframe=!1,function(t,e){t.render((function(t){et.renderBufferImmediate(t,e)}))}(t,o)}else et.renderBufferDirect(n,e,r,i,t,a);t.onAfterRender(et,e,n,r,i,a),P=Z.get(e,ht||n)}function Xt(t,e,n){var r=k.get(t),i=P.state.lights,a=P.state.shadowsArray,o=i.state.version,s=q.getParameters(t,i.state,a,e,St.numPlanes,St.numIntersection,n),l=q.getProgramCacheKey(t,s),h=r.program,p=!0;if(void 0===h)t.addEventListener("dispose",Vt);else if(h.cacheKey!==l)Ut(t);else if(r.lightsStateVersion!==o)r.lightsStateVersion=o,p=!1;else{if(void 0!==s.shaderID)return;p=!1}if(p){if(s.shaderID){var d=c.a[s.shaderID];r.shader={name:t.type,uniforms:Object(u.b)(d.uniforms),vertexShader:d.vertexShader,fragmentShader:d.fragmentShader}}else r.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(r.shader,et),l=q.getProgramCacheKey(t,s),h=q.acquireProgram(t,r.shader,s,l),r.program=h,r.environment=t.isMeshStandardMaterial?e.environment:null,r.outputEncoding=et.outputEncoding,t.program=h}var f=h.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var m=0;m<et.maxMorphTargets;m++)f["morphTarget"+m]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(m=0;m<et.maxMorphNormals;m++)f["morphNormal"+m]>=0&&t.numSupportedMorphNormals++}var v=r.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(r.numClippingPlanes=St.numPlanes,r.numIntersection=St.numIntersection,v.clippingPlanes=St.uniform),r.fog=e.fog,r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=o,r.needsLights&&(v.ambientLightColor.value=i.state.ambient,v.lightProbe.value=i.state.probe,v.directionalLights.value=i.state.directional,v.spotLights.value=i.state.spot,v.rectAreaLights.value=i.state.rectArea,v.pointLights.value=i.state.point,v.hemisphereLights.value=i.state.hemi,v.directionalShadowMap.value=i.state.directionalShadowMap,v.directionalShadowMatrix.value=i.state.directionalShadowMatrix,v.spotShadowMap.value=i.state.spotShadowMap,v.spotShadowMatrix.value=i.state.spotShadowMatrix,v.pointShadowMap.value=i.state.pointShadowMap,v.pointShadowMatrix.value=i.state.pointShadowMatrix);var g=r.program.getUniforms(),y=Ot.seqWithValue(g.seq,v);r.uniformsList=y}function qt(t,e,n,o){H.resetTextureUnits();var s=e.fog,c=n.isMeshStandardMaterial?e.environment:null,u=k.get(n),h=P.state.lights;if(Tt&&(Et||t!==ut)){var p=t===ut&&n.id===ct;St.setState(n.clippingPlanes,n.clipIntersection,n.clipShadows,t,u,p)}n.version===u.__version&&(void 0===u.program?n.needsUpdate=!0:n.fog&&u.fog!==s?n.needsUpdate=!0:u.environment!==c?n.needsUpdate=!0:u.needsLights&&u.lightsStateVersion!==h.state.version?n.needsUpdate=!0:void 0===u.numClippingPlanes||u.numClippingPlanes===St.numPlanes&&u.numIntersection===St.numIntersection?u.outputEncoding!==et.outputEncoding&&(n.needsUpdate=!0):n.needsUpdate=!0),n.version!==u.__version&&(Xt(n,e,o),u.__version=n.version);var d,f,m=!1,v=!1,g=!1,y=u.program,_=y.getUniforms(),x=u.shader.uniforms;if(G.useProgram(y.program)&&(m=!0,v=!0,g=!0),n.id!==ct&&(ct=n.id,v=!0),m||ut!==t){if(y.numMultiviewViews>0?Dt.updateCameraProjectionMatricesUniform(t,_):_.setValue(O,"projectionMatrix",t.projectionMatrix),U.logarithmicDepthBuffer&&_.setValue(O,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),ut!==t&&(ut=t,v=!0,g=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){var b=_.map.cameraPosition;void 0!==b&&b.setValue(O,Lt.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&_.setValue(O,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.skinning)&&(y.numMultiviewViews>0?Dt.updateCameraViewMatricesUniform(t,_):_.setValue(O,"viewMatrix",t.matrixWorldInverse))}if(n.skinning){_.setOptional(O,o,"bindMatrix"),_.setOptional(O,o,"bindMatrixInverse");var M=o.skeleton;if(M){var w=M.bones;if(U.floatVertexTextures){if(void 0===M.boneTexture){var S=Math.sqrt(4*w.length);S=i._Math.ceilPowerOfTwo(S),S=Math.max(S,4);var T=new Float32Array(S*S*4);T.set(M.boneMatrices);var E=new a.DataTexture(T,S,S,r.RGBAFormat,r.FloatType);M.boneMatrices=T,M.boneTexture=E,M.boneTextureSize=S}_.setValue(O,"boneTexture",M.boneTexture,H),_.setValue(O,"boneTextureSize",M.boneTextureSize)}else _.setOptional(O,M,"boneMatrices")}}return(v||u.receiveShadow!==o.receiveShadow)&&(u.receiveShadow=o.receiveShadow,_.setValue(O,"receiveShadow",o.receiveShadow)),v&&(_.setValue(O,"toneMappingExposure",et.toneMappingExposure),_.setValue(O,"toneMappingWhitePoint",et.toneMappingWhitePoint),u.needsLights&&(f=g,(d=x).ambientLightColor.needsUpdate=f,d.lightProbe.needsUpdate=f,d.directionalLights.needsUpdate=f,d.pointLights.needsUpdate=f,d.spotLights.needsUpdate=f,d.rectAreaLights.needsUpdate=f,d.hemisphereLights.needsUpdate=f),s&&n.fog&&function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(x,s),n.isMeshBasicMaterial?Yt(x,n):n.isMeshLambertMaterial?(Yt(x,n),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(x,n)):n.isMeshToonMaterial?(Yt(x,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.gradientMap&&(t.gradientMap.value=e.gradientMap);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===r.BackSide&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===r.BackSide&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(x,n)):n.isMeshPhongMaterial?(Yt(x,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===r.BackSide&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===r.BackSide&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(x,n)):n.isMeshStandardMaterial?(Yt(x,n,c),n.isMeshPhysicalMaterial?function(t,e,n){Zt(t,e,n),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen);e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,e.side===r.BackSide&&t.clearcoatNormalScale.value.negate());t.transparency.value=e.transparency}(x,n,c):Zt(x,n,c)):n.isMeshMatcapMaterial?(Yt(x,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===r.BackSide&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===r.BackSide&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(x,n)):n.isMeshDepthMaterial?(Yt(x,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(x,n)):n.isMeshDistanceMaterial?(Yt(x,n),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(x,n)):n.isMeshNormalMaterial?(Yt(x,n),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===r.BackSide&&(t.bumpScale.value*=-1));e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===r.BackSide&&t.normalScale.value.negate());e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(x,n)):n.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(x,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(x,n)):n.isPointsMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*gt,t.scale.value=.5*vt,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);var n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(x,n):n.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);var n;e.map?n=e.map:e.alphaMap&&(n=e.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(x,n):n.isShadowMaterial&&(x.color.value.copy(n.color),x.opacity.value=n.opacity),void 0!==x.ltc_1&&(x.ltc_1.value=l.a.LTC_1),void 0!==x.ltc_2&&(x.ltc_2.value=l.a.LTC_2),Ot.upload(O,u.uniformsList,x,H),n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Ot.upload(O,u.uniformsList,x,H),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&_.setValue(O,"center",o.center),y.numMultiviewViews>0?Dt.updateObjectMatricesUniforms(o,t,_):(_.setValue(O,"modelViewMatrix",o.modelViewMatrix),_.setValue(O,"normalMatrix",o.normalMatrix)),_.setValue(O,"modelMatrix",o.matrixWorld),y}function Yt(t,e,n){t.opacity.value=e.opacity,e.color&&t.diffuse.value.copy(e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap);var r,i,a=e.envMap||n;a&&(t.envMap.value=a,t.flipEnvMap.value=a.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.maxMipLevel.value=k.get(a).__maxMipLevel),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?r=e.map:e.specularMap?r=e.specularMap:e.displacementMap?r=e.displacementMap:e.normalMap?r=e.normalMap:e.bumpMap?r=e.bumpMap:e.roughnessMap?r=e.roughnessMap:e.metalnessMap?r=e.metalnessMap:e.alphaMap?r=e.alphaMap:e.emissiveMap&&(r=e.emissiveMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix)),e.aoMap?i=e.aoMap:e.lightMap&&(i=e.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uv2Transform.value.copy(i.matrix))}function Zt(t,e,n){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,e.side===r.BackSide&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),e.side===r.BackSide&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),(e.envMap||n)&&(t.envMapIntensity.value=e.envMapIntensity)}kt.setAnimationLoop((function(t){Nt.isPresenting||zt&&zt(t)})),"undefined"!=typeof window&&kt.setContext(window),this.setAnimationLoop=function(t){zt=t,Nt.setAnimationLoop(t),kt.start()},this.render=function(t,e){var n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),e&&e.isCamera){if(!nt){lt.geometry=null,lt.program=null,lt.wireframe=!1,ct=-1,ut=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),Nt.enabled&&Nt.isPresenting&&(e=Nt.getCamera(e)),(P=Z.get(t,e)).init(),t.onBeforeRender(et,t,e,n||ot),At.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),wt.setFromMatrix(At),Et=this.localClippingEnabled,Tt=St.init(this.clippingPlanes,Et,e),(C=Y.get(t,e)).init(),Ht(t,e,0,et.sortObjects),!0===et.sortObjects&&C.sort(yt,_t),Tt&&St.beginShadows();var i=P.state.shadowsArray;It.render(i,t,e),P.setupLights(e),Tt&&St.endShadows(),this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),Nt.enabled&&Dt.isAvailable()&&Dt.attachCamera(e),J.render(C,t,e,r);var a=C.opaque,o=C.transparent;if(t.overrideMaterial){var s=t.overrideMaterial;a.length&&jt(a,t,e,s),o.length&&jt(o,t,e,s)}else a.length&&jt(a,t,e),o.length&&jt(o,t,e);t.onAfterRender(et,t,e),null!==ot&&(H.updateRenderTargetMipmap(ot),H.updateMultisampleRenderTarget(ot)),G.buffers.depth.setTest(!0),G.buffers.depth.setMask(!0),G.buffers.color.setMask(!0),G.setPolygonOffset(!1),Nt.enabled&&Dt.isAvailable()&&Dt.detachCamera(e),C=null,P=null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFramebuffer=function(t){rt!==t&&null===ot&&O.bindFramebuffer(O.FRAMEBUFFER,t),rt=t},this.getActiveCubeFace=function(){return it},this.getActiveMipmapLevel=function(){return at},this.getRenderTarget=function(){return ot},this.setRenderTarget=function(t,e,n){ot=t,it=e,at=n,t&&void 0===k.get(t).__webglFramebuffer&&H.setupRenderTarget(t);var r=rt,i=!1;if(t){var a=k.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(r=a[e||0],i=!0):r=t.isWebGLMultisampleRenderTarget?k.get(t).__webglMultisampledFramebuffer:a,pt.copy(t.viewport),dt.copy(t.scissor),ft=t.scissorTest}else pt.copy(xt).multiplyScalar(gt).floor(),dt.copy(bt).multiplyScalar(gt).floor(),ft=Mt;if(st!==r&&(O.bindFramebuffer(O.FRAMEBUFFER,r),st=r),G.viewport(pt),G.scissor(dt),G.setScissorTest(ft),i){var o=k.get(t.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+(e||0),o.__webglTexture,n||0)}},this.readRenderTargetPixels=function(t,e,n,i,a,o,s){if(t&&t.isWebGLRenderTarget){var c=k.get(t).__webglFramebuffer;if(t.isWebGLRenderTargetCube&&void 0!==s&&(c=c[s]),c){var l=!1;c!==st&&(O.bindFramebuffer(O.FRAMEBUFFER,c),l=!0);try{var u=t.texture,h=u.format,p=u.type;if(h!==r.RGBAFormat&&tt.convert(h)!==O.getParameter(O.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(p===r.UnsignedByteType||tt.convert(p)===O.getParameter(O.IMPLEMENTATION_COLOR_READ_TYPE)||p===r.FloatType&&(U.isWebGL2||V.get("OES_texture_float")||V.get("WEBGL_color_buffer_float"))||p===r.HalfFloatType&&(U.isWebGL2?V.get("EXT_color_buffer_float"):V.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");O.checkFramebufferStatus(O.FRAMEBUFFER)===O.FRAMEBUFFER_COMPLETE?e>=0&&e<=t.width-i&&n>=0&&n<=t.height-a&&O.readPixels(e,n,i,a,tt.convert(h),tt.convert(p),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{l&&O.bindFramebuffer(O.FRAMEBUFFER,st)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(t,e,n){void 0===n&&(n=0);var r=Math.pow(2,-n),i=Math.floor(e.image.width*r),a=Math.floor(e.image.height*r),o=tt.convert(e.format);H.setTexture2D(e,0),O.copyTexImage2D(O.TEXTURE_2D,n,o,t.x,t.y,i,a,0),G.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r){var i=e.image.width,a=e.image.height,o=tt.convert(n.format),s=tt.convert(n.type);H.setTexture2D(n,0),e.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,r||0,t.x,t.y,i,a,o,s,e.image.data):O.texSubImage2D(O.TEXTURE_2D,r||0,t.x,t.y,o,s,e.image),G.unbindTexture()},this.initTexture=function(t){H.setTexture2D(t,0),G.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Object.assign(Te.prototype,we.a.prototype),n.d(e,"WebGLRenderer",(function(){return Ee}))},794:function(t,e,n){"use strict";n.r(e);var r=n(0);function i(t,e,n){this._mixer=t,this._clip=e,this._localRoot=n||null;for(var i=e.tracks,a=i.length,o=new Array(a),s={endingStart:r.ZeroCurvatureEnding,endingEnd:r.ZeroCurvatureEnding},c=0;c!==a;++c){var l=i[c].createInterpolant(null);o[c]=l,l.settings=s}this._interpolantSettings=s,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=r.LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(i.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){var r=this._clip.duration,i=t._clip.duration,a=i/r,o=r/i;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,n){return t.crossFadeFrom(this,e,n)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,n){var r=this._mixer,i=r.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=i,s[1]=i+n,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,n,r){if(this.enabled){var i=this._startTime;if(null!==i){var a=(t-i)*n;if(a<0||0===n)return;this._startTime=null,e=n*a}e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,l=this._propertyBindings,u=0,h=c.length;u!==h;++u)c[u].evaluate(o),l[u].accumulate(r,s)}else this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var n=this._weightInterpolant;if(null!==n){var r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n)e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t,n=this._clip.duration,i=this.loop,a=this._loopCount,o=i===r.LoopPingPong;if(0===t)return-1===a?e:o&&1==(1&a)?n-e:e;if(i===r.LoopOnce){-1===a&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=n)e=n;else{if(!(e<0)){this.time=e;break t}e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===a&&(t>=0?(a=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),e>=n||e<0){var s=Math.floor(e/n);e-=n*s,a+=Math.abs(s);var c=this.repetitions-a;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?n:0,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===c){var l=t<0;this._setEndings(l,!l,o)}else this._setEndings(!1,!1,o);this._loopCount=a,this.time=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=e;if(o&&1==(1&a))return n-e}return e},_setEndings:function(t,e,n){var i=this._interpolantSettings;n?(i.endingStart=r.ZeroSlopeEnding,i.endingEnd=r.ZeroSlopeEnding):(i.endingStart=t?this.zeroSlopeAtStart?r.ZeroSlopeEnding:r.ZeroCurvatureEnding:r.WrapAroundEnding,i.endingEnd=e?this.zeroSlopeAtEnd?r.ZeroSlopeEnding:r.ZeroCurvatureEnding:r.WrapAroundEnding)},_scheduleFading:function(t,e,n){var r=this._mixer,i=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=i,s[0]=e,o[1]=i+t,s[1]=n,this}});var a=n(30),o=n(169),s=n(170),c=n(31);function l(t,e,n){this.binding=t,this.valueSize=n;var r,i=Float64Array;switch(e){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(4*n),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(l.prototype,{accumulate:function(t,e){var n=this.buffer,r=this.valueSize,i=t*r+r,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==r;++o)n[i+o]=n[o];a=e}else{var s=e/(a+=e);this._mixBufferRegion(n,i,0,s,r)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,i<1){var o=3*e;this._mixBufferRegion(n,r,o,1-i,e)}for(var s=e,c=e+e;s!==c;++s)if(n[s]!==n[s+e]){a.setValue(n,r);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,n=this.valueSize,r=3*n;t.getValue(e,r);for(var i=n,a=r;i!==a;++i)e[i]=e[r+i%n];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,n,r,i){if(r>=.5)for(var a=0;a!==i;++a)t[e+a]=t[n+a]},_slerp:function(t,e,n,r){c.Quaternion.slerpFlat(t,e,t,e,t,n,r)},_lerp:function(t,e,n,r,i){for(var a=1-r,o=0;o!==i;++o){var s=e+o;t[s]=t[s]*a+t[n+o]*r}}});var u=n(96);function h(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}n.d(e,"AnimationMixer",(function(){return h})),h.prototype=Object.assign(Object.create(a.a.prototype),{constructor:h,_bindAction:function(t,e){var n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,a=t._propertyBindings,o=t._interpolants,c=n.uuid,u=this._bindingsByRootAndName,h=u[c];void 0===h&&(h={},u[c]=h);for(var p=0;p!==i;++p){var d=r[p],f=d.name,m=h[f];if(void 0!==m)a[p]=m;else{if(void 0!==(m=a[p])){null===m._cacheIndex&&(++m.referenceCount,this._addInactiveBinding(m,c,f));continue}var v=e&&e._propertyBindings[p].binding.parsedPath;++(m=new l(s.a.create(n,f,v),d.ValueTypeName,d.getValueSize())).referenceCount,this._addInactiveBinding(m,c,f),a[p]=m}o[p].resultBuffer=m.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}for(var i=t._propertyBindings,a=0,o=i.length;a!==o;++a){var s=i[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,n=0,r=e.length;n!==r;++n){var i=e[n];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){var r=this._actions,i=this._actionsByClip,a=i[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=r.length,r.push(t),a.actionByRoot[n]=t},_removeInactiveAction:function(t){var e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;var i=t._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,c=s[s.length-1],l=t._byClipCacheIndex;c._byClipCacheIndex=l,s[l]=c,s.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[i],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,n=0,r=e.length;n!==r;++n){var i=e[n];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(t){var e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_takeBackAction:function(t){var e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_addInactiveBinding:function(t,e,n){var r=this._bindingsByRootAndName,i=r[e],a=this._bindings;void 0===i&&(i={},r[e]=i),i[n]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,o=a[r],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete o[i],0===Object.keys(o).length&&delete a[r]},_lendBinding:function(t){var e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_takeBackBinding:function(t){var e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,n=t[e];return void 0===n&&((n=new o.a(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var n=e||this._root,r=n.uuid,a="string"==typeof t?u.a.findByName(n,t):t,o=null!==a?a.uuid:t,s=this._actionsByClip[o],c=null;if(void 0!==s){var l=s.actionByRoot[r];if(void 0!==l)return l;c=s.knownActions[0],null===a&&(a=c._clip)}if(null===a)return null;var h=new i(this,a,e);return this._bindAction(h,c),this._addInactiveAction(h,o,r),h},existingAction:function(t,e){var n=e||this._root,r=n.uuid,i="string"==typeof t?u.a.findByName(n,t):t,a=i?i.uuid:t,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[r]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==e;++i)t[i].reset();for(i=0;i!==r;++i)n[i].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),a=this._accuIndex^=1,o=0;o!==n;++o){e[o]._update(r,t,i,a)}var s=this._bindings,c=this._nActiveBindings;for(o=0;o!==c;++o)s[o].apply(a);return this},setTime:function(t){this.time=0;for(var e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){for(var a=i.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var l=c._cacheIndex,u=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=l,e[l]=u,e.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}},uncacheRoot:function(t){var e=t.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot[e];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var a=this._bindingsByRootAndName[e];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(t,e){var n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}})},795:function(t,e,n){"use strict";n.r(e);var r=n(72);function i(t){this.type="Font",this.data=t}function a(t,e,n,i,a){var o=a.glyphs[t]||a.glyphs["?"];if(o){var s,c,l,u,h,p,d,f,m=new r.a;if(o.o)for(var v=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),g=0,y=v.length;g<y;){switch(v[g++]){case"m":s=v[g++]*e+n,c=v[g++]*e+i,m.moveTo(s,c);break;case"l":s=v[g++]*e+n,c=v[g++]*e+i,m.lineTo(s,c);break;case"q":l=v[g++]*e+n,u=v[g++]*e+i,h=v[g++]*e+n,p=v[g++]*e+i,m.quadraticCurveTo(h,p,l,u);break;case"b":l=v[g++]*e+n,u=v[g++]*e+i,h=v[g++]*e+n,p=v[g++]*e+i,d=v[g++]*e+n,f=v[g++]*e+i,m.bezierCurveTo(h,p,d,f,l,u)}}return{offsetX:o.ha*e,path:m}}console.error('THREE.Font: character "'+t+'" does not exists in font family '+a.familyName+".")}Object.assign(i.prototype,{isFont:!0,generateShapes:function(t,e){void 0===e&&(e=100);for(var n=[],r=function(t,e,n){for(var r=Array.from?Array.from(t):String(t).split(""),i=e/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,s=[],c=0,l=0,u=0;u<r.length;u++){var h=r[u];if("\n"===h)c=0,l-=o;else{var p=a(h,i,c,l,n);c+=p.offsetX,s.push(p.path)}}return s}(t,e,this.data),i=0,o=r.length;i<o;i++)Array.prototype.push.apply(n,r[i].toShapes());return n}});var o=n(27),s=n(18);function c(t){s.a.call(this,t)}n.d(e,"FontLoader",(function(){return c})),c.prototype=Object.assign(Object.create(s.a.prototype),{constructor:c,load:function(t,e,n,r){var i=this,a=new o.a(this.manager);a.setPath(this.path),a.load(t,(function(t){var n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}var r=i.parse(n);e&&e(r)}),n,r)},parse:function(t){return new i(t)}})},8:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(30),i=n(0),a=n(13),o=0;function s(){Object.defineProperty(this,"id",{value:o++}),this.uuid=a._Math.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=i.NormalBlending,this.side=i.FrontSide,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=i.NoColors,this.opacity=1,this.transparent=!1,this.blendSrc=i.SrcAlphaFactor,this.blendDst=i.OneMinusSrcAlphaFactor,this.blendEquation=i.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=i.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=i.AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=i.KeepStencilOp,this.stencilZFail=i.KeepStencilOp,this.stencilZPass=i.KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}s.prototype=Object.assign(Object.create(r.a.prototype),{constructor:s,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var n=t[e];if(void 0!==n)if("shading"!==e){var r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===i.FlatShading;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){var e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){var e=[];for(var n in t){var r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==i.NormalBlending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==i.FrontSide&&(n.side=this.side),this.vertexColors!==i.NoColors&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){var a=r(t.textures),o=r(t.images);a.length>0&&(n.textures=a),o.length>0&&(n.images=o)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;var e=t.clippingPlanes,n=null;if(null!==e){var r=e.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(s.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}})},84:function(t,e,n){"use strict";n.r(e),n.d(e,"Scene",(function(){return i}));var r=n(10);function i(){r.Object3D.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}i.prototype=Object.assign(Object.create(r.Object3D.prototype),{constructor:i,isScene:!0,copy:function(t,e){return r.Object3D.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=r.Object3D.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}})},85:function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n(1),i=new r.Vector3,a=new r.Vector3,o=new r.Vector3,s=new r.Vector3,c=new r.Vector3,l=new r.Vector3,u=new r.Vector3;function h(t,e){this.origin=void 0!==t?t:new r.Vector3,this.direction=void 0!==e?e:new r.Vector3(0,0,-1)}Object.assign(h.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new r.Vector3),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,i)),this},closestPointToPoint:function(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new r.Vector3),e.subVectors(t,this.origin);var n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){var e=i.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(i.copy(this.direction).multiplyScalar(e).add(this.origin),i.distanceToSquared(t))},distanceSqToSegment:function(t,e,n,r){a.copy(t).add(e).multiplyScalar(.5),o.copy(e).sub(t).normalize(),s.copy(this.origin).sub(a);var i,c,l,u,h=.5*t.distanceTo(e),p=-this.direction.dot(o),d=s.dot(this.direction),f=-s.dot(o),m=s.lengthSq(),v=Math.abs(1-p*p);if(v>0)if(c=p*d-f,u=h*v,(i=p*f-d)>=0)if(c>=-u)if(c<=u){var g=1/v;l=(i*=g)*(i+p*(c*=g)+2*d)+c*(p*i+c+2*f)+m}else c=h,l=-(i=Math.max(0,-(p*c+d)))*i+c*(c+2*f)+m;else c=-h,l=-(i=Math.max(0,-(p*c+d)))*i+c*(c+2*f)+m;else c<=-u?l=-(i=Math.max(0,-(-p*h+d)))*i+(c=i>0?-h:Math.min(Math.max(-h,-f),h))*(c+2*f)+m:c<=u?(i=0,l=(c=Math.min(Math.max(-h,-f),h))*(c+2*f)+m):l=-(i=Math.max(0,-(p*h+d)))*i+(c=i>0?h:Math.min(Math.max(-h,-f),h))*(c+2*f)+m;else c=p>0?-h:h,l=-(i=Math.max(0,-(p*c+d)))*i+c*(c+2*f)+m;return n&&n.copy(this.direction).multiplyScalar(i).add(this.origin),r&&r.copy(o).multiplyScalar(c).add(a),l},intersectSphere:function(t,e){i.subVectors(t.center,this.origin);var n=i.dot(this.direction),r=i.dot(i)-n*n,a=t.radius*t.radius;if(r>a)return null;var o=Math.sqrt(a-r),s=n-o,c=n+o;return s<0&&c<0?null:s<0?this.at(c,e):this.at(s,e)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null},intersectPlane:function(t,e){var n=this.distanceToPlane(t);return null===n?null:this.at(n,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var n,r,i,a,o,s,c=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,h=this.origin;return c>=0?(n=(t.min.x-h.x)*c,r=(t.max.x-h.x)*c):(n=(t.max.x-h.x)*c,r=(t.min.x-h.x)*c),l>=0?(i=(t.min.y-h.y)*l,a=(t.max.y-h.y)*l):(i=(t.max.y-h.y)*l,a=(t.min.y-h.y)*l),n>a||i>r?null:((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),u>=0?(o=(t.min.z-h.z)*u,s=(t.max.z-h.z)*u):(o=(t.max.z-h.z)*u,s=(t.min.z-h.z)*u),n>s||o>r?null:((o>n||n!=n)&&(n=o),(s<r||r!=r)&&(r=s),r<0?null:this.at(n>=0?n:r,e)))},intersectsBox:function(t){return null!==this.intersectBox(t,i)},intersectTriangle:function(t,e,n,r,i){c.subVectors(e,t),l.subVectors(n,t),u.crossVectors(c,l);var a,o=this.direction.dot(u);if(o>0){if(r)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}s.subVectors(this.origin,t);var h=a*this.direction.dot(l.crossVectors(s,l));if(h<0)return null;var p=a*this.direction.dot(c.cross(s));if(p<0)return null;if(h+p>o)return null;var d=-a*s.dot(u);return d<0?null:this.at(d/o,i)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}})},86:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(15),i=n(10),a=n(1);function o(){i.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new r.Matrix4,this.projectionMatrix=new r.Matrix4,this.projectionMatrixInverse=new r.Matrix4}o.prototype=Object.assign(Object.create(i.Object3D.prototype),{constructor:o,isCamera:!0,copy:function(t,e){return i.Object3D.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new a.Vector3),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){i.Object3D.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}})},87:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r={decodeText:function(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);for(var e="",n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}},extractUrlBase:function(t){var e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}}},95:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(12),i=n(2);function a(t,e,n,i,a,o,s,c){r.a.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=a||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=s||!1,this.aRotation=c||0}a.prototype=Object.create(r.a.prototype),a.prototype.constructor=a,a.prototype.isEllipseCurve=!0,a.prototype.getPoint=function(t,e){for(var n=e||new i.Vector2,r=2*Math.PI,a=this.aEndAngle-this.aStartAngle,o=Math.abs(a)<Number.EPSILON;a<0;)a+=r;for(;a>r;)a-=r;a<Number.EPSILON&&(a=o?0:r),!0!==this.aClockwise||o||(a===r?a=-r:a-=r);var s=this.aStartAngle+t*a,c=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){var u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),p=c-this.aX,d=l-this.aY;c=p*u-d*h+this.aX,l=p*h+d*u+this.aY}return n.set(c,l)},a.prototype.copy=function(t){return r.a.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},a.prototype.toJSON=function(){var t=r.a.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},a.prototype.fromJSON=function(t){return r.a.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}},96:function(t,e,n){"use strict";var r=n(32),i=n(29),a=n(0);function o(t,e,n){i.a.call(this,t,e,n)}function s(t,e,n,r){i.a.call(this,t,e,n,r)}o.prototype=Object.assign(Object.create(i.a.prototype),{constructor:o,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:a.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),s.prototype=Object.assign(Object.create(i.a.prototype),{constructor:s,ValueTypeName:"color"});var c=n(109),l=n(123);function u(t,e,n,r){i.a.call(this,t,e,n,r)}u.prototype=Object.assign(Object.create(i.a.prototype),{constructor:u,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:a.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});var h=n(110),p=n(13);function d(t,e,n){this.name=t,this.tracks=n,this.duration=void 0!==e?e:-1,this.uuid=p._Math.generateUUID(),this.duration<0&&this.resetDuration()}function f(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return c.a;case"vector":case"vector2":case"vector3":case"vector4":return h.a;case"color":return s;case"quaternion":return l.a;case"bool":case"boolean":return o;case"string":return u}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){var n=[],i=[];r.a.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}n.d(e,"a",(function(){return d})),Object.assign(d,{parse:function(t){for(var e=[],n=t.tracks,r=1/(t.fps||1),i=0,a=n.length;i!==a;++i)e.push(f(n[i]).scale(r));return new d(t.name,t.duration,e)},toJSON:function(t){for(var e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid},a=0,o=n.length;a!==o;++a)e.push(i.a.toJSON(n[a]));return r},CreateFromMorphTargetSequence:function(t,e,n,i){for(var a=e.length,o=[],s=0;s<a;s++){var l=[],u=[];l.push((s+a-1)%a,s,(s+1)%a),u.push(0,1,0);var h=r.a.getKeyframeOrder(l);l=r.a.sortedArray(l,1,h),u=r.a.sortedArray(u,1,h),i||0!==l[0]||(l.push(a),u.push(u[0])),o.push(new c.a(".morphTargetInfluences["+e[s].name+"]",l,u).scale(1/n))}return new d(t,-1,o)},findByName:function(t,e){var n=t;if(!Array.isArray(t)){var r=t;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){for(var r={},i=/^([\w-]*?)([\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],c=s.name.match(i);if(c&&c.length>1){var l=r[h=c[1]];l||(r[h]=l=[]),l.push(s)}}var u=[];for(var h in r)u.push(d.CreateFromMorphTargetSequence(h,r[h],e,n));return u},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(t,e,n,i,a){if(0!==n.length){var o=[],s=[];r.a.flattenJSON(n,o,s,i),0!==o.length&&a.push(new t(e,o,s))}},i=[],a=t.name||"default",o=t.length||-1,s=t.fps||30,u=t.hierarchy||[],p=0;p<u.length;p++){var f=u[p].keys;if(f&&0!==f.length)if(f[0].morphTargets){for(var m={},v=0;v<f.length;v++)if(f[v].morphTargets)for(var g=0;g<f[v].morphTargets.length;g++)m[f[v].morphTargets[g]]=-1;for(var y in m){var _=[],x=[];for(g=0;g!==f[v].morphTargets.length;++g){var b=f[v];_.push(b.time),x.push(b.morphTarget===y?1:0)}i.push(new c.a(".morphTargetInfluence["+y+"]",_,x))}o=m.length*(s||1)}else{var M=".bones["+e[p].name+"]";n(h.a,M+".position",f,"pos",i),n(l.a,M+".quaternion",f,"rot",i),n(h.a,M+".scale",f,"scl",i)}}return 0===i.length?null:new d(a,o,i)}}),Object.assign(d.prototype,{resetDuration:function(){for(var t=0,e=0,n=this.tracks.length;e!==n;++e){var r=this.tracks[e];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){for(var t=!0,e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){for(var t=[],e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new d(this.name,this.duration,t)}})}}]);