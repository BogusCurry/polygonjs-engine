{"version":3,"sources":["webpack://POLY/./node_modules/three/src/loaders/FileLoader.js","webpack://POLY/./node_modules/three/src/loaders/DataTextureLoader.js","webpack://POLY/./modules/three/examples/jsm/libs/inflate.module.min.js","webpack://POLY/./modules/three/examples/jsm/loaders/EXRLoader.js"],"names":["loading","FileLoader","manager","call","this","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","undefined","path","resolveURL","scope","cached","get","itemStart","setTimeout","itemEnd","dataUriRegexResult","match","mimeType","isBase64","data","decodeURIComponent","atob","response","responseType","toLowerCase","view","Uint8Array","length","i","charCodeAt","Blob","buffer","type","parser","DOMParser","parseFromString","JSON","parse","error","itemError","push","request","XMLHttpRequest","header","open","addEventListener","event","callbacks","status","console","warn","add","il","callback","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setResponseType","value","setWithCredentials","setMimeType","DataTextureLoader","texture","loader","setPath","texData","image","width","height","wrapS","wrapT","magFilter","minFilter","anisotropy","format","mipmaps","mipmapCount","needsUpdate","mod","l","aa","r","c","d","e","a","split","b","execScript","shift","t","Uint16Array","Uint32Array","DataView","v","f","g","h","k","m","n","p","s","x","Number","POSITIVE_INFINITY","Array","w","input","index","bufferSize","bufferType","resize","A","z","j","Error","B","C","set","subarray","ba","ca","S","T","U","V","D","u","M","F","q","E","slice","P","fa","G","H","I","J","K","L","da","ea","N","O","R","ga","Q","W","verify","ha","method","o","Y","Z","$","ia","X","ADAPTIVE","BLOCK","keys","Zlib","EXRLoader","logBase","Math","pow","getBitsReturn","lc","getBits","nBits","uInt8Array","inOffset","parseUint8Array","hufTableBuffer","hufUnpackEncTable","inDataView","ni","im","iM","hcode","zerun","nc","hufCanonicalCodeTable","hufLength","code","hufCode","getCharReturn","getChar","getCodeReturn","getCode","po","rlc","outBuffer","outBufferOffset","outBufferEndOffset","cs","Int16","ref","UInt16","wdec14Return","wdec14","ls","hs","ai","as","bs","wav2Decode","nx","ox","ny","oy","p2","i00","i01","i10","i11","py","ey","oy1","oy2","ox1","ox2","px","ex","p01","p11","p10","hufUncompress","nCompressed","nRaw","initialInOffset","parseUint32","freq","hdec","len","lit","hufClearDecTable","hdecod","pl","plOffset","hufBuildDecTable","encodingTable","decodingTable","no","outOffset","inOffsetEnd","trunc","HUF_DECSIZE","hufDecode","predictor","source","interleaveScalar","out","t1","t2","floor","stop","decodeRunLength","size","byteLength","reader","getInt8","count","getUint8","unRleAC","currAcComp","acBuffer","halfZigBlock","acValue","dctComp","unZigZag","src","dst","decodeFloat16","dctInverse","cos","alpha","beta","theta","gamma","row","rowPtr","column","csc709Inverse","y","cb","cr","convertToHalf","idx","encodeFloat16","toLinear","float","sign","abs","uncompressZIP","info","compressed","array","offset","inflate","Inflate","rawBuffer","decompress","tmpBuffer","uncompressDWA","viewer","lines","EXRHeader","channels","dwaHeader","version","parseInt64","unknownUncompressedSize","unknownCompressedSize","acCompressedSize","dcCompressedSize","rleCompressedSize","rleUncompressedSize","rleRawSize","totalAcUncompressedCount","totalDcUncompressedCount","acCompression","compression","channelRules","ruleSize","parseUint16","name","parseNullTerminatedString","parseUint8","Int8Array","channelData","cd","channel","decoded","pixelType","pLinear","cscSet","rule","zlibInfo","dcBuffer","rleBuffer","outBufferEnd","rowOffsets","chan","rowPtrs","dataView","numFullBlocksX","numBlocksX","ceil","numBlocksY","leftoverX","leftoverY","currDcComp","dctData","rowBlock","comp","Float32Array","blocky","maxY","maxX","blockx","fill","setUint16","halfRow","getUint16","setFloat32","lossyDctDecode","rleOffset","rowOffsetBytes","byte","uintBuffer","endOffset","stringValue","TextDecoder","decode","parseUlong","uLong","getUint32","Uint32","Uint8","int","getBigInt64","parseFloat32","getFloat32","binary","exponent","fraction","NaN","Infinity","floatView","int32View","Int32Array","val","bits","Uint16","parseValue","parseFixedLengthString","startOffset","xSampling","ySampling","parseChlist","redX","redY","greenX","greenY","blueX","blueY","whiteX","whiteY","parseChromaticities","parseCompression","xMin","yMin","xMax","yMax","parseBox2i","parseLineOrder","parseV2f","bufferDataView","keepReading","attributeName","attributeValue","uncompress","scanlineBlockSize","size_t","getValue","dataWindowHeight","dataWindow","tmpBufSize","bitmap","pizChannelData","minNonZero","maxNonZero","lut","reverseLutFromBitmap","start","nData","applyLut","tmpOffset","cp","end","numBlocks","byteArray","line","channelOffsets","compressionInfo","scanlineBlockIdx","line_y","true_y","channelID","cOff","setDataType","encoding","generateMipmaps","flipY"],"mappings":"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","file":"2.bundle.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Cache } from './Cache.js';\nimport { Loader } from './Loader.js';\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FileLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { FileLoader };\n","import { LinearFilter, LinearMipmapLinearFilter, ClampToEdgeWrapping } from '../constants.js';\nimport { FileLoader } from './FileLoader.js';\nimport { DataTexture } from '../textures/DataTexture.js';\nimport { Loader } from './Loader.js';\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DataTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n\nexport { DataTextureLoader };\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\n}}var A=0,y=1,B={t:A,s:y};\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\nvar Zlib=mod.Zlib;\nexport { Zlib }","import {DataTextureLoader} from 'three/src/loaders/DataTextureLoader';\nimport {FloatType} from 'three/src/constants';\nimport {HalfFloatType} from 'three/src/constants';\nimport {LinearEncoding} from 'three/src/constants';\nimport {LinearFilter} from 'three/src/constants';\nimport {RGBAFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\n/**\n * @author Richard M. / https://github.com/richardmonette\n * @author ScieCode / http://github.com/sciecode\n *\n * OpenEXR loader which, currently, supports uncompressed, ZIP(S), RLE and PIZ wavelet compression.\n * Supports reading 16 and 32 bit data format.\n *\n * Referred to the original Industrial Light & Magic OpenEXR implementation and the TinyEXR / Syoyo Fujita\n * implementation, so I have preserved their copyright notices.\n */\n\nimport { Zlib } from \"../libs/inflate.module.min.js\";\n\n// /*\n// Copyright (c) 2014 - 2017, Syoyo Fujita\n// All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Syoyo Fujita nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// */\n\n// // TinyEXR contains some OpenEXR code, which is licensed under ------------\n\n// ///////////////////////////////////////////////////////////////////////////\n// //\n// // Copyright (c) 2002, Industrial Light & Magic, a division of Lucas\n// // Digital Ltd. LLC\n// //\n// // All rights reserved.\n// //\n// // Redistribution and use in source and binary forms, with or without\n// // modification, are permitted provided that the following conditions are\n// // met:\n// // *       Redistributions of source code must retain the above copyright\n// // notice, this list of conditions and the following disclaimer.\n// // *       Redistributions in binary form must reproduce the above\n// // copyright notice, this list of conditions and the following disclaimer\n// // in the documentation and/or other materials provided with the\n// // distribution.\n// // *       Neither the name of Industrial Light & Magic nor the names of\n// // its contributors may be used to endorse or promote products derived\n// // from this software without specific prior written permission.\n// //\n// // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// // \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// //\n// ///////////////////////////////////////////////////////////////////////////\n\n// // End of OpenEXR license -------------------------------------------------\n\nvar EXRLoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = FloatType;\n\n};\n\nEXRLoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: EXRLoader,\n\n\tparse: function ( buffer ) {\n\n\t\tconst USHORT_RANGE = ( 1 << 16 );\n\t\tconst BITMAP_SIZE = ( USHORT_RANGE >> 3 );\n\n\t\tconst HUF_ENCBITS = 16; // literal (value) bit length\n\t\tconst HUF_DECBITS = 14; // decoding bit size (>= 8)\n\n\t\tconst HUF_ENCSIZE = ( 1 << HUF_ENCBITS ) + 1; // encoding table size\n\t\tconst HUF_DECSIZE = 1 << HUF_DECBITS; // decoding table size\n\t\tconst HUF_DECMASK = HUF_DECSIZE - 1;\n\n\t\tconst SHORT_ZEROCODE_RUN = 59;\n\t\tconst LONG_ZEROCODE_RUN = 63;\n\t\tconst SHORTEST_LONG_RUN = 2 + LONG_ZEROCODE_RUN - SHORT_ZEROCODE_RUN;\n\n\t\tconst ULONG_SIZE = 8;\n\t\tconst FLOAT32_SIZE = 4;\n\t\tconst INT32_SIZE = 4;\n\t\tconst INT16_SIZE = 2;\n\t\tconst INT8_SIZE = 1;\n\n\t\tconst STATIC_HUFFMAN = 0;\n\t\tconst DEFLATE = 1;\n\n\t\tconst UNKNOWN = 0;\n\t\tconst LOSSY_DCT = 1;\n\t\tconst RLE = 2;\n\n\t\tconst logBase = Math.pow( 2.7182818, 2.2 );\n\n\t\tfunction reverseLutFromBitmap( bitmap, lut ) {\n\n\t\t\tvar k = 0;\n\n\t\t\tfor ( var i = 0; i < USHORT_RANGE; ++ i ) {\n\n\t\t\t\tif ( ( i == 0 ) || ( bitmap[ i >> 3 ] & ( 1 << ( i & 7 ) ) ) ) {\n\n\t\t\t\t\tlut[ k ++ ] = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar n = k - 1;\n\n\t\t\twhile ( k < USHORT_RANGE ) lut[ k ++ ] = 0;\n\n\t\t\treturn n;\n\n\t\t}\n\n\t\tfunction hufClearDecTable( hdec ) {\n\n\t\t\tfor ( var i = 0; i < HUF_DECSIZE; i ++ ) {\n\n\t\t\t\thdec[ i ] = {};\n\t\t\t\thdec[ i ].len = 0;\n\t\t\t\thdec[ i ].lit = 0;\n\t\t\t\thdec[ i ].p = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst getBitsReturn = { l: 0, c: 0, lc: 0 };\n\n\t\tfunction getBits( nBits, c, lc, uInt8Array, inOffset ) {\n\n\t\t\twhile ( lc < nBits ) {\n\n\t\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\t\t\tlc += 8;\n\n\t\t\t}\n\n\t\t\tlc -= nBits;\n\n\t\t\tgetBitsReturn.l = ( c >> lc ) & ( ( 1 << nBits ) - 1 );\n\t\t\tgetBitsReturn.c = c;\n\t\t\tgetBitsReturn.lc = lc;\n\n\t\t}\n\n\t\tconst hufTableBuffer = new Array( 59 );\n\n\t\tfunction hufCanonicalCodeTable( hcode ) {\n\n\t\t\tfor ( var i = 0; i <= 58; ++ i ) hufTableBuffer[ i ] = 0;\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) hufTableBuffer[ hcode[ i ] ] += 1;\n\n\t\t\tvar c = 0;\n\n\t\t\tfor ( var i = 58; i > 0; -- i ) {\n\n\t\t\t\tvar nc = ( ( c + hufTableBuffer[ i ] ) >> 1 );\n\t\t\t\thufTableBuffer[ i ] = c;\n\t\t\t\tc = nc;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) {\n\n\t\t\t\tvar l = hcode[ i ];\n\t\t\t\tif ( l > 0 ) hcode[ i ] = l | ( hufTableBuffer[ l ] ++ << 6 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction hufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, hcode ) {\n\n\t\t\tvar p = inOffset;\n\t\t\tvar c = 0;\n\t\t\tvar lc = 0;\n\n\t\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\t\tif ( p.value - inOffset.value > ni ) return false;\n\n\t\t\t\tgetBits( 6, c, lc, uInt8Array, p );\n\n\t\t\t\tvar l = getBitsReturn.l;\n\t\t\t\tc = getBitsReturn.c;\n\t\t\t\tlc = getBitsReturn.lc;\n\n\t\t\t\thcode[ im ] = l;\n\n\t\t\t\tif ( l == LONG_ZEROCODE_RUN ) {\n\n\t\t\t\t\tif ( p.value - inOffset.value > ni ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgetBits( 8, c, lc, uInt8Array, p );\n\n\t\t\t\t\tvar zerun = getBitsReturn.l + SHORTEST_LONG_RUN;\n\t\t\t\t\tc = getBitsReturn.c;\n\t\t\t\t\tlc = getBitsReturn.lc;\n\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\t\tim --;\n\n\t\t\t\t} else if ( l >= SHORT_ZEROCODE_RUN ) {\n\n\t\t\t\t\tvar zerun = l - SHORT_ZEROCODE_RUN + 2;\n\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\t\tim --;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thufCanonicalCodeTable( hcode );\n\n\t\t}\n\n\t\tfunction hufLength( code ) {\n\n\t\t\treturn code & 63;\n\n\t\t}\n\n\t\tfunction hufCode( code ) {\n\n\t\t\treturn code >> 6;\n\n\t\t}\n\n\t\tfunction hufBuildDecTable( hcode, im, iM, hdecod ) {\n\n\t\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\t\tvar c = hufCode( hcode[ im ] );\n\t\t\t\tvar l = hufLength( hcode[ im ] );\n\n\t\t\t\tif ( c >> l ) {\n\n\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t}\n\n\t\t\t\tif ( l > HUF_DECBITS ) {\n\n\t\t\t\t\tvar pl = hdecod[ ( c >> ( l - HUF_DECBITS ) ) ];\n\n\t\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpl.lit ++;\n\n\t\t\t\t\tif ( pl.p ) {\n\n\t\t\t\t\t\tvar p = pl.p;\n\t\t\t\t\t\tpl.p = new Array( pl.lit );\n\n\t\t\t\t\t\tfor ( var i = 0; i < pl.lit - 1; ++ i ) {\n\n\t\t\t\t\t\t\tpl.p[ i ] = p[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpl.p = new Array( 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpl.p[ pl.lit - 1 ] = im;\n\n\t\t\t\t} else if ( l ) {\n\n\t\t\t\t\tvar plOffset = 0;\n\n\t\t\t\t\tfor ( var i = 1 << ( HUF_DECBITS - l ); i > 0; i -- ) {\n\n\t\t\t\t\t\tvar pl = hdecod[ ( c << ( HUF_DECBITS - l ) ) + plOffset ];\n\n\t\t\t\t\t\tif ( pl.len || pl.p ) {\n\n\t\t\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpl.len = l;\n\t\t\t\t\t\tpl.lit = im;\n\n\t\t\t\t\t\tplOffset ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst getCharReturn = { c: 0, lc: 0 };\n\n\t\tfunction getChar( c, lc, uInt8Array, inOffset ) {\n\n\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\t\tlc += 8;\n\n\t\t\tgetCharReturn.c = c;\n\t\t\tgetCharReturn.lc = lc;\n\n\t\t}\n\n\t\tconst getCodeReturn = { c: 0, lc: 0 };\n\n\t\tfunction getCode( po, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outBufferOffset, outBufferEndOffset ) {\n\n\t\t\tif ( po == rlc ) {\n\n\t\t\t\tif ( lc < 8 ) {\n\n\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\t\t\t\t\tc = getCharReturn.c;\n\t\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\t}\n\n\t\t\t\tlc -= 8;\n\n\t\t\t\tvar cs = ( c >> lc );\n\t\t\t\tvar cs = new Uint8Array( [ cs ] )[ 0 ];\n\n\t\t\t\tif ( outBufferOffset.value + cs > outBufferEndOffset ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t\tvar s = outBuffer[ outBufferOffset.value - 1 ];\n\n\t\t\t\twhile ( cs -- > 0 ) {\n\n\t\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = s;\n\n\t\t\t\t}\n\n\t\t\t} else if ( outBufferOffset.value < outBufferEndOffset ) {\n\n\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = po;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tgetCodeReturn.c = c;\n\t\t\tgetCodeReturn.lc = lc;\n\n\t\t}\n\n\t\tfunction UInt16( value ) {\n\n\t\t\treturn ( value & 0xFFFF );\n\n\t\t}\n\n\t\tfunction Int16( value ) {\n\n\t\t\tvar ref = UInt16( value );\n\t\t\treturn ( ref > 0x7FFF ) ? ref - 0x10000 : ref;\n\n\t\t}\n\n\t\tconst wdec14Return = { a: 0, b: 0 };\n\n\t\tfunction wdec14( l, h ) {\n\n\t\t\tvar ls = Int16( l );\n\t\t\tvar hs = Int16( h );\n\n\t\t\tvar hi = hs;\n\t\t\tvar ai = ls + ( hi & 1 ) + ( hi >> 1 );\n\n\t\t\tvar as = ai;\n\t\t\tvar bs = ai - hi;\n\n\t\t\twdec14Return.a = as;\n\t\t\twdec14Return.b = bs;\n\n\t\t}\n\n\t\tfunction wav2Decode( buffer, j, nx, ox, ny, oy ) {\n\n\t\t\tvar n = ( nx > ny ) ? ny : nx;\n\t\t\tvar p = 1;\n\t\t\tvar p2;\n\n\t\t\twhile ( p <= n ) p <<= 1;\n\n\t\t\tp >>= 1;\n\t\t\tp2 = p;\n\t\t\tp >>= 1;\n\n\t\t\twhile ( p >= 1 ) {\n\n\t\t\t\tvar py = 0;\n\t\t\t\tvar ey = py + oy * ( ny - p2 );\n\t\t\t\tvar oy1 = oy * p;\n\t\t\t\tvar oy2 = oy * p2;\n\t\t\t\tvar ox1 = ox * p;\n\t\t\t\tvar ox2 = ox * p2;\n\t\t\t\tvar i00, i01, i10, i11;\n\n\t\t\t\tfor ( ; py <= ey; py += oy2 ) {\n\n\t\t\t\t\tvar px = py;\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\t\tvar p01 = px + ox1;\n\t\t\t\t\t\tvar p10 = px + oy1;\n\t\t\t\t\t\tvar p11 = p10 + ox1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\ti10 = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( buffer[ p01 + j ], buffer[ p11 + j ] );\n\n\t\t\t\t\t\ti01 = wdec14Return.a;\n\t\t\t\t\t\ti11 = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( i00, i01 );\n\n\t\t\t\t\t\tbuffer[ px + j ] = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( i10, i11 );\n\n\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p11 + j ] = wdec14Return.b;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nx & p ) {\n\n\t\t\t\t\t\tvar p10 = px + oy1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ny & p ) {\n\n\t\t\t\t\tvar px = py;\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\t\tvar p01 = px + ox1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p01 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tp2 = p;\n\t\t\t\tp >>= 1;\n\n\t\t\t}\n\n\t\t\treturn py;\n\n\t\t}\n\n\t\tfunction hufDecode( encodingTable, decodingTable, uInt8Array, inDataView, inOffset, ni, rlc, no, outBuffer, outOffset ) {\n\n\t\t\tvar c = 0;\n\t\t\tvar lc = 0;\n\t\t\tvar outBufferEndOffset = no;\n\t\t\tvar inOffsetEnd = Math.trunc( inOffset.value + ( ni + 7 ) / 8 );\n\n\t\t\twhile ( inOffset.value < inOffsetEnd ) {\n\n\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\t\tc = getCharReturn.c;\n\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\twhile ( lc >= HUF_DECBITS ) {\n\n\t\t\t\t\tvar index = ( c >> ( lc - HUF_DECBITS ) ) & HUF_DECMASK;\n\t\t\t\t\tvar pl = decodingTable[ index ];\n\n\t\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\t\tlc -= pl.len;\n\n\t\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! pl.p ) {\n\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar j;\n\n\t\t\t\t\t\tfor ( j = 0; j < pl.lit; j ++ ) {\n\n\t\t\t\t\t\t\tvar l = hufLength( encodingTable[ pl.p[ j ] ] );\n\n\t\t\t\t\t\t\twhile ( lc < l && inOffset.value < inOffsetEnd ) {\n\n\t\t\t\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\t\t\t\t\t\tc = getCharReturn.c;\n\t\t\t\t\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( lc >= l ) {\n\n\t\t\t\t\t\t\t\tif ( hufCode( encodingTable[ pl.p[ j ] ] ) == ( ( c >> ( lc - l ) ) & ( ( 1 << l ) - 1 ) ) ) {\n\n\t\t\t\t\t\t\t\t\tlc -= l;\n\n\t\t\t\t\t\t\t\t\tgetCode( pl.p[ j ], rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( j == pl.lit ) {\n\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar i = ( 8 - ni ) & 7;\n\n\t\t\tc >>= i;\n\t\t\tlc -= i;\n\n\t\t\twhile ( lc > 0 ) {\n\n\t\t\t\tvar pl = decodingTable[ ( c << ( HUF_DECBITS - lc ) ) & HUF_DECMASK ];\n\n\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\tlc -= pl.len;\n\n\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction hufUncompress( uInt8Array, inDataView, inOffset, nCompressed, outBuffer, nRaw ) {\n\n\t\t\tvar outOffset = { value: 0 };\n\t\t\tvar initialInOffset = inOffset.value;\n\n\t\t\tvar im = parseUint32( inDataView, inOffset );\n\t\t\tvar iM = parseUint32( inDataView, inOffset );\n\n\t\t\tinOffset.value += 4;\n\n\t\t\tvar nBits = parseUint32( inDataView, inOffset );\n\n\t\t\tinOffset.value += 4;\n\n\t\t\tif ( im < 0 || im >= HUF_ENCSIZE || iM < 0 || iM >= HUF_ENCSIZE ) {\n\n\t\t\t\tthrow 'Something wrong with HUF_ENCSIZE';\n\n\t\t\t}\n\n\t\t\tvar freq = new Array( HUF_ENCSIZE );\n\t\t\tvar hdec = new Array( HUF_DECSIZE );\n\n\t\t\thufClearDecTable( hdec );\n\n\t\t\tvar ni = nCompressed - ( inOffset.value - initialInOffset );\n\n\t\t\thufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, freq );\n\n\t\t\tif ( nBits > 8 * ( nCompressed - ( inOffset.value - initialInOffset ) ) ) {\n\n\t\t\t\tthrow 'Something wrong with hufUncompress';\n\n\t\t\t}\n\n\t\t\thufBuildDecTable( freq, im, iM, hdec );\n\n\t\t\thufDecode( freq, hdec, uInt8Array, inDataView, inOffset, nBits, iM, nRaw, outBuffer, outOffset );\n\n\t\t}\n\n\t\tfunction applyLut( lut, data, nData ) {\n\n\t\t\tfor ( var i = 0; i < nData; ++ i ) {\n\n\t\t\t\tdata[ i ] = lut[ data[ i ] ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction predictor( source ) {\n\n\t\t\tfor ( var t = 1; t < source.length; t ++ ) {\n\n\t\t\t\tvar d = source[ t - 1 ] + source[ t ] - 128;\n\t\t\t\tsource[ t ] = d;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction interleaveScalar( source, out ) {\n\n\t\t\tvar t1 = 0;\n\t\t\tvar t2 = Math.floor( ( source.length + 1 ) / 2 );\n\t\t\tvar s = 0;\n\t\t\tvar stop = source.length - 1;\n\n\t\t\twhile ( true ) {\n\n\t\t\t\tif ( s > stop ) break;\n\t\t\t\tout[ s ++ ] = source[ t1 ++ ];\n\n\t\t\t\tif ( s > stop ) break;\n\t\t\t\tout[ s ++ ] = source[ t2 ++ ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction decodeRunLength( source ) {\n\n\t\t\tvar size = source.byteLength;\n\t\t\tvar out = new Array();\n\t\t\tvar p = 0;\n\n\t\t\tvar reader = new DataView( source );\n\n\t\t\twhile ( size > 0 ) {\n\n\t\t\t\tvar l = reader.getInt8( p ++ );\n\n\t\t\t\tif ( l < 0 ) {\n\n\t\t\t\t\tvar count = - l;\n\t\t\t\t\tsize -= count + 1;\n\n\t\t\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\tout.push( reader.getUint8( p ++ ) );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar count = l;\n\t\t\t\t\tsize -= 2;\n\n\t\t\t\t\tvar value = reader.getUint8( p ++ );\n\n\t\t\t\t\tfor ( var i = 0; i < count + 1; i ++ ) {\n\n\t\t\t\t\t\tout.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn out;\n\n\t\t}\n\n\t\tfunction lossyDctDecode( cscSet, rowPtrs, channelData, acBuffer, dcBuffer, outBuffer ) {\n\n\t\t\tvar dataView = new DataView( outBuffer.buffer );\n\n\t\t\tvar width = channelData[ cscSet.idx[ 0 ] ].width;\n\t\t\tvar height = channelData[ cscSet.idx[ 0 ] ].height;\n\n\t\t\tvar numComp = 3;\n\n\t\t\tvar numFullBlocksX = Math.floor( width / 8.0 );\n\t\t\tvar numBlocksX = Math.ceil( width / 8.0 );\n\t\t\tvar numBlocksY = Math.ceil( height / 8.0 );\n\t\t\tvar leftoverX = width - ( numBlocksX - 1 ) * 8;\n\t\t\tvar leftoverY = height - ( numBlocksY - 1 ) * 8;\n\n\t\t\tvar currAcComp = { value: 0 };\n\t\t\tvar currDcComp = new Array( numComp );\n\t\t\tvar dctData = new Array( numComp );\n\t\t\tvar halfZigBlock = new Array( numComp );\n\t\t\tvar rowBlock = new Array( numComp );\n\t\t\tvar rowOffsets = new Array( numComp );\n\n\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\trowOffsets[ comp ] = rowPtrs[ cscSet.idx[ comp ] ];\n\t\t\t\tcurrDcComp[ comp ] = ( comp < 1 ) ? 0 : currDcComp[ comp - 1 ] + numBlocksX * numBlocksY;\n\t\t\t\tdctData[ comp ] = new Float32Array( 64 );\n\t\t\t\thalfZigBlock[ comp ] = new Uint16Array( 64 );\n\t\t\t\trowBlock[ comp ] = new Uint16Array( numBlocksX * 64 );\n\n\t\t\t}\n\n\t\t\tfor ( let blocky = 0; blocky < numBlocksY; ++ blocky ) {\n\n\t\t\t\tvar maxY = 8;\n\n\t\t\t\tif ( blocky == numBlocksY - 1 )\n\t\t\t\t\tmaxY = leftoverY;\n\n\t\t\t\tvar maxX = 8;\n\n\t\t\t\tfor ( let blockx = 0; blockx < numBlocksX; ++ blockx ) {\n\n\t\t\t\t\tif ( blockx == numBlocksX - 1 )\n\t\t\t\t\t\tmaxX = leftoverX;\n\n\t\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\t\t\thalfZigBlock[ comp ].fill( 0 );\n\n\t\t\t\t\t\t// set block DC component\n\t\t\t\t\t\thalfZigBlock[ comp ][ 0 ] = dcBuffer[ currDcComp[ comp ] ++ ];\n\t\t\t\t\t\t// set block AC components\n\t\t\t\t\t\tunRleAC( currAcComp, acBuffer, halfZigBlock[ comp ] );\n\n\t\t\t\t\t\t// UnZigZag block to float\n\t\t\t\t\t\tunZigZag( halfZigBlock[ comp ], dctData[ comp ] );\n\t\t\t\t\t\t// decode float dct\n\t\t\t\t\t\tdctInverse( dctData[ comp ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( numComp == 3 ) {\n\n\t\t\t\t\t\tcsc709Inverse( dctData );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\t\t\tconvertToHalf( dctData[ comp ], rowBlock[ comp ], blockx * 64 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // blockx\n\n\t\t\t\tlet offset = 0;\n\n\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\t\tlet type = channelData[ cscSet.idx[ comp ] ].type;\n\n\t\t\t\t\tfor ( let y = 8 * blocky; y < 8 * blocky + maxY; ++ y ) {\n\n\t\t\t\t\t\toffset = rowOffsets[ comp ][ y ];\n\n\t\t\t\t\t\tfor ( let blockx = 0; blockx < numFullBlocksX; ++ blockx ) {\n\n\t\t\t\t\t\t\tlet src = blockx * 64 + ( ( y & 0x7 ) * 8 );\n\n\t\t\t\t\t\t\tdataView.setUint16( offset + 0 * INT16_SIZE * type, rowBlock[ comp ][ src + 0 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 1 * INT16_SIZE * type, rowBlock[ comp ][ src + 1 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 2 * INT16_SIZE * type, rowBlock[ comp ][ src + 2 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 3 * INT16_SIZE * type, rowBlock[ comp ][ src + 3 ], true );\n\n\t\t\t\t\t\t\tdataView.setUint16( offset + 4 * INT16_SIZE * type, rowBlock[ comp ][ src + 4 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 5 * INT16_SIZE * type, rowBlock[ comp ][ src + 5 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 6 * INT16_SIZE * type, rowBlock[ comp ][ src + 6 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 7 * INT16_SIZE * type, rowBlock[ comp ][ src + 7 ], true );\n\n\t\t\t\t\t\t\toffset += 8 * INT16_SIZE * type;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle partial X blocks\n\t\t\t\t\tif ( numFullBlocksX != numBlocksX ) {\n\n\t\t\t\t\t\tfor ( let y = 8 * blocky; y < 8 * blocky + maxY; ++ y ) {\n\n\t\t\t\t\t\t\tlet offset = rowOffsets[ comp ][ y ] + 8 * numFullBlocksX * INT16_SIZE * type;\n\t\t\t\t\t\t\tlet src = numFullBlocksX * 64 + ( ( y & 0x7 ) * 8 );\n\n\t\t\t\t\t\t\tfor ( let x = 0; x < maxX; ++ x ) {\n\n\t\t\t\t\t\t\t\tdataView.setUint16( offset + x * INT16_SIZE * type, rowBlock[ comp ][ src + x ], true );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} // comp\n\n\t\t\t} // blocky\n\n\t\t\tvar halfRow = new Uint16Array( width );\n\t\t\tvar dataView = new DataView( outBuffer.buffer );\n\n\t\t\t// convert channels back to float, if needed\n\t\t\tfor ( var comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\tchannelData[ cscSet.idx[ comp ] ].decoded = true;\n\t\t\t\tvar type = channelData[ cscSet.idx[ comp ] ].type;\n\n\t\t\t\tif ( channelData[ comp ].type != 2 ) continue;\n\n\t\t\t\tfor ( var y = 0; y < height; ++ y ) {\n\n\t\t\t\t\tlet offset = rowOffsets[ comp ][ y ];\n\n\t\t\t\t\tfor ( var x = 0; x < width; ++ x ) {\n\n\t\t\t\t\t\thalfRow[ x ] = dataView.getUint16( offset + x * INT16_SIZE * type, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var x = 0; x < width; ++ x ) {\n\n\t\t\t\t\t\tdataView.setFloat32( offset + x * INT16_SIZE * type, decodeFloat16( halfRow[ x ] ), true );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unRleAC( currAcComp, acBuffer, halfZigBlock ) {\n\n\t\t\tvar acValue;\n\t\t\tvar dctComp = 1;\n\n\t\t\twhile ( dctComp < 64 ) {\n\n\t\t\t\tacValue = acBuffer[ currAcComp.value ];\n\n\t\t\t\tif ( acValue == 0xff00 ) {\n\n\t\t\t\t\tdctComp = 64;\n\n\t\t\t\t} else if ( acValue >> 8 == 0xff ) {\n\n\t\t\t\t\tdctComp += acValue & 0xff;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thalfZigBlock[ dctComp ] = acValue;\n\t\t\t\t\tdctComp ++;\n\n\t\t\t\t}\n\n\t\t\t\tcurrAcComp.value ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unZigZag( src, dst ) {\n\n\t\t\tdst[ 0 ] = decodeFloat16( src[ 0 ] );\n\t\t\tdst[ 1 ] = decodeFloat16( src[ 1 ] );\n\t\t\tdst[ 2 ] = decodeFloat16( src[ 5 ] );\n\t\t\tdst[ 3 ] = decodeFloat16( src[ 6 ] );\n\t\t\tdst[ 4 ] = decodeFloat16( src[ 14 ] );\n\t\t\tdst[ 5 ] = decodeFloat16( src[ 15 ] );\n\t\t\tdst[ 6 ] = decodeFloat16( src[ 27 ] );\n\t\t\tdst[ 7 ] = decodeFloat16( src[ 28 ] );\n\t\t\tdst[ 8 ] = decodeFloat16( src[ 2 ] );\n\t\t\tdst[ 9 ] = decodeFloat16( src[ 4 ] );\n\n\t\t\tdst[ 10 ] = decodeFloat16( src[ 7 ] );\n\t\t\tdst[ 11 ] = decodeFloat16( src[ 13 ] );\n\t\t\tdst[ 12 ] = decodeFloat16( src[ 16 ] );\n\t\t\tdst[ 13 ] = decodeFloat16( src[ 26 ] );\n\t\t\tdst[ 14 ] = decodeFloat16( src[ 29 ] );\n\t\t\tdst[ 15 ] = decodeFloat16( src[ 42 ] );\n\t\t\tdst[ 16 ] = decodeFloat16( src[ 3 ] );\n\t\t\tdst[ 17 ] = decodeFloat16( src[ 8 ] );\n\t\t\tdst[ 18 ] = decodeFloat16( src[ 12 ] );\n\t\t\tdst[ 19 ] = decodeFloat16( src[ 17 ] );\n\n\t\t\tdst[ 20 ] = decodeFloat16( src[ 25 ] );\n\t\t\tdst[ 21 ] = decodeFloat16( src[ 30 ] );\n\t\t\tdst[ 22 ] = decodeFloat16( src[ 41 ] );\n\t\t\tdst[ 23 ] = decodeFloat16( src[ 43 ] );\n\t\t\tdst[ 24 ] = decodeFloat16( src[ 9 ] );\n\t\t\tdst[ 25 ] = decodeFloat16( src[ 11 ] );\n\t\t\tdst[ 26 ] = decodeFloat16( src[ 18 ] );\n\t\t\tdst[ 27 ] = decodeFloat16( src[ 24 ] );\n\t\t\tdst[ 28 ] = decodeFloat16( src[ 31 ] );\n\t\t\tdst[ 29 ] = decodeFloat16( src[ 40 ] );\n\n\t\t\tdst[ 30 ] = decodeFloat16( src[ 44 ] );\n\t\t\tdst[ 31 ] = decodeFloat16( src[ 53 ] );\n\t\t\tdst[ 32 ] = decodeFloat16( src[ 10 ] );\n\t\t\tdst[ 33 ] = decodeFloat16( src[ 19 ] );\n\t\t\tdst[ 34 ] = decodeFloat16( src[ 23 ] );\n\t\t\tdst[ 35 ] = decodeFloat16( src[ 32 ] );\n\t\t\tdst[ 36 ] = decodeFloat16( src[ 39 ] );\n\t\t\tdst[ 37 ] = decodeFloat16( src[ 45 ] );\n\t\t\tdst[ 38 ] = decodeFloat16( src[ 52 ] );\n\t\t\tdst[ 39 ] = decodeFloat16( src[ 54 ] );\n\n\t\t\tdst[ 40 ] = decodeFloat16( src[ 20 ] );\n\t\t\tdst[ 41 ] = decodeFloat16( src[ 22 ] );\n\t\t\tdst[ 42 ] = decodeFloat16( src[ 33 ] );\n\t\t\tdst[ 43 ] = decodeFloat16( src[ 38 ] );\n\t\t\tdst[ 44 ] = decodeFloat16( src[ 46 ] );\n\t\t\tdst[ 45 ] = decodeFloat16( src[ 51 ] );\n\t\t\tdst[ 46 ] = decodeFloat16( src[ 55 ] );\n\t\t\tdst[ 47 ] = decodeFloat16( src[ 60 ] );\n\t\t\tdst[ 48 ] = decodeFloat16( src[ 21 ] );\n\t\t\tdst[ 49 ] = decodeFloat16( src[ 34 ] );\n\n\t\t\tdst[ 50 ] = decodeFloat16( src[ 37 ] );\n\t\t\tdst[ 51 ] = decodeFloat16( src[ 47 ] );\n\t\t\tdst[ 52 ] = decodeFloat16( src[ 50 ] );\n\t\t\tdst[ 53 ] = decodeFloat16( src[ 56 ] );\n\t\t\tdst[ 54 ] = decodeFloat16( src[ 59 ] );\n\t\t\tdst[ 55 ] = decodeFloat16( src[ 61 ] );\n\t\t\tdst[ 56 ] = decodeFloat16( src[ 35 ] );\n\t\t\tdst[ 57 ] = decodeFloat16( src[ 36 ] );\n\t\t\tdst[ 58 ] = decodeFloat16( src[ 48 ] );\n\t\t\tdst[ 59 ] = decodeFloat16( src[ 49 ] );\n\n\t\t\tdst[ 60 ] = decodeFloat16( src[ 57 ] );\n\t\t\tdst[ 61 ] = decodeFloat16( src[ 58 ] );\n\t\t\tdst[ 62 ] = decodeFloat16( src[ 62 ] );\n\t\t\tdst[ 63 ] = decodeFloat16( src[ 63 ] );\n\n\t\t}\n\n\t\tfunction dctInverse( data ) {\n\n\t\t\tconst a = 0.5 * Math.cos( 3.14159 / 4.0 );\n\t\t\tconst b = 0.5 * Math.cos( 3.14159 / 16.0 );\n\t\t\tconst c = 0.5 * Math.cos( 3.14159 / 8.0 );\n\t\t\tconst d = 0.5 * Math.cos( 3.0 * 3.14159 / 16.0 );\n\t\t\tconst e = 0.5 * Math.cos( 5.0 * 3.14159 / 16.0 );\n\t\t\tconst f = 0.5 * Math.cos( 3.0 * 3.14159 / 8.0 );\n\t\t\tconst g = 0.5 * Math.cos( 7.0 * 3.14159 / 16.0 );\n\n\t\t\tvar alpha = new Array( 4 );\n\t\t\tvar beta = new Array( 4 );\n\t\t\tvar theta = new Array( 4 );\n\t\t\tvar gamma = new Array( 4 );\n\n\t\t\tfor ( var row = 0; row < 8; ++ row ) {\n\n\t\t\t\tvar rowPtr = row * 8;\n\n\t\t\t\talpha[ 0 ] = c * data[ rowPtr + 2 ];\n\t\t\t\talpha[ 1 ] = f * data[ rowPtr + 2 ];\n\t\t\t\talpha[ 2 ] = c * data[ rowPtr + 6 ];\n\t\t\t\talpha[ 3 ] = f * data[ rowPtr + 6 ];\n\n\t\t\t\tbeta[ 0 ] = b * data[ rowPtr + 1 ] + d * data[ rowPtr + 3 ] + e * data[ rowPtr + 5 ] + g * data[ rowPtr + 7 ];\n\t\t\t\tbeta[ 1 ] = d * data[ rowPtr + 1 ] - g * data[ rowPtr + 3 ] - b * data[ rowPtr + 5 ] - e * data[ rowPtr + 7 ];\n\t\t\t\tbeta[ 2 ] = e * data[ rowPtr + 1 ] - b * data[ rowPtr + 3 ] + g * data[ rowPtr + 5 ] + d * data[ rowPtr + 7 ];\n\t\t\t\tbeta[ 3 ] = g * data[ rowPtr + 1 ] - e * data[ rowPtr + 3 ] + d * data[ rowPtr + 5 ] - b * data[ rowPtr + 7 ];\n\n\t\t\t\ttheta[ 0 ] = a * ( data[ rowPtr + 0 ] + data[ rowPtr + 4 ] );\n\t\t\t\ttheta[ 3 ] = a * ( data[ rowPtr + 0 ] - data[ rowPtr + 4 ] );\n\t\t\t\ttheta[ 1 ] = alpha[ 0 ] + alpha[ 3 ];\n\t\t\t\ttheta[ 2 ] = alpha[ 1 ] - alpha[ 2 ];\n\n\t\t\t\tgamma[ 0 ] = theta[ 0 ] + theta[ 1 ];\n\t\t\t\tgamma[ 1 ] = theta[ 3 ] + theta[ 2 ];\n\t\t\t\tgamma[ 2 ] = theta[ 3 ] - theta[ 2 ];\n\t\t\t\tgamma[ 3 ] = theta[ 0 ] - theta[ 1 ];\n\n\t\t\t\tdata[ rowPtr + 0 ] = gamma[ 0 ] + beta[ 0 ];\n\t\t\t\tdata[ rowPtr + 1 ] = gamma[ 1 ] + beta[ 1 ];\n\t\t\t\tdata[ rowPtr + 2 ] = gamma[ 2 ] + beta[ 2 ];\n\t\t\t\tdata[ rowPtr + 3 ] = gamma[ 3 ] + beta[ 3 ];\n\n\t\t\t\tdata[ rowPtr + 4 ] = gamma[ 3 ] - beta[ 3 ];\n\t\t\t\tdata[ rowPtr + 5 ] = gamma[ 2 ] - beta[ 2 ];\n\t\t\t\tdata[ rowPtr + 6 ] = gamma[ 1 ] - beta[ 1 ];\n\t\t\t\tdata[ rowPtr + 7 ] = gamma[ 0 ] - beta[ 0 ];\n\n\t\t\t}\n\n\t\t\tfor ( var column = 0; column < 8; ++ column ) {\n\n\t\t\t\talpha[ 0 ] = c * data[ 16 + column ];\n\t\t\t\talpha[ 1 ] = f * data[ 16 + column ];\n\t\t\t\talpha[ 2 ] = c * data[ 48 + column ];\n\t\t\t\talpha[ 3 ] = f * data[ 48 + column ];\n\n\t\t\t\tbeta[ 0 ] = b * data[ 8 + column ] + d * data[ 24 + column ] + e * data[ 40 + column ] + g * data[ 56 + column ];\n\t\t\t\tbeta[ 1 ] = d * data[ 8 + column ] - g * data[ 24 + column ] - b * data[ 40 + column ] - e * data[ 56 + column ];\n\t\t\t\tbeta[ 2 ] = e * data[ 8 + column ] - b * data[ 24 + column ] + g * data[ 40 + column ] + d * data[ 56 + column ];\n\t\t\t\tbeta[ 3 ] = g * data[ 8 + column ] - e * data[ 24 + column ] + d * data[ 40 + column ] - b * data[ 56 + column ];\n\n\t\t\t\ttheta[ 0 ] = a * ( data[ column ] + data[ 32 + column ] );\n\t\t\t\ttheta[ 3 ] = a * ( data[ column ] - data[ 32 + column ] );\n\n\t\t\t\ttheta[ 1 ] = alpha[ 0 ] + alpha[ 3 ];\n\t\t\t\ttheta[ 2 ] = alpha[ 1 ] - alpha[ 2 ];\n\n\t\t\t\tgamma[ 0 ] = theta[ 0 ] + theta[ 1 ];\n\t\t\t\tgamma[ 1 ] = theta[ 3 ] + theta[ 2 ];\n\t\t\t\tgamma[ 2 ] = theta[ 3 ] - theta[ 2 ];\n\t\t\t\tgamma[ 3 ] = theta[ 0 ] - theta[ 1 ];\n\n\t\t\t\tdata[ 0 + column ] = gamma[ 0 ] + beta[ 0 ];\n\t\t\t\tdata[ 8 + column ] = gamma[ 1 ] + beta[ 1 ];\n\t\t\t\tdata[ 16 + column ] = gamma[ 2 ] + beta[ 2 ];\n\t\t\t\tdata[ 24 + column ] = gamma[ 3 ] + beta[ 3 ];\n\n\t\t\t\tdata[ 32 + column ] = gamma[ 3 ] - beta[ 3 ];\n\t\t\t\tdata[ 40 + column ] = gamma[ 2 ] - beta[ 2 ];\n\t\t\t\tdata[ 48 + column ] = gamma[ 1 ] - beta[ 1 ];\n\t\t\t\tdata[ 56 + column ] = gamma[ 0 ] - beta[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction csc709Inverse( data ) {\n\n\t\t\tfor ( var i = 0; i < 64; ++ i ) {\n\n\t\t\t\tvar y = data[ 0 ][ i ];\n\t\t\t\tvar cb = data[ 1 ][ i ];\n\t\t\t\tvar cr = data[ 2 ][ i ];\n\n\t\t\t\tdata[ 0 ][ i ] = y + 1.5747 * cr;\n\t\t\t\tdata[ 1 ][ i ] = y - 0.1873 * cb - 0.4682 * cr;\n\t\t\t\tdata[ 2 ][ i ] = y + 1.8556 * cb;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction convertToHalf( src, dst, idx ) {\n\n\t\t\tfor ( var i = 0; i < 64; ++ i ) {\n\n\t\t\t\tdst[ idx + i ] = encodeFloat16( toLinear( src[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction toLinear( float ) {\n\n\t\t\tif ( float <= 1 ) {\n\n\t\t\t\treturn Math.sign( float ) * Math.pow( Math.abs( float ), 2.2 );\n\n\t\t\t} else {\n\n\t\t\t\treturn Math.sign( float ) * Math.pow( logBase, Math.abs( float ) - 1.0 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uncompressRAW( info ) {\n\n\t\t\treturn new DataView( info.array.buffer, info.offset.value, info.size );\n\n\t\t}\n\n\t\tfunction uncompressRLE( info ) {\n\n\t\t\tvar compressed = info.viewer.buffer.slice( info.offset.value, info.offset.value + info.size );\n\n\t\t\tvar rawBuffer = new Uint8Array( decodeRunLength( compressed ) );\n\t\t\tvar tmpBuffer = new Uint8Array( rawBuffer.length );\n\n\t\t\tpredictor( rawBuffer ); // revert predictor\n\n\t\t\tinterleaveScalar( rawBuffer, tmpBuffer ); // interleave pixels\n\n\t\t\treturn new DataView( tmpBuffer.buffer );\n\n\t\t}\n\n\t\tfunction uncompressZIP( info ) {\n\n\t\t\tvar compressed = info.array.slice( info.offset.value, info.offset.value + info.size );\n\n\t\t\tif ( typeof Zlib === 'undefined' ) {\n\n\t\t\t\tconsole.error( 'THREE.EXRLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t}\n\n\t\t\tvar inflate = new Zlib.Inflate( compressed, { resize: true, verify: true } ); // eslint-disable-line no-undef\n\n\t\t\tvar rawBuffer = new Uint8Array( inflate.decompress().buffer );\n\t\t\tvar tmpBuffer = new Uint8Array( rawBuffer.length );\n\n\t\t\tpredictor( rawBuffer ); // revert predictor\n\n\t\t\tinterleaveScalar( rawBuffer, tmpBuffer ); // interleave pixels\n\n\t\t\treturn new DataView( tmpBuffer.buffer );\n\n\t\t}\n\n\t\tfunction uncompressPIZ( info ) {\n\n\t\t\tvar inDataView = info.viewer;\n\t\t\tvar inOffset = { value: info.offset.value };\n\n\t\t\tvar tmpBufSize = info.width * scanlineBlockSize * ( EXRHeader.channels.length * info.type );\n\t\t\tvar outBuffer = new Uint16Array( tmpBufSize );\n\t\t\tvar bitmap = new Uint8Array( BITMAP_SIZE );\n\n\t\t\t// Setup channel info\n\t\t\tvar outBufferEnd = 0;\n\t\t\tvar pizChannelData = new Array( info.channels );\n\t\t\tfor ( var i = 0; i < info.channels; i ++ ) {\n\n\t\t\t\tpizChannelData[ i ] = {};\n\t\t\t\tpizChannelData[ i ][ 'start' ] = outBufferEnd;\n\t\t\t\tpizChannelData[ i ][ 'end' ] = pizChannelData[ i ][ 'start' ];\n\t\t\t\tpizChannelData[ i ][ 'nx' ] = info.width;\n\t\t\t\tpizChannelData[ i ][ 'ny' ] = info.lines;\n\t\t\t\tpizChannelData[ i ][ 'size' ] = info.type;\n\n\t\t\t\toutBufferEnd += pizChannelData[ i ].nx * pizChannelData[ i ].ny * pizChannelData[ i ].size;\n\n\t\t\t}\n\n\t\t\t// Read range compression data\n\t\t\tvar minNonZero = parseUint16( inDataView, inOffset );\n\t\t\tvar maxNonZero = parseUint16( inDataView, inOffset );\n\n\t\t\tif ( maxNonZero >= BITMAP_SIZE ) {\n\n\t\t\t\tthrow 'Something is wrong with PIZ_COMPRESSION BITMAP_SIZE';\n\n\t\t\t}\n\n\t\t\tif ( minNonZero <= maxNonZero ) {\n\n\t\t\t\tfor ( var i = 0; i < maxNonZero - minNonZero + 1; i ++ ) {\n\n\t\t\t\t\tbitmap[ i + minNonZero ] = parseUint8( inDataView, inOffset );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Reverse LUT\n\t\t\tvar lut = new Uint16Array( USHORT_RANGE );\n\t\t\treverseLutFromBitmap( bitmap, lut );\n\n\t\t\tvar length = parseUint32( inDataView, inOffset );\n\n\t\t\t// Huffman decoding\n\t\t\thufUncompress( info.array, inDataView, inOffset, length, outBuffer, outBufferEnd );\n\n\t\t\t// Wavelet decoding\n\t\t\tfor ( var i = 0; i < info.channels; ++ i ) {\n\n\t\t\t\tvar cd = pizChannelData[ i ];\n\n\t\t\t\tfor ( var j = 0; j < pizChannelData[ i ].size; ++ j ) {\n\n\t\t\t\t\twav2Decode(\n\t\t\t\t\t\toutBuffer,\n\t\t\t\t\t\tcd.start + j,\n\t\t\t\t\t\tcd.nx,\n\t\t\t\t\t\tcd.size,\n\t\t\t\t\t\tcd.ny,\n\t\t\t\t\t\tcd.nx * cd.size\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Expand the pixel data to their original range\n\t\t\tapplyLut( lut, outBuffer, outBufferEnd );\n\n\t\t\t// Rearrange the pixel data into the format expected by the caller.\n\t\t\tvar tmpOffset = 0;\n\t\t\tvar tmpBuffer = new Uint8Array( outBuffer.buffer.byteLength );\n\t\t\tfor ( var y = 0; y < info.lines; y ++ ) {\n\n\t\t\t\tfor ( var c = 0; c < info.channels; c ++ ) {\n\n\t\t\t\t\tvar cd = pizChannelData[ c ];\n\n\t\t\t\t\tvar n = cd.nx * cd.size;\n\t\t\t\t\tvar cp = new Uint8Array( outBuffer.buffer, cd.end * INT16_SIZE, n * INT16_SIZE );\n\n\t\t\t\t\ttmpBuffer.set( cp, tmpOffset );\n\t\t\t\t\ttmpOffset += n * INT16_SIZE;\n\t\t\t\t\tcd.end += n;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new DataView( tmpBuffer.buffer );\n\n\t\t}\n\n\t\tfunction uncompressDWA( info ) {\n\n\t\t\tvar inDataView = info.viewer;\n\t\t\tvar inOffset = { value: info.offset.value };\n\t\t\tvar outBuffer = new Uint8Array( info.width * info.lines * ( EXRHeader.channels.length * info.type * INT16_SIZE ) );\n\n\t\t\t// Read compression header information\n\t\t\tvar dwaHeader = {\n\n\t\t\t\tversion: parseInt64( inDataView, inOffset ),\n\t\t\t\tunknownUncompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\tunknownCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\tacCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\tdcCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\trleCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\trleUncompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\trleRawSize: parseInt64( inDataView, inOffset ),\n\t\t\t\ttotalAcUncompressedCount: parseInt64( inDataView, inOffset ),\n\t\t\t\ttotalDcUncompressedCount: parseInt64( inDataView, inOffset ),\n\t\t\t\tacCompression: parseInt64( inDataView, inOffset )\n\n\t\t\t};\n\n\t\t\tif ( dwaHeader.version < 2 )\n\t\t\t\tthrow 'EXRLoader.parse: ' + EXRHeader.compression + ' version ' + dwaHeader.version + ' is unsupported';\n\n\t\t\t// Read channel ruleset information\n\t\t\tvar channelRules = new Array();\n\t\t\tvar ruleSize = parseUint16( inDataView, inOffset ) - INT16_SIZE;\n\n\t\t\twhile ( ruleSize > 0 ) {\n\n\t\t\t\tvar name = parseNullTerminatedString( inDataView.buffer, inOffset );\n\t\t\t\tvar value = parseUint8( inDataView, inOffset );\n\t\t\t\tvar compression = ( value >> 2 ) & 3;\n\t\t\t\tvar csc = ( value >> 4 ) - 1;\n\t\t\t\tvar index = new Int8Array( [ csc ] )[ 0 ];\n\t\t\t\tvar type = parseUint8( inDataView, inOffset );\n\n\t\t\t\tchannelRules.push( {\n\t\t\t\t\tname: name,\n\t\t\t\t\tindex: index,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tcompression: compression,\n\t\t\t\t} );\n\n\t\t\t\truleSize -= name.length + 3;\n\n\t\t\t}\n\n\t\t\t// Classify channels\n\t\t\tvar channels = EXRHeader.channels;\n\t\t\tvar channelData = new Array( info.channels );\n\n\t\t\tfor ( var i = 0; i < info.channels; ++ i ) {\n\n\t\t\t\tvar cd = channelData[ i ] = {};\n\t\t\t\tvar channel = channels[ i ];\n\n\t\t\t\tcd.name = channel.name;\n\t\t\t\tcd.compression = UNKNOWN;\n\t\t\t\tcd.decoded = false;\n\t\t\t\tcd.type = channel.pixelType;\n\t\t\t\tcd.pLinear = channel.pLinear;\n\t\t\t\tcd.width = info.width;\n\t\t\t\tcd.height = info.lines;\n\n\t\t\t}\n\n\t\t\tvar cscSet = {\n\t\t\t\tidx: new Array( 3 )\n\t\t\t};\n\n\t\t\tfor ( var offset = 0; offset < info.channels; ++ offset ) {\n\n\t\t\t\tvar cd = channelData[ offset ];\n\n\t\t\t\tfor ( var i = 0; i < channelRules.length; ++ i ) {\n\n\t\t\t\t\tvar rule = channelRules[ i ];\n\n\t\t\t\t\tif ( cd.name == rule.name ) {\n\n\t\t\t\t\t\tcd.compression = rule.compression;\n\n\t\t\t\t\t\tif ( rule.index >= 0 ) {\n\n\t\t\t\t\t\t\tcscSet.idx[ rule.index ] = offset;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcd.offset = offset;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Read DCT - AC component data\n\t\t\tif ( dwaHeader.acCompressedSize > 0 ) {\n\n\t\t\t\tswitch ( dwaHeader.acCompression ) {\n\n\t\t\t\t\tcase STATIC_HUFFMAN:\n\n\t\t\t\t\t\tvar acBuffer = new Uint16Array( dwaHeader.totalAcUncompressedCount );\n\t\t\t\t\t\thufUncompress( info.array, inDataView, inOffset, dwaHeader.acCompressedSize, acBuffer, dwaHeader.totalAcUncompressedCount );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase DEFLATE:\n\n\t\t\t\t\t\tvar compressed = info.array.slice( inOffset.value, inOffset.value + dwaHeader.totalAcUncompressedCount );\n\t\t\t\t\t\tvar inflate = new Zlib.Inflate( compressed, { resize: true, verify: true } );\n\t\t\t\t\t\tvar acBuffer = new Uint16Array( inflate.decompress().buffer );\n\t\t\t\t\t\tinOffset.value += dwaHeader.totalAcUncompressedCount;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\t// Read DCT - DC component data\n\t\t\tif ( dwaHeader.dcCompressedSize > 0 ) {\n\n\t\t\t\tvar zlibInfo = {\n\t\t\t\t\tarray: info.array,\n\t\t\t\t\toffset: inOffset,\n\t\t\t\t\tsize: dwaHeader.dcCompressedSize\n\t\t\t\t};\n\t\t\t\tvar dcBuffer = new Uint16Array( uncompressZIP( zlibInfo ).buffer );\n\t\t\t\tinOffset.value += dwaHeader.dcCompressedSize;\n\n\t\t\t}\n\n\t\t\t// Read RLE compressed data\n\t\t\tif ( dwaHeader.rleRawSize > 0 ) {\n\n\t\t\t\tvar compressed = info.array.slice( inOffset.value, inOffset.value + dwaHeader.rleCompressedSize );\n\t\t\t\tvar inflate = new Zlib.Inflate( compressed, { resize: true, verify: true } );\n\t\t\t\tvar rleBuffer = decodeRunLength( inflate.decompress().buffer );\n\n\t\t\t\tinOffset.value += dwaHeader.rleCompressedSize;\n\n\t\t\t}\n\n\t\t\t// Prepare outbuffer data offset\n\t\t\tvar outBufferEnd = 0;\n\t\t\tvar rowOffsets = new Array( channelData.length );\n\t\t\tfor ( var i = 0; i < rowOffsets.length; ++ i ) {\n\n\t\t\t\trowOffsets[ i ] = new Array();\n\n\t\t\t}\n\n\t\t\tfor ( var y = 0; y < info.lines; ++ y ) {\n\n\t\t\t\tfor ( var chan = 0; chan < channelData.length; ++ chan ) {\n\n\t\t\t\t\trowOffsets[ chan ].push( outBufferEnd );\n\t\t\t\t\toutBufferEnd += channelData[ chan ].width * info.type * INT16_SIZE;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Lossy DCT decode RGB channels\n\t\t\tlossyDctDecode( cscSet, rowOffsets, channelData, acBuffer, dcBuffer, outBuffer );\n\n\t\t\t// Decode other channels\n\t\t\tfor ( var i = 0; i < channelData.length; ++ i ) {\n\n\t\t\t\tvar cd = channelData[ i ];\n\n\t\t\t\tif ( cd.decoded ) continue;\n\n\t\t\t\tswitch ( cd.compression ) {\n\n\t\t\t\t\tcase RLE:\n\n\t\t\t\t\t\tvar row = 0;\n\t\t\t\t\t\tvar rleOffset = 0;\n\n\t\t\t\t\t\tfor ( var y = 0; y < info.lines; ++ y ) {\n\n\t\t\t\t\t\t\tvar rowOffsetBytes = rowOffsets[ i ][ row ];\n\n\t\t\t\t\t\t\tfor ( var x = 0; x < cd.width; ++ x ) {\n\n\t\t\t\t\t\t\t\tfor ( var byte = 0; byte < INT16_SIZE * cd.type; ++ byte ) {\n\n\t\t\t\t\t\t\t\t\toutBuffer[ rowOffsetBytes ++ ] = rleBuffer[ rleOffset + byte * cd.width * cd.height ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\trleOffset ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trow ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase LOSSY_DCT: // skip\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow 'EXRLoader.parse: unsupported channel compression';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new DataView( outBuffer.buffer );\n\n\t\t}\n\n\t\tfunction parseNullTerminatedString( buffer, offset ) {\n\n\t\t\tvar uintBuffer = new Uint8Array( buffer );\n\t\t\tvar endOffset = 0;\n\n\t\t\twhile ( uintBuffer[ offset.value + endOffset ] != 0 ) {\n\n\t\t\t\tendOffset += 1;\n\n\t\t\t}\n\n\t\t\tvar stringValue = new TextDecoder().decode(\n\t\t\t\tuintBuffer.slice( offset.value, offset.value + endOffset )\n\t\t\t);\n\n\t\t\toffset.value = offset.value + endOffset + 1;\n\n\t\t\treturn stringValue;\n\n\t\t}\n\n\t\tfunction parseFixedLengthString( buffer, offset, size ) {\n\n\t\t\tvar stringValue = new TextDecoder().decode(\n\t\t\t\tnew Uint8Array( buffer ).slice( offset.value, offset.value + size )\n\t\t\t);\n\n\t\t\toffset.value = offset.value + size;\n\n\t\t\treturn stringValue;\n\n\t\t}\n\n\t\tfunction parseUlong( dataView, offset ) {\n\n\t\t\tvar uLong = dataView.getUint32( 0, true );\n\n\t\t\toffset.value = offset.value + ULONG_SIZE;\n\n\t\t\treturn uLong;\n\n\t\t}\n\n\t\tfunction parseUint32( dataView, offset ) {\n\n\t\t\tvar Uint32 = dataView.getUint32( offset.value, true );\n\n\t\t\toffset.value = offset.value + INT32_SIZE;\n\n\t\t\treturn Uint32;\n\n\t\t}\n\n\t\tfunction parseUint8Array( uInt8Array, offset ) {\n\n\t\t\tvar Uint8 = uInt8Array[ offset.value ];\n\n\t\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\t\treturn Uint8;\n\n\t\t}\n\n\t\tfunction parseUint8( dataView, offset ) {\n\n\t\t\tvar Uint8 = dataView.getUint8( offset.value );\n\n\t\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\t\treturn Uint8;\n\n\t\t}\n\n\t\tfunction parseInt64( dataView, offset ) {\n\n\t\t\tvar int = Number( dataView.getBigInt64( offset.value, true ) );\n\n\t\t\toffset.value += ULONG_SIZE;\n\n\t\t\treturn int;\n\n\t\t}\n\n\t\tfunction parseFloat32( dataView, offset ) {\n\n\t\t\tvar float = dataView.getFloat32( offset.value, true );\n\n\t\t\toffset.value += FLOAT32_SIZE;\n\n\t\t\treturn float;\n\n\t\t}\n\n\t\t// https://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript\n\t\tfunction decodeFloat16( binary ) {\n\n\t\t\tvar exponent = ( binary & 0x7C00 ) >> 10,\n\t\t\t\tfraction = binary & 0x03FF;\n\n\t\t\treturn ( binary >> 15 ? - 1 : 1 ) * (\n\t\t\t\texponent ?\n\t\t\t\t\t(\n\t\t\t\t\t\texponent === 0x1F ?\n\t\t\t\t\t\t\tfraction ? NaN : Infinity :\n\t\t\t\t\t\t\tMath.pow( 2, exponent - 15 ) * ( 1 + fraction / 0x400 )\n\t\t\t\t\t) :\n\t\t\t\t\t6.103515625e-5 * ( fraction / 0x400 )\n\t\t\t);\n\n\t\t}\n\n\t\tvar encodeFloat16 = ( function () {\n\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\tvar floatView = new Float32Array( 1 );\n\t\t\tvar int32View = new Int32Array( floatView.buffer );\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t * by James Tursa?s half-precision code. */\n\t\t\treturn function toHalf( val ) {\n\n\t\t\t\tfloatView[ 0 ] = val;\n\t\t\t\tvar x = int32View[ 0 ];\n\n\t\t\t\tvar bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\t\t\tvar m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\t\t\tvar e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t * half, return signed zero. */\n\t\t\t\tif ( e < 103 ) return bits;\n\n\t\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\t\t\tif ( e > 142 ) {\n\n\t\t\t\t\tbits |= 0x7c00;\n\t\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\t/* If exponent underflows but not too much, return a denormal */\n\t\t\t\tif ( e < 113 ) {\n\n\t\t\t\t\tm |= 0x0800;\n\t\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t * to 1, which is OK. */\n\t\t\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t * the exponent, which is OK. */\n\t\t\t\tbits += m & 1;\n\t\t\t\treturn bits;\n\n\t\t\t};\n\n\t\t} )();\n\n\t\tfunction parseUint16( dataView, offset ) {\n\n\t\t\tvar Uint16 = dataView.getUint16( offset.value, true );\n\n\t\t\toffset.value += INT16_SIZE;\n\n\t\t\treturn Uint16;\n\n\t\t}\n\n\t\tfunction parseFloat16( buffer, offset ) {\n\n\t\t\treturn decodeFloat16( parseUint16( buffer, offset ) );\n\n\t\t}\n\n\t\tfunction parseChlist( dataView, buffer, offset, size ) {\n\n\t\t\tvar startOffset = offset.value;\n\t\t\tvar channels = [];\n\n\t\t\twhile ( offset.value < ( startOffset + size - 1 ) ) {\n\n\t\t\t\tvar name = parseNullTerminatedString( buffer, offset );\n\t\t\t\tvar pixelType = parseUint32( dataView, offset ); // TODO: Cast this to UINT, HALF or FLOAT\n\t\t\t\tvar pLinear = parseUint8( dataView, offset );\n\t\t\t\toffset.value += 3; // reserved, three chars\n\t\t\t\tvar xSampling = parseUint32( dataView, offset );\n\t\t\t\tvar ySampling = parseUint32( dataView, offset );\n\n\t\t\t\tchannels.push( {\n\t\t\t\t\tname: name,\n\t\t\t\t\tpixelType: pixelType,\n\t\t\t\t\tpLinear: pLinear,\n\t\t\t\t\txSampling: xSampling,\n\t\t\t\t\tySampling: ySampling\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\toffset.value += 1;\n\n\t\t\treturn channels;\n\n\t\t}\n\n\t\tfunction parseChromaticities( dataView, offset ) {\n\n\t\t\tvar redX = parseFloat32( dataView, offset );\n\t\t\tvar redY = parseFloat32( dataView, offset );\n\t\t\tvar greenX = parseFloat32( dataView, offset );\n\t\t\tvar greenY = parseFloat32( dataView, offset );\n\t\t\tvar blueX = parseFloat32( dataView, offset );\n\t\t\tvar blueY = parseFloat32( dataView, offset );\n\t\t\tvar whiteX = parseFloat32( dataView, offset );\n\t\t\tvar whiteY = parseFloat32( dataView, offset );\n\n\t\t\treturn { redX: redX, redY: redY, greenX: greenX, greenY: greenY, blueX: blueX, blueY: blueY, whiteX: whiteX, whiteY: whiteY };\n\n\t\t}\n\n\t\tfunction parseCompression( dataView, offset ) {\n\n\t\t\tvar compressionCodes = [\n\t\t\t\t'NO_COMPRESSION',\n\t\t\t\t'RLE_COMPRESSION',\n\t\t\t\t'ZIPS_COMPRESSION',\n\t\t\t\t'ZIP_COMPRESSION',\n\t\t\t\t'PIZ_COMPRESSION',\n\t\t\t\t'PXR24_COMPRESSION',\n\t\t\t\t'B44_COMPRESSION',\n\t\t\t\t'B44A_COMPRESSION',\n\t\t\t\t'DWAA_COMPRESSION',\n\t\t\t\t'DWAB_COMPRESSION'\n\t\t\t];\n\n\t\t\tvar compression = parseUint8( dataView, offset );\n\n\t\t\treturn compressionCodes[ compression ];\n\n\t\t}\n\n\t\tfunction parseBox2i( dataView, offset ) {\n\n\t\t\tvar xMin = parseUint32( dataView, offset );\n\t\t\tvar yMin = parseUint32( dataView, offset );\n\t\t\tvar xMax = parseUint32( dataView, offset );\n\t\t\tvar yMax = parseUint32( dataView, offset );\n\n\t\t\treturn { xMin: xMin, yMin: yMin, xMax: xMax, yMax: yMax };\n\n\t\t}\n\n\t\tfunction parseLineOrder( dataView, offset ) {\n\n\t\t\tvar lineOrders = [\n\t\t\t\t'INCREASING_Y'\n\t\t\t];\n\n\t\t\tvar lineOrder = parseUint8( dataView, offset );\n\n\t\t\treturn lineOrders[ lineOrder ];\n\n\t\t}\n\n\t\tfunction parseV2f( dataView, offset ) {\n\n\t\t\tvar x = parseFloat32( dataView, offset );\n\t\t\tvar y = parseFloat32( dataView, offset );\n\n\t\t\treturn [ x, y ];\n\n\t\t}\n\n\t\tfunction parseValue( dataView, buffer, offset, type, size ) {\n\n\t\t\tif ( type === 'string' || type === 'stringvector' || type === 'iccProfile' ) {\n\n\t\t\t\treturn parseFixedLengthString( buffer, offset, size );\n\n\t\t\t} else if ( type === 'chlist' ) {\n\n\t\t\t\treturn parseChlist( dataView, buffer, offset, size );\n\n\t\t\t} else if ( type === 'chromaticities' ) {\n\n\t\t\t\treturn parseChromaticities( dataView, offset );\n\n\t\t\t} else if ( type === 'compression' ) {\n\n\t\t\t\treturn parseCompression( dataView, offset );\n\n\t\t\t} else if ( type === 'box2i' ) {\n\n\t\t\t\treturn parseBox2i( dataView, offset );\n\n\t\t\t} else if ( type === 'lineOrder' ) {\n\n\t\t\t\treturn parseLineOrder( dataView, offset );\n\n\t\t\t} else if ( type === 'float' ) {\n\n\t\t\t\treturn parseFloat32( dataView, offset );\n\n\t\t\t} else if ( type === 'v2f' ) {\n\n\t\t\t\treturn parseV2f( dataView, offset );\n\n\t\t\t} else if ( type === 'int' ) {\n\n\t\t\t\treturn parseUint32( dataView, offset );\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Cannot parse value for unsupported type: ' + type;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bufferDataView = new DataView( buffer );\n\t\tvar uInt8Array = new Uint8Array( buffer );\n\n\t\tvar EXRHeader = {};\n\n\t\tbufferDataView.getUint32( 0, true ); // magic\n\t\tbufferDataView.getUint8( 4, true ); // versionByteZero\n\t\tbufferDataView.getUint8( 5, true ); // fullMask\n\n\t\t// start of header\n\n\t\tvar offset = { value: 8 }; // start at 8, after magic stuff\n\n\t\tvar keepReading = true;\n\n\t\twhile ( keepReading ) {\n\n\t\t\tvar attributeName = parseNullTerminatedString( buffer, offset );\n\n\t\t\tif ( attributeName == 0 ) {\n\n\t\t\t\tkeepReading = false;\n\n\t\t\t} else {\n\n\t\t\t\tvar attributeType = parseNullTerminatedString( buffer, offset );\n\t\t\t\tvar attributeSize = parseUint32( bufferDataView, offset );\n\t\t\t\tvar attributeValue = parseValue( bufferDataView, buffer, offset, attributeType, attributeSize );\n\n\t\t\t\tEXRHeader[ attributeName ] = attributeValue;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// offsets\n\t\tvar dataWindowHeight = EXRHeader.dataWindow.yMax + 1;\n\n\t\tvar uncompress;\n\t\tvar scanlineBlockSize;\n\n\t\tswitch ( EXRHeader.compression ) {\n\n\t\t\tcase 'NO_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 1;\n\t\t\t\tuncompress = uncompressRAW;\n\t\t\t\tbreak;\n\n\t\t\tcase 'RLE_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 1;\n\t\t\t\tuncompress = uncompressRLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZIPS_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 1;\n\t\t\t\tuncompress = uncompressZIP;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZIP_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 16;\n\t\t\t\tuncompress = uncompressZIP;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PIZ_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 32;\n\t\t\t\tuncompress = uncompressPIZ;\n\t\t\t\tbreak;\n\n\t\t\tcase 'DWAA_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 32;\n\t\t\t\tuncompress = uncompressDWA;\n\t\t\t\tbreak;\n\n\t\t\tcase 'DWAB_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 256;\n\t\t\t\tuncompress = uncompressDWA;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow 'EXRLoader.parse: ' + EXRHeader.compression + ' is unsupported';\n\n\t\t}\n\n\t\tvar size_t;\n\t\tvar getValue;\n\n\t\t// mixed pixelType not supported\n\t\tvar pixelType = EXRHeader.channels[ 0 ].pixelType;\n\n\t\tif ( pixelType === 1 ) { // half\n\n\t\t\tswitch ( this.type ) {\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\tgetValue = parseFloat16;\n\t\t\t\t\tsize_t = INT16_SIZE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\tgetValue = parseUint16;\n\t\t\t\t\tsize_t = INT16_SIZE;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( pixelType === 2 ) { // float\n\n\t\t\tswitch ( this.type ) {\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\tgetValue = parseFloat32;\n\t\t\t\t\tsize_t = FLOAT32_SIZE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\tthrow 'EXRLoader.parse: unsupported HalfFloatType texture for FloatType image file.';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow 'EXRLoader.parse: unsupported pixelType ' + pixelType + ' for ' + EXRHeader.compression + '.';\n\n\t\t}\n\n\t\tvar numBlocks = dataWindowHeight / scanlineBlockSize;\n\n\t\tfor ( var i = 0; i < numBlocks; i ++ ) {\n\n\t\t\tparseUlong( bufferDataView, offset ); // scanlineOffset\n\n\t\t}\n\n\t\t// we should be passed the scanline offset table, start reading pixel data\n\n\t\tvar width = EXRHeader.dataWindow.xMax - EXRHeader.dataWindow.xMin + 1;\n\t\tvar height = EXRHeader.dataWindow.yMax - EXRHeader.dataWindow.yMin + 1;\n\t\t// Firefox only supports RGBA (half) float textures\n\t\t// var numChannels = EXRHeader.channels.length;\n\t\tvar numChannels = 4;\n\t\tvar size = width * height * numChannels;\n\n\t\t// Fill initially with 1s for the alpha value if the texture is not RGBA, RGB values will be overwritten\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tvar byteArray = new Float32Array( size );\n\n\t\t\t\tif ( EXRHeader.channels.length < numChannels ) {\n\n\t\t\t\t\tbyteArray.fill( 1, 0, size );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tvar byteArray = new Uint16Array( size );\n\n\t\t\t\tif ( EXRHeader.channels.length < numChannels ) {\n\n\t\t\t\t\tbyteArray.fill( 0x3C00, 0, size ); // Uint16Array holds half float data, 0x3C00 is 1\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.error( 'THREE.EXRLoader: unsupported type: ', this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tvar channelOffsets = {\n\t\t\tR: 0,\n\t\t\tG: 1,\n\t\t\tB: 2,\n\t\t\tA: 3\n\t\t};\n\n\t\tvar compressionInfo = {\n\n\t\t\tsize: 0,\n\t\t\twidth: width,\n\t\t\tlines: scanlineBlockSize,\n\n\t\t\toffset: offset,\n\t\t\tarray: uInt8Array,\n\t\t\tviewer: bufferDataView,\n\n\t\t\ttype: pixelType,\n\t\t\tchannels: EXRHeader.channels.length,\n\n\t\t};\n\n\t\tvar line;\n\t\tvar size;\n\t\tvar viewer;\n\t\tvar tmpOffset = { value: 0 };\n\n\t\tfor ( var scanlineBlockIdx = 0; scanlineBlockIdx < height / scanlineBlockSize; scanlineBlockIdx ++ ) {\n\n\t\t\tline = parseUint32( bufferDataView, offset ); // line_no\n\t\t\tsize = parseUint32( bufferDataView, offset ); // data_len\n\n\t\t\tcompressionInfo.lines = ( line + scanlineBlockSize > height ) ? height - line : scanlineBlockSize;\n\t\t\tcompressionInfo.offset = offset;\n\t\t\tcompressionInfo.size = size;\n\n\t\t\tviewer = uncompress( compressionInfo );\n\n\t\t\toffset.value += size;\n\n\t\t\tfor ( var line_y = 0; line_y < scanlineBlockSize; line_y ++ ) {\n\n\t\t\t\tvar true_y = line_y + ( scanlineBlockIdx * scanlineBlockSize );\n\n\t\t\t\tif ( true_y >= height ) break;\n\n\t\t\t\tfor ( var channelID = 0; channelID < EXRHeader.channels.length; channelID ++ ) {\n\n\t\t\t\t\tvar cOff = channelOffsets[ EXRHeader.channels[ channelID ].name ];\n\n\t\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\t\tvar idx = ( line_y * ( EXRHeader.channels.length * width ) ) + ( channelID * width ) + x;\n\t\t\t\t\t\ttmpOffset.value = idx * size_t;\n\n\t\t\t\t\t\tvar val = getValue( viewer, tmpOffset );\n\n\t\t\t\t\t\tbyteArray[ ( ( ( height - 1 - true_y ) * ( width * numChannels ) ) + ( x * numChannels ) ) + cOff ] = val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\theader: EXRHeader,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdata: byteArray,\n\t\t\tformat: numChannels === 4 ? RGBAFormat : RGBFormat,\n\t\t\ttype: this.type\n\t\t};\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { EXRLoader };\n"],"sourceRoot":""}