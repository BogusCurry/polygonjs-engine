{"version":3,"sources":["webpack://POLY/webpack/bootstrap","webpack://POLY/./src/engine/nodes/utils/params/ParamsConfig.ts","webpack://POLY/./src/engine/nodes/sop/_Base.ts","webpack://POLY/./src/engine/nodes/utils/connections/ConnectionPointType.ts","webpack://POLY/./src/engine/poly/InputCloneMode.ts","webpack://POLY/./src/engine/poly/ParamType.ts","webpack://POLY/./src/engine/poly/NodeContext.ts","webpack://POLY/./src/core/ThreeToGl.ts","webpack://POLY/./src/engine/nodes/gl/utils/GLDefinition.ts","webpack://POLY/./src/engine/nodes/utils/connections/NamedConnectionPoint.ts","webpack://POLY/./src/engine/nodes/gl/_Base.ts","webpack://POLY/./src/core/geometry/Constant.ts","webpack://POLY/./src/engine/nodes/gl/_BaseMathFunction.ts","webpack://POLY/./src/core/String.ts","webpack://POLY/./src/engine/nodes/utils/shaders/ShaderName.ts","webpack://POLY/./src/core/geometry/Geometry.ts","webpack://POLY/./src/engine/poly/NodeEvent.ts","webpack://POLY/./src/engine/expressions/methods/_Base.ts","webpack://POLY/./src/engine/Poly.ts","webpack://POLY/./src/core/graph/CoreGraphNode.ts","webpack://POLY/./src/engine/nodes/mat/_Base.ts","webpack://POLY/./src/engine/nodes/obj/_Base.ts","webpack://POLY/./modules/three/examples/jsm/postprocessing/Pass.js","webpack://POLY/./src/engine/nodes/obj/utils/TransformController.ts","webpack://POLY/./src/core/Transform.ts","webpack://POLY/./src/engine/nodes/_Base.ts","webpack://POLY/./src/engine/params/_Base.ts","webpack://POLY/./src/engine/nodes/utils/FlagsController.ts","webpack://POLY/./src/engine/nodes/gl/gl/quaternion.glsl","webpack://POLY/./src/core/Walker.ts","webpack://POLY/./src/engine/poly/ParamEvent.ts","webpack://POLY/./src/core/math/_Module.ts","webpack://POLY/./src/engine/nodes/mat/utils/SideController.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/_BaseMaterial.ts","webpack://POLY/./src/engine/nodes/utils/ContainerController.ts","webpack://POLY/./src/core/geometry/Attribute.ts","webpack://POLY/./src/engine/containers/_Base.ts","webpack://POLY/./src/engine/nodes/mat/utils/SkinningController.ts","webpack://POLY/./src/engine/nodes/mat/utils/TextureMapController.ts","webpack://POLY/./src/engine/nodes/mat/utils/TextureAlphaMapController.ts","webpack://POLY/./src/engine/params/Ramp.ts","webpack://POLY/./src/core/MapUtils.ts","webpack://POLY/./src/engine/poly/registers/Category.ts","webpack://POLY/./src/engine/nodes/cop/_Base.ts","webpack://POLY/./src/engine/nodes/gl/code/Controller.ts","webpack://POLY/./src/engine/nodes/gl/code/globals/Geometry.ts","webpack://POLY/./src/engine/nodes/gl/utils/ConnectionsController.ts","webpack://POLY/./src/engine/nodes/cop/File.ts","webpack://POLY/./src/engine/nodes/obj/utils/cameras/background/_BaseController.ts","webpack://POLY/./src/engine/params/_Multiple.ts","webpack://POLY/./src/engine/io/json/export/Param.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/_Base.ts","webpack://POLY/./src/engine/nodes/mat/utils/_BaseController.ts","webpack://POLY/./src/core/geometry/Material.ts","webpack://POLY/./src/engine/nodes/event/_Base.ts","webpack://POLY/./src/engine/params/_Numeric.ts","webpack://POLY/./src/engine/poly/Assert.ts","webpack://POLY/./src/engine/io/json/import/Param.ts","webpack://POLY/./src/engine/nodes/gl/code/configs/ShaderConfig.ts","webpack://POLY/./src/engine/nodes/gl/code/configs/VariableConfig.ts","webpack://POLY/./src/engine/nodes/utils/code/controllers/ParamConfigsController.ts","webpack://POLY/./src/engine/nodes/mat/utils/ColorsController.ts","webpack://POLY/./src/engine/nodes/mat/utils/UniformsColorsController.ts","webpack://POLY/./src/engine/nodes/mat/_BaseBuilder.ts","webpack://POLY/./src/engine/nodes/obj/_BaseLightTransformed.ts","webpack://POLY/./src/engine/nodes/obj/utils/helpers/_BaseLightHelper.ts","webpack://POLY/./src/engine/nodes/obj/utils/HelperController.ts","webpack://POLY/./src/engine/nodes/obj/_BaseManager.ts","webpack://POLY/./src/engine/nodes/obj/utils/LayersController.ts","webpack://POLY/./src/engine/nodes/obj/utils/cameras/PostProcessController.ts","webpack://POLY/./src/engine/nodes/utils/NameController.ts","webpack://POLY/./src/engine/params/utils/OptionsController.ts","webpack://POLY/./src/engine/expressions/traversers/_Base.ts","webpack://POLY/./src/core/AsyncFunction.ts","webpack://POLY/./src/engine/params/String.ts","webpack://POLY/./src/engine/nodes/gl/Attribute.ts","webpack://POLY/./src/engine/io/json/export/Dispatcher.ts","webpack://POLY/./src/engine/io/json/export/Scene.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/LineType.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/NodeFinder.ts","webpack://POLY/./src/engine/nodes/event/CameraOrbitControls.ts","webpack://POLY/./src/engine/nodes/mat/utils/_BaseTextureController.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/_BaseMesh.ts","webpack://POLY/./src/engine/nodes/obj/_BaseLight.ts","webpack://POLY/./src/core/geometry/Object.ts","webpack://POLY/./modules/three/examples/jsm/utils/BufferGeometryUtils.js","webpack://POLY/./src/engine/nodes/gl/code/globals/Texture.ts","webpack://POLY/./src/core/geometry/util/Curve.ts","webpack://POLY/./src/engine/scene/PolyScene.ts","webpack://POLY/./src/engine/nodes/event/MouseEvent.ts","webpack://POLY/./src/engine/nodes/utils/states/Base.ts","webpack://POLY/./src/engine/nodes/utils/Serializer.ts","webpack://POLY/./src/engine/params/types/ParamConstructorByType.ts","webpack://POLY/./src/engine/params/utils/ExpressionController.ts","webpack://POLY/./src/engine/expressions/traversers/ParsedTree.ts","webpack://POLY/./src/core/DecomposedPath.ts","webpack://POLY/./src/core/math/Easing.ts","webpack://POLY/./src/engine/params/Float.ts","webpack://POLY/./src/engine/params/OperatorPath.ts","webpack://POLY/./src/engine/scene/utils/events/MouseEventsController.ts","webpack://POLY/./src/engine/io/json/import/Dispatcher.ts","webpack://POLY/./src/engine/nodes/utils/flags/Base.ts","webpack://POLY/./src/engine/nodes/gl/code/globals/_Base.ts","webpack://POLY/./src/engine/nodes/gl/utils/GLDefinitionCollection.ts","webpack://POLY/./src/engine/nodes/utils/shaders/NodeTraverser.ts","webpack://POLY/./src/engine/nodes/gl/Globals.ts","webpack://POLY/./modules/three/examples/jsm/controls/OrbitControls.js","webpack://POLY/./src/engine/nodes/utils/code/controllers/TranspiledFilter.ts","webpack://POLY/./src/engine/nodes/gl/_BaseAdaptive.ts","webpack://POLY/./src/engine/nodes/gl/_Math_Arg2.ts","webpack://POLY/./src/engine/nodes/gl/Constant.ts","webpack://POLY/./src/engine/nodes/gl/_Math_Arg3.ts","webpack://POLY/./src/engine/nodes/gl/gl/fit.glsl","webpack://POLY/./src/engine/nodes/gl/code/templates/CustomMeshDepthDOF.frag.glsl","webpack://POLY/./src/engine/nodes/mat/MeshStandard.ts","webpack://POLY/./src/engine/nodes/mat/utils/TextureEnvMapController.ts","webpack://POLY/./src/engine/nodes/mat/PointsBuilder.ts","webpack://POLY/./src/engine/nodes/obj/_BaseCamera.ts","webpack://POLY/./src/core/geometry/Group.ts","webpack://POLY/./src/core/geometry/Point.ts","webpack://POLY/./src/core/geometry/Entity.ts","webpack://POLY/./src/core/Iterator.ts","webpack://POLY/./src/core/geometry/util/Circle.ts","webpack://POLY/./src/core/geometry/Instancer.ts","webpack://POLY/./src/core/loader/geometry/JsonData.ts","webpack://POLY/./modules/three/examples/jsm/loaders/GLTFLoader.js","webpack://POLY/./modules/three/examples/jsm/loaders/DRACOLoader.js","webpack://POLY/./src/core/geometry/operation/Skin.ts","webpack://POLY/./src/engine/index.ts","webpack://POLY/./src/engine/io/json/import/Scene.ts","webpack://POLY/./src/engine/scene/utils/CamerasController.ts","webpack://POLY/./src/engine/scene/utils/Cooker.ts","webpack://POLY/./src/core/graph/CoreGraph.ts","webpack://POLY/./src/engine/scene/utils/CookController.ts","webpack://POLY/./src/engine/scene/utils/DispatchController.ts","webpack://POLY/./src/engine/poly/RenderersController.ts","webpack://POLY/./src/engine/poly/NodesRegister.ts","webpack://POLY/./src/engine/scene/utils/events/EventsController.ts","webpack://POLY/./src/core/graph/DirtyController.ts","webpack://POLY/./src/engine/nodes/utils/UIData.ts","webpack://POLY/./src/engine/nodes/utils/StatesController.ts","webpack://POLY/./src/engine/nodes/utils/states/TimeDependent.ts","webpack://POLY/./src/engine/nodes/utils/states/Error.ts","webpack://POLY/./src/engine/nodes/utils/hierarchy/ParentController.ts","webpack://POLY/./src/engine/nodes/utils/hierarchy/ChildrenController.ts","webpack://POLY/./src/core/NodeSelection.ts","webpack://POLY/./src/engine/nodes/utils/LifeCycleController.ts","webpack://POLY/./src/engine/nodes/utils/CookController.ts","webpack://POLY/./src/engine/nodes/utils/DependenciesController.ts","webpack://POLY/./src/engine/params/utils/EmitController.ts","webpack://POLY/./src/engine/params/utils/Serializer.ts","webpack://POLY/./src/engine/params/utils/StatesController.ts","webpack://POLY/./src/engine/params/utils/states/TimeDependent.ts","webpack://POLY/./src/engine/params/utils/states/Error.ts","webpack://POLY/./src/engine/nodes/utils/params/ParamsController.ts","webpack://POLY/./src/engine/params/Boolean.ts","webpack://POLY/./src/engine/expressions/ExpressionManager.ts","webpack://POLY/./src/engine/expressions/traversers/FunctionGenerator.ts","webpack://POLY/./src/engine/expressions/LiteralConstructsController.ts","webpack://POLY/./src/engine/expressions/methods/_Module.ts","webpack://POLY/./src/engine/expressions/methods/bbox.ts","webpack://POLY/./src/engine/expressions/MethodDependency.ts","webpack://POLY/./src/engine/expressions/methods/centroid.ts","webpack://POLY/./src/engine/expressions/methods/ch.ts","webpack://POLY/./src/engine/expressions/methods/copy.ts","webpack://POLY/./src/engine/expressions/methods/cop_res.ts","webpack://POLY/./src/engine/expressions/methods/local.ts","webpack://POLY/./src/engine/expressions/methods/opdigits.ts","webpack://POLY/./src/engine/expressions/methods/point.ts","webpack://POLY/./src/engine/expressions/methods/points_count.ts","webpack://POLY/./src/engine/expressions/methods/str_chars_count.ts","webpack://POLY/./src/engine/expressions/methods/str_concat.ts","webpack://POLY/./src/engine/expressions/methods/str_index.ts","webpack://POLY/./src/engine/expressions/methods/str_sub.ts","webpack://POLY/./src/engine/expressions/AttributeRequirementsController.ts","webpack://POLY/./src/engine/expressions/traversers/ExpressionStringGenerator.ts","webpack://POLY/./src/engine/expressions/DependenciesController.ts","webpack://POLY/./src/engine/params/Button.ts","webpack://POLY/./src/engine/params/Color.ts","webpack://POLY/./src/engine/params/Folder.ts","webpack://POLY/./src/engine/params/Integer.ts","webpack://POLY/./src/engine/params/ramp/RampValue.ts","webpack://POLY/./src/engine/params/Separator.ts","webpack://POLY/./src/engine/params/Vector2.ts","webpack://POLY/./src/engine/params/Vector3.ts","webpack://POLY/./src/engine/params/Vector4.ts","webpack://POLY/./src/engine/nodes/utils/params/ParamsValueAccessor.ts","webpack://POLY/./src/engine/nodes/utils/ProcessingContext.ts","webpack://POLY/./src/engine/nodes/utils/connections/IOController.ts","webpack://POLY/./src/engine/nodes/utils/connections/ConnectionsController.ts","webpack://POLY/./src/engine/nodes/utils/connections/InputsController.ts","webpack://POLY/./src/engine/nodes/utils/connections/NodeConnection.ts","webpack://POLY/./src/engine/nodes/utils/connections/OutputsController.ts","webpack://POLY/./src/engine/nodes/utils/params/ParamsAccessor.ts","webpack://POLY/./src/engine/containers/Event.ts","webpack://POLY/./src/engine/scene/utils/events/_BaseEventsController.ts","webpack://POLY/./src/engine/scene/utils/LifeCycleController.ts","webpack://POLY/./src/engine/scene/utils/LoadingController.ts","webpack://POLY/./src/engine/scene/utils/ExpressionsController.ts","webpack://POLY/./src/engine/scene/utils/MissingReferencesController.ts","webpack://POLY/./src/engine/expressions/MissingReference.ts","webpack://POLY/./src/engine/scene/utils/NodesController.ts","webpack://POLY/./src/engine/nodes/manager/ObjectsManager.ts","webpack://POLY/./src/engine/nodes/manager/_Base.ts","webpack://POLY/./src/engine/containers/Manager.ts","webpack://POLY/./src/core/performance/CorePerformance.ts","webpack://POLY/./src/core/performance/PerformanceNode.ts","webpack://POLY/./src/engine/scene/utils/TimeController.ts","webpack://POLY/./src/engine/poly/SceneEvent.ts","webpack://POLY/./src/engine/scene/utils/Serializer.ts","webpack://POLY/./src/engine/scene/utils/UniformsController.ts","webpack://POLY/./src/engine/scene/utils/WebGLController.ts","webpack://POLY/./src/engine/io/json/import/Node.ts","webpack://POLY/./src/engine/io/json/import/param/Multiple.ts","webpack://POLY/./src/engine/io/json/import/param/String.ts","webpack://POLY/./src/engine/io/json/import/param/Ramp.ts","webpack://POLY/./src/engine/poly/registers/All.ts","webpack://POLY/./src/engine/poly/registers/Cop.ts","webpack://POLY/./src/engine/nodes/cop/Builder.ts","webpack://POLY/./src/engine/containers/Texture.ts","webpack://POLY/./src/engine/nodes/utils/flags/Bypass.ts","webpack://POLY/./src/engine/nodes/utils/flags/Display.ts","webpack://POLY/./src/engine/nodes/gl/utils/SpareParamsController.ts","webpack://POLY/./src/engine/io/json/export/Node.ts","webpack://POLY/./src/engine/io/json/export/param/Numeric.ts","webpack://POLY/./src/engine/io/json/export/param/OperatorPath.ts","webpack://POLY/./src/engine/io/json/export/param/String.ts","webpack://POLY/./src/engine/io/json/export/param/Ramp.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/textures/Texture.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/CodeBuilder.ts","webpack://POLY/./src/engine/nodes/utils/code/configs/ParamConfig.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/ShadersCollectionController.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/LinesController.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/CodeFormatter.ts","webpack://POLY/./src/engine/nodes/utils/shaders/BaseAssembler.ts","webpack://POLY/./src/engine/nodes/gl/code/templates/textures/Default.frag.glsl","webpack://POLY/./src/core/Sleep.ts","webpack://POLY/./src/engine/nodes/cop/EnvMap.ts","webpack://POLY/./src/core/loader/Texture.ts","webpack://POLY/./modules/three/examples/jsm/loaders/RGBELoader.js","webpack://POLY/./modules/three/examples/jsm/loaders/BasisTextureLoader.js","webpack://POLY/./src/engine/nodes/cop/Null.ts","webpack://POLY/./src/engine/nodes/cop/Switch.ts","webpack://POLY/./src/engine/poly/registers/Event.ts","webpack://POLY/./src/engine/nodes/event/CameraMapControls.ts","webpack://POLY/./src/engine/nodes/event/_BaseCameraControls.ts","webpack://POLY/./src/engine/nodes/event/Code.ts","webpack://POLY/./src/engine/nodes/event/PassEvent.ts","webpack://POLY/./src/engine/poly/registers/Gl.ts","webpack://POLY/./src/engine/nodes/gl/_ConversionMisc.ts","webpack://POLY/./src/engine/nodes/gl/_ConversionToVec.ts","webpack://POLY/./src/engine/nodes/gl/_ConversionVecTo.ts","webpack://POLY/./src/engine/nodes/gl/_Math_Arg1.ts","webpack://POLY/./src/engine/nodes/gl/_Math_Arg2Operation.ts","webpack://POLY/./src/engine/nodes/gl/_Math_Arg2Boolean.ts","webpack://POLY/./src/engine/nodes/gl/_BaseMathFunctionArgBoolean2.ts","webpack://POLY/./src/engine/nodes/gl/Align.ts","webpack://POLY/./src/engine/nodes/gl/Complement.ts","webpack://POLY/./src/engine/nodes/gl/gl/complement.glsl","webpack://POLY/./src/engine/nodes/gl/Cross.ts","webpack://POLY/./src/engine/nodes/gl/Cycle.ts","webpack://POLY/./src/engine/nodes/gl/gl/cycle.glsl","webpack://POLY/./src/engine/nodes/gl/Disk.ts","webpack://POLY/./src/engine/nodes/gl/gl/disk.glsl","webpack://POLY/./src/engine/nodes/gl/Easing.ts","webpack://POLY/./src/engine/nodes/gl/gl/easing/circular-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/exponential-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/circular-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/elastic-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/cubic-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/exponential-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quintic-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/elastic-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/linear.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/circular-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/back-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/back-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/sine-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/back-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quartic-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quadratic-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/cubic-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/elastic-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/bounce-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quadratic-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/exponential-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quintic-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/sine-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/cubic-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quadratic-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/bounce-in-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quintic-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quartic-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/quartic-out.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/bounce-in.glsl","webpack://POLY/./src/engine/nodes/gl/gl/easing/sine-out.glsl","webpack://POLY/./src/engine/nodes/gl/Fit.ts","webpack://POLY/./src/engine/nodes/gl/Fit01.ts","webpack://POLY/./src/engine/nodes/gl/HsvToRgb.ts","webpack://POLY/./src/engine/nodes/gl/gl/hsv2rgb.glsl","webpack://POLY/./src/engine/nodes/gl/InstanceTransform.ts","webpack://POLY/./src/engine/nodes/gl/Length.ts","webpack://POLY/./src/engine/nodes/gl/Luminance.ts","webpack://POLY/./src/engine/nodes/gl/Mix.ts","webpack://POLY/./src/engine/nodes/gl/MultAdd.ts","webpack://POLY/./src/engine/nodes/gl/Negate.ts","webpack://POLY/./src/engine/nodes/gl/Noise.ts","webpack://POLY/./src/engine/nodes/gl/gl/noise/common.glsl","webpack://POLY/./src/engine/nodes/gl/gl/noise/classicnoise2D.glsl","webpack://POLY/./src/engine/nodes/gl/gl/noise/classicnoise3D.glsl","webpack://POLY/./src/engine/nodes/gl/gl/noise/classicnoise4D.glsl","webpack://POLY/./src/engine/nodes/gl/gl/noise/noise2D.glsl","webpack://POLY/./src/engine/nodes/gl/gl/noise/noise3D.glsl","webpack://POLY/./src/engine/nodes/gl/gl/noise/noise4D.glsl","webpack://POLY/./src/engine/nodes/gl/Null.ts","webpack://POLY/./src/engine/nodes/gl/Output.ts","webpack://POLY/./src/engine/nodes/gl/Param.ts","webpack://POLY/./src/engine/nodes/gl/Refract.ts","webpack://POLY/./src/engine/nodes/gl/QuatMult.ts","webpack://POLY/./src/engine/nodes/gl/QuatFromAxisAngle.ts","webpack://POLY/./src/engine/nodes/gl/QuatToAngle.ts","webpack://POLY/./src/engine/nodes/gl/QuatToAxis.ts","webpack://POLY/./src/engine/nodes/gl/Ramp.ts","webpack://POLY/./src/engine/nodes/gl/Random.ts","webpack://POLY/./src/engine/nodes/gl/RgbToHsv.ts","webpack://POLY/./src/engine/nodes/gl/gl/rgb2hsv.glsl","webpack://POLY/./src/engine/nodes/gl/Rotate.ts","webpack://POLY/./src/engine/nodes/gl/Round.ts","webpack://POLY/./src/engine/nodes/gl/Texture.ts","webpack://POLY/./src/engine/nodes/gl/TwoWaySwitch.ts","webpack://POLY/./src/engine/nodes/gl/VectorAlign.ts","webpack://POLY/./src/engine/nodes/gl/VectorAngle.ts","webpack://POLY/./src/engine/poly/registers/Mat.ts","webpack://POLY/./src/engine/nodes/mat/MeshBasic.ts","webpack://POLY/./src/engine/containers/Material.ts","webpack://POLY/./src/engine/nodes/mat/MeshBasicBuilder.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/Basic.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/CustomMeshDistance.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/CustomMeshDepth.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/CustomMeshDepthDOF.ts","webpack://POLY/./src/engine/nodes/gl/code/templates/CustomMeshDepthDOF.vert.glsl","webpack://POLY/./src/engine/nodes/mat/MeshLambert.ts","webpack://POLY/./src/engine/nodes/mat/MeshLambertBuilder.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/Lambert.ts","webpack://POLY/./src/engine/nodes/mat/MeshStandardBuilder.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/Standard.ts","webpack://POLY/./src/engine/nodes/gl/gl/ShaderLib/ShaderChunk/metalnessmap_fragment.glsl","webpack://POLY/./src/engine/nodes/gl/gl/ShaderLib/ShaderChunk/roughnessmap_fragment.glsl","webpack://POLY/./src/engine/nodes/mat/Points.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/Points.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/CustomPointsDepth.ts","webpack://POLY/./src/engine/nodes/gl/code/templates/CustomPointsDepth.vert.glsl","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/CustomPointsDistance.ts","webpack://POLY/./src/engine/nodes/gl/code/templates/CustomPointsDistance.vert.glsl","webpack://POLY/./src/engine/nodes/gl/code/assemblers/materials/CustomPointsDepthDOF.ts","webpack://POLY/./src/engine/nodes/gl/code/templates/CustomPointsDepthDOF.vert.glsl","webpack://POLY/./src/engine/poly/registers/Obj.ts","webpack://POLY/./src/engine/nodes/obj/AmbientLight.ts","webpack://POLY/./src/engine/containers/Object.ts","webpack://POLY/./src/engine/nodes/obj/AreaLight.ts","webpack://POLY/./modules/three/examples/jsm/lights/RectAreaLightUniformsLib.js","webpack://POLY/./src/engine/nodes/obj/DirectionalLight.ts","webpack://POLY/./src/engine/nodes/obj/utils/helpers/DirectionalLightHelper.ts","webpack://POLY/./src/engine/nodes/obj/HemisphereLight.ts","webpack://POLY/./src/engine/nodes/obj/utils/helpers/HemisphereLightHelper.ts","webpack://POLY/./src/engine/nodes/obj/PointLight.ts","webpack://POLY/./src/engine/nodes/obj/utils/helpers/PointLightHelper.ts","webpack://POLY/./src/engine/nodes/obj/SpotLight.ts","webpack://POLY/./src/engine/nodes/obj/utils/helpers/SpotLightHelper.ts","webpack://POLY/./src/engine/nodes/obj/Events.ts","webpack://POLY/./src/engine/nodes/obj/Materials.ts","webpack://POLY/./src/engine/nodes/obj/Cop.ts","webpack://POLY/./src/engine/nodes/obj/PostProcess.ts","webpack://POLY/./src/engine/nodes/obj/Geo.ts","webpack://POLY/./src/engine/nodes/utils/DisplayNodeController.ts","webpack://POLY/./src/engine/nodes/obj/Null.ts","webpack://POLY/./src/engine/nodes/obj/Fog.ts","webpack://POLY/./src/engine/nodes/obj/Scene.ts","webpack://POLY/./src/engine/nodes/obj/OrthographicCamera.ts","webpack://POLY/./src/engine/nodes/obj/utils/cameras/ControlsController.ts","webpack://POLY/./src/engine/nodes/event/utils/CameraControlConfig.ts","webpack://POLY/./modules/three/examples/jsm/postprocessing/RenderPass.js","webpack://POLY/./src/engine/viewers/Threejs.ts","webpack://POLY/./src/engine/viewers/_Base.ts","webpack://POLY/./src/engine/viewers/utils/CamerasController.ts","webpack://POLY/./src/engine/viewers/utils/ControlsController.ts","webpack://POLY/./src/engine/viewers/utils/EventsController.ts","webpack://POLY/./src/engine/viewers/utils/WebglController.ts","webpack://POLY/./src/engine/nodes/obj/utils/cameras/background/OrthographicCameraController.ts","webpack://POLY/./src/engine/nodes/obj/PerspectiveCamera.ts","webpack://POLY/./src/engine/nodes/obj/utils/cameras/background/PerspectiveCameraController.ts","webpack://POLY/./src/engine/poly/registers/Sop.ts","webpack://POLY/./src/engine/nodes/sop/Add.ts","webpack://POLY/./src/core/geometry/Face.ts","webpack://POLY/./src/core/geometry/MonkeyPatcher.ts","webpack://POLY/./src/engine/containers/Geometry.ts","webpack://POLY/./src/engine/nodes/sop/AnimationCopy.ts","webpack://POLY/./src/engine/nodes/sop/AnimationMixer.ts","webpack://POLY/./src/engine/nodes/sop/AttribAddMult.ts","webpack://POLY/./src/engine/nodes/sop/AttribCopy.ts","webpack://POLY/./src/engine/nodes/sop/AttribCreate.ts","webpack://POLY/./src/engine/nodes/sop/AttribDelete.ts","webpack://POLY/./src/engine/nodes/sop/AttribNormalize.ts","webpack://POLY/./src/engine/nodes/sop/AttribPromote.ts","webpack://POLY/./src/engine/nodes/sop/AttribRemap.ts","webpack://POLY/./src/engine/nodes/sop/AttribRename.ts","webpack://POLY/./src/engine/nodes/sop/AttribTransfer.ts","webpack://POLY/./src/core/math/Interpolate.ts","webpack://POLY/./src/core/math/octree/Octree.ts","webpack://POLY/./src/core/math/octree/Node.ts","webpack://POLY/./src/engine/nodes/sop/BboxScatter.ts","webpack://POLY/./src/engine/nodes/sop/Blend.ts","webpack://POLY/./src/engine/nodes/sop/Box.ts","webpack://POLY/./src/engine/nodes/sop/Cache.ts","webpack://POLY/./src/engine/nodes/sop/Circle.ts","webpack://POLY/./src/engine/nodes/sop/Code.ts","webpack://POLY/./src/engine/nodes/sop/Color.ts","webpack://POLY/./src/core/Color.ts","webpack://POLY/./src/engine/nodes/sop/Cone.ts","webpack://POLY/./src/engine/nodes/sop/Copy.ts","webpack://POLY/./src/engine/nodes/sop/utils/CopyStamp.ts","webpack://POLY/./src/engine/nodes/sop/Data.ts","webpack://POLY/./src/core/geometry/AttributeData.ts","webpack://POLY/./src/engine/nodes/sop/DataUrl.ts","webpack://POLY/./src/engine/nodes/sop/Delay.ts","webpack://POLY/./src/engine/nodes/sop/Delete.ts","webpack://POLY/./src/engine/nodes/sop/Face.ts","webpack://POLY/./src/engine/nodes/sop/File.ts","webpack://POLY/./src/core/loader/Geometry.ts","webpack://POLY/./modules/three/examples/jsm/loaders/OBJLoader.js","webpack://POLY/./src/engine/nodes/sop/Fuse.ts","webpack://POLY/./src/engine/nodes/sop/Hexagons.ts","webpack://POLY/./src/core/geometry/operation/Hexagon.ts","webpack://POLY/./src/engine/nodes/sop/Hierarchy.ts","webpack://POLY/./src/engine/nodes/sop/Instance.ts","webpack://POLY/./src/engine/nodes/sop/Jitter.ts","webpack://POLY/./src/engine/nodes/sop/Layer.ts","webpack://POLY/./src/engine/nodes/sop/Line.ts","webpack://POLY/./src/engine/nodes/sop/Material.ts","webpack://POLY/./src/engine/nodes/sop/Merge.ts","webpack://POLY/./src/engine/nodes/sop/Noise.ts","webpack://POLY/./modules/three/examples/jsm/math/SimplexNoise.js","webpack://POLY/./src/engine/nodes/sop/Normals.ts","webpack://POLY/./src/engine/nodes/sop/Null.ts","webpack://POLY/./src/engine/nodes/sop/ObjectMerge.ts","webpack://POLY/./src/engine/nodes/sop/Occlusion.ts","webpack://POLY/./src/engine/nodes/sop/ParticlesSystemGpu.ts","webpack://POLY/./src/engine/nodes/gl/code/assemblers/particles/Particles.ts","webpack://POLY/./src/engine/nodes/gl/code/templates/particles/Default.glsl","webpack://POLY/./src/engine/nodes/gl/code/utils/TextureAllocationsController.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/TextureAllocation.ts","webpack://POLY/./src/engine/nodes/gl/code/utils/TextureVariable.ts","webpack://POLY/./src/engine/nodes/sop/utils/ParticlesSystemGPU/RenderController.ts","webpack://POLY/./src/engine/nodes/sop/utils/ParticlesSystemGPU/GPUComputeController.ts","webpack://POLY/./src/engine/nodes/sop/utils/ParticlesSystemGPU/GPUComputationRenderer.js","webpack://POLY/./src/engine/nodes/sop/Peak.ts","webpack://POLY/./src/engine/nodes/sop/Plane.ts","webpack://POLY/./src/engine/nodes/sop/Point.ts","webpack://POLY/./src/engine/nodes/sop/Polywire.ts","webpack://POLY/./src/engine/nodes/sop/Ray.ts","webpack://POLY/./src/engine/nodes/sop/Resample.ts","webpack://POLY/./src/engine/nodes/sop/Scatter.ts","webpack://POLY/./src/engine/nodes/sop/Shadows.ts","webpack://POLY/./src/engine/nodes/sop/Skin.ts","webpack://POLY/./src/engine/nodes/sop/Sphere.ts","webpack://POLY/./src/engine/nodes/sop/Switch.ts","webpack://POLY/./src/engine/nodes/sop/Text.ts","webpack://POLY/./modules/three/examples/jsm/loaders/TTFLoader.js","webpack://POLY/./modules/three/examples/jsm/loaders/SVGLoader.js","webpack://POLY/./src/engine/nodes/sop/Torus.ts","webpack://POLY/./src/engine/nodes/sop/TorusKnot.ts","webpack://POLY/./src/engine/nodes/sop/Transform.ts","webpack://POLY/./src/engine/nodes/sop/Tube.ts","webpack://POLY/./src/engine/nodes/sop/UvProject.ts","webpack://POLY/./src/core/CameraController.ts","webpack://POLY/./modules/three/examples/jsm/shaders/CopyShader.js","webpack://POLY/./modules/three/examples/jsm/postprocessing/ShaderPass.js","webpack://POLY/./modules/three/examples/jsm/postprocessing/MaskPass.js","webpack://POLY/./modules/three/examples/jsm/postprocessing/EffectComposer.js","webpack://POLY/./modules/three/examples/jsm/libs/inflate.module.min.js","webpack://POLY/./modules/three/examples/jsm/loaders/EXRLoader.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ParamTemplate","type","init_value","options","ParamType","BUTTON","BOOLEAN","COLOR","FLOAT","FOLDER","INTEGER","OPERATOR_PATH","RampParam","DEFAULT_VALUE","RAMP","SEPARATOR","STRING","VECTOR2","VECTOR3","VECTOR4","MESSAGE","DEFAULT_INPUT_NAMES","TypedSopNode","TypedNode","container_controller","TypedContainerController","this","GeometryContainer","flags","FlagsControllerDB","NodeContext","SOP","display","set","add_hook","active","parent","display_node_controller","set_display_node","io","outputs","set_has_one_output","core_group","objects","_set_object_attributes","set_container","FROM_SET_CORE_GROUP","set_container_objects","FROM_SET_OBJECT","FROM_SET_OBJECTS","geometry","create_object","FROM_SET_GEOMETRY","geometries","forEach","FROM_SET_GEOMETRIES","message","container","core_content","CoreGroup","set_objects","touch","index","position_array","getAttribute","array","setIndex","CoreConstant","OBJECT_TYPE","MESH","object_constructor","CONSTRUCTORS_BY_NAME","MATERIALS","clone","castShadow","receiveShadow","frustumCulled","material","scene","console","log","material_node","CoreMaterial","node","add_render_hook","points_count","indices","ConnectionPointType","ConnectionPointTypes","BOOL","INT","VEC2","VEC3","VEC4","ConnectionPointTypeToParamTypeMap","SAMPLER_2D","ParamTypeToConnectionPointTypeMap","undefined","ConnectionPointInitValueMap","DEFAULT_VALUE_JSON","ConnectionPointComponentsCountMap","InputCloneMode","CoreString","ensure_float","values","toArray","map","v","join","vec","num","vector3","x","y","z","w","GLDefinitionType","TypedGLDefinition","_definition_type","_data_type","_node","_name","TypedGLDefinitionCollection","super","ATTRIBUTE","data_type","FUNCTION","UNIFORM","VARYING","_type","_init_value","_json","_create_json","TypedGlNode","spare_params_controller","GlNodeSpareParamsController","GL","connections","init_inputs","ui_data","set_layout_horizontal","set_named_output_connection_points","initialize_node","node_sibbling","warn","assembler_controller","set_compilation_required_and_dirty","input_index","inputs","get_input_index","connection","input_connection","input_node","node_src","output_connection_point","named_output_connection_points","output_index","output_name","gl_var_name","full_path","ThreeToGl","any","params","shaders_collection_controller","_param_configs_controller","reset","list","ParamlessParamsConfig","NodeParamsConfig","ParamsConfig","params_config","ObjectType","ObjectTypes","POINTS","LINE_SEGMENTS","ObjectTypeMenuEntries","indexOf","Mesh","LineSegments","Points","materials","MeshStandard","MeshStandardMaterial","color","side","FrontSide","metalness","roughness","MeshLambertMaterial","Color","vertexColors","transparent","depthTest","PointsMaterial","size","LineBasicMaterial","linewidth","AttribClass","AttribType","AttribClassMenuEntries","VERTEX","OBJECT","AttribTypeMenuEntries","NUMERIC","ATTRIB_CLASS","ATTRIB_TYPE","OBJECT_TYPES","CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME","Scene","Group","Object3D","Bone","SkinnedMesh","BaseGlMathFunctionParamsConfig","BaseGlMathFunctionGlNode","BaseAdaptiveGlNode","gl_connections_controller","set_expected_input_types_function","_expected_input_types","set_expected_output_types_function","_expected_output_types","set_input_name_function","_gl_input_name","first_input_connection_type","first_input_connection","count","Math","max","input_connections","var_type","joined_args","named_input_connection_points","variable_for_input","body_line","gl_method_name","add_body_lines","add_definitions","gl_function_definitions","ATTRIB_NAMES_SEPARATOR","TAIL_DIGIT_MATCH_REGEXP","INDICES_LIST_SEPARATOR","NUM_REGEXP","BooleanString","word","TRUE","FALSE","test","match","parseInt","digits","substring","replace","upper_first","Date","parse","seconds","setTime","toISOString","substr","val","decimals","elements","split","frac","string_to_pad","pad","num_as_string","rule","RegExp","masks","matches_one_mask","mask","match_mask","trimed_elements","e","reverse","id","exp","element","charCodeAt","Number","MAX_SAFE_INTEGER","indices_string","sort","a","b","range_separator","range_elements","parsed","ShaderName","ParticleShaderNames","PARTICLES_0","PARTICLES_1","PARTICLES_2","PARTICLES_3","PARTICLES_4","PARTICLES_5","PARTICLES_6","PARTICLES_7","PARTICLES_8","PARTICLES_9","CoreGeometry","_geometry","uuid","_bounding_box","_create_bounding_box","computeBoundingBox","boundingBox","userData","marked_as_instance","computeVertexNormals","keys","user_data_attribs","CoreAttribute","remap_name","user_data_attrib","attributes","is_attrib_indexed","h","attrib_name","attrib_names","itemSize","attrib","set_indexed_attribute_values","setAttribute","Int32BufferAttribute","default_value","attribute_added","vec2","vec3","col","g","vec4","Float32BufferAttribute","Vector3","attrib_data","add_numeric_attrib","old_name","new_name","old_attrib","deleteAttribute","src_geometry","src_userData","attribute_name","attribute","constructor","InterleavedBufferAttribute","MonkeyPatcher","patch","new_geometry","position","position_attrib_name","_points","points_from_geometry","points","position_attrib","point_index","point","CorePoint","object_type","BufferGeometry","geometry_wrapper","first_point","old_geometry","old_geometry_wrapper","new_index_by_old_index","_indices_from_points","new_values","attrib_value","new_index_by_value","new_value","new_attrib_indices","new_index","attrib_size","index_attrib","old_indices","new_indices","old_index","old_index0","old_index1","old_index2","new_index0","new_index1","new_index2","core_geometries","indexed_attribute_names","new_values_by_attribute_name","indexed_attribute_name","index_by_values","all_geometries_points","core_geometry","geometry_points","set_attrib_index","merged_geometry","BufferGeometryUtils","mergeBufferGeometries","merged_geometry_wrapper","mergedUserData","faces_from_geometry","faces_count","CoreFace","NodeEvent","param","required_arguments","min_allowed_arguments_count","optional_arguments","max_allowed_arguments_count","args","index_or_path","referenced_node","get_referenced_node","request_container","path","decomposed_path","CoreWalker","find_param","input_graph_node","find_node","input","DecomposedPath","find_referenced_graph_node","create_dependency","MethodDependency","Poly","renderers_controller","RenderersController","nodes_register","NodesRegister","scenes_by_uuid","_instance","tab_menu_category","register_node","parent_context","registered_nodes","env","_env","_scene","_dirty_controller","DirtyController","_graph_node_id","graph","next_id","setNode","_graph","trigger","set_dirty","set_successors_dirty","remove_dirty_state","is_dirty","callback","add_post_dirty_hook","removeNode","src","connect","disconnect","disconnect_predecessors","disconnect_successors","predecessor_ids","predecessors","successors","all_predecessors","all_successors","TypedMatNode","MaterialContainer","_cook_main_without_inputs_when_dirty_bound","_cook_main_without_inputs_when_dirty","MAT","initialize_base_node","name_controller","add_post_set_full_path_hook","set_material_name","cook_controller","cook_main_without_inputs","_material","create_material","Material","ObjNodeRenderOrder","TypedObjNode","ObjectContainer","render_order","MANAGER","_children_group","_attachable_to_hierarchy","_used_in_scene","OBJ","state","loading_controller","is_loading","root","update_object","attachable_to_hierarchy","add","remove","_object","_create_object_with_attributes","set_object_name","camera","FullScreenQuad","Pass","enabled","needsSwap","clear","renderToScreen","assign","setSize","render","error","_mesh","dispose","renderer","TransformedParamConfig","Base","transform","ParamConfig","scale","TransformedObjNode","transform_controller","TransformController","_update_transform_from_params_scale","set_count","set_depends_on_inputs","add_on_set_input_hook","on_input_updated","hook_name","dirty_controller","has_hook","add_to_parent_transform","remove_from_parent_transform","matrix","update_transform_with_matrix","equals","update_transform_from_params","matrixAutoUpdate","dispatchEvent","pv","rotation","copy","multiplyScalar","radians","CoreMath","degrees_to_radians","euler","Euler","updateMatrix","CoreTransform","set_params_from_matrix","_translation_matrix","Matrix4","_translation_matrix_q","Quaternion","_translation_matrix_s","_matrix","identity","_matrix_q","_matrix_e","_matrix_s","_rotate_geometry_m","_rotate_geometry_q","_rotate_geometry_vec_dest","update_scale","quaternion","decompose","setFromQuaternion","toVector3","divideScalar","PI","batch_update","set_vector3","set_float","compose","quat","MathUtils","degToRad","setFromEuler","vec_origin","vec_dest","normalize","setFromUnitVectors","makeRotationFromQuaternion","applyMatrix4","CoreGraphNode","BaseContainer","ParamsValueAccessor","ParamsAccessor","_initialized","_display_node_controller","_parent_controller","HierarchyParentController","_children_controller_context","HierarchyChildrenController","_children_controller","_create_children_controller","_ui_data","UIData","_dependencies_controller","DependenciesController","_states","StatesController","_lifecycle","LifeCycleController","_serializer","NodeSerializer","_cook_controller","CookController","_io","IOController","_name_controller","NameController","set_name","_params_controller","ParamsController","_processing_context","ProcessingContext","node_context","three_imports","required_three_imports","required_imports","require_webgl2","parent_controller","set_parent","add_param","input_contents","content","set_content","end_cook","children_controller","create_node","remove_node","children","child_by_name","nodes_by_type","input_index_or_name","output_index_or_name","set_input","event_name","dispatch_controller","dispatch","include_param_components","serializer","to_json","TypedParam","_options","OptionsController","_emit_controller","EmitController","_is_computing","initialize_param","_expression_controller","ParamSerializer","_value","raw_val","val1","val2","other_raw_input","are_raw_input_equal","_raw_input","other_val","are_values_equal","raw_input","_clone_raw_input","_prefilter_invalid_raw_input","emit_controller","emit","ParamEvent","RAW_INPUT_UPDATED","process_raw_input","_default_value","Promise","resolve","reject","_compute_resolves","process_computation","pop","makes_node_dirty_when_dirty","parent_param","params_node","add_graph_input","remove_graph_input","components","set_node","_parent_param","relative_path","emit_allowed","increment_count","_components","component_names","expression_controller","FlagsController","Display","DisplayFlag","Bypass","bypass","BypassFlag","FlagsControllerD","FlagsControllerB","filter","first_element","next_node","PARENT","add_path_element","CURRENT","add_node","remainder","path_from_root","node_path","param_name","src_graph_node","dest_graph_node","closest_common_parent","distance","distance_to_parent","up","ups","parent_path_elements","dest_path_elements","remaining_elements","cmptr","dest_path_element","graph_node1","graph_node2","parents1","parents","parents2","min_depth","min","found_parent","graph_node_id","graph_node","dest","current","dest_id","path_elements","make_absolute_path","DOT","CURRENT_WITH_SLASH","PARENT_WITH_SLASH","NON_LETTER_PREFIXES","THREE","Triangle","RAD_DEG_RATIO","dest_min","dest_max","fit","src_min","src_max","degrees","deg","rad","radians_to_degrees","number","rand_float","rand_vec2","step_size","steps_count","rounded_steps_count","ceil","floor","uv","sn","fract","sin","lnglat1","lnglat2","φ1","deg2rad","lat","φ2","Δφ","Δλ","lng","cos","atan2","sqrt","triangle","margin","mid_point","TriangleProp","getMidpoint","prop","delta","sub","delta_n","pow","Easing","SideParamConfig","double_sided","front","visible_if","SideController","BaseController","single_side","BackSide","new_side","DoubleSide","needsUpdate","CustomMaterialName","ShaderAssemblerMaterial","BaseGlShaderAssembler","_assemblers_by_custom_name","Map","ShaderMaterial","class_by_custom_name","custom_assembler_class_by_custom_name","assembler_class","custom_name","_add_custom_material","custom_assembler","_gl_parent_node","custom_materials","_code_builder","assembler","set_root_nodes","_root_nodes","set_param_configs_owner","set_shader_configs","shader_configs","set_variable_configs","variable_configs","custom_material","compile_material","compile_allowed","output_nodes","GlNodeFinder","find_output_nodes","states","_update_shaders","new_vertex_shader","_shaders_by_name","new_fragment_shader","FRAGMENT","vertexShader","fragmentShader","add_uniforms","uniforms","uniforms_time_dependent","uniforms_controller","add_time_dependent_uniform_owner","remove_time_dependent_uniform_owner","compile_custom_materials","_lines","shader_name","shader_names","template","_template_shader_for_shader_name","build_code_from_nodes","_build_lines","lines","output_node","input_name","named_input","var_input","variable_config","new_var","default_from_attribute","connection_point","named_input_connection_points_by_name","gl_type","attr_read","globals_handler","read_attribute","variable_config_default","default","prefix","suffix","if_condition","current_shader_name","input_names","shader_config","add_output_body_line","attribute_node","var_name","body_lines","globals_node","dependencies","definitions_by_shader_name","body_lines_by_shader_name","definition","used_output_names","globals_shader_name","UniformGLDefinition","MapUtils","push_on_array_at_entry","dependency","set_uniforms_time_dependent","handle_gl_FragCoord","handle_resolution","set_resolution_dependent","handle_globals_node","definitions","container_class","_callbacks","_container","setTimeout","process_container_request","request_input_container","then","notify_requesters","reset_caches","cook_main","processing_context","callbacks","Vector2","ATTRIB_NAME_MAP","P","N","Cd","index_by_value","current_index","TypedContainer","cloned_container","_content","_post_set_content","SkinningParamConfig","skinning","SkinningController","new_skinning","TextureMapParamConfig","use_map","BooleanParamOptions","TextureMapController","FileCopNode","DEFAULT_NODE_PATH","UV","OperatorPathOptions","BaseTextureMapController","_update_options","add_hooks","_update","texture_map_controller","update","TextureAlphaMapParamConfig","use_alpha_map","TextureAlphaMapController","alpha_map","texture_alpha_map_controller","_reset_ramp_interpolant_and_texture_bound","_reset_ramp_interpolant_and_texture","RampValue","from_json","raw_input1","raw_input2","is_equal","is_equal_json","are_json_equal","VALUE_UPDATED","_ramp_interpolant","_ramp_texture","_create_ramp_texture","Uint8Array","stride","width","value_at_position","texture","DataTexture","RGBFormat","positions","interpolated_values","Float32Array","CubicInterpolant","_create_interpolant","sorted_points","sorted_point","create_interpolant","interpolant","evaluate","RampInterpolation","LINEAR","RampPoint","new_element","has","unshift","new_elements","CATEGORY_OBJ","LIGHT","GEOMETRY","CAMERA","MISC","CATEGORY_COP","INPUT","ADVANCED","CATEGORY_EVENT","CATEGORY_GL","CONVERSION","DYNAMICS","GLOBALS","LOGIC","MATH","QUAT","TRIGO","UTIL","INSTANCE","CATEGORY_MAT","LINE","VOLUME","CATEGORY_SOP","ANIMATION","MODIFIER","PRIMITIVES","RENDER","CATEGORY_POST","PASS","Uint16Array","EMPTY_DATA_TEXTURE","LuminanceFormat","HalfFloatType","TypedCopNode","TextureContainer","COP","AssemblerControllerNode","_globals_handler","GlobalsGeometryHandler","_compile_required","_deleted_params_data","_assembler","reset_configs","output_child","add_output_params","add_globals_params","allow_attribute_exports","globals","output","set_position","new_state","trigger_node","set_compilation_required","create_spare_parameters","param_config","param_configs","set_uniform_value","current_spare_param_names","spare_names","assembler_param_names","spare_param_names_to_add","spare_param_names_to_remove","params_update_options","current_param_names","names","spare_params_with_same_name_as_params","error_message","param_exporter","JsonExportDispatcher","dispatch_param","required","params_data","names_to_delete","param_options","spare","cook","to_add","update_params","VARIABLE_CONFIG_DEFAULT_BY_NAME","GlobalsBaseController","named_output_connection_points_by_name","VaryingGLDefinition","variable_name","PRE_DEFINED_ATTRIBUTES","AttributeGLDefinition","AttributeGlNode","varying_definition","set_varying_body_line","IF_RULE","_input_name_function","_output_name_function","_expected_input_types_function","_expected_output_types_function","_update_signature_if_required_bound","update_signature_if_required","func","add_on_scene_load_hook","set_post_create_params_hook","dirty_trigger","lifecycle","creation_completed","_connections_match_inputs","update_connection_types","make_successors_update_signatures","successor","graph_all_successors","gl_node","expected_input_types","expected_output_types","named_input_connections","TypedNamedConnectionPoint","named_outputs","set_named_input_connection_points","current_input_types","current_output_types","first_connection","connection_type_from_connection","MAPPINGS","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","WRAPPINGS","ClampToEdgeWrapping","RepeatWrapping","MirroredRepeatWrapping","MAG_FILTERS","LinearFilter","NearestFilter","MIN_FILTERS","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","ATTRIB_MAPPING_KEYS","ATTRIB_MAPPING","mapping","wrapS","wrapT","minFilter","magFilter","FileCopParamsConfig","url","CoreTextureLoader","PARAM_DEFAULT","desktop_browse","file_type","reload","PARAM_CALLBACK_reload","menu","entries","wrap_s","wrap_t","mag_filter","min_filter","_is_static_image_url","cook_for_image","cook_for_video","_load_texture","_update_texture_params","set_texture","clear_texture","_param_url_changed","_add_video_spare_params_if_required","_previous_param_url","_set_video_current_time","texture_attrib","param_value","float","param_callback_reload","_video","currentTime","VideoTexture","image","has_param","VIDEO_TIME_PARAM_NAME","duration","range","range_locked","PARAMS_UPDATED","_remove_spare_params","_texture_loader","load_texture_from_url_or_op","ENV_MAP","background","use_background","use_material","background_color","background_material","node_selection","context","dependent_on_found_node","background_ratio","_bg_raycaster","Raycaster","_screen_quad","_create_screen_quad","PlaneBufferGeometry","quad","_screen_quad_flat_material","MeshBasicMaterial","boolean","use_background_color","update_screen_quad","update_background_color","use_background_material","update_background_material","screen_quad_flat_material","screen_quad","bg_node","found_node","TypedMultipleParam","_components_contructor","FloatParam","is_default","Array","component_name","component","default_val","set_init_value","set_parent_param","compute_components","set_value_from_components","promises","compute","all","number_or_string","cooker","block","block_parent_emit","unblock","unblock_parent_emit","_param","_complex_data","is_spare_and_not_component","is_spare","value_changed","_require_data_complex","_data_complex","_data_simple","raw_input_serialized","default_value_serialized","add_main","has_options_overridden","overridden_options","options_overridden","option_name","option_value","JSON","stringify","INSERT_DEFINE_AFTER_MAP","INSERT_BODY_AFTER_MAP","LINES_TO_REMOVE_MAP","TypedAssembler","_leaf_nodes","_uniforms_time_dependent","_resolution_dependent","_template_shader","_replace_template","root_nodes","current_uniforms","uniform_name","uniform","time","resolution_dependent","GlobalsGlNode","CodeBuilder","code_builder","build_from_nodes","allow_new_param_configs","disallow_new_param_configs","line_type","all_lines","_param_config_owner","param_config_owner","hidden","create_globals_node_output_connections","_reset_shader_configs","_reset_variable_configs","_reset_uniforms_time_dependency","_reset_resolution_dependency","_shader_configs","create_shader_configs","sc","ShaderConfig","_variable_configs","create_variable_configs","vc","VariableConfig","if","root_node","function_declaration","builder_lines","LineType","FUNCTION_DECLARATION","define","DEFINE","body","BODY","template_lines","new_lines","line_before_define","insert_define_after","line_before_body","insert_body_after","lines_to_remove","line_before_define_found","line_before_body_found","template_line","_insert_lines","line_remove_required","line_to_remove","lines_to_add","line_to_add","src_material","clone_single","material_with_custom","mat_name","mat","uniform_value","TypedEventNode","EventContainer","_eval_all_params_on_dirty_bound","_eval_all_params_on_dirty","EVENT","eval_all","event","canvas","camera_node","TypedNumericParam","converted","convert","set_expression","EXPRESSION_UPDATED","_update_value","ExpressionController","expression","requires_entities","expression_result","compute_expression","is_errored","execute_callback","Error","_input_names","_dependencies","_param_configs","ColorParamConfig","use_vertex_colors","opacity","alpha_test","use_fog","ColorsController","new_vertex_color","alphaTest","fog","TypedBuilderMatNode","add_on_create_hook","on_create","init","_assembler_controller","_create_assembler_controller","compile_required","_compile","post_compile","BaseLightTransformedObjNode","TypedLightObjNode","update_light_params","update_shadow_params","BaseLightHelperParamConfig","show_helper","helper_size","BaseLightHelperObjNode","wireframe","build_helper","_helper_constructor","update_helper_attachment","helper","_helper","_create_helper","build","light","visible","BaseManagerObjNode","layer","layers","enable","integer","operator_path_param_options","POST","do_post_process","post_process","use_post_process_node0","post_process_node0","use_post_process_node1","post_process_node1","use_post_process_node2","post_process_node2","use_post_process_node3","post_process_node3","_renderers_by_canvas_id","_composers_by_canvas_id","_resolution_by_canvas_id","_composers_set_in_progress_by_canvas_id","_fetch_post_process_nodes_in_progress","_post_process_nodes","_post_process_use_node_path_params","_post_process_node_path_params","aspect","composer","setup_for_aspect_ratio","default_scene","gl","instance","rendering_context","WebGLRenderer","antialias","alpha","shadowMap","physicallyCorrectLights","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","register_renderer","set_renderer_size","setPixelRatio","devicePixelRatio","deregister_renderer","_create_composer","EffectComposer","set_composer_passes","composer_passes_nodes_changed","post_process_node","set_composers_passes","ids","clear_render_passes","render_scene_pass","RenderPass","clearAlpha","addPass","apply_to_composer","render_pass","passes","disposable_pass","_graph_node","base","last_char","children_allowed","set_child_name","request_name_to_parent","_set_core_name","post_set_name","post_set_full_path","child_node","missing_expression_references_controller","check_for_missing_references","expressions_controller","regenerate_referring_expressions","NAME_UPDATED","hook","_on_set_name_hooks","_on_set_full_path_hooks","StringParamLanguage","_programatic_visible_state","_update_visibility_and_remove_dirty_bound","update_visibility_and_remove_dirty","_ui_data_dependency_set","_default_options","options_controller","overriden","option_names","loaded","get_callback","is_cooking","has_callback","create_callback_from_string","callback_string","callback_function","Function","cook_options","desktop_browse_option","expr_option","menu_options","has_menu","language","node_selection_options","texture_options","is_hidden","VISIBLE_UPDATED","is_field_hidden","predecessor_names","visibility_predecessors","_visibility_graph_node","predecessor","update_visibility","VARIABLE_PREFIX","_set_error_from_error_bound","_set_error_from_error","_error_message","method_name","set_error","traverse_node","left","operator","right","consequent","alternate","traversed_args","arg_node","raw","AsyncFunction","getPrototypeOf","StringParam","_value_elements","ParsedTree","string_value_elements","ConnectionPointTypesAvailableForAttribute","AttributeGlParamsConfig","_on_create_set_name_if_none_bound","_on_create_set_name_if_none","GlConnectionsController","_set_mat_to_recompile_if_is_exporting","INPUT_NAME","OUTPUT_NAME","set_node_lines_attribute","named_input_connection_point","export_when_connected","is_exporting","_set_mat_to_recompile","NodeJsonExporter","ParamNumericJsonExporter","OperatorPathParam","ParamOperatorPathJsonExporter","ParamStringJsonExporter","ParamRampJsonExporter","ParamJsonExporter","_data","nodes_controller","reset_node_context_signatures","root_exporter","dispatch_node","nodes_data","properties","frame","frame_range","frame_range_locked","time_controller","master_camera_node_path","cameras_controller","ui","escape_line_breaks","CameraOrbitEventParamsConfig","allow_pan","allow_rotate","allow_zoom","tdamping","damping","screen_space_panning","rotate_speed","min_distance","max_distance","polar_angle_range","CameraOrbitControlsEventNode","TypedCameraControlsEventNode","OrbitControls","controls","enablePan","enableRotate","enableZoom","enableDamping","dampingFactor","rotateSpeed","screenSpacePanning","minDistance","maxDistance","minPolarAngle","maxPolarAngle","enableKeys","target","controller_class","controller","use_map_name","use_map_param","path_param","mat_attrib_name","shader_material","attr_name","_update_texture_on_uniforms","direct_params","_update_texture_on_material","_update_required_attribute","_apply_texture_on_uniforms","_remove_texture_from_uniforms","has_texture","new_texture_is_different","_do_update_define","define_name","_define_name","defines","toUpperCase","_apply_texture_on_material","_remove_texture_from_material","texture_owner","update_callback","remove_callback","texture_node","ASSEMBLER_MAP","DISTANCE","ShaderAssemblerCustomMeshDistance","DEPTH","ShaderAssemblerCustomMeshDepth","DEPTH_DOF","ShaderAssemblerCustomMeshDepthDOF","ShaderAssemblerMesh","_color_with_intensity","_light","create_light","update_light_attachment","shadow","create_shadow_params","intensity","CoreObject","CoreEntity","geo","group","compute_vertex_normals","add_attribute","attribute_names","includes","delete_attribute","src_object","new_object","sourceLookup","cloneLookup","parallelTraverse","sourceNode","clonedNode","traverse","src_node","mesh_node","src_node_geometry","mesh_node_geometry","apply_custom_materials","material_with_color","src_node_with_animations","animations","animation","skinned_node","isSkinnedMesh","clonedMesh","sourceMesh","sourceBones","skeleton","bones","bindMatrix","new_bones","bone","computeTangents","normal","normals","uvs","nVertices","tangent","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","groups","start","il","jl","handleTriangle","tmp","tmp2","n2","handleVertex","fromArray","isFinite","addScaledVector","dot","crossVectors","useGroups","isIndexed","attributesUsed","Set","morphAttributesUsed","morphAttributes","morphTargetsRelative","mergedGeometry","offset","addGroup","indexOffset","mergedIndex","getX","mergedAttribute","mergeBufferAttributes","numMorphTargets","morphAttributesToMerge","mergedMorphAttribute","TypedArray","normalized","arrayLength","isInterleavedBufferAttribute","interleaveAttributes","interleavedBuffer","res","getters","setters","iba","k","estimateBytesUsed","mem","attr","BYTES_PER_ELEMENT","getIndex","mergeVertices","tolerance","EPSILON","hashToIndex","vertexCount","nextIndex","attributeNames","attrArrays","morphAttrsArrays","newIndices","morphAttr","fill","decimalShift","log10","shiftMultiplier","hash","newarray","newMorphArrays","getterFunc","ml","oldAttribute","buffer","oldMorphAttribute","morphAttribute","toTrianglesDrawMode","drawMode","numberOfTriangles","newGeometry","clearGroups","GlobalsTextureHandler","_uv_name","_texture_allocations_controller","variable","globals_geometry_handler","texture_variable","add_particles_sim_uv_attribute","allocation","var_name_texture","texture_name","texture_definition","particles_sim_uv_attrib_definition","UV_ATTRIB","particles_sim_uv_varying_definition","UV_VARYING","PARTICLE_SIM_UV","curve_point_indices","accumulated_curve_point_indices","last_index_added","previous_index","attrib_sizes_by_name","new_attribute_values_by_name","attribute_sizes_by_name","attrib_sizes","create_line_segment_geometry","_default_scene","_cameras_controller","CamerasController","_cooker","Cooker","CoreGraph","_missing_expression_references_controller","MissingReferencesController","_expressions_controller","ExpressionsController","_nodes_controller","NodesController","_time_controller","TimeController","set_scene","_uuid","wait_for_cooks_completed","_dispatch_controller","DispatchController","_events_controller","SceneEventsController","_lifecycle_controller","_loading_controller","LoadingController","_performance","CorePerformance","set_frame","play","pause","PolySceneSerializer","_uniforms_controller","UniformsController","_webgl_controller","WebGLController","MouseEventParamsConfig","MouseEventNode","PARAM_CALLBACK_toggle_active","ACCEPTED_MOUSE_EVENT_TYPES","event_type","add_on_add_hook","events_controller","register_event_node","add_delete_hook","unregister_event_node","get_output_index","nodes","output_connections","node_dest","process_event","_update_register","ui_data_json","children_ids","input_ids","input_connection_output_indices","connection_input_indices","named_output_connections","param_ids","to_json_params","override_clonable_state","inputs_clonable_state_with_override","selection","param_names","include_components","to_json_params_from_names","ParamConstructorByType","BooleanParam","ButtonParam","ColorParam","FolderParam","IntegerParam","SeparatorParam","Vector2Param","Vector3Param","Vector4Param","_expression","_manager","is_expression_for_entities","deregister_param","ExpressionManager","parse_expression","update_from_method_dependency_name_change","compute_function","entities","set_entities","reset_entities","compute_expression_for_entities","_entities","_entity_callback","addUnaryOp","addBinaryOp","string","arguments","callee","_named_nodes","graph_node_ids","node_element_by_graph_node_id","named_nodes","path_element","joined_path","first_char","ease_i","power","ease_o","abs","ease_io","linear","ease_i2","ease_o2","ease_io2","ease_i3","ease_o3","ease_io3","ease_i4","ease_o4","ease_io4","ease_i_sin","ease_o_sin","ease_io_sin","ease_i_elastic","ease_o_elastic","ease_io_elastic","is_number","parseFloat","ensure_in_range","_found_node","expected_context","node_selection_context","MouseEventType","auxclick","click","contextmenu","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseover","mouseout","mouseup","pointerlockchange","pointerlockerror","select","wheel","MouseEventsController","BaseEventsController","NodeJsonImporter","ParamMultipleJsonImporter","ParamStringJsonImporter","ParamRampJsonImporter","ParamJsonImporter","_state","_hooks","on_update","run_hooks","_id","__next_id","_definitions","_errored","definitions_by_name","existing","uniq_definitions","_leaves_graph_id","_graph_ids_by_shader_name","_outputs_by_graph_id","_depth_by_graph_id","_graph_id_by_depth","input_names_for_shader_name","_shader_name","find_leaves_from_root_node","set_nodes_depth","depth","graph_id","LEAVES_FROM_NODES_SHADER","find_leaves","node_ids","nodes_from_ids","depths","graph_ids_for_depth","node_from_id","unique_inputs","booleans_by_graph_id","set_node_depth","current_depth","output_ids","output_id","GlobalsGlParamsConfig","set_node_lines_globals","domElement","quatInverse","lastPosition","lastQuaternion","document","Infinity","minZoom","maxZoom","minAzimuthAngle","maxAzimuthAngle","zoomSpeed","panSpeed","keyPanSpeed","autoRotate","autoRotateSpeed","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","position0","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","updateProjectionMatrix","changeEvent","STATE","NONE","inverse","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","distanceToSquared","EPS","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","panUp","pan","deltaX","deltaY","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","isOrthographicCamera","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","mouseAction","preventDefault","focus","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","tabIndex","MapControls","transpiled_javascript","filtered_lines","line","MathFunctionArg2Factory","method","gl_output_name","out","gl_input_names","in","default_in_type","allowed_in_types","out_type","functions","BaseNodeGlMathFunctionArg2GlNode","set_output_name_function","_gl_output_name","f","FunctionGLDefinition","first_input_type","DistanceGlNode","DotGlNode","MaxGlNode","MinGlNode","ModGlNode","PowGlNode","ReflectGlNode","StepGlNode","typed_visible_options","ConstantGlParamsConfig","bool","int","ConstantGlNode","_allow_inputs_created_from_params","_current_connection_type","_current_param","connection_type","_current_var_name","_params_by_type","MathFunctionArg3Factory","gl_input_default_values","BaseNodeGlMathFunctionArg3GlNode","ClampGlNode","FaceforwardGlNode","SmoothStepGlNode","SHADER_DEFAULTS","MeshStandardMatParamsConfig","TextureEnvMapParamConfig","MeshStandardMatNode","texture_env_map_controller","TextureEnvMapController","envMapIntensity","env_map_intensity","set_material","use_env_map","env_map","PointsMatParamsConfig","PointsBuilderMatNode","GlAssemblerController","ShaderAssemblerPoints","compile_if_required","EVENT_CHANGE","BASE_CAMERA_DEFAULT","near","far","CameraTransformParamConfig","set_master_camera","BaseCameraObjNodeClass","PARAM_CALLBACK_set_master_camera","BaseCameraObjParamsConfig","CameraPostProcessParamConfig","CameraBackgroundParamConfig","LayerParamConfig","TypedCameraObjNode","_aspect","_background_controller","background_controller_constructor","BaseBackgroundController","_controls_controller","ControlsController","_layers_controller","LayersController","_post_process_controller","PostProcessController","layers_controller","background_controller","post_process_controller","update_composer_passes","update_camera","controls_controller","update_controls","set_as_master_camera","set_master_camera_node_path","_update_for_aspect_ratio","set_params_from_object","ThreejsViewer","_timestamp","performance","now","_core_geometries","_core_objects","_objects","_create_core_objects","core_object","core_objects","create_core_geometries","isMesh","isLine","isPoints","faces","group_name","core_objects_from_group","co","_compute_bounding_box","center","bounding_box","getCenter","getSize","bbox","expandByObject","Box3","first_geometry","has_attrib","attrib_type","attrib_class","child","geometry_from_object","rename_attribute","first_object","masks_string","matching_attrib_names","src_group","new_group","ATTRIB_NAMES","ComponentName","COMPONENT_INDICES","_core_geometry","remapped_name","component_index","remaped_name","value_index","attrib_value_index","start_index","_index","Vector4","_position","new_position","set_attrib_value_vector3","_normal","new_normal","v2","v3","new_value_index","_array_index","_count","_current_count_index","_resolve","_max_time_per_chunk","max_time_per_chunk","_check_every_interations","check_every_interations","iteratee_method","_iteratee_method_count","_bound_next_with_count","next_with_count","start_time","_array","_iteratee_method_array","_bound_next_with_array","next_with_array","_current_array_element","segments_count","arc_angle","radian_per_segment","point_radian","positions_2d","position_2d","DEFAULT","SCALE","PSCALE","EYE","DEFAULT_COLOR","DEFAULT_UV","CoreInstancer","_group_wrapper","_matrices","_is_pscale_present","_is_scale_present","_is_normal_present","_is_up_present","_do_rotate_matrices","_matrix_from_point","pscale","scale_matrix","makeScale","translate_matrix","makeTranslation","multiply","rotate_matrix","eye","geometry_to_instance","template_core_group","attributes_to_copy","instance_pts","InstancedBufferGeometry","instances_count","colors","scales","orients","has_color","instance_matrices","matrices","instance_pt","index3","index4","has_uv","index2","InstancedBufferAttribute","attrib_names_matching_mask","pt","mark_as_instance","_attribute_datas_by_name","data_keys_prefix","skip_entries","do_convert","convert_to_numeric","success_callback","progress_callback","error_callback","fetch","response","json","get_prefixed_json","catch","prefixes","first_prefix","core_geo","init_position_attribute","_find_attributes","convert_to_numeric_masks","attrib_values","_attribute_values_for_name","numerical_attrib_values","index_data","array_to_indexed_arrays","set_indexed_attribute","first_pt","_value_has_subentries","deep_attrib_name","deep_attrib_value","CoreAttributeData","from_value","json_element","GLTFLoader","manager","dracoLoader","ddsLoader","GLTFRegistry","removeAll","load","onLoad","onProgress","onError","resourcePath","extractUrlBase","itemStart","_onError","itemError","itemEnd","loader","setPath","setResponseType","crossOrigin","setWithCredentials","gltf","setDRACOLoader","setDDSLoader","extensions","decodeText","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","asset","version","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","spot","innerConeAngle","outerConeAngle","penumbra","decay","getMaterialType","extendParams","materialParams","materialDef","parser","pending","metallicRoughness","pbrMetallicRoughness","isArray","baseColorFactor","baseColorTexture","assignTexture","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","BINARY_EXTENSION_CHUNK_TYPES","headerView","DataView","header","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","specular","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","defineProperties","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","getDependency","decodeDracoFile","extendTexture","repeat","texCoord","source","copySampleValue_","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t1","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","5125","Uint32Array","5126","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","resolveURL","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","cache","primitiveCache","textureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","gltfAttributeName","box","targets","maxDisplacement","vector","setX","setY","setZ","expandByVector","sphere","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","morphPositions","morphNormals","addMorphTargets","markDefs","getDependencies","scenes","cameras","nodeDefs","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","cacheKey","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","bufferViewDef","bufferViews","sparse","pendingBufferViews","bufferAttribute","elementBytes","itemBytes","byteStride","ibSlice","ibCacheKey","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","pointsMaterial","sizeAttenuation","lineMaterial","cachedMaterial","vertexTangents","flatShading","morphTargets","uv2","materialIndex","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","alphaMode","depthWrite","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","cached","promise","meshIndex","results","skinWeight","normalizeSkinWeights","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","parameters","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","outputArray","scaled","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","sanitizeNodeName","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","boneInverses","jointNode","matrixWorld","sceneIndex","sceneDef","nodeIds","DRACOLoader","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","defaultAttributeTypes","setDecoderPath","setDecoderConfig","config","setWorkerLimit","setVerbosity","setDrawMode","setSkipDequantization","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","worker","taskKey","taskCache","cachedTask","taskID","taskCost","geometryPending","_getWorker","_worker","postMessage","_createGeometry","finally","_releaseTask","geometryData","_loadLibrary","responseType","_initDecoder","useJS","WebAssembly","librariesPending","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","lastIndexOf","Worker","_taskCosts","_taskLoad","onmessage","debug","terminate","decodeAttribute","draco","decoder","dracoGeometry","attributeType","dracoArray","numComponents","num_components","numValues","num_points","DracoFloat32Array","GetAttributeFloatForAllPoints","DracoInt8Array","GetAttributeInt8ForAllPoints","DracoInt16Array","GetAttributeInt16ForAllPoints","Int32Array","DracoInt32Array","GetAttributeInt32ForAllPoints","DracoUInt8Array","GetAttributeUInt8ForAllPoints","DracoUInt16Array","GetAttributeUInt16ForAllPoints","DracoUInt32Array","GetAttributeUInt32ForAllPoints","GetValue","destroy","onModuleLoaded","DracoDecoderModule","Decoder","decoderBuffer","DecoderBuffer","Init","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","ptr","error_msg","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","numFaces","num_faces","indexArray","GetFaceFromMesh","WeakMap","releaseDecoderModule","getDecoderModule","geometry1","geometry0","geometry_wrapper0","geometry_wrapper1","segments0","segments","segments1","geometries_by_segments_count","smallest_geometry","largest_geometry","smallest_segments","largest_segments","smallest_points","largest_points","smallest_points_count","all_points","points_indices","segment","matched_segment","SceneJsonImporter","PolyScene","AllRegister","run","mark_as_loading","set_frame_range","set_frame_range_locked","importer","JsonImportDispatcher","process_data","process_ui_data","mark_as_loaded","_master_camera_node_path","camera_node_path","_find_any_camera","_queue","_block_level","_process_item_bound","_process_item","process_queue","original_trigger_graph_node","blocked","delete","run_post_dirty_hooks","_next_id","Graph","directed","compound","multigraph","src_id","hasNode","setEdge","graph_has_cycle","alg","isAcyclic","removeEdge","clear_successors_cache_with_predecessors","src_id_s","dest_id_s","successor_ids","next_ids","next_next_ids","next_next_id","all_next_ids","all_predecessor_ids","all_successor_ids","_cooking_nodes_by_id","_resolves","flush","events_listener","_events_listener","emitter","process_events","auto_updating","player_mode","CONTEXT_OPTIONS","_next_renderer_id","_next_env_map_id","_renderers","_env_maps","_require_webgl2","_rendering_context_webgl","webgl2","context_name","getContext","_polygon_id","flush_callbacks_with_renderer","first_id","first_renderer","_node_register","_node_register_categories","_node_register_options","node_type","parent_node_type","option_only","option_except","context_and_type","registered_nodes_for_context_and_parent_type","_mouse_events_controller","_controllers","_get_controller_for_node","unregister_node","accepts_event","process","_dirty_count","_dirty","_dirty_timestamp","_post_dirty_hook_names","_post_dirty_hooks","_forbidden_trigger_nodes","propagate","enqueue","_cached_successors","clear_successors_cache","graph_all_predecessors","_width","_border_radius","_color","_layout_vertical","comment","_comment","UI_DATA_COMMENT_UPDATED","UI_DATA_POSITION_UPDATED","snap","round","time_dependent","TimeDependentState","ErrorState","BaseState","are_params_time_dependent","are_inputs_time_dependent","graph_predecessors","frame_node","_message","ERROR_UPDATED","_parent","base_name","contains","separator","parent_full_path","_on_set_parent_hooks","_context","_children","_children_by_type","_children_and_grandchildren_by_context","_is_dependent_on_children","_selection","CoreNodeSelection","dependent","_children_node","current_child_with_name","increment","current_name","update_name_from_parent","_add_to_nodes_by_type","add_to_instanciated_node","available_children_classes","node_class","initialize_base_and_node","set_creation_completed","on_set_parent","CREATED","child_node_json","lifecycle_controller","on_create_hook_allowed","run_on_create_hooks","run_on_add_hooks","run_on_child_add_hooks","webgl_controller","set_require_webgl2","output_connection","old_src","old_output_index","old_dest","old_input_index","graph_disconnect_successors","_remove_from_nodes_by_type","remove_from_instanciated_node","run_on_child_remove_hooks","run_on_delete_hooks","DELETED","parent_id","node_id","add_to_children_and_grandchildren_by_context","remove_from_children_and_grandchildren_by_context","traverse_children","_node_ids","send_update_event","nodes_to_add","node_ids_to_add","nodes_to_remove","node_ids_to_remove","SELECTION_UPDATED","_creation_completed","_on_child_add_hooks","execute_hooks_with_child_node","_on_child_remove_hooks","_on_create_hooks","execute_hooks","_on_add_hooks","_on_delete_hooks","hooks","_cooking","_cooks_count","_max_cook_time","_cook_time_with_inputs","_cook_time","_cook_time_params","_inputs_evaluation_required","_cooking_dirty_timestamp","dirty_timestamp","perf_active","started","_cook_time_start","_init_cooking_state","_cook_time_with_inputs_start","input_containers","evaluate_inputs_and_params","_init_cooking_start_time","input_container","input_clonable_state_with_override","core_content_cloned","_start_cook_if_no_errors","_increment_cooks_count","_terminate_cook_process","_record_cook_time","cook_time_end","_cook_time_params_start","record_node_cook_data","eval_required_inputs_p","METHODS","_find_scene_node_scene_nodes","SUCCESSORS","PREDECESSORS","graph_nodes","start_nodes","base_nodes","start_node","_find_base_nodes_from_node","param_nodes_referree","scene_node","base_nodes_by_graph_node_id","uniq_base_nodes","next_nodes","BaseParamClass","className","BaseNodeClass","_params_referrees_by_graph_node_id","node_by_graph_node_id","params_referree","_blocked_emit","_blocked_parent_emit","_count_by_event_name","is_multiple","block_emit","unblock_emit","is_visible","value_serialized","has_expression","frame_graph_node_id","graph_predecessor_ids","_param_create_mode","_params_by_name","_params_list","_param_names","_non_spare_params","_spare_params","_non_spare_param_names","_spare_param_names","_params_added_since_last_params_eval","_params_node","init_dependency_node","init_from_params_config","create_params","_post_create_params","_update_caches","init_param_accessors","run_post_create_params_hook","has_created_a_param","has_deleted_a_param","delete_param","param_data","current_names_in_accessor","getOwnPropertyNames","_remove_unneeded_accessors","configurable","names_to_remove","current_name_in_accessor","name_to_remove","param_with_type","set_with_type","value_with_type","child_name","existing_param","init_components","_eval_param","eval_params","_post_create_params_hook","_on_scene_load_hook_names","_on_scene_load_hooks","is_boolean","to_boolean","parse_completed","parse_started","parsed_tree","function_generator","FunctionGenerator","dependencies_controller","parse_expression_for_string_param","parse_tree","compute_allowed","eval_function","eval_allowed","expression_string_generator","ExpressionStringGenerator","new_expression_string","NATIVE_MATH_METHODS_RENAMED","math_random","EASING_METHODS","DIRECT_EXPRESSION_FUNCTIONS","remaped","LITERAL_CONSTRUCT","LiteralConstructsController","GLOBAL_CONSTANTS","INDIRECT_EXPRESSION_METHODS","MethodModule","PROPERTY_OFFSETS","BaseTraverser","_attribute_requirements_controller","AttributeRequirementsController","methods","method_index","method_dependencies","immutable_dependencies","function_main_string","function","function_body","assign_attributes_lines","attribute_presence_check_line","assign_arrays_lines","clear_error","Core","String","method_arguments","arg","literal_contruct","arguments_joined","direct_function_name","path_node","function_string","path_argument_function","path_argument","_create_method_and_dependencies","argument","argument_member_expression","attrib_node","property_node","var_attribute_size","var_array","identifier_name_without_dollar_sign","direct_constant_name","_method_centroid","method_constructor","method_dependency","find_dependency","set_jsep_node","register","Bbox","ch","Ch","centroid","Centroid","cop_res","CopRes","local","Local","opdigits","Opdigits","Point","PointsCount","Copy","str_chars_count","StrCharsCount","str_concat","StrConcat","str_index","StrIndex","str_sub","StrSub","VECTOR_NAMES","COMPONENT_NAMES","BaseMethod","create_dependency_from_index_or_path","vector_name","get_referenced_node_container","_get_value_from_container","_update_from_name_change_bound","_update_from_name_change","update_from_name_change","new_path","to_path","literal","jsep_node","graph_disconnect_predecessors","node_in_path","resolved_graph_node","unresolved_path","is_index","set_resolved_graph_node","set_unresolved_path","get_referenced_param","ref","stamp_node","stamp_value","resolution","request_asset_url","desktop_controller","add_local_path","local_path_server_url","name_node","tail_digits","sub_string","range_start","range_size","_attribute_names","assign_attribute_line","assign_item_size_line","assign_array_line","var_names","var_attribute","cyclic_graph_detected","connect_immutable_dependencies","handle_method_dependencies","listen_for_name_changes","handle_method_dependency","node_simple","COMPONENT_NAMES_COLOR","other_point","json1","json2","_interpolation","generateUUID","json_point","ramp","current_point","other_ramp_value","other_points","point1","point2","are_equal_json","COMPONENT_NAMES_VECTOR2","COMPONENT_NAMES_VECTOR3","COMPONENT_NAMES_VECTOR4","_frame","src_context","_connections","ConnectionsController","_inputs","InputsController","_outputs","OutputsController","_output_connections","max_inputs_count","_input_connections","all_connections_after_are_undefined","connections_by_id","_graph_node_inputs","_has_named_inputs","_min_inputs_count","_max_inputs_count","_depends_on_inputs","_override_clonable_state","depends_on_inputs","min_inputs_count","init_graph_node_inputs","_named_input_connection_points","connection_points","set_min_inputs_count","set_max_inputs_count","NAMED_INPUTS_UPDATED","_create_graph_node_input","graph_input_node","init_inputs_clonable_state","init_connections_controller_inputs","containers","existing_input_indices","eval_required_input","input_error_message","has_named_inputs","get_named_input_index","has_named_outputs","old_input_node","old_connection","NodeConnection","_run_on_set_input_hooks","INPUTS_UPDATED","inputs_clonable_state","FROM_NODE","_inputs_clonable_states","ALWAYS","NEVER","TypeAssert","unreachable","_user_inputs_clonable_states","_default_inputs_clonale_state_values","OVERRIDE_CLONABLE_STATE_UPDATE","_on_update_hooks","_on_update_hook_names","_node_src","_node_dest","_output_index","_input_index","add_output_connection","add_input_connection","remove_output_connection","remove_input_connection","_has_outputs","_has_named_outputs","get_named_output_index","_named_output_connection_points","NAMED_OUTPUTS_UPDATED","output_indices","used_output_indices","_nodes_by_graph_node_id","_lifecycle_on_create_allowed","_loading_state","_auto_updating","_first_object_loaded","_set_loading_state","set_auto_update","getElementById","parentElement","removeChild","_params_by_id","references","missing_expression_reference","MissingExpressionReference","_check_for_missing_references_for_node","_check_for_missing_references_for_param","missing_references","match_found","matches_path","resolve_missing_dependencies","_node_context_signatures","_instanciated_nodes_by_context_and_type","_root","ObjectsManagerNode","init_default_scene","current_parents","current_parent","node_context_signature","nodes_by_ids","ObjectsManagerParamsConfig","TypedBaseManagerNode","_queued_nodes_by_id","_queued_nodes_by_path","_expected_geo_nodes","_process_queue_start","add_on_child_add_hook","_on_child_add","add_on_child_remove_hook","_on_child_remove","path_id","expected_loading_geo_nodes_by_id","add_to_scene","add_to_queue","node_input","children_group","parent_object","get_parent_for_node","used_in_scene","add_object_to_parent","remove_object_from_parent","is_display_node_cooking","geo_nodes","node_by_id","geo_node","is_displayed","remove_from_scene","ManagerContainer","_started","_start_time","_previous_timestamp","_nodes_cook_data","_durations_by_name","_durations_count_by_name","total_time","PerformanceNode","update_cook_data","current_timestamp","print_node_cook_data","print_recordings","performance_nodes","performance_node","cook_time_total","print_objects","print_object","table_entries","sorted_print_objects","table","durations_by_name","durations_count_by_name","durations","names_by_duration","sorted_durations","entry","duration_per_iteration","_cook_time_total","_cook_time_total_with_inputs","_cook_time_total_params","cook_time","cook_time_with_inputs","cook_time_params","cooks_count","cook_time_per_iteration","cook_time_total_with_inputs","cook_time_total_with_inputs_per_iteration","cook_time_total_params","cook_time_total_params_per_iteration","_time","_prev_performance_now","_frame_range","_frame_range_locked","_playing","start_frame","end_frame","SceneEvent","FRAME_RANGE_UPDATED","start_locked","end_locked","update_frame","new_frame","FRAME_UPDATED","update_time_dependent_uniform_owners","update_time","_ensure_frame_within_bounds","set_time","are_children_cooking","increment_time","performance_now","new_time","PLAY_STATE_UPDATED","playing","include_node_param_components","nodes_by_graph_node_id","params_by_graph_node_id","all_nodes","node_serializer","_time_dependent_uniform_owners","_time_dependent_uniform_owners_ids","_resolution","_resolution_dependent_uniform_owners","_resolution_dependent_uniform_owners_ids","_update_time_dependent_uniform_owners_ids","_update_resolution_dependent_uniform_owners_ids","update_resolution_dependent_uniforms","create_nodes","set_selection","override_clonable_state_allowed","override","set_override_clonable_state","set_flags","set_params","from_data_custom","set_inputs","pos","set_comment","process_nodes_ui_data","node_names","node_name","importers","process_inputs_data","selected_nodes","inputs_data","input_data","input_node_name","has_named_input","node_data","param_type","has_param_and_same_type","_is_param_data_complex","_process_param_data_complex","_process_param_data_simple","params_delete_required","params_add_required","spare_param","run_on_scene_load_hooks","LINE_BREAK_REGEXP","CopRegister","EventRegister","GlRegister","MatRegister","ObjRegister","SopRegister","poly","BuilderCopNode","EnvMapCopNode","NullCopNode","SwitchCopNode","BuilderCopParamsConfig","_texture_mesh","_texture_material","_texture_scene","_texture_camera","Camera","ShaderAssemblerTexture","set_assembler_globals_handler","_reset_if_resolution_changed","_render_target","_create_render_target","_renderer","_create_renderer","_reset","_pixelBuffer","_create_pixel_buffer","height","render_on_target","fragment","_fragment_shader","run_assembler","update_fragment_shader","fragment_shader","_uniforms","force_time_dependent","unforce_time_dependent","render_target","autoClear","setRenderTarget","readRenderTargetPixels","RGBAFormat","FloatType","CoreSleep","sleep","WebGLRenderTarget","navigator","userAgent","stencilBuffer","depthBuffer","BaseFlag","FLAG_BYPASS_UPDATED","FLAG_DISPLAY_UPDATED","create_inputs_from_params","add_input","_inputless_param_names","raw_input_serialized_by_param_name","default_value_serialized_by_param_name","last_param_init_value","default_value_from_name","gl_input_default_value","is_root","register_node_context_signature","has_bypass","has_display","selected_children","selected_ids","selected_node","add_custom","SceneJsonExporter","sanitize_string","node_exporter","gl_var","ParamConfigsController","_param_configs_set_allowed","_function_declared","node_traverser","TypedNodeTraverser","nodes_by_shader_name","nodes_for_shader_name","sorted_nodes","root_nodes_for_shader","root_nodes_by_shader_name","sorted_node_ids","reset_code","_shaders_collection_controller","ShadersCollectionController","set_current_shader_name","set_param_configs","set_lines","set_code_lines","lines_map","add_code_lines","add_code_line_for_nodes_and_line_type","definition_type","node_definitions","collection","uniq","errored","definitions_by_node_id","lines_for_shader","first_definition","CodeFormatter","node_comment","line_wrap","post_line_separator","nodes_count","is_last","add_code_line_for_node_and_line_type","_uniform_name","_uniform","_create_uniform","uniform_by_type","callback_bound","_callback","has_value_changed","is_video_texture","set_uniform_value_from_texture","set_uniform_value_from_ramp","ramp_texture","param_constructor","_cached_param_value","has_changed","clone_value","_shader_names","_current_shader_name","_lines_controller_by_shader_name","LinesController","lines_controller","_definitions_by_node_id","_body_lines_by_node_id","LINE_SUFFIXES","LINE_PREFIXES","add_suffix","EnvMapCopParamsConfig","convert_texture_to_env_map","wait_for_renderer","PMREMGenerator","fromEquirectangular","Extension","BaseCopNodeClass","load_url","texture_as_env","set_texture_for_mapping","ext","_ext","VIDEO_EXTENSIONS","_load_as_video","loader_for_ext","EXR","EXRLoader","HDR","RGBELoader","setDataType","UnsignedByteType","BASIS","BasisTextureLoader","setTranscoderPath","detectSupport","TextureLoader","video","createElement","onloadedmetadata","VIDEO_SOURCE_TYPE_BY_EXT","_default_video_source_type","appendChild","img","drawImage","getImageData","PARAM_ENV_DEFAULT","ogg","ogv","mp4","rgbe_error","rgbe_error_code","msg","fgets","lineLimit","consume","len","chunk","fromCharCode","subarray","RGBEByteToRGBHalf","floatView","int32View","toHalf","bits","sourceArray","sourceOffset","destArray","destOffset","byteArray","rgbe_header_info","gamma_re","exposure_re","format_re","dimensions_re","valid","comments","programtype","gamma","exposure","charAt","RGBE_ReadHeader","image_rgba_data","data_rgba","byteValue","scanline_buffer","ptr_end","off","isEncodedRun","rgbeStart","scanline_width","num_scanlines","RGBE_ReadPixels_RLE","numElements","floatArray","halfArray","texData","generateMipmaps","transcoderPath","transcoderBinary","transcoderPending","workerConfig","astcSupported","bptcSupported","etcSupported","dxtSupported","pvrtcSupported","BASIS_FORMAT","cTFASTC_4x4","cTFBC7_M5","cTFBC3","cTFPVRTC1_4_RGBA","cTFETC1","_createTexture","texturePending","_allocateWorker","mipmaps","cTFBC1","DXT_FORMAT_MAP","cTFPVRTC1_4_RGB","_initTranscoder","jsLoader","binaryLoader","binaryContent","BasisWorker","cTFETC2","cTFBC4","cTFBC5","cTFBC7_M6_OPAQUE_ONLY","cTFATC_RGB","cTFATC_RGBA_INTERPOLATED_ALPHA","cTFRGBA32","cTFRGB565","cTFBGR565","cTFRGBA4444","DXT_FORMAT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","_BasisFile","BasisModule","onRuntimeInitialized","BasisFile","initializeBasis","hasAlpha","basisFile","getImageWidth","getImageHeight","levels","getNumLevels","getHasAlpha","cleanup","close","startTranscoding","mip","mipWidth","mipHeight","dst","getImageTranscodedSizeInBytes","transcodeImage","transcode","SwitchCopParamsConfig","set_width","disallow_inputs_evaluation","has_input","CameraMapControlsEventNode","CodeEventNode","PassEventNode","html_element","create_controls_instance","timestamp","controls_id","setup_controls","BaseMouseEventProcessor","raycaster","mouse","initialize_processor","MouseEvent","process_mouse_event","KeyboardEvent","process_keyboard_event","offsetX","offsetWidth","offsetY","offsetHeight","CodeEventParamsConfig","code_typescript","label","TYPESCRIPT","code_javascript","_compile_if_required","_processor","_last_compiled_code","TranspiledFilter","processor_class","processor_creator_function","PassEventParamsConfig","AbsGlNode","AcosGlNode","AddGlNode","AlignGlNode","AndGlNode","AsinGlNode","AtanGlNode","except","CeilGlNode","CosGlNode","ComplementGlNode","CrossGlNode","CycleGlNode","DegreesGlNode","DiskGlNode","DivideGlNode","EasingGlNode","ExpGlNode","Exp2GlNode","FitGlNode","Fit01GlNode","FloatToIntGlNode","FloatToVec2GlNode","FloatToVec3GlNode","FloatToVec4GlNode","FloorGlNode","FractGlNode","HsvToRgbGlNode","IntToFloatGlNode","InverseSqrtGlNode","InstanceTransformGlNode","LengthGlNode","LuminanceGlNode","NegateGlNode","LogGlNode","Log2GlNode","MixGlNode","MultGlNode","MultAddGlNode","NullGlNode","NoiseGlNode","NormalizeGlNode","OrGlNode","OutputGlNode","ParamGlNode","QuatMultGlNode","QuatFromAxisAngleGlNode","QuatToAngleGlNode","QuatToAxisGlNode","RampGlNode","RandomGlNode","RadiansGlNode","RefractGlNode","RgbToHsvGlNode","RotateGlNode","RoundGlNode","SignGlNode","SinGlNode","SqrtGlNode","SubstractGlNode","TanGlNode","TextureGlNode","TwoWaySwitchGlNode","Vec2ToFloatGlNode","Vec3ToFloatGlNode","Vec4ToFloatGlNode","Vec4ToVectorGlNode","VectorAlignGlNode","VectorAngleGlNode","FloatToIntGlParamsConfig","ParamsConfigFloatToInt","IntToFloatGlParamsConfig","ParamsConfigIntToFloat","FloatToVec2GlParamsConfig","ParamsConfig2","float2","FloatToVec3GlParamsConfig","ParamsConfig3","float3","FloatToVec4GlParamsConfig","ParamsConfig4","float4","VecToParamsConfig","BaseVecToGlNode","VecToGlFactory","components_v4","OUTPUT_NAME_VEC3","OUTPUT_NAME_W","INPUT_NAME_VEC4","in_vec4","out_vec3","out_w","MathFunctionArg1Factory","gl_input_name","BaseNodeGlMathFunctionArg1GlNode","MathFunctionArg2OperationFactory","in_prefix","operation","gl_operation","current_connections","expected_count","input_types","empty_array","second_connection","second_type","MathFunctionArg2BooleanFactory","BaseNodeGlMathFunctionArgBoolean2GlNode","op","boolean_operation","InputName","InputNames","DIR","DefaultValues","CrossGlParamsConfig","DiskGlParamsConfig","feather","vector2","EASE_NAMES","IMPORT_BY_EASE_NAME","IMPORT_DEPENDENCIES_BY_EASE_NAME","METHOD_NAMES_BY_EASE_NAME","default_ease_type","EasingGlParamsConfig","set_inputless_param_names","ease_name","glsl_function_code","ease_functions","function_dependencies","concat","in_value","BaseNodeGlMathFunctionArg5GlNode","HsvToRgbGlParamsConfig","hsv","function_declaration_lines","rgb","VARS","InstanceTransformGlParamsConfig","instance_position","instance_orientation","instance_scale","gl_output_name_position","gl_output_name_normal","_default_position","_default_normal","instancePosition","_default_instance_position","instanceOrientation","_default_input_instance_orientation","instanceScale","_default_input_instance_scale","result_position","result_normal","LuminanceGlParamsConfig","mult","BaseNodeGlMathFunctionArg4GlNode","VALUE","PRE_ADD","MULT","POST_ADD","pre_add","post_add","out_name","NOISE_NAME","NOISE_NAMES","CLASSIC_PERLIN_2D","CLASSIC_PERLIN_3D","CLASSIC_PERLIN_4D","NOISE_2D","NOISE_3D","NOISE_4D","IMPORT_BY_NOISE_NAME","INPUT_TYPES_BY_NOISE_NAME","OUTPUT_TYPE_BY_NOISE_NAME","METHOD_NAMES_BY_NOISE_NAME","OUTPUT_TYPE","OUTPUT_TYPES","NoChange","Float","Vec2","Vec3","Vec4","OUTPUT_TYPE_LABEL","CONNECTION_TYPE_BY_OUTPUT_TYPE","ALL_COMPONENTS","default_noise_type","default_output_type","amp","freq","NoiseGlParamsConfig","noise_name","output_type","octaves","amp_attenuation","freq_increase","AMP","FREQ","OFFSET","noise_function","noise_output_gl_type","fbm_function","output_gl_type","single_noise_line","lines_count_required","assembly_args","noise","offset_gl_type","offset_components_count","offset2","assembly_line","input_type","fbm_method_name","output_name_suffix","right_hand","OutputGlParamsConfig","set_node_lines_output","ParamGlParamsConfig","as_color","create_and_push","AXIS","ANGLE","RampGlParamsConfig","input_val","RandomGlParamsConfig","seed","RgbToHsvGlParamsConfig","Mode","Modes","LabelByMode","InputNamesByMode","MethodNameByMode","InputTypesByMode","axis","RotateParamsConfig","signature","_simple_line","simple_lines","TextureParamsConfig","rgba","CONDITION","IF_TRUE","IF_FALSE","ParamlessTypedGlNode","second_or_third_connection","condition","if_true","if_false","end","MeshBasicMatNode","MeshBasicBuilderMatNode","MeshLambertMatNode","MeshLambertBuilderMatNode","MeshStandardBuilderMatNode","PointsMatNode","MeshBasicMatParamsConfig","has_content","ShaderAssemblerBasic","ShaderLib","basic","template_shader","UniformsUtils","_add_custom_materials","distanceRGBA","DEPTH_PACKING","RGBADepthPacking","BasicDepthPacking","mNear","mFar","MeshLambertMatParamsConfig","ShaderAssemblerLambert","lambert","_update_metalness","_update_roughness","ShaderAssemblerStandard","is_physical","physical","standard","derivatives","PointsParamConfig","size_attenuation","CUSTOM_ASSEMBLER_MAP","ShaderAssemblerCustomPointsDistance","ShaderAssemblerCustomPointsDepth","ShaderAssemblerCustomPointsDepthDOF","USE_SIZEATTENUATION","AmbientLightObjNode","AreaLightObjNode","DirectionalLightObjNode","HemisphereLightObjNode","PointLightObjNode","SpotLightObjNode","EventsObjNode","MaterialsObjNode","CopObjNode","PostProcessObjNode","GeoObjNode","NullObjNode","SceneObjNode","OrthographicCameraObjNode","PerspectiveCameraObjNode","FogObjNode","AmbientLightObjParamsConfig","AmbientLight","AreaLightParamConfig","AreaLightObjParamsConfig","RectAreaLight","RectAreaLightUniformsLib","initialized","ltc_1","ltc_2","LTC_1","LTC_2","ltc","DirectionalLightParamConfig","cast_shadows","shadow_res","shadow_bias","DirectionalLightObjParamsConfig","_helper_controller","HelperController","DirectionalLightHelper","DirectionalLight","bias","mapSize","_target_target","BaseLightHelper","_square","Line","_line_material","rotateX","setScalar","HemisphereLightObjParamsConfig","sky_color","ground_color","HemisphereLightHelper","HemisphereLight","groundColor","OctahedronBufferGeometry","_quat","_color1","_color2","rotateZ","BufferAttribute","setRotationFromQuaternion","setXYZ","PointLightObjParamsConfig","shadow_near","shadow_far","PointLightHelper","PointLight","SphereBufferGeometry","SpotLightObjParamsConfig","SpotLightHelper","SpotLight","_cone","p2","coneLength","coneWidth","GeoObjParamConfig","DisplayNodeController","_sop_group","_create_sop_group","_on_create_bound","_on_create","_on_child_add_bound","sop_group","set_sop_group_name","display_node","_children_uuids_dict","_children_length","_request_display_node_container_bound","request_display_node_container","_display_node","_parent_object","set_parent_object","new_display_node","old_display_node","remove_children","new_objects","new_objects_are_different","NullObjParamConfig","AxesHelper","density","FogObjParamConfig","exponential","_linear_fog","Fog","getHex","_linear_fogexp2","FogExp2","SceneObjParamConfig","bg_color","OrthographicCameraObjParamConfigMixin","OrthographicCameraObjParamConfig","OrthographicCameraBackgroundController","OrthographicCamera","horizontal_size","_applied_controls_by_element_id","_controls_node","controls_param","controls_node","dispose_control_refs","controls_aleady_applied","apply_controls","CameraControlsConfig","set_from_camera_node","set_controls_events","controls_start_listener","on_controls_start","controls_end_listener","on_controls_end","update_transform_params_from_object","_camera_node_id","_controls","other_config","camera_node_id","overrideMaterial","clearColor","clearDepth","writeBuffer","readBuffer","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","getClearColor","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","BaseViewer","do_render","_animate_method","animate","_canvas","random","style","outline","classList","_set_events","_init_display","activate","_cancel_animate","dispose_controls","onresize","on_resize","compute_size_and_aspect","create_renderer","prepare_current_camera","increment_time_if_playing","_request_animation_frame_id","requestAnimationFrame","cancelAnimationFrame","delete_renderer","_active","_display_scene","_init_from_scene","_build","ViewerEventsController","set_camera_node","master_camera_node","viewer","_camera_node","_size","_update_graph_node","create_controls","get_operator_path","_create_graph_node","update_camera_aspect","_update_size","update_resolution_dependent_uniform_owners","_get_aspect","_update_from_camera_container","_bound_on_controls_start","_on_controls_start","_bound_on_controls_end","_on_controls_end","_bound_on_mousedown","_on_mousedown","_bound_on_mousemove","_on_mousemove","_bound_on_mouseup","_on_mouseup","onwebglcontextlost","_on_webglcontextlost","onwebglcontextrestored","_on_webglcontextrestored","request_animation_frame_id","PerspectiveCameraObjParamConfigMixin","PerspectiveCameraObjParamConfig","PerspectiveCameraBackgroundController","PerspectiveCamera","SCREEN_COORD","bl","br","tl","tr","CORNER_NAMES","_bg_corner","_bg_center","corner_name","_update_corner_vector","z_ratio","desired_ratio","coord","setFromCamera","ray","direction","origin","AddSopNode","AnimationCopySopNode","AnimationMixerSopNode","AttribAddMultSopNode","AttribCopySopNode","AttribCreateSopNode","AttribDeleteSopNode","AttribNormalizeSopNode","AttribPromoteSopNode","AttribRemapSopNode","AttribRenameSopNode","AttribTransferSopNode","BboxScatterSopNode","BlendSopNode","BoxSopNode","CacheSopNode","CodeSopNode","CircleSopNode","ColorSopNode","ConeSopNode","CopySopNode","DataSopNode","DataUrlSopNode","DelaySopNode","DeleteSopNode","FaceSopNode","FileSopNode","FuseSopNode","HexagonsSopNode","HierarchySopNode","InstanceSopNode","JitterSopNode","LayerSopNode","LineSopNode","MaterialSopNode","MergeSopNode","NoiseSopNode","NormalsSopNode","NullSopNode","ObjectMergeSopNode","OcclusionSopNode","ParticlesSystemGpuSopNode","PeakSopNode","PlaneSopNode","PointSopNode","PolywireSopNode","RaySopNode","ResampleSopNode","ScatterSopNode","SkinSopNode","ShadowsSopNode","SphereSopNode","SwitchSopNode","TextSopNode","TorusSopNode","TorusKnotSopNode","TransformSopNode","TubeSopNode","UvProjectSopNode","AddSopParamsConfig","create_point","open","connect_to_last_point","_create_point","_get_points","index_array","_positions","_get_positions","_triangle","_get_triangle","_deltas","_get_deltas","getArea","deltas","barycentric_coordinates","getBarycoord","point_values","new_attrib_value","sum","point_value","weighted_value","face","intersect_point","point_indices","position_attrib_array","point_positions","attrib_array","dist_to_points","distance_total","point_indx","count_by_type","human_type","names_by_type","sizes_by_name","types_by_name","AnimationCopySopParamsConfig","core_group_target","target_object","src_animations","set_core_group","AnimationMixerSopParamsConfig","prepare","PARAM_CALLBACK_prepare","_previous_time","_mixer","_actions_by_name","_values_by_param_name","_update_mixer","create_mixer","_animation_target","AnimationMixer","prev_value","action","clipAction","materials_by_id","object3d","_update_mixer_weights","set_object","get_float","_update_mixer_time","cache_value","setEffectiveWeight","prepare_animation_mixer","AttribAddMultSopParamsConfig","_update_attrib","input_cloned","AttribCopySopParamsConfig","tnew_name","core_group_dest","core_group_src","copy_vertex_attribute_between_core_groups","src_objects","dest_objects","dest_geometry","copy_vertex_attribute_between_geometries","src_attrib","src_points_count","dest_points_count","sub_array","dest_name","AttribCreateSopParamsConfig","class","value1","for_entities","value2","value3","value4","_x_arrays_by_geometry_uuid","_y_arrays_by_geometry_uuid","_z_arrays_by_geometry_uuid","_w_arrays_by_geometry_uuid","add_point_attribute","add_object_attribute","add_numeric_attribute_to_points","add_string_attribute_to_points","add_numeric_attribute_to_object","add_string_attribute_to_object","points_from_group","compute_expression_for_points","tmp_arrays","component_param","arrays_by_geometry_uuid","_init_array_if_required","tmp_array","add_numeric_vertex_attrib","compute_expression_for_objects","set_attrib_value","values_by_core_object_index","string_values","current_array","AttribDeleteSopParamsConfig","delete_vertex_attribute","delete_object_attribute","AttribNormalizeSopParamsConfig","change_name","_normalize_attribute","normalized_values","normalized_value","target_name","AttribPromoteMode","PromoteModeMenuEntries","MIN","MAX","FIRST_FOUND","AttribPromoteSopParamsConfig","class_from","class_to","_values_per_attrib_name","_filtered_values_per_attrib_name","_core_group","_core_object","find_values","filter_values","set_values","find_values_from_points","find_values_from_object","set_values_to_points","set_values_to_object","param_size","AttribRemapSopParamsConfig","_remap_attribute","only_integer_values","sorted_values","sorted_value","AttribRenameSopParamsConfig","rename_attrib","AttribTransferSopParamsConfig","dest_group","max_samples_count","distance_threshold","blend_width","_core_group_dest","dest_points","_core_group_src","_attrib_names","_error_if_attribute_not_found_on_second_input","_build_octree_if_required","_add_attribute_if_required","_transfer_attributes","second_input_changed","_octree_timestamp","_prev_param_src_group","points_src","_octree","CoreOctree","set_points","iterator","CoreIterator","start_with_array","_transfer_attributes_for_point","dest_point","total_dist","nearest_points","find_points","_interpolate_points","point_dest","src_points","CoreInterpolate","perform","blend_with","_interpolate_with_1_point","_interpolate_with_multiple_points","point_src","position_dest","position_src","value_src","_weighted_value_from_distance","value_dest","blend","_weight_from_distance","weighted_values_src","current_position","other_positions","_weights_from_2","_weights_from_3","dist_to_positions","other_position","OctreeNode","max_points_count","Sphere","found_points","intersects_sphere","points_in_sphere","_bbox","_level","_leaves_by_octant","_points_by_octant_id","_leaves","_bounding_boxes_by_octant","_bounding_boxes_by_octant_prepared","_center","intersectsSphere","accumulated_points","containsPoint","leaf","add_point","octant_ids","octant_id","create_leaf","_leaf_bbox","_octant_id","_prepare_leaves_bboxes","x_pos","y_pos","z_pos","corner","bbox_centers","_bbox_center","bbox_size_quarter","bbox_center","BboxScatterSopParamsConfig","set_geometry","BlendSopParamsConfig","core_group0","core_group1","objects0","objects1","object0","object1","attrib0","attrib1","attrib0_array","attrib1_array","c0","c1","BoxSopParamsConfig","divisions","_core_transform","_cook_with_input","_cook_without_input","BoxBufferGeometry","translate","translation_matrix","CacheSopParamsConfig","PARAM_CALLBACK_reset","is_cache_empty","toJSON","obj_loader","ObjectLoader","jsons","all_objects","param_callback_PARAM_CALLBACK_reset","DEFAULT_UP","CircleSopParamsConfig","_create_circle","_create_disk","CoreGeometryUtilCircle","rotate_geometry","CircleBufferGeometry","BaseCodeSopProcessor","core_groups","CodeSopParamsConfig","ColorSopParamsConfig","from_attribute","as_hsv","_r_arrays_by_geometry_uuid","_g_arrays_by_geometry_uuid","_b_arrays_by_geometry_uuid","_set_from_attribute","_eval_expressions","_eval_simple_values","_create_init_color","src_attrib_size","src_array","dest_array","dest_i","src_i","new_color","CoreColor","set_hsv","tmp_array_r","_update_from_param","tmp_array_g","tmp_array_b","_commit_tmp_values","target_array","euclideanModulo","clamp","setHSL","ConeSopParamsConfig","segments_radial","segments_height","cap","theta_start","theta_length","ConeBufferGeometry","CopySopParamsConfig","transform_only","copy_attributes","use_copy_expr","_attribute_names_to_copy","container0","container1","cook_with_template","cook_without_template","instance_core_group","template_points","_copy_moved_objects_on_template_points","_copy_moved_object_on_template_point","template_point","set_point","_get_moved_objects_for_template_point","moved_object","_copy_attributes_from_template","_stamp_instance_group_if_required","moved_objects","_copy_moved_objects_for_instance","set_global_index","stamped_instance_core_group","_copy_moved_objects_for_each_instance","_stamp_node","create_stamp_node","CopyStamp","set_forbidden_trigger_nodes","_global_index","_point","DEFAULT_DATA_STR","DataSopParamsConfig","JsonDataLoader","set_json","DataUrlSopParamsConfig","json_data_keys_prefix","_on_load","_on_error","DelaySopParamsConfig","inputs_contents","ComparisonOperator","ComparisonOperatorMenuEntries","DeleteSopParamsConfig","invert","hide_objects","by_object_type","by_expression","by_attrib","attrib_string","attrib_numeric","attrib_comparison_operator","by_bbox","bbox_size","by_visible","keep_points","_marked_for_deletion_per_object_index","_bbox_cache","_eval_for_points","_eval_for_objects","objects_to_keep","_eval_expressions_for_objects","_eval_type_for_objects","_eval_attrib_for_objects","marked_for_deletion","object_index","point_objects_from_deleted_objects","_point_object","init_points_count","_eval_expressions_for_points","_eval_attrib_for_points","_eval_bbox_for_points","geometry_from_points","kept_points","keep_point","first_attrib_value","comparison_attrib_value","_comparison","attrib_ComparisonOperator","object_type_name","attrib_float","in_bbox","core_points","FaceSopParamsConfig","make_faces_unique","add_face_center_attribute","add_face_id","_make_faces_unique","_add_face_center_attribute","_add_face_id","_transform_faces","current_value","face_center","fi","pi","FileSopParamsConfig","always_reference_asset","CoreLoaderGeometry","on_success","on_error","load_auto","obj","on_load_success","object2","on_load_succes_gltf","on_load_succes_drc","loader_for_gltf","loader_for_glb","loader_for_drc","loader_for_obj","draco_loader","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","map_use_pattern","ParserState","vertices","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","smooth","startMaterial","previous","inherited","groupCount","mtllib","groupStart","groupEnd","cloned","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","parseNormalIndex","parseUVIndex","addVertex","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ic","uvLen","nLen","addPointGeometry","vi","addLineGeometry","uvi","text","setMaterials","lineFirstChar","trimLeft","trim","vertexData","faceVertices","vertex","vertexParts","v1","lineParts","lineVertices","lineUVs","li","llen","parts","pointData","exec","hasVertexColors","buffergeometry","createdMaterials","miLen","materialHash","sourceMaterial","materialPoints","materialLine","FuseSopParamsConfig","dist","_fuse_core_object","precision","points_by_position","HexagonsSopParamsConfig","hexagon_radius","points_only","CoreGeometryOperationHexagon","_param_size","_param_hexagon_radius","_param_points_only","side_length","half_side_length","HierarchyMode","HIERARCHY_MODES","ADD_PARENT","REMOVE_PARENT","HierarchySopParamsConfig","_add_parent_to_core_group","_remove_parent_from_core_group","_add_parent_to_object","new_parent","_add_new_parent","new_parent2","new_children","_remove_parent_from_object","new_child","current_children","_get_children_from_objects","InstanceSopParamsConfig","apply_material","core_group_to_instance","object_to_instance","_create_instance","ObjectTypeByObject","_apply_material","mat_builder_node","create_instance_buffer_geo","node_with_mat_name","mesh_lambert_mat","mesh_lambert_mat_name","mat_node","instance_transform1","output1","create_mesh_lambert","JitterSopParamsConfig","amount","rand","LayerSopParamsConfig","LineSopParamsConfig","last_pt","i_n","MaterialSopParamsConfig","apply_to_children","objects_from_group","grand_child","MergeSopParamsConfig","compact","input_core_group","_make_compact","objects_by_type","merged_objects","isLineSegments","merge_geometries","Operation","Operations","ADD","SET","SUBSTRACT","DIVIDE","NoiseSopParamsConfig","use_normals","compute_normals","_simplex_by_seed","_rest_points","core_group_rest","_rest_core_group_timestamp","simplex","_get_simplex","target_attrib_size","rest_point","current_attrib_value","noise_value","_fbm","divide","amplitude","noise3d","_create_simplex","random_generator","SimplexNoise","grad3","grad4","perm","dot3","dot4","xin","yin","j1","G2","x0","y0","x1","y1","x2","y2","ii","jj","gi0","gi1","gi2","t2","zin","k1","i2","j2","k2","G3","z0","z1","z2","x3","y3","z3","kk","gi3","t3","noise4d","l1","l2","i3","j3","k3","l3","F4","G4","w0","w1","w2","w3","x4","y4","z4","w4","ll","gi4","t4","NormalsSopParamsConfig","edit","update_x","update_y","update_z","recompute","_eval_expressions_for_core_group","_invert_normals","_eval_expressions_for_core_object","normal_attrib","NullSopParamsConfig","set_border_radius","ObjectMergeSopParamsConfig","geometry_node","import_input","OcclusionSopParamsConfig","samples","sep","buffer_resolution","_process_occlusion_on_object","normal_array","aoSampler","cells","sample","ao","report","ParticlesSystemGpuSopParamsConfig","auto_textures_size","max_textures_size","textures_size","ShaderAssemblerParticles","gpu_controller","ParticlesSystemGpuComputeController","render_controller","ParticlesSystemGpuRenderController","_reset_material_if_dirty_bound","_reset_material_if_dirty","_on_create_prepare_material_bound","_on_create_prepare_material","reset_gpu_compute_and_set_dirty","reset_render_material","is_on_frame_start","init_render_material","set_restart_not_required","reset_particle_groups","init_core_group","restart_simulation_if_required","compute_similation_if_required","_find_root_nodes","compile","shaders_by_name","set_shaders_by_name","reset_gpu_compute","assign_uniform_values","find_attribute_export_nodes","points_mat","points_mat_constant_point_size","points_mat_output1","create_points_mat","setup_shader_names_and_variables","update_shaders","leaves_from_nodes","TextureAllocationsController","allocate_connections_from_root_nodes","set_texture_allocations_controller","texture_allocations_controller","export_node","add_export_body_line","is_importing","connected_input_node","_handle_globals_time","_handle_globals_default","attrib_read","_allocations","_next_allocation_index","leaf_nodes","variables","TextureVariable","add_graph_node_id","connected_input_connection_point","output_names_attributes","allocate_variables","variables_by_size_inverse","allocate_variable","new_variable","allocated","has_variable","allocated_variable","has_space_for_variable","add_variable","new_allocation","TextureAllocation","next_allocation_name","explicit_shader_names","allocation_for_shader_name","input_names_for_node","_variables","set_allocation","variables_for_input_node","_allocation","_graph_node_ids","_particles_group_objects","_render_material","update_render_material_uniforms","getCurrentRenderTarget","assign_custom_uniforms","new_texture_allocations_json","_texture_allocations_json","init_custom_material_uniforms","assign_render_material","_simulation_restart_required","variables_by_name","_created_textures_by_name","_used_textures_size","init_particle_group_points","create_gpu_compute","_gpu_compute","_particles_core_group","_last_simulated_frame","_compute_simulation","update_simulation_material_uniforms","nearest_power_of_two","nearestPower2","isPowerOfTwo","max_particles_count","_init_particles_uvs","GPUComputationRenderer","renderTargets","all_variables","addVariable","setVariableDependencies","_create_texture_render_targets","_fill_textures","create_simulation_material_uniforms","uv_attrib_name","attribute_constructor","texture_allocation","texture_variables","texture_position","createTexture","_restart_simulation","renderTexture","selected_geometries","sizeX","sizeY","currentTextureIndex","passThruUniforms","passThruTexture","passThruShader","createShaderMaterial","addResolutionDefine","materialShader","toFixed","computeFragmentShader","variableName","initialValueTexture","capabilities","isWebGL2","maxVertexTextures","createRenderTarget","depVar","found","nextTextureIndex","dl","doRenderTarget","getAlternateRenderTarget","sizeXTexture","sizeYTexture","currentRenderTarget","getRenderTarget","PeakSopParamsConfig","child_object","ROTATE_START","ROTATE_END","PlaneSopParamsConfig","use_segments_count","_create_plane","size2d","PointSopParamsConfig","update_normals","tmp_array_x","tmp_array_y","tmp_array_z","do_update_param","value_param","do_update","new_array","_array_for_component","DEFAULT_R","DEFAULT_S","PolywireSopParamsConfig","closed","_geometries","_create_tube","line_segment","CoreGeometryUtilCurve","current_points","_create_tube_from_points","circle_template","circles","new_circle","circle","prev_circle","_skin","CoreGeometryOperationSkin","MAT_DOUBLE_SIDED","RaySopParamsConfig","transfer_face_normals","_bound_assign_mat","_assign_double_sided_material_to_object","_raycaster","core_group_collision","first_intersect","_assign_double_sided_material_to_core_group","intersectObjects","set_normal","double_sided_material","METHOD","CURVE_TYPE","POINTS_COUNT","SEGMENT_LENGTH","CURVE_TYPES","CENTRIPETAL","CHORDAL","CATMULLROM","ResampleSopParamsConfig","curve_type","tension","segment_length","resampled_objects","resampled_object","_resample","_create_curve_from_points","old_curve_positions","curve","CatmullRomCurve3","new_curve_points","_get_points_from_curve","getSpacedPoints","getLength","ScatterSopParamsConfig","transfer_attributes","attributes_to_transfer","add_id_attribute","areas_thresholds","area_sum","area_by_face_index","area","sorted_faces","attrib_values_by_name","start_with_count","face_index","random_position","attrib_value_at_position","ShadowsSopParamsConfig","cast_shadow","receive_shadow","SkinSopParamsConfig","process_one_input","process_two_inputs","line_segments0","_get_line_segments","first_line_segment","src_geometries","line_segment_to_geometries","prev_src_geometry","set_geometries","line_segments1","line_segments","smallest_array","largest_array","other_line_segment","other_geo","SphereType","SPHERE_TYPE","isocahedron","SPHERE_TYPES","ISOCAHEDRON","SphereSopParamsConfig","angle_range_x","angle_range_y","detail","_create_required_geometry","_create_default_sphere","_create_default_isocahedron","IcosahedronBufferGeometry","SwitchSopParamsConfig","opentype","TEXT_TYPE","TEXT_TYPES","FLAT","STROKE","TextSopParamsConfig","font","multiline","extrude","stroke_width","_font_loader","FontLoader","_loaded_fonts","_load_url","err","_create_geometry_from_type_mesh","_create_geometry_from_type_flat","_create_geometry_from_type_line","_create_geometry_from_type_stroke","displayed_text","curveSegments","TextBufferGeometry","shapes","_get_shapes","ShapeBufferGeometry","shapes_from_font","getPoints","_svg_loader","_load_svg_loader","getStrokeStyle","arcDivisions","pointsToStroke","holeShapes","shape","holes","hole","generateShapes","elements2","_load_ttf","_load_json","_ttf_loader","_load_ttf_loader","fnt","TTFLoader","SVGLoader","reversed","arraybuffer","reverseCommands","commands","paths","command","glyphs","unitsPerEm","glyphIndexMap","cmap","unicodes","unicode","glyph","token","ha","advanceWidth","x_min","xMin","x_max","xMax","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","head","yMin","yMax","original_font_information","tempV2_1","tempV2_2","tempV2_3","tempV2_4","tempV2_5","tempV2_6","tempV2_7","lastPointL","lastPointR","point0L","point0R","currentPointL","currentPointR","nextPointL","nextPointR","innerPoint","outerPoint","defaultDPI","defaultUnit","parseArcCommand","rx","ry","x_axis_rotation","large_arc_flag","sweep_flag","dx2","dy2","x1p","y1p","rxs","rys","x1ps","y1ps","cr","dq","pq","q","cxp","cyp","cx","cy","svgAngle","currentPath","absellipse","ux","uy","vx","vy","ang","acos","parseStyle","addStyle","svgName","jsName","adjustFunction","hasAttribute","parseFloatWithUnits","positive","getReflection","parseFloats","units","unitConversion","theUnit","u","endsWith","getTransformScaleX","te","getTransformScaleY","transformStack","tempTransform0","tempTransform1","tempTransform2","tempTransform3","tempV2","tempV3","currentTransform","xml","DOMParser","parseFromString","parseNode","nodeType","transformsTexts","tIndex","transformText","openParPos","closeParPos","transformType","tx","ty","rotate","multiplyMatrices","scaleX","scaleY","premultiply","parseNodeTransform","getNodeTransform","nodeName","control","firstPoint","isFirstPoint","doSetFirstPoint","numbers","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","autoClose","curves","currentPoint","parsePathNode","parseRectNode","parsePolygonNode","parsePolylineNode","subpath","absarc","subPaths","parseCircleNode","parseEllipseNode","parseLineNode","setStyle","transfVec2","applyMatrix3","isRotated","isTransformRotated","isLineCurve","isCubicBezierCurve","v0","isQuadraticBezierCurve","isEllipseCurve","aX","aY","xRadius","yRadius","transformPath","childNodes","documentElement","fillOpacity","strokeOpacity","strokeWidth","strokeLineJoin","strokeLineCap","strokeMiterLimit","lineJoin","lineCap","miterLimit","strokeColor","pointsToStrokeWithBuffers","vertexOffset","numPoints","dupPoints","newPoints","removeDuplicatedPoints","nextPoint","innerSideModified","joinIsOnLeftSide","isMiter","isClosed","previousPoint","strokeWidth2","deltaU","u0","initialJoinIsOnLeftSide","numVertices","currentCoordinate","currentCoordinateUV","getNormal","iPoint","normal1","u1","miterSide","setLength","negate","miterLength2","segmentLengthPrev","segmentLengthNext","makeSegmentTriangles","makeSegmentWithBevelJoin","createSegmentTrianglesWithMiddleSection","makeCircularSector","miterFraction","addCapGeometry","lastOuter","lastInner","rotateAround","addVectors","vl","TorusSopParamsConfig","radius_tube","segments_tube","TorusBufferGeometry","TorusKnotBufferGeometry","TorusKnotSopParamsConfig","TransformSopParamConfig","look_at","pivot","from_objects","TubeSopParamsConfig","CylinderBufferGeometry","UvProjectSopParamsConfig","_camera_controller","CameraController","_update_uvs_from_camera","_processed_core_group","_camera_object","set_target","remove_target","look_at_target","obj_world_matrix","uvw","_vector_in_camera_space","project","_update_always","_listener_added","_listener","_execute_callback","_remove_camera_event","old_target","_target","_add_camera_event","new_update_always","CHANGE","MOVEEND","_current_event_name","CopyShader","ShaderPass","textureID","fsQuad","MaskPass","writeValue","clearValue","setMask","setLocked","stencil","setTest","setOp","REPLACE","setFunc","setClear","EQUAL","KEEP","ClearMaskPass","renderTarget","_pixelRatio","getPixelRatio","_height","renderTarget1","renderTarget2","copyPass","clock","Clock","swapBuffers","pass","insertPass","isLastEnabledPass","passIndex","deltaTime","getDelta","maskActive","NOTEQUAL","effectiveWidth","effectiveHeight","pixelRatio","mod","aa","execScript","POSITIVE_INFINITY","bufferSize","bufferType","resize","A","B","C","ba","ca","S","T","U","V","D","M","F","E","fa","G","H","I","J","K","L","da","ea","O","R","ga","Q","W","verify","Y","Z","$","X","ADAPTIVE","BLOCK","Zlib","DataTextureLoader","logBase","getBitsReturn","lc","getBits","nBits","uInt8Array","inOffset","parseUint8Array","hufTableBuffer","hufUnpackEncTable","inDataView","ni","im","iM","hcode","zerun","hufCanonicalCodeTable","hufLength","code","hufCode","getCharReturn","getChar","getCodeReturn","getCode","po","rlc","outBuffer","outBufferOffset","outBufferEndOffset","cs","Int16","UInt16","wdec14Return","wdec14","ls","hs","ai","as","bs","wav2Decode","nx","ox","ny","oy","i00","i01","i10","i11","py","ey","oy1","oy2","ox1","ox2","px","ex","p01","p11","p10","hufUncompress","nCompressed","nRaw","initialInOffset","parseUint32","hdec","lit","hufClearDecTable","hdecod","pl","plOffset","hufBuildDecTable","encodingTable","decodingTable","no","outOffset","inOffsetEnd","trunc","HUF_DECSIZE","hufDecode","predictor","interleaveScalar","stop","decodeRunLength","reader","getInt8","getUint8","unRleAC","currAcComp","acBuffer","halfZigBlock","acValue","dctComp","unZigZag","decodeFloat16","dctInverse","beta","row","rowPtr","column","csc709Inverse","cb","convertToHalf","idx","encodeFloat16","toLinear","sign","uncompressZIP","info","compressed","inflate","Inflate","rawBuffer","decompress","tmpBuffer","uncompressDWA","EXRHeader","dwaHeader","parseInt64","unknownUncompressedSize","unknownCompressedSize","acCompressedSize","dcCompressedSize","rleCompressedSize","rleUncompressedSize","rleRawSize","totalAcUncompressedCount","totalDcUncompressedCount","acCompression","compression","channelRules","ruleSize","parseUint16","parseNullTerminatedString","parseUint8","channelData","cd","decoded","pixelType","pLinear","cscSet","zlibInfo","dcBuffer","rleBuffer","outBufferEnd","rowOffsets","chan","rowPtrs","dataView","numFullBlocksX","numBlocksX","numBlocksY","leftoverX","leftoverY","currDcComp","dctData","rowBlock","comp","blocky","maxY","maxX","blockx","setUint16","halfRow","getUint16","setFloat32","lossyDctDecode","rleOffset","rowOffsetBytes","byte","uintBuffer","endOffset","stringValue","TextDecoder","decode","parseUlong","uLong","Uint32","Uint8","getBigInt64","parseFloat32","getFloat32","binary","exponent","fraction","NaN","Uint16","parseValue","parseFixedLengthString","startOffset","xSampling","ySampling","parseChlist","redX","redY","greenX","greenY","blueX","blueY","whiteX","whiteY","parseChromaticities","parseCompression","parseBox2i","parseLineOrder","parseV2f","bufferDataView","keepReading","attributeValue","uncompress","scanlineBlockSize","size_t","getValue","dataWindowHeight","dataWindow","tmpBufSize","bitmap","pizChannelData","minNonZero","maxNonZero","lut","reverseLutFromBitmap","nData","applyLut","tmpOffset","cp","numBlocks","channelOffsets","compressionInfo","scanlineBlockIdx","line_y","true_y","channelID","cOff"],"mappings":"wBACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAyB,iBAAIA,OAAyB,kBAAK,GACxEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAM1B,OAFA1C,EAAgBJ,KAAK,CAAC,IAAI,EAAE,EAAE,IAEvBM,I,qFCtJT,cAEA,SAuFA,MAAa0C,EAKZ,YAAmBC,EAAgBC,EAA8CC,GAA9D,KAAAF,OAAgB,KAAAC,aAA8C,KAAAC,WALlF,kBAgBA,oBAOC,cACCD,EACAC,GAEA,OAAO,IAAIH,EAAgC,EAAAI,UAAUC,OAAQH,EAAYC,GAE1E,eACCD,EACAC,GAEA,OAAO,IAAIH,EAAiC,EAAAI,UAAUE,QAASJ,EAAYC,GAE5E,aACCD,EACAC,GAEA,OAAO,IAAIH,EAA+B,EAAAI,UAAUG,MAAOL,EAAYC,GAExE,aACCD,EACAC,GAEA,OAAO,IAAIH,EAA+B,EAAAI,UAAUI,MAAON,EAAYC,GAExE,cACCD,EAAuD,KACvDC,GAEA,OAAO,IAAIH,EAAgC,EAAAI,UAAUK,OAAQP,EAAYC,GAE1E,eACCD,EACAC,GAEA,OAAO,IAAIH,EAAiC,EAAAI,UAAUM,QAASR,EAAYC,GAE5E,qBACCD,EACAC,GAEA,OAAO,IAAIH,EAAuC,EAAAI,UAAUO,cAAeT,EAAYC,GAExF,YACCD,EAAqD,EAAAU,UAAUC,cAC/DV,GAEA,OAAO,IAAIH,EAA8B,EAAAI,UAAUU,KAAMZ,EAAYC,GAEtE,iBACCD,EAA0D,KAC1DC,GAEA,OAAO,IAAIH,EAAmC,EAAAI,UAAUW,UAAWb,EAAYC,GAEhF,cACCD,EAAuD,GACvDC,GAEA,OAAO,IAAIH,EAAgC,EAAAI,UAAUY,OAAQd,EAAYC,GAE1E,eACCD,EACAC,GAEA,OAAO,IAAIH,EAAiC,EAAAI,UAAUa,QAASf,EAAYC,GAE5E,eACCD,EACAC,GAEA,OAAO,IAAIH,EAAiC,EAAAI,UAAUc,QAAShB,EAAYC,GAE5E,eACCD,EACAC,GAEA,OAAO,IAAIH,EAAiC,EAAAI,UAAUe,QAASjB,EAAYC,KAI7E,4B,kGC3LA,2BACA,4BACA,QACA,QACA,SACA,SAGA,SACA,SAEA,QAGA,QAeA,IAAKiB,GAAL,SAAKA,GACJ,4CACA,kCACA,sCACA,oCACA,4CACA,wCAND,CAAKA,MAAO,KASZ,MACMC,EAAsB,CADA,qEAG5B,MAAaC,UAAiD,EAAAC,UAA9D,c,oBACC,KAAAC,qBAAoE,IAAI,EAAAC,yBACvEC,KACA,EAAAC,mBAEe,KAAAC,MAA2B,IAAI,EAAAC,kBAAkBH,MAEjE,sBACC,OAAO,EAAAI,YAAYC,IAGpB,+BACC,OAAOV,EAMR,uBAIKK,KAAKE,MAAMI,UACdN,KAAKE,MAAMI,QAAQC,KAAI,GACvBP,KAAKE,MAAMI,QAAQE,SAAS,KAC3B,GAAIR,KAAKE,MAAMI,QAAQG,OAAQ,CAC9B,MAAMC,EAASV,KAAKU,OAChBA,GAAUA,EAAOC,yBACpBD,EAAOC,wBAAwBC,iBAAiBZ,UAKpDA,KAAKa,GAAGC,QAAQC,qBAsCjB,eAAeC,GACd,MAAMC,EAAUD,EAAWC,UAC3B,IAAK,IAAIlD,KAAUkD,EAClBjB,KAAKkB,uBAAuBnD,GAE7BiC,KAAKmB,cAAcH,EAAYtB,EAAQ0B,qBAGxC,WAAWrD,GAIViC,KAAKkB,uBAAuBnD,GAG5BiC,KAAKqB,sBAAsB,CAACtD,GAAS2B,EAAQ4B,iBAE9C,YAAYL,GAOX,IAAK,IAAIlD,KAAUkD,EAClBjB,KAAKkB,uBAAuBnD,GAI7BiC,KAAKqB,sBAAsBJ,EAASvB,EAAQ6B,kBAuB7C,aAAaC,EAA0BjD,GAItC,MAAMR,EAASiC,KAAKyB,cAAcD,EAAUjD,GAG5CyB,KAAKqB,sBAAsB,CAACtD,GAAS2B,EAAQgC,mBAI9C,eAAeC,EAA8BpD,GAE5C,MAAM0C,EAAsB,GAC5B,IAAIlD,EACJ4D,EAAWC,QAASJ,IACnBzD,EAASiC,KAAKyB,cAAcD,EAAUjD,GACtCyB,KAAKkB,uBAAuBnD,GAC5BkD,EAAQ3F,KAAKyC,KAIdiC,KAAKqB,sBAAsBJ,EAASvB,EAAQmC,qBAG7C,sBAAsBZ,EAAqBa,GAC1C,MAAMd,EAAahB,KAAKF,qBAAqBiC,UAAUC,gBAAkB,IAAI,EAAAC,UAC7EjB,EAAWkB,YAAYjB,GACvBD,EAAWmB,QACXnC,KAAKmB,cAAcH,GA4BpB,cAAcQ,EAA0BjD,GAEvC,IAAKiD,EAASY,MAAO,CACpB,MAAMC,EAAiBb,EAASc,aAAa,YAAYC,MACzDf,EAASgB,SAAS,UAAaH,EAAerH,OAAS,IAG5C,MAARuD,IACHA,EAAO,EAAAkE,aAAaC,YAAYC,MAWjC,MAEM5E,EAAS,IAAI6E,EAFQ,EAAAH,aAAaI,qBAAqBtE,IAEvBiD,EADrB,EAAAiB,aAAaK,UAAUvE,GAAMwE,SAM9C,OAJAhF,EAAOiF,YAAa,EACpBjF,EAAOkF,eAAgB,EACvBlF,EAAOmF,eAAgB,EAEhBnF,EAIR,uBAAuBA,GAsBtB,MAAMoF,EAAsBpF,EAAgBoF,SAC5C,GAAIA,EAAU,CACb,IAAKnD,KAAKoD,MAET,MADAC,QAAQC,IAAI,YACN,WAEP,MAAMC,EAAgB,EAAAC,aAAaC,KAAKzD,KAAKoD,MAAOD,GAChDI,GACHA,EAAcG,gBAAgB3F,IAiCjC,WAAWyD,GACV,MAEMmC,EAFkBnC,EAASc,aAAa,YACPC,MACHvH,OAAS,EACvC4I,EAAoB,GAC1B,UAAaD,EAAe7I,GAAM8I,EAAQtI,KAAKR,IAE/C0G,EAASgB,SAASoB,IAxRpB,iBA6RA,iCAAsChE,K,gFC1UtC,cACA,SAUA,IAAYiE,GAAZ,SAAYA,GACX,cAIA,YAIA,gBACA,cACA,cACA,cAKA,yBAjBD,CAAYA,EAAA,EAAAA,sBAAA,EAAAA,oBAAmB,KAyBlB,EAAAC,qBAAmD,CAC/DD,EAAoBE,KAIpBF,EAAoBG,IAIpBH,EAAoB/E,MACpB+E,EAAoBI,KACpBJ,EAAoBK,KACpBL,EAAoBM,MAuBR,EAAAC,kCAAwE,CACpF,CAACP,EAAoBE,MAAO,EAAArF,UAAUE,QAItC,CAACiF,EAAoBG,KAAM,EAAAtF,UAAUM,QAIrC,CAAC6E,EAAoB/E,OAAQ,EAAAJ,UAAUI,MACvC,CAAC+E,EAAoBI,MAAO,EAAAvF,UAAUa,QACtC,CAACsE,EAAoBK,MAAO,EAAAxF,UAAUc,QACtC,CAACqE,EAAoBM,MAAO,EAAAzF,UAAUe,QAEtC,CAACoE,EAAoBQ,YAAa,EAAA3F,UAAUU,MA8BhC,EAAAkF,kCAAwE,CACpF,CAAC,EAAA5F,UAAUE,SAAUiF,EAAoBE,KACzC,CAAC,EAAArF,UAAUG,OAAQgF,EAAoBK,KAIvC,CAAC,EAAAxF,UAAUM,SAAU6E,EAAoBG,IAIzC,CAAC,EAAAtF,UAAUI,OAAQ+E,EAAoB/E,MACvC,CAAC,EAAAJ,UAAUK,aAASwF,EACpB,CAAC,EAAA7F,UAAUa,SAAUsE,EAAoBI,KACzC,CAAC,EAAAvF,UAAUc,SAAUqE,EAAoBK,KACzC,CAAC,EAAAxF,UAAUe,SAAUoE,EAAoBM,KACzC,CAAC,EAAAzF,UAAUC,aAAS4F,EACpB,CAAC,EAAA7F,UAAUO,oBAAgBsF,EAC3B,CAAC,EAAA7F,UAAUU,WAAOmF,EAClB,CAAC,EAAA7F,UAAUW,gBAAYkF,EACvB,CAAC,EAAA7F,UAAUY,aAASiF,GAWR,EAAAC,4BAAkE,CAC9E,CAACX,EAAoBE,OAAO,EAI5B,CAACF,EAAoBG,KAAM,EAI3B,CAACH,EAAoB/E,OAAQ,EAC7B,CAAC+E,EAAoBI,MAAO,CAAC,EAAG,GAChC,CAACJ,EAAoBK,MAAO,CAAC,EAAG,EAAG,GACnC,CAACL,EAAoBM,MAAO,CAAC,EAAG,EAAG,EAAG,GAEtC,CAACN,EAAoBQ,YAAa,EAAAnF,UAAUuF,oBAWhC,EAAAC,kCAA8E,CAC1F,CAACb,EAAoBE,MAAO,EAI5B,CAACF,EAAoBG,KAAM,EAI3B,CAACH,EAAoB/E,OAAQ,EAC7B,CAAC+E,EAAoBI,MAAO,EAC5B,CAACJ,EAAoBK,MAAO,EAC5B,CAACL,EAAoBM,MAAO,EAC5B,CAACN,EAAoBQ,YAAa,I,8ECzLnC,SAAYM,GACX,kBACA,gBACA,wBAHD,CAAY,EAAAA,iBAAA,EAAAA,eAAc,M,oFCA1B,SAAYjG,GACX,oBACA,kBACA,gBACA,gBACA,kBACA,oBACA,gCACA,cACA,wBACA,kBACA,oBACA,oBACA,oBAbD,CAAY,EAAAA,YAAA,EAAAA,UAAS,M,gFCArB,SAAY0B,GACX,YACA,gBACA,UACA,UACA,qBACA,YACA,gBACA,YACA,cATD,CAAY,EAAAA,cAAA,EAAAA,YAAW,M,2FCAvB,QAGA,2BACA,4BACA,2BAEA,kBACC,WAAW9C,GACV,GAAI,UAAgBA,GACnB,OAAOA,EAER,GAAI,UAAiBA,GACpB,MAAO,GAAGA,IAGX,GAAI,UAAgBA,GACnB,MAAO,GAAG,EAAAsH,WAAWC,aAAavH,KAC5B,CACN,MAAMwH,EAASxH,EAAMyH,UAAUC,IAAKC,GAC5B,GAAG,EAAAL,WAAWC,aAAaI,MAGnC,MAAO,GADS,MAAMH,EAAO9J,YACR8J,EAAOI,KAAK,UAInC,eAAeC,GACd,GAAI,UAAgBA,GACnB,OAAOA,EAKR,MAAO,QAHQA,EAAIJ,UAAUC,IAAKC,GAC1B,GAAG,EAAAL,WAAWC,aAAaI,MAEbC,KAAK,SAE5B,eAAeC,GACd,GAAI,UAAgBA,GACnB,OAAOA,EAKR,MAAO,QAHQA,EAAIJ,UAAUC,IAAKC,GAC1B,GAAG,EAAAL,WAAWC,aAAaI,MAEbC,KAAK,SAG5B,qBAAqBC,EAAuBC,GAI3C,OAHK,UAAgBA,KACpBA,EAAM,EAAAR,WAAWC,aAAaO,IAExB,QAAQpF,KAAKqF,QAAQF,OAASC,KAGtC,cAAcE,EAAoBC,EAAoBC,EAAoBC,GAazE,OAZK,UAAgBH,KACpBA,EAAI,EAAAV,WAAWC,aAAaS,IAExB,UAAgBC,KACpBA,EAAI,EAAAX,WAAWC,aAAaU,IAExB,UAAgBC,KACpBA,EAAI,EAAAZ,WAAWC,aAAaW,IAExB,UAAgBC,KACpBA,EAAI,EAAAb,WAAWC,aAAaY,IAEtB,QAAQH,MAAMC,MAAMC,MAAMC,KAElC,cAAcH,EAAoBC,EAAoBC,GAUrD,OATK,UAAgBF,KACpBA,EAAI,EAAAV,WAAWC,aAAaS,IAExB,UAAgBC,KACpBA,EAAI,EAAAX,WAAWC,aAAaU,IAExB,UAAgBC,KACpBA,EAAI,EAAAZ,WAAWC,aAAaW,IAEtB,QAAQF,MAAMC,MAAMC,KAE5B,cAAcF,EAAoBC,GAOjC,OANK,UAAgBD,KACpBA,EAAI,EAAAV,WAAWC,aAAaS,IAExB,UAAgBC,KACpBA,EAAI,EAAAX,WAAWC,aAAaU,IAEtB,QAAQD,MAAMC,KAEtB,aAAaD,GAIZ,OAHK,UAAgBA,KACpBA,EAAI,EAAAV,WAAWC,aAAaS,IAEtB,GAAGA,IAEX,WAAWA,GACV,MAAO,GAAGA,IAEX,YAAYA,GACX,MAAO,GAAGA,O,8EClGZ,eAGA,IAAYI,GAAZ,SAAYA,GACX,wBACA,sBACA,oBACA,oBAJD,CAAYA,EAAA,EAAAA,mBAAA,EAAAA,iBAAgB,KAO5B,MAAsBC,EAErB,YACWC,EACAC,EACAC,EACAC,GAHA,KAAAH,mBACA,KAAAC,aACA,KAAAC,QACA,KAAAC,QAKX,sBACC,OAAO/F,KAAK4F,iBAEb,gBACC,OAAO5F,KAAK6F,WAEb,WACC,OAAO7F,KAAK8F,MAEb,WACC,OAAO9F,KAAK+F,MAOb,sBACC,OAAO,IAAI,EAAAC,6BA7Bb,sBAiCA,sCAA2CL,EAC1C,YAAsBG,EAAiCD,EAA2CE,GACjGE,MAAMP,EAAiBQ,UAAWL,EAAYC,EAAOC,GADhC,KAAAD,QAAiC,KAAAD,aAA2C,KAAAE,QAGlG,WACC,MAAO,aAAa/F,KAAKmG,aAAanG,KAAKnD,SAI7C,qCAA0C8I,EACzC,YAAsBG,EAAiCD,EAA2CE,GACjGE,MAAMP,EAAiBU,SAAUP,EAAYC,EAAOC,GAD/B,KAAAD,QAAiC,KAAAD,aAA2C,KAAAE,QAGlG,WACC,OAAO/F,KAAKnD,OAId,oCAAyC8I,EACxC,YAAsBG,EAAiCD,EAA2CE,GACjGE,MAAMP,EAAiBW,QAASR,EAAYC,EAAOC,GAD9B,KAAAD,QAAiC,KAAAD,aAA2C,KAAAE,QAGlG,WACC,MAAO,WAAW/F,KAAKmG,aAAanG,KAAKnD,SAI3C,oCAAyC8I,EACxC,YAAsBG,EAAiCD,EAA2CE,GACjGE,MAAMP,EAAiBY,QAAST,EAAYC,EAAOC,GAD9B,KAAAD,QAAiC,KAAAD,aAA2C,KAAAE,QAGlG,WACC,MAAO,WAAW/F,KAAKmG,aAAanG,KAAKnD,U,iFC5E3C,cAcA,kCAGC,YACWkJ,EACAQ,EACAC,GAFA,KAAAT,QACA,KAAAQ,QACA,KAAAC,mBAEejC,IAArBvE,KAAKwG,cACRxG,KAAKwG,YAAc,EAAAhC,4BAA4BxE,KAAKuG,QAGtD,WACC,OAAOvG,KAAK+F,MAEb,WACC,OAAO/F,KAAKuG,MAEb,iBACC,OAAO,EAAAnC,kCAAkCpE,KAAKuG,OAE/C,iBACC,OAAOvG,KAAKwG,YAGb,UACC,OAAQxG,KAAKyG,MAAQzG,KAAKyG,OAASzG,KAAK0G,eAEjC,eACP,MAAO,CACN7J,KAAMmD,KAAK+F,MACXxH,KAAMyB,KAAKuG,U,8EC7Cd,cACA,QAGA,QACA,OAIA,SAGA,MAAaI,UAAgD,EAAA9G,UAA7D,c,oBAOU,KAAA+G,wBAAuD,IAAI,EAAAC,4BAA4B7G,MANhG,sBACC,OAAO,EAAAI,YAAY0G,GAQpB,uBAEC9G,KAAKa,GAAGkG,YAAYC,cACpBhH,KAAKiH,QAAQC,wBACblH,KAAKa,GAAGC,QAAQqG,mCAAmC,IAEnDnH,KAAK4G,wBAAwBQ,kBAE9B,cAAcvK,GACb,OAAOoJ,MAAMoB,cAAcxK,GAE5B,OACCwG,QAAQiE,KAAK,8BAGJ,wB,MACS,QAAlB,EAAAtH,KAAKuD,qBAAa,SAAEgE,qBAAqBC,mCAAmCxH,MAE7E,oB,MACC,GAAIA,KAAKU,OACR,OAAIV,KAAKU,OAAOnC,MAAQyB,KAAKzB,KACU,QAA9B,EAAAyB,KAAKU,cAAyB,eAAE6C,cAEjCvD,KAAKU,OAUf,YAAY7D,GACX,MAAO,UAAUmD,KAAKnD,QAAQA,IAG/B,mBAAmBA,G,MAClB,MAAM4K,EAAczH,KAAKa,GAAG6G,OAAOC,gBAAgB9K,GAC7C+K,EAAa5H,KAAKa,GAAGkG,YAAYc,iBAAiBJ,GACxD,GAAIG,EAAY,CACf,MAAME,EAAuBF,EAAWG,SAClCC,EACLF,EAAWjH,GAAGC,QAAQmH,+BAA+BL,EAAWM,cACjE,GAAIF,EAAyB,CAC5B,MAAMG,EAAcH,EAAwBnL,KAC5C,OAAOiL,EAAWM,YAAYD,GAG9B,MADA9E,QAAQiE,KAAK,qBAAqBzK,kBAAqBiL,EAAWO,eAC5D,2BAGP,OAAO,EAAAC,UAAUC,IAAyB,QAAtB,EAACvI,KAAKwI,OAAOtL,IAAIL,UAAK,eAAES,OAS9C,UAAUmL,IAEV,a,MAC+B,QAA9B,EAAAzI,KAAK0I,iCAAyB,SAAEC,QAS1B,qBACP,gB,MACC,OAAqC,QAArC,EAAO3I,KAAK0I,iCAAyB,eAAEE,KAsBxC,uBAAuB/L,GACtB,OAAO,MA5GT,gBA6IA,gCAAqC8J,IAErC,MAAMkC,UAA8B,EAAAC,kBACpC,MAAMC,EAAe,IAAIF,EACzB,qCAA0ClC,EAA1C,c,oBACC,KAAAqC,cAAgBD,K,8EC7JjB,eACA,QACA,QACA,QAEA,QACA,QACA,QACA,OAEA,OACA,SAGA,QACA,QACA,SACA,QAmCA,IAAYE,GAAZ,SAAYA,GACX,cACA,kBACA,gCAHD,CAAYA,EAAA,EAAAA,aAAA,EAAAA,WAAU,KAKT,EAAAC,YAAc,CAACD,EAAWtG,KAAMsG,EAAWE,OAAQF,EAAWG,eAC9D,EAAAC,sBAAwB,CACpC,CAACxM,KAAM,OAAQS,MAAO,EAAA4L,YAAYI,QAAQL,EAAWtG,OACrD,CAAC9F,KAAM,SAAUS,MAAO,EAAA4L,YAAYI,QAAQL,EAAWE,SACvD,CAACtM,KAAM,eAAgBS,MAAO,EAAA4L,YAAYI,QAAQL,EAAWG,iBAG9D,8BAAmCrL,GAClC,OAAIA,aAAkB,EAAAwL,KACdN,EAAWtG,KAEf5E,aAAkB,EAAAyL,aACdP,EAAWG,cAEfrL,aAAkB,EAAA0L,OACdR,EAAWE,YAEnB9F,QAAQiE,KAAK,qDAAsDvJ,IAGpE,MAAM2L,EAA+B,CACpCC,aAAc,IAAI,EAAAC,qBAAqB,CACtCC,MAAO,SAEPC,KAAM,EAAAC,UACNC,UAAW,GACXC,UAAW,KAEZ,CAAChB,EAAWtG,MAAO,IAAI,EAAAuH,oBAAoB,CAE1CL,MAAO,IAAI,EAAAM,MAAM,GAAK,GAAK,GAC3BL,KAAM,EAAAC,UACNK,cAAc,EACdC,aAAa,EACbC,WAAW,IAEZ,CAACrB,EAAWE,QAAS,IAAI,EAAAoB,eAAe,CACvCV,MAAO,SACPW,KAAM,GAENF,WAAW,IAEZ,CAACrB,EAAWG,eAAgB,IAAI,EAAAqB,kBAAkB,CACjDZ,MAAO,SACPa,UAAW,KAMb,IAAYC,EAUAC,GAVZ,SAAYD,GACX,uBACA,uBAFD,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KAKV,EAAAE,uBAAyB,CACrC,CAAChO,KAAM,SAAUS,MAAOqN,EAAYG,QACpC,CAACjO,KAAM,SAAUS,MAAOqN,EAAYI,SAGrC,SAAYH,GACX,yBACA,uBAFD,CAAYA,EAAA,EAAAA,aAAA,EAAAA,WAAU,KAIT,EAAAI,sBAAwB,CACpC,CAACnO,KAAM,UAAWS,MAAOsN,EAAWK,SACpC,CAACpO,KAAM,SAAUS,MAAOsN,EAAWtL,SAGvB,EAAAmD,aAAe,CAC3ByI,aAAc,CACbJ,OAAQH,EAAYG,OACpBC,OAAQJ,EAAYI,QAGrBI,YAAa,CACZF,QAAS,EACT3L,OAAQ,GAGToD,YAAa,CAEZC,KAAMsG,EAAWtG,KACjBwG,OAAQF,EAAWE,OACnBC,cAAeH,EAAWG,eAE3BgC,aAAc,EAAAlC,YACdmC,sCAAuC,CACtC,CAAC,EAAAC,MAAMzO,MAAO,QACd,CAAC,EAAA0O,MAAM1O,MAAO,QACd,CAAC,EAAA2O,SAAS3O,MAAO,WACjB,CAAC,EAAA0M,KAAK1M,MAAO,OACb,CAAC,EAAA4M,OAAO5M,MAAO,SACf,CAAC,EAAA2M,aAAa3M,MAAO,eACrB,CAAC,EAAA4O,KAAK5O,MAAO,OACb,CAAC,EAAA6O,YAAY7O,MAAO,eAErBgG,qBAAsB,CACrB,CAACoG,EAAWtG,MAAO,EAAA4G,KACnB,CAACN,EAAWE,QAAS,EAAAM,OACrB,CAACR,EAAWG,eAAgB,EAAAI,cAY7B1G,UAAW4G,I,2FC1KZ,2BACA,2BACA,SACA,QAEA,QAEA,OAEA,MAAaiC,UAAuC,EAAA7C,kBAApD,mCACA,MAAMC,EAAe,IAAI4C,EACzB,MAAsBC,UAAiC,EAAAC,mBAAvD,c,oBACC,KAAA7C,cAAgBD,EACN,iBACT,MAAO,GAEE,0BACT,MAAO,GAGR,kBACC9C,MAAMmB,kBACNpH,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OACnGA,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAEvE,wBACT,MAAMzB,EACLyB,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,MACrF,GAAIkB,KAAKa,GAAGkG,YAAYuF,yBAA0B,CACjD,IAAIC,EAAQC,KAAKC,IAAI,UAAezM,KAAKa,GAAGkG,YAAY2F,qBAAqB1R,OAAS,EAAG,GACzF,OAAO,UAAauR,GAAOvH,IAAKlK,GAAMyD,GAEtC,OAAO,UAAa,GAAGyG,IAAKlK,GAAMyD,GAG1B,yBAET,MAAO,CADMyB,KAAKgM,wBAAwB,IAGjC,eAAe5J,GACxB,MAAO,KAGR,UAAUqG,GACT,MAAMkE,EAAgC3M,KAAKa,GAAGC,QAAQmH,+BAA+B,GAAG1J,KAKlFqO,EAJO5M,KAAKa,GAAG6G,OAAOmF,8BAA8B7H,IAAI,CAAC4C,EAAY9M,KAC1E,MAAM+B,EAAO+K,EAAW/K,KACxB,OAAO,EAAAyL,UAAUC,IAAIvI,KAAK8M,mBAAmBjQ,MAErBqI,KAAK,MAGxB6H,EAAY,GAAGJ,KADT3M,KAAKoI,YAAYpI,KAAK8L,0BAA0B3D,YAAY,SAC9BnI,KAAKgN,oBAAoBJ,KACnEnE,EAA8BwE,eAAejN,KAAM,CAAC+M,IACpDtE,EAA8ByE,gBAAgBlN,KAAMA,KAAKmN,4BA5C3D,6BAqDA,iDAA+DvB,EACpD,eAAexJ,GACxB,MAAO,KAEE,wBAET,MAAO,CADMpC,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,SAUnG,iDAA+D8M,EACpD,wBACT,MAAMrN,EAAOyB,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,MACjG,MAAO,CAACP,EAAMA,KAShB,iDAA+DqN,EACpD,wBACT,MAAMrN,EAAOyB,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,MACjG,MAAO,CAACP,EAAMA,EAAMA,KAQtB,iDAA+DqN,EACpD,wBACT,MAAMrN,EAAOyB,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,MACjG,MAAO,CAACP,EAAMA,EAAMA,EAAMA,KAQ5B,iDAA+DqN,EACpD,wBACT,MAAMrN,EAAOyB,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,MACjG,MAAO,CAACP,EAAMA,EAAMA,EAAMA,EAAMA,M,uGCpHlC,2BACA,2BACA,4BACA,2BACA,2BACA,4BACA,4BACA,4BACA,4BACA,4BACA,2BAEM6O,EAAyB,OAOzBC,EAA0B,OAE1BC,EAAyB,MAGzBC,EAAa,gBACnB,IAAKC,GAAL,SAAKA,GACJ,cACA,gBAFD,CAAKA,MAAa,KAKlB,MAAa5I,EAKZ,kBAAkB6I,GACjB,OAAOA,GAAQD,EAAcE,MAAQD,GAAQD,EAAcG,MAE5D,kBAAkBF,GACjB,OAAOA,GAAQD,EAAcE,KAE9B,iBAAiBD,GAChB,OAAOF,EAAWK,KAAKH,GAGxB,mBAAmBA,GAClB,MAAMI,EAAQJ,EAAKI,MAAMR,GACzB,OAAIQ,EACIC,SAASD,EAAM,IAEf,EAIT,iBAAiBJ,GAChB,IAAII,EACJ,GAAKA,EAAQJ,EAAKI,MAAMR,GAA2B,CAClD,MAAMU,EAASD,SAASD,EAAM,IAE9B,MAAO,GADQJ,EAAKO,UAAU,EAAGP,EAAKzS,OAAS6S,EAAM,GAAG7S,UACrC+S,EAAS,IAE5B,MAAO,GAAGN,KAIZ,iBAAiBA,GAEhB,MAAkB,MADAA,EAAKA,EAAKzS,OAAS,GAE7B,GAAGyS,KAEHA,EAIT,kBAAkBA,GACjB,OAAO,UAAiBA,GAEzB,mBAAmBA,GAClB,OAAO,UAAkBA,GAE1B,kBAAkBA,GACjB,OAAO,UAAiBA,GAEzB,gBAAgBA,GACf,OAAO,UAAkBA,EAAKQ,QAAQ,KAAM,MAG7C,0BAA0BR,GACzB,OAAOzN,KAAKkO,YAAY,UAAiBT,IAsB1C,4BAA4BA,GAC3B,OAAOU,KAAKC,MAAMX,GAAQ,IAE3B,4BAA4BY,GAC3B,MAAMzR,EAAI,IAAIuR,KAEd,OADAvR,EAAE0R,QAAkB,IAAVD,GACHzR,EAAE2R,cAAcC,OAAO,GAAI,GAGnC,iBAAiBC,EAAaC,EAAmB,GAoChDA,EAAWlC,KAAKC,IAAIiC,EAAU,GAC9B,MAAMC,EAAW,GAAGF,IAAMG,MAAM,KAEhC,GAAIF,GAAY,EACf,OAAOC,EAAS,GAGjB,IAAIE,EAAOF,EAAS,GACpB,QAAapK,IAATsK,EAMH,OALIA,EAAK7T,OAAS0T,IACjBG,EAAOA,EAAKb,UAAU,EAAGU,IAG1BG,EAAO,UAAcA,EAAMH,EAAU,KAC9B,GAAGC,EAAS,MAAME,IACnB,CACN,MAAMC,EAAgB,GAAGL,KACnBM,EAAMD,EAAc9T,OAAS0T,EACnC,OAAO,UAAcI,EAAeC,EAAK,MAI3C,oBAAoB3J,GAInB,MAAM4J,EAAgB,GAAG5J,IAEzB,OADgB4J,EAAc1F,QAAQ,MACvB,EACP0F,EAEA,GAAGA,MAKZ,kBAAkBvB,EAAcwB,GAC/B,GAAa,MAATA,EACH,OAAO,EAcR,OANAA,EAAO,IAJPA,EAAOA,EAAKL,MAAM,KAAK1J,KAAK,SAOd,IAAIgK,OAAOD,GAGZrB,KAAKH,GAEnB,wBAAwBA,EAAc0B,GACrC,IAAIC,GAAmB,EACvB,IAAK,IAAIC,KAAQF,EACZvK,EAAW0K,WAAW7B,EAAM4B,KAC/BD,GAAmB,GAGrB,OAAOA,EAGR,oBAAoB3B,GAGnB,MAAMkB,EAAWlB,EAAKmB,MAAMxB,GACtBmC,EAAkB,UACvBZ,EAAS3J,IAAKwK,GACN,UAAYA,KAgBrB,OAba,UAAYD,GAe1B,aAAad,GACZ,GAAW,MAAPA,EACH,OAAO,EAGR,MAAME,EAAWF,EAAIG,MAAM,IAAIa,UAC/B,IAAIC,EAAK,EACLC,EAAM,EAUV,OATAhB,EAAS/M,QAAQ,CAACgO,EAAS9U,KAC1B,IAAIsH,EAAQwN,EAAQC,WAAW,GAE3BzN,GAAS,IACZuN,EAAM7U,EAAI,GACV4U,GAAMtN,EAAQ,YAAMuN,GACpBD,GAAUI,OAAOC,oBAGZL,EAGR,eAAeM,GACd,MAAMrB,EAAWqB,EAAepB,MAAMtB,GACtC,GAAIqB,EAAS3T,OAAS,EACrB,OAAO,UAAY,UAAe2T,EAAS3J,IAAK4K,GAAY5P,KAAK4D,QAAQgM,MAAYK,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GAClG,CACN,MAAMP,EAAUjB,EAAS,GACzB,GAAIiB,EAAS,CACZ,MAAMQ,EAAkB,IACxB,GAAIR,EAAQtG,QAAQ8G,GAAmB,EAAG,CACzC,MAAMC,EAAiBT,EAAQhB,MAAMwB,GACrC,OAAO,UAAatC,SAASuC,EAAe,IAAKvC,SAASuC,EAAe,IAAM,GACzE,CACN,MAAMC,EAASxC,SAAS8B,GACxB,OAAI,UAAgBU,GACZ,CAACA,GAED,IAIT,MAAO,IAKV,0BAA0B7C,GACzB,OAAOA,EAAKQ,QAAQ,iBAAkB,QAnQxC,gB,6BC9BA,IAAYsC,E,iDAAZ,SAAYA,GACX,kBACA,sBACA,sDACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BAbD,CAAYA,EAAA,EAAAA,aAAA,EAAAA,WAAU,KAeT,EAAAC,oBAAyC,CACrDD,EAAWE,YACXF,EAAWG,YACXH,EAAWI,YACXJ,EAAWK,YACXL,EAAWM,YACXN,EAAWO,YACXP,EAAWQ,YACXR,EAAWS,YACXT,EAAWU,YACXV,EAAWW,c,6FCzBZ,OAEA,OACA,OACA,OAEA,QAWA,2BACA,2BACA,4BACA,4BACA,4BACA,4BACA,2BACA,2BACA,SACA,SACA,QACA,SACA,SAEA,SAGA,MAAaC,EAQZ,YAAoBC,GAAA,KAAAA,YAGpB,WACC,OAAOpR,KAAKoR,UAEb,OACC,OAAOpR,KAAKoR,UAAUC,KAGvB,eACC,OAAQrR,KAAKsR,cAAgBtR,KAAKsR,eAAiBtR,KAAKuR,uBAEzD,uBAEC,GADAvR,KAAKoR,UAAUI,qBACXxR,KAAKoR,UAAUK,YAClB,OAAOzR,KAAKoR,UAAUK,YAIxB,mBACCzR,KAAKoR,UAAUM,SAAsB,aAAI,EAE1C,0BAA0BlQ,GACzB,OAA4C,IAArCA,EAASkQ,SAAsB,YAEvC,qBACC,OAAOP,EAAaQ,mBAAmB3R,KAAKoR,WAE7C,uBACC,IAAIvU,EAAO,WAIX,OAHImD,KAAK2R,uBACR9U,EAAO,oBAEDA,EAGR,yBACCmD,KAAKoR,UAAUQ,uBAGhB,oBACC,MAAMhU,EAAM,wBACZ,OAAQoC,KAAKoR,UAAUM,SAAS9T,GAAOoC,KAAKoR,UAAUM,SAAS9T,IAAQ,GAExE,0BACC,OAAO3C,OAAO4W,KAAK7R,KAAK8R,qBAAuB,IAEhD,iBAAiBjV,GAEhB,OADAA,EAAO,EAAAkV,cAAcC,WAAWnV,GACzBmD,KAAK8R,oBAAoBjV,GAEjC,kBAAkBA,GAEjB,OADAA,EAAO,EAAAkV,cAAcC,WAAWnV,GACM,MAA/BmD,KAAKiS,iBAAiBpV,GAG9B,WAAWA,GACV,MAAa,UAATA,IAGJA,EAAO,EAAAkV,cAAcC,WAAWnV,GACU,MAAnCmD,KAAKoR,UAAUc,WAAWrV,IAElC,YAAYA,GACX,OAAImD,KAAKmS,kBAAkBtV,GACnB,EAAA4F,aAAa0I,YAAY7L,OAEzB,EAAAmD,aAAa0I,YAAYF,QAIlC,eACC,OAAOhQ,OAAO4W,KAAK7R,KAAKoR,UAAUc,YAEnC,eACC,MAAME,EAAwB,GAC9B,IAAK,IAAIC,KAAerS,KAAKsS,eAC5BF,EAAEC,GAAerS,KAAKoR,UAAUc,WAAWG,GAAaE,SAEzD,OAAOH,EAER,YAAYvV,GACX,IAAI2V,EAEJ,OADA3V,EAAO,EAAAkV,cAAcC,WAAWnV,GACkB,OAA7C2V,EAASxS,KAAKoR,UAAUc,WAAWrV,IAChC2V,EAAOD,SAED,UAAT1V,EAEI,EAEA,EAKV,6BAA6BA,EAAciI,GAC1C9E,KAAK8R,oBAAoBjV,GAAQiI,EAGlC,sBAAsBjI,EAAciI,EAAkBlB,GACrD5D,KAAKyS,6BAA6B5V,EAAMiI,GACxC9E,KAAKoR,UAAUsB,aAAa7V,EAAM,IAAI,EAAA8V,qBAAqB/O,EAAS,IAGrE,mBAAmB/G,EAAc2N,EAAe,EAAGoI,EAAoC,GACtF,MAAM9N,EAAS,GAEf,IAAI+N,GAAkB,EACtB,GAAI,UAAgBD,GAAgB,CAEnC,IAAK,IAAI9X,EAAI,EAAGA,EAAIkF,KAAK2D,eAAgB7I,IACxC,IAAK,IAAIkB,EAAI,EAAGA,EAAIwO,EAAMxO,IACzB8I,EAAOxJ,KAAKsX,GAGdC,GAAkB,OAElB,GAAIrI,EAAO,EACV,GAAI,UAAeoI,GAAgB,CAElC,IAAK,IAAI9X,EAAI,EAAGA,EAAIkF,KAAK2D,eAAgB7I,IACxC,IAAK,IAAIkB,EAAI,EAAGA,EAAIwO,EAAMxO,IACzB8I,EAAOxJ,KAAKsX,EAAc5W,IAG5B6W,GAAkB,MACZ,CAEN,MAAMC,EAAOF,EACb,GAAY,GAARpI,GAAuB,MAAVsI,EAAKxN,GAAuB,MAAVwN,EAAKvN,EAAW,CAClD,IAAK,IAAIzK,EAAI,EAAGA,EAAIkF,KAAK2D,eAAgB7I,IACxCgK,EAAOxJ,KAAKwX,EAAKxN,GACjBR,EAAOxJ,KAAKwX,EAAKvN,GAElBsN,GAAkB,EAGnB,MAAME,EAAOH,EACb,GAAY,GAARpI,GAAuB,MAAVuI,EAAKzN,GAAuB,MAAVyN,EAAKxN,GAAuB,MAAVwN,EAAKvN,EAAW,CACpE,IAAK,IAAI1K,EAAI,EAAGA,EAAIkF,KAAK2D,eAAgB7I,IACxCgK,EAAOxJ,KAAKyX,EAAKzN,GACjBR,EAAOxJ,KAAKyX,EAAKxN,GACjBT,EAAOxJ,KAAKyX,EAAKvN,GAElBqN,GAAkB,EAGnB,MAAMG,EAAMJ,EACZ,GAAY,GAARpI,GAAsB,MAATwI,EAAI7V,GAAsB,MAAT6V,EAAIC,GAAsB,MAATD,EAAI7C,EAAW,CACjE,IAAK,IAAIrV,EAAI,EAAGA,EAAIkF,KAAK2D,eAAgB7I,IACxCgK,EAAOxJ,KAAK0X,EAAI7V,GAChB2H,EAAOxJ,KAAK0X,EAAIC,GAChBnO,EAAOxJ,KAAK0X,EAAI7C,GAEjB0C,GAAkB,EAGnB,MAAMK,EAAON,EACb,GAAY,GAARpI,GAAuB,MAAV0I,EAAK5N,GAAuB,MAAV4N,EAAK3N,GAAuB,MAAV2N,EAAK1N,GAAuB,MAAV0N,EAAKzN,EAAW,CACtF,IAAK,IAAI3K,EAAI,EAAGA,EAAIkF,KAAK2D,eAAgB7I,IACxCgK,EAAOxJ,KAAK4X,EAAK5N,GACjBR,EAAOxJ,KAAK4X,EAAK3N,GACjBT,EAAOxJ,KAAK4X,EAAK1N,GACjBV,EAAOxJ,KAAK4X,EAAKzN,GAElBoN,GAAkB,GAMtB,IAAIA,EAGH,KAAM,+DAFN7S,KAAKoR,UAAUsB,aAAa7V,EAAM,IAAI,EAAAsW,uBAAuBrO,EAAQ0F,IAMvE,wBAAwB7G,EAAsBiP,GAC7C,MAAM9N,EAAS,GACM,MAAjB8N,IACHA,EAAgB,IAAI,EAAAQ,SAGrB,IAAK,IAAItY,EAAI,EAAGA,EAAI6I,EAAc7I,IACjCgK,EAAOxJ,KAAKsX,EAActN,GAC1BR,EAAOxJ,KAAKsX,EAAcrN,GAC1BT,EAAOxJ,KAAKsX,EAAcpN,GAG3B,OAAOxF,KAAKoR,UAAUsB,aAAa,WAAY,IAAI,EAAAS,uBAAuBrO,EAAQ,IAGnF,cAAcjI,EAAcwW,GAC3B,OAAQA,EAAY9U,QACnB,KAAK,EAAAkE,aAAa0I,YAAY7L,OAC7B,OAAO+D,QAAQC,IAAI,sBACpB,KAAK,EAAAb,aAAa0I,YAAYF,QAC7B,OAAOjL,KAAKsT,mBAAmBzW,EAAMwW,EAAY7I,SAIpD,iBAAiB+I,EAAkBC,GAC9BxT,KAAKmS,kBAAkBoB,KAC1BvT,KAAK8R,oBAAoB0B,GAAY,UAAaxT,KAAK8R,oBAAoByB,WACpEvT,KAAK8R,oBAAoByB,IAGjC,MAAME,EAAazT,KAAKoR,UAAU9O,aAAaiR,GAE/C,OADAvT,KAAKoR,UAAUsB,aAAac,EAAU,IAAI,EAAAL,uBAAuBM,EAAWlR,MAAOkR,EAAWlB,WACvFvS,KAAKoR,UAAUsC,gBAAgBH,GAGvC,iBAAiB1W,GAKhB,OAJImD,KAAKmS,kBAAkBtV,WACnBmD,KAAK8R,oBAAoBjV,GAG1BmD,KAAKoR,UAAUsC,gBAAgB7W,GAGvC,QACC,OAAOsU,EAAapO,MAAM/C,KAAKoR,WAGhC,aAAauC,GACZ,IAAIC,EAGJ,IAAK,IAAIC,KAAkB5Y,OAAO4W,KAAK8B,EAAazB,YAAa,CAChE,MAAM4B,EAAYH,EAAarR,aAAauR,GACxCC,EAAUC,YAAYlX,MAAQ,EAAAmX,2BAA2BnX,MAC5D,EAAAoX,cAAcC,MAAMJ,GAItB,MAAMK,EAAeR,EAAa5Q,QAIlC,OAH8C,OAAzC6Q,EAAeD,EAAajC,YAChCyC,EAAazC,SAAW,UAAiBkC,IAEnCO,EAGR,eACC,OAAOhD,EAAaxN,aAAa3D,KAAKoR,WAGvC,oBAAoB5P,GACnB,IAAI4S,EACA7H,EAAQ,EAEZ,IAAI8H,EAAuB,WAK3B,GANsB,IAAIrU,KAAKwB,GAEbmQ,uBACjB0C,EAAuB,oBAGwC,OAA3DD,EAAW5S,EAASc,aAAa+R,IAAgC,CACrE,IAAI9R,EAC4B,OAA3BA,EAAQ6R,EAAS7R,SACrBgK,EAAQhK,EAAMvH,OAAS,GAIzB,OAAOuR,EAKR,SACC,OAAQvM,KAAKsU,QAAUtU,KAAKsU,SAAWtU,KAAKuU,uBAE7C,eACCvU,KAAKsU,aAAU/P,EAEhB,uBACC,MAAMiQ,EAAS,GACTC,EAAkBzU,KAAKoR,UAAU9O,aAAatC,KAAKqU,wBAEzD,GAAuB,MAAnBI,EAAyB,CAC5B,MAAM9Q,EAAe8Q,EAAgBlS,MAAMvH,OAAS,EACpD,IAAK,IAAI0Z,EAAc,EAAGA,EAAc/Q,EAAc+Q,IAAe,CACpE,MAAMC,EAAQ,IAAI,EAAAC,UAAU5U,KAAM0U,GAyBlCF,EAAOlZ,KAAKqZ,IAId,OAAOH,EAGR,4BAA4BA,EAAqBK,GAChD,MAAMrT,EAAW,IAAI,EAAAsT,eACfC,EAAmB,IAAI/U,KAAKwB,GAE5BwT,EAAcR,EAAO,GAC3B,GAAmB,MAAfQ,EAAqB,CACxB,MAAMC,EAAeD,EAAYxT,WAC3B0T,EAAuBF,EAAYD,mBAGnCI,EAA6C,GACnD,UAAYX,EAAQ,CAACG,EAAO7Z,IAAOqa,EAAuBR,EAAMvS,OAAStH,GAEzE,MAAM8I,EAAU5D,KAAKoV,qBAAqBD,EAAwBF,EAAcJ,GACjE,MAAXjR,GAAsC,IAAnBA,EAAQ5I,QAC9BwG,EAASgB,SAASoB,GAInB,MAAM,WAACsO,GAAc+C,EAErB,IAAK,IAAIpB,KAAkB5Y,OAAO4W,KAAKK,GAAa,CAInD,GAF2C,MADrBgD,EAAqBpD,oBAAoB+B,GAGxC,CACtB,MAAMwB,EAAa,UAAYb,EAAOxP,IAAK2P,GAAUA,EAAMW,aAAazB,KAClE0B,EAAyC,GAC/C,UAAYF,EAAY,CAACG,EAAW1a,IAAOya,EAAmBC,GAAa1a,GAE3Eia,EAAiBjD,oBAAoB+B,GAAkBwB,EAIvD,MAAMI,EAAqB,GAC3B,IAAK,IAAId,KAASH,EAAQ,CAEzB,MAAMkB,EAAYH,EAAmBZ,EAAMW,aAAazB,IACxD4B,EAAmBna,KAAKoa,GAGzBlU,EAASkR,aAAamB,EAAgB,IAAI,EAAAV,uBAAuBsC,EAAoB,QAC/E,CACN,MAAM3Q,EAAS,GACT6Q,EAAczD,EAAW2B,GAAgBtB,SAC/C,IAAK,IAAIoC,KAASH,EAAQ,CACzB,MAAMlX,EAAQqX,EAAMW,aAAazB,GACjC,OAAQ8B,GACP,KAAK,EACJ7Q,EAAOxJ,KAAKgC,GACb,KAAK,EACJwH,EAAOxJ,KAAKgC,EAAMgI,GAClBR,EAAOxJ,KAAKgC,EAAMiI,GAClBT,EAAOxJ,KAAKgC,EAAMkI,IAIrBhE,EAASkR,aAAamB,EAAgB,IAAI,EAAAV,uBAAuBrO,EAAQ6Q,MAK5E,OAAOnU,EAGR,4BACC2T,EACAF,EACAJ,GAEA,MAAMe,EAAeX,EAAa7S,MAClC,GAAoB,MAAhBwT,EAAsB,CACzB,MAAMC,EAAcD,EAAarT,MAE3BuT,EAAwB,GAE9B,OAAQjB,GACP,KAAK,EAAApS,aAAaC,YAAYyG,OAC7B,UAAY0M,GAAa,SAAUE,EAAWjb,GAC7C,MAAM4a,EAAYP,EAAuBY,GACxB,MAAbL,GACHI,EAAYxa,KAAKoa,MAGnB,MAED,KAAK,EAAAjT,aAAaC,YAAYC,KAC7B,UAAYkT,GAAa,SAAUE,EAAWjb,GAC7C,GAAIA,EAAI,GAAM,EAAG,CAChB,MAAMkb,EAAaH,EAAY/a,GACzBmb,EAAaJ,EAAY/a,EAAI,GAC7Bob,EAAaL,EAAY/a,EAAI,GAC7Bqb,EAAahB,EAAuBa,GACpCI,EAAajB,EAAuBc,GACpCI,EAAalB,EAAuBe,GACxB,MAAdC,GAAoC,MAAdC,GAAoC,MAAdC,IAC/CP,EAAYxa,KAAK6a,GACjBL,EAAYxa,KAAK8a,GACjBN,EAAYxa,KAAK+a,QAIpB,MAED,KAAK,EAAA5T,aAAaC,YAAY0G,cAC7B,UAAYyM,GAAa,SAAUE,EAAWjb,GAC7C,GAAIA,EAAI,GAAM,EAAG,CAChB,MAAMkb,EAAaH,EAAY/a,GACzBmb,EAAaJ,EAAY/a,EAAI,GAC7Bqb,EAAahB,EAAuBa,GACpCI,EAAajB,EAAuBc,GACxB,MAAdE,GAAoC,MAAdC,IACzBN,EAAYxa,KAAK6a,GACjBL,EAAYxa,KAAK8a,QAOtB,OAAON,GAIT,wBAAwBnU,GACvB,GAA0B,IAAtBA,EAAW3G,OACd,OAMD,MAAMsb,EAAkB3U,EAAWqD,IAAKxD,GAAa,IAAI2P,EAAa3P,IAChE+U,EAA0BD,EAAgB,GAAGC,0BAE7CC,EAAqD,GAC3D,IAAK,IAAIC,KAA0BF,EAAyB,CAC3D,MAAMG,EAAsC,GACtCC,EAAwB,GAC9B,IAAK,IAAIC,KAAiBN,EAAiB,CAC1C,MAAMO,EAAkBD,EAAcpC,SACtC,IAAK,IAAIG,KAASkC,EAAiB,CAClCF,EAAsBrb,KAAKqZ,GAC3B,MAAMrX,EAAQqX,EAAMW,aAAamB,GAGP,MAA1BC,EAAgBpZ,GACboZ,EAAgBpZ,GACfoZ,EAAgBpZ,GAASrC,OAAO4W,KAAK6E,GAAiB1b,QAI5D,MAAM8J,EAAS7J,OAAO4W,KAAK6E,GAC3B,IAAK,IAAI/B,KAASgC,EAAuB,CACxC,MACMjB,EAAYgB,EADJ/B,EAAMW,aAAamB,IAEjC9B,EAAMmC,iBAAiBL,EAAwBf,GAGhDc,EAA6BC,GAA0B3R,EAMxD,MAAMiS,EAAkB,EAAAC,oBAAoBC,sBAAsBtV,GAM5DuV,EAA0B,IAAIlX,KAAK+W,GAUzC,OATA9b,OAAO4W,KAAK2E,GAA8B5U,QAAS6U,IAClD,MAAM3R,EAAS0R,EAA6BC,GAC5CS,EAAwBzE,6BAA6BgE,EAAwB3R,KAG1EiS,UACIA,EAAgBrF,SAASyF,eAG1BJ,EAGR,W,MAEC,MAAM3U,GAA6B,QAArB,EAAApC,KAAKwB,WAAWY,aAAK,eAAEG,QAAS,GAC9C,OAAO,UAAaH,EAAO,GAG5B,QACC,OAAOpC,KAAKoX,sBAEb,sB,MACC,MACMC,IADmC,QAArB,EAAArX,KAAKwB,WAAWY,aAAK,eAAEG,QAAS,IACpBvH,OAAS,EACzC,OAAO,UAAaqc,GAAarS,IAAKlK,GAAM,IAAI,EAAAwc,SAAStX,KAAMlF,KAvgBjE,kB,qFCjCA,SAAYyc,GACX,yBACA,yBACA,kCACA,uEACA,qDACA,mDACA,uCACA,uCACA,2DACA,yDACA,qCACA,4CACA,8CACA,wCAdD,CAAY,EAAAA,YAAA,EAAAA,UAAS,M,2FCDrB,SACA,SAIA,SACA,2BACA,2BAMA,mBAGC,YAA4BC,GAAA,KAAAA,QAE3BxX,KAAKyD,KAAOzD,KAAKwX,MAAM/T,KAGxB,4BAEC,OADAJ,QAAQiE,KAAK,mFACN,GAER,4BACC,MAAO,GAER,qCACC,OAAOtH,KAAKyX,qBAAqBzc,OAElC,qCACC,OAAOgF,KAAK0X,8BAAgC1X,KAAK2X,qBAAqB3c,OAEvE,+BAA+BuR,GAC9B,OAAOA,GAASvM,KAAK0X,+BAAiCnL,GAASvM,KAAK4X,8BAGrE,kBAAkBC,GACjB,KAAM,iFAGD,8BAA8BC,G,mDACnC,MAAMC,EAAkB/X,KAAKgY,oBAAoBF,GAEjD,GAAIC,EAAiB,CACpB,MAAMhW,QAAkBgW,EAAgBE,oBACxC,GAAIlW,EAAW,CAEd,GADmBA,EAAUC,eAE5B,OAAOD,EAGT,KAAM,4BAA4BgW,EAAgB1P,cAElD,KAAM,kBAAkByP,QAI1B,qBAAqBI,EAAcC,GAmBlC,OAlByB,EAAAC,WAAWC,WAAWrY,KAAKyD,KAAMyU,EAAMC,IAkBrC,KAG5B,2BAA2BL,EAAgCK,GAG1D,GAFiB,UAAgBL,GAEnB,CACb,MAAM1V,EAAQ0V,EAEd,OADyB9X,KAAKyD,KAAK5C,GAAG6G,OAAO4Q,iBAAiBlW,GAExD,CACN,MAAM8V,EAAOJ,EACb,OAAO9X,KAAKgY,oBAAoBE,EAAMC,IAGxC,oBAAoBL,EAAgCK,GAInD,GAAI,UAAgBL,GAAgB,CACnC,MAAMI,EAAOJ,EACb,OAAO,EAAAM,WAAWG,UAAUvY,KAAKyD,KAAMyU,EAAMC,GACvC,CACN,MAAM/V,EAAQ0V,EAEd,OADA9X,KAAKyD,KAAK5C,GAAG6G,OAAO8Q,MAAMpW,GACnBpC,KAAKyD,KAAK5C,GAAG6G,OAAO8Q,MAAMpW,IAsBnC,gBAAgByV,GACf,OAAO,KAGE,qCAAqCC,GAE9C,MAAMK,EAAkB,IAAI,EAAAM,eACtBhV,EAAOzD,KAAK0Y,2BAA2BZ,EAAeK,GAC5D,OAAI1U,EACIzD,KAAK2Y,kBAAkBlV,EAAMqU,EAAeK,IAEnD9U,QAAQiE,KAAK,0BAA2BwQ,GAElC,MAEE,kBACTrU,EACAqU,EACAK,GAOA,OADmB,EAAAS,iBAAiBjb,OAAOqC,KAAKwX,MAAOM,EAAerU,EAAM0U,M,iFCnJ9E,eACA,SAIA,MAAaU,EAYZ,cAVA,KAAAC,qBAA4C,IAAI,EAAAC,oBAChD,KAAAC,eAAgC,IAAI,EAAAC,cAEpC,KAAAC,eAAwC,GAIxC,kBACC,OAAQlZ,KAAKmZ,UAAYnZ,KAAKmZ,WAAa,IAAIN,EAIhD,cAAcpV,EAA2B2V,EAA4B3a,GACpEuB,KAAKgZ,eAAeK,cAAc5V,EAAM2V,EAAmB3a,GAE5D,iBAAiB6a,EAA6B/a,GAC7C,OAAOyB,KAAKgZ,eAAeO,iBAAiBD,EAAgB/a,GAE7D,mBACC,OAAO,EAER,sBAGA,cACC,OAAO,EAGR,OAAOsZ,GACNxU,QAAQC,OAAOuU,GAEhB,QAAQ2B,GACPxZ,KAAKyZ,KAAOD,EAEb,UACC,OAAOxZ,KAAKyZ,MArCd,U,8ECNA,eAKA,sBAMC,YAAsBC,EAA6B3T,GAA7B,KAAA2T,SAA6B,KAAA3T,QAF3C,KAAA4T,kBAAqC,IAAI,EAAAC,gBAAgB5Z,MAIhEA,KAAK6Z,eAAiBH,EAAOI,MAAMC,UACnCL,EAAOI,MAAME,QAAQha,MACrBA,KAAKia,OAASP,EAAOI,MAEtB,WACC,OAAO9Z,KAAK+F,MAEb,SAASlJ,GACRmD,KAAK+F,MAAQlJ,EAiBd,YACC,OAAOmD,KAAK0Z,OAEb,YACC,OAAO1Z,KAAKia,OAEb,oBACC,OAAOja,KAAK6Z,eAQb,uBACC,OAAO7Z,KAAK2Z,kBAEb,UAAUO,GACTA,EAAUA,GAAWla,KACrBA,KAAK2Z,kBAAkBQ,UAAUD,GAElC,qBAAqBA,GACpBla,KAAK2Z,kBAAkBS,qBAAqBF,GAE7C,qBACCla,KAAK2Z,kBAAkBU,qBAExB,eACC,OAAOra,KAAK2Z,kBAAkBW,SAE/B,oBAAoBzd,EAAc0d,GACjCva,KAAK2Z,kBAAkBa,oBAAoB3d,EAAM0d,GAWlD,eACCva,KAAK8Z,MAAMW,WAAWza,MAKvB,gBAAgB0a,GACf,OAAO1a,KAAK8Z,MAAMa,QAAQD,EAAK1a,MAEhC,mBAAmB0a,GAClB1a,KAAK8Z,MAAMc,WAAWF,EAAK1a,MAM5B,gCACCA,KAAK8Z,MAAMe,wBAAwB7a,MAEpC,8BACCA,KAAK8Z,MAAMgB,sBAAsB9a,MAGlC,wBACC,OAAOA,KAAK8Z,MAAMiB,gBAAgB/a,KAAK6Z,iBAAmB,GAE3D,qBACC,OAAO7Z,KAAK8Z,MAAMkB,aAAahb,MAEhC,mBACC,OAAOA,KAAK8Z,MAAMmB,WAAWjb,MAE9B,yBACC,OAAOA,KAAK8Z,MAAMoB,iBAAiBlb,MAEpC,uBACC,OAAOA,KAAK8Z,MAAMqB,eAAenb,S,2FCtHnC,QAEA,OAIA,SAEA,QACA,SAIA,MAAsBob,UAAqE,EAAAvb,UAA3F,c,oBAKC,KAAAC,qBAAoE,IAAI,EAAAC,yBACvEC,KACA,EAAAqb,mBAwCO,KAAAC,2CAA6Ctb,KAAKub,qCAAqC1d,KAAKmC,MAtCpG,sBACC,OAAO,EAAAI,YAAYob,IAMpB,uBACCvV,MAAMwV,uBAeNzb,KAAK0b,gBAAgBC,4BAA4B3b,KAAK4b,kBAAkB/d,KAAKmC,OAE7EA,KAAKwa,oBACJ,uCACAxa,KAAKsb,4CAQP,cAAcze,GACb,OAAOoJ,MAAMoB,cAAcxK,GAGd,uC,yDACPmD,KAAK6b,gBAAgBC,8BAGpB,oBAIH9b,KAAK+b,YACR/b,KAAK+b,UAAUlf,KAAOmD,KAAKqI,aAK7B,eACC,OAAQrI,KAAK+b,UAAY/b,KAAK+b,WAAa/b,KAAKgc,kBAIjD,aAAa7Y,GACZnD,KAAKmB,cAAcgC,GASpB,gBAAgBpF,KA7EjB,iBAkFA,iCAAsCqd,EACrC,kBACC,OAAO,IAAI,EAAAa,Y,8ECjGb,cAEA,QAGA,SACA,QAEA,SAEA,QAGMtc,EAAsB,CADF,iEAU1B,IAAYuc,GAAZ,SAAYA,GACX,yBACA,iBACA,uBACA,qBACA,qBACA,iBAND,CAAYA,EAAA,EAAAA,qBAAA,EAAAA,mBAAkB,KAS9B,MAAaC,UAAqE,EAAAtc,UAAlF,c,oBAKC,KAAAC,qBAAkE,IAAI,EAAAC,yBACrEC,KACA,EAAAoc,iBAEe,KAAAC,aAAuBH,EAAmBI,QAUhD,KAAAC,gBAAkB,IAAI,EAAAhR,MAatB,KAAAiR,0BAAoC,EAIpC,KAAAC,gBAA0B,EAzBpC,sBACC,OAAO,EAAArc,YAAYsc,IAEpB,+BACC,OAAO/c,EAkBR,8BACC,OAAOK,KAAKwc,yBAGb,oBACC,OAAOxc,KAAKyc,eAGb,kBAAkBE,GAEjB,GADA3c,KAAKyc,eAAiBE,GACjB3c,KAAKoD,MAAMwZ,mBAAmBC,WAAY,CAC9C,MAAMC,EAAO9c,KAAKU,OACdoc,GACHA,EAAKC,cAAc/c,OAItB,qBAAqBU,GAChBV,KAAKgd,yBACRtc,EAAOuc,IAAIjd,KAAKjC,QAGlB,4BACC,GAAIiC,KAAKgd,wBAAyB,CACjC,MAAMtc,EAASV,KAAKjC,OAAO2C,OACvBA,GACHA,EAAOwc,OAAOld,KAAKjC,SAatB,uBAECiC,KAAKmd,QAAUnd,KAAKod,iCAGpBpd,KAAK0b,gBAAgBC,4BAA4B3b,KAAKqd,gBAAgBxf,KAAKmC,OAC3EA,KAAKqd,kBAWN,cAAcxgB,GACb,OAAOoJ,MAAMoB,cAAcxK,GA4B5B,qBACC,OAAOmD,KAAKuc,gBAEb,aACC,OAAOvc,KAAKmd,QAGb,iCACC,MAAMpf,EAASiC,KAAKyB,gBAQpB,OAJC1D,EAA4B0F,KAAOzD,KAGpCjC,EAAOkf,IAAIjd,KAAKuc,iBACTxe,EAEA,kBACHiC,KAAKmd,UACRnd,KAAKmd,QAAQtgB,KAAOmD,KAAKqI,YACzBrI,KAAKuc,gBAAgB1f,KAAO,GAAGmD,KAAKqI,gCAatC,gBACC,OAAO,IAAI,EAAAmD,SAKZ,0BACC,OAAO,EAiBR,e,QACC,OAA0B,QAAnB,EAAU,QAAV,EAAAxL,KAAKE,aAAK,eAAEI,eAAO,eAAEG,UAAU,GAjLxC,iBAkNA,iCAAsC0b,K,+BCjPtC,sCAoCKmB,EACA9b,EAEA+b,EAvCL,wBAIA,SAASC,IAGRxd,KAAKyd,SAAU,EAGfzd,KAAK0d,WAAY,EAGjB1d,KAAK2d,OAAQ,EAGb3d,KAAK4d,gBAAiB,EAIvB3iB,OAAO4iB,OAAQL,EAAKtiB,UAAW,CAE9B4iB,QAAS,aAETC,OAAQ,WAEP1a,QAAQ2a,MAAO,iEAQjBR,EAAKD,gBAEAD,EAAS,IAAI,sBAAsB,EAAG,EAAG,GAAK,EAAG,EAAG,GACpD9b,EAAW,IAAI,sBAAqB,EAAG,GAEvC+b,EAAiB,SAAWpa,GAE/BnD,KAAKie,MAAQ,IAAI,OAAMzc,EAAU2B,IAIlClI,OAAO+B,eAAgBugB,EAAeriB,UAAW,WAAY,CAE5DgC,IAAK,WAEJ,OAAO8C,KAAKie,MAAM9a,UAInB5C,IAAK,SAAWjD,GAEf0C,KAAKie,MAAM9a,SAAW7F,KAMxBrC,OAAO4iB,OAAQN,EAAeriB,UAAW,CAExCgjB,QAAS,WAERle,KAAKie,MAAMzc,SAAS0c,WAIrBH,OAAQ,SAAWI,GAElBA,EAASJ,OAAQ/d,KAAKie,MAAOX,MAMxBC,I,qGC7ER,SAEA,OAIA,SACA,QAGA,OAEA,QAIA,SAAgBa,EAAkDC,GACjE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAC,UAAY,EAAAC,YAAYxf,SACxB,KAAAxB,EAAI,EAAAghB,YAAY/e,QAAQ,CAAC,EAAG,EAAG,IAC/B,KAAArC,EAAI,EAAAohB,YAAY/e,QAAQ,CAAC,EAAG,EAAG,IAC/B,KAAApD,EAAI,EAAAmiB,YAAY/e,QAAQ,CAAC,EAAG,EAAG,IAC/B,KAAAgf,MAAQ,EAAAD,YAAYzf,MAAM,KAN5B,2BAYsCsf,EAAuB,EAAAtV,kBAC7D,MAAa2V,UAA2B,EAAAtC,aAAxC,c,oBAEU,KAAAuC,qBAA4C,IAAIC,EAAoB3e,OAF9E,uBAQA,MAAa2e,EACZ,YAAoBlb,GAAA,KAAAA,OA4BZ,KAAA6X,2CAA6Ctb,KAAKub,qCAAqC1d,KAAKmC,MA8D5F,KAAA4e,oCAAsC,IAAI,EAAAxL,QAnFlD,kBAQCpT,KAAKyD,KAAK5C,GAAG6G,OAAOmX,UAAU,EAAG,GACjC7e,KAAKyD,KAAK5C,GAAG6G,OAAOoX,uBAAsB,GAC1C9e,KAAKyD,KAAK5C,GAAGC,QAAQC,qBACrBf,KAAKyD,KAAK5C,GAAG6G,OAAOqX,sBAAsB,mBAAoB,KAC7D/e,KAAKgf,qBAGN,MAAMC,EAAY,uCACbjf,KAAKyD,KAAKyb,iBAAiBC,SAASF,IACxCjf,KAAKyD,KAAKyb,iBAAiB1E,oBAAoByE,EAAWjf,KAAKsb,4CAKnD,uC,yDAEPtb,KAAKyD,KAAKoY,gBAAgBC,8BAIjC,wBAAwBrY,GACQ,MAA3BA,EAAK5C,GAAG6G,OAAO8Q,MAAM,GACxB/U,EAAKqZ,KAAKsC,wBAAwB3b,GAElCA,EAAKqZ,KAAKuC,6BAA6B5b,GAGzC,mBACCkb,EAAoBK,iBAAiBhf,KAAKyD,MAG3C,OAAO6b,GAcNtf,KAAKuf,6BAA6BD,GAcnC,6BAA6BA,GAE5B,MAAMvhB,EAASiC,KAAKyD,KAAK1F,OAEzB,OAAc,MAAVuhB,GAAmBA,EAAOE,OAAOzhB,EAAOuhB,QAQpCtf,KAAKyf,gCALZ1hB,EAAO2hB,kBAAmB,EAC1B3hB,EAAOuhB,OAASA,EAETvhB,EAAO4hB,cAAc,CAACphB,KAAM,YAOrC,+BACC,MAAMR,EAASiC,KAAKyD,KAAK1F,OACzB,GAAIA,EAAQ,CACX,MAAMqW,EAAoBpU,KAAKyD,KAAKmc,GAAGriB,EAEjCsiB,EAAoB7f,KAAKyD,KAAKmc,GAAGziB,EAEvC6C,KAAK4e,oCAAoCkB,KAAK9f,KAAKyD,KAAKmc,GAAGxjB,GAAG2jB,eAAe/f,KAAKyD,KAAKmc,GAAGpB,OAM1FzgB,EAAO2hB,kBAAmB,EAC1B3hB,EAAOqW,SAAS0L,KAAK1L,GAErB,MAAM4L,EAAU,CACf,EAAAC,SAASC,mBAAmBL,EAASva,GACrC,EAAA2a,SAASC,mBAAmBL,EAASta,GACrC,EAAA0a,SAASC,mBAAmBL,EAASra,IAEhC2a,EAAQ,IAAI,EAAAC,MACjBJ,EAAQ,GACRA,EAAQ,GACRA,EAAQ,IAGTjiB,EAAO8hB,SAASC,KAAKK,GACrBpiB,EAAOygB,MAAMsB,KAAK9f,KAAK4e,qCACvB7gB,EAAO2hB,kBAAmB,EAC1B3hB,EAAOsiB,eAEPtiB,EAAO4hB,cAAc,CAACphB,KAAM,YAI9B,uBAAuB+gB,EAAiB7gB,EAAsC,IAC7E,EAAA6hB,cAAcC,uBAAuBjB,EAAQtf,KAAKyD,KAAMhF,IAjI1D,yB,8ECnCA,aACA,QAEA,QACA,SAEA,QAaA,oCA+FS,KAAA+hB,oBAA+B,IAAI,EAAAC,QACnC,KAAAC,sBAAwB,IAAI,EAAAC,WAC5B,KAAAC,sBAAwB,IAAI,EAAAxN,QAAQ,EAAG,EAAG,GA0B1C,KAAAyN,SAAU,IAAI,EAAAJ,SAAUK,WACxB,KAAAC,UAAY,IAAI,EAAAJ,WAChB,KAAAK,UAAY,IAAI,EAAAZ,MAChB,KAAAa,UAAY,IAAI,EAAA7N,QAmBhB,KAAA8N,mBAAqB,IAAI,EAAAT,QACzB,KAAAU,mBAAqB,IAAI,EAAAR,WACzB,KAAAS,0BAA4B,IAAI,EAAAhO,QAtHxC,8BAA8BkM,EAAiB7b,EAAoBhF,EAAsC,IACxG,IAAI4iB,EAAe5iB,EAAe,MACd,MAAhB4iB,IACHA,GAAe,GAOhB,MAAMjN,EAAW,IAAI,EAAAhB,QACfkO,EAAa,IAAI,EAAAX,WACjBnC,EAAQ,IAAI,EAAApL,QAClBkM,EAAOiC,UAAUnN,EAAUkN,EAAY9C,GAEvC,MACMqB,GADQ,IAAI,EAAAO,OAAQoB,kBAAkBF,GACrBG,YACvB5B,EAAS6B,aAAalV,KAAKmV,GAAK,KAgBhCle,EAAKL,MAAMwe,aAAa,KACvBne,EAAK+E,OAAOqZ,YAAY,IAAKhC,EAAS9a,WACtCtB,EAAK+E,OAAOqZ,YAAY,IAAKzN,EAASrP,WACtCtB,EAAK+E,OAAOqZ,YAAY,IAAKrD,EAAMzZ,WAC/Bsc,GACH5d,EAAK+E,OAAOsZ,UAAU,QAAS,KAQlC,8BAA8B/jB,EAAkB0F,GAC/C,MAAM2Q,EAAWrW,EAAOqW,SAASrP,UAC3B8a,EAAW9hB,EAAO8hB,SAAS9a,UAAUC,IAAKrI,GAAMA,GAAK,IAAM6P,KAAKmV,KAEtEle,EAAKL,MAAMwe,aAAa,KACvBne,EAAK+E,OAAOqZ,YAAY,IAAKzN,GAC7B3Q,EAAK+E,OAAOqZ,YAAY,IAAKhC,KAiB/B,mBAAmBtiB,GAElB,OADAyC,KAAKwgB,oBAAoBuB,QAAQxkB,EAAGyC,KAAK0gB,sBAAuB1gB,KAAK4gB,uBAC9D5gB,KAAKwgB,oBAGb,yBAAyBlB,GACxB,MAAM/hB,EAAI,IAAI,EAAA6V,QACR4O,EAAO,IAAI,EAAArB,WACXvkB,EAAI,IAAI,EAAAgX,QAEd,OADAkM,EAAOiC,UAAUhkB,EAAGykB,EAAM5lB,GACnB4lB,EAmBR,OAAOzkB,EAAYJ,EAAYf,EAAYoiB,GAO1C,OANAxe,KAAKghB,UAAUzgB,IAAI,EAAA0hB,UAAUC,SAAS/kB,EAAEmI,GAAI,EAAA2c,UAAUC,SAAS/kB,EAAEoI,GAAI,EAAA0c,UAAUC,SAAS/kB,EAAEqI,GAzIrE,OA0IrBxF,KAAK+gB,UAAUoB,aAAaniB,KAAKghB,WAEjChhB,KAAKihB,UAAUnB,KAAK1jB,GAAG2jB,eAAevB,GAEtCxe,KAAK6gB,QAAQkB,QAAQxkB,EAAGyC,KAAK+gB,UAAW/gB,KAAKihB,WACtCjhB,KAAK6gB,QAcb,gBAAgBrf,EAA0B4gB,EAAqBC,GAC9DriB,KAAKohB,0BAA0BtB,KAAKuC,GACpCriB,KAAKohB,0BAA0BkB,YAC/BtiB,KAAKmhB,mBAAmBoB,mBAAmBH,EAAYpiB,KAAKohB,2BAE5DphB,KAAKkhB,mBAAmBsB,2BAA2BxiB,KAAKmhB,oBACxD3f,EAASihB,aAAaziB,KAAKkhB,uB,gGC9K7B,QA6BA,SAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAKA,SACA,SACA,SAqBA,GAJA,MAIA,QAoCA,SAOA,MAAarhB,UAAqF,EAAA6iB,cA+FjG,YAAYtf,EAAkBvG,EAAe,YAC5CoJ,MAAM7C,EAAOvG,GA/Fd,KAAAiD,qBAAkE,IAAI,EAAAC,yBACrEC,KACA,EAAA2iB,eAoBQ,KAAA/C,GAA2C,IAAI,EAAAgD,oBAE/C,KAAA3kB,EAAqC,IAAI,EAAA4kB,eA0E1C,KAAAC,cAAwB,EAlFhC,8BACC,OAAO9iB,KAAK+iB,yBAab,wBACC,OAAQ/iB,KAAKgjB,mBAAqBhjB,KAAKgjB,oBAAsB,IAAI,EAAAC,0BAA0BjjB,MAE5F,+BACC,MAAO,GAKR,kCACC,OAAOA,KAAKkjB,6BAEL,8BACP,GAAIljB,KAAKkjB,6BACR,OAAO,IAAI,EAAAC,4BAA4BnjB,KAAMA,KAAKkjB,8BAGpD,0BACC,OAAQljB,KAAKojB,qBAAuBpjB,KAAKojB,sBAAwBpjB,KAAKqjB,8BAEvE,mBACC,OAA4C,MAArCrjB,KAAKkjB,6BAGb,cACC,OAAQljB,KAAKsjB,SAAWtjB,KAAKsjB,UAAY,IAAI,EAAAC,OAAOvjB,MAErD,8BACC,OAAQA,KAAKwjB,yBAA2BxjB,KAAKwjB,0BAA4B,IAAI,EAAAC,uBAAuBzjB,MAErG,aACC,OAAQA,KAAK0jB,QAAU1jB,KAAK0jB,SAAW,IAAI,EAAAC,iBAAiB3jB,MAE7D,gBACC,OAAQA,KAAK4jB,WAAa5jB,KAAK4jB,YAAc,IAAI,EAAAC,oBAAoB7jB,MAEtE,iBACC,OAAQA,KAAK8jB,YAAc9jB,KAAK8jB,aAAe,IAAI,EAAAC,eAAe/jB,MAKnE,sBACC,OAAQA,KAAKgkB,iBAAmBhkB,KAAKgkB,kBAAoB,IAAI,EAAAC,eAAejkB,MAE7E,SACC,OAAQA,KAAKkkB,IAAMlkB,KAAKkkB,KAAO,IAAI,EAAAC,aAA2BnkB,MAE/D,sBACC,OAAQA,KAAKokB,iBAAmBpkB,KAAKokB,kBAAoB,IAAI,EAAAC,eAAerkB,MAE7E,SAASnD,GACRmD,KAAK0b,gBAAgB4I,SAASznB,GAE/B,eAAeA,GACdmD,KAAK+F,MAAQlJ,EAEd,aACC,OAAQmD,KAAKukB,mBAAqBvkB,KAAKukB,oBAAsB,IAAI,EAAAC,iBAAiBxkB,MAEnF,yBACC,OAAQA,KAAKykB,oBAAsBzkB,KAAKykB,qBAAuB,IAAI,EAAAC,kBAAkB1kB,MAQ/E,2BACDA,KAAK8iB,aAKTzf,QAAQiE,KAAK,6BAJbtH,KAAKyb,uBACLzb,KAAKoH,kBACLpH,KAAK8iB,cAAe,GAKZ,wBACA,mBAoBV,cACC,KAAM,uBAEP,WAEC,OADU9iB,KAAK+T,YACNxV,OAEV,sBACC,KAAM,oBAEP,eAEC,OADUyB,KAAK+T,YACN4Q,eAGV,gCACC,MAAO,GAER,0BACC,IAAIC,EAAgB5kB,KAAK6kB,yBACzB,OAAID,EAIIA,EAAc5f,IAAKwK,GAAM,sBAAsBA,KAE/C,GAGT,mBAEC,OADUxP,KAAK+T,YACN+Q,mBAEV,wBACC,OAAO,EAER,iBAEC,OADU9kB,KAAK+T,YACNgR,iBAWV,WAAWrkB,GACVV,KAAKglB,kBAAkBC,WAAWvkB,GAEnC,aACC,OAAOV,KAAKglB,kBAAkBtkB,OAE/B,WACC,OAAOV,KAAK0Z,OAAOoD,KAEpB,YACC,OAAO9c,KAAKglB,kBAAkB3c,YAI/B,iBACA,UACC9J,EACA1B,EACA+V,EACAnU,G,MAEA,OAA8B,QAA9B,EAAOuB,KAAKukB,0BAAkB,eAAEW,UAAU3mB,EAAM1B,EAAM+V,EAAenU,GAOtE,KAAK0mB,GACJ,OAAO,KAIF,oB,mDACL,aAAanlB,KAAKF,qBAAqBmY,uBAExC,cAAcmN,EAA4BtjB,EAAyB,MAGlE9B,KAAKF,qBAAqBiC,UAAUsjB,YAAYD,GACjC,MAAXA,IACGA,EAAgBvoB,OACpBuoB,EAAgBvoB,KAAOmD,KAAKqI,aAExB+c,EAAgB3hB,OACpB2hB,EAAgB3hB,KAAOzD,OAI1BA,KAAK6b,gBAAgByJ,SAASxjB,GAI/B,YAAYvD,G,MACX,OAA+B,QAA/B,EAAOyB,KAAKulB,2BAAmB,eAAEC,YAAYjnB,GAE9C,YAAYkF,G,MACa,QAAxB,EAAAzD,KAAKulB,2BAAmB,SAAEE,YAAYhiB,GAEvC,W,MACC,OAA+B,QAAxB,EAAAzD,KAAKulB,2BAAmB,eAAEG,aAAc,GAEhD,KAAKxN,G,MACJ,OAA6B,QAAtB,EAAAlY,KAAKglB,yBAAiB,eAAEzM,UAAUL,KAAS,KAEnD,cAAcrb,G,MACb,GAAImD,KAAKU,OAAQ,CAChB,MAAM+C,EAAsC,QAAlC,EAAGzD,KAAKU,OAAO6kB,2BAAmB,eAAEI,cAAc9oB,GAC5D,GAAI4G,EACH,OAAOA,EAGT,OAAO,KAER,cAAclF,G,MACb,OAA+B,QAAxB,EAAAyB,KAAKulB,2BAAmB,eAAEK,cAAcrnB,KAAS,GAIzD,UAAUsnB,EAAsCpiB,EAAiBqiB,EAAwC,GACxG9lB,KAAKa,GAAG6G,OAAOqe,UAAUF,EAAqBpiB,EAAMqiB,GAmBrD,KAAKE,EAAuBxrB,EAAsB,MAEjDwF,KAAKoD,MAAM6iB,oBAAoBC,SAASlmB,KAAMgmB,EAAYxrB,GAI3D,QAAQ2rB,GAAoC,GAC3C,OAAOnmB,KAAKomB,WAAWC,QAAQF,IA7RjC,cAkSA,8BAAmCtmB,K,6FC/YnC,SACA,QAiCA,SAEA,SACA,SACA,SAKA,QACA,SAkBA,MAAsBymB,UAAwC,EAAA5D,cAqC7D,YAAYtf,GACX6C,MAAM7C,EAAO,aA3BN,KAAAmjB,SAA8B,IAAI,EAAAC,kBAAkBxmB,MAIpD,KAAAymB,iBAAmC,IAAI,EAAAC,eAAe1mB,MAqGtD,KAAA2mB,eAAyB,EA7EhC3mB,KAAK4mB,mBA3BN,cACC,OAAQ5mB,KAAKumB,SAAWvmB,KAAKumB,UAAY,IAAI,EAAAC,kBAAkBxmB,MAGhE,sBACC,OAAQA,KAAKymB,iBAAmBzmB,KAAKymB,kBAAoB,IAAI,EAAAC,eAAe1mB,MAG7E,4BACC,OAAOA,KAAK6mB,uBAIb,iBACC,OAAQ7mB,KAAK8jB,YAAc9jB,KAAK8jB,aAAe,IAAI,EAAAgD,gBAAgB9mB,MAGpE,aACC,OAAQA,KAAK0jB,QAAU1jB,KAAK0jB,SAAW,IAAI,EAAAC,iBAAiB3jB,MAW7D,oBACA,oBAgBA,cACC,OAAO,EAAAtB,UAAUI,MAElB,WACC,OAAQkB,KAAK+T,YAAsCxV,OAEpD,iBACC,OAAO,EAIR,SAAS1B,GACRoJ,MAAMqe,SAASznB,GAGhB,YACC,OAAOmD,KAAK+mB,OAKb,QAAQC,GACP,OAAO,KAER,2BAA2BC,EAAWC,GACrC,OAAO,EAER,mBAAmBC,GAClB,OAAQnnB,KAAK+T,YAAoBqT,oBAAoBpnB,KAAKqnB,WAAYF,GAEvE,wBAAwBF,EAAWC,GAClC,OAAO,EAER,eAAeI,GACd,OAAQtnB,KAAK+T,YAAoBwT,iBAAiBvnB,KAAK1C,MAAOgqB,GAErD,iBAAiBE,GAC1B,OAAOA,EAER,IAAIA,GACHxnB,KAAKqnB,WAAarnB,KAAKynB,iBAAiBznB,KAAK0nB,6BAA6BF,IAC1ExnB,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWC,mBACrC9nB,KAAK+nB,oBAEI,6BAA6BP,GACtC,OAAOA,EAER,oBACC,OAAOxnB,KAAKgoB,eAEb,iBACC,OAAO,EAER,gBACC,OAAOhoB,KAAKqnB,WAGH,qBAEJ,U,mDAKL,GAJIrnB,KAAKoD,MAAMwZ,mBAAmBC,YACjCxZ,QAAQiE,KAAK,4BAA4BtH,KAAKqI,eAG3CrI,KAAKsa,SAAU,CAClB,GAAKta,KAAK2mB,cAYT,OAAO,IAAIsB,QAAQ,CAACC,EAASC,KAC5BnoB,KAAKooB,kBAAoBpoB,KAAKooB,mBAAqB,GACnDpoB,KAAKooB,kBAAkB9sB,KAAK4sB,KAT7B,GAJAloB,KAAK2mB,eAAgB,QACf3mB,KAAKqoB,sBACXroB,KAAK2mB,eAAgB,EAEjB3mB,KAAKooB,kBAAmB,CAC3B,IAAI7N,EACJ,KAAQA,EAAWva,KAAKooB,kBAAkBE,OACzC/N,SAWW,sB,uDAIhB,eAAe/b,GACdwB,KAAKgoB,eAAiBxpB,EAgBvB,SAASiF,G,QAYR,GAXKA,GAKJzD,KAAK8F,MAAQrC,EACTzD,KAAKvB,QAAQ8pB,gCAAkCvoB,KAAKwoB,eAChC,QAAvB,EAAA/kB,EAAK+E,OAAOigB,mBAAW,SAAEC,gBAAgB1oB,QANtCA,KAAK8F,QACqB,QAA7B,EAAA9F,KAAK8F,MAAM0C,OAAOigB,mBAAW,SAAEE,mBAAmB3oB,OAShDA,KAAK4oB,WACR,IAAK,IAAIjsB,KAAKqD,KAAK4oB,WAClBjsB,EAAEksB,SAASplB,GAId,WACC,OAAOzD,KAAK8F,MAEb,aACC,OAAO9F,KAAKyD,KAIb,iBAAiB+T,GAChBA,EAAMkR,gBAAgB1oB,MACtBA,KAAK8oB,cAAgBtR,EAEtB,mBACC,OAAOxX,KAAK8oB,cAEb,mBACC,OAA6B,MAAtB9oB,KAAK8oB,cAEb,Y,MACC,OAAgB,QAAT,EAAA9oB,KAAKyD,YAAI,eAAE4E,aAAc,IAAMrI,KAAKnD,KAE5C,iBAAiB4G,GAChB,OAAO,EAAA2U,WAAW2Q,cAActlB,EAAMzD,MAIvC,KAAKgmB,GACAhmB,KAAK2nB,gBAAgBqB,eACxBhpB,KAAK2nB,gBAAgBsB,gBAAgBjD,GACrChmB,KAAKoD,MAAM6iB,oBAAoBC,SAASlmB,KAAMgmB,IAKhD,iBACC,OAAOhmB,KAAKkpB,YAEb,6BACC,MAAO,GAER,sBAEC,OADoBlpB,KAAK+T,YAChBoV,gBAEV,kBACC,OAAOnpB,KAAKmpB,gBAAgBnuB,OAAS,EAGtC,mBAMA,iBACC,OAAqC,MAA9BgF,KAAKopB,uBAAiCppB,KAAKopB,sBAAsB3oB,OAIzE,UACC,OAAOT,KAAKomB,WAAWC,WAjPzB,eAqPA,+BAAoCC,EACnC,+BACC,MAAO,oDAER,2BACC,MAAO,gDAER,uBACC,MAAO,+C,8EC5TT,eACA,SAEA,MAAa+C,EAGZ,YAAsB5lB,GAAA,KAAAA,OACtB,cACC,OAAO,EAER,aACC,OAAO,GAIT,SAAS6lB,EAAmCjL,GAC3C,OAAO,cAAoBA,EAApB,c,oBAEC,KAAA/d,QAAuB,IAAI,EAAAipB,YAAYvpB,KAAKyD,MACnD,cACC,OAAO,IAIV,SAAS+lB,EAAkCnL,GAC1C,OAAO,cAAoBA,EAApB,c,oBAEU,KAAAoL,OAAqB,IAAI,EAAAC,WAAW1pB,KAAKyD,MACzD,aACC,OAAO,IA1BV,oBA+BA,MAAakmB,UAAyBL,EAAQD,KAA9C,qBACA,MAAaO,UAAyBJ,EAAOH,KAA7C,qBACA,MAAalpB,UAA0BqpB,EAAOF,EAAQD,MAAtD,uB,6BCtCA,OAAe,85M,mFCOf,MAAajR,EASZ,iBAAiBrQ,EAAwBmQ,EAAcC,GACtD,IAAKpQ,EACJ,OAAO,KAGR,MAAM4G,EAAqBuJ,EAAKtJ,MAAMwJ,EAAW/Y,WAAWwqB,OAAQra,GAAMA,EAAExU,OAAS,GAC/E8uB,EAAgBnb,EAAS,GAE/B,IAAIob,EAAiC,KACrC,GAAI7R,EAAK,KAAOE,EAAW/Y,UAGpB,CACN,OAAQyqB,GACP,KAAK1R,EAAW4R,OACf7R,WAAiB8R,iBAAiBH,GAClCC,EAAYhiB,EAASrH,OACrB,MACD,KAAK0X,EAAW8R,QACf/R,WAAiB8R,iBAAiBH,GAClCC,EAAYhiB,EACZ,MACD,QAICgiB,EAAYhiB,EAAStE,KAAKqmB,GACtBC,IACH5R,WAAiBgS,SAASL,EAAeC,IAS5C,GAAiB,MAAbA,GAAqBpb,EAAS3T,OAAS,EAAG,CAC7C,MAAMovB,EAAYzb,EAAStQ,MAAM,GAAG6G,KAAKkT,EAAW/Y,WACpD0qB,EAAY/pB,KAAKuY,UAAUwR,EAAWK,EAAWjS,GAElD,OAAO4R,EAhC8B,CACrC,MAAMM,EAAiBnS,EAAK1J,OAAO,GACnCub,EAAY/pB,KAAKuY,UAAUxQ,EAAS+U,KAAMuN,EAAgBlS,GAiC3D,OAAO4R,EAGR,kBAAkBhiB,EAAwBmQ,EAAcC,GACvD,IAAKpQ,EACJ,OAAO,KAGR,MAAM4G,EAAWuJ,EAAKtJ,MAAMwJ,EAAW/Y,WAEvC,GAAwB,IAApBsP,EAAS3T,OACZ,OAAO+M,EAASS,OAAOtL,IAAIyR,EAAS,IAC9B,CACN,MAAM2b,EAAY3b,EAAStQ,MAAM,IAAKsQ,EAAS3T,OAAS,GAAK,QAAKuJ,GAAWW,KAAKkT,EAAW/Y,WACvFoE,EAAOzD,KAAKuY,UAAUxQ,EAAUuiB,EAAWnS,GACjD,GAAY,MAAR1U,EAAc,CACjB,MAAM8mB,EAAa5b,EAASA,EAAS3T,OAAS,GACxCwc,EAAQ/T,EAAK+E,OAAOtL,IAAIqtB,GAI9B,OAHIpS,GAAmBX,GACtBW,EAAgBgS,SAASI,EAAY/S,GAE/BA,EAEP,OAAO,MAKV,qBAAqBgT,EAAuCC,GAC3D,MAAM/pB,EAASV,KAAK0qB,sBAAsBF,EAAgBC,GAC1D,GAAK/pB,EAEE,CACN,MAAMiqB,EAAW3qB,KAAK4qB,mBAAmBJ,EAAgB9pB,GAEzD,IAAImqB,EAAK,GACT,GAAIF,EAAW,EAAI,EAAG,CACrB,IAAI7vB,EAAI,EACR,MAAMgwB,EAAM,GACZ,KAAOhwB,IAAM6vB,EAAW,GACvBG,EAAIxvB,KAAK8c,EAAW4R,QAErBa,EAAKC,EAAI5lB,KAAKkT,EAAW/Y,WAAa+Y,EAAW/Y,UAGlD,MAAM0rB,EAAuBrqB,EAC3B2H,YACAuG,MAAMwJ,EAAW/Y,WACjBwqB,OAAQra,GAAMA,EAAExU,OAAS,GACrBgwB,EAAqBP,EACzBpiB,YACAuG,MAAMwJ,EAAW/Y,WACjBwqB,OAAQra,GAAMA,EAAExU,OAAS,GACrBiwB,EAAqB,GAC3B,IAAIC,EAAQ,EACZ,IAAK,IAAIC,KAAqBH,EACxBD,EAAqBG,IACzBD,EAAmB3vB,KAAK6vB,GAEzBD,IAGD,MAAO,GAAGL,IADGI,EAAmB/lB,KAAKkT,EAAW/Y,aA9BhD,OAAOorB,EAAgBpiB,YAmCzB,6BACC+iB,EACAC,GAEA,MAAMC,EAAWtrB,KAAKurB,QAAQH,GAAa3b,UACrC+b,EAAWxrB,KAAKurB,QAAQF,GAAa5b,UAErCgc,EAAYjf,KAAKkf,IAAIJ,EAAStwB,OAAQwwB,EAASxwB,QACrD,IAAI2wB,EAAe,KAEnB,IAAK,IAAI7wB,EAAI,EAAGA,EAAI2wB,EAAW3wB,IAC1BwwB,EAASxwB,GAAG8wB,eAAiBJ,EAAS1wB,GAAG8wB,gBAC5CD,EAAeL,EAASxwB,IAG1B,OAAO6wB,EAER,eAAeE,GACd,MAAMN,EAAU,GAChB,IAAI7qB,EAASmrB,EAAWnrB,OACxB,KAAOA,GACN6qB,EAAQjwB,KAAKoF,GACbA,EAASA,EAAOA,OAEjB,OAAO6qB,EAER,0BAA0BM,EAAmCC,GAC5D,IAAInB,EAAW,EACXoB,EAAwCF,EAC5C,MAAMG,EAAUF,EAAKF,cACrB,KAAOG,GAAWA,EAAQH,eAAiBI,GAC1CrB,GAAY,EACZoB,EAAUA,EAAQrrB,OAEnB,OAAIqrB,GAAWA,EAAQH,eAAiBI,EAChCrB,GAEC,EAIV,0BAA0B5iB,EAAwCmQ,GACjE,MAAM+T,EAAgB/T,EAAKtJ,MAAMwJ,EAAW/Y,WACtCyqB,EAAgBmC,EAAcxwB,QAEpC,IAAIquB,EAiBH,OAAO/hB,EAASM,YAhBhB,OAAQyhB,GACP,IAAK,KACJ,OAAI/hB,EAASrH,OACLV,KAAKksB,mBAAmBnkB,EAASrH,OAAQurB,EAAc/mB,KAAKkT,EAAW/Y,YAEvE,KAGT,IAAK,IACJ,OAAOW,KAAKksB,mBAAmBnkB,EAAUkkB,EAAc/mB,KAAKkT,EAAW/Y,YAExE,QACC,MAAO,CAAC0I,EAASM,YAAa6P,GAAMhT,KAAKkT,EAAW/Y,aAjLzD,eACwB,EAAAA,UAAY,IACZ,EAAA8sB,IAAM,IACN,EAAAjC,QAAU9R,EAAW+T,IACrB,EAAAnC,OAAS,KACT,EAAAoC,mBAAqB,GAAGhU,EAAW8R,WACnC,EAAAmC,kBAAoB,GAAGjU,EAAW4R,UAClC,EAAAsC,oBAAsB,CAAClU,EAAW/Y,UAAW+Y,EAAW+T,M,+ECdhF,SAAYtE,GACX,0CAEA,wCACA,sCACA,+CACA,sCACA,0BAPD,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,2FCAtB,OAEM0E,EAAQ,CAACC,SADf,MACeA,SAAUpZ,QAAA,EAAAA,SACzB,2BAGA,SAEMqZ,EAAgBjgB,KAAKmV,GAAK,IAEhC,MAAa1B,EAKZ,aAAaxR,EAAaid,EAAajf,GACtC,OAAIgC,EAAMid,EACFA,EACGjd,EAAMhC,EACTA,EAEAgC,EAIT,aAAaA,EAAaie,EAAkBC,GAG3C,OAAO3sB,KAAK4sB,IAAIne,EAAK,EAAG,EAAGie,EAAUC,GAGtC,WAAWle,EAAaoe,EAAiBC,EAAiBJ,EAAkBC,GAK3E,OADWle,EAAMoe,IAHCC,EAAUD,IACTF,EAAWD,GAGNA,EAGzB,0BAA0BK,GACzB,OAAOA,EAAUN,EAElB,0BAA0BzM,GACzB,OAAOA,EAAUyM,EAElB,eAAeO,GACd,OAAOhtB,KAAKkgB,mBAAmB8M,GAEhC,eAAeC,GACd,OAAOjtB,KAAKktB,mBAAmBD,GAMhC,YAAYE,GACX,OAAI,UAAgBA,GACZntB,KAAKotB,WAAWD,GAEhBntB,KAAKqtB,UAAUF,GAIxB,aAAaA,EAAgBG,GAC5B,MAAMC,EAAcJ,EAASG,EACvBE,EAAsBL,EAAS,EAAI3gB,KAAKihB,KAAKF,GAAe/gB,KAAKkhB,MAAMH,GAE7E,OADAlqB,QAAQC,IAAI,QAASgqB,EAAWH,EAAQI,EAAaC,EAAqBA,EAAsBF,GACzFE,EAAsBF,EAG9B,oBAAoBH,GACnB,OAAO,EAAI3gB,KAAKihB,KAAc,GAATN,GAGtB,kBAAkBA,GACjB,MAAMhoB,EAAM,CACXG,EAAG6nB,EACH5nB,EAAG,QAEJ,OAAOvF,KAAKqtB,UAAUloB,GAGvB,iBAAiBwoB,GAChB,MAIMC,GAJI,QAGCD,EAAGroB,EAFJ,OAEYqoB,EAAGpoB,GACTiH,KAAKmV,GACrB,OAAO3hB,KAAK6tB,MAHF,WAGQrhB,KAAKshB,IAAIF,IAI5B,yBAAyBG,EAAqBC,GAC7C,IACIC,EAAKjuB,KAAKkuB,QAAQH,EAAQI,KAC1BC,EAAKpuB,KAAKkuB,QAAQF,EAAQG,KAC1BE,EAAKruB,KAAKkuB,QAAQF,EAAQG,IAAMJ,EAAQI,KACxCG,EAAKtuB,KAAKkuB,QAAQF,EAAQO,IAAMR,EAAQQ,KAExCre,EAAI1D,KAAKshB,IAAIO,EAAK,GAAK7hB,KAAKshB,IAAIO,EAAK,GAAK7hB,KAAKgiB,IAAIP,GAAMzhB,KAAKgiB,IAAIJ,GAAM5hB,KAAKshB,IAAIQ,EAAK,GAAK9hB,KAAKshB,IAAIQ,EAAK,GAI7G,OAVQ,QAOA,EAAI9hB,KAAKiiB,MAAMjiB,KAAKkiB,KAAKxe,GAAI1D,KAAKkiB,KAAK,EAAIxe,KAMpD,uBAAuBye,EAAoBC,GAC1C,MAAMC,EAAY,IAAItC,EAAMnZ,QAG5B,IAAK0b,EAFLH,EAASI,YAAYF,GAErB,SAAKC,GACJ,QACA,QACA,QAHD,CAAKA,MAAY,KAKjB,IAAK,IAAIE,IAAQ,CAAC,IAAK,IAAK,KAAM,CACjC,MAAMC,EAAQN,EAASK,GAAsBjsB,QAAQmsB,IAAIL,GACnDM,EAAUF,EAAMlsB,QAAQuf,YACxBtnB,EAASi0B,EAAMj0B,SAAW4zB,EAEhCD,EAASK,GAAwBH,EAAU9rB,QAAQka,IAAIkS,EAAQpP,eAAe/kB,IAE/E,OAAO2zB,EAGR,qBAAqBvpB,GACpB,OAAOoH,KAAK4iB,IAAI,EAAG5iB,KAAKihB,KAAKjhB,KAAKlJ,IAAI8B,GAAOoH,KAAKlJ,IAAI,MApHxD,aAGQ,EAAA+rB,OAAS,EAAAA,OAuCT,EAAAxB,MAASV,GAAmBA,EAAS3gB,KAAKkhB,MAAMP,I,8ECpDxD,eAEA,OACA,OACA,OACA,OACA,QAEA,OACA,SAAgBmC,EAA2CjR,GAC1D,OAAO,cAAoBA,EAApB,c,oBACN,KAAAkR,aAAe,EAAAhR,YAAY3f,QAAQ,GACnC,KAAA4wB,MAAQ,EAAAjR,YAAY3f,QAAQ,EAAG,CAAC6wB,WAAY,CAACF,cAAc,OAH7D,oBAO4B,EAAAtT,SAGGqT,EAAgB,EAAAxmB,kBACrB,EAAAsS,aAM1B,MAAasU,UAAuB,EAAAC,eACnC,cAAclsB,GACb,MAAMmsB,EAAcnsB,EAAKmc,GAAG4P,MAAQ,EAAAzlB,UAAY,EAAA8lB,SAC1CC,EAAWrsB,EAAKmc,GAAG2P,aAAe,EAAAQ,WAAaH,EACjDE,GAAYrsB,EAAKN,SAAS2G,OAC7BrG,EAAKN,SAAS2G,KAAOgmB,EACrBrsB,EAAKN,SAAS6sB,aAAc,IAN/B,oB,2FC1BA,SAEA,QAGA,QAEA,QACA,QACA,SAGA,QACA,UAKA,SAAYC,GACX,oCACA,8BACA,qCAHD,CAAY,EAAAA,qBAAA,EAAAA,mBAAkB,KAS9B,MAAaC,UAAgC,EAAAC,sBAA7C,c,oBACS,KAAAC,2BAA+E,IAAIC,IAE3F,kBACC,OAAO,IAAI,EAAAC,eAGZ,yCAIU,sBAAsBntB,GAC/B,MAAMotB,EAAuBvwB,KAAKwwB,wCAC9BD,GACHA,EAAqB3uB,QACpB,CAAC6uB,EAAiDC,KACjD1wB,KAAK2wB,qBACJxtB,EACAutB,EACAD,KAMG,qBACPttB,EACAutB,EACAD,GAEA,IAAIG,EAAwD5wB,KAAKowB,2BAA2BlzB,IAAIwzB,GAC3FE,IACJA,EAAmB,IAAIH,EAAgBzwB,KAAK6wB,iBAC5C7wB,KAAKowB,2BAA2B7vB,IAAImwB,EAAaE,IAElDztB,EAAS2tB,iBAAmB3tB,EAAS2tB,kBAAoB,GACzD3tB,EAAS2tB,iBAAiBJ,GAAeE,EAAiB5U,kBAGrD,yBAAyB7Y,G,mDAI9B,MAAMotB,EAAuBvwB,KAAKwwB,wCAC9BD,GACHA,EAAqB3uB,QACpB,CAAO6uB,EAAiDC,IAAoC,EAAD,0CAC1F,GAAI1wB,KAAK+wB,cAAe,CACvB,IAAIC,EAAiDhxB,KAAKowB,2BAA2BlzB,IACpFwzB,GAEIM,IACJA,EAAY,IAAIP,EAAgBzwB,KAAK6wB,iBACrC7wB,KAAKowB,2BAA2B7vB,IAAImwB,EAAaM,IAGlDA,EAAUC,eAAejxB,KAAKkxB,aAC9BF,EAAUG,wBAAwBnxB,KAAK+wB,eACvCC,EAAUI,mBAAmBpxB,KAAKqxB,gBAClCL,EAAUM,qBAAqBtxB,KAAKuxB,oBAEpC,MAAMC,EAAkBruB,EAAS2tB,iBAAiBJ,GAC9Cc,UACGR,EAAUS,iBAAiBD,YAoBjC,iBAAiBruB,G,mDAEtB,IAAKnD,KAAK0xB,kBACT,OAGD,MAAMC,EAAe,EAAAC,aAAaC,kBAAkB7xB,KAAK6wB,iBACrDc,EAAa32B,OAAS,GACzBgF,KAAK6wB,gBAAgBiB,OAAO9T,MAAMzd,IAAI,gCAEvCP,KAAKixB,eAAeU,SACd3xB,KAAK+xB,kBAEX,MAAMC,EAAoBhyB,KAAKiyB,iBAAiB/0B,IAAI,EAAAqT,WAAWzF,QACzDonB,EAAsBlyB,KAAKiyB,iBAAiB/0B,IAAI,EAAAqT,WAAW4hB,UAC7DH,GAAqBE,IACxB/uB,EAASivB,aAAeJ,EACxB7uB,EAASkvB,eAAiBH,EAE1BlyB,KAAKsyB,aAAanvB,EAASovB,UAE3BpvB,EAAS6sB,aAAc,GAGxB,MAAM5sB,EAAQpD,KAAK6wB,gBAAgBztB,MAC/BpD,KAAKwyB,0BAMRpvB,EAAMqvB,oBAAoBC,iCACzBvvB,EAASkO,KACTlO,EAASovB,UAGVnvB,EAAMqvB,oBAAoBE,oCAAoCxvB,EAASkO,MASnElO,EAA+C2tB,yBAC7C9wB,KAAK4yB,yBAAyBzvB,OAcxB,kB,mDACbnD,KAAKiyB,iBAAmB,IAAI5B,IAC5BrwB,KAAK6yB,OAAS,IAAIxC,IAClB,IAAK,IAAIyC,KAAe9yB,KAAK+yB,aAAc,CAC1C,MAAMC,EAAWhzB,KAAKizB,iCAAiCH,GACnDE,GACHhzB,KAAK6yB,OAAOtyB,IAAIuyB,EAAaE,EAASpkB,MAAM,OAG1C5O,KAAKkxB,YAAYl2B,OAAS,UAEvBgF,KAAKkzB,sBAAsBlzB,KAAKkxB,aAEtClxB,KAAKmzB,gBAGN,IAAK,IAAIL,KAAe9yB,KAAK+yB,aAAc,CAC1C,MAAMK,EAAQpzB,KAAK6yB,OAAO31B,IAAI41B,GAC1BM,GACHpzB,KAAKiyB,iBAAiB1xB,IAAIuyB,EAAaM,EAAMluB,KAAK,WAKrD,wCACC,MAAO,GAGR,qBACCmuB,EACA5qB,EACA6qB,G,MAEA,MAAM9a,EAAQ6a,EAAYxyB,GAAG6G,OAAO6rB,YAAYD,GAC1CE,EAAYH,EAAYvmB,mBAAmBwmB,GAC3CG,EAAkBzzB,KAAKyzB,gBAAgBH,GAE7C,IAAII,EAAyB,KAC7B,GAAIlb,EACHkb,EAAU,EAAAprB,UAAUjD,QAAQmuB,QAE5B,GAAIC,EAAgBE,yBAA0B,CAC7C,MAAMC,EAAmBP,EAAYxyB,GAAG6G,OAAOmsB,sCAAsCP,GACrF,GAAIM,EAAkB,CACrB,MAAME,EAAUF,EAAiBr1B,KAC3Bw1B,EAAgC,QAAvB,EAAG/zB,KAAKg0B,uBAAe,eAAEC,eACvCZ,EACAS,EACAR,EACA7qB,GAEGsrB,IACHL,EAAUK,QAGN,CACN,MAAMG,EAA0BT,EAAgBU,UAC5CD,IACHR,EAAUQ,GAWb,GAAIR,EAAS,CACZ,MAAMU,EAASX,EAAgBW,SACzBC,EAASZ,EAAgBY,SACzBC,EAAeb,EAAgBa,eACjCA,GACH7rB,EAA8BwE,eAAeomB,EAAa,CAAC,OAAOiB,MAEnE7rB,EAA8BwE,eAAeomB,EAAa,CAAC,GAAGe,IAASV,IAAUW,MAC7EC,GACH7rB,EAA8BwE,eAAeomB,EAAa,CAAC,YAK9D,sBAAsBA,EAA2B5qB,G,MAEhD,MAAMqqB,EAAcrqB,EAA8B8rB,oBAC5CC,EAA6C,QAAlC,EAAGx0B,KAAKy0B,cAAc3B,UAAY,eAAE0B,cACrD,GAAIA,EAEH,IAAK,IAAIlB,KAAckB,EACtBx0B,KAAK00B,qBAAqBrB,EAAa5qB,EAA+B6qB,GAIzE,yBACCqB,EACAlsB,G,MAIA,MAAMqrB,EAAUa,EAAeb,UACzBJ,EAA8B,QAAvB,EAAG1zB,KAAKg0B,uBAAe,eAAEC,eACrCU,EACAb,EACAa,EAAe9gB,eACfpL,GAEKmsB,EAAWD,EAAevsB,YAAYusB,EAAexsB,aAC3DM,EAA8BwE,eAAe0nB,EAAgB,CAAC,GAAGb,KAAWc,OAAclB,MAkC3F,oBAAoBmB,EAAsB/B,EAAyB8B,GAC9D9B,GAAe,EAAAviB,WAAW4hB,UAC7B0C,EAAWv5B,KAAK,QAAQs5B,oBAG1B,kBAAkBC,EAAsB/B,EAAyB8B,GAC5D9B,GAAe,EAAAviB,WAAW4hB,UAC7B0C,EAAWv5B,KAAK,QAAQs5B,kBAI1B,uBAAuBE,EAA6BrsB,G,MAMnD,MAAMosB,EAAa,GACb/B,EAAcrqB,EAA8B8rB,oBAC5CE,EAAgBz0B,KAAKy0B,cAAc3B,GACzC,IAAK2B,EACJ,OAED,MAAMM,EAAeN,EAAcM,eAE7BC,EAAkE,IAAI3E,IAMtE4E,EAAuD,IAAI5E,IAMjE,IAAI6E,EACAnoB,EACJ,IAAK,IAAI5E,KAAe2sB,EAAaj0B,GAAGC,QAAQq0B,oBAAqB,CACpE,MAAMP,EAAWE,EAAa1sB,YAAYD,GACpCitB,EAAsB3sB,EAA8B8rB,oBAE1D,OAAQpsB,GACP,IAAK,OACJ+sB,EAAa,IAAI,EAAAG,oBAAoBP,EAAc,EAAAjxB,oBAAoB/E,MAAOqJ,GAC1EitB,GACH,EAAAE,SAASC,uBAAuBP,EAA4BI,EAAqBF,GAGlFnoB,EAAY,SAAS6nB,OAAczsB,IACnC,IAAK,IAAIqtB,KAAcT,EACtB,EAAAO,SAASC,uBAAuBP,EAA4BQ,EAAYN,GACxE,EAAAI,SAASC,uBAAuBN,EAA2BO,EAAYzoB,GAIxE8nB,EAAWv5B,KAAKyR,GAChB/M,KAAKy1B,8BACL,MACD,IAAK,eACJz1B,KAAK01B,oBAAoBb,EAAY/B,EAAa8B,GAClD,MAED,IAAK,aACJ50B,KAAK21B,kBAAkBd,EAAY/B,EAAa8B,GAChDM,EAAa,IAAI,EAAAG,oBAAoBP,EAAc,EAAAjxB,oBAAoBI,KAAMkE,GACzEitB,GACH,EAAAE,SAASC,uBAAuBP,EAA4BI,EAAqBF,GAElF,IAAK,IAAIM,KAAcT,EACtB,EAAAO,SAASC,uBAAuBP,EAA4BQ,EAAYN,GAGzEl1B,KAAK41B,2BACL,MAED,IAAK,gBACA9C,GAAe,EAAAviB,WAAW4hB,UAC7B0C,EAAWv5B,KAAK,QAAQs5B,qBAEzB,MACD,QAUqB,QAApB,EAAA50B,KAAKg0B,uBAAe,SAAE6B,oBACrBf,EACA3sB,EACAM,IAyBJusB,EAA2BpzB,QAAQ,CAACk0B,EAAahD,KAChDrqB,EAA8ByE,gBAAgB4nB,EAAcgB,EAAahD,KAE1EmC,EAA0BrzB,QAAQ,CAACizB,EAAY/B,KAC9CrqB,EAA8BwE,eAAe6nB,EAAcD,EAAY/B,KAMxErqB,EAA8BwE,eAAe6nB,EAAcD,IA/Z7D,6B,iGCtBA,MAAa90B,EAIZ,YAAsB0D,EAAoBsyB,GAApB,KAAAtyB,OAHd,KAAAuyB,WAA4B,GAInCh2B,KAAKi2B,WAAa,IAAIF,EAAgB/1B,KAAKyD,MAG5C,gBACC,OAAOzD,KAAKi2B,WAGb,oBACC,OAAO,IAAIhO,QAAQ,CAACC,EAASC,KAC5BnoB,KAAKg2B,WAAW16B,KAAK4sB,GACrBloB,KAAKyD,KAAKL,MAAMyY,gBAAgBsO,SAASnqB,KAAKyD,MAM9CyyB,WAAWl2B,KAAKm2B,0BAA0Bt4B,KAAKmC,MAAO,KAKxD,4B,QACC,GAA2B,QAA3B,EAAmB,QAAnB,EAAIA,KAAKyD,KAAKvD,aAAK,eAAEupB,cAAM,eAAEhpB,OAAQ,CACpC,MAAMgH,EAAc,EACpBzH,KAAKo2B,wBAAwB3uB,GAAa4uB,KAAMt0B,IAC/C/B,KAAKyD,KAAK4W,qBACNtY,EACH/B,KAAKs2B,kBAAkBv0B,GAEvB/B,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,wBAIzBP,KAAKyD,KAAK6W,UACbta,KAAKyD,KAAK3D,qBAAqBiC,UAAUw0B,eACzCv2B,KAAKyD,KAAKoY,gBAAgB2a,aAE1Bx2B,KAAKs2B,oBAKF,wBAAwB7uB,G,mDAC7B,MAAMK,EAAa9H,KAAKyD,KAAK5C,GAAG6G,OAAO8Q,MAAM/Q,GAC7C,GAAIK,EAAY,CAGf,OAFAA,EAAW2uB,mBAAmB3W,KAAK9f,KAAKyD,KAAKgzB,0BACrB3uB,EAAWhI,qBAAqBmY,oBAKxD,OAFAjY,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,SAASkH,cACpCzH,KAAKs2B,oBACE,QAGT,kBAAkBv0B,GAKjB,IAAIwY,EACJ,MAAMmc,EAAY,GAClB,KAAQnc,EAAWva,KAAKg2B,WAAW1N,OAClCoO,EAAUp7B,KAAKif,GAQhB,IALKxY,IACJA,EAAY/B,KAAKyD,KAAK3D,qBAAqBiC,UAAUgB,SAI9CwX,EAAWmc,EAAUpO,OAC5B/N,EAASxY,GAEV/B,KAAKyD,KAAKL,MAAMyY,gBAAgB4J,YAAYzlB,KAAKyD,OA9EnD,6BAkFA,wCAA6C1D,K,8ECvF7C,aAEMwsB,EAAQ,CAACoK,QADf,KACeA,QAASvjB,QAAA,EAAAA,SAElBwjB,EAAsC,CAC3CC,EAAG,WACHC,EAAG,SACHC,GAAI,SAGL,sBAaC,kBAAkBl6B,GACjB,OAAO+5B,EAAgB/5B,IAASA,EAGjC,+BAA+B0F,GAC9B,MAAMy0B,EAAqC,GAC3C,IAAIC,EAAgB,EACpB,MAAMrzB,EAAU,GACVkB,EAAS,GAEf,IAAIhK,EAAI,EACR,KAAOA,EAAIyH,EAAMvH,QAAQ,CAExB,MAAMsC,EAAQiF,EAAMzH,GACdsH,EAAQ40B,EAAe15B,GAChB,MAAT8E,EACHwB,EAAQtI,KAAK8G,IAEb0C,EAAOxJ,KAAKgC,GACZsG,EAAQtI,KAAK27B,GACbD,EAAe15B,GAAS25B,EACxBA,GAAiB,GAGlBn8B,IAGD,MAAO,CACN8I,UACAkB,UAIF,qBAAqB0F,GACpB,OAAQA,GACP,KAAK,EACJ,OAAO,EACR,KAAK,EACJ,OAAO,IAAI+hB,EAAMoK,QAAQ,EAAG,GAC7B,KAAK,EACJ,OAAO,IAAIpK,EAAMnZ,QAAQ,EAAG,EAAG,GAChC,QACC,KAAM,QAAQ5I,4B,8ECvDlB,MAAsB0sB,EAKrB,YAAsBpxB,GAAA,KAAAA,QAKtB,SAASrC,GACRzD,KAAK8F,MAAQrC,EAEd,OACC,OAAOzD,KAAK8F,MAGb,QACC,IAAIsf,EACJ,MAAM+R,EAAmB,IAAUn3B,KAAK+T,YAKxC,OAJAojB,EAAiBtO,SAAS7oB,KAAKyD,QACG,OAA7B2hB,EAAUplB,KAAKolB,YACnB+R,EAAiB9R,YAAYD,GAEvB+R,EAER,gBAGA,YAAY/R,GAEXplB,KAAKu2B,eACLv2B,KAAKo3B,SAAWhS,EAEhBplB,KAAKq3B,oBAEN,cACC,OAAwB,MAAjBr3B,KAAKo3B,SAUb,UACC,OAAOp3B,KAAKo3B,SAEH,qBACH,eACN,OAAOp3B,KAAKo3B,SAEN,sBACN,OAAOp3B,KAAKo3B,SAWb,QACC,MAAO,IAnET,mBAuEA,8BAAmCF,K,8ECjFnC,eACA,OACA,OACA,QACA,SAAgBI,EAA+CjZ,GAC9D,OAAO,cAAoBA,EAApB,c,oBACN,KAAAkZ,SAAW,EAAAhZ,YAAY3f,QAAQ,KAFjC,wBAM8B,EAAAqd,SAGKqb,EAAoB,EAAAxuB,kBACzB,EAAAsS,aAM9B,MAAaoc,UAA2B,EAAA7H,eACvC,cAAclsB,GACb,MAAMg0B,EAAeh0B,EAAKmc,GAAG2X,SACzBE,GAAgBh0B,EAAKN,SAASo0B,WACjC9zB,EAAKN,SAASo0B,SAAWE,EACzBh0B,EAAKN,SAAS6sB,aAAc,IAL/B,wB,2FCpBA,OAEA,SACA,QACA,SAQA,OACA,SAAgB0H,EAAiDrZ,GAChE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAsZ,QAAU,EAAApZ,YAAY3f,QAAQ,EAAG,EAAAg5B,oBAAoBC,IACrD,KAAA7yB,IAAM,EAAAuZ,YAAYtf,cACjB,EAAA64B,YAAYC,kBAAkBC,GAC9B,EAAAC,oBAAoBJ,EAAsB,cAL7C,0BASiC,EAAA5b,SAIIyb,EAAsB,EAAA5uB,kBAClB,EAAAsS,aAKzC,MAAayc,UAA6B,EAAAK,yBACzC,YAAYz0B,EAAyB00B,GACpClyB,MAAMxC,EAAM00B,GAEb,kBACCn4B,KAAKo4B,UAAUp4B,KAAKyD,KAAKxF,EAAE05B,QAAS33B,KAAKyD,KAAKxF,EAAE+G,KAE3C,S,mDACLhF,KAAKq4B,QAAQr4B,KAAKyD,KAAKN,SAAU,MAAOnD,KAAKyD,KAAKxF,EAAE05B,QAAS33B,KAAKyD,KAAKxF,EAAE+G,QAE1E,cAAoBvB,G,mDACnBA,EAAK60B,uBAAuBC,aAX9B,0B,2FChCA,OAEA,SACA,QACA,SAQA,OAGA,SAAgBC,EAAsDna,GACrE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAoa,cAAgB,EAAAla,YAAY3f,QAAQ,EAAG,EAAAg5B,oBAAoBc,IAC3D,KAAAC,UAAY,EAAApa,YAAYtf,cACvB,EAAA64B,YAAYC,kBAAkBC,GAC9B,EAAAC,oBAAoBS,EAA2B,oBALlD,+BASmC,EAAAzc,SAIOuc,EAA2B,EAAA1vB,kBACvB,EAAAsS,aAK9C,MAAasd,UAAkC,EAAAR,yBAC9C,YAAYz0B,EAA8B00B,GACzClyB,MAAMxC,EAAM00B,GAEb,kBACCn4B,KAAKo4B,UAAUp4B,KAAKyD,KAAKxF,EAAEw6B,cAAez4B,KAAKyD,KAAKxF,EAAE06B,WAEjD,S,mDACL34B,KAAKq4B,QAAQr4B,KAAKyD,KAAKN,SAAU,WAAYnD,KAAKyD,KAAKxF,EAAEw6B,cAAez4B,KAAKyD,KAAKxF,EAAE06B,cAErF,cAAoBl1B,G,mDACnBA,EAAKm1B,6BAA6BL,aAXpC,+B,6FClCA,E,KAAA,wBAGA,OACA,QACA,SAGA,QACA,SAGA,QAGA,SAMA,MAAar5B,UAAkB,EAAAonB,WAA/B,c,oBAwDS,KAAAuS,0CAA4C74B,KAAK84B,oCAAoCj7B,KAAKmC,MAvDlG,cACC,OAAO,EAAAtB,UAAUU,KASlB,+BACC,OAAIY,KAAK4S,yBAAyB,EAAAmmB,UAC1B/4B,KAAK4S,cAAcyT,UAEnBrmB,KAAK4S,cAGJ,iBAAiB4U,GAC1B,OAAIA,aAAqB,EAAAuR,UACjBvR,EAAUzkB,QAEV,EAAAg2B,UAAUC,UAAUxR,GAAWnB,UAGxC,2BACC,OAAIrmB,KAAKqnB,sBAAsB,EAAA0R,UACvB/4B,KAAKqnB,WAAWhB,UAEhB,EAAA0S,UAAUC,UAAUh5B,KAAKqnB,YAAYhB,UAG9C,uBACC,OAAOrmB,KAAK1C,MAAM+oB,UAEnB,2BACC4S,EACAC,GAEA,OAAID,aAAsB,EAAAF,UACrBG,aAAsB,EAAAH,UAClBE,EAAWE,SAASD,GAEpBD,EAAWG,cAAcF,GAG7BA,aAAsB,EAAAH,UAClBG,EAAWE,cAAcH,GAEzB,EAAAF,UAAUM,eAAeJ,EAAYC,GAI/C,wBAAwBjS,EAA0CC,GACjE,OAAOD,EAAKkS,SAASjS,GAGtB,mBACClnB,KAAKwa,oBAAoB,sCAAuCxa,KAAK64B,2CAKtE,iBACC,OAAI74B,KAAK4S,yBAAyB,EAAAmmB,UAC1B/4B,KAAK1C,MAAM67B,SAASn5B,KAAK4S,eAEzB5S,KAAK1C,MAAM87B,cAAcp5B,KAAK4S,eAG7B,oBACL5S,KAAKqnB,sBAAsB,EAAA0R,UACzB/4B,KAAK+mB,OAGT/mB,KAAK+mB,OAAOjH,KAAK9f,KAAKqnB,YAFtBrnB,KAAK+mB,OAAS/mB,KAAKqnB,WAKfrnB,KAAK+mB,OAGT/mB,KAAK+mB,OAAOiS,UAAUh5B,KAAKqnB,YAF3BrnB,KAAK+mB,OAAS,EAAAgS,UAAUC,UAAUh5B,KAAKqnB,YAMzCrnB,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWyR,eA4BtC,iBACC,OAAO,EAGR,sCACCt5B,KAAKu5B,uBAAoBh1B,EACzBvE,KAAKw5B,mBAAgBj1B,EAEtB,eACC,OAAQvE,KAAKw5B,cAAgBx5B,KAAKw5B,eAAiBx5B,KAAKy5B,uBAEzD,uBACC,MAIMj/B,EAAO,IAAIk/B,WAAW,MAE5B,IAAIC,EAAS,EACTvlB,EAAW,EACX9W,EAAQ,EACZ,IAAK,IAAIxC,EAAI,EAAGA,EANH8+B,KAMa9+B,IACzB6+B,EAAa,EAAJ7+B,EACTsZ,EAAWtZ,EAXE,KAYbwC,EAAQ0C,KAAK65B,kBAAkBzlB,GAC/B5Z,EAAKm/B,GAAkB,IAARr8B,EAKhB,MAAMw8B,EAAU,IAAI,EAAAC,YAAYv/B,EAlBlB,KACC,EAiBsC,EAAAw/B,WAMrD,OADAF,EAAQ9J,aAAc,EACf8J,EAGR,0BAA0BG,EAAyBn1B,GAClD,MACMo1B,EAAsB,IAAIC,aADX,GAErB,OAAO,IAAI,EAAAC,iBAAiBH,EAAWn1B,EAFlB,EAEwCo1B,GAE9D,cACC,OAAQl6B,KAAKu5B,kBAAoBv5B,KAAKu5B,mBAAqBv5B,KAAKq6B,sBAEjE,sBACC,MAAM7lB,EAASxU,KAAK1C,MAAMkX,OACpB8lB,EAAgB,UAAc9lB,EAASG,GAAUA,EAAMP,UACvD6lB,EAAY,IAAIE,aAAaG,EAAct/B,QAC3C8J,EAAS,IAAIq1B,aAAaG,EAAct/B,QAE9C,IAAIF,EAAI,EACR,IAAK,IAAIy/B,KAAgBD,EACxBL,EAAUn/B,GAAKy/B,EAAanmB,SAC5BtP,EAAOhK,GAAKy/B,EAAaj9B,MACzBxC,IAGD,OAAOoE,EAAUs7B,mBAAmBP,EAAWn1B,GAGhD,kBAAkBsP,GACjB,OAAiBpU,KAAKy6B,cAAcC,SAAStmB,GAAU,IAjLzD,cAQQ,EAAAjV,cAAgB,IAAI,EAAA45B,UAAU,EAAA4B,kBAAkBC,OAAQ,CAAC,IAAI,EAAAC,UAAU,EAAG,GAAI,IAAI,EAAAA,UAAU,EAAG,KAC/F,EAAAp2B,mBAAoCvF,EAAUC,cAAcknB,W,8EC9BpE,iBACC,8BAAoCrhB,EAAkBpH,EAAQk9B,GAC7C91B,EAAI+1B,IAAIn9B,GAEvBoH,EAAI9H,IAAIU,GAAMtC,KAAKw/B,GAEnB91B,EAAIzE,IAAI3C,EAAK,CAACk9B,IAGhB,iCAAuC91B,EAAkBpH,EAAQk9B,GAChD91B,EAAI+1B,IAAIn9B,GAEvBoH,EAAI9H,IAAIU,GAAMo9B,QAAQF,GAEtB91B,EAAIzE,IAAI3C,EAAK,CAACk9B,IAGhB,gCAAsC91B,EAAkBpH,EAAQq9B,GAE/D,GADgBj2B,EAAI+1B,IAAIn9B,GACT,CACd,IAAI2E,EAAayC,EAAI9H,IAAIU,GACzB,IAAK,IAAIgS,KAAWqrB,EACnB14B,EAAMjH,KAAKsU,QAGZ5K,EAAIzE,IAAI3C,EAAKq9B,M,8ECzBH,EAAAC,aAAe,CAC3BC,MAAO,SACP7e,QAAS,WACT8e,SAAU,aACVC,OAAQ,UACRC,KAAM,QAEM,EAAAC,aAAe,CAC3BC,MAAO,SACPC,SAAU,WACVH,KAAM,QAEM,EAAAI,eAAiB,CAC7BL,OAAQ,UACRC,KAAM,QAEM,EAAAK,YAAc,CAC1B98B,MAAO,QACP+8B,WAAY,aACZC,SAAU,WACVT,SAAU,WACVU,QAAS,UACTC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,KAAM,OACNC,SAAU,YAEE,EAAAC,aAAe,CAC3BZ,SAAU,WACV94B,KAAM,SACNwG,OAAQ,SACRmzB,KAAM,QACNC,OAAQ,UACRH,SAAU,aAEE,EAAAI,aAAe,CAC3Bf,SAAU,WACVgB,UAAW,YACXv2B,UAAW,aACX21B,SAAU,WACVL,MAAO,SACPF,KAAM,OACNoB,SAAU,YACVC,WAAY,aACZC,OAAQ,UAEI,EAAAC,cAAgB,CAC5BC,KAAM,W,8ECjDP,cACA,SAEA,SAEA,QAEA,QACA,QACA,OAGMn9B,EAAsB,CADL,iEAKvB,IAFA,IACInF,EAAO,IAAIuiC,YADJ,IAEFjiC,EAAI,EAAGA,EAFL,GAEeA,IACzBN,EAAKM,GAAK,MAEX,MAAMkiC,EAAqB,IAAI,EAAAjD,YAAYv/B,EALhC,GAK4C,EAAG,EAAAyiC,gBAAiB,EAAAC,eAE3E,MAAaC,UAAiD,EAAAt9B,UAmB7D,YAAYuD,GACX6C,MAAM7C,EAAO,eAnBd,KAAAtD,qBAAmE,IAAI,EAAAC,yBACtEC,KACA,EAAAo9B,kBAEe,KAAAl9B,MAA0B,IAAI,EAAA0pB,iBAAiB5pB,MAO/D,sBACC,OAAO,EAAAI,YAAYi9B,IAEpB,+BACC,OAAO19B,EAOR,uBAOCK,KAAKa,GAAGC,QAAQC,qBAGjB,cAAclE,GACb,OAAOoJ,MAAMoB,cAAcxK,GAG5B,YAAYi9B,GAEXA,EAAQj9B,KAAOmD,KAAKqI,YACpBrI,KAAKmB,cAAc24B,GAEpB,gBACC95B,KAAKmB,cAAc67B,IA3CrB,iBA4FA,iCAAsCG,K,2FCjHtC,4BACA,4BACA,4BACA,OACA,QAIA,SAEA,SAyBA,MAAaG,UAAgC,EAAAz9B,UAC5C,YAA+CtB,GAC9C,OAAO0H,MAAMuf,YAAYjnB,GAE1B,WACC,OAAO0H,MAAMyf,WAEd,cAAiDnnB,GAChD,OAAO0H,MAAM2f,cAAcrnB,IAR7B,4BAkBA,8BAWC,YAAoBkF,EAA+BgtB,GAA/B,KAAAhtB,OATZ,KAAA85B,iBAAsD,IAAI,EAAAC,uBAC1D,KAAAC,mBAA6B,EAK7B,KAAAC,qBAAsE,IAAIrN,IAKjFrwB,KAAK29B,WAAa,IAAIlN,EAAgBzwB,KAAKyD,MA+B5C,8BAA8BuwB,IACVh0B,KAAKu9B,iBAAmBv9B,KAAKu9B,iBAAiB7tB,KAAO,QACzDskB,EAAkBA,EAAgBtkB,KAAO,QAGvD1P,KAAKu9B,iBAAmBvJ,EACxBh0B,KAAKwH,qCACLxH,KAAK29B,WAAWC,iBAGlB,gBACC,OAAO59B,KAAK29B,WAKb,sBACC,OAAO39B,KAAKu9B,iBAOb,kBAAkBM,GACjB79B,KAAK29B,WAAWG,kBAAkBD,GAEnC,mBAAmB/I,GAClB90B,KAAK29B,WAAWI,mBAAmBjJ,GAEpC,0BACC,OAAO90B,KAAK29B,WAAWK,0BAGxB,YACC,MAAMC,EAAUj+B,KAAKyD,KAAK+hB,YAAY,WAChC0Y,EAASl+B,KAAKyD,KAAK+hB,YAAY,UAErCyY,EAAQh3B,QAAQk3B,aAAa,IAAI,EAAAxH,SAAS,IAAK,IAC/CuH,EAAOj3B,QAAQk3B,aAAa,IAAI,EAAAxH,QAAQ,IAAK,IAkB9C,yBAAyByH,GAAY,GACpCp+B,KAAKy9B,kBAAoBW,EAE1B,mCAAmCC,GAClCr+B,KAAKs+B,2BACLt+B,KAAKyD,KAAK0W,UAAUkkB,GAErB,mBACC,OAAOr+B,KAAKy9B,kBAgBP,e,mDAKLz9B,KAAKu+B,0BACLv+B,KAAKs+B,0BAAyB,MA0HzB,wB,mDACL,GAAIt+B,KAAK29B,WACR,IAAK,IAAIa,KAAgBx+B,KAAK29B,WAAWc,sBAClCD,EAAaE,kBAAkB1+B,KAAKyD,SA4C7C,0BACC,MAAMk7B,EAAsC3+B,KAAKyD,KAAK+E,OAAOo2B,YACvDH,EAAgBz+B,KAAK29B,WAAWc,gBAChCI,EAAwBJ,EAAcz5B,IAAKrI,GAAMA,EAAEE,MAEnDiiC,EAA2B,UAAkBD,EAAuBF,GACpEI,EAA8B,UAAkBJ,EAA2BE,GAE3EG,EAA6C,GAG7CC,EAAsBj/B,KAAKyD,KAAK+E,OAAO02B,MACvCC,EAAwC,UAC7CL,EACAG,GAED,GAAIE,EAAsCnkC,OAAS,EAAG,CACrD,MAAMokC,EAAgB,GAAGp/B,KAAKyD,KAAK4E,uDAAuD82B,EAAsCj6B,KAC/H,kCAED7B,QAAQiE,KAAK83B,GACbp/B,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI6+B,GAG5BL,EAA4Bn9B,QAAS2oB,IAGpC,MAAM/S,EAAQxX,KAAKyD,KAAK+E,OAAOtL,IAAIqtB,GACnC,GAAI/S,EAAO,CACV,MAAM6nB,EAAiB,EAAAC,qBAAqBC,eAAe/nB,GAC3D,GAAI6nB,EAAeG,SAAU,CAC5B,MAAMC,EAAcJ,EAAe7kC,OACnCwF,KAAK09B,qBAAqBn9B,IAAIiX,EAAM3a,KAAM4iC,IAI5CT,EAAsBU,gBAAkBV,EAAsBU,iBAAmB,GACjFV,EAAsBU,gBAAgBpkC,KAAKivB,KAI5C,IAAK,IAAIiU,KAAgBC,EACxB,GAAIK,EAAyBx1B,QAAQk1B,EAAa3hC,OAAS,EAAG,CAK7D,MAAM4B,EAAU,UAAa+/B,EAAamB,cAAe,CAACC,OAAO,EAAMC,MAAM,IAQ7Eb,EAAsBc,OAASd,EAAsBc,QAAU,GAC/Dd,EAAsBc,OAAOxkC,KAAK,CACjCuB,KAAM2hC,EAAa3hC,KACnB0B,KAAMigC,EAAajgC,KACnBC,WAAYggC,EAAa5rB,cACzBnU,QAASA,IAmBZuB,KAAKyD,KAAK+E,OAAOu3B,cAAcf,M,8EChbjC,eAEA,SAIA,QAGA,SACA,QAIMgB,EAAsD,CAC3D5rB,SAAU,oBAGX,MAAaopB,UAA+B,EAAAyC,sBAoB3C,oBACCnL,EACA3sB,EACAM,G,MAOA,MAAMmrB,EAAmBkB,EAAaj0B,GAAGC,QAAQo/B,uCAAuC/3B,GACxF,IAAKyrB,EACJ,OAGD,MAAMgB,EAAWE,EAAa1sB,YAAYD,GACpC2rB,EAAUF,EAAiBr1B,KAC3B22B,EAAa,IAAI,EAAAiL,oBAAoBrL,EAAchB,EAASc,GAGlEnsB,EAA8ByE,gBAAgB4nB,EAAc,CAACI,IAE7D,MAAMlE,EAAsC,QAA7B,EAAG8D,EAAavxB,qBAAa,eAAEgE,qBAAqBypB,UACnE,IAAKA,EACJ,OAED,MAAMyD,EAAgBzD,EAAUyD,cAAchsB,EAA8B8rB,qBAC5E,IAAKE,EACJ,OAED,MAAMM,EAAeN,EAAcM,eAE7BhoB,EAAY,GAAG6nB,OAAcd,KAAW3rB,KAC9C,IAAK,IAAIqtB,KAAcT,EAGtBtsB,EAA8ByE,gBAAgB4nB,EAAc,CAACI,GAAaM,GAC1E/sB,EAA8BwE,eAAe6nB,EAAc,CAAC/nB,GAAYyoB,GAE9C,GAAvBT,EAAa/5B,QAEhByN,EAA8BwE,eAAe6nB,EAAc,CAAC/nB,IAI9D,+BAA+BqzB,GAC9B,OAAOJ,EAAgCI,GAExC,wBAAwBA,GACvB,OAAO5C,EAAuBtJ,wBAAwBkM,GAKvD,eACC38B,EACAqwB,EACAzhB,EACA5J,GAEA,OAAO+0B,EAAuBvJ,eAAexwB,EAAMqwB,EAASzhB,EAAa5J,GAG1E,sBACChF,EACAqwB,EACAzhB,EACA5J,G,MAEI+0B,EAAuB6C,uBAAuB/2B,QAAQ+I,GAAe,GACxE5J,EAA8ByE,gBAC7BzJ,EACA,CAAC,IAAI,EAAA68B,sBAAsB78B,EAAMqwB,EAASzhB,IAC1C,EAAA9B,WAAWzF,QAcb,MAAMgoB,EAAcrqB,EAA8B8rB,oBAClD,OAAQzB,GACP,KAAK,EAAAviB,WAAWzF,OACf,OAAOuH,EAER,KAAK,EAAA9B,WAAW4hB,SAAU,CAEzB,KAAM1uB,aAAgB,EAAA88B,iBACrB,OAGD,MAAM3L,EAAW,WAAanxB,EAAK2E,YAAY3E,EAAK0E,aAC9Cq4B,EAAqB,IAAI,EAAAL,oBAAoB18B,EAAMqwB,EAASc,GAE5DI,EAAqE,IAAI3E,IAE/E2E,EAA2Bz0B,IAAI,EAAAgQ,WAAW4hB,SAAU,IAKpD,MAAM8C,EAAuD,IAAI5E,IAEjE4E,EAA0B10B,IAAI,EAAAgQ,WAAW4hB,SAAU,IACnD,EAAAmD,SAASC,uBAAuBP,EAA4BlC,EAAa0N,GAEzE,MAAMC,EAAwB,GAAG7L,OAAcd,KAAWzhB,KAEpDoiB,EAAkC,QAArB,EAAGhxB,EAAKF,qBAAa,eAAEgE,qBAAqBypB,UAAUyD,cAAc3B,GACvF,GAAI2B,EAAe,CAClB,MAAMM,EAAeN,EAAcM,eACnC,IAAK,IAAIS,KAAcT,EACtB,EAAAO,SAASC,uBAAuBP,EAA4BQ,EAAYgL,GACxE,EAAAlL,SAASC,uBAAuBN,EAA2BO,EAAYiL,GAExEzL,EAA2BpzB,QAAQ,CAACk0B,EAAahD,KAChDrqB,EAA8ByE,gBAAgBzJ,EAAMqyB,EAAahD,KAElEmC,EAA0BrzB,QAAQ,CAACizB,EAAY/B,KAC9CrqB,EAA8BwE,eAAexJ,EAAMoxB,EAAY/B,KAIjE,OAAO8B,IA4BV,sBACCnxB,EACAqwB,EACAzhB,EACA5J,GAEA,OAAO+0B,EAAuBvJ,eAAexwB,EAAMqwB,EAASzhB,EAAa5J,IAxL3E,2BACQ,EAAA43B,uBAAyB,CAC/B,WACA,QACA,SACA,KACA,MACA,eACA,eACA,eACA,eACA,YACA,cAGM,EAAAK,QAAU,CAChB/S,GACC,kO,8ECnCH,cAGA,QAMA,gCAgBC,YAAoBlqB,GAAA,KAAAA,OAfZ,KAAAk9B,qBAAwCv+B,GACxC,KAAKA,IAEL,KAAAw+B,sBAAyCx+B,GAChC,GAATA,EAAa,MAAQ,MAAMA,IAG3B,KAAAy+B,+BAAkE,KACzE,MAAMtiC,EAAOyB,KAAKqM,+BAAiC,EAAAxI,oBAAoB/E,MACvE,MAAO,CAACP,EAAMA,IAEP,KAAAuiC,gCAAmE,IACnE,CAAC9gC,KAAK6gC,iCAAiC,IAyBvC,KAAAE,oCAAsC/gC,KAAKghC,6BAA6BnjC,KAAKmC,MAC7E,KAAA8iB,cAAwB,EArBhC,wBAAwBme,GACvBjhC,KAAK2gC,qBAAuBM,EAE7B,yBAAyBA,GACxBjhC,KAAK4gC,sBAAwBK,EAK9B,kCAAkCA,GACjCjhC,KAAK6gC,+BAAiCI,EAEvC,mCAAmCA,GAClCjhC,KAAK8gC,gCAAkCG,EAGxC,YAAY7+B,GACX,OAAOpC,KAAK4gC,sBAAsBx+B,GAKnC,kBACKpC,KAAK8iB,aACRzf,QAAQiE,KAAK,sBAAuBtH,KAAKyD,OAG1CzD,KAAK8iB,cAAe,EAEpB9iB,KAAKyD,KAAK5C,GAAG6G,OAAOqX,sBACnB,gCACA/e,KAAK+gC,qCAEN/gC,KAAKyD,KAAK+E,OAAO04B,uBAChB,gCACAlhC,KAAK+gC,qCAEN/gC,KAAKyD,KAAK+E,OAAO24B,4BAA4BnhC,KAAK+gC,qCAClD/gC,KAAKyD,KAAK+W,oBAAoB,gCAAiCxa,KAAK+gC,sCAGrE,6BAA6BK,GACvBphC,KAAKyD,KAAK49B,UAAUC,oBAAuBthC,KAAKuhC,8BACpDvhC,KAAKwhC,0BACLxhC,KAAKyD,KAAK4W,qBACVra,KAAKyhC,qCAIC,oCACP,IAAK,IAAIC,KAAa1hC,KAAKyD,KAAKk+B,uBAAwB,CACvD,MAAMC,EAAUF,EACZE,EAAQ91B,2BACX81B,EAAQ91B,0BAA0Bk1B,6BAA6BhhC,KAAKyD,OAWvE,0BACC,MACMo+B,EAAuB7hC,KAAK6gC,iCAC5BiB,EAAwB9hC,KAAK8gC,kCAE7BiB,EAA0BF,EAAqB78B,IAAI,CAACzG,EAA2BzD,IAC7E,IAAI,EAAAknC,0BAA0BhiC,KAAK2gC,qBAAqB7lC,GAAIyD,IAE9D0jC,EAAgBH,EAAsB98B,IAAI,CAACzG,EAA2BzD,IACpE,IAAI,EAAAknC,0BAA0BhiC,KAAK4gC,sBAAsB9lC,GAAIyD,IAGrEyB,KAAKyD,KAAK5C,GAAG6G,OAAOw6B,kCAAkCH,GACtD/hC,KAAKyD,KAAK5C,GAAGC,QAAQqG,mCAAmC86B,GAZtC,GAalBjiC,KAAKyD,KAAKmD,wBAAwB23B,0BAGzB,4BACT,MAAM4D,EAAsBniC,KAAKyD,KAAK5C,GAAG6G,OAAOmF,8BAA8B7H,IAAKrI,GAAMA,EAAE4B,MACrF6jC,EAAuBpiC,KAAKyD,KAAK5C,GAAGC,QAAQmH,+BAA+BjD,IAAKrI,GAAMA,EAAE4B,MACxFsjC,EAAuB7hC,KAAK6gC,iCAC5BiB,EAAwB9hC,KAAK8gC,kCAEnC,GAAIe,EAAqB7mC,QAAUmnC,EAAoBnnC,OACtD,OAAO,EAER,GAAI8mC,EAAsB9mC,QAAUonC,EAAqBpnC,OACxD,OAAO,EAGR,IAAK,IAAIF,EAAI,EAAGA,EAAIqnC,EAAoBnnC,OAAQF,IAC/C,GAAIqnC,EAAoBrnC,IAAM+mC,EAAqB/mC,GAClD,OAAO,EAGT,IAAK,IAAIA,EAAI,EAAGA,EAAIsnC,EAAqBpnC,OAAQF,IAChD,GAAIsnC,EAAqBtnC,IAAMgnC,EAAsBhnC,GACpD,OAAO,EAIT,OAAO,EAUR,8BACC,MAAMiM,EAAc/G,KAAKyD,KAAK5C,GAAGkG,YAAY2F,oBAC7C,GAAI3F,EAAa,CAChB,MAAMs7B,EAAmBt7B,EAAY,GACrC,GAAIs7B,EACH,OAAOriC,KAAKsiC,gCAAgCD,IAI/C,gCAAgCz6B,GAC/B,MAAMG,EAAWH,EAAWG,SACtBG,EAAeN,EAAWM,aAEhC,OADmCH,EAASlH,GAAGC,QAAQmH,+BAA+BC,GACpD3J,Q,2FC3JpC,SACA,OAwGA,SAEA,SACA,QACA,QAKMgkC,EAAW,CAChB,CAACC,UAAA,EAAAA,WACD,CAACC,sBAAA,EAAAA,uBACD,CAACC,sBAAA,EAAAA,uBACD,CAACC,iCAAA,EAAAA,kCACD,CAACC,iCAAA,EAAAA,kCACD,CAACC,2BAAA,EAAAA,4BACD,CAACC,wBAAA,EAAAA,yBACD,CAACC,wBAAA,EAAAA,0BAGIC,EAAkC,CAAC,CAACC,oBAAA,EAAAA,qBAAsB,CAACC,eAAA,EAAAA,gBAAiB,CAACC,uBAAA,EAAAA,yBAE7EC,EAAoC,CAAC,CAACC,aAAA,EAAAA,cAAe,CAACC,cAAA,EAAAA,gBACtDC,EAAoC,CACzC,CAACD,cAAA,EAAAA,eACD,CAACE,2BAAA,EAAAA,4BACD,CAACC,0BAAA,EAAAA,2BACD,CAACJ,aAAA,EAAAA,cACD,CAACK,0BAAA,EAAAA,2BACD,CAACC,yBAAA,EAAAA,2BAiDIC,EAAkD,CAAC,UAAW,QAAS,QAAS,YAAa,aAC7FC,EAAgC,CACrCC,QAAS,UACTC,MAAO,SACPC,MAAO,SACPC,UAAW,aACXC,UAAW,cAQZ,OACA,MAAMC,UAA4B,EAAAr7B,iBAAlC,c,oBAEC,KAAAs7B,IAAM,EAAA7lB,YAAYjf,OAAO,EAAA+kC,kBAAkBC,cAAe,CACzDC,eAAgB,CAACC,UAAW,aAE7B,KAAAC,OAAS,EAAAlmB,YAAY5f,OAAO,KAAM,CACjC4b,SAAU,CAAC9W,EAAoB+T,KAC9BsgB,EAAY4M,sBAAsBjhC,EAAqB+T,MAGzD,KAAAssB,QAAU,EAAAvlB,YAAYvf,QAAQ,EAAAwjC,UAAW,CACxCmC,KAAM,CACLC,QAASrC,EAASv9B,IAAKtI,IACf,CACNG,KAAM5B,OAAO4W,KAAKnV,GAAG,GACrBY,MAAOrC,OAAO6J,OAAOpI,GAAG,SAK5B,KAAAmoC,OAAS,EAAAtmB,YAAYvf,QAAQ/D,OAAO6J,OAAOk+B,EAAU,IAAI,GAAI,CAC5D2B,KAAM,CAELC,QAAS5B,EAAUh+B,IAAKtI,IAChB,CACNG,KAAM5B,OAAO4W,KAAKnV,GAAG,GACrBY,MAAOrC,OAAO6J,OAAOpI,GAAG,SAK5B,KAAAooC,OAAS,EAAAvmB,YAAYvf,QAAQ/D,OAAO6J,OAAOk+B,EAAU,IAAI,GAAI,CAC5D2B,KAAM,CAELC,QAAS5B,EAAUh+B,IAAKtI,IAChB,CACNG,KAAM5B,OAAO4W,KAAKnV,GAAG,GACrBY,MAAOrC,OAAO6J,OAAOpI,GAAG,SAK5B,KAAAqoC,WAAa,EAAAxmB,YAAYvf,QAAQ/D,OAAO6J,OAAOs+B,EAAY,IAAI,GAAI,CAClEuB,KAAM,CAELC,QAASxB,EAAYp+B,IAAKtI,IAClB,CACNG,KAAM5B,OAAO4W,KAAKnV,GAAG,GACrBY,MAAOrC,OAAO6J,OAAOpI,GAAG,SAK5B,KAAAsoC,WAAa,EAAAzmB,YAAYvf,QAAQ/D,OAAO6J,OAAOy+B,EAAY,IAAI,GAAI,CAClEoB,KAAM,CAELC,QAASrB,EAAYv+B,IAAKtI,IAClB,CACNG,KAAM5B,OAAO4W,KAAKnV,GAAG,GACrBY,MAAOrC,OAAO6J,OAAOpI,GAAG,UAO7B,MAAMqM,EAAe,IAAIo7B,EAEzB,MAAarM,UAAoB,EAAAqF,aAAjC,c,oBACC,KAAAn0B,cAAgBD,EAMhB,cACC,MAAO,OA2FF,O,mDACD/I,KAAKilC,qBAAqBjlC,KAAK4f,GAAGwkB,WAC/BpkC,KAAKklC,uBAELllC,KAAKmlC,oBAIL,qBAAqBf,GAC5B,OAAO,EAGM,iB,mDACb,MAAMtK,QAAgB95B,KAAKolC,cAAcplC,KAAK4f,GAAGwkB,KAE7CtK,GACH95B,KAAKqlC,uBAAuBvL,GAC5B95B,KAAKslC,YAAYxL,IAEjB95B,KAAKulC,mBAIO,iB,mDACb,GAAIvlC,KAAKwlC,qBAAsB,CAC9B,MAAM1L,QAAgB95B,KAAKolC,cAAcplC,KAAK4f,GAAGwkB,KAK7CtK,GACH95B,KAAKylC,oCAAoC3L,GAE1C95B,KAAK0lC,oBAAsB1lC,KAAK4f,GAAGwkB,IAEnCpkC,KAAK2lC,0BAED7L,GACH95B,KAAKqlC,uBAAuBvL,GAC5B95B,KAAKslC,YAAYxL,IAEjB95B,KAAK6b,gBAAgByJ,eAaxB,eACC,OAAOtlB,KAAK4f,GAAGwkB,IAGR,uBAAuBtK,GAE9B,IAAK,IAAI8L,KAAkBhC,EAAqB,CAC/C,MAAMrZ,EAAasZ,EAAe+B,GAC5BC,EAAc7lC,KAAKwI,OAAOs9B,MAAMvb,GAGnB,MAAfsb,GAAuB/L,GACtBA,EAAQ8L,IAAmBC,IAC9B/L,EAAQ8L,GAAkBC,EAC1B/L,EAAQ9J,aAAc,IAK1B,6BAA6BvsB,EAAmB+T,GAC/C/T,EAAKsiC,wBAEE,wBACP/lC,KAAK0lC,yBAAsBnhC,EAG3BvE,KAAK/B,EAAEmmC,IAAIhqB,uBAIJ,0BACHpa,KAAKgmC,QACJhmC,KAAKwI,OAAOuyB,IAAI,gBACnB/6B,KAAKgmC,OAAOC,YAAcjmC,KAAKwI,OAAOs9B,MAAM,eAKvC,oCAAoChM,GAC3C,GAAIA,EAAS,CAEZ,GADiBA,EAAQ/lB,aAAe,EAAAmyB,cAGvC,GADAlmC,KAAKgmC,OAASlM,EAAQqM,MAClBnmC,KAAKgmC,SACHhmC,KAAKwI,OAAO49B,UAAUtO,EAAYuO,uBAAwB,CAC9D,MAAMC,EAAWtmC,KAAKgmC,OAAOM,SAE7BtmC,KAAKklB,UAAU,EAAAxmB,UAAUI,MAAOg5B,EAAYuO,sBAAuB,KAAM,CACxEzG,OAAO,EACPC,MAAM,EACN0G,MAAO,CAAC,EAAGD,GACXE,aAAc,EAAC,GAAM,KAGtBxmC,KAAK4nB,KAAK,EAAArQ,UAAUkvB,sBAItBzmC,KAAK0mC,4BAGN1mC,KAAK0mC,uBAIC,uBACH1mC,KAAKwI,OAAO49B,UAAUtO,EAAYuO,wBACrCrmC,KAAKwI,OAAOu3B,cAAc,CAACL,gBAAiB,CAAC5H,EAAYuO,yBAKnD,qBACP,OAAOrmC,KAAK0lC,qBAAuB1lC,KAAK4f,GAAGwkB,IAG9B,cAAcA,G,mDAC3B,IAAItK,EAAyC,KAC7C,MAAMtiB,EAAQxX,KAAKwI,OAAOtL,IAAI,OAC9B,GAAIknC,GAAO5sB,EAAO,CACjBxX,KAAK2mC,gBAAkB3mC,KAAK2mC,iBAAmB,IAAI,EAAAtC,kBAAkBrkC,KAAMwX,GAE3E,IACCsiB,QAAgB95B,KAAK2mC,gBAAgBC,4BAA4BxC,GAChE,MAAO50B,IAMJsqB,GACJ95B,KAAK8xB,OAAO9T,MAAMzd,IAAI,2BAA2B6jC,WAMlDpkC,KAAK8xB,OAAO9T,MAAMzd,IAAI,2CAEvB,OAAOu5B,MA5PT,gBAciB,EAAAuM,sBAAwB,aACxB,EAAAtO,kBAAoB,CACnCC,GAAI,eACJ6O,QAAS,iB,2FCzRX,SACA,QACA,QAEA,QAgBA,QAEA,OACA,uCAAuExoB,GACtE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAyoB,WAAa,EAAAvoB,YAAYxf,SACzB,KAAAgoC,eAAiB,EAAAxoB,YAAY3f,QAAQ,GACrC,KAAAooC,aAAe,EAAAzoB,YAAY3f,QAAQ,EAAG,CACrC6wB,WAAY,CAACsX,gBAAgB,KAE9B,KAAAE,iBAAmB,EAAA1oB,YAAY1f,MAAM,CAAC,EAAG,EAAG,GAAI,CAC/C4wB,WAAY,CAACsX,gBAAgB,EAAMC,cAAc,KAElD,KAAAE,oBAAsB,EAAA3oB,YAAYtf,cAAc,GAAI,CACnDwwB,WAAY,CAACsX,gBAAgB,EAAMC,cAAc,GACjDG,eAAgB,CAACC,QAAS,EAAAhnC,YAAYob,KACtC6rB,yBAAyB,IAE1B,KAAAC,iBAAmB,EAAA/oB,YAAYzf,MAAM,EAAG,CACvC2wB,WAAY,CAACsX,gBAAgB,EAAMC,cAAc,QAKpD,iCAYC,YAAsBvjC,GAAA,KAAAA,OAFZ,KAAA8jC,cAAgB,IAAI,EAAAC,UAI9B,kBACC,OAAQxnC,KAAKynC,aAAeznC,KAAKynC,cAAgBznC,KAAK0nC,sBAE/C,sBACP,MAEMlmC,EAAW,IAAI,EAAAmmC,oBAFR,IACI,KAEXC,EAAO,IAAI,EAAAr+B,KAAK/H,GAEtB,OADAxB,KAAKyD,KAAK1F,OAAOkf,IAAI2qB,GACdA,EAER,4BACC,OAAQ5nC,KAAK6nC,2BAA6B7nC,KAAK6nC,4BAA8B,IAAI,EAAAC,kBAGlF,cA6BA,qBACC,OAAO9nC,KAAKyD,KAAK+E,OAAOu/B,QAAQ,kBAEjC,8BACC,OAAO/nC,KAAK+mC,gBAAkB/mC,KAAKyD,KAAK+E,OAAOu/B,QAAQ,gBAExD,2BACC,OAAO/nC,KAAK+mC,iBAAmB/mC,KAAKyD,KAAK+E,OAAOu/B,QAAQ,gBAEzD,uBACC,OAAI/nC,KAAKgoC,qBACDhoC,KAAKyD,KAAK+E,OAAOqB,MAAM,oBAEvB,KAeC,sBACJ,S,mDACD7J,KAAK+mC,gBACR/mC,KAAKioC,2BAECjoC,KAAKkoC,0BACPloC,KAAKmoC,gCACFnoC,KAAKooC,+BAGRpoC,KAAKynC,cACRznC,KAAKyD,KAAK1F,OAAOmf,OAAOld,KAAKynC,iBAiBlB,0B,mDACb,MAAMtkC,EAAWnD,KAAKqoC,4BACtBllC,EAAS0G,MAAQ7J,KAAKyD,KAAKmc,GAAGqnB,iBAC9BjnC,KAAKsoC,YAAYnlC,SAAWA,KAGf,6B,mDACb,MAAMolC,EAAUvoC,KAAKyD,KAAKxF,EAAEipC,oBAAoBsB,aAChD,GAAID,EAAS,OACNA,EAAQtwB,oBACd,MAAM9U,EAAWolC,EAAQplC,SACzBnD,KAAKsoC,YAAYnlC,SAAWA,OAG5BnD,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,2B,8GC9K9B,2BACA,QACA,SAEA,SAIA,MAAsBkoC,UAAgD,EAAAniB,WAAtE,c,oBACS,KAAAoiB,uBAAyB,EAAAC,WAEjC,iBACC,OAAO3oC,KAAKkpB,YAEb,iBACC,OAAO,EAER,iBACC,IAAK,IAAIvsB,KAAKqD,KAAK4oB,WAClB,IAAKjsB,EAAEisC,WACN,OAAO,EAGT,OAAO,EAER,gBACC,OAAO5oC,KAAKkpB,YAAYlkB,IAAKrI,GAAMA,EAAE6qB,WAEtC,2BACC,OAAOxnB,KAAKwnB,UAGb,kBACC,GAAwB,MAApBxnB,KAAKkpB,YACR,OAED,IAAI9mB,EAAQ,EACZpC,KAAKkpB,YAAc,IAAI2f,MAAM7oC,KAAKmpB,gBAAgBnuB,QAClD,IAAK,IAAI8tC,KAAkB9oC,KAAKmpB,gBAAiB,CAChD,MAAM4f,EAAY,IAAI/oC,KAAK0oC,uBAAuB1oC,KAAKoD,OACvD,IAAI4lC,EAEHA,EADG,UAAehpC,KAAKgoB,gBACThoB,KAAKgoB,eAAe5lB,GAEnBpC,KAAKgoB,eAAuB8gB,GAE5CC,EAAUtqC,QAAQqhB,KAAK9f,KAAKvB,SAC5BsqC,EAAUE,eAAeD,GAGzBD,EAAUzkB,SAAS,GAAGtkB,KAAKnD,OAAOisC,KAClCC,EAAUG,iBAAiBlpC,MAE3BA,KAAK0oB,gBAAgBqgB,GAErB/oC,KAAKkpB,YAAY9mB,GAAS2mC,EAC1B3mC,KAKc,sB,yDACTpC,KAAKmpC,qBACXnpC,KAAKopC,+BAEN,6BAGA,iB,MACC,IAAK,IAAIzsC,KAAKqD,KAAK4oB,WAClB,GAA2B,QAA3B,EAAIjsB,EAAEysB,6BAAqB,eAAE3oB,OAC5B,OAAO,EAGT,OAAO,EAGM,qB,mDACb,MAAMmoB,EAAa5oB,KAAK4oB,WAMlBygB,EAAW,GACjB,IAAK,IAAI1sC,KAAKisB,EACTjsB,EAAE2d,UACL+uB,EAAS/tC,KAAKqB,EAAE2sC,iBAGZrhB,QAAQshB,IAAIF,GAMlBrpC,KAAKqa,wBAMI,6BAA6BmN,GACtC,GAAK,UAAeA,GAKnB,OAAOA,EALwB,CAC/B,MAAMgiB,EAAmBhiB,EAEzB,OADqDxnB,KAAK4oB,WAAW5jB,IAAI,IAAMwkC,IAOvE,oBACT,MAAMC,EAASzpC,KAAKoD,MAAMqmC,OAC1BA,EAAOC,QACP,MAAM9gB,EAAa5oB,KAAK4oB,WACxB,IAAK,IAAIjsB,KAAKisB,EACbjsB,EAAEgrB,gBAAgBgiB,oBAInB,MAAMrsC,EAAQ0C,KAAKqnB,WACnB,GAAI,UAAe/pB,GAClB,IAAK,IAAIxC,EAAI,EAAGA,EAAI8tB,EAAW5tB,OAAQF,IACtC8tB,EAAW9tB,GAAGyF,IAAKjD,EAAcxC,SAGlC,IAAK,IAAIA,EAAI,EAAGA,EAAI8tB,EAAW5tB,OAAQF,IAAK,CAC3C,MAAMguC,EAAiB9oC,KAAKmpB,gBAAgBruB,GAC5C8tB,EAAW9tB,GAAGyF,IAAKjD,EAAcwrC,IAUnCW,EAAOG,UAEP,IAAK,IAAI9uC,EAAI,EAAGA,EAAI8tB,EAAW5tB,OAAQF,IACtC8tB,EAAW9tB,GAAG6sB,gBAAgBkiB,sBAI/B7pC,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWyR,gBA1IvC,wB,8ECkBA,0BAGC,YAAsBwQ,GAAA,KAAAA,SADZ,KAAAC,cAAyD,GAGnE,eACC,MAAMC,EAA6BhqC,KAAK8pC,OAAOrrC,QAAQwrC,WAAajqC,KAAK8pC,OAAOthB,aAI1E0hB,GAAiBlqC,KAAK8pC,OAAOlB,WAEnC,OAAOoB,GAA8BE,EAGtC,OACC,GAAIlqC,KAAK8pC,OAAOthB,aAEf,MADAnlB,QAAQiE,KAAK,gCACP,+BAGP,OAAItH,KAAKmqC,wBACDnqC,KAAKoqC,gBAELpqC,KAAKqqC,eAIN,eACP,OAAOrqC,KAAK8pC,OAAOQ,qBAGZ,gBAmBP,GAlBAtqC,KAAK+pC,cAAgB,GAEjB/pC,KAAK8pC,OAAOrrC,QAAQwrC,WAAajqC,KAAK8pC,OAAOthB,eAChDxoB,KAAK+pC,cAAoB,KAAI/pC,KAAK8pC,OAAOvrC,KACzCyB,KAAK+pC,cAA6B,cAAI/pC,KAAK8pC,OAAOS,yBAClDvqC,KAAK+pC,cAAyB,UAAI/pC,KAAK8pC,OAAOQ,qBAC9CtqC,KAAK+pC,cAAuB,QAAI/pC,KAAK8pC,OAAOrrC,QAAQstB,SAGhD/rB,KAAK8pC,OAAOlB,YAChB5oC,KAAKwqC,WAQFxqC,KAAK8pC,OAAOrrC,QAAQgsC,uBAAwB,CAC/C,MAAMC,EAAuC,GACvCC,EAAqB3qC,KAAK8pC,OAAOrrC,QAAQisC,mBAC/C,IAAK,IAAIE,KAAe3vC,OAAO4W,KAAK84B,GAAqB,CACxD,MAAME,EAAeF,EAAmBC,GACxCF,EAAmBE,GAAeE,KAAKC,UAAUF,GAElD7qC,KAAK+pC,cAAiC,kBAAIW,EAE3C,OAAO1qC,KAAK+pC,cAGH,wBACT,QAAI/pC,KAAK8pC,OAAOrrC,QAAQwrC,YAGpBjqC,KAAK8pC,OAAOrrC,QAAQgsC,uBAwBf,e,2FC9GX,OAGA,SAGA,SACA,SAIA,SAGA,SACA,SACA,QAGA,QACA,QACA,QACA,SACA,SAeMO,EAAmD,IAAI3a,IAAI,CAChE,CAAC,EAAA9f,WAAWzF,OAAQ,qBACpB,CAAC,EAAAyF,WAAW4hB,SAAU,uBAEjB8Y,EAAiD,IAAI5a,IAAI,CAC9D,CAAC,EAAA9f,WAAWzF,OAAQ,2BACpB,CAAC,EAAAyF,WAAW4hB,SAAU,mDAEjB+Y,EAAiD,IAAI7a,IAAI,CAC9D,CAAC,EAAA9f,WAAWzF,OAAQ,CAAC,0BAA2B,kCAChD,CAAC,EAAAyF,WAAW4hB,SAAU,MAKvB,MAAahC,UAA8B,EAAAgb,eAe1C,YAAsBta,GACrB5qB,QADqB,KAAA4qB,kBAdZ,KAAAoB,iBAA4C,IAAI5B,IAChD,KAAAwC,OAAkC,IAAIxC,IAGtC,KAAAa,YAAgC,GAChC,KAAAka,YAAgC,GAMlC,KAAAC,0BAAoC,EACpC,KAAAC,uBAAiC,EAMnC,U,uDAWI,iCAAiCxY,G,QAC1C,OAAQA,GACP,KAAK,EAAAviB,WAAWzF,OACf,OAA4B,QAA5B,EAAO9K,KAAKurC,wBAAgB,eAAEnZ,aAC/B,KAAK,EAAA7hB,WAAW4hB,SACf,OAA4B,QAA5B,EAAOnyB,KAAKurC,wBAAgB,eAAElZ,gBAIjC,sBACC,OAAOryB,KAAK6wB,gBAAgBtpB,qBAAqBysB,gBAElD,kBACC,OAAoE,MAA7Dh0B,KAAK6wB,gBAAgBtpB,qBAAqBysB,gBAElD,kBACC,OAAOh0B,KAAKiyB,iBAMH,eACT,IAAK,IAAIa,KAAe9yB,KAAK+yB,aAAc,CAC1C,MAAMC,EAAWhzB,KAAKizB,iCAAiCH,GACnDE,GACHhzB,KAAKwrC,kBAAkBxY,EAAUF,IAUpC,eAAe2Y,GACdzrC,KAAKkxB,YAAcua,EAEpB,wBA8FU,aAAaC,GAgBtB,IAAK,IAAIlN,KAAgBx+B,KAAKy+B,gBAC7BiN,EAAiBlN,EAAamN,cAAgBnN,EAAaoN,QAGxD5rC,KAAKwyB,4BACRkZ,EAAuB,KAAI,CAE1BpuC,MAAO0C,KAAK6wB,gBAAgBztB,MAAMyoC,OAGhC7rC,KAAK8rC,yBACRJ,EAA6B,WAAI,CAChCpuC,MAAO,IAAI,EAAAq5B,QAAQ,IAAM,OAY5B,0BAA0B7D,GAEzB,MAAMlqB,EAAO,GACb,IAAK,IAAInF,KAAQzD,KAAKkxB,YACrB,OAAQztB,EAAKlF,MACZ,IAAK,SACJqK,EAAKtN,KAAKmI,GAiBb,OAAOmF,EAER,0BAA0BkqB,GACzB,MAAMlqB,EAAO,GACb,IAAK,IAAInF,KAAQzD,KAAKorC,YACrB,OAAQ3nC,EAAKlF,MACZ,KAAK,EAAAwtC,cAAcxtC,OAClBqK,EAAKtN,KAAKmI,GACV,MAED,KAAK,EAAA88B,gBAAgBhiC,QAcvB,OAAOqK,EAER,uBAAuBksB,EAA6BrsB,IACpD,sBAAsB4qB,EAA2B5qB,IACjD,yBACCksB,EACAlsB,IAQD,mBACC,OAAQzI,KAAK+wB,cAAgB/wB,KAAK+wB,eAAiB,IAAI,EAAAib,YAAYhsC,KAAMA,KAAK6wB,iBAEzE,sBAAsB4a,G,yDACrBzrC,KAAKisC,aAAaC,iBAAiBT,MAE1C,0BACCzrC,KAAKisC,aAAaE,0BAEnB,6BACCnsC,KAAKisC,aAAaG,6BAEnB,wBACC,OAAOpsC,KAAKisC,aAAaxN,gBAE1B,cAAc3L,EAAyBuZ,GACtC,OAAOrsC,KAAKisC,aAAa7Y,MAAMN,EAAauZ,GAE7C,oBACC,OAAOrsC,KAAKisC,aAAaK,YAE1B,gBAEC,OADqBtsC,KAAKusC,qBAAuBvsC,KAAKisC,cAClCxN,gBAErB,wBAAwB+N,GACvBxsC,KAAKusC,oBAAsBC,EACvBxsC,KAAKusC,oBACRvsC,KAAKisC,aAAaG,6BAElBpsC,KAAKisC,aAAaE,0BASpB,yBAAyBtO,GACxBA,EAAar1B,OAAO0c,UAAU,EAAAxmB,UAAUc,QAAS,WAAY,CAAC,EAAG,EAAG,GAAI,CAACitC,QAAQ,IACjF5O,EAAar1B,OAAO0c,UAAU,EAAAxmB,UAAUc,QAAS,SAAU,CAAC,EAAG,EAAG,GAAI,CAACitC,QAAQ,IAC/E5O,EAAar1B,OAAO0c,UAAU,EAAAxmB,UAAUG,MAAO,QAAS,CAAC,EAAG,EAAG,GAAI,CAAC4tC,QAAQ,IAC5E5O,EAAar1B,OAAO0c,UAAU,EAAAxmB,UAAUI,MAAO,QAAS,EAAG,CAAC2tC,QAAQ,IACpE5O,EAAar1B,OAAO0c,UAAU,EAAAxmB,UAAUa,QAAS,KAAM,CAAC,EAAG,GAAI,CAACktC,QAAQ,IAEzE,kBAAkB5O,GACjB1N,EAAsB2N,kBAAkBD,GAEzC,gDACC,MAAO,CACN,IAAI,EAAAmE,0BAA0B,WAAY,EAAAn+B,oBAAoBK,MAC9D,IAAI,EAAA89B,0BAA0B,SAAU,EAAAn+B,oBAAoBK,MAC5D,IAAI,EAAA89B,0BAA0B,QAAS,EAAAn+B,oBAAoBK,MAC3D,IAAI,EAAA89B,0BAA0B,KAAM,EAAAn+B,oBAAoBI,MACxD,IAAI,EAAA+9B,0BAA0B,eAAgB,EAAAn+B,oBAAoBM,MAClE,IAAI,EAAA69B,0BAA0B,aAAc,EAAAn+B,oBAAoBI,MAGhE,IAAI,EAAA+9B,0BAA0B,OAAQ,EAAAn+B,oBAAoB/E,QAG5D,yCACC,OAAOqxB,EAAsBuc,yCAE9B,mBAAmB5X,GAClBA,EAAaj0B,GAAGC,QAAQqG,mCAAmCnH,KAAK0sC,0CAEjE,0BACC,OAAO,EAQR,gBACC1sC,KAAK2sC,wBACL3sC,KAAK4sC,0BACL5sC,KAAK6sC,kCACL7sC,KAAK8sC,+BAEN,qBACC,OAAQ9sC,KAAK+sC,gBAAkB/sC,KAAK+sC,iBAAmB/sC,KAAKgtC,wBAE7D,mBAAmB3b,GAClBrxB,KAAK+sC,gBAAkB1b,EAExB,mB,MACC,OAA0B,QAAnB,EAAArxB,KAAKqxB,sBAAc,eAAErsB,IAAKioC,GAAOA,EAAGpwC,UAAW,GAE7C,wBACTmD,KAAK+sC,qBAAkBxoC,EAGxB,wBACC,MAAO,CACN,IAAI,EAAA2oC,aAAa,EAAA38B,WAAWzF,OAAQ,CAAC,WAAY,SAAU,MAAO,IAClE,IAAI,EAAAoiC,aAAa,EAAA38B,WAAW4hB,SAAU,CAAC,QAAS,SAAU,CAAC,EAAA5hB,WAAWzF,UAGxE,cAAcjO,G,MACb,OAA0B,QAA1B,EAAOmD,KAAKqxB,sBAAc,eAAExH,OAAQojB,GAC5BA,EAAGpwC,QAAUA,GAClB,GAEJ,mBACC,OAAQmD,KAAKmtC,kBAAoBntC,KAAKmtC,mBAAqBntC,KAAKotC,0BAEjE,qBAAqB7b,GACpBvxB,KAAKmtC,kBAAoB5b,EAE1B,gBAAgB10B,GACf,OAAOmD,KAAKuxB,mBAAmB1H,OAAQwjB,GAC/BA,EAAGxwC,QAAUA,GAClB,GAEJ,iCACC,MAAO,CACN,IAAI,EAAAywC,eAAe,WAAY,CAC9B3Z,wBAAwB,EAGxBS,OAAQ,wBAET,IAAI,EAAAkZ,eAAe,SAAU,CAC5B3Z,wBAAwB,EACxBS,OAAQ,yBAGT,IAAI,EAAAkZ,eAAe,QAAS,CAC3BlZ,OAAQ,wBAET,IAAI,EAAAkZ,eAAe,QAAS,CAC3BlZ,OAAQ,sBAET,IAAI,EAAAkZ,eAAe,KAAM,CAExBlZ,OAAQ,SACRmZ,GAAI,EAAA/P,uBAAuBkD,QAAQ/S,MAItC,0BACC,OAAOwC,EAAsBid,0BAEpB,0BACTptC,KAAKmtC,uBAAoB5oC,EACzBvE,KAAKuxB,mBAEN,4BAA4Bic,EAA2B1a,G,MACtD,OAAsC,QAA/B,EAAA9yB,KAAKy0B,cAAc3B,UAAY,eAAE0B,gBAAiB,GAIhD,kCACTx0B,KAAKqrC,0BAA2B,EAEjC,8BACCrrC,KAAKqrC,0BAA2B,EAEjC,0BACC,OAAOrrC,KAAKqrC,yBAGH,+BACTrrC,KAAKsrC,uBAAwB,EAE9B,2BACCtrC,KAAKsrC,uBAAwB,EAE9B,uBACC,OAAOtrC,KAAKsrC,sBAQH,oBAAoBxY,GAC7B,OAAOkY,EAAwB9tC,IAAI41B,GAE1B,kBAAkBA,GAC3B,OAAOmY,EAAsB/tC,IAAI41B,GAExB,gBAAgBA,GACzB,OAAOoY,EAAoBhuC,IAAI41B,GASxB,kBAAkBE,EAAkBF,GAC3C,MAAM2a,EAAuBztC,KAAK0tC,cAAc5a,EAAa,EAAA6a,SAASC,sBAChEC,EAAS7tC,KAAK0tC,cAAc5a,EAAa,EAAA6a,SAASG,QAElDC,EAAO/tC,KAAK0tC,cAAc5a,EAAa,EAAA6a,SAASK,MAEtD,IAAIC,EAAiBjb,EAASpkB,MAAM,MAEpC,MAAMs/B,EAAY,GAOZC,EAAqBnuC,KAAKouC,oBAAoBtb,GAC9Cub,EAAmBruC,KAAKsuC,kBAAkBxb,GAC1Cyb,EAAkBvuC,KAAKuuC,gBAAgBzb,GAC7C,IAAI0b,GAA2B,EAC3BC,GAAyB,EAE7B,IAAK,IAAIC,KAAiBT,EAAgB,CACT,GAA5BO,IACCf,GACHztC,KAAK2uC,cAAcT,EAAWT,GAE3BI,GACH7tC,KAAK2uC,cAAcT,EAAWL,GAE/BW,GAA2B,GAEE,GAA1BC,IAECV,GACH/tC,KAAK2uC,cAAcT,EAAWH,GAE/BU,GAAyB,GAG1B,IAAIG,GAAuB,EAC3B,GAAIL,EACH,IAAK,IAAIM,KAAkBN,EACtBG,EAAcplC,QAAQulC,IAAmB,IAC5CD,GAAuB,GAIrBA,GAGJV,EAAU5yC,KAAK,eACf4yC,EAAU5yC,KAAK,KAAKozC,MAHpBR,EAAU5yC,KAAKozC,GAMZP,GAAsBO,EAAcplC,QAAQ6kC,IAAuB,IACtEK,GAA2B,GAExBH,GAAoBK,EAAcplC,QAAQ+kC,IAAqB,IAClEI,GAAyB,GAoB3BzuC,KAAK6yB,OAAOtyB,IAAIuyB,EAAaob,GAOtB,cAAcA,EAAqBY,GAC1C,GAAIA,EAAa9zC,OAAS,EAAG,CAC5B,IAAK,IAAIF,EAAI,EAAGA,EAtiBE,EAsiBgBA,IACjCozC,EAAU5yC,KAAK,IAGhB,IAAK,IAAIyzC,KAAeD,EACvBZ,EAAU5yC,KAAKyzC,GAEhB,IAAK,IAAIj0C,EAAI,EAAGA,EA7iBE,EA6iBgBA,IACjCozC,EAAU5yC,KAAK,KAKZ,uB,mDACL,OAAO,IAAI+0B,QAljBb,2B,8EC1DA,uBACC,YAAsB5sB,GAAA,KAAAA,OACtB,cAEA,UAEA,eACC,OAAOzD,KAAKyD,KAAKN,Y,sFCTnB,E,KAAA,uBAiBA,IAAK8sB,GAAL,SAAKA,GACJ,kDACA,4CACA,kDAHD,CAAKA,MAAkB,KAoBvB,qBACC,YAAY7sB,EAAkBD,GAC7B,OAAOC,EAAMK,KAAKN,EAAStG,MAG5B,aAAamyC,GACZ,OAAI,UAAeA,GACXA,EAAahqC,IAAK7B,GACjBnD,KAAKivC,aAAa9rC,IAGnBnD,KAAKivC,aAAaD,GAI3B,oBAAoBA,GACnB,MAAM7rC,EAAW6rC,EAAajsC,QAI9B,OAFCI,EAA+BuH,UAAaskC,EAAmCtkC,UAEzEvH,EAGR,8BAA8BpF,EAAkBoF,GAC/C,MAAM+rC,EAAuB/rC,EAC7B,GAAI+rC,EAAqBpe,iBACxB,IAAK,IAAIj0B,KAAQ5B,OAAO4W,KAAKq9B,EAAqBpe,kBAAmB,CACpE,MAAMqe,EAAWtyC,EAEX20B,EAAkB0d,EAAqBpe,iBAAiBqe,GAC1D3d,IACFzzB,EAAqCoxC,GAAY3d,EAClDA,EAAgBxB,aAAc,IAQlC,8BAA8Bof,EAAezD,EAAsB0D,GAClE,MAAMlsC,EAAWisC,EACjB,GAAIjsC,EAAS2tB,iBACZ,IAAK,IAAIj0B,KAAQ5B,OAAO4W,KAAK1O,EAAS2tB,kBAAmB,CACxD,MAAMqe,EAAWtyC,EACX20B,EAAkBruB,EAAS2tB,iBAAiBqe,GAC9C3d,IACHA,EAAgBe,SAASoZ,GAAcruC,MAAQ+xC,IAKnD,qCAAqCD,EAAezD,EAAsB0D,GACzE,MAAMlsC,EAAWisC,EACjB,GAAIjsC,EAAS2tB,iBACZ,IAAK,IAAIj0B,KAAQ5B,OAAO4W,KAAK1O,EAAS2tB,kBAAmB,CACxD,MAAMqe,EAAWtyC,EACX20B,EAAkBruB,EAAS2tB,iBAAiBqe,GAC9C3d,IACHA,EAAgBe,SAASoZ,GAAgBna,EAAgBe,SAASoZ,IAAiB0D,O,qGChGxF,cACA,SACA,QACA,SAIA,MAAaC,UAAmD,EAAAzvC,UAAhE,c,oBACC,KAAAC,qBAAiE,IAAI,EAAAC,yBACpEC,KACA,EAAAuvC,gBAMO,KAAAC,gCAAkCxvC,KAAKyvC,0BAA0B5xC,KAAKmC,MAJ9E,sBACC,OAAO,EAAAI,YAAYsvC,MAIpB,uBAIC1vC,KAAKa,GAAGkG,YAAYC,cACpBhH,KAAKiH,QAAQC,wBACblH,KAAKwa,oBAAoB,4BAA6Bxa,KAAKwvC,iCAE5D,cAAc3yC,GACb,OAAOoJ,MAAMoB,cAAcxK,GAI5B,4BACCmD,KAAKwI,OAAOmnC,WAEb,cAAcC,EAAcC,EAA2BC,KA1BxD,mBA8BA,mCAAwCR,K,+FCrCxC,2BACA,2BAGA,QAGA,SACA,SAWA,MAAsBS,UAA+C,EAAAzpB,WAEpE,iBACC,OAAO,EAER,iBACC,OAAOtmB,KAAKqnB,YAAcrnB,KAAK4S,cAWtB,6BAA6B4U,GACtC,OAAI,UAAeA,GACXA,EAAU,GAEVA,EAIC,oBACTxnB,KAAK8xB,OAAO9T,MAAML,QAElB,MAAMqyB,EAAYhwC,KAAKiwC,QAAQjwC,KAAKqnB,YACnB,MAAb2oB,GACChwC,KAAK6mB,yBACR7mB,KAAK6mB,uBAAuBqpB,oBAAe3rC,GAAW,GACtDvE,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWsoB,qBAElCH,GAAahwC,KAAK+mB,SACrB/mB,KAAKowC,cAAcJ,GACnBhwC,KAAKoa,qBAAqBpa,QAGvB,UAAgBA,KAAKqnB,aACxBrnB,KAAK6mB,uBAAyB7mB,KAAK6mB,wBAA0B,IAAI,EAAAwpB,qBAAqBrwC,MAClFA,KAAKqnB,YAAcrnB,KAAK6mB,uBAAuBypB,aAClDtwC,KAAK6mB,uBAAuBqpB,eAAelwC,KAAKqnB,YAChDrnB,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWsoB,sBAGtCnwC,KAAK8xB,OAAO9T,MAAMzd,IAAI,2BAA2BP,KAAKqI,gBAIzC,sB,yDACf,IAA8B,QAA1B,EAAArI,KAAKopB,6BAAqB,eAAE3oB,UAAWT,KAAKopB,sBAAsBmnB,kBAAmB,CACxF,MAAMC,QAA0BxwC,KAAKopB,sBAAsBqnB,qBAC3D,GAAIzwC,KAAKopB,sBAAsBsnB,WAC9B1wC,KAAK8xB,OAAO9T,MAAMzd,IACjB,sBAAsBP,KAAKopB,sBAAsBknB,gBAAgBtwC,KAAKopB,sBAAsBgW,sBAEvF,CACN,MAAM4Q,EAAYhwC,KAAKiwC,QAAQO,GACd,MAAbR,GACChwC,KAAK8xB,OAAO9T,MAAMvd,QACrBT,KAAK8xB,OAAO9T,MAAML,QAEnB3d,KAAKowC,cAAcJ,IAEnBhwC,KAAK8xB,OAAO9T,MAAMzd,IACjB,uCAAuCiwC,OAAuBxwC,KAAKopB,sBAAsBknB,oBAMtF,cAAc96B,GACrBxV,KAAK+mB,OAASvR,EACVxV,KAAKwoB,cACRxoB,KAAKwoB,aAAa4gB,4BAEnBppC,KAAKvB,QAAQkyC,mBACb3wC,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWyR,eACrCt5B,KAAKqa,sBA/EP,uB,8ECnBA,mBACC,mBAAmB/U,GAClB,MAAM,IAAIsrC,MAAM,gC,8ECElB,0BACC,YAAsB9G,GAAA,KAAAA,SAEtB,aAAatvC,GACZ,MAAMgtB,EAAYhtB,EAAgB,eAMhB+J,IAAdijB,GACHxnB,KAAK8pC,OAAOvpC,IAAIinB,GAQjBxnB,KAAKwqC,SAAShwC,GAGf,SAASA,O,8ECxBV,qBACC,YAAoBuL,EAA2B8qC,EAAgCC,GAA3D,KAAA/qC,QAA2B,KAAA8qC,eAAgC,KAAAC,gBAE/E,OACC,OAAO9wC,KAAK+F,MAEb,cACC,OAAO/F,KAAK6wC,aAEb,eACC,OAAO7wC,KAAK8wC,iB,8ECHd,uBACC,YAAoB/qC,EAAuBwgB,EAAkC,IAAzD,KAAAxgB,QAAuB,KAAAwgB,WAE3C,OACC,OAAOvmB,KAAK+F,MAEb,yBACC,OAAO/F,KAAKumB,SAAiC,yBAAK,EAEnD,UACC,OAAOvmB,KAAKumB,SAAkB,QAE/B,eACC,OAAOvmB,KAAKumB,SAAa,GAK1B,SACC,OAAOvmB,KAAKumB,SAAiB,QAAK,GAEnC,SACC,OAAOvmB,KAAKumB,SAAiB,QAAK,M,8EC/BpC,eAIA,6CACS,KAAAwqB,eAA2C,GAEnD,QACC/wC,KAAK+wC,eAAiB,GAGvB,KAAKvS,GACJx+B,KAAK+wC,eAAez1C,KAAKkjC,GAE1B,gBACCjgC,EACA1B,EACA+V,EACA+4B,GAEA,MAAMnN,EAAe,IAAI,EAAAjgB,YAAYhgB,EAAM1B,EAAM+V,EAAe+4B,GAChE3rC,KAAK+wC,eAAez1C,KAAKkjC,GAG1B,WACC,OAAOx+B,KAAK+wC,kB,8ECzBd,eACA,QACA,OAGA,OAEA,SAAgBC,EAA4C3yB,GAC3D,OAAO,cAAoBA,EAApB,c,oBACN,KAAAxU,MAAQ,EAAA0U,YAAY1f,MAAM,CAAC,EAAG,EAAG,IACjC,KAAAoyC,kBAAoB,EAAA1yB,YAAY3f,QAAQ,GACxC,KAAAyL,YAAc,EAAAkU,YAAY3f,QAAQ,GAClC,KAAAsyC,QAAU,EAAA3yB,YAAYzf,MAAM,GAC5B,KAAAqyC,WAAa,EAAA5yB,YAAYzf,MAAM,GAC/B,KAAAsyC,QAAU,EAAA7yB,YAAY3f,QAAQ,KAPhC,qBAW8B,EAAAqd,SAQE+0B,EAAiB,EAAAloC,kBACpB,EAAAsS,aAM7B,MAAai2B,UAAyB,EAAA1hB,eACrC,cAAclsB,GACb,MAAMN,EAAWM,EAAKN,SAChByc,EAAKnc,EAAKmc,GAChBzc,EAAS0G,MAAMiW,KAAKF,EAAG/V,OACvB,MAAMynC,EAAmB1xB,EAAGqxB,kBACxBK,GAAoBnuC,EAASiH,eAChCjH,EAASiH,aAAeknC,EACxBnuC,EAAS6sB,aAAc,GAGxB7sB,EAAS+tC,QAAUtxB,EAAGsxB,QACtB/tC,EAASkH,YAAcuV,EAAGvV,aAAeuV,EAAGsxB,QAAU,EACtD/tC,EAASmH,WAAY,EACrBnH,EAASouC,UAAY3xB,EAAGuxB,WACxBhuC,EAASquC,IAAM5xB,EAAGwxB,SAfpB,sB,8ECjCA,eACA,QACA,OACA,OAGA,SAAgBJ,EAA4C3yB,GAC3D,OAAO,cAAoBA,EAApB,c,oBAEN,KAAAhU,YAAc,EAAAkU,YAAY3f,QAAQ,GAClC,KAAAsyC,QAAU,EAAA3yB,YAAYzf,MAAM,GAC5B,KAAAqyC,WAAa,EAAA5yB,YAAYzf,MAAM,GAC/B,KAAAsyC,QAAU,EAAA7yB,YAAY3f,QAAQ,KANhC,qBAU8B,EAAAqd,SAQE+0B,EAAiB,EAAAloC,kBAEpB,EAAAsS,aAM7B,MAAai2B,UAAyB,EAAA1hB,eACrC,cAAclsB,GACb,MAAMN,EAAWM,EAAKN,SAChByc,EAAKnc,EAAKmc,GAEZzc,EAASovB,SAAS2e,UACrB/tC,EAASovB,SAAS2e,QAAQ5zC,MAAQsiB,EAAGsxB,SAEtC/tC,EAASkH,YAAcuV,EAAGvV,aAAeuV,EAAGsxB,QAAU,EACtD/tC,EAASmH,WAAY,EACrBnH,EAASouC,UAAY3xB,EAAGuxB,WACxBhuC,EAASquC,IAAM5xB,EAAGwxB,SAXpB,sB,2FChCA,QAOA,QAEA,MAAsBK,UAGZ,EAAAr2B,aAHV,c,oBAKW,KAAA8H,6BAA+B,EAAA9iB,YAAY0G,GACrD,uB,MACCb,MAAMwV,uBAENzb,KAAKqhC,UAAUqQ,mBAAmB1xC,KAAKuH,qBAAqBoqC,UAAU9zC,KAAKmC,KAAKuH,uBACxD,QAAxB,EAAAvH,KAAKulB,2BAAmB,SAAEqsB,OAQ3B,kBACC,OAAO5xC,KAAKuH,qBAAqBypB,UAAUhV,kBAO5C,2BACC,OAAQhc,KAAK6xC,sBAAwB7xC,KAAK6xC,uBAAyB7xC,KAAK8xC,+BAIzE,YAA+CvzC,GAC9C,OAAO0H,MAAMuf,YAAYjnB,GAE1B,WACC,OAAO0H,MAAMyf,WAEd,cAAiDnnB,GAChD,OAAO0H,MAAM2f,cAAcrnB,GAQtB,sB,mDACDyB,KAAKuH,qBAAqBwqC,oBAC7B/xC,KAAKgyC,cAGS,W,mDACXhyC,KAAKmD,iBACFnD,KAAKuH,qBAAqBypB,UAAUS,iBAAiBzxB,KAAKmD,gBAC1DnD,KAAKuH,qBAAqB0qC,oBAtDnC,yB,8ECTA,eAGA,OACA,QACA,QAGwC,EAAA7zB,uBAAuB,EAAAtV,kBAE/D,MAAsBopC,UAGZ,EAAAC,kBAHV,c,oBAIiB,KAAAjyC,MAA0B,IAAI,EAAAypB,iBAAiB3pB,MACtD,KAAA0e,qBAA4C,IAAI,EAAAC,oBAAoB3e,MAE7E,uBACCiG,MAAMwV,uBACNzb,KAAK0e,qBAAqBtX,kBAG3B,OACCpH,KAAK0e,qBAAqB6Z,SAC1Bv4B,KAAKoyC,sBACLpyC,KAAKqyC,uBACLryC,KAAK6b,gBAAgByJ,YAhBvB,iC,8ECVA,cACA,QAEA,OACA,QAGA,QACA,SAAgBgtB,EAAsDj0B,GACrE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAk0B,YAAc,EAAAh0B,YAAY3f,QAAQ,GAClC,KAAA4zC,YAAc,EAAAj0B,YAAYzf,MAAM,EAAG,CAAC2wB,WAAY,CAAC8iB,YAAa,OAHhE,+BAM0CD,EAA2B,EAAAxpC,kBACrE,MAAsB2pC,UAAgD,EAAAt2B,aAAtE,c,oBACiB,KAAAjc,MAA0B,IAAI,EAAAypB,iBAAiB3pB,OADhE,2BAOA,wBAGC,YAAsByD,EAAiBsC,GAAjB,KAAAtC,OAAiB,KAAAsC,QAF7B,KAAAoX,QAAU,IAAI,EAAA5T,KACd,KAAAwS,UAAY,IAAI,EAAA+rB,kBAAkB,CAAC4K,WAAW,EAAMlB,KAAK,IAGnE,QACCxxC,KAAKmd,QAAQtgB,KAAOmD,KAAK+F,MACzB/F,KAAK2yC,eAGN,aACC,OAAO3yC,KAAKmd,W,8ECtBd,yBAEC,YACS1Z,EACAmvC,EACA7sC,GAFA,KAAAtC,OACA,KAAAmvC,sBACA,KAAA7sC,QAGT,kBACC/F,KAAKyD,KAAKvD,MAAMI,QAAQE,SAAS,KAChCR,KAAK6yC,6BAIC,2B,UACP,GAAI7yC,KAAKyD,KAAKvD,MAAMI,QAAQG,OAAQ,CACnC,MAAM1C,EAAoB,QAAd,EAAGiC,KAAK8yC,cAAM,eAAE/0C,OACxBA,IACHiC,KAAKyD,KAAK1F,OAAOkf,IAAIlf,GACT,QAAZ,EAAAiC,KAAK+yC,eAAO,SAAExa,cAET,CACN,MAAMx6B,EAAqB,QAAf,EAAGiC,KAAK+yC,eAAO,eAAEh1C,OACzBA,GACHiC,KAAKyD,KAAK1F,OAAOmf,OAAOnf,IAI3B,aACC,GAAIiC,KAAKyD,KAAKvD,MAAMI,QAAQG,OAC3B,OAAQT,KAAK+yC,QAAU/yC,KAAK+yC,SAAW/yC,KAAKgzC,iBAG9C,cACC,OAAOhzC,KAAKyD,KAAKvD,MAAMI,QAAQG,QAAUT,KAAKyD,KAAKmc,GAAG2yB,YAG/C,iBACP,MAAMO,EAAS,IAAI9yC,KAAK4yC,oBAAoB5yC,KAAKyD,KAAMzD,KAAK+F,OAG5D,OAFA+sC,EAAOG,QACPjzC,KAAKyD,KAAKyvC,MAAMj2B,IAAI61B,EAAO/0C,QACpB+0C,EAGR,SACK9yC,KAAKmzC,SACHnzC,KAAK+yC,UACT/yC,KAAK+yC,QAAU/yC,KAAKgzC,kBAEjBhzC,KAAK+yC,UACR/yC,KAAK+yC,QAAQh1C,OAAOo1C,SAAU,EAC9BnzC,KAAK+yC,QAAQxa,WAGVv4B,KAAK+yC,UACR/yC,KAAK+yC,QAAQh1C,OAAOo1C,SAAU,M,+EClElC,cACA,QAEA,OACyC,EAAArqC,iBACzC,MAAasqC,UAA2B,EAAAj3B,aAAxC,c,oBAEW,KAAAK,0BAAoC,EAW9C,gBACC,OAAO,IAAI,EAAAjR,MAGZ,OACCvL,KAAK6b,gBAAgByJ,YAlBvB,wB,8ECFA,MAEA,OACA,4BAA4DjH,GAC3D,OAAO,cAAoBA,EAApB,c,oBACN,KAAAg1B,MAAQ,EAAA90B,YAAYvf,QAAQ,EAAG,CAC9BunC,MAAO,CAAC,EAAG,IACXC,aAAc,EAAC,GAAM,QAKxB,yBACC,YAAoB/iC,GAAA,KAAAA,OASpB,SACC,MAAM1F,EAASiC,KAAKyD,KAAK1F,OASzBA,EAAOu1C,OAAO/yC,IAAI,GAClBxC,EAAOu1C,OAAOC,OAAOvzC,KAAKyD,KAAK+E,OAAOgrC,QAjCrB,a,2FCHnB,SAEA,OACA,OAEA,2BAMA,UACA,SAEA,QACA,QAaA,SAASC,EAA4BrxC,GACpC,MAAO,CACN+kC,eAAgB,CAACC,QAAS,EAAAhnC,YAAYszC,MACtCjkB,WAAY,CACXkkB,gBAAiB,EACjB,CAAC,wBAAwBvxC,KAAU,IAKtC,aACA,wCAAwEic,GACvE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAu1B,aAAe,EAAAr1B,YAAYxf,SAE3B,KAAA40C,gBAAkB,EAAAp1B,YAAY3f,QAAQ,GACtC,KAAAi1C,uBAAyB,EAAAt1B,YAAY3f,QAAQ,EAtBvC,CACN6wB,WAAY,CACXkkB,gBAAiB,KAqBlB,KAAAG,mBAAqB,EAAAv1B,YAAYtf,cAAc,GAAIw0C,EAA4B,IAC/E,KAAAM,uBAAyB,EAAAx1B,YAAY3f,QAAQ,EAxBvC,CACN6wB,WAAY,CACXkkB,gBAAiB,KAuBlB,KAAAK,mBAAqB,EAAAz1B,YAAYtf,cAAc,GAAIw0C,EAA4B,IAC/E,KAAAQ,uBAAyB,EAAA11B,YAAY3f,QAAQ,EA1BvC,CACN6wB,WAAY,CACXkkB,gBAAiB,KAyBlB,KAAAO,mBAAqB,EAAA31B,YAAYtf,cAAc,GAAIw0C,EAA4B,IAC/E,KAAAU,uBAAyB,EAAA51B,YAAY3f,QAAQ,EA5BvC,CACN6wB,WAAY,CACXkkB,gBAAiB,KA2BlB,KAAAS,mBAAqB,EAAA71B,YAAYtf,cAAc,GAAIw0C,EAA4B,OAIjF,8BAcC,YAAoBhwC,GAAA,KAAAA,OAXZ,KAAA4wC,wBAAqD,GACrD,KAAAC,wBAAsD,GACtD,KAAAC,yBAAgD,GAChD,KAAAC,wCAA+D,GAC/D,KAAAC,uCAAiD,EAEjD,KAAAC,oBAAiD,GAEjD,KAAAC,mCAAqD,GACrD,KAAAC,+BAAsD,GAK9D,OAAO/E,EAA2BrlC,EAAeqqC,GAChD,MAAM12B,EAAWne,KAAKme,SAAS0xB,GAC/B,GAAI1xB,EACH,GAAIne,KAAKyD,KAAKmc,GAAG+zB,gBAAiB,CACjC,MAAMmB,EAAW90C,KAAK80C,SAASjF,GAC3BiF,IACHA,EAASh3B,QAAQtT,EAAKlF,EAAGkF,EAAKjF,GAC9BuvC,EAAS/2B,eAGV/d,KAAKyD,KAAKsxC,uBAAuBF,GAKjC12B,EAASJ,OAAO/d,KAAKyD,KAAKL,MAAM4xC,cAAeh1C,KAAKyD,KAAK1F,QAKpD,SAAS8xC,GAChB,OAAO7vC,KAAKq0C,wBAAwBxE,EAAOngC,IAG5C,gBAAgBmgC,EAA2BrlC,GAC1C,MAAMyqC,EAAK,EAAAp8B,KAAKq8B,WAAWp8B,qBAAqBq8B,kBAAkBtF,GAE5D1xB,EAAW,IAAI,EAAAi3B,cAAc,CAClCvF,OAAQA,EACRwF,WAAW,EACXC,OAAO,EACPlO,QAAS6N,IA2BV,OAxBA92B,EAASo3B,UAAU93B,SAAU,EAC7BU,EAASq3B,yBAA0B,EAGnCr3B,EAASs3B,YAAc,EAAAC,sBACvBv3B,EAASw3B,oBAAsB,EAC/Bx3B,EAASy3B,eAAiB,EAAAC,aAa1B,EAAAh9B,KAAKq8B,WAAWp8B,qBAAqBg9B,kBAAkB33B,GACvDne,KAAKq0C,wBAAwBxE,EAAOngC,IAAMyO,EAC1Cne,KAAK+1C,kBAAkBlG,EAAQrlC,GAC/B2T,EAAS63B,cAAc73C,OAAO83C,kBAEvB93B,EAER,gBAAgB0xB,GACf,MAAM1xB,EAAWne,KAAKme,SAAS0xB,GAC3B1xB,GACH,EAAAtF,KAAKq8B,WAAWp8B,qBAAqBo9B,oBAAoB/3B,GAG3D,kBAAkB0xB,EAA2BrlC,GAC5CxK,KAAKu0C,yBAAyB1E,EAAOngC,IAAM1P,KAAKu0C,yBAAyB1E,EAAOngC,KAAO,IAAI,EAAAinB,QAC3F32B,KAAKu0C,yBAAyB1E,EAAOngC,IAAIoQ,KAAKtV,GAE9C,MAAM2T,EAAWne,KAAKme,SAAS0xB,GAC3B1xB,GACHA,EAASL,QAAQtT,EAAKlF,EAAGkF,EAAKjF,GAE/B,MAAMuvC,EAAW90C,KAAK80C,SAASjF,GAC3BiF,GACHA,EAASh3B,QAAQtT,EAAKlF,EAAGkF,EAAKjF,GAIxB,SAASsqC,GAChB,OAAQ7vC,KAAKs0C,wBAAwBzE,EAAOngC,IAC3C1P,KAAKs0C,wBAAwBzE,EAAOngC,KAAO1P,KAAKm2C,iBAAiBtG,GAG3D,iBAAiBA,GACxB,MAAM1xB,EAAWne,KAAKme,SAAS0xB,GAC/B,GAAI1xB,EAAU,CAQb,MAAM22B,EAAW,IAAI,EAAAsB,eAAej4B,GAOpC,OAHA22B,EAASkB,cAAwC,EAA1B73C,OAAO83C,kBAC9Bj2C,KAAKq2C,oBAAoBxG,EAAOngC,GAAIolC,EAAU32B,GAEvC22B,GAOH,yB,mDACL,GAAI90C,KAAKyD,KAAKmc,GAAG+zB,gBAAiB,CAEjC,GADA3zC,KAAK00C,oBAAsB,GACvB10C,KAAKy0C,sCACR,OAID,GAFAz0C,KAAKy0C,uCAAwC,EAEzCz0C,KAAKs2C,gCAAiC,CACzCt2C,KAAK00C,oBAAsB,GAE3B,IAAK,IAAI55C,KAAK,UAAa,GAAI,CAI9B,GAHqBkF,KAAK20C,mCAAmC75C,GAE/BwC,MAChB,CACb,MACMi5C,EADQv2C,KAAK40C,+BAA+B95C,GAClB0tC,aAC5B+N,UACGA,EAAkBt+B,oBAGxBjY,KAAK00C,oBAAoBp5C,KAAKi7C,KAKjCv2C,KAAKw2C,uBAGNx2C,KAAKy0C,uCAAwC,OAE7Cz0C,KAAK00C,oBAAsB,MAIrB,uBACP,MAAM+B,EAAMx7C,OAAO4W,KAAK7R,KAAKs0C,yBAE7B,IAAK,IAAI5kC,KAAM+mC,EAAK,CACnB,MAAM3B,EAAW90C,KAAKs0C,wBAAwB5kC,GACxCyO,EAAWne,KAAKq0C,wBAAwB3kC,GAC1ColC,GACH90C,KAAKq2C,oBAAoB3mC,EAAIolC,EAAU32B,IAKlC,oBAAoBzO,EAAYolC,EAA0B32B,GAEjE,GADwBne,KAAKw0C,wCAAwC9kC,GAEpE,OAED1P,KAAKw0C,wCAAwC9kC,IAAM,EAEnD1P,KAAK02C,oBAAoB5B,GAEzB,MAAM6B,EAAoB,IAAI,EAAAC,WAAW52C,KAAKyD,KAAKL,MAAM4xC,cAAeh1C,KAAKyD,KAAK1F,QAClF44C,EAAkBE,WAAa,EAC/B/B,EAASgC,QAAQH,GAEjB,IAAK,IAAIJ,KAAqBv2C,KAAK00C,oBAClC6B,EAAkBQ,kBACjBjC,EACA90C,KAAKyD,KAAK1F,OACViC,KAAKu0C,yBAAyB7kC,GAC9B1P,KAAKyD,aAGAzD,KAAKw0C,wCAAwC9kC,GAG7C,oBAAoBolC,GAC3B,IAAIkC,EACJ,KAAQA,EAAclC,EAASmC,OAAO3uB,OACrC,GAAI0uB,EAAa,CAChB,MAAME,EAAkCF,EACxC,GAAuC,mBAA5BE,EAAgBh5B,QAC1B,IACCg5B,EAAgBh5B,UACf,MAAO1O,GACRnM,QAAQiE,KAAKkI,IAMjBslC,EAASmC,OAAS,GAGX,gCACP,OAAO,K,qIC/QT,E,KAAA,wBACA,QACA,QAIA,uBAKC,YAAsBxzC,GAAA,KAAAA,OACrBzD,KAAKm3C,YAAc,IAAI,EAAAz0B,cAAcjf,EAAKL,MAAO,wBAGlD,iBACC,OAAOpD,KAAKm3C,YAGb,iBAAiB1zC,GAChB,IAAI2zC,EAAO3zC,EAAKlF,KAChB,MAAM84C,EAAYD,EAAKA,EAAKp8C,OAAS,GAIrC,OAHK,UAAa8S,SAASupC,MAC1BD,GAAQ,KAEF,GAAGA,KAGX,uBAAuB5jC,GACtB,MAAM9S,EAASV,KAAKyD,KAAK/C,OACrBA,GAAUA,EAAO42C,oBAAsB52C,EAAO6kB,oBACjD7kB,EAAO6kB,oBAAoBgyB,eAAev3C,KAAKyD,KAAM+P,GAErDnQ,QAAQiE,KAAK,kDAGf,SAASkM,GACJA,GAAYxT,KAAKyD,KAAK5G,MACzBmD,KAAKw3C,uBAAuBhkC,GAG9B,wBAAwBA,G,MACvBxT,KAAKyD,KAAKg0C,eAAejkC,GACzBxT,KAAK03C,gBACL13C,KAAK23C,qBACD33C,KAAKyD,KAAK6zC,qBACgB,QAA7B,EAAAt3C,KAAKyD,KAAK8hB,2BAAmB,SAAEG,WAAW9jB,QAASg2C,IAClDA,EAAWl8B,gBAAgBi8B,wBAIzB33C,KAAKyD,KAAK49B,UAAUC,qBACvBthC,KAAKyD,KAAKL,MAAMy0C,yCAAyCC,6BAA6B93C,KAAKyD,MAC3FzD,KAAKyD,KAAKL,MAAM20C,uBAAuBC,iCAAiCh4C,KAAKyD,OAE9EzD,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAU0gC,cAG1B,uBAAuBC,GACtBl4C,KAAKm4C,mBAAqBn4C,KAAKm4C,oBAAsB,GACrDn4C,KAAKm4C,mBAAmB78C,KAAK48C,GAE9B,4BAA4BA,GAC3Bl4C,KAAKo4C,wBAA0Bp4C,KAAKo4C,yBAA2B,GAC/Dp4C,KAAKo4C,wBAAwB98C,KAAK48C,GAGnC,gBACC,GAAIl4C,KAAKm4C,mBACR,IAAK,IAAID,KAAQl4C,KAAKm4C,mBACrBD,IAIH,qBACC,GAAIl4C,KAAKo4C,wBACR,IAAK,IAAIF,KAAQl4C,KAAKo4C,wBACrBF,O,6FC5EJ,2BACA,4BACA,4BACA,QACA,SAEA,SAqCA,SAAYG,GAEX,0BAFD,CAAY,EAAAA,sBAAA,EAAAA,oBAAmB,KAsI/B,0BAIC,YAAoBvO,GAAA,KAAAA,SAHZ,KAAAwO,4BAAsC,EAuStC,KAAAC,0CAA4Cv4C,KAAKw4C,mCAAmC36C,KAAKmC,MAEzF,KAAAy4C,yBAAmC,EAlS3C,IAAIh6C,GACHuB,KAAK04C,iBAAmBj6C,EACxBuB,KAAKumB,SAAW,UAAiBvmB,KAAK04C,kBAEvC,KAAKC,GACJ34C,KAAK04C,iBAAmB,UAAiBC,EAAmBxkB,SAC5Dn0B,KAAKumB,SAAW,UAAiBoyB,EAAmB5sB,SAErD,WAAWlvB,EAA0BS,GACpC,OAAOrC,OAAO4iB,OAAO7d,KAAKumB,SAAU1pB,EAAMS,GAE3C,YACC,OAAO0C,KAAK8pC,OAEb,WACC,OAAO9pC,KAAK8pC,OAAOrmC,KAEpB,cACC,OAAOzD,KAAK04C,iBAEb,cACC,OAAO14C,KAAKumB,SAIb,6BACC,OAAQ,UAAevmB,KAAKumB,SAAUvmB,KAAK04C,kBAE5C,yBACC,MAAME,EAA0B,GAC1BC,EAAe59C,OAAO4W,KAAK7R,KAAKumB,UACtC,IAAK,IAAIqkB,KAAeiO,EAClB,UAAe74C,KAAKumB,SAASqkB,GAAc5qC,KAAK04C,iBAAiB9N,KACrE3vC,OAAO4iB,OAAO+6B,EAAWhO,EAAa,UAAiB5qC,KAAKumB,SAASqkB,KAGvE,OAAOgO,EAER,8BACC,OAAO39C,OAAO4W,KAAK7R,KAAK0qC,oBAIzB,6BACC,OAAO1qC,KAAKumB,SAAsC,yBAAK,EAIxD,eACC,OAAyC,MAAlCvmB,KAAKumB,SAAwB,UAAsD,MAAzCvmB,KAAKumB,SAA+B,gBAGtF,mBAIC,IAAMvmB,KAAKyD,OAAQzD,KAAKyD,KAAKL,MAAMwZ,mBAAmBk8B,OACrD,OAED,MAAMv+B,EAAWva,KAAK+4C,eACN,MAAZx+B,GACCva,KAAKyD,OAASzD,KAAKyD,KAAKoY,gBAAgBm9B,YAC3Cz+B,EAASva,KAAKyD,KAAMzD,KAAKwX,OAIpB,eACP,GAAIxX,KAAKi5C,eACR,OAAQj5C,KAAKumB,SAAwB,SACpCvmB,KAAKumB,SAAwB,UAAKvmB,KAAKk5C,8BAGlC,8BACP,MAAMC,EAAkBn5C,KAAKumB,SAA+B,gBAC5D,GAAI4yB,EAAiB,CACpB,MAAMC,EAAoB,IAAIC,SAAS,OAAQ,QAAS,SAAU,WAAYF,GAC9E,MAAO,KACNC,EAAkBp5C,KAAKyD,KAAMzD,KAAKyD,KAAKL,MAAO,KAAM,QAWvD,8BACC,IAAIk2C,EAGJ,GAA+B,MAA3Bt5C,KAAKwX,MAAMgR,aACd,OAAO,EAGR,IAAIlrB,GAAQ,EAIZ,OAHmD,OAA9Cg8C,EAAet5C,KAAKumB,SAAoB,QAC5CjpB,EAAQg8C,GAEFh8C,EAIR,4BACC,OAAO0C,KAAKumB,SAA8B,eAE3C,6BACC,OAAqC,MAA9BvmB,KAAKu5C,sBAEb,2BACC,OAAIv5C,KAAKu5C,sBACDv5C,KAAKu5C,sBAAsC,UAE3C,KAQT,iCACC,MAAMC,EAAcx5C,KAAKumB,SAAmB,WAC5C,OAAIizB,GACIA,EAAwB,eAEzB,EAIR,YACC,OAAOx5C,KAAKumB,SAAc,OAAK,EAIhC,eACC,OAA4B,MAArBvmB,KAAKy5C,aAGb,mBACC,OAAOz5C,KAAKumB,SAAa,KAQ1B,mBACC,OAAIvmB,KAAKy5C,aACDz5C,KAAKy5C,aAAoB,QAEzB,GAIT,qBACC,OAAOz5C,KAAK05C,SAIb,mBACC,OAA2C,IAApC15C,KAAKumB,SAAyB,UAEtC,eACC,OAAOvmB,KAAKumB,SAAwB,SAErC,cACC,OAAwB,MAAjBvmB,KAAK25C,SAIb,6BACC,OAAO35C,KAAKumB,SAAuB,eAEpC,6BACC,GAAIvmB,KAAK45C,uBACR,OAAO55C,KAAK45C,uBAA6C,QAI3D,0BACC,QArV8B,4BAqVC55C,KAAKumB,WAC5BvmB,KAAKumB,SAAgC,wBAO9C,YAKC,OAAOvmB,KAAKumB,SAAqB,OAAK,CAAC,EAAG,GAG3C,WACC,OAAOvmB,KAAKumB,SAAoB,MAAK,IAG9B,eAIP,OAAOvmB,KAAKumB,SAA4B,cAAK,EAAC,GAAO,GAItD,gBAAgBjpB,GACf,MAAMipC,EAAQvmC,KAAKumC,MAEnB,OAAIjpC,GAASipC,EAAM,IAAMjpC,GAASipC,EAAM,GAChCjpC,EAEHA,EAAQipC,EAAM,IACiB,IAA3BvmC,KAAKwmC,eAAe,GAAcD,EAAM,GAAKjpC,GAElB,IAA3B0C,KAAKwmC,eAAe,GAAcD,EAAM,GAAKjpC,EAMvD,eACC,OAAO0C,KAAKumB,SAAqB,QAAK,EAIvC,sBACC,OAAOvmB,KAAKumB,SAAuB,QAEpC,iBACC,MAAMszB,EAAkB75C,KAAK65C,gBAC7B,OAAuB,MAAnBA,IACoC,IAAhCA,EAA0B,IAMnC,gBACC,OAAwC,IAAjC75C,KAAKumB,SAAsB,SAAkD,IAApCvmB,KAAKs4C,2BAEtD,iBACC,OAAQt4C,KAAK85C,UAEd,kBAAkBn9B,GACjB3c,KAAKumB,SAAsB,QAAK5J,EAChC3c,KAAKwX,MAAMoQ,KAAK,EAAAC,WAAWkyB,iBAG5B,sBACC,MAAMx7C,EAAOyB,KAAKwX,MAAMjZ,KACxB,OACiC,IAAhCyB,KAAKumB,SAAqB,OAC1BhoB,IAAS,EAAAG,UAAUC,QACnBJ,IAAS,EAAAG,UAAUW,WAClBd,IAAS,EAAAG,UAAUE,SAAWoB,KAAKg6C,kBAGtC,kBACC,OAAuC,IAAhCh6C,KAAKumB,SAAqB,MAIlC,kCACC,MAjawB,eAiaIvmB,KAAKumB,SAElC,0BACC,MAAM0zB,EAAoBh/C,OAAO4W,KAAK7R,KAAKumB,SAA0B,YAAK,IACpE9iB,EAAOzD,KAAKwX,MAAM/T,KACxB,OAAO,UACNw2C,EAAkBj1C,IAAKnI,IACtB,MAAM2a,EAAQ/T,EAAK+E,OAAOtL,IAAIL,GAC9B,GAAI2a,EACH,OAAOA,EAEPnU,QAAQ2a,MACP,SAASnhB,2CAA8CmD,KAAKwX,MAAM3a,gBAAgBmD,KAAKwX,MAAM/T,KAAKlF,WAUvG,yBACC,GAAIyB,KAAKy4C,wBACR,OAEDz4C,KAAKy4C,yBAA0B,EAC/B,MAAMz9B,EAAehb,KAAKk6C,0BAC1B,GAAIl/B,EAAahgB,OAAS,EAAG,CAC5BgF,KAAKm6C,uBAAyB,IAAI,EAAAz3B,cAAc1iB,KAAKwX,MAAMpU,MAAO,oBAClE,IAAK,IAAIg3C,KAAep/B,EACvBhb,KAAKm6C,uBAAuBzxB,gBAAgB0xB,GAE7Cp6C,KAAKm6C,uBAAuB3/B,oBAC3B,sCACAxa,KAAKu4C,4CAIA,qCACPv4C,KAAKq6C,oBACLr6C,KAAKwX,MAAM6C,qBAGN,oB,mDACL,MAAM5b,EAAUuB,KAAKumB,SAA0B,WAC/C,GAAI9nB,EAAS,CACZ,MAAM+J,EAASxI,KAAKk6C,0BACd7Q,EAAW7gC,EAAOxD,IAAK/G,GAAMA,EAAEqrC,WACrCtpC,KAAKs4C,4BAA6B,QAC5BrwB,QAAQshB,IAAIF,GAClB,IAAK,IAAI7xB,KAAShP,EAAQ,CACJ/J,EAAQ+Y,EAAM3a,OACvB2a,EAAMla,QAEjB0C,KAAKs4C,4BAA6B,GAGpCt4C,KAAKwX,MAAMoQ,KAAK,EAAAC,WAAWkyB,wB,qFCjgB9B,E,KAAA,uBAMa,EAAAO,gBAAkB,IAE/B,sBAIC,YAAmB9iC,GAAA,KAAAA,QAST,KAAA+iC,4BAA8Bv6C,KAAKw6C,sBAAsB38C,KAAKmC,MAP9D,cACTA,KAAKy6C,oBAAiBl2C,EAEb,UAAUzC,GACnB9B,KAAKy6C,eAAiBz6C,KAAKy6C,gBAAkB34C,EAItC,sBAAsBkc,GACzB,UAAgBA,GACnBhe,KAAKy6C,eAAiBz8B,EAEtBhe,KAAKy6C,eAAiBz8B,EAAMlc,QAG9B,iBACC,OAA8B,MAAvB9B,KAAKy6C,eAEb,oBACC,OAAOz6C,KAAKy6C,eAEb,QACCz6C,KAAKy6C,oBAAiBl2C,EAGvB,cAAcd,GACb,MAAMi3C,EAAc,YAAYj3C,EAAKlF,OAErC,GADgByB,KAAa06C,GAE5B,OAAQ16C,KAAa06C,GAAaj3C,GAElCzD,KAAK26C,UAAU,iCAAiCl3C,EAAKlF,QAiC7C,0BAA0BkF,GACnC,MAAO,GAAGzD,KAAK46C,cAAcn3C,EAAKo3C,SAASp3C,EAAKq3C,YAAY96C,KAAK46C,cAAcn3C,EAAKs3C,SAE3E,2BAA2Bt3C,GAEpC,MAAO,GAAGzD,KAAK46C,cAAcn3C,EAAKo3C,SAASp3C,EAAKq3C,YAAY96C,KAAK46C,cAAcn3C,EAAKs3C,SAE3E,0BAA0Bt3C,GACnC,MAAO,GAAGzD,KAAK46C,cAAcn3C,EAAK1F,WAAWiC,KAAK46C,cAAcn3C,EAAKzF,YAE5D,+BAA+ByF,GACxC,MAAO,IAAIzD,KAAK46C,cAAcn3C,EAAKmK,aAAa5N,KAAK46C,cAAcn3C,EAAKu3C,mBAAmBh7C,KAAK46C,cAC/Fn3C,EAAKw3C,cAMG,kBAAkBx3C,GAC3B,MAAMoU,EAAOpU,EAAKsqC,KAClB,IAAImN,EAAiB,GACrB,IAAK,IAAIpgD,EAAI,EAAGA,EAAI+c,EAAK7c,OAAQF,IAAK,CACrC,MAAMqgD,EAAWtjC,EAAK/c,GACD,cAAjBqgD,EAAS58C,KACP48C,EAA6Bt+C,KAAK,IAAM,EAAAy9C,gBAC5CY,EAAe5/C,KAAK,MAAQ0E,KAAK46C,cAAcO,GAAY,MAE3DD,EAAe5/C,KAAK,IAAK6/C,EAA6Bt+C,SAGvDq+C,EAAe5/C,KAAK,MAAQ0E,KAAK46C,cAAcO,GAAY,MAG7D,OAAOD,EAAeh2C,KAAK,OAmBlB,iBAAiBzB,GAC1B,MAAO,GAAGA,EAAK23C,S,2FCnIJ,EAAAC,cAAgBpgD,OAAOqgD,gBAAe,W,0DAAsBvnC,a,2FCAzE,2BAEA,QAIA,SACA,QAGA,SACA,SAEA,MAAawnC,UAAoB,EAAAj1B,WAChC,cACC,OAAO,EAAA5nB,UAAUY,OAElB,+BACC,OAAOU,KAAK4S,cAEH,iBAAiB4U,GAC1B,MAAO,GAAGA,IAEX,2BACC,MAAO,GAAGxnB,KAAKqnB,aAEhB,uBACC,MAAO,GAAGrnB,KAAK1C,QAEhB,2BACC27B,EACAC,GAEA,OAAOD,GAAcC,EAEtB,wBAAwBjS,EAA4CC,GACnE,OAAOD,GAAQC,EAEhB,iBACC,OAAOlnB,KAAKqnB,YAAcrnB,KAAK4S,cAGhC,QAAQoU,GACP,OAAI,UAAgBA,GACZA,EAED,GAAGA,IAGX,gBACC,OAAOhnB,KAAKqnB,WAEH,oBACTrnB,KAAK8xB,OAAO9T,MAAML,QAEd3d,KAAKw7C,gBAAgBx7C,KAAKqnB,YAAYrsB,QAAU,GACnDgF,KAAK6mB,uBAAyB7mB,KAAK6mB,wBAA0B,IAAI,EAAAwpB,qBAAqBrwC,MAClFA,KAAKqnB,YAAcrnB,KAAK6mB,uBAAuBypB,aAClDtwC,KAAK6mB,uBAAuBqpB,eAAelwC,KAAKqnB,YAChDrnB,KAAKma,YACLna,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWsoB,sBAGlCnwC,KAAKqnB,YAAcrnB,KAAK+mB,SAC3B/mB,KAAK+mB,OAAS/mB,KAAKqnB,WACnBrnB,KAAKqa,qBACLra,KAAKoa,qBAAqBpa,MAC1BA,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWyR,eACjCt5B,KAAK6mB,yBACR7mB,KAAK6mB,uBAAuBqpB,oBAAe3rC,GAAW,GACtDvE,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWsoB,sBAKzB,sB,yDACf,IAA8B,QAA1B,EAAAnwC,KAAKopB,6BAAqB,eAAE3oB,UAAWT,KAAKopB,sBAAsBmnB,kBAAmB,CACxF,MAAMC,QAA0BxwC,KAAKopB,sBAAsBqnB,qBAC3D,GAAIzwC,KAAKopB,sBAAsBsnB,WAC9B1wC,KAAK8xB,OAAO9T,MAAMzd,IAAI,qBAAqBP,KAAKopB,sBAAsBgW,qBAChE,CACN,MAAM4Q,EAAYhwC,KAAKiwC,QAAQO,GAGd,MAAbR,GACHhwC,KAAK+mB,OAASipB,EACdhwC,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWyR,gBAErCt5B,KAAK8xB,OAAO9T,MAAMzd,IAAI,uCAAuCiwC,MAE9DxwC,KAAKqa,0BAKA,gBAAgBpV,GACvB,OAAO,EAAAw2C,WAAWC,sBAAsBz2C,IAnF1C,iB,oFCdA,E,KAAA,wBAEA,QAEA,QAEA,QAEA,SAEa,EAAA02C,0CAA4C,CACxD,EAAA93C,oBAAoB/E,MACpB,EAAA+E,oBAAoBI,KACpB,EAAAJ,oBAAoBK,KACpB,EAAAL,oBAAoBM,MAGrB,aACA,MAAMy3C,UAAgC,EAAA9yC,iBAAtC,c,oBACC,KAAAjM,KAAO,EAAA0hB,YAAYjf,OAAO,IAC1B,KAAAf,KAAO,EAAAggB,YAAYvf,QAAQ,EAAG,CAC7B2lC,KAAM,CACLC,QAAS,EAAA+W,0CAA0C32C,IAAI,CAACnI,EAAM/B,KACtD,CAAC+B,KAAMA,EAAMS,MAAOxC,SAK/B,MAAMiO,EAAe,IAAI6yC,EAEzB,MAAarb,UAAwB,EAAA55B,YAArC,c,oBACC,KAAAqC,cAAgBD,EAOR,KAAA8yC,kCAAoC77C,KAAK87C,4BAA4Bj+C,KAAKmC,MAElE,KAAA8L,0BAAqD,IAAI,EAAAiwC,wBAAwB/7C,MARjG,cACC,MAAO,YAQR,kBACCA,KAAKwa,oBAAoB,wBAAyBxa,KAAKg8C,sCAAsCn+C,KAAKmC,OAClGA,KAAKqhC,UAAUqQ,mBAAmB1xC,KAAK67C,mCACvC77C,KAAK8L,0BAA0B1E,kBAE/BpH,KAAK8L,0BAA0BC,kCAAkC,IAAM,IACvE/L,KAAK8L,0BAA0BG,mCAAmC,IAAM,CACvE,EAAA0vC,0CAA0C37C,KAAK4f,GAAGrhB,QAMpD,gB,OACuB,QAAtB,EAAIyB,KAAKuD,qBAAa,eAAEgE,qBAAqBy2B,4BAC5Ch+B,KAAKklB,UAAU,EAAAxmB,UAAUE,QAAS,wBAAyB,GAO7D,iBACC,OAAO2hC,EAAgB0b,WAExB,kBACC,OAAO1b,EAAgB2b,YAaxB,UAAUzzC,G,MAES,QAAlB,EAAAzI,KAAKuD,qBAAa,SAAEgE,qBAAqBypB,UAAUmrB,yBAClDn8C,KACAyI,GAeF,qBACC,OAAO,UAAYzI,KAAK4f,GAAG/iB,MAE5B,UACC,OAAOmD,KAAKa,GAAGC,QAAQmH,+BAA+B,GAAG1J,KAO1D,uBAEC,OAAOyB,KAAKa,GAAG6G,OAAO6rB,YAAYgN,EAAgB0b,YAGnD,mCACC,OAAOj8C,KAAKa,GAAG6G,OAAO00C,6BAA6B7b,EAAgB0b,YAQpE,0BAEC,OAAOj8C,KAAKa,GAAGC,QAAQo/B,uCAAuClgC,KAAKszB,YASpE,mBACC,OAAOtzB,KAAKa,GAAGC,QAAQq0B,oBAAoBn6B,OAAS,EAErD,mBACC,GAAIgF,KAAK4f,GAAGy8B,sBAAuB,CAElC,OAAqB,MADFr8C,KAAKa,GAAG6G,OAAO6rB,YAAYgN,EAAgB0b,YAG9D,OAAO,EAGD,wCACHj8C,KAAKs8C,cACRt8C,KAAKu8C,wBAQC,8BACa,IAAhBv8C,KAAK4f,GAAG/iB,MACXmD,KAAK/B,EAAEpB,KAAK0D,IAAIP,KAAKnD,OAhIxB,oBAKiB,EAAAo/C,WAAa,SACb,EAAAC,YAAc,O,8ECjC/B,eAIA,SAEA,SACA,SACA,SACA,SAGA,SACA,SACA,SACA,SAEA,6BACC,qBAAqBz4C,GAIpB,OAAO,IAAI,EAAA+4C,iBAAiB/4C,GAG7B,sBAAsB+T,GAIrB,OAAIA,aAAiB,EAAAu4B,kBACb,IAAI,EAAA0M,yBAAyBjlC,GAEjCA,aAAiB,EAAAklC,kBACb,IAAI,EAAAC,8BAA8BnlC,GAEtCA,aAAiB,EAAA+jC,YACb,IAAI,EAAAqB,wBAAwBplC,GAEhCA,aAAiB,EAAAtY,UACb,IAAI,EAAA29C,sBAAsBrlC,GAE3B,IAAI,EAAAslC,kBAAkBtlC,M,8EC1C/B,cAEA,SAcA,0BAEC,YAAoBkC,GAAA,KAAAA,SADZ,KAAAqjC,MAA+B,GAGvC,OACC/8C,KAAK0Z,OAAOsjC,iBAAiBC,gCAC7B,MAAMC,EAAgB,EAAA5d,qBAAqB6d,cAAcn9C,KAAK0Z,OAAOoD,MAC/DsgC,EAAaF,EAAc1iD,OAC3ByM,EAAUi2C,EAAcj2C,UAgB9B,OAdAjH,KAAK+8C,MAAQ,CAEZM,WAAY,CAEXC,MAAOt9C,KAAK0Z,OAAO4jC,OAAS,EAC5BC,YAAav9C,KAAK0Z,OAAO6jC,YACzBC,mBAAoBx9C,KAAK0Z,OAAO+jC,gBAAgBD,mBAEhDE,wBAAyB19C,KAAK0Z,OAAOikC,mBAAmBD,yBAEzD5gC,KAAMsgC,EACNQ,GAAI32C,GAGEjH,KAAK+8C,MAGb,uBAAuBtvC,GAGtB,OAFAA,EAAOA,EAAKQ,QAAQ,KAAM,KAC1BR,EAAO,EAAA7I,WAAWi5C,mBAAmBpwC,M,8EC/CvC,SAAYkgC,GACX,8CACA,kBACA,cAHD,CAAY,EAAAA,WAAA,EAAAA,SAAQ,M,+ECEpB,qBACC,yBAAyBlqC,GAExB,OADcA,EAAKmiB,cAAc,UAOlC,mCAAmCniB,GAElC,OADcA,EAAKmiB,cAAc,aACpBiE,OAAQpmB,GAGbA,EAAK64C,iB,2FCdf,SAGA,SAEA,OACA,MAAMwB,UAAqC,EAAAh1C,iBAA3C,c,oBACC,KAAAi1C,UAAY,EAAAx/B,YAAY3f,QAAQ,GAChC,KAAAo/C,aAAe,EAAAz/B,YAAY3f,QAAQ,GACnC,KAAAq/C,WAAa,EAAA1/B,YAAY3f,QAAQ,GACjC,KAAAs/C,SAAW,EAAA3/B,YAAY3f,QAAQ,GAC/B,KAAAu/C,QAAU,EAAA5/B,YAAYzf,MAAM,GAAK,CAChC2wB,WAAY,CAACyuB,UAAU,KAExB,KAAAE,qBAAuB,EAAA7/B,YAAY3f,QAAQ,GAC3C,KAAAy/C,aAAe,EAAA9/B,YAAYzf,MAAM,IACjC,KAAAw/C,aAAe,EAAA//B,YAAYzf,MAAM,EAAG,CACnCynC,MAAO,CAAC,EAAG,KACXC,aAAc,EAAC,GAAM,KAEtB,KAAA+X,aAAe,EAAAhgC,YAAYzf,MAAM,GAAI,CACpCynC,MAAO,CAAC,EAAG,KACXC,aAAc,EAAC,GAAM,KAEtB,KAAAgY,kBAAoB,EAAAjgC,YAAYhf,QAAQ,CAAC,EAAG,SAE7C,MAAMwJ,EAAe,IAAI+0C,EAEzB,MAAaW,UAAqC,EAAAC,6BAAlD,c,oBACC,KAAA11C,cAAgBD,EAChB,cACC,MAAO,wBAMF,yBAAyBuU,EAAgB1N,G,mDAK9C,OADiB,IAAI,EAAA+uC,cAAcrhC,EAAQ1N,MAI5C,eAAegvC,GACdA,EAASC,UAAY7+C,KAAK4f,GAAGm+B,UAC7Ba,EAASE,aAAe9+C,KAAK4f,GAAGo+B,aAChCY,EAASG,WAAa/+C,KAAK4f,GAAGq+B,WAE9BW,EAASI,cAAgBh/C,KAAK4f,GAAGs+B,SACjCU,EAASK,cAAgBj/C,KAAK4f,GAAGu+B,QAEjCS,EAASM,YAAcl/C,KAAK4f,GAAGy+B,aAE/BO,EAASO,mBAAqBn/C,KAAK4f,GAAGw+B,qBAEtCQ,EAASQ,YAAcp/C,KAAK4f,GAAG0+B,aAC/BM,EAASS,YAAcr/C,KAAK4f,GAAG2+B,aAE/BK,EAASU,cAAgBt/C,KAAK4f,GAAG4+B,kBAAkBl5C,EACnDs5C,EAASW,cAAgBv/C,KAAK4f,GAAG4+B,kBAAkBj5C,EAGnDq5C,EAASY,YAAa,EAGvB,qBAAqBZ,EAA0B9O,GAC9C,MAAM2P,EAAS3P,EAAYtnC,OAAOnD,QAAQ,UAC1Cu5C,EAASa,OAAO3/B,KAAK2/B,IAzCvB,kC,4FC9BA,SAGA,SAGA,OACA,QAUA,iCAAiEphC,GAChE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAsZ,QAAU,EAAApZ,YAAY3f,QAAQ,GAC9B,KAAAoG,IAAM,EAAAuZ,YAAYtf,cAAc,EAAA64B,YAAYC,kBAAkBC,GAAI,CAACvI,WAAY,CAACkI,QAAS,QAuB3F,+BAAoC+nB,GACnC,MAAO,CACN7f,MAAM,EACNtlB,SAAU,CAAC9W,EAAoB+T,KAC9BkoC,EAAiBnnB,OAAO90B,MAI3B,+BAAoCk8C,EAA6CC,GAChF,MAAO,CACNnwB,WAAY,CAAC,CAACmwB,GAAe,GAC7BzY,eAAgB,CAACC,QAAS,EAAAhnC,YAAYi9B,KACtCwC,MAAM,EACNtlB,SAAU,CAAC9W,EAAoB+T,KAC9BmoC,EAAWpnB,OAAO90B,MAwBrB,MAAay0B,UAAiC,EAAAvI,eAC7C,YAAsBlsB,EAAiC00B,GACtDlyB,MAAMxC,GADe,KAAAA,OAAiC,KAAA00B,kBAEnB,MAA/Bn4B,KAAKm4B,gBAAgB0V,SACxB7tC,KAAKm4B,gBAAgB0V,QAAS,GAItB,UAAUgS,EAA6BC,GAChDD,EAAcrlC,oBAAoB,oBAAqB,KACtDxa,KAAKu4B,WAENunB,EAAWtlC,oBAAoB,oBAAqB,KACnDxa,KAAKu4B,WAGP,cAAc90B,IAER,QACLN,EACA48C,EACAF,EACAC,G,mDAEA,GAAI9/C,KAAKm4B,gBAAgB5F,SAAU,CAClC,MAAMytB,EAAkB78C,EAClB88C,EAAYF,QACZ//C,KAAKkgD,4BAA4BF,EAAiBC,EAAWJ,EAAeC,GAEnF,GAAI9/C,KAAKm4B,gBAAgBgoB,cAAe,CACvC,MAAM/Q,EAAMjsC,EACN88C,EAAYF,QACZ//C,KAAKogD,4BAA4BhR,EAAK6Q,EAAWJ,EAAeC,OASlE,4BACL38C,EACA48C,EACAF,EACAC,G,mDAEA9/C,KAAKqgD,2BACJl9C,EACAA,EAASovB,SACTwtB,EACAF,EACAC,EACA9/C,KAAKsgD,2BAA2BziD,KAAKmC,MACrCA,KAAKugD,8BAA8B1iD,KAAKmC,UAGlC,2BACPmD,EACAovB,EACAwtB,EACAjmB,GAEA,MAAM0mB,EAA2C,MAA7BjuB,EAASwtB,IAA+D,MAAnCxtB,EAASwtB,GAAiBziD,MACnF,IAAImjD,GAA2B,EAC/B,GAAID,EAAa,CAC2BjuB,EAASwtB,GAAiBziD,MACjD+T,MAAQyoB,EAAQzoB,OACnCovC,GAA2B,GAG7B,IAAKD,GAAeC,EAA0B,CAE7C,GADAluB,EAASwtB,GAAiBziD,MAAQw8B,EAC9B95B,KAAK0gD,oBAAqB,CAC7B,MAAMC,EAAc3gD,KAAK4gD,aAAa,GAAGb,KACzC58C,EAAS09C,QAAQF,GAAe,EAEjCx9C,EAAS09C,QAAgB,OAAI,EAC7B19C,EAAS6sB,aAAc,GAGjB,8BACP7sB,EACAovB,EACAwtB,GAEA,GAAIxtB,EAASwtB,GAAiBziD,MAAO,CAEpC,GADAi1B,EAASwtB,GAAiBziD,MAAQ,KAC9B0C,KAAK0gD,oBAAqB,CAC7B,MAAMC,EAAc3gD,KAAK4gD,aAAa,GAAGb,YAClC58C,EAAS09C,QAAQF,GAEzBx9C,EAAS6sB,aAAc,GAGjB,aAAa+vB,GACpB,MAAO,OAASA,EAAgB9xC,QAAQ,IAAK,IAAI6yC,cAQ5C,4BACL39C,EACA48C,EACAF,EACAC,G,mDAEA9/C,KAAKqgD,2BACJl9C,EACAA,EACA48C,EACAF,EACAC,EACA9/C,KAAK+gD,2BAA2BljD,KAAKmC,MACrCA,KAAKghD,8BAA8BnjD,KAAKmC,UAGlC,2BACPmD,EACA89C,EACAlB,EACAjmB,GAEA,MAAM0mB,EAAgD,MAAlCS,EAAclB,GAClC,IAAIU,GAA2B,EAC/B,GAAID,EAAa,CAC2BS,EAAclB,GACrC1uC,MAAQyoB,EAAQzoB,OACnCovC,GAA2B,GAGxBD,IAAeC,IACnBQ,EAAclB,GAAmBjmB,EACjC32B,EAAS6sB,aAAc,GAGjB,8BACP7sB,EACA89C,EACAlB,GAEIkB,EAAclB,KACjBkB,EAAclB,GAAmB,KACjC58C,EAAS6sB,aAAc,GASX,2BACb7sB,EACA89C,EACAlB,EACAF,EACAC,EACAoB,EACAC,G,mDAOA,GALItB,EAAcvlC,iBACXulC,EAAcvW,WAEIuW,EAAcviD,MAE1B,CACRwiD,EAAWxlC,iBACRwlC,EAAWxW,WAGlB,MAAMd,EAAasX,EAAWtX,aAC9B,GAAIA,EACH,GAAIA,EAAW7jB,gBAAkB,EAAAvkB,YAAYi9B,IAAK,CACjD,MAAM+jB,EAAe5Y,EAGf1O,SADkBsnB,EAAanpC,qBACX6hB,UAE1B,GAAIA,EAEH,YADAonB,EAAgB/9C,EAAU89C,EAAelB,EAAiBjmB,GAG1D95B,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,kCAG5BP,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,yCAG5BP,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,2BAA2Bu/C,EAAWjjD,kBAAkBijD,EAAWxiD,SAKhG6jD,EAAgBh+C,EAAU89C,EAAelB,MAGlC,oBACP,OAAmC,MAA/B//C,KAAKm4B,gBAAgB0V,QAGlB7tC,KAAKm4B,gBAAgB0V,QA5M9B,8B,8ECjFA,eAEA,SACA,SACA,SAEMwT,EAAoC,IAAIhxB,IAAI,IAKlDgxB,EAAc9gD,IAAI,EAAA0vB,mBAAmBqxB,SAAU,EAAAC,mCAC/CF,EAAc9gD,IAAI,EAAA0vB,mBAAmBuxB,MAAO,EAAAC,gCAC5CJ,EAAc9gD,IAAI,EAAA0vB,mBAAmByxB,UAAW,EAAAC,mCAEhD,MAAsBC,UAA4B,EAAA1xB,wBAIjD,wCACC,OAAOmxB,GALT,yB,2FCfA,QAEA,OAEA,QAGA,MAAsBlP,UAAuE,EAAAh2B,aAA7F,c,oBACiB,KAAAjc,MAA0B,IAAI,EAAAypB,iBAAiB3pB,MAC/C,KAAAqc,aAAuB,EAAAH,mBAAmBif,MAChD,KAAA0mB,sBAAwB,IAAI,EAAA13C,MAAM,GAMlC,KAAAsS,gBAA0B,EAc5B,KAAAnB,2CAA6Ctb,KAAKub,qCAAqC1d,KAAKmC,MAlBpG,YACC,OAAOA,KAAK8hD,OAIb,uBACC77C,MAAMwV,uBAENzb,KAAK8hD,OAAS9hD,KAAK+hD,eACnB/hD,KAAKjC,OAAOkf,IAAIjd,KAAK8hD,QACrB9hD,KAAKE,MAAMI,QAAQE,SAAS,KAC3BR,KAAKgiD,4BAENhiD,KAAKkf,iBAAiB1E,oBACrB,uCACAxa,KAAKsb,4CAIO,uC,yDAEPtb,KAAK6b,gBAAgBC,8BAGpB,0BACH9b,KAAKE,MAAMI,QAAQG,QACtBT,KAAKjC,OAAOkf,IAAIjd,KAAKkzC,OACrBlzC,KAAKub,wCAELvb,KAAKjC,OAAOmf,OAAOld,KAAKkzC,OAS1B,4BACC,GAA0B,MAAtBlzC,KAAK8hD,OAAOG,OACf,OAAOjiD,KAAKkiD,uBAIJ,uBACA,uBAEA,wBAiBV,OACCliD,KAAKoyC,sBACLpyC,KAAKqyC,uBACLryC,KAAK6b,gBAAgByJ,WAGtB,wBAaA,2BACC,MAAMzb,EAAQ7J,KAAKwI,OAAOqB,MAAM,SAC1Bs4C,EAAYniD,KAAKwI,OAAOs9B,MAAM,aAEpC,OADA9lC,KAAK6hD,sBAAsB/hC,KAAKjW,GAAOkW,eAAeoiC,GAC/CniD,KAAK6hD,sBAEb,aACC,OAAO7hD,KAAKE,MAAMI,QAAQG,QA/F5B,uB,2FCPA,OACA,OAGA,OAQA,QAEA,SACA,QAEA,SACA,QAEA,4BACA,2BACA,2BACA,2BACA,SAeA,MAAa2hD,UAAmB,EAAAC,WAC/B,YAAoBllC,EAAmB/a,GACtC6D,MAAM7D,GADa,KAAA+a,UAEsB,MAArCnd,KAAKmd,QAAQzL,SAAmB,aACnC1R,KAAKmd,QAAQzL,SAAmB,WAAI,IAQtC,SACC,OAAO1R,KAAKmd,QAEb,WACC,OAAQnd,KAAKmd,QAAiB3b,SAE/B,gBACC,MAAM8gD,EAAMtiD,KAAKwB,WACjB,OAAI8gD,EACI,IAAI,EAAAnxC,aAAamxC,GAEjB,KAST,S,MACC,OAA2B,QAApB,EAAAtiD,KAAK4W,uBAAe,eAAEpC,WAAY,GAE1C,kBAAkB+tC,GACjB,GAAIA,EAAO,CACV,MAAM3+C,EAAU,EAAAgB,WAAWhB,QAAQ2+C,GACnC,GAAI3+C,EAAS,CACZ,MAAM4Q,EAASxU,KAAKwU,SACpB,OAAO5Q,EAAQoB,IAAKlK,GAAM0Z,EAAO1Z,IAEjC,MAAO,GAGR,OAAOkF,KAAKwU,SAId,yB,MACqB,QAApB,EAAAxU,KAAK4W,uBAAe,SAAE4rC,yBAGvB,cAAc3lD,EAAcS,GAC3B,IAAI9C,EAIHA,EAHI,UAAgB8C,IAAW,UAAeA,IAAW,UAAgBA,GAGlEA,EAFCA,EAAkByH,UAI3B/E,KAAKmd,QAAQzL,SAAmB,WAAE7U,GAAQrC,EAE3C,mBAAmBqC,EAAcS,GAChC0C,KAAKyiD,cAAc5lD,EAAMS,GAE1B,iBAAiBT,EAAcS,GAC9B0C,KAAKyiD,cAAc5lD,EAAMS,GAE1B,0BAA0BT,EAAc2N,EAAcoI,G,MAChC,MAAjBA,IACHA,EAAgB,EAAAb,cAAca,cAAcpI,IAEzB,QAApB,EAAAxK,KAAK4W,uBAAe,SAAEtD,mBAAmBzW,EAAM2N,EAAMoI,GAGtD,kBAEC,OAAO3X,OAAO4W,KAAK7R,KAAKmd,QAAQzL,SAAmB,YAEpD,eACC,OAAO1R,KAAK0iD,kBAGb,WAAW7lD,GACV,OAAOmD,KAAK0iD,kBAAkBC,SAAS9lD,GAGxC,iBAAiB0W,EAAkBC,GAClCxT,KAAKyiD,cAAcjvC,EAAUxT,KAAKsV,aAAa/B,IAC/CvT,KAAK4iD,iBAAiBrvC,GAGvB,iBAAiB1W,UACTmD,KAAKmd,QAAQzL,SAAmB,WAAE7U,GAG1C,aAAaA,GACZ,GA/GY,UA+GRA,EACH,OAAOmD,KAAKoC,MACN,CACN,IAAIqM,EAAMzO,KAAKmd,QAAQzL,SAAmB,WAAE7U,GAM5C,OALW,MAAP4R,GAlHW,QAmHV5R,IACH4R,EAAMzO,KAAKmd,QAAQtgB,MAGd4R,GAGT,OACC,OAAOzO,KAAKsV,aA3HI,QA6HjB,aACC,OAAO,EAAA7S,aAAa4I,sCAAsCrL,KAAKmd,QAAQpJ,YAAYlX,MAGpF,YAAYA,GACX,MAAM4R,EAAMzO,KAAKsV,aAAazY,GAC9B,OAAI,UAAgB4R,GACZ,EAAAhM,aAAa0I,YAAY7L,OAEzB,EAAAmD,aAAa0I,YAAYF,QAIlC,YAAYpO,GACX,MAAM4R,EAAMzO,KAAKsV,aAAazY,GAC9B,GAAW,MAAP4R,EACH,OAAO,EAGR,GAAI,UAAgBA,IAAQ,UAAgBA,GAC3C,OAAO,EAEP,OAAQA,EAAIsF,aACX,KAAK,EAAA4iB,QACJ,OAAO,EACR,KAAK,EAAAvjB,QACJ,OAAO,EACR,QACC,OAAO,GAKX,QACC,OAAOgvC,EAAWr/C,MAAM/C,KAAKmd,SAG9B,aAAa0lC,GACZ,MAAMC,EAAaD,EAAW9/C,QAE9B,IAAIggD,EAAe,IAAI1yB,IACnB2yB,EAAc,IAAI3yB,IA0DtB,OAzDA+xB,EAAWa,iBAAiBJ,EAAYC,GAAY,SAAUI,EAAsBC,GACnFJ,EAAaxiD,IAAI4iD,EAAYD,GAC7BF,EAAYziD,IAAI2iD,EAAYC,MAE7BL,EAAWM,UAAS,SAAU3/C,GAC7B,MAAM4/C,EAAWN,EAAa7lD,IAAIuG,GAC5B6/C,EAAY7/C,EAElB,GAAI6/C,EAAU9hD,SAAU,CACvB,MAAM+hD,EAAoBF,EAAS7hD,SACnC8hD,EAAU9hD,SAAW,EAAA2P,aAAapO,MAAMwgD,GACxC,MAAMC,EAAqBF,EAAU9hD,SACjCgiD,EAAmB9xC,WACtB8xC,EAAmB9xC,SAAW,UAAiB6xC,EAAkB7xC,WAGnE,GAAI4xC,EAAUngD,SAAU,CACvBmgD,EAAUngD,SAAWkgD,EAASlgD,SAC9B,EAAAK,aAAaigD,uBAAuBhgD,EAAM6/C,EAAUngD,UAIpD,MAAMugD,EAAsBJ,EAAUngD,SACL,MAA7BugD,EAAoB75C,QACvB65C,EAAoB75C,MAAQ,IAAI,EAAAM,MAAM,EAAG,EAAG,IAG1C04C,EAAWnxC,WACdjO,EAAKiO,SAAW,UAAiB2xC,EAAS3xC,WAG3C,MAAMiyC,EAAqCN,EACvCM,EAAyBC,aAC3BngD,EAAgCmgD,WAAaD,EAAyBC,WAAW5+C,IAAK6+C,GACtFA,EAAU9gD,UAIZ,MAAM+gD,EAAergD,EACrB,GAAIqgD,EAAaC,cAAe,CAC/B,IAAIC,EAAaF,EACbG,EAAaZ,EACba,EAAcD,EAAWE,SAASC,MAEtCJ,EAAWG,SAAWF,EAAWE,SAASphD,QAC1CihD,EAAWK,WAAWvkC,KAAKmkC,EAAWI,YAEtC,MAAMC,EAAYJ,EAAYl/C,KAAI,SAAUu/C,GAC3C,OAAOvB,EAAY9lD,IAAIqnD,MAGxBP,EAAWG,SAASC,MAAQE,EAE5BN,EAAWnmD,KAAKmmD,EAAWG,SAAUH,EAAWK,gBAI3CvB,EAGR,wBAAwB5yC,EAAaC,EAAaoK,GACjDA,EAASrK,EAAGC,GACZ,IAAK,IAAIrV,EAAI,EAAGA,EAAIoV,EAAEwV,SAAS1qB,OAAQF,IACtCkF,KAAKijD,iBAAiB/yC,EAAEwV,SAAS5qB,GAAIqV,EAAEuV,SAAS5qB,GAAIyf,IAzNvD,gB,6BCvCA,mHAcIvD,EAAsB,CAEzBwtC,gBAAiB,SAAWhjD,GAE3B,IAAIY,EAAQZ,EAASY,MACjB8P,EAAa1Q,EAAS0Q,WAK1B,GAAe,OAAV9P,QACqBmC,IAAxB2N,EAAWkC,eACW7P,IAAtB2N,EAAWuyC,aACOlgD,IAAlB2N,EAAWyb,GAHb,CAUA,IAAI/pB,EAAUxB,EAAMG,MAChB03B,EAAY/nB,EAAWkC,SAAS7R,MAChCmiD,EAAUxyC,EAAWuyC,OAAOliD,MAC5BoiD,EAAMzyC,EAAWyb,GAAGprB,MAEpBqiD,EAAY3qB,EAAUj/B,OAAS,OAEPuJ,IAAvB2N,EAAW2yC,SAEfrjD,EAASkR,aAAc,UAAW,IAAI,kBAAiB,IAAIynB,aAAc,EAAIyqB,GAAa,IAQ3F,IAJA,IAAIE,EAAW5yC,EAAW2yC,QAAQtiD,MAE9BwiD,EAAO,GAAIC,EAAO,GAEZlqD,EAAI,EAAGA,EAAI8pD,EAAW9pD,IAE/BiqD,EAAMjqD,GAAM,IAAI,UAChBkqD,EAAMlqD,GAAM,IAAI,UAIjB,IAAImqD,EAAK,IAAI,UACZC,EAAK,IAAI,UACTC,EAAK,IAAI,UAETC,EAAM,IAAI,UACVC,EAAM,IAAI,UACVC,EAAM,IAAI,UAEVC,EAAO,IAAI,UACXC,EAAO,IAAI,UAqCRC,EAASjkD,EAASikD,OAEC,IAAlBA,EAAOzqD,SAEXyqD,EAAS,CAAE,CACVC,MAAO,EACPn5C,MAAO3I,EAAQ5I,UAKPF,EAAI,EAAd,IAAM,IAAW6qD,EAAKF,EAAOzqD,OAAQF,EAAI6qD,IAAO7qD,EAO/C,IALA,IAKUkB,EAHN0pD,GAFAnD,EAAQkD,EAAQ3qD,IAEF4qD,MAGGE,EAAKF,EAFdnD,EAAMh2C,MAEuBvQ,EAAI4pD,EAAI5pD,GAAK,EAErD6pD,EACCjiD,EAAS5H,EAAI,GACb4H,EAAS5H,EAAI,GACb4H,EAAS5H,EAAI,IAOhB,IAEIyJ,EAAGlI,EAAGqQ,EAFNk4C,EAAM,IAAI,UAAWC,EAAO,IAAI,UAChCjoD,EAAI,IAAI,UAAWkoD,EAAK,IAAI,UA4BhC,IAAUlrD,EAAI,EAAG6qD,EAAKF,EAAOzqD,OAAQF,EAAI6qD,IAAO7qD,EAE/C,KAAIynD,EAEAmD,EAGJ,IAAU1pD,EAHN0pD,GAFAnD,EAAQkD,EAAQ3qD,IAEF4qD,MAGGE,EAAKF,EAFdnD,EAAMh2C,MAEuBvQ,EAAI4pD,EAAI5pD,GAAK,EAErDiqD,EAAcriD,EAAS5H,EAAI,IAC3BiqD,EAAcriD,EAAS5H,EAAI,IAC3BiqD,EAAcriD,EAAS5H,EAAI,UAjJ5BqH,QAAQiE,KAAM,yHAwCf,SAASu+C,EAAgB31C,EAAGC,EAAGxT,GAE9BsoD,EAAGiB,UAAWjsB,EAAe,EAAJ/pB,GACzBg1C,EAAGgB,UAAWjsB,EAAe,EAAJ9pB,GACzBg1C,EAAGe,UAAWjsB,EAAe,EAAJt9B,GAEzByoD,EAAIc,UAAWvB,EAAS,EAAJz0C,GACpBm1C,EAAIa,UAAWvB,EAAS,EAAJx0C,GACpBm1C,EAAIY,UAAWvB,EAAS,EAAJhoD,GAEpBuoD,EAAGh2B,IAAK+1B,GACRE,EAAGj2B,IAAK+1B,GAERI,EAAIn2B,IAAKk2B,GACTE,EAAIp2B,IAAKk2B,GAET,IAAIjoD,EAAI,GAAQkoD,EAAI//C,EAAIggD,EAAI//C,EAAI+/C,EAAIhgD,EAAI+/C,EAAI9/C,GAIrC4gD,SAAUhpD,KAEjBooD,EAAKzlC,KAAMolC,GAAKnlC,eAAgBulC,EAAI//C,GAAI6gD,gBAAiBjB,GAAME,EAAI9/C,GAAIwa,eAAgB5iB,GACvFqoD,EAAK1lC,KAAMqlC,GAAKplC,eAAgBslC,EAAI//C,GAAI8gD,gBAAiBlB,GAAMI,EAAIhgD,GAAIya,eAAgB5iB,GAEvF4nD,EAAM70C,GAAI+M,IAAKsoC,GACfR,EAAM50C,GAAI8M,IAAKsoC,GACfR,EAAMpoD,GAAIsgB,IAAKsoC,GAEfP,EAAM90C,GAAI+M,IAAKuoC,GACfR,EAAM70C,GAAI8M,IAAKuoC,GACfR,EAAMroD,GAAIsgB,IAAKuoC,IAsChB,SAASS,EAAchhD,GAEtBnH,EAAEooD,UAAWxB,EAAa,EAAJz/C,GACtB+gD,EAAGlmC,KAAMhiB,GAETP,EAAIwnD,EAAM9/C,GAIV6gD,EAAIhmC,KAAMviB,GACVuoD,EAAI52B,IAAKpxB,EAAEiiB,eAAgBjiB,EAAEuoD,IAAK9oD,KAAQ+kB,YAI1CyjC,EAAKO,aAAcN,EAAIzoD,GACvBqQ,EAAOm4C,EAAKM,IAAKrB,EAAM//C,IACvBQ,EAAMmI,EAAO,GAAU,EAAM,EAE7Bk3C,EAAc,EAAJ7/C,GAAU6gD,EAAIxgD,EACxBw/C,EAAc,EAAJ7/C,EAAQ,GAAM6gD,EAAIvgD,EAC5Bu/C,EAAc,EAAJ7/C,EAAQ,GAAM6gD,EAAItgD,EAC5Bs/C,EAAc,EAAJ7/C,EAAQ,GAAMQ,IA4B1BwR,sBAAuB,SAAWtV,EAAY4kD,GAgB7C,IAdA,IAAIC,EAAsC,OAA1B7kD,EAAY,GAAIS,MAE5BqkD,EAAiB,IAAIC,IAAKzrD,OAAO4W,KAAMlQ,EAAY,GAAIuQ,aACvDy0C,EAAsB,IAAID,IAAKzrD,OAAO4W,KAAMlQ,EAAY,GAAIilD,kBAE5D10C,EAAa,GACb00C,EAAkB,GAElBC,EAAuBllD,EAAY,GAAIklD,qBAEvCC,EAAiB,IAAI,iBAErBC,EAAS,EAEHjsD,EAAI,EAAGA,EAAI6G,EAAW3G,SAAWF,EAAI,CAE9C,IAAI0G,EAAWG,EAAY7G,GAI3B,GAAK0rD,KAAmC,OAAnBhlD,EAASY,OAAmB,OAAO,KAIxD,IAAM,IAAIvF,KAAQ2E,EAAS0Q,WAAa,CAEvC,IAAOu0C,EAAe1rB,IAAKl+B,GAAS,OAAO,UAEf0H,IAAvB2N,EAAYrV,KAAuBqV,EAAYrV,GAAS,IAE7DqV,EAAYrV,GAAOvB,KAAMkG,EAAS0Q,WAAYrV,IAM/C,GAAKgqD,IAAyBrlD,EAASqlD,qBAAuB,OAAO,KAErE,IAAM,IAAIhqD,KAAQ2E,EAASolD,gBAAkB,CAE5C,IAAOD,EAAoB5rB,IAAKl+B,GAAS,OAAO,UAEf0H,IAA5BqiD,EAAiB/pD,KAAuB+pD,EAAiB/pD,GAAS,IAEvE+pD,EAAiB/pD,GAAOvB,KAAMkG,EAASolD,gBAAiB/pD,IASzD,GAHAiqD,EAAep1C,SAASyF,eAAiB2vC,EAAep1C,SAASyF,gBAAkB,GACnF2vC,EAAep1C,SAASyF,eAAe7b,KAAMkG,EAASkQ,UAEjD60C,EAAY,CAEhB,IAAIh6C,EAEJ,GAAKi6C,EAEJj6C,EAAQ/K,EAASY,MAAMmK,UAEjB,SAAsChI,IAAjC/C,EAAS0Q,WAAWkC,SAM/B,OAAO,KAJP7H,EAAQ/K,EAAS0Q,WAAWkC,SAAS7H,MAQtCu6C,EAAeE,SAAUD,EAAQx6C,EAAOzR,GAExCisD,GAAUx6C,GAQZ,GAAKi6C,EAAY,CAEhB,IAAIS,EAAc,EACdC,EAAc,GAElB,IAAUpsD,EAAI,EAAGA,EAAI6G,EAAW3G,SAAWF,EAAI,CAI9C,IAFA,IAAIsH,EAAQT,EAAY7G,GAAIsH,MAElBpG,EAAI,EAAGA,EAAIoG,EAAMmK,QAAUvQ,EAEpCkrD,EAAY5rD,KAAM8G,EAAM+kD,KAAMnrD,GAAMirD,GAIrCA,GAAetlD,EAAY7G,GAAIoX,WAAWkC,SAAS7H,MAIpDu6C,EAAetkD,SAAU0kD,GAM1B,IAAM,IAAIrqD,KAAQqV,EAAa,CAE9B,IAAIk1C,EAAkBpnD,KAAKqnD,sBAAuBn1C,EAAYrV,IAE9D,IAAOuqD,EAAkB,OAAO,KAEhCN,EAAep0C,aAAc7V,EAAMuqD,GAMpC,IAAM,IAAIvqD,KAAQ+pD,EAAkB,CAEnC,IAAIU,EAAkBV,EAAiB/pD,GAAQ,GAAI7B,OAEnD,GAAyB,IAApBssD,EAAwB,MAE7BR,EAAeF,gBAAkBE,EAAeF,iBAAmB,GACnEE,EAAeF,gBAAiB/pD,GAAS,GAEzC,IAAU/B,EAAI,EAAGA,EAAIwsD,IAAoBxsD,EAAI,CAE5C,IAAIysD,EAAyB,GAE7B,IAAUvrD,EAAI,EAAGA,EAAI4qD,EAAiB/pD,GAAO7B,SAAWgB,EAEvDurD,EAAuBjsD,KAAMsrD,EAAiB/pD,GAAQb,GAAKlB,IAI5D,IAAI0sD,EAAuBxnD,KAAKqnD,sBAAuBE,GAEvD,IAAOC,EAAuB,OAAO,KAErCV,EAAeF,gBAAiB/pD,GAAOvB,KAAMksD,IAM/C,OAAOV,GAQRO,sBAAuB,SAAWn1C,GAOjC,IALA,IAAIu1C,EACAl1C,EACAm1C,EACAC,EAAc,EAER7sD,EAAI,EAAGA,EAAIoX,EAAWlX,SAAWF,EAAI,CAE9C,IAAIgZ,EAAY5B,EAAYpX,GAE5B,GAAKgZ,EAAU8zC,6BAA+B,OAAO,KAGrD,QADoBrjD,IAAfkjD,IAA2BA,EAAa3zC,EAAUvR,MAAMwR,aACxD0zC,IAAe3zC,EAAUvR,MAAMwR,YAAc,OAAO,KAGzD,QADkBxP,IAAbgO,IAAyBA,EAAWuB,EAAUvB,UAC9CA,IAAauB,EAAUvB,SAAW,OAAO,KAG9C,QADoBhO,IAAfmjD,IAA2BA,EAAa5zC,EAAU4zC,YAClDA,IAAe5zC,EAAU4zC,WAAa,OAAO,KAElDC,GAAe7zC,EAAUvR,MAAMvH,OAIhC,IAAIuH,EAAQ,IAAIklD,EAAYE,GACxBZ,EAAS,EAEb,IAAUjsD,EAAI,EAAGA,EAAIoX,EAAWlX,SAAWF,EAE1CyH,EAAMhC,IAAK2R,EAAYpX,GAAIyH,MAAOwkD,GAElCA,GAAU70C,EAAYpX,GAAIyH,MAAMvH,OAIjC,OAAO,IAAI,kBAAiBuH,EAAOgQ,EAAUm1C,IAQ9CG,qBAAsB,SAAW31C,GAShC,IALA,IAAIu1C,EACAE,EAAc,EACdhuB,EAAS,EAGH7+B,EAAI,EAAG2B,EAAIyV,EAAWlX,OAAQF,EAAI2B,IAAM3B,EAAI,CAErD,IAAIgZ,EAAY5B,EAAYpX,GAG5B,QADoByJ,IAAfkjD,IAA2BA,EAAa3zC,EAAUvR,MAAMwR,aACxD0zC,IAAe3zC,EAAUvR,MAAMwR,YAGnC,OADA1Q,QAAQiE,KAAM,6DACP,KAIRqgD,GAAe7zC,EAAUvR,MAAMvH,OAC/B2+B,GAAU7lB,EAAUvB,SAKrB,IAAIu1C,EAAoB,IAAI,IAAmB,IAAIL,EAAYE,GAAehuB,GAC1EotB,EAAS,EACTgB,EAAM,GACNC,EAAU,CAAE,OAAQ,OAAQ,OAAQ,QACpCC,EAAU,CAAE,OAAQ,OAAQ,OAAQ,QAE9BjsD,EAAI,EAAd,IAAiBS,EAAIyV,EAAWlX,OAAQgB,EAAIS,EAAGT,IAAO,CAErD,IACIuW,GADAuB,EAAY5B,EAAYlW,IACHuW,SACrBhG,EAAQuH,EAAUvH,MAClB27C,EAAM,IAAI,6BAA4BJ,EAAmBv1C,EAAUw0C,EAAQjzC,EAAU4zC,YACzFK,EAAIzsD,KAAM4sD,GAEVnB,GAAUx0C,EAIV,IAAM,IAAI5V,EAAI,EAAGA,EAAI4P,EAAO5P,IAE3B,IAAM,IAAIwrD,EAAI,EAAGA,EAAI51C,EAAU41C,IAE9BD,EAAKD,EAASE,IAAOxrD,EAAGmX,EAAWk0C,EAASG,IAAOxrD,IAQtD,OAAOorD,GAQRK,kBAAmB,SAAW5mD,GAK7B,IAAI6mD,EAAM,EACV,IAAM,IAAIxrD,KAAQ2E,EAAS0Q,WAAa,CAEvC,IAAIo2C,EAAO9mD,EAASc,aAAczF,GAClCwrD,GAAOC,EAAK/7C,MAAQ+7C,EAAK/1C,SAAW+1C,EAAK/lD,MAAMgmD,kBAIhD,IAAI3kD,EAAUpC,EAASgnD,WAEvB,OADAH,GAAOzkD,EAAUA,EAAQ2I,MAAQ3I,EAAQ2O,SAAW3O,EAAQrB,MAAMgmD,kBAAoB,GAUvFE,cAAe,SAAWjnD,EAAUknD,EAAY,MAE/CA,EAAYl8C,KAAKC,IAAKi8C,EAAW54C,OAAO64C,SAoBxC,IAhBA,IAAIC,EAAc,GACdhlD,EAAUpC,EAASgnD,WACnBvuB,EAAYz4B,EAASc,aAAc,YACnCumD,EAAcjlD,EAAUA,EAAQ2I,MAAQ0tB,EAAU1tB,MAGlDu8C,EAAY,EAGZC,EAAiB9tD,OAAO4W,KAAMrQ,EAAS0Q,YACvC82C,EAAa,GACbC,EAAmB,GACnBC,EAAa,GACblB,EAAU,CAAE,OAAQ,OAAQ,OAAQ,QAG9BltD,EAAI,EAAG2B,EAAIssD,EAAe/tD,OAAQF,EAAI2B,EAAG3B,IAAO,CAIzDkuD,EAFInsD,EAAOksD,EAAgBjuD,IAEN,IAEjBquD,EAAY3nD,EAASolD,gBAAiB/pD,MAGzCosD,EAAkBpsD,GAAS,IAAIgsC,MAAOsgB,EAAUnuD,QAASouD,OAAOpkD,IAAK,IAAM,KAO7E,IAAIqkD,EAAe78C,KAAK88C,MAAO,EAAIZ,GAC/Ba,EAAkB/8C,KAAK4iB,IAAK,GAAIi6B,GACpC,IAAUvuD,EAAI,EAAGA,EAAI+tD,EAAa/tD,IAAO,CAExC,IAAIsH,EAAQwB,EAAUA,EAAQujD,KAAMrsD,GAAMA,EAGtC0uD,EAAO,GACDxtD,EAAI,EAAd,IAAiBS,EAAIssD,EAAe/tD,OAAQgB,EAAIS,EAAGT,IAMlD,IAJA,IAAIa,EAAOksD,EAAgB/sD,GAEvBuW,GADAuB,EAAYtS,EAASc,aAAczF,IACd0V,SAEf41C,EAAI,EAAGA,EAAI51C,EAAU41C,IAG9BqB,GAAQ,MAAU11C,EAAWk0C,EAASG,IAAO/lD,GAAUmnD,MAQzD,GAAKC,KAAQZ,EAEZM,EAAW5tD,KAAMstD,EAAaY,QAExB,CAGN,IAAUxtD,EAAI,EAAGS,EAAIssD,EAAe/tD,OAAQgB,EAAIS,EAAGT,IAElD,CAAIa,EAAOksD,EAAgB/sD,GAA3B,IACI8X,EAAYtS,EAASc,aAAczF,GACnCssD,EAAY3nD,EAASolD,gBAAiB/pD,GAEtC4sD,GADAl3C,EAAWuB,EAAUvB,SACVy2C,EAAYnsD,IACvB6sD,EAAiBT,EAAkBpsD,GAEvC,IAAUsrD,EAAI,EAAGA,EAAI51C,EAAU41C,IAAO,CAErC,IAAIwB,EAAa3B,EAASG,GAG1B,GAFAsB,EAASnuD,KAAMwY,EAAW61C,GAAcvnD,IAEnC+mD,EAEJ,IAAM,IAAIzsD,EAAI,EAAGktD,EAAKT,EAAUnuD,OAAQ0B,EAAIktD,EAAIltD,IAE/CgtD,EAAgBhtD,GAAIpB,KAAM6tD,EAAWzsD,GAAKitD,GAAcvnD,KAU5DwmD,EAAaY,GAASV,EACtBI,EAAW5tD,KAAMwtD,GACjBA,KAQF,MAAMjtD,EAAS2F,EAASuB,QACxB,IAAUjI,EAAI,EAAG2B,EAAIssD,EAAe/tD,OAAQF,EAAI2B,EAAG3B,IAAO,CAErD+B,EAAOksD,EAAgBjuD,GAA3B,IACI+uD,EAAeroD,EAASc,aAAczF,GAEtCitD,EAAS,IAAID,EAAatnD,MAAMwR,YAAai1C,EAAYnsD,IACzDiX,EAAY,IAAI,kBAAiBg2C,EAAQD,EAAat3C,SAAUs3C,EAAanC,YAKjF,GAHA7rD,EAAO6W,aAAc7V,EAAMiX,GAGtBjX,KAAQosD,EAEZ,IAAUjtD,EAAI,EAAGA,EAAIitD,EAAkBpsD,GAAO7B,OAAQgB,IAAO,CAE5D,IAAI+tD,EAAoBvoD,EAASolD,gBAAiB/pD,GAAQb,GAGtDguD,GADAF,EAAS,IAAIC,EAAkBxnD,MAAMwR,YAAak1C,EAAkBpsD,GAAQb,IAC3D,IAAI,kBAAiB8tD,EAAQC,EAAkBx3C,SAAUw3C,EAAkBrC,aAChG7rD,EAAO+qD,gBAAiB/pD,GAAQb,GAAMguD,GAYzC,OAFAnuD,EAAO2G,SAAU0mD,GAEVrtD,GASRouD,oBAAqB,SAAWzoD,EAAU0oD,GAEzC,GAAKA,IAAa,oBAGjB,OADA7mD,QAAQiE,KAAM,2FACP9F,EAIR,GAAK0oD,IAAa,uBAAuBA,IAAa,wBAAwB,CAE7E,IAAI9nD,EAAQZ,EAASgnD,WAIrB,GAAe,OAAVpmD,EAAiB,CAErB,IAAIwB,EAAU,GAEVwQ,EAAW5S,EAASc,aAAc,YAEtC,QAAkBiC,IAAb6P,EAcJ,OADA/Q,QAAQ2a,MAAO,2GACRxc,EAZP,IAAM,IAAI1G,EAAI,EAAGA,EAAIsZ,EAAS7H,MAAOzR,IAEpC8I,EAAQtI,KAAMR,GAIf0G,EAASgB,SAAUoB,GACnBxB,EAAQZ,EAASgnD,WAanB,IAAI2B,EAAoB/nD,EAAMmK,MAAQ,EAClC28C,EAAa,GAEjB,GAAKgB,IAAa,sBAIjB,IAAUpvD,EAAI,EAAGA,GAAKqvD,EAAmBrvD,IAExCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAM,IAC7B+B,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,IAC7BouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,SAQlC,IAAUA,EAAI,EAAGA,EAAIqvD,EAAmBrvD,IAElCA,EAAI,GAAM,GAEdouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,IAC7BouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,IACjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,MAKjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,IACjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,IACjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,KAQzBouD,EAAWluD,OAAS,IAAQmvD,GAElC9mD,QAAQ2a,MAAO,oGAMhB,IAAIosC,EAAc5oD,EAASuB,QAI3B,OAHAqnD,EAAY5nD,SAAU0mD,GACtBkB,EAAYC,cAELD,EAKP,OADA/mD,QAAQ2a,MAAO,sEAAuEksC,GAC/E1oD,K,kFCvtBV,eAMA,SACA,QACA,QACA,QAQA,MAAa8oD,UAA8B,EAAArqB,sBAS1C,YAAoBsqB,GACnBtkD,QADmB,KAAAskD,WAIpB,mCAAmC5K,GAClC3/C,KAAKwqD,gCAAkC7K,EAGxC,oBACC7qB,EACA3sB,EACAM,GAOA,IAAKzI,KAAKwqD,gCACT,OAGD,MAAM52B,EAAmBkB,EAAaj0B,GAAGC,QAAQo/B,uCAAuC/3B,GAClFysB,EAAWE,EAAa1sB,YAAYD,GAI1C,GAFiBnI,KAAKwqD,gCAAgCC,SAAStiD,IAE/CyrB,EAAkB,CACjC,MAAME,EAAUF,EAAiBr1B,KAE3BwO,EAAY,GAAG+mB,KAAWc,OADd50B,KAAKi0B,eAAea,EAAchB,EAAS3rB,EAAaM,KAE1EA,EAA8BwE,eAAe6nB,EAAc,CAAC/nB,SAE5D/M,KAAK0qD,yBAA2B1qD,KAAK0qD,0BAA4B,IAAI,EAAAltB,uBACrEx9B,KAAK0qD,yBAAyB70B,oBAC7Bf,EACA3sB,EACAM,GAgFH,eACChF,EACAqwB,EACAzhB,EACA5J,GAEA,IAAKzI,KAAKwqD,gCACT,OAID,MAAMG,EAAmB3qD,KAAKwqD,gCAAgCC,SAASp4C,GAEvE,IAAIs4C,EA4BH,OAAO,EAAAntB,uBAAuBvJ,eAAexwB,EAAMqwB,EAASzhB,EAAa5J,GA5BpD,CACrBzI,KAAK4qD,+BAA+BnnD,EAAMgF,GAM1C,MAAMsgC,EAAY4hB,EAAiB5hB,UAC7B8hB,EAAaF,EAAiBE,WACpC,GAAIA,EAAY,CAGf,MAAMC,EAAmBD,EAAWE,aAC9BC,EAAqB,IAAI,EAAA31B,oBAC9B5xB,EACA,EAAAI,oBAAoBQ,WACpBymD,GASD,OALAriD,EAA8ByE,gBAAgBzJ,EAAM,CAACunD,IAInC,cAAcF,MAAqB9qD,KAAKuqD,cAAcxhB,MAQ3E,+BAA+BtlC,EAAsBgF,GASpD,MAAMwiD,EAAqC,IAAI,EAAA3qB,sBAC9C78B,EACA,EAAAI,oBAAoBI,KACpBqmD,EAAsBY,WAEjBC,EAAsC,IAAI,EAAAhrB,oBAC/C18B,EACA,EAAAI,oBAAoBI,KACpBqmD,EAAsBc,YAGvB3iD,EAA8ByE,gBAC7BzJ,EACA,CAACwnD,EAAoCE,GACrC,EAAA56C,WAAWzF,QAEZrC,EAA8ByE,gBAAgBzJ,EAAM,CAAC0nD,GAAsC,EAAA56C,WAAW4hB,UAEtG1pB,EAA8BwE,eAC7BxJ,EACA,CAAC,GAAG6mD,EAAsBc,gBAAgBd,EAAsBY,aAChE,EAAA36C,WAAWzF,SAzMd,0BAGQ,EAAAogD,UAAY,0BACZ,EAAAE,WAAa,2BACb,EAAAC,gBAAkB,c,8ECnB1B,cAEA,OACA,OAEA,8BACC,uCAAuCznD,GACtC,IAAI0nD,EAAgC,GACpC,MAAMC,EAAkC,GACxC,IAGInpD,EAHAopD,EAAkC,KAItC,IAAK,IAAI1wD,EAAI,EAAGA,EAAI8I,EAAQ5I,OAAQF,IACnC,GAAIA,EAAI,GAAM,EAAG,CAChBsH,EAAQwB,EAAQ9I,GAChB,MAAM2wD,EAAiB7nD,EAAQ9I,EAAI,GAKX,MAApB0wD,GAA4BC,IAAmBD,GAEf,IAA/BF,EAAoBtwD,QACvBswD,EAAoBhwD,KAAKmwD,GAG1BH,EAAoBhwD,KAAK8G,GACzBopD,EAAmBppD,IAGnBmpD,EAAgCjwD,KAAKgwD,GAMrCA,EAAsB,CAACG,EAAgBrpD,GACvCopD,EAAmBppD,GAQtB,OAFAmpD,EAAgCjwD,KAAKgwD,GAE9BC,EAGR,oCACC/2C,EACA5Q,EACA0O,EACAo5C,GAGA,MAAM51C,EAAwB,GAExB61C,EAAqD,GAC3Dr5C,EAAa1Q,QAASyQ,IACrBs5C,EAA6Bt5C,GAAe,KAG7CzO,EAAQhC,QAAQ,CAACQ,EAAOtH,KACvB,MAAM6Z,EAAQH,EAAOpS,GAGrBkQ,EAAa1Q,QAASyQ,IACrB,IAAIiD,EAAeX,EAAMW,aAAajD,GAGrCiD,EAFmBo2C,EAAqBr5C,GACvB,EACFiD,EAAavQ,UAEb,CAACuQ,GAEjBA,EAAa1T,QAASqD,IACrB0mD,EAA6Bt5C,GAAa/W,KAAK2J,OAI7CnK,EAAI,IACPgb,EAAYxa,KAAKR,EAAI,GACrBgb,EAAYxa,KAAKR,MAKnB,MAAM0G,EAAW,IAAI,EAAAsT,eASrB,OAPAxC,EAAa1Q,QAASyQ,IACrB,MAAMsD,EAAc+1C,EAAqBr5C,GACnCvN,EAAS6mD,EAA6Bt5C,GAC5C7Q,EAASkR,aAAaL,EAAa,IAAI,EAAAc,uBAAuBrO,EAAQ6Q,MAGvEnU,EAASgB,SAASsT,GACXtU,EAGR,kCAAkCA,G,MACjC,MAAMG,EAA+B,GAC/BiV,EAAgB,IAAI,EAAAzF,aAAa3P,GACjC8Q,EAAesE,EAActE,eAC7BkC,EAASoC,EAAcpC,SACvB5Q,GAA8B,QAAnB,EAAApC,EAASgnD,kBAAU,eAAEjmD,QAAsB,GAEtDgpD,EAAkCvrD,KAAKurD,gCAAgC3nD,GAG7E,GAFAP,QAAQC,IAAIM,EAAS2nD,GAEjBA,EAAgCvwD,OAAS,EAAG,CAC/C,MAAM4wD,EAA0Bh1C,EAAci1C,eAE9CN,EAAgC3pD,QAAQ,CAAC0pD,EAAqBxwD,KAC7D0G,EAAWxB,KAAK8rD,6BACft3C,EACA82C,EACAh5C,EACAs5C,GAEDjqD,EAAWrG,KAAKkG,KAIlB,OAAOG,K,sHCnGT,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,QAEA,kBAmJC,cAlJU,KAAAoqD,eAAiB,IAAI,EAAAzgD,MAmBrB,KAAA0gD,oBAAsB,IAAI,EAAAC,kBAAkBjsD,MAK9C,KAAAksD,QAAU,IAAI,EAAAC,OAAOnsD,MASb,KAAA6b,gBAAkB,IAAI,EAAAoI,eAc9B,KAAAhK,OAAS,IAAI,EAAAmyC,UAcb,KAAAC,0CAAyE,IAAI,EAAAC,4BAI7E,KAAAC,wBAAiD,IAAI,EAAAC,sBAKnD,KAAAC,kBAAoB,IAAI,EAAAC,gBAAgB1sD,MAexC,KAAA2sD,iBAAmB,IAAI,EAAAC,eAAe5sD,MA+D/CA,KAAKia,OAAO4yC,UAAU7sD,MAEtBA,KAAKg9C,iBAAiBpL,OArJvB,oBACC,OAAO5xC,KAAK+rD,eAGb,SAAS16C,GACR,OAAQrR,KAAK8sD,MAAQz7C,EAEtB,WACC,OAAOrR,KAAK8sD,MAGb,SAASjwD,GACR,OAAQmD,KAAK+F,MAAQlJ,EAEtB,WACC,OAAOmD,KAAK+F,MAIb,yBACC,OAAO/F,KAAKgsD,oBAIb,aACC,OAAOhsD,KAAKksD,QAQP,2B,mDACL,OAAOlsD,KAAK6b,gBAAgBkxC,8BAI7B,0BACC,OAAQ/sD,KAAKgtD,qBAAuBhtD,KAAKgtD,sBAAwB,IAAI,EAAAC,mBAAmBjtD,MAGzF,wBACC,OAAQA,KAAKktD,mBAAqBltD,KAAKktD,oBAAsB,IAAI,EAAAC,sBAAsBntD,MAIxF,YACC,OAAOA,KAAKia,OAIb,2BACC,OAAQja,KAAKotD,sBAAwBptD,KAAKotD,uBAAyB,IAAI,EAAAvpC,oBAAoB7jB,MAG5F,yBACC,OAAQA,KAAKqtD,oBAAsBrtD,KAAKqtD,qBAAuB,IAAI,EAAAC,kBAAkBttD,MAItF,+CACC,OAAOA,KAAKqsD,0CAGb,6BACC,OAAOrsD,KAAKusD,wBAIb,uBACC,OAAOvsD,KAAKysD,kBAIb,kBACC,OAAQzsD,KAAKutD,aAAevtD,KAAKutD,cAAgB,IAAI,EAAAC,gBAStD,sBACC,OAAOxtD,KAAK2sD,iBAEb,UAAUrP,GACTt9C,KAAKy9C,gBAAgBgQ,UAAUnQ,GAEhC,YACC,OAAOt9C,KAAKy9C,gBAAgBH,MAE7B,WACC,OAAOt9C,KAAKy9C,gBAAgB5R,KAE7B,kBACC,OAAO7rC,KAAKy9C,gBAAgBF,YAE7B,OACCv9C,KAAKy9C,gBAAgBiQ,OAEtB,QACC1tD,KAAKy9C,gBAAgBkQ,QAStB,iBACC,OAAQ3tD,KAAK8jB,YAAc9jB,KAAK8jB,aAAe,IAAI,EAAA8pC,oBAAoB5tD,MAExE,UACC,OAAOA,KAAKomB,WAAWC,UASxB,0BACC,OAAQrmB,KAAK6tD,qBAAuB7tD,KAAK6tD,sBAAwB,IAAI,EAAAC,mBAAmB9tD,MASzF,uBACC,OAAQA,KAAK+tD,kBAAoB/tD,KAAK+tD,mBAAqB,IAAI,EAAAC,gBAoBhE,aAAazzC,GACZva,KAAKksD,QAAQxiB,QAEbnvB,IAEAva,KAAKksD,QAAQtiB,UAQd,KAAK1xB,GACJ,OAAOlY,KAAKg9C,iBAAiBv5C,KAAKyU,GAEnC,WACC,OAAOlY,KAAKg9C,iBAAiBlgC,Q,uHC9N/B,eACA,QACA,QACA,SAKA,OACA,MAAMmxC,UAA+B,EAAAnlD,iBAArC,c,oBACC,KAAArI,OAAS,EAAA8d,YAAY3f,SAAQ,EAAM,CAClC2b,SAAU,CAAC9W,EAAoB+T,KAC9B02C,EAAeC,6BAA6B1qD,OAI/C,MAAMsF,EAAe,IAAIklD,EAEzB,MAAaC,UAAuB,EAAA5e,eAApC,c,oBACC,KAAAtmC,cAAgBD,EAChB,cACC,MAAO,cAER,kBAEC/I,KAAKa,GAAGC,QAAQqG,mCACf,EAAAinD,2BAA2BppD,IAAKqpD,GACxB,IAAI,EAAArsB,0BAA0BqsB,EAAY,EAAAxqD,oBAAoBE,QAIvE/D,KAAKqhC,UAAUitB,gBAAgB,KAC9BtuD,KAAKoD,MAAMmrD,kBAAkBC,oBAAoBxuD,QAElDA,KAAKqhC,UAAUotB,gBAAgB,KAC9BzuD,KAAKoD,MAAMmrD,kBAAkBG,sBAAsB1uD,QAIrD,cAAc4vC,EAAmBC,EAA2BC,GAC3D,IAAK9vC,KAAK4f,GAAGnf,OACZ,OAED,MAAM2B,EAAQpC,KAAKa,GAAGC,QAAQ6tD,iBAAiB/e,EAAMrxC,MACrD,GAAI6D,GAAS,EAAG,CACf,MAEMwsD,EAFc5uD,KAAKa,GAAGkG,YAAY8nD,qBACAhlC,OAAQjiB,GAAeA,EAAWM,cAAgB9F,GACnC4C,IACrD4C,GAAeA,EAAWknD,WAE5B,IAAK,IAAIrrD,KAAQmrD,EAChBnrD,EAAKsrD,cAAcnf,EAAOC,EAAQC,IAKrC,mBACK9vC,KAAK4f,GAAGnf,OACXT,KAAKoD,MAAMmrD,kBAAkBC,oBAAoBxuD,MAEjDA,KAAKoD,MAAMmrD,kBAAkBG,sBAAsB1uD,MAGrD,oCAAoCyD,GACnCA,EAAKurD,oBA9CP,oB,8EChBA,kBACC,YAAsBvrD,GAAA,KAAAA,U,sFC0BvB,uBACC,YAAoBA,GAAA,KAAAA,OAOpB,QAAQ0iB,GAAoC,G,YAO3C,MAAM3rB,EAAO,CACZqC,KAAMmD,KAAKyD,KAAK5G,KAChB0B,KAAMyB,KAAKyD,KAAKlF,KAChBqtB,cAAe5rB,KAAKyD,KAAKmoB,cACzBtR,SAAUta,KAAKyD,KAAK6W,SACpB20C,aAAcjvD,KAAKyD,KAAKwD,QAAQof,UAChC+Y,cAAep/B,KAAKyD,KAAKquB,OAAO9T,MAAMlc,QACtC4jB,SAAU1lB,KAAKkvD,eACfxnD,OAAQ1H,KAAKmvD,YACbC,gCAAiCpvD,KAAKqvD,2BACtCttB,wBAAyB/hC,KAAK+hC,0BAC9ButB,yBAA0BtvD,KAAKsvD,2BAC/BC,UAAWvvD,KAAKwvD,eAAerpC,GAE/BspC,wBAAyBzvD,KAAKyD,KAAK5C,GAAG6G,OAAO+nD,0BAC7CC,oCAAqC1vD,KAAKyD,KAAK5C,GAAG6G,OAAOgoD,sCACzDxvD,MAAO,CAENI,QAAiC,QAA1B,EAAiB,QAAjB,EAAEN,KAAKyD,KAAKvD,aAAK,eAAEI,eAAO,eAAEG,OACnCgpB,OAA+B,QAAzB,EAAiB,QAAjB,EAAEzpB,KAAKyD,KAAKvD,aAAK,eAAEupB,cAAM,eAAEhpB,QAElCkvD,eAAWprD,GAOZ,OAJIvE,KAAKyD,KAAK6zC,oBAAsBt3C,KAAKyD,KAAK8hB,sBAC7C/qB,EAAgB,UAAIwF,KAAKyD,KAAK8hB,oBAAoBoqC,UAAUtpC,WAGtD7rB,EAGR,eACC,OAAOwF,KAAKyD,KAAKiiB,WAAW1gB,IAAKvB,GAASA,EAAKmoB,eAGhD,YACC,OAAO5rB,KAAKyD,KAAK5C,GAAG6G,OAAOA,SAAS1C,IAAKvB,GAAkB,MAARA,EAAeA,EAAKmoB,mBAAgBrnB,GAGxF,2B,MACC,OACqB,QADrB,EAAOvE,KAAKyD,KAAK5C,GAAGkG,YAClB2F,2BAAmB,eAClB1H,IAAK4C,GAA8B,MAAdA,EAAqBA,EAAWM,kBAAe3D,GAExE,0BACC,OAAOvE,KAAKyD,KAAK5C,GAAG6G,OAAOmF,8BAA8B7H,IAAKlK,GAAMA,EAAEurB,WAEvE,2BACC,OAAOrmB,KAAKyD,KAAK5C,GAAGC,QAAQmH,+BAA+BjD,IAAKjI,GAAMA,EAAEspB,WAGzE,0BAA0BupC,EAAuBC,GAA8B,GAC9E,OAAOD,EAAY5qD,IAAKulB,GAChBvqB,KAAKyD,KAAK+E,OAAOtL,IAAIqtB,GAAaqB,eAiB3C,eAAeikC,GAA8B,GAC5C,OAAO7vD,KAAK8vD,0BAA0B9vD,KAAKyD,KAAK+E,OAAO02B,MAAO2wB,M,8ECnHhE,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,QAGa,EAAAE,uBAA4C,CACxD,CAAC,EAAArxD,UAAUE,SAAU,EAAAoxD,aACrB,CAAC,EAAAtxD,UAAUC,QAAS,EAAAsxD,YACpB,CAAC,EAAAvxD,UAAUG,OAAQ,EAAAqxD,WACnB,CAAC,EAAAxxD,UAAUI,OAAQ,EAAA6pC,WACnB,CAAC,EAAAjqC,UAAUK,QAAS,EAAAoxD,YACpB,CAAC,EAAAzxD,UAAUM,SAAU,EAAAoxD,aACrB,CAAC,EAAA1xD,UAAUO,eAAgB,EAAAy9C,kBAC3B,CAAC,EAAAh+C,UAAUU,MAAO,EAAAF,UAClB,CAAC,EAAAR,UAAUW,WAAY,EAAAgxD,eACvB,CAAC,EAAA3xD,UAAUY,QAAS,EAAAi8C,YACpB,CAAC,EAAA78C,UAAUa,SAAU,EAAA+wD,aACrB,CAAC,EAAA5xD,UAAUc,SAAU,EAAA+wD,aACrB,CAAC,EAAA7xD,UAAUe,SAAU,EAAA+wD,e,2FC7BtB,SAqBA,6BAMC,YAAsBh5C,GAAA,KAAAA,QAOtB,aACC,OAA2B,MAApBxX,KAAKywD,YAEb,iBACC,OAAOzwD,KAAKywD,YAEb,iBACC,QAAIzwD,KAAK0wD,UACD1wD,KAAK0wD,SAAShgB,WAIvB,oBACC,OAAI1wC,KAAK0wD,SACD1wD,KAAK0wD,SAAStxB,cAEf,KAER,wBACC,OAAOp/B,KAAKwX,MAAM/Y,QAAQkyD,2BAM3B,eAAergB,EAAgCn2B,GAAqB,G,MACnEna,KAAKwX,MAAMpU,MAAMy0C,yCAAyC+Y,iBAAiB5wD,KAAKwX,OAChFxX,KAAKwX,MAAMpU,MAAM20C,uBAAuB6Y,iBAAiB5wD,KAAKwX,OAE1DxX,KAAKywD,aAAengB,IACvBtwC,KAAKywD,YAAcngB,EAEftwC,KAAKywD,aACRzwD,KAAK0wD,SAAW1wD,KAAK0wD,UAAY,IAAI,EAAAG,kBAAkB7wD,KAAKwX,OAC5DxX,KAAK0wD,SAASI,iBAAiB9wD,KAAKywD,cAEvB,QAAb,EAAAzwD,KAAK0wD,gBAAQ,SAAE/nD,QAGZwR,GACHna,KAAKwX,MAAM2C,aAKd,4CACKna,KAAK0wD,UAAY1wD,KAAKS,QACzBT,KAAK0wD,SAASK,4CAIV,qB,mDACL,GAAI/wD,KAAK0wD,UAAY1wD,KAAKS,OAAQ,CAEjC,aADqBT,KAAK0wD,SAASM,uBAIvB,gCAAgCC,EAAwB12C,G,2DACrEva,KAAKkxD,aAAaD,EAAU12C,SACtBva,KAAKywC,sBACM,QAAjB,EAAIzwC,KAAK0wD,gBAAQ,eAAEtxB,gBAClBp/B,KAAKwX,MAAM/T,KAAKquB,OAAO9T,MAAMzd,IAAI,+BAA4C,QAAb,EAAAP,KAAK0wD,gBAAQ,eAAEtxB,iBAGhFp/B,KAAKmxD,oBAEN,8BAA8BF,EAAuB12C,GACpD,OAAOva,KAAKoxD,gCAAgCH,EAAU12C,GAEvD,+BAA+B02C,EAAwB12C,GACtD,OAAOva,KAAKoxD,gCAAgCH,EAAU12C,GAEvD,eACC,OAAOva,KAAKqxD,UAEb,sBACC,OAAOrxD,KAAKsxD,iBAEb,aAAaL,EAAwB12C,GACpCva,KAAKqxD,UAAYJ,EACjBjxD,KAAKsxD,iBAAmB/2C,EAEzB,iBACCva,KAAKqxD,eAAY9sD,EACjBvE,KAAKsxD,sBAAmB/sD,K,2FCvH1B,2BAEA,4BACA,UAAKgtD,WAAW,KAGhB,UAAKC,YAAY,KADA,IAYjB,MAAa/V,EAIZ,eAEA,iBAAiBgW,GAChB,IACCzxD,KAAK2I,QACL3I,KAAKyD,KAAO,UAAKguD,GAChB,MAAOjiD,GACR,MAAM1N,EAAU,mCAAmC2vD,cAAmBjiD,KACtExP,KAAKo/B,cAAgBt9B,GAGvB,kCAAkC2vD,GACjC,IACCzxD,KAAK2I,QAEL,MAAMgG,EAAW8sC,EAAWC,sBAAsB+V,GAC5C7C,EAAQ,GACd,IAAK,IAAI9zD,EAAI,EAAGA,EAAI6T,EAAS3T,OAAQF,IAAK,CACzC,MAAM8U,EAAUjB,EAAS7T,GACzB,IAAI2I,EAEHA,EADG3I,EAAI,GAAK,EACL,UAAK8U,GAEL,CACNrR,KAjCe,UAkCfjB,MAAO,IAAIsS,KACXwrC,IAAK,IAAIxrC,MAGXg/C,EAAMtzD,KAAKmI,GAqBZzD,KAAKyD,KAAiB,CACrBlF,KA1DyB,iBA2DzBmzD,UAAW9C,EACX+C,OAAQ,CACPpzD,KAhEmB,aAiEnB1B,KAAM,eAGP,MAAO2S,GACR,MAAM1N,EAAU,mCAAmC2vD,cAAmBjiD,KACtExP,KAAKo/B,cAAgBt9B,GAIvB,6BAA6BmD,GAC5B,OAAS,MAALA,GACC,UAAgBA,GACZA,EAAE2J,MAzEuB,KA8E1B,GAoCD,QACP5O,KAAKyD,UAAOc,EACZvE,KAAKo/B,mBAAgB76B,GAlHvB,gB,8ECfA,eAMA,uBAOC,cANQ,KAAAnC,OAAS,EACT,KAAA6pB,cAAmC,GACnC,KAAA2lC,aAAuC,GACvC,KAAAC,eAA2B,GAC3B,KAAAC,8BAAoD,GAK5D,SAASj1D,EAAc4G,GACtBzD,KAAKoC,OAAS,EACVvF,GAAQ4G,EAAK5G,OAChBmD,KAAK+xD,YAAY/xD,KAAKoC,OAASqB,GAGhCzD,KAAK6xD,eAAe7xD,KAAKoC,OAASqB,EAAKmoB,cACvC5rB,KAAK8xD,8BAA8BruD,EAAKmoB,eAAiB/uB,EAE1D,iBAAiBm1D,GAChBhyD,KAAKoC,OAAS,EACdpC,KAAKisB,cAAcjsB,KAAKoC,OAAS4vD,EAGlC,kBACC,OAAOhyD,KAAK4xD,aAGb,wBAAwBnuD,GACMzD,KAAK+xD,YAAY/sD,IAAKlH,GAAMA,aAAC,EAADA,EAAG8tB,eAEnC+2B,SAASl/C,EAAKmoB,iBACtC5rB,KAAK8xD,8BAA8BruD,EAAKmoB,eAAiBnoB,EAAK5G,MAIhE,UACC,MAAM8R,EAAW,IAAIk6B,MAAc7oC,KAAKoC,OACxC,IAAK,IAAItH,EAAI,EAAGA,GAAKkF,KAAKoC,MAAOtH,IAAK,CACrC,MAAM2I,EAAOzD,KAAK+xD,YAAYj3D,GAC9B,GAAI2I,EACHkL,EAAS7T,GAAKkF,KAAK8xD,8BAA8BruD,EAAKmoB,mBAChD,CACN,MAAMomC,EAAehyD,KAAKisB,cAAcnxB,GACpCk3D,IACHrjD,EAAS7T,GAAKk3D,IAKjB,IAAIC,EAActjD,EAASzJ,KAAK,EAAAkT,WAAW/Y,WAE3C,MAAM6yD,EAAaD,EAAY,GAO/B,OANIC,IACE,EAAA95C,WAAWkU,oBAAoBq2B,SAASuP,KAC5CD,EAAc,GAAG,EAAA75C,WAAW/Y,YAAY4yD,MAInCA,K,8EC7DT,MAAME,EAAS,SAASC,GAAc,OAAO,SAAS70D,GAAU,OAAOiP,KAAK4iB,IAAI7xB,EAAG60D,KAC7EC,EAAS,SAASD,GAAc,OAAO,SAAS70D,GAAU,OAAO,EAAIiP,KAAK8lD,IAAI9lD,KAAK4iB,IAAI7xB,EAAE,EAAG60D,MAC5FG,EAAU,SAASH,GAAc,OAAO,SAAS70D,GAAU,OAAOA,EAAE,GAAK40D,EAAOC,EAAPD,CAAgB,EAAF50D,GAAK,EAAI80D,EAAOD,EAAPC,CAAgB,EAAF90D,EAAM,GAAG,EAAE,KAElH,EAAA8xB,OAAS,CACpBmjC,OAAQD,EAAQ,GAEhBJ,OAAQ,SAAS50D,EAAU60D,GAAe,OAAOD,EAAOC,EAAPD,CAAc50D,IAC/D80D,OAAQ,SAAS90D,EAAU60D,GAAe,OAAOC,EAAOD,EAAPC,CAAc90D,IAC/Dg1D,QAAS,SAASh1D,EAAU60D,GAAe,OAAOG,EAAQH,EAARG,CAAeh1D,IAEjEk1D,QAASN,EAAO,GAChBO,QAASL,EAAO,GAChBM,SAAUJ,EAAQ,GAElBK,QAASL,EAAQ,GACjBM,QAASN,EAAQ,GACjBO,SAAUP,EAAQ,GAElBQ,QAASR,EAAQ,GACjBS,QAAST,EAAQ,GACjBU,SAAUV,EAAQ,GAQlBW,WAAY,SAAS31D,GAAW,OAAO,EAAIiP,KAAKshB,IAAIthB,KAAKmV,GAAK,EAAIpkB,EAAIiP,KAAKmV,GAAK,IAChFwxC,WAAY,SAAS51D,GAAW,OAAOiP,KAAKshB,IAAIthB,KAAKmV,GAAK,EAAIpkB,IAC9D61D,YAAa,SAAS71D,GAAW,OAAQ,EAAIiP,KAAKshB,IAAIthB,KAAKmV,GAAKpkB,EAAIiP,KAAKmV,GAAK,IAAM,GAEpF0xC,eAAgB,SAAU91D,GAAY,OAAQ,IAAM,IAAMA,GAAKiP,KAAKshB,IAAI,GAAKvwB,GAAK,GAClF+1D,eAAgB,SAAU/1D,GAAY,MAAO,IAAMA,IAAOA,EAAKiP,KAAKshB,IAAI,GAAKvwB,IAC7Eg2D,gBAAiB,SAAUh2D,GAAY,OAAQA,GAAK,IAAM,GAAK,IAAM,IAAMA,GAAKiP,KAAKshB,IAAI,GAAKvwB,IAAM,IAAM,IAAMA,GAAKiP,KAAKshB,IAAI,GAAKvwB,GAAK,K,oFCtC1I,E,KAAA,uBACA,SACA,QACA,QAIA,MAAaorC,UAAmB,EAAAoH,kBAC/B,cACC,OAAO,EAAArxC,UAAUI,MAElB,+BACC,OAAOkB,KAAK4S,cAEb,2BACC,OAAO5S,KAAKqnB,WAEb,uBACC,OAAOrnB,KAAK1C,MAEb,2BACC27B,EACAC,GAEA,OAAOD,GAAcC,EAEtB,wBAAwBjS,EAA2CC,GAClE,OAAOD,GAAQC,EAEhB,eAAeF,GACd,GAAI,UAAgBA,GACnB,OAAOA,EAEP,GAAI,EAAApiB,WAAW4uD,UAAUxsC,GAAU,CAClC,MAAM1W,EAASmjD,WAAWzsC,GAC1B,GAAI,UAAgB1W,GACnB,OAAOA,EAGT,OAAO,KAGT,QAAQ0W,GACP,MAAMnrB,EAAS8sC,EAAWsH,QAAQjpB,GAClC,OAAInrB,EACImE,KAAKvB,QAAQi1D,gBAAgB73D,GAE7BA,GAxCV,gB,2FCTA,QACA,SAIA,QAGA,SAGA,MAAa6gD,UAA0B,EAAAp2B,WAAvC,c,oBACS,KAAAqtC,YAAmC,KAE3C,cACC,OAAO,EAAAj1D,UAAUO,cAElB,+BACC,OAAOe,KAAK4S,cAEb,2BACC,MAAO,GAAG5S,KAAKqnB,aAEhB,uBACC,MAAO,GAAGrnB,KAAK1C,QAEhB,2BACC27B,EACAC,GAEA,OAAOD,GAAcC,EAEtB,wBACCjS,EACAC,GAEA,OAAOD,GAAQC,EAEhB,iBACC,OAAOlnB,KAAK+mB,QAAU/mB,KAAK4S,cAElB,oBACT5S,KAAK+mB,OAAS/mB,KAAKqnB,WACnBrnB,KAAKma,YACLna,KAAK2nB,gBAAgBC,KAAK,EAAAC,WAAWyR,eAGtB,sB,2DACf,MAAMphB,EAAOlY,KAAK+mB,OAClB,IAAItjB,EAAO,KAYX,GAX+B,MAARyU,GAAyB,KAATA,IAGtCzU,EAAO,EAAA2U,WAAWG,UAAUvY,KAAKyD,KAAMyU,IAQpClY,KAAK2zD,cAAgBlwD,EAAM,CAC9B,MAAM4jC,EAA0BrnC,KAAKvB,QAAQ4oC,0BAU7C,GARIrnC,KAAK2zD,aACJtsB,GACHrnC,KAAK2oB,mBAAmB3oB,KAAK2zD,aAK/B3zD,KAAK2zD,YAAclwD,EACfA,EAAM,CACT,MAAMmwD,EAAmB5zD,KAAKvB,QAAQo1D,uBAChClvC,EAA+C,QAAnC,EAAc,QAAd,EAAGlhB,EAAK/C,cAAM,eAAE6kB,2BAAmB,eAAE6hB,QACnDwsB,GAAoBjvC,GAAoC,MAApBivC,EACnCvsB,GACHrnC,KAAK0oB,gBAAgBjlB,GAKtBzD,KAAK8xB,OAAO9T,MAAMzd,IACjB,mBAAmBqzD,8BAA6CjvC,KAQnE3kB,KAAKvB,QAAQkyC,mBAEd3wC,KAAKqa,wBAGN,aACC,OAAOra,KAAK2zD,aAtFd,uB,8ECZA,eAIA,IAAKG,GAAL,SAAKA,GACJ,sBACA,gBACA,4BACA,sBACA,wBACA,0BACA,0BACA,wBACA,wBACA,sBACA,oBACA,wCACA,sCACA,kBACA,gBAfD,CAAKA,MAAc,KAiBN,EAAA1F,2BAA+C,CAC3D0F,EAAeC,SACfD,EAAeE,MACfF,EAAeG,YACfH,EAAeI,SACfJ,EAAeK,UACfL,EAAeM,WACfN,EAAeO,WACfP,EAAeQ,UACfR,EAAeS,UACfT,EAAeU,SACfV,EAAeW,QACfX,EAAeY,kBACfZ,EAAea,iBACfb,EAAec,OACfd,EAAee,OAGhB,MAAaC,UAA8B,EAAAC,qBAC1C,cAAcnlB,GACb,OAAO,EAAAwe,2BAA2BzL,SAAS/S,EAAMrxC,OAFnD,2B,+ECpCA,eAIA,SACA,SACA,SACA,SAEA,SACA,SACA,SAEA,6BACC,qBAAqBkF,GAIpB,OAAO,IAAI,EAAAuxD,iBAAiBvxD,GAG7B,sBAAsB+T,GACrB,OAAIA,aAAiB,EAAAixB,mBACb,IAAI,EAAAwsB,0BAA0Bz9C,GAElCA,aAAiB,EAAA+jC,YACb,IAAI,EAAA2Z,wBAAwB19C,GAEhCA,aAAiB,EAAAtY,UACb,IAAI,EAAAi2D,sBAAsB39C,GAE3B,IAAI,EAAA49C,kBAAkB59C,M,8EC9B/B,iBAIC,YAAsB/T,GAAA,KAAAA,OAFZ,KAAA4xD,QAAkB,EAClB,KAAAC,OAAoC,KAI9C,SAASpd,GACRl4C,KAAKs1D,OAASt1D,KAAKs1D,QAAU,GAC7Bt1D,KAAKs1D,OAAOh6D,KAAK48C,GAER,aACV,IAAI9Z,GACCp+B,KAAKq1D,QAAUj3B,IAClBp+B,KAAKq1D,OAASj3B,EACdp+B,KAAKu1D,YACLv1D,KAAKw1D,aAGP,aACC,OAAOx1D,KAAKq1D,OAEb,SACCr1D,KAAKO,KAAKP,KAAKq1D,QAEhB,YACC,GAAIr1D,KAAKs1D,OACR,IAAK,IAAIpd,KAAQl4C,KAAKs1D,OACrBpd,O,iFC3BJ,MAAsBjY,EAIrB,cACCjgC,KAAKy1D,IAAMx1B,EAAsBy1B,YAElC,KACC,OAAO11D,KAAKy1D,IAGb,oBACC3gC,EACA3sB,EACAM,KAdF,0BACgB,EAAAitD,UAAoB,G,8ECJpC,oCAIC,YAAoBC,EAAuC,IAAvC,KAAAA,eAHpB,KAAAC,UAAoB,EAKpB,cACC,OAAO51D,KAAK41D,SAEb,oBACC,OAAO51D,KAAKy6C,eAGb,OACC,MAAMob,EAAyD,IAAIxlC,IAC7D6O,EAAkB,GAExB,IAAK,IAAIhK,KAAcl1B,KAAK21D,aAC3B,IAAK31D,KAAK41D,SAAU,CACnB,MAAM/4D,EAAOq4B,EAAWr4B,KAClBi5D,EAAWD,EAAoB34D,IAAIL,GACrCi5D,EACCA,EAAS3vD,WAAa+uB,EAAW/uB,YACpCnG,KAAK41D,UAAW,EAChB51D,KAAKy6C,eAAiB,qBAAqBvlB,EAAWr4B,mBAAmBq4B,EAAW/uB,YACpF9C,QAAQiE,KAAK,yBAA0BtH,KAAKy6C,kBAG7Cob,EAAoBt1D,IAAI1D,EAAMq4B,GAC9BgK,EAAM5jC,KAAKuB,IAKd,MAAMk5D,EAA2C,GACjD,IAAK,IAAIl5D,KAAQqiC,EAAO,CACvB,MAAMhK,EAAa2gC,EAAoB34D,IAAIL,GACvCq4B,GACH6gC,EAAiBz6D,KAAK45B,GAKxB,OAAO6gC,K,2FC7CT,2BACA,2BAMA,SACA,QA0BA,2BASC,YAAoBp4B,EAAuC9M,GAAvC,KAAA8M,aAAuC,KAAA9M,kBARnD,KAAAmlC,iBAAgD,IAAI3lC,IACpD,KAAA4lC,0BAAyD,IAAI5lC,IAC7D,KAAA6lC,qBAA4C,IAAI7lC,IAChD,KAAA8lC,mBAAqC,IAAI9lC,IACzC,KAAA+lC,mBAA4C,IAAI/lC,IAKvDrwB,KAAKia,OAASja,KAAK6wB,gBAAgBztB,MAAM0W,MAGlC,QACP9Z,KAAKg2D,iBAAiBr4C,QACtB3d,KAAKk2D,qBAAqBv4C,QAC1B3d,KAAKm2D,mBAAmBx4C,QACxB3d,KAAKo2D,mBAAmBz4C,QAExB3d,KAAK+yB,eAAenxB,QAASkxB,IAC5B9yB,KAAKi2D,0BAA0B11D,IAAIuyB,EAAa,IAAIzC,OAItD,eACC,OAAOrwB,KAAK29B,WAAW5K,aAExB,4BAA4Bya,EAAc1a,GACzC,OAAO9yB,KAAK29B,WAAW04B,4BAA4B7oB,EAAW1a,GAG/D,SAAS2Y,GACRzrC,KAAK2I,QAEL,IAAK,IAAImqB,KAAe9yB,KAAK+yB,eAC5B/yB,KAAKg2D,iBAAiBz1D,IAAIuyB,EAAa,IAAIzC,KAG5C,IAAK,IAAIyC,KAAe9yB,KAAK+yB,eAAgB,CAC5C/yB,KAAKs2D,aAAexjC,EACpB,IAAK,IAAI0a,KAAa/B,EACrBzrC,KAAKu2D,2BAA2B/oB,GAChCxtC,KAAKw2D,kBAKPx2D,KAAKm2D,mBAAmBv0D,QAAQ,CAAC60D,EAAeC,KAClC,MAATD,GAGH,EAAAnhC,SAASC,uBAAuBv1B,KAAKo2D,mBAAoBK,EAAOC,KAKnE,kBAAkB9H,G,MACjB5uD,KAAKs2D,aAAe,EAAA/lD,WAAWomD,yBAC/B32D,KAAKi2D,0BAA0B11D,IAAIP,KAAKs2D,aAAc,IAAIjmC,KAC1DrwB,KAAKg2D,iBAAiBz1D,IAAIP,KAAKs2D,aAAc,IAAIjmC,KACjD,IAAK,IAAI5sB,KAAQmrD,EAChB5uD,KAAK42D,YAAYnzD,GAGlB,MAAMozD,EAAqB,GAI3B,OAH4C,QAA5C,EAAA72D,KAAKg2D,iBAAiB94D,IAAI8C,KAAKs2D,qBAAa,SAAE10D,QAAQ,CAACtE,EAAgBM,KACtEi5D,EAASv7D,KAAKsC,KAERoC,KAAKia,OAAO68C,eAAeD,GAGnC,sBAAsB/jC,GACrB,MAAMikC,EAAmB,GACzB/2D,KAAKo2D,mBAAmBx0D,QAAQ,CAACtE,EAAiBM,KACjDm5D,EAAOz7D,KAAKsC,KAEbm5D,EAAO9mD,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GAC1B,MAAMy+C,EAAa,GAcnB,OAbAmI,EAAOn1D,QAAS60D,IACf,MAAMO,EAAsBh3D,KAAKo2D,mBAAmBl5D,IAAIu5D,GACpDO,GACHA,EAAoBp1D,QAAS80D,I,MAE5B,GADkE,QAAlD,EAAG12D,KAAKi2D,0BAA0B/4D,IAAI41B,UAAY,eAAE51B,IAAIw5D,GACxD,CACf,MAAMjzD,EAAOzD,KAAKia,OAAOg9C,aAAaP,GACtC9H,EAAMtzD,KAAKmI,QAMRmrD,EAER,eACC,MAAMmI,EAAmB,GACzB/2D,KAAKo2D,mBAAmBx0D,QAAQ,CAAC60C,EAAeggB,KAC/CM,EAAOz7D,KAAKm7D,KAEbM,EAAO9mD,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GAC1B,MAAMy+C,EAAa,GAanB,OAZAmI,EAAOn1D,QAAS60D,IACf,MAAMO,EAAsBh3D,KAAKo2D,mBAAmBl5D,IAAIu5D,GACxD,GAAIO,EACH,IAAK,IAAIN,KAAYM,EAAqB,CACzC,MAAMvzD,EAAOzD,KAAKia,OAAOg9C,aAAaP,GAClCjzD,GACHmrD,EAAMtzD,KAAKmI,MAMRmrD,EAEA,2BAA2BphB,G,MAGmB,QAArD,EAAAxtC,KAAKi2D,0BAA0B/4D,IAAI8C,KAAKs2D,qBAAa,SAAE/1D,IAAIitC,EAAU5hB,eAAe,GAEpF,MAAM4I,EAAcx0B,KAAKq2D,4BAA4B7oB,EAAWxtC,KAAKs2D,cACrE,GAAI9hC,EACH,IAAK,IAAIlB,KAAckB,EAAa,CAEnC,MAAMhc,EAAQg1B,EAAU3sC,GAAG6G,OAAO6rB,YAAYD,GAC1C9a,IACH,EAAA8c,SAASC,uBACRv1B,KAAKk2D,qBACL19C,EAAMoT,cACN4hB,EAAU5hB,eAEX5rB,KAAK42D,YAAYp+C,IAiCpBxY,KAAKk2D,qBAAqBt0D,QAAQ,CAACd,EAAmB41D,KACrD12D,KAAKk2D,qBAAqB31D,IAAIm2D,EAAU,UAAY51D,MAI9C,YAAY2C,G,MACkC,QAArD,EAAAzD,KAAKi2D,0BAA0B/4D,IAAI8C,KAAKs2D,qBAAa,SAAE/1D,IAAIkD,EAAKmoB,eAAe,GAE/E,MAAMlkB,EAAS,UAAejE,EAAK5C,GAAG6G,OAAOA,UAEvCwvD,EADkB,UAAYxvD,EAAO1C,IAAKlH,GAAMA,EAAE8tB,gBAClB5mB,IAAK0xD,GAAa12D,KAAKia,OAAOg9C,aAAaP,IACjF,GAAIQ,EAAcl8D,OAAS,EAE1B,IAAK,IAAIwd,KAAS0+C,EACjB,EAAA5hC,SAASC,uBAAuBv1B,KAAKk2D,qBAAsB19C,EAAMoT,cAAenoB,EAAKmoB,eAErF5rB,KAAK42D,YAAYp+C,QAGlBxY,KAAKg2D,iBAAiB94D,IAAI8C,KAAKs2D,cAAe/1D,IAAIkD,EAAKmoB,eAAe,GAIhE,kBACP5rB,KAAKg2D,iBAAiBp0D,QAAQ,CAACu1D,EAAsBrkC,KACpDqkC,EAAqBv1D,QAAQ,CAACmmC,EAAS2uB,KACtC12D,KAAKo3D,eAAeV,OASf,eAAeA,EAAkBD,EAAgB,GACxD,MAAMY,EAAgBr3D,KAAKm2D,mBAAmBj5D,IAAIw5D,GAC7B,MAAjBW,EACHr3D,KAAKm2D,mBAAmB51D,IAAIm2D,EAAUlqD,KAAKC,IAAI4qD,EAAeZ,IAE9Dz2D,KAAKm2D,mBAAmB51D,IAAIm2D,EAAUD,GAKvC,MAAMa,EAAat3D,KAAKk2D,qBAAqBh5D,IAAIw5D,GAC7CY,GACHA,EAAW11D,QAAS21D,IACnBv3D,KAAKo3D,eAAeG,EAAWd,EAAQ,Q,8ECrP3C,cAUA,OAEA,MAAMe,UAA8B,EAAA1uD,kBACpC,MAAMC,EAAe,IAAIyuD,EAEzB,MAAazrB,UAAsB,EAAAplC,YAAnC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,UAGR,gB,MACmB,QAAlB,EAAA/I,KAAKuD,qBAAa,SAAEgE,qBAAqBw2B,mBAAmB/9B,MAG7D,UAAUyI,G,QAE+B,QAAxC,EAAkB,QAAlB,EAAAzI,KAAKuD,qBAAa,eAAEgE,4BAAoB,SAAEypB,UAAUymC,uBAAuBz3D,KAAMyI,IAZnF,mB,6BCfA,mJAwBIk2C,EAAgB,SAAW5gD,EAAQ25D,GAkHxB,IAET3Q,EAGA/kC,EACA21C,EAEAC,EACAC,OAzHetzD,IAAfmzD,GAA2Br0D,QAAQiE,KAAM,4EACzCowD,IAAeI,UAAWz0D,QAAQ2a,MAAO,4HAE9Che,KAAKjC,OAASA,EACdiC,KAAK03D,WAAaA,EAGlB13D,KAAKyd,SAAU,EAGfzd,KAAKy/C,OAAS,IAAI,UAGlBz/C,KAAKo/C,YAAc,EACnBp/C,KAAKq/C,YAAc0Y,IAGnB/3D,KAAKg4D,QAAU,EACfh4D,KAAKi4D,QAAUF,IAIf/3D,KAAKs/C,cAAgB,EACrBt/C,KAAKu/C,cAAgB/yC,KAAKmV,GAI1B3hB,KAAKk4D,iBAAoBH,IACzB/3D,KAAKm4D,gBAAkBJ,IAIvB/3D,KAAKg/C,eAAgB,EACrBh/C,KAAKi/C,cAAgB,IAIrBj/C,KAAK++C,YAAa,EAClB/+C,KAAKo4D,UAAY,EAGjBp4D,KAAK8+C,cAAe,EACpB9+C,KAAKk/C,YAAc,EAGnBl/C,KAAK6+C,WAAY,EACjB7+C,KAAKq4D,SAAW,EAChBr4D,KAAKm/C,oBAAqB,EAC1Bn/C,KAAKs4D,YAAc,EAInBt4D,KAAKu4D,YAAa,EAClBv4D,KAAKw4D,gBAAkB,EAGvBx4D,KAAKw/C,YAAa,EAGlBx/C,KAAK6R,KAAO,CAAE4mD,KAAM,GAAIC,GAAI,GAAIC,MAAO,GAAIC,OAAQ,IAGnD54D,KAAK64D,aAAe,CAAEJ,KAAM,QAAMK,OAAQC,OAAQ,QAAMC,MAAOL,MAAO,QAAMM,KAG5Ej5D,KAAKk5D,QAAU,CAAEC,IAAK,QAAML,OAAQM,IAAK,QAAMC,WAG/Cr5D,KAAKs5D,QAAUt5D,KAAKy/C,OAAO18C,QAC3B/C,KAAKu5D,UAAYv5D,KAAKjC,OAAOqW,SAASrR,QACtC/C,KAAKw5D,MAAQx5D,KAAKjC,OAAO07D,KAMzBz5D,KAAK05D,cAAgB,WAEpB,OAAOC,EAAUC,KAIlB55D,KAAK65D,kBAAoB,WAExB,OAAOF,EAAUG,OAIlB95D,KAAK+5D,UAAY,WAEhBC,EAAMV,QAAQx5C,KAAMk6C,EAAMva,QAC1Bua,EAAMT,UAAUz5C,KAAMk6C,EAAMj8D,OAAOqW,UACnC4lD,EAAMR,MAAQQ,EAAMj8D,OAAO07D,MAI5Bz5D,KAAK2I,MAAQ,WAEZqxD,EAAMva,OAAO3/B,KAAMk6C,EAAMV,SACzBU,EAAMj8D,OAAOqW,SAAS0L,KAAMk6C,EAAMT,WAClCS,EAAMj8D,OAAO07D,KAAOO,EAAMR,MAE1BQ,EAAMj8D,OAAOk8D,yBACbD,EAAMr6C,cAAeu6C,GAErBF,EAAMzhC,SAEN5b,EAAQw9C,EAAMC,MAKfp6D,KAAKu4B,QAEAwuB,EAAS,IAAI,UAGb/kC,GAAO,IAAI,cAAaO,mBAAoBxkB,EAAO8sB,GAAI,IAAI,UAAS,EAAG,EAAG,IAC1E8sC,EAAc31C,EAAKjf,QAAQs3D,UAE3BzC,EAAe,IAAI,UACnBC,EAAiB,IAAI,aAElB,WAEN,IAAIzjD,EAAW4lD,EAAMj8D,OAAOqW,SAoF5B,OAlFA2yC,EAAOjnC,KAAM1L,GAAW8a,IAAK8qC,EAAMva,QAGnCsH,EAAOuT,gBAAiBt4C,GAGxB23C,EAAUY,eAAgBxT,GAErBiT,EAAMzB,YAAc57C,IAAUw9C,EAAMC,MAExCI,EA8JK,EAAIhuD,KAAKmV,GAAK,GAAK,GAAKq4C,EAAMxB,iBA1J/BwB,EAAMhb,eAEV2a,EAAUG,OAASW,EAAeX,MAAQE,EAAM/a,cAChD0a,EAAUC,KAAOa,EAAeb,IAAMI,EAAM/a,gBAI5C0a,EAAUG,OAASW,EAAeX,MAClCH,EAAUC,KAAOa,EAAeb,KAKjCD,EAAUG,MAAQttD,KAAKC,IAAKutD,EAAM9B,gBAAiB1rD,KAAKkf,IAAKsuC,EAAM7B,gBAAiBwB,EAAUG,QAG9FH,EAAUC,IAAMptD,KAAKC,IAAKutD,EAAM1a,cAAe9yC,KAAKkf,IAAKsuC,EAAMza,cAAeoa,EAAUC,MAExFD,EAAUe,WAGVf,EAAUgB,QAAUn8C,EAGpBm7C,EAAUgB,OAASnuD,KAAKC,IAAKutD,EAAM5a,YAAa5yC,KAAKkf,IAAKsuC,EAAM3a,YAAasa,EAAUgB,UAI1D,IAAxBX,EAAMhb,cAEVgb,EAAMva,OAAO2G,gBAAiBwU,EAAWZ,EAAM/a,eAI/C+a,EAAMva,OAAOxiC,IAAK29C,GAInB7T,EAAO8T,iBAAkBlB,GAGzB5S,EAAOuT,gBAAiB3C,GAExBvjD,EAAS0L,KAAMk6C,EAAMva,QAASxiC,IAAK8pC,GAEnCiT,EAAMj8D,OAAO+8D,OAAQd,EAAMva,SAEE,IAAxBua,EAAMhb,eAEVyb,EAAeX,OAAW,EAAIE,EAAM/a,cACpCwb,EAAeb,KAAS,EAAII,EAAM/a,cAElC2b,EAAU76C,eAAgB,EAAIi6C,EAAM/a,iBAIpCwb,EAAel6D,IAAK,EAAG,EAAG,GAE1Bq6D,EAAUr6D,IAAK,EAAG,EAAG,IAItBie,EAAQ,KAMHu8C,GACJnD,EAAaoD,kBAAmBhB,EAAMj8D,OAAOqW,UAAa6mD,GAC1D,GAAM,EAAIpD,EAAexR,IAAK2T,EAAMj8D,OAAOujB,aAAiB25C,KAE5DjB,EAAMr6C,cAAeu6C,GAErBtC,EAAa93C,KAAMk6C,EAAMj8D,OAAOqW,UAChCyjD,EAAe/3C,KAAMk6C,EAAMj8D,OAAOujB,YAClCy5C,GAAc,GAEP,KAUV/6D,KAAKke,QAAU,WAEd87C,EAAMtC,WAAWwD,oBAAqB,cAAeC,IAAe,GACpEnB,EAAMtC,WAAWwD,oBAAqB,YAAaE,GAAa,GAChEpB,EAAMtC,WAAWwD,oBAAqB,QAASG,GAAc,GAE7DrB,EAAMtC,WAAWwD,oBAAqB,aAAcI,IAAc,GAClEtB,EAAMtC,WAAWwD,oBAAqB,WAAYK,IAAY,GAC9DvB,EAAMtC,WAAWwD,oBAAqB,YAAaM,IAAa,GAEhE1D,SAASoD,oBAAqB,YAAaO,GAAa,GACxD3D,SAASoD,oBAAqB,UAAWQ,GAAW,GAEpD1B,EAAMtC,WAAWwD,oBAAqB,UAAWS,IAAW,IAU7D,IAAI3B,EAAQh6D,KAERk6D,EAAc,CAAE37D,KAAM,UACtBq9D,EAAa,CAAEr9D,KAAM,SACrBs9D,EAAW,CAAEt9D,KAAM,OAEnB47D,EAAQ,CACXC,MAAQ,EACRtB,OAAQ,EACRE,MAAO,EACPC,IAAK,EACL6C,aAAc,EACdC,UAAW,EACXC,gBAAiB,EACjBC,mBAAoB,GAGjBt/C,EAAQw9C,EAAMC,KAEda,EAAM,KAGNtB,EAAY,IAAI,IAChBc,EAAiB,IAAI,IAErBj8C,EAAQ,EACRo8C,EAAY,IAAI,UAChBG,GAAc,EAEdmB,EAAc,IAAI,UAClBC,EAAY,IAAI,UAChBC,EAAc,IAAI,UAElBC,EAAW,IAAI,UACfC,EAAS,IAAI,UACbC,EAAW,IAAI,UAEfC,EAAa,IAAI,UACjBC,EAAW,IAAI,UACfC,EAAa,IAAI,UAQrB,SAASC,IAER,OAAOnwD,KAAK4iB,IAAK,IAAM4qC,EAAM5B,WAI9B,SAASoC,EAAYoC,GAEpBnC,EAAeX,OAAS8C,EAIzB,SAASC,EAAUD,GAElBnC,EAAeb,KAAOgD,EAIvB,IAEK33D,EAFD63D,GAEC73D,EAAI,IAAI,UAEL,SAAkB0lB,EAAUoyC,GAElC93D,EAAE+3D,oBAAqBD,EAAc,GACrC93D,EAAE8a,gBAAkB4K,GAEpBiwC,EAAU39C,IAAKhY,KAMbg4D,EAAQ,WAEX,IAAIh4D,EAAI,IAAI,UAEZ,OAAO,SAAgB0lB,EAAUoyC,IAEE,IAA7B/C,EAAM7a,mBAEVl6C,EAAE+3D,oBAAqBD,EAAc,IAIrC93D,EAAE+3D,oBAAqBD,EAAc,GACrC93D,EAAEqhD,aAAc0T,EAAMj8D,OAAO8sB,GAAI5lB,IAIlCA,EAAE8a,eAAgB4K,GAElBiwC,EAAU39C,IAAKhY,IAnBL,GA0BRi4D,EAAM,WAET,IAAInW,EAAS,IAAI,UAEjB,OAAO,SAAcoW,EAAQC,GAE5B,IAAIxtD,EAAUoqD,EAAMtC,WAEpB,GAAKsC,EAAMj8D,OAAOs/D,oBAAsB,CAGvC,IAAIjpD,EAAW4lD,EAAMj8D,OAAOqW,SAC5B2yC,EAAOjnC,KAAM1L,GAAW8a,IAAK8qC,EAAMva,QACnC,IAAI6d,EAAiBvW,EAAO/rD,SAG5BsiE,GAAkB9wD,KAAK+wD,IAAOvD,EAAMj8D,OAAOy/D,IAAM,EAAMhxD,KAAKmV,GAAK,KAGjEm7C,EAAS,EAAIK,EAASG,EAAiB1tD,EAAQ6tD,aAAczD,EAAMj8D,OAAOuhB,QAC1E29C,EAAO,EAAIG,EAASE,EAAiB1tD,EAAQ6tD,aAAczD,EAAMj8D,OAAOuhB,aAE7D06C,EAAMj8D,OAAO2/D,sBAGxBZ,EAASK,GAAWnD,EAAMj8D,OAAOg9C,MAAQif,EAAMj8D,OAAO88C,MAASmf,EAAMj8D,OAAO07D,KAAO7pD,EAAQ+tD,YAAa3D,EAAMj8D,OAAOuhB,QACrH29C,EAAOG,GAAWpD,EAAMj8D,OAAO6/D,IAAM5D,EAAMj8D,OAAO8/D,QAAW7D,EAAMj8D,OAAO07D,KAAO7pD,EAAQ6tD,aAAczD,EAAMj8D,OAAOuhB,UAKpHjc,QAAQiE,KAAM,gFACd0yD,EAAMnb,WAAY,IAhCX,GAwCV,SAASif,EAAUC,GAEb/D,EAAMj8D,OAAOs/D,oBAEjB7+C,GAASu/C,EAEE/D,EAAMj8D,OAAO2/D,sBAExB1D,EAAMj8D,OAAO07D,KAAOjtD,KAAKC,IAAKutD,EAAMhC,QAASxrD,KAAKkf,IAAKsuC,EAAM/B,QAAS+B,EAAMj8D,OAAO07D,KAAOsE,IAC1F/D,EAAMj8D,OAAOk8D,yBACbc,GAAc,IAId13D,QAAQiE,KAAM,uFACd0yD,EAAMjb,YAAa,GAMrB,SAASif,EAASD,GAEZ/D,EAAMj8D,OAAOs/D,oBAEjB7+C,GAASu/C,EAEE/D,EAAMj8D,OAAO2/D,sBAExB1D,EAAMj8D,OAAO07D,KAAOjtD,KAAKC,IAAKutD,EAAMhC,QAASxrD,KAAKkf,IAAKsuC,EAAM/B,QAAS+B,EAAMj8D,OAAO07D,KAAOsE,IAC1F/D,EAAMj8D,OAAOk8D,yBACbc,GAAc,IAId13D,QAAQiE,KAAM,uFACd0yD,EAAMjb,YAAa,GAUrB,SAASkf,EAAuBruB,GAE/BssB,EAAY37D,IAAKqvC,EAAMsuB,QAAStuB,EAAMuuB,SAUvC,SAASC,EAAoBxuB,GAE5BysB,EAAS97D,IAAKqvC,EAAMsuB,QAAStuB,EAAMuuB,SAwHpC,SAASE,EAAwBzuB,GAEhC,GAA6B,GAAxBA,EAAMspB,QAAQl+D,OAElBkhE,EAAY37D,IAAKqvC,EAAMspB,QAAS,GAAIoF,MAAO1uB,EAAMspB,QAAS,GAAIqF,WAExD,CAEN,IAAIj5D,EAAI,IAAQsqC,EAAMspB,QAAS,GAAIoF,MAAQ1uB,EAAMspB,QAAS,GAAIoF,OAC1D/4D,EAAI,IAAQqqC,EAAMspB,QAAS,GAAIqF,MAAQ3uB,EAAMspB,QAAS,GAAIqF,OAE9DrC,EAAY37D,IAAK+E,EAAGC,IAMtB,SAASi5D,EAAqB5uB,GAE7B,GAA6B,GAAxBA,EAAMspB,QAAQl+D,OAElBqhE,EAAS97D,IAAKqvC,EAAMspB,QAAS,GAAIoF,MAAO1uB,EAAMspB,QAAS,GAAIqF,WAErD,CAEN,IAAIj5D,EAAI,IAAQsqC,EAAMspB,QAAS,GAAIoF,MAAQ1uB,EAAMspB,QAAS,GAAIoF,OAC1D/4D,EAAI,IAAQqqC,EAAMspB,QAAS,GAAIqF,MAAQ3uB,EAAMspB,QAAS,GAAIqF,OAE9DlC,EAAS97D,IAAK+E,EAAGC,IAMnB,SAASk5D,EAAuB7uB,GAE/B,IAAI8uB,EAAK9uB,EAAMspB,QAAS,GAAIoF,MAAQ1uB,EAAMspB,QAAS,GAAIoF,MACnDK,EAAK/uB,EAAMspB,QAAS,GAAIqF,MAAQ3uB,EAAMspB,QAAS,GAAIqF,MAEnD5zC,EAAWne,KAAKkiB,KAAMgwC,EAAKA,EAAKC,EAAKA,GAEzCnC,EAAWj8D,IAAK,EAAGoqB,GAoBpB,SAASi0C,EAAuBhvB,GAE/B,GAA6B,GAAxBA,EAAMspB,QAAQl+D,OAElBmhE,EAAU57D,IAAKqvC,EAAMspB,QAAS,GAAIoF,MAAO1uB,EAAMspB,QAAS,GAAIqF,WAEtD,CAEN,IAAIj5D,EAAI,IAAQsqC,EAAMspB,QAAS,GAAIoF,MAAQ1uB,EAAMspB,QAAS,GAAIoF,OAC1D/4D,EAAI,IAAQqqC,EAAMspB,QAAS,GAAIqF,MAAQ3uB,EAAMspB,QAAS,GAAIqF,OAE9DpC,EAAU57D,IAAK+E,EAAGC,GAInB62D,EAAYyC,WAAY1C,EAAWD,GAAcn8C,eAAgBi6C,EAAM9a,aAEvE,IAAItvC,EAAUoqD,EAAMtC,WAEpB8C,EAAY,EAAIhuD,KAAKmV,GAAKy6C,EAAY92D,EAAIsK,EAAQ6tD,cAElDZ,EAAU,EAAIrwD,KAAKmV,GAAKy6C,EAAY72D,EAAIqK,EAAQ6tD,cAEhDvB,EAAYp8C,KAAMq8C,GAInB,SAAS2C,EAAoBlvB,GAE5B,GAA6B,GAAxBA,EAAMspB,QAAQl+D,OAElBshE,EAAO/7D,IAAKqvC,EAAMspB,QAAS,GAAIoF,MAAO1uB,EAAMspB,QAAS,GAAIqF,WAEnD,CAEN,IAAIj5D,EAAI,IAAQsqC,EAAMspB,QAAS,GAAIoF,MAAQ1uB,EAAMspB,QAAS,GAAIoF,OAC1D/4D,EAAI,IAAQqqC,EAAMspB,QAAS,GAAIqF,MAAQ3uB,EAAMspB,QAAS,GAAIqF,OAE9DjC,EAAO/7D,IAAK+E,EAAGC,GAIhBg3D,EAASsC,WAAYvC,EAAQD,GAAWt8C,eAAgBi6C,EAAM3B,UAE9D6E,EAAKX,EAASj3D,EAAGi3D,EAASh3D,GAE1B82D,EAASv8C,KAAMw8C,GAIhB,SAASyC,EAAsBnvB,GAE9B,IAAI8uB,EAAK9uB,EAAMspB,QAAS,GAAIoF,MAAQ1uB,EAAMspB,QAAS,GAAIoF,MACnDK,EAAK/uB,EAAMspB,QAAS,GAAIqF,MAAQ3uB,EAAMspB,QAAS,GAAIqF,MAEnD5zC,EAAWne,KAAKkiB,KAAMgwC,EAAKA,EAAKC,EAAKA,GAEzClC,EAASl8D,IAAK,EAAGoqB,GAEjB+xC,EAAWn8D,IAAK,EAAGiM,KAAK4iB,IAAKqtC,EAASl3D,EAAIi3D,EAAWj3D,EAAGy0D,EAAM5B,YAE9D0F,EAAUpB,EAAWn3D,GAErBi3D,EAAW18C,KAAM28C,GA8BlB,SAASrB,EAAaxrB,GAErB,IAAuB,IAAlBoqB,EAAMv8C,QAAX,CAUA,IAAIuhD,EAEJ,OATApvB,EAAMqvB,iBAKNjF,EAAMtC,WAAWwH,MAAQlF,EAAMtC,WAAWwH,QAAU/gE,OAAO+gE,QAIlDtvB,EAAMuvB,QAEd,KAAK,EAEJH,EAAchF,EAAMnB,aAAaJ,KACjC,MAED,KAAK,EAEJuG,EAAchF,EAAMnB,aAAaE,OACjC,MAED,KAAK,EAEJiG,EAAchF,EAAMnB,aAAaF,MACjC,MAED,QAECqG,GAAgB,EAIlB,OAASA,GAER,KAAK,QAAMhG,MAEV,IAA0B,IAArBgB,EAAMjb,WAAuB,QAnUrC,SAA+BnP,GAE9B4sB,EAAWj8D,IAAKqvC,EAAMsuB,QAAStuB,EAAMuuB,SAmUnCiB,CAAsBxvB,GAEtBjzB,EAAQw9C,EAAMnB,MAEd,MAED,KAAK,QAAMF,OAEV,GAAKlpB,EAAMyvB,SAAWzvB,EAAM0vB,SAAW1vB,EAAM2vB,SAAW,CAEvD,IAAyB,IAApBvF,EAAMnb,UAAsB,OAEjCuf,EAAoBxuB,GAEpBjzB,EAAQw9C,EAAMlB,QAER,CAEN,IAA4B,IAAvBe,EAAMlb,aAAyB,OAEpCmf,EAAuBruB,GAEvBjzB,EAAQw9C,EAAMrB,OAIf,MAED,KAAK,QAAMG,IAEV,GAAKrpB,EAAMyvB,SAAWzvB,EAAM0vB,SAAW1vB,EAAM2vB,SAAW,CAEvD,IAA4B,IAAvBvF,EAAMlb,aAAyB,OAEpCmf,EAAuBruB,GAEvBjzB,EAAQw9C,EAAMrB,WAER,CAEN,IAAyB,IAApBkB,EAAMnb,UAAsB,OAEjCuf,EAAoBxuB,GAEpBjzB,EAAQw9C,EAAMlB,IAIf,MAED,QAECt8C,EAAQw9C,EAAMC,KAIXz9C,IAAUw9C,EAAMC,OAEpBtC,SAAS0H,iBAAkB,YAAa/D,GAAa,GACrD3D,SAAS0H,iBAAkB,UAAW9D,GAAW,GAEjD1B,EAAMr6C,cAAei8C,KAMvB,SAASH,EAAa7rB,GAErB,IAAuB,IAAlBoqB,EAAMv8C,QAIX,OAFAmyB,EAAMqvB,iBAEGtiD,GAER,KAAKw9C,EAAMrB,OAEV,IAA4B,IAAvBkB,EAAMlb,aAAyB,QAtYvC,SAAgClP,GAE/BusB,EAAU57D,IAAKqvC,EAAMsuB,QAAStuB,EAAMuuB,SAEpC/B,EAAYyC,WAAY1C,EAAWD,GAAcn8C,eAAgBi6C,EAAM9a,aAEvE,IAAItvC,EAAUoqD,EAAMtC,WAEpB8C,EAAY,EAAIhuD,KAAKmV,GAAKy6C,EAAY92D,EAAIsK,EAAQ6tD,cAElDZ,EAAU,EAAIrwD,KAAKmV,GAAKy6C,EAAY72D,EAAIqK,EAAQ6tD,cAEhDvB,EAAYp8C,KAAMq8C,GAElBnC,EAAMzhC,SA0XJknC,CAAuB7vB,GAEvB,MAED,KAAKuqB,EAAMnB,MAEV,IAA0B,IAArBgB,EAAMjb,WAAuB,QA5XrC,SAA+BnP,GAE9B6sB,EAASl8D,IAAKqvC,EAAMsuB,QAAStuB,EAAMuuB,SAEnCzB,EAAWmC,WAAYpC,EAAUD,GAE5BE,EAAWn3D,EAAI,EAEnBu4D,EAAUnB,KAECD,EAAWn3D,EAAI,GAE1By4D,EAASrB,KAIVH,EAAW18C,KAAM28C,GAEjBzC,EAAMzhC,SA4WJmnC,CAAsB9vB,GAEtB,MAED,KAAKuqB,EAAMlB,IAEV,IAAyB,IAApBe,EAAMnb,UAAsB,QA9WpC,SAA6BjP,GAE5B0sB,EAAO/7D,IAAKqvC,EAAMsuB,QAAStuB,EAAMuuB,SAEjC5B,EAASsC,WAAYvC,EAAQD,GAAWt8C,eAAgBi6C,EAAM3B,UAE9D6E,EAAKX,EAASj3D,EAAGi3D,EAASh3D,GAE1B82D,EAASv8C,KAAMw8C,GAEftC,EAAMzhC,SAsWJonC,CAAoB/vB,IAQvB,SAAS8rB,EAAW9rB,IAEI,IAAlBoqB,EAAMv8C,UAIXq6C,SAASoD,oBAAqB,YAAaO,GAAa,GACxD3D,SAASoD,oBAAqB,UAAWQ,GAAW,GAEpD1B,EAAMr6C,cAAek8C,GAErBl/C,EAAQw9C,EAAMC,MAIf,SAASiB,EAAczrB,IAEC,IAAlBoqB,EAAMv8C,UAA0C,IAArBu8C,EAAMjb,YAA0BpiC,IAAUw9C,EAAMC,MAAQz9C,IAAUw9C,EAAMrB,SAExGlpB,EAAMqvB,iBACNrvB,EAAMgwB,kBAEN5F,EAAMr6C,cAAei8C,GA1XtB,SAA2BhsB,GAErBA,EAAMwtB,OAAS,EAEnBY,EAASrB,KAEE/sB,EAAMwtB,OAAS,GAE1BU,EAAUnB,KAIX3C,EAAMzhC,SAgXNsnC,CAAkBjwB,GAElBoqB,EAAMr6C,cAAek8C,IAItB,SAASF,GAAW/rB,IAEI,IAAlBoqB,EAAMv8C,UAA0C,IAArBu8C,EAAMxa,aAA4C,IAApBwa,EAAMnb,WApXrE,SAAwBjP,GAEvB,IAAI5f,GAAc,EAElB,OAAS4f,EAAMkwB,SAEd,KAAK9F,EAAMnoD,KAAK6mD,GACfwE,EAAK,EAAGlD,EAAM1B,aACdtoC,GAAc,EACd,MAED,KAAKgqC,EAAMnoD,KAAK+mD,OACfsE,EAAK,GAAKlD,EAAM1B,aAChBtoC,GAAc,EACd,MAED,KAAKgqC,EAAMnoD,KAAK4mD,KACfyE,EAAKlD,EAAM1B,YAAa,GACxBtoC,GAAc,EACd,MAED,KAAKgqC,EAAMnoD,KAAK8mD,MACfuE,GAAOlD,EAAM1B,YAAa,GAC1BtoC,GAAc,EAKXA,IAGJ4f,EAAMqvB,iBAENjF,EAAMzhC,UAqVPwnC,CAAenwB,GAIhB,SAAS0rB,GAAc1rB,GAEtB,IAAuB,IAAlBoqB,EAAMv8C,QAAX,CAIA,OAFAmyB,EAAMqvB,iBAEGrvB,EAAMspB,QAAQl+D,QAEtB,KAAK,EAEJ,OAASg/D,EAAMd,QAAQC,KAEtB,KAAK,QAAML,OAEV,IAA4B,IAAvBkB,EAAMlb,aAAyB,OAEpCuf,EAAwBzuB,GAExBjzB,EAAQw9C,EAAM2B,aAEd,MAED,KAAK,QAAM7C,IAEV,IAAyB,IAApBe,EAAMnb,UAAsB,OAEjC2f,EAAqB5uB,GAErBjzB,EAAQw9C,EAAM4B,UAEd,MAED,QAECp/C,EAAQw9C,EAAMC,KAIhB,MAED,KAAK,EAEJ,OAASJ,EAAMd,QAAQE,KAEtB,KAAK,QAAMC,UAEV,IAA0B,IAArBW,EAAMjb,aAA4C,IAApBib,EAAMnb,UAAsB,QAnVpE,SAAmCjP,GAE7BoqB,EAAMjb,YAAa0f,EAAuB7uB,GAE1CoqB,EAAMnb,WAAY2f,EAAqB5uB,GAiVxCowB,CAA0BpwB,GAE1BjzB,EAAQw9C,EAAM6B,gBAEd,MAED,KAAK,QAAMiE,aAEV,IAA0B,IAArBjG,EAAMjb,aAA+C,IAAvBib,EAAMlb,aAAyB,QArVvE,SAAsClP,GAEhCoqB,EAAMjb,YAAa0f,EAAuB7uB,GAE1CoqB,EAAMlb,cAAeuf,EAAwBzuB,GAmV9CswB,CAA6BtwB,GAE7BjzB,EAAQw9C,EAAM8B,mBAEd,MAED,QAECt/C,EAAQw9C,EAAMC,KAIhB,MAED,QAECz9C,EAAQw9C,EAAMC,KAIXz9C,IAAUw9C,EAAMC,MAEpBJ,EAAMr6C,cAAei8C,IAMvB,SAASJ,GAAa5rB,GAErB,IAAuB,IAAlBoqB,EAAMv8C,QAKX,OAHAmyB,EAAMqvB,iBACNrvB,EAAMgwB,kBAEGjjD,GAER,KAAKw9C,EAAM2B,aAEV,IAA4B,IAAvB9B,EAAMlb,aAAyB,OAEpC8f,EAAuBhvB,GAEvBoqB,EAAMzhC,SAEN,MAED,KAAK4hC,EAAM4B,UAEV,IAAyB,IAApB/B,EAAMnb,UAAsB,OAEjCigB,EAAoBlvB,GAEpBoqB,EAAMzhC,SAEN,MAED,KAAK4hC,EAAM6B,gBAEV,IAA0B,IAArBhC,EAAMjb,aAA4C,IAApBib,EAAMnb,UAAsB,QAvUlE,SAAkCjP,GAE5BoqB,EAAMjb,YAAaggB,EAAsBnvB,GAEzCoqB,EAAMnb,WAAYigB,EAAoBlvB,GAqUzCuwB,CAAyBvwB,GAEzBoqB,EAAMzhC,SAEN,MAED,KAAK4hC,EAAM8B,mBAEV,IAA0B,IAArBjC,EAAMjb,aAA+C,IAAvBib,EAAMlb,aAAyB,QAzUrE,SAAqClP,GAE/BoqB,EAAMjb,YAAaggB,EAAsBnvB,GAEzCoqB,EAAMlb,cAAe8f,EAAuBhvB,GAuU/CwwB,CAA4BxwB,GAE5BoqB,EAAMzhC,SAEN,MAED,QAEC5b,EAAQw9C,EAAMC,MAMjB,SAASmB,GAAY3rB,IAEG,IAAlBoqB,EAAMv8C,UAIXu8C,EAAMr6C,cAAek8C,GAErBl/C,EAAQw9C,EAAMC,MAIf,SAASe,GAAevrB,IAEA,IAAlBoqB,EAAMv8C,SAEXmyB,EAAMqvB,iBAMPjF,EAAMtC,WAAW8H,iBAAkB,cAAerE,IAAe,GAEjEnB,EAAMtC,WAAW8H,iBAAkB,YAAapE,GAAa,GAC7DpB,EAAMtC,WAAW8H,iBAAkB,QAASnE,GAAc,GAE1DrB,EAAMtC,WAAW8H,iBAAkB,aAAclE,IAAc,GAC/DtB,EAAMtC,WAAW8H,iBAAkB,WAAYjE,IAAY,GAC3DvB,EAAMtC,WAAW8H,iBAAkB,YAAahE,IAAa,GAE7DxB,EAAMtC,WAAW8H,iBAAkB,UAAW7D,IAAW,IAIpB,IAAhC3B,EAAMtC,WAAW2I,WAErBrG,EAAMtC,WAAW2I,SAAW,GAM7BrgE,KAAKu4B,UAINomB,EAAczjD,UAAYD,OAAO0C,OAAQ,IAAgBzC,WACzDyjD,EAAczjD,UAAU6Y,YAAc4qC,EAWtC,IAAI2hB,EAAc,SAAWviE,EAAQ25D,GAEpC/Y,EAAcvjD,KAAM4E,KAAMjC,EAAQ25D,GAElC13D,KAAK64D,aAAaJ,KAAO,QAAMQ,IAC/Bj5D,KAAK64D,aAAaF,MAAQ,QAAMG,OAEhC94D,KAAKk5D,QAAQC,IAAM,QAAMF,IACzBj5D,KAAKk5D,QAAQE,IAAM,QAAM6G,cAI1BK,EAAYplE,UAAYD,OAAO0C,OAAQ,IAAgBzC,WACvDolE,EAAYplE,UAAU6Y,YAAcusD,G,8ECroCpC,yBACC,cAAcC,GACb,MAAMntC,EAAQmtC,EAAsB3xD,MAAM,MACpC4xD,EAA2B,GACjC,IAAK,IAAIC,KAAQrtC,EACXqtC,EAAK5yD,MAAM,2BACf4yD,EAAOA,EAAKxyD,QAAQ,UAAW,WAC/BuyD,EAAellE,KAAKmlE,IAGtB,OAAOD,EAAet7D,KAAK,S,8ECV7B,cAIA,OAGA,SAGuC,EAAA4D,iBAEvC,MAAsB+C,UAA+D,EAAAlF,YAArF,c,oBAMiB,KAAAmF,0BAAqD,IAAI,EAAAiwC,wBAAwB/7C,MAEjG,kBACCiG,MAAMmB,kBACNpH,KAAK8L,0BAA0B1E,mBAVjC,wB,8ECZA,cACA,QACA,QAYA,SAAgBs5D,EAAwBniE,EAAcE,EAA2B,IAChF,MAAMuO,EAAiBvO,EAAQkiE,QAAUpiE,EACnCqiE,EAAiBniE,EAAQoiE,KAAO,MAChCC,EAAiBriE,EAAQsiE,IAAM,CAAC,MAAO,OACvCC,EAAkBviE,EAAQuiE,gBAC1BC,EAAmBxiE,EAAQwiE,iBAC3BC,EAAWziE,EAAQyiE,SACnBC,EAAY1iE,EAAQ0iE,WAAa,GACvC,OAAO,cAAmB,EAAAC,iCACzB,cACC,OAAO7iE,EAER,kBACC0H,MAAMmB,kBACNpH,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAChFA,KAAK8L,0BAA0Bu1D,yBAAyBrhE,KAAKshE,gBAAgBzjE,KAAKmC,OAElFA,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OAE7FkhE,GACHlhE,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAACi1D,IAG3E,eAAe9+D,GACd,OAAO0+D,EAAe1+D,GAEvB,gBAAgBA,GACf,OAAOw+D,EAER,iBACC,OAAO5zD,EAER,0BACC,OAAIk0D,EACIC,EAAUn8D,IAAKu8D,GAAM,IAAI,EAAAC,qBAAqBxhE,KAAMkhE,EAAUK,IAE9D,GAGC,wBACT,IAAIE,EAAmBzhE,KAAK8L,0BAA0BO,8BACtD,GAAIo1D,GAAoBR,IAClBA,EAAiBte,SAAS8e,GAAmB,CAGjD,MAAMp/B,EAAmBriC,KAAKa,GAAG6G,OAAOmF,8BAA8B,GAErE40D,EADGp/B,EACgBA,EAAiB9jC,KAEjByiE,EAItB,MAAMziE,EAAOkjE,GAAoBT,GAAmB,EAAAn9D,oBAAoB/E,MACxE,MAAO,CAACP,EAAMA,KAtDjB,4BA0DA,MAAamjE,UAAuBhB,EAAwB,WAAY,CACvEK,GAAI,CAAC,KAAM,MACXC,gBAAiB,EAAAn9D,oBAAoBK,KACrC+8D,iBAAkB,CAAC,EAAAp9D,oBAAoBI,KAAM,EAAAJ,oBAAoBK,KAAM,EAAAL,oBAAoBM,MAC3F+8D,SAAU,EAAAr9D,oBAAoB/E,UAJ/B,mBAMA,MAAa6iE,UAAkBjB,EAAwB,MAAO,CAC7DK,GAAI,CAAC,OAAQ,QACbC,gBAAiB,EAAAn9D,oBAAoBK,KACrC+8D,iBAAkB,CAAC,EAAAp9D,oBAAoBI,KAAM,EAAAJ,oBAAoBK,KAAM,EAAAL,oBAAoBM,MAC3F+8D,SAAU,EAAAr9D,oBAAoB/E,UAJ/B,cAMA,MAAa8iE,UAAkBlB,EAAwB,SAAvD,cACA,MAAamB,UAAkBnB,EAAwB,SAAvD,cACA,MAAaoB,UAAkBpB,EAAwB,SAAvD,cACA,MAAaqB,UAAkBrB,EAAwB,MAAO,CAACK,GAAI,CAAC,IAAK,SAAzE,cACA,MAAaiB,UAAsBtB,EAAwB,UAAW,CACrEK,GAAI,CAAC,IAAK,KACVC,gBAAiB,EAAAn9D,oBAAoBK,SAFtC,kBAIA,MAAa+9D,UAAmBvB,EAAwB,OAAQ,CAACK,GAAI,CAAC,OAAQ,SAA9E,gB,8EC5FA,cACA,QAEA,QAEA,SAASmB,EAAsB3jE,GAE9B,MAAO,CAACkxB,WAAY,CAAClxB,KADT,EAAAuF,qBAAqBwF,QAAQ/K,KAK1C,aAEA,SAEA,MAAM4jE,UAA+B,EAAAr5D,iBAArC,c,oBACC,KAAAvK,KAAO,EAAAggB,YAAYvf,QAAQ,EAAA8E,qBAAqBwF,QAAQ,EAAAzF,oBAAoB/E,OAAQ,CACnF6lC,KAAM,CACLC,QAAS,EAAA9gC,qBAAqBkB,IAAI,CAACnI,EAAM/B,KACjC,CAAC+B,KAAMA,EAAMS,MAAOxC,QAI9B,KAAAsnE,KAAO,EAAA7jD,YAAY3f,QAAQ,EAAGsjE,EAAsB,EAAAr+D,oBAAoBE,OACxE,KAAAs+D,IAAM,EAAA9jD,YAAYvf,QAAQ,EAAGkjE,EAAsB,EAAAr+D,oBAAoBG,MACvE,KAAA8hC,MAAQ,EAAAvnB,YAAYzf,MAAM,EAAGojE,EAAsB,EAAAr+D,oBAAoB/E,QACvE,KAAAgU,KAAO,EAAAyL,YAAYhf,QAAQ,CAAC,EAAG,GAAI2iE,EAAsB,EAAAr+D,oBAAoBI,OAC7E,KAAA8O,KAAO,EAAAwL,YAAY/e,QAAQ,CAAC,EAAG,EAAG,GAAI0iE,EAAsB,EAAAr+D,oBAAoBK,OAChF,KAAAgP,KAAO,EAAAqL,YAAY9e,QAAQ,CAAC,EAAG,EAAG,EAAG,GAAIyiE,EAAsB,EAAAr+D,oBAAoBM,QAEpF,MAAM4E,EAAe,IAAIo5D,EACzB,MAAaG,UAAuB,EAAA37D,YAApC,c,oBACC,KAAAqC,cAAgBD,EAMA,KAAA+C,0BAAqD,IAAI,EAAAiwC,wBAAwB/7C,MACvF,KAAAuiE,mCAA6C,EANvD,cACC,MAAO,WAOR,kBACCviE,KAAK8L,0BAA0B1E,kBAE/BpH,KAAK8L,0BAA0Bu1D,yBAA0Bj/D,GAAkBkgE,EAAepmB,aAC1Fl8C,KAAK8L,0BAA0BC,kCAAkC,IAAM,IACvE/L,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAACjM,KAAKwiE,2BAa/E,UAAU/5D,GACT,MAAM+O,EAAQxX,KAAKyiE,eACnB,GAAIjrD,EAAO,CACV,MAAMkrD,EAAkB1iE,KAAKwiE,yBACvBllE,EAAQ,EAAAgL,UAAUC,IAAIiP,EAAMla,OAE5ByP,EAAY,GAAG21D,KADH1iE,KAAK2iE,uBACgCrlE,IACvDmL,EAA8BwE,eAAejN,KAAM,CAAC+M,SAEpD1J,QAAQiE,KAAK,8CAA8CtH,KAAK4f,GAAGrhB,SAIrE,+BACqB,MAAhByB,KAAK4f,GAAGrhB,MACX8E,QAAQiE,KAAK,sCAEd,MAAMo7D,EAAkB,EAAA5+D,qBAAqB9D,KAAK4f,GAAGrhB,MAIrD,OAHuB,MAAnBmkE,GACHr/D,QAAQiE,KAAK,sCAEPo7D,EAGR,qBACC1iE,KAAK4iE,gBACJ5iE,KAAK4iE,iBACL,IAAIvyC,IAAwC,CAC3C,CAAC,EAAAxsB,oBAAoBE,KAAM/D,KAAK/B,EAAEmkE,MAClC,CAAC,EAAAv+D,oBAAoBG,IAAKhE,KAAK/B,EAAEokE,KACjC,CAAC,EAAAx+D,oBAAoB/E,MAAOkB,KAAK/B,EAAE6nC,OACnC,CAAC,EAAAjiC,oBAAoBI,KAAMjE,KAAK/B,EAAE6U,MAClC,CAAC,EAAAjP,oBAAoBK,KAAMlE,KAAK/B,EAAE8U,MAClC,CAAC,EAAAlP,oBAAoBM,KAAMnE,KAAK/B,EAAEiV,QAEpC,MAAMwvD,EAAkB,EAAA5+D,qBAAqB9D,KAAK4f,GAAGrhB,MACrD,OAAOyB,KAAK4iE,gBAAgB1lE,IAAIwlE,GAEjC,wBACC,OAAO1iE,KAAKoI,YAAYk6D,EAAepmB,cAnEzC,mBAKiB,EAAAA,YAAc,O,8ECpC/B,cACA,QACA,QAUA,SAAgB2mB,EAAwBtkE,EAAcE,EAA2B,IAChF,MAAMuO,EAAiBvO,EAAQkiE,QAAUpiE,EACnCqiE,EAAiBniE,EAAQoiE,KAAO,MAChCC,EAAiBriE,EAAQsiE,IAAM,CAAC,MAAO,MAAO,OAC9C+B,EAA0BrkE,EAAQ01B,SAAW,GAC7C+sC,EAAWziE,EAAQyiE,UAAY,EAAAr9D,oBAAoB/E,MACnDqiE,EAAY1iE,EAAQ0iE,WAAa,GACvC,OAAO,cAAmB,EAAA4B,iCACzB,cACC,OAAOxkE,EAER,kBACC0H,MAAMmB,kBACNpH,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAChFA,KAAK8L,0BAA0Bu1D,yBAAyBrhE,KAAKshE,gBAAgBzjE,KAAKmC,OAClFA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAE1F,eAAeoC,GACxB,OAAO0+D,EAAe1+D,GAEb,gBAAgBA,GACzB,OAAOw+D,EAER,iBACC,OAAO5zD,EAEE,yBACT,MAAO,CAACk0D,GAET,uBAAuBrkE,GACtB,OAAOimE,EAAwBjmE,GAEhC,0BACC,OAAOskE,EAAUn8D,IAAKu8D,GAAM,IAAI,EAAAC,qBAAqBxhE,KAAMkhE,EAAUK,MAjCxE,4BAqCA,MAAayB,UAAoBH,EAAwB,QAAS,CAAC9B,GAAI,CAAC,QAAS,MAAO,OAAQ5sC,QAAS,CAAC1nB,IAAK,OAA/G,gBACA,MAAaw2D,UAA0BJ,EAAwB,eAAgB,CAAC9B,GAAI,CAAC,IAAK,IAAK,YAA/F,sBACA,MAAamC,UAAyBL,EAAwB,aAAc,CAAC9B,GAAI,CAAC,QAAS,QAAS,SAApG,sB,6BCnDA,OAAe,80D,6BCAf,OAAe,4N,2FCAf,QACA,OACA,QAEA,OACA,SACA,SACA,SACA,SACA,SACA,SAEa,EAAAoC,gBAAkB,CAC9Bn5D,UAAW,EACXC,UAAW,IAGZ,MAAMm5D,UAAoC,EAAAC,yBACzC,EAAA7qC,2BACC,EAAAd,sBAAsB,EAAAJ,oBAAoB,EAAAhI,gBAAgB,EAAA0hB,iBAAiB,EAAAloC,wBAF7E,c,oBAKC,KAAAkB,UAAY,EAAAuU,YAAYzf,MAAM,EAAAqkE,gBAAgBn5D,WAC9C,KAAAC,UAAY,EAAAsU,YAAYzf,MAAM,EAAAqkE,gBAAgBl5D,YAY/C,MAAMlB,EAAe,IAAIq6D,EAEzB,MAAaE,UAA4B,EAAAloD,aAAzC,c,oBACC,KAAApS,cAAgBD,EAgBP,KAAAuvB,uBAA+C,IAAI,EAAAT,qBAAqB73B,KAAM,CAACmgD,eAAe,IAC9F,KAAAvnB,6BAA0D,IAAI,EAAAF,0BAA0B14B,KAAM,CACtGmgD,eAAe,IAEP,KAAAojB,2BAAsD,IAAI,EAAAC,wBAAwBxjE,KAAM,CAChGmgD,eAAe,IApBhB,cACC,MAAO,gBAGR,kBACC,OAAO,IAAI,EAAAv2C,qBAAqB,CAC/BQ,cAAc,EACdN,KAAM,EAAAC,UACNF,MAAO,SACPqnC,QAAS,EACTlnC,UAAW,EACXC,UAAW,IAWb,kBACCjK,KAAKwI,OAAO24B,4BAA4B,KACvCnhC,KAAKs4B,uBAAuBlxB,kBAC5BpH,KAAK44B,6BAA6BxxB,kBAClCpH,KAAKujE,2BAA2Bn8D,oBAI5B,O,mDACL,EAAAiqC,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MACtB,EAAAw3B,mBAAmBe,OAAOv4B,MAC1BA,KAAKs4B,uBAAuBC,SAC5Bv4B,KAAK44B,6BAA6BL,SAClCv4B,KAAKujE,2BAA2BhrC,SAE5Bv4B,KAAK+b,YACR/b,KAAK+b,UAAU0nD,gBAAkBzjE,KAAK4f,GAAG8jD,kBACzC1jE,KAAK+b,UAAU9R,UAAYjK,KAAK4f,GAAG3V,UACnCjK,KAAK+b,UAAU/R,UAAYhK,KAAK4f,GAAG5V,WAGpChK,KAAK2jE,aAAa3jE,KAAKmD,cA9CzB,yB,2FCrCA,OAEA,SACA,QACA,SAQA,OACA,SAAgBkgE,EAAoDhlD,GACnE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAulD,YAAc,EAAArlD,YAAY3f,QAAQ,EAAG,EAAAg5B,oBAAoB4rC,IACzD,KAAAK,QAAU,EAAAtlD,YAAYtf,cACrB,EAAA64B,YAAYC,kBAAkB8O,QAC9B,EAAA5O,oBAAoBurC,EAAyB,gBAE9C,KAAAE,kBAAoB,EAAAnlD,YAAYzf,MAAM,EAAG,CAAC2wB,WAAY,CAACm0C,YAAa,OAPtE,6BAUiC,EAAA3nD,SAIOonD,EAAyB,EAAAv6D,kBACrB,EAAAsS,aAK5C,MAAaooD,UAAgC,EAAAtrC,yBAC5C,YAAYz0B,EAA4B00B,GACvClyB,MAAMxC,EAAM00B,GAEb,kBACCn4B,KAAKo4B,UAAUp4B,KAAKyD,KAAKxF,EAAE2lE,YAAa5jE,KAAKyD,KAAKxF,EAAE4lE,SAE/C,S,mDACL7jE,KAAKq4B,QAAQr4B,KAAKyD,KAAKN,SAAU,SAAUnD,KAAKyD,KAAKxF,EAAE2lE,YAAa5jE,KAAKyD,KAAKxF,EAAE4lE,YAEjF,cAAoBpgE,G,mDACnBA,EAAK8/D,2BAA2BhrC,aAXlC,6B,2FCjCA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,MAAMurC,UAA8B,EAAAtrC,2BACnC,EAAAd,sBAAsB,EAAAJ,oBAAoB,EAAAhI,gBAAgB,EAAA0hB,iBAAiB,EAAAloC,wBAE5E,MAAMC,EAAe,IAAI+6D,EAEzB,MAAaC,UAA6B,EAAAtyB,oBAA1C,c,oBACC,KAAAzoC,cAAgBD,EAChB,cACC,MAAO,iBAGR,mBAEU,+BACT,OAAO,IAAI,EAAAi7D,sBAA6ChkE,KAAM,EAAAikE,uBAGzD,O,yDACCjkE,KAAKkkE,sBAEX,EAAA7yB,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MACtB,EAAAw3B,mBAAmBe,OAAOv4B,MAE1BA,KAAK2jE,aAAa3jE,KAAKmD,cAnBzB,0B,2FCdA,4BAGA,QACA,QACA,SACA,SACA,SAUA,SACA,SACA,QASMghE,EAAe,CAAC5lE,KAAM,UAEf,EAAA6lE,oBAAsB,CAClCC,KAAM,EACNC,IAAK,KAGN,cACA,SACA,SACA,SAEA,OAGA,QACA,QAEA,SAAgBC,EAAsDlmD,GACrE,OAAO,cAAoBA,EAApB,c,oBACN,KAAAf,OAAS,EAAAiB,YAAYxf,SACrB,KAAA6/C,SAAW,EAAArgC,YAAYtf,cAAc,GAAI,CACxCkoC,eAAgB,CACfC,QAAS,EAAAhnC,YAAYsvC,SAQvB,KAAA+P,OAAS,EAAAlhC,YAAY/e,QAAQ,CAAC,EAAG,EAAG,GAAI,CAACqgC,MAAM,IAC/C,KAAAwkC,KAAO,EAAA9lD,YAAYzf,MAAM,EAAAslE,oBAAoBC,KAAM,CAAC99B,MAAO,CAAC,EAAG,OAC/D,KAAA+9B,IAAM,EAAA/lD,YAAYzf,MAAM,EAAAslE,oBAAoBE,IAAK,CAAC/9B,MAAO,CAAC,EAAG,OAK7D,KAAAi+B,kBAAoB,EAAAjmD,YAAY5f,OAAO,KAAM,CAC5C4b,SAAU,CAAC9W,EAAoB+T,KAC9BitD,EAAuBC,iCAAiCjhE,QAtB5D,+BA4BA,MAAakhE,UAAkC,EAAAC,6BAC9C,EAAAC,4BAA4B,EAAAzmD,uBAAuB,EAAA0mD,iBAAiBP,EAA2B,EAAAz7D,wBADhG,8BAIA,MAAai8D,UAA8F,EAAA5oD,aAA3G,c,oBAKiB,KAAAE,aAAuB,EAAAH,mBAAmBmf,OAEhD,KAAA2pC,SAAmB,EAIpB,KAAAtmD,qBAA4C,IAAI,EAAAC,oBAAoB3e,MAC7D,KAAAE,MAA0B,IAAI,EAAAypB,iBAAiB3pB,MAJ/D,aACC,OAAOA,KAAKmd,QAMb,4BACC,OAAQnd,KAAKilE,uBACZjlE,KAAKilE,wBAA0B,IAAIjlE,KAAKklE,kCAAkCllE,MAE5E,wCACC,OAAO,EAAAmlE,yBAGR,0BACC,OAAQnlE,KAAKolE,qBAAuBplE,KAAKolE,sBAAwB,IAAI,EAAAC,mBAAmBrlE,MAGzF,wBACC,OAAQA,KAAKslE,mBAAqBtlE,KAAKslE,oBAAsB,IAAI,EAAAC,iBAAiBvlE,MAGnF,8BACC,OAAQA,KAAKwlE,yBAA2BxlE,KAAKwlE,0BAA4B,IAAI,EAAAC,sBAAsBzlE,MAIpG,uBACCiG,MAAMwV,uBAENzb,KAAKa,GAAGC,QAAQC,qBAMhBf,KAAK0e,qBAAqBtX,kBAoCrB,O,mDACLpH,KAAK0e,qBAAqB6Z,SAC1Bv4B,KAAK0lE,kBAAkBntC,eACjBv4B,KAAK2lE,sBAAsBptC,SAE7Bv4B,KAAKmd,QAAQknD,MAAQrkE,KAAK4f,GAAGykD,MAAQrkE,KAAKmd,QAAQmnD,KAAOtkE,KAAK4f,GAAG0kD,MACpEtkE,KAAKmd,QAAQknD,KAAOrkE,KAAK4f,GAAGykD,KAC5BrkE,KAAKmd,QAAQmnD,IAAMtkE,KAAK4f,GAAG0kD,IAC3BtkE,KAAKmd,QAAQ88C,gCAGRj6D,KAAK4lE,wBAAwBC,yBACnC7lE,KAAK8lE,gBACL9lE,KAAK+lE,oBAAoBC,kBAMzBhmE,KAAKmd,QAAQwC,cAAcwkD,GAC3BnkE,KAAK6b,gBAAgByJ,cAGtB,aAEA,aAGA,SACC,OAAOtlB,KAAKmd,QAGb,iBAGA,wCAAwC1Z,GACvCA,EAAKwiE,uBAEN,uBACCjmE,KAAKoD,MAAMu6C,mBAAmBuoB,4BAA4BlmE,KAAKqI,aAGhE,uBAAuBwsC,GAClB,UAAaA,IAGbA,GAAU70C,KAAKglE,SAAWnwB,IAC7B70C,KAAKglE,QAAUnwB,EACf70C,KAAKmmE,4BAGG,4BAEV,sCAEC,EAAA7lD,cAAc8lD,uBAAuBpmE,KAAKmd,QAASnd,MAEpD,cAAc4P,GACb,OAAO,IAAI,EAAAy2D,cAAcz2D,EAAS5P,KAAKoD,MAAOpD,OA3IhD,uBAqJA,MAAaykE,UAA+BM,GAA5C,4B,2FCnOA,2BACA,2BACA,4BACA,4BACA,2BACA,4BACA,OAKA,QAEA,QAEA,SACA,QACA,SAEA,QACA,QAUA,MAAa9iE,EAaZ,cAGCjC,KAAKmC,QAQN,YACC,OAAOnC,KAAKsmE,WAEb,QACCtmE,KAAKsmE,WAAaC,YAAYC,MAC9BxmE,KAAK2I,QAEN,QACC3I,KAAKsR,mBAAgB/M,EAErBvE,KAAKymE,sBAAmBliE,EACxBvE,KAAK0mE,mBAAgBniE,EAQtB,QACC,MAAMvD,EAAa,IAAIiB,EACvB,GAAIjC,KAAK2mE,SAAU,CAClB,MAAM1lE,EAAU,GAChB,IAAK,IAAIlD,KAAUiC,KAAK2mE,SACvB1lE,EAAQ3F,KAAK,EAAA8mD,WAAWr/C,MAAMhF,IAE/BiD,EAAWkB,YAAYjB,GAExB,OAAOD,EAOR,YAAYC,GACXjB,KAAK2mE,SAAW1lE,EAChBjB,KAAKmC,QAEN,UACC,OAAOnC,KAAK2mE,SAEb,eACC,OAAQ3mE,KAAK0mE,cAAgB1mE,KAAK0mE,eAAiB1mE,KAAK4mE,uBAEjD,uBACP,MAAMh+D,EAAqB,GAC3B,GAAI5I,KAAK2mE,SACR,IAAK,IAAI7rE,EAAI,EAAGA,EAAIkF,KAAK2mE,SAAS3rE,OAAQF,IACzCkF,KAAK2mE,SAAS7rE,GAAGsoD,SAAUrlD,IAC1B,MAAM8oE,EAAc,IAAI,EAAAzkB,WAAWrkD,EAAQjD,GAC3C8N,EAAKtN,KAAKurE,KAIb,OAAOj+D,EAUR,aAWC,MAAMA,EAAyB,GAC/B,IAAK,IAAIi+D,KAAe7mE,KAAK8mE,eAAgB,CAC5C,MAAMtlE,EAAYqlE,EAAY9oE,SAAkByD,SAC5CA,GACHoH,EAAKtN,KAAKkG,GAGZ,OAAOoH,EAER,kBACC,OAAQ5I,KAAKymE,iBAAmBzmE,KAAKymE,kBAAoBzmE,KAAK+mE,yBAEvD,yBACP,MAAMn+D,EAAuB,GAC7B,IAAK,IAAIpH,KAAYxB,KAAK2B,aACzBiH,EAAKtN,KAAK,IAAI,EAAA6V,aAAa3P,IAQ5B,OAAOoH,EAER,uBAAuBA,EAAwB7K,GAC9C,GAAIA,EAAOyD,SACV,OAAOoH,EAAKtN,KAAKyC,EAAOyD,UAS1B,4BAA4BzD,GAC3B,OAAKA,EAAgBipE,QAAWjpE,EAAwBkpE,QAAWlpE,EAAkBmpE,SAC5EnpE,EAAgByD,SAElB,KAER,QACC,OAAO,UAAexB,KAAKsW,kBAAkBtR,IAAKiO,GAAMA,EAAEk0D,UAE3D,SACC,OAAO,UAAennE,KAAKsW,kBAAkBtR,IAAKiO,GAAMA,EAAEuB,WAE3D,eACC,OAAO,UAAWxU,KAAKsW,kBAAkBtR,IAAKiO,GAAMA,EAAEtP,iBAEvD,kBAAkB4+C,GACjB,GAAIA,EAAO,CACV,MAAM3+C,EAAU,EAAAgB,WAAWhB,QAAQ2+C,GAC7B/tC,EAASxU,KAAKwU,SACpB,OAAO,UAAe5Q,EAAQoB,IAAKlK,GAAM0Z,EAAO1Z,KAEhD,OAAOkF,KAAKwU,SAId,oBAAoBvT,GACnB,MAAMD,EAAa,IAAIiB,EAEvB,OADAjB,EAAWkB,YAAYjB,GAChBD,EAUR,mBAAmBomE,GAClB,OAAOpnE,KAAKqnE,wBAAwBD,GAAYpiE,IAAKsiE,GAAOA,EAAGvpE,UAEhE,wBAAwBqpE,GAGvB,GAAmB,MAFnBA,EAAa,UAAYA,IAEF,CACtB,MAAMhlE,EAAQ0L,SAASs5D,GACvB,OAAK,UAAahlE,GAGVpC,KAAK8mE,eAAej9C,OAAQg9C,GAC3B,EAAAjiE,WAAW0K,WAAW83D,EAAYP,EAAYhqE,SAH/C,UAAe,CAACmD,KAAK8mE,eAAe1kE,KAO5C,OAAOpC,KAAK8mE,eAqBd,eACC,OAAQ9mE,KAAKsR,cAAgBtR,KAAKsR,eAAiBtR,KAAKunE,wBAKzD,SACC,MAAMC,EAAS,IAAI,EAAAp0D,QAEnB,OADApT,KAAKynE,eAAeC,UAAUF,GACvBA,EAER,OACC,MAAMh9D,EAAO,IAAI,EAAA4I,QAEjB,OADApT,KAAKynE,eAAeE,QAAQn9D,GACrBA,EAGA,wBACP,IAAIo9D,EACJ,GAAI5nE,KAAK2mE,SACR,IAAK,IAAI5oE,KAAUiC,KAAK2mE,SAAU,CACjC,MAAMnlE,EAAYzD,EAAgCyD,SAC9CA,IACHA,EAASgQ,qBACLo2D,EACHA,EAAKC,eAAe9pE,GAEhByD,EAASiQ,cACZm2D,EAAOpmE,EAASiQ,YAAY1O,UAOjC,OADA6kE,EAAOA,GAAQ,IAAI,EAAAE,KAAK,IAAI,EAAA10D,SAAS,GAAI,GAAI,GAAI,IAAI,EAAAA,QAAQ,EAAI,EAAI,IAC9Dw0D,EAkBR,yBACC,IAAK,IAAI7pE,KAAUiC,KAAK8mE,eACvB/oE,EAAOykD,yBAIT,WAAW3lD,GACV,IAAIkrE,EACJ,OAAoD,OAA/CA,EAAiB/nE,KAAKsW,kBAAkB,KACrCyxD,EAAeC,WAAWnrE,GAKnC,YAAYA,GACX,MAAMkrE,EAAiB/nE,KAAKsW,kBAAkB,GAC9C,OAAsB,MAAlByxD,EACIA,EAAeE,YAAYprE,GAE3B,KAIT,cAAc0W,EAAkBC,EAAkB00D,GACjD,OAAQA,GACP,KAAK,EAAAzlE,aAAayI,aAAaJ,OAC9B,GAAI9K,KAAKgoE,WAAWz0D,IACfvT,KAAK2mE,SACR,IAAK,IAAI5oE,KAAUiC,KAAK2mE,SACvB5oE,EAAOqlD,SAAU+kB,IAChB,MAAM3mE,EAAWS,EAAUmmE,qBAAqBD,GAChD,GAAI3mE,EAAU,CACS,IAAI,EAAA2P,aAAa3P,GACzB6mE,iBAAiB90D,EAAUC,MAM9C,MAED,KAAK,EAAA/Q,aAAayI,aAAaH,OAC9B,GAAI/K,KAAKgoE,WAAWz0D,IACfvT,KAAK2mE,SACR,IAAK,IAAI5oE,KAAUiC,KAAK2mE,SACvB5oE,EAAOqlD,SAAU+kB,IACI,IAAI,EAAA/lB,WAAW+lB,EAAO,GAC9BE,iBAAiB90D,EAAUC,MAS9C,eACC,IAAIu0D,EACJ,OAAoD,OAA/CA,EAAiB/nE,KAAKsW,kBAAkB,IACrCyxD,EAAez1D,eAEf,GAGT,sBACC,IAAIg2D,EACJ,OAA+C,OAA1CA,EAAetoE,KAAK8mE,eAAe,IAChCwB,EAAah2D,eAEb,GAIT,2BAA2Bi2D,GAC1B,MAAMp5D,EAAQ,EAAAvK,WAAW0N,aAAai2D,GAEhCC,EAAwB,GAC9B,IAAK,IAAIn2D,KAAerS,KAAKsS,eAC5B,IAAK,IAAIjD,KAAQF,EACZ,EAAAvK,WAAW0K,WAAW+C,EAAahD,IACtCm5D,EAAsBltE,KAAK+W,GAK9B,OAAO,UAAYm2D,GAGpB,eACC,IAAIT,EACJ,OAAoD,OAA/CA,EAAiB/nE,KAAKsW,kBAAkB,IACrCyxD,EAAelc,eAEf,GAGT,YAAYx5C,GACX,IAAI01D,EACJ,OAAoD,OAA/CA,EAAiB/nE,KAAKsW,kBAAkB,IACrCyxD,EAAepyD,YAAYtD,GAE3B,EAIT,0BAA0BxV,EAAc2N,EAAcoI,GAChC,MAAjBA,IACHA,EAAgB,EAAAb,cAAca,cAAcpI,IAG7C,IAAK,IAAIoM,KAAiB5W,KAAKsW,kBAC9BM,EAActD,mBAAmBzW,EAAM2N,EAAMoI,GAI/C,0BAA0B/V,EAAc2N,EAAcoI,GAChC,MAAjBA,IACHA,EAAgB,EAAAb,cAAca,cAAcpI,IAG7C,IAAK,IAAIq8D,KAAe7mE,KAAK8mE,eAC5BD,EAAYvzD,mBAAmBzW,EAAM+V,GAIvC,aAAa61D,GACZ,MAAMC,EAAY,IAAI,EAAAn9D,MAOtB,OALAk9D,EAAU/iD,SAAS9jB,QAASihD,IAC3B,MAAMC,EAAa,EAAAV,WAAWr/C,MAAM8/C,GACpC6lB,EAAUzrD,IAAI6lC,KAGR4lB,GA7YT,e,+EC9BA,cACA,OACA,OAGA,SAEA,SAGMC,EACK,WADLA,EAEG,SAGT,IAAKC,GAAL,SAAKA,GACJ,QACA,QACA,QACA,QACA,QACA,QACA,QAPD,CAAKA,MAAa,KASlB,MAAMC,EAAoB,CACzBvjE,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHtI,EAAG,EACH8V,EAAG,EACH9C,EAAG,GAMJ,MAAayE,UAAkB,EAAAytC,WAK9B,YAAoBymB,EAA8B1mE,GACjD6D,MAAM7D,GADa,KAAA0mE,iBAEnB9oE,KAAKoR,UAAYpR,KAAK8oE,eAAetnE,WAGtC,mBACC,OAAOxB,KAAK8oE,eAEb,WACC,OAAQ9oE,KAAKoR,UAAYpR,KAAKoR,WAAapR,KAAK8oE,eAAetnE,WAMhE,YAAY3E,GAGX,OADAA,EAAO,EAAAkV,cAAcC,WAAWnV,GACzBmD,KAAKoR,UAAU9O,aAAazF,GAAM0V,SAG1C,WAAW1V,GACV,MAAMksE,EAAgB,EAAAh3D,cAAcC,WAAWnV,GAC/C,OAAOmD,KAAK8oE,eAAed,WAAWe,GAGvC,aAAalsE,GAGZ,GArCY,UAqCRA,EACH,OAAOmD,KAAKoC,MACN,CACN,IAAI0mC,EAAiB,KACjBkgC,EAAkB,KAxCb,MAyCLnsE,EAAKA,EAAK7B,OAAS,KACtB8tC,EAAiBjsC,EAAKA,EAAK7B,OAAS,GACpCguE,EAAkBH,EAAkB//B,GACpCjsC,EAAOA,EAAKmR,UAAU,EAAGnR,EAAK7B,OAAS,IAExC,MAAMiuE,EAAe,EAAAl3D,cAAcC,WAAWnV,GAGxC2V,EAASxS,KAAKoR,UAAU9O,aAAa2mE,GAC3C,IAAIz2D,EA8CG,CACN,MAAM1Q,EAAU,UAAUjF,gCAAmC5B,OAAO4W,KACnE7R,KAAKoR,UAAUc,YAAc,IAC5BhN,KAAK,OAEP,MADA7B,QAAQiE,KAAKxF,GACPA,EAnDK,CACX,MAAM,MAACS,GAASiQ,EAChB,GAAIxS,KAAK8oE,eAAe32D,kBAAkB82D,GAAe,CACxD,MAAMC,EAAclpE,KAAKmpE,mBAAmBF,GAC5C,OAAOjpE,KAAK8oE,eAAe72D,iBAAiBg3D,GAAcC,GACpD,CACN,MAAM1+D,EAAOgI,EAAOD,SACd62D,EAAcppE,KAAKqpE,OAAS7+D,EAElC,GAAuB,MAAnBw+D,EACH,OAAQx+D,GACP,KAAK,EACJ,OAAOjI,EAAM6mE,GAEd,KAAK,EACJ,OAAO,IAAI,EAAAzyC,QAAQp0B,EAAM6mE,EAAc,GAAI7mE,EAAM6mE,EAAc,IAEhE,KAAK,EACJ,OAAO,IAAI,EAAAh2D,QACV7Q,EAAM6mE,EAAc,GACpB7mE,EAAM6mE,EAAc,GACpB7mE,EAAM6mE,EAAc,IAItB,KAAK,EACJ,OAAO,IAAI,EAAAE,QACV/mE,EAAM6mE,EAAc,GACpB7mE,EAAM6mE,EAAc,GACpB7mE,EAAM6mE,EAAc,GACpB7mE,EAAM6mE,EAAc,IAGtB,QACC,KAAM,mBAAmB5+D,UAG3B,OAAQA,GACP,KAAK,EACJ,OAAOjI,EAAM6mE,GAEd,QACC,OAAO7mE,EAAM6mE,EAAcJ,OAclC,mBAAmBnsE,GAClB,OAAImD,KAAK8oE,eAAe32D,kBAAkBtV,GAElCmD,KAAKoR,UAAU9O,aAAazF,GAAM0F,MAAMvC,KAAKqpE,SAE5C,EAIV,WAEC,MAAM,MAAC9mE,GAASvC,KAAKoR,UAAU9O,aAAaqmE,GAE5C,OADA3oE,KAAKupE,UAAYvpE,KAAKupE,WAAa,IAAI,EAAAn2D,QAChCpT,KAAKupE,UAAUrjB,UAAU3jD,EAAqB,EAAdvC,KAAKqpE,QAE7C,aAAaG,GACZxpE,KAAKypE,yBAAyBd,EAAuBa,GAGtD,SACC,MAAM,MAACjnE,GAASvC,KAAKoR,UAAU9O,aAAaqmE,GAE5C,OADA3oE,KAAK0pE,QAAU1pE,KAAK0pE,SAAW,IAAI,EAAAt2D,QAC5BpT,KAAK0pE,QAAQxjB,UAAU3jD,EAAqB,EAAdvC,KAAKqpE,QAE3C,WAAWM,GACV,OAAO3pE,KAAKypE,yBAAyBd,EAAqBgB,GAG3D,iBAAiB9sE,EAAcS,GAE9B,GAAa,MAATA,EACH,OAED,GAAY,MAART,EACH,KAAM,yCAOP,MAAM2V,EAASxS,KAAKoR,UAAU9O,aAAazF,GACrC0F,EAAQiQ,EAAOjQ,MACfoT,EAAcnD,EAAOD,SAE3B,OAAQoD,GACP,KAAK,EACJpT,EAAMvC,KAAKqpE,QAAU/rE,EACrB,MACD,KAAK,EACJ,MAAMssE,EAAKtsE,EACXiF,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKO,EAAGtkE,EAChC/C,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKO,EAAGrkE,EAChC,MACD,KAAK,EAEJ,GAD2C,MAAzBjI,EAAoBH,EACxB,CACb,MAAM6V,EAAM1V,EACZiF,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKr2D,EAAI7V,EACjCoF,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKr2D,EAAIC,EACjC1Q,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKr2D,EAAI7C,MAC3B,CACN,MAAM05D,EAAKvsE,EACXiF,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKQ,EAAGvkE,EAChC/C,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKQ,EAAGtkE,EAChChD,EAAoB,EAAdvC,KAAKqpE,OAAa,GAAKQ,EAAGrkE,EAEjC,MACD,QAEC,MADAnC,QAAQiE,KAAK,yDAAyDqO,KAChE,eAAeA,qBAGxB,yBAAyB9Y,EAAcS,GAEtC,GAAa,MAATA,EACH,OAED,GAAY,MAART,EACH,KAAM,yCAGP,MACM0F,EADSvC,KAAKoR,UAAU9O,aAAazF,GACtB0F,MACfzH,EAAkB,EAAdkF,KAAKqpE,OAEf9mE,EAAMzH,GAAKwC,EAAMgI,EACjB/C,EAAMzH,EAAI,GAAKwC,EAAMiI,EACrBhD,EAAMzH,EAAI,GAAKwC,EAAMkI,EAGtB,iBAAiB3I,EAAcitE,GAK9B,OADc9pE,KAAKoR,UAAU9O,aAAazF,GAAM0F,MAClCvC,KAAKqpE,QAAUS,GAxM/B,e,8ECrCA,mBACC,YAAsBT,GAAA,KAAAA,SACtB,YACC,OAAOrpE,KAAKqpE,U,4FCMd,qBAmBC,YAAY5qE,EAA+B,IAbnC,KAAAsrE,aAAuB,EAGvB,KAAAC,OAAiB,EAGjB,KAAAC,qBAA+B,EAK/B,KAAAC,SAAgC,KAGvClqE,KAAKmqE,oBAAsB1rE,EAAQ2rE,oBAAsB,GACzDpqE,KAAKqqE,yBAA2B5rE,EAAQ6rE,yBAA2B,IAG9D,iBAAiB/9D,EAAeg+D,G,mDAMrC,GALAvqE,KAAKgqE,OAASz9D,EACdvM,KAAKiqE,qBAAuB,EAC5BjqE,KAAKwqE,uBAAyBD,EAC9BvqE,KAAKyqE,uBAAyBzqE,KAAK0qE,gBAAgB7sE,KAAKmC,MAEpDA,KAAKkqE,SACR,KAAM,sCAEP,OAAO,IAAIjiD,QAAQ,CAACC,EAASC,KAC5BnoB,KAAKkqE,SAAWhiD,EAChBloB,KAAK0qE,uBAGP,kBACC,MAAMC,EAAapE,YAAYC,MAE/B,GAAIxmE,KAAKwqE,wBAA0BxqE,KAAKyqE,uBACvC,KAAOzqE,KAAKiqE,qBAAuBjqE,KAAKgqE,QAKvC,GAJAhqE,KAAKwqE,uBAAuBxqE,KAAKiqE,sBAEjCjqE,KAAKiqE,uBAEDjqE,KAAKiqE,qBAAuBjqE,KAAKqqE,0BAA4B,GAC5D9D,YAAYC,MAAQmE,EAAa3qE,KAAKmqE,oBAAqB,CAC9Dj0C,WAAWl2B,KAAKyqE,uBAAwB,GACxC,MAMAzqE,KAAKiqE,sBAAwBjqE,KAAKgqE,QACjChqE,KAAKkqE,UACRlqE,KAAKkqE,WAUF,iBAAiB3nE,EAAcgoE,G,mDAMpC,GALAvqE,KAAK4qE,OAASroE,EACdvC,KAAK+pE,aAAe,EACpB/pE,KAAK6qE,uBAAyBN,EAC9BvqE,KAAK8qE,uBAAyB9qE,KAAK+qE,gBAAgBltE,KAAKmC,MAEpDA,KAAKkqE,SACR,KAAM,sCAEP,OAAO,IAAIjiD,QAAQ,CAACC,EAASC,KAC5BnoB,KAAKkqE,SAAWhiD,EAChBloB,KAAK+qE,uBAGP,kBACC,MAAMJ,EAAapE,YAAYC,MAE/B,GAAIxmE,KAAK6qE,wBAA0B7qE,KAAK8qE,wBAA0B9qE,KAAK4qE,OACtE,KAAQ5qE,KAAKgrE,uBAAyBhrE,KAAK4qE,OAAO5qE,KAAK+pE,eAKtD,GAJA/pE,KAAK6qE,uBAAuB7qE,KAAKgrE,uBAAwBhrE,KAAK+pE,cAE9D/pE,KAAK+pE,eAED/pE,KAAK+pE,aAAe/pE,KAAKqqE,0BAA4B,GACpD9D,YAAYC,MAAQmE,EAAa3qE,KAAKmqE,oBAAqB,CAC9Dj0C,WAAWl2B,KAAK8qE,uBAAwB,GACxC,WAMgCvmE,IAAhCvE,KAAKgrE,wBACJhrE,KAAKkqE,UACRlqE,KAAKkqE,c,8EC/GT,eACA,OACA,OACA,OAEA,+BACC,iBACCvP,EACAsQ,EACAC,EAAoB,KAEpB,MAAMC,EACL,EAAAlrD,SAASC,mBAAmBgrD,GAAaD,EAEpChxC,EAAY,GAClB,IAAK,IAAIn/B,EAAI,EAAGA,EAAImwE,EAAgBnwE,IAAK,CACxC,MAAMswE,EAAeD,EAAqBrwE,EACpCwK,EAAIq1D,EAASnuD,KAAKgiB,IAAI48C,GACtB7lE,EAAIo1D,EAASnuD,KAAKshB,IAAIs9C,GAE5BnxC,EAAU3+B,KAAK,IAAI,EAAAq7B,QAAQrxB,EAAGC,IAG/B,OAAO00B,EAGR,cACC0gC,EACAsQ,EACAC,EAAoB,KAEpB,MAAMG,EAAerrE,KAAKi6B,UAAU0gC,EAAQsQ,EAAgBC,GAEtDjxC,EAAY,GACZr2B,EAAU,GAChB,IAAI0nE,EACJ,IAAK,IAAIxwE,EAAI,EAAGA,EAAIuwE,EAAarwE,OAAQF,IACxCwwE,EAAcD,EAAavwE,GAE3Bm/B,EAAU3+B,KAAKgwE,EAAYhmE,GAC3B20B,EAAU3+B,KAAKgwE,EAAY/lE,GAC3B00B,EAAU3+B,KAAK,GAEXR,EAAI,IACP8I,EAAQtI,KAAKR,EAAI,GACjB8I,EAAQtI,KAAKR,IAKf8I,EAAQtI,KAAK2vE,EAAiB,GAC9BrnE,EAAQtI,KAAK,GAEb,MAAMkG,EAAW,IAAI,EAAAsT,eAOrB,OANAtT,EAASkR,aACR,WACA,IAAI,EAAAS,uBAAuB8mB,EAAW,IAEvCz4B,EAASgB,SAASoB,GAEXpC,K,oFC5DT,E,KAAA,uBAEA,OACA,OACA,QACA,QACA,SACA,SAOA,QAGM+pE,EAAU,CACfC,MAAO,IAAI,EAAAp4D,QAAQ,EAAG,EAAG,GACzBq4D,OAAQ,EACRC,IAAK,IAAI,EAAAt4D,QAAQ,EAAG,EAAG,GACvBslD,GAAI,IAAI,EAAAtlD,QAAQ,EAAG,EAAG,IAUjBu4D,EAAgB,IAAI,EAAAv4D,QAAQ,EAAG,EAAG,GAClCw4D,EAAa,IAAI,EAAAj1C,QAAQ,EAAG,GAIlC,MAAak1C,EAQZ,YAAoBC,GAAA,KAAAA,iBAFZ,KAAAC,UAAiC,GAGxC/rE,KAAKgsE,mBAAqBhsE,KAAK8rE,eAAe9D,WAAW,UACzDhoE,KAAKisE,kBAAoBjsE,KAAK8rE,eAAe9D,WAAW,SAExDhoE,KAAKksE,mBAAqBlsE,KAAK8rE,eAAe9D,WAAW,UACzDhoE,KAAKmsE,eAAiBnsE,KAAK8rE,eAAe9D,WAAW,MAErDhoE,KAAKosE,oBAAsBpsE,KAAKksE,mBAGjC,WAMC,OALAlsE,KAAK+rE,UAAY,GACjB/rE,KAAK+rE,UAAkB,UAAI,IAAI,EAAAtrD,QAC/BzgB,KAAK+rE,UAAkB,OAAI,IAAI,EAAAtrD,QAC/BzgB,KAAK+rE,UAAkB,MAAI,IAAI,EAAAtrD,QAExBzgB,KAAK8rE,eAAet3D,SAASxP,IAAK2P,GACjC3U,KAAKqsE,mBAAmB13D,IAIjC,mBAAmBA,GAClB,MAAMpX,EAAIoX,EAAMP,WAEhB,IAAIoK,EAAQxe,KAAKisE,kBAAoBt3D,EAAMW,aA7CnB,SA6CqDi2D,EAAQC,MACrF,MAAMc,EAAStsE,KAAKgsE,mBAAqBr3D,EAAMW,aA7CtB,UA6CyDi2D,EAAQE,OAC1FjtD,EAAQA,EAAMzb,QAAQgd,eAAeusD,GAGrC,MAAMhtD,EAAS,IAAI,EAAAmB,QACnBnB,EAAOwB,WAEP,MAAMyrD,EAAevsE,KAAK+rE,UAAkB,MAC5CQ,EAAaC,UAAUhuD,EAAMlZ,EAAGkZ,EAAMjZ,EAAGiZ,EAAMhZ,GAE/C,MAAMinE,EAAmBzsE,KAAK+rE,UAAkB,UAKhD,GAJAU,EAAiBC,gBAAgBnvE,EAAE+H,EAAG/H,EAAEgI,EAAGhI,EAAEiI,GAE7C8Z,EAAOqtD,SAASF,GAEZzsE,KAAKosE,oBAAqB,CAC7B,MAAMQ,EAAgB5sE,KAAK+rE,UAAkB,OACvCc,EAAMtB,EAAQG,IACdlE,EAAS7yD,EAAMW,aA9DG,UA8D8ByK,gBAAgB,GAChE8K,EAAK7qB,KAAKmsE,eAAiBx3D,EAAMW,aA9DnB,MA8DkDi2D,EAAQ7S,GAC9E7tC,EAAGvI,YACHsqD,EAAc9R,OAAO+R,EAAKrF,EAAQ38C,GAElCvL,EAAOqtD,SAASC,GAKjB,OAFAttD,EAAOqtD,SAASJ,GAETjtD,EAGR,kCACCwtD,EACAC,EACAC,GAEA,MAAMC,EAAeF,EAAoBv4D,SAOnChT,EAAW,IAAI,EAAA0rE,wBACrB1rE,EAASse,KAAKgtD,GAEd,MAAMK,EAAkBF,EAAajyE,OAC/Bi/B,EAAY,IAAIE,aAA+B,EAAlBgzC,GAC7BC,EAAS,IAAIjzC,aAA+B,EAAlBgzC,GAC1BE,EAAS,IAAIlzC,aAA+B,EAAlBgzC,GAC1BG,EAAU,IAAInzC,aAA+B,EAAlBgzC,GAE3BI,EAAYR,EAAoB/E,WAvFd,SAyFlB5zD,EAAW,IAAI,EAAAhB,QAAQ,EAAG,EAAG,GAC7BkO,EAAa,IAAI,EAAAX,WACjBnC,EAAQ,IAAI,EAAApL,QAAQ,EAAG,EAAG,GAG1Bo6D,EADY,IAAI3B,EAAckB,GACAU,WAEpCR,EAAarrE,QAAQ,CAAC8rE,EAAa5yE,KAClC,MAAM6yE,EAAa,EAAJ7yE,EACT8yE,EAAa,EAAJ9yE,EAEA0yE,EAAkB1yE,GAC1BymB,UAAUnN,EAAUkN,EAAY9C,GAEvCpK,EAASrP,QAAQk1B,EAAW0zC,GAC5BrsD,EAAWvc,QAAQuoE,EAASM,GAC5BpvD,EAAMzZ,QAAQsoE,EAAQM,IAERJ,EAAYG,EAAYp4D,aA3Gf,SA2GiDq2D,GAClE5mE,QAAQqoE,EAAQO,KAIvB,MAAME,EAASd,EAAoB/E,WAjHd,MAkHrB,GAAI6F,EAAQ,CACX,MAAMlpB,EAAM,IAAIxqB,aAA+B,EAAlBgzC,GAC7BF,EAAarrE,QAAQ,CAAC8rE,EAAa5yE,KAClC,MAAMgzE,EAAa,EAAJhzE,GACJ+yE,EAASH,EAAYp4D,aAtHb,MAsH4Cs2D,GAC5D7mE,QAAQ4/C,EAAKmpB,KAEjBtsE,EAASkR,aAAa,aAAc,IAAI,EAAAq7D,yBAAyBppB,EAAK,IA4BvE,OAxBAnjD,EAASkR,aAAa,mBAAoB,IAAI,EAAAq7D,yBAAyB9zC,EAAW,IAClFz4B,EAASkR,aAAa,gBAAiB,IAAI,EAAAq7D,yBAAyBV,EAAQ,IAC5E7rE,EAASkR,aAAa,sBAAuB,IAAI,EAAAq7D,yBAAyBT,EAAS,IACnF9rE,EAASkR,aAAa,gBAAiB,IAAI,EAAAq7D,yBAAyBX,EAAQ,IAEvDL,EAAoBiB,2BAA2BhB,GAEvDprE,QAASyQ,IACrB,MAAMsD,EAAco3D,EAAoBp3D,YAAYtD,GAC9CvN,EAAS,IAAIq1B,aAAagzC,EAAkBx3D,GAClDs3D,EAAarrE,QAAQ,CAACqsE,EAAInzE,KACzB,MAAMwC,EAAQ2wE,EAAG34D,aAAajD,GAC1B,UAAgB/U,GACnBwH,EAAOhK,GAAKwC,EAEZA,EAAMyH,QAAQD,EAAQhK,EAAI6a,KAG5BnU,EAASkR,aAAaL,EAAa,IAAI,EAAA07D,yBAAyBjpE,EAAQ6Q,MAGhD,IAAI,EAAAxE,aAAa3P,GACzB0sE,mBAEV1sE,GAlJT,mB,2FCnCA,2BACA,2BACA,2BACA,2BACA,QACA,OAEM+qB,EAAQ,CAACzX,eADf,KACeA,eAAgB3B,uBAAA,EAAAA,uBAAwB1J,OAAA,EAAAA,QAGvD,QACA,QACA,QACA,SACA,SAaA,uBAKC,YAAYhL,EAAiC,IAH7C,KAAA0vE,yBAA0D,GAClD,KAAA5nD,SAAkC,GAGzCvmB,KAAKumB,SAAS6nD,iBAAmB3vE,EAAQ2vE,iBACzCpuE,KAAKumB,SAAS8nD,aAAe5vE,EAAQ4vE,aACrCruE,KAAKumB,SAAS+nD,WAAa7vE,EAAQ6vE,aAAc,EACjDtuE,KAAKumB,SAASgoD,mBAAqB9vE,EAAQ8vE,mBAI5C,KACCnqC,EACAoqC,EACAC,EACAC,GAOAC,MAAMvqC,GACJ/N,KAAYu4C,GAAa,EAAD,0CAGxB5uE,KAAKyG,YAAcmoE,EAASC,OACU,MAAlC7uE,KAAKumB,SAAS6nD,kBAA8D,IAAlCpuE,KAAKumB,SAAS6nD,mBAC3DpuE,KAAKyG,MAAQzG,KAAK8uE,kBAAkB9uE,KAAKyG,MAAOzG,KAAKumB,SAAS6nD,iBAAiBx/D,MAAM,OAEtF,MAAM7Q,EAASiC,KAAKyB,gBACpB+sE,EAAiBzwE,OAEjBgxE,MAAO/wD,IACP3a,QAAQC,IAAI,QAAS0a,GACrB0wD,EAAe1wD,KAIlB,kBAAkB6wD,EAAWG,GAC5B,GAAuB,GAAnBA,EAASh0E,OACZ,OAAO6zE,EACD,CACN,MAAMI,EAAeD,EAASvzE,QAC9B,GAAIwzE,EACH,OAAOjvE,KAAK8uE,kBAAkBD,EAAKI,GAAeD,GAGpD,MAAO,GAGR,SAASH,GACR,OAAQ7uE,KAAKyG,MAAQooE,EAGtB,gBACC,MAAMrtE,EAAW,IAAI+qB,EAAMzX,eACrBo6D,EAAW,IAAI,EAAA/9D,aAAa3P,GAElC,GAAkB,MAAdxB,KAAKyG,MAAe,CACvB,MAAM9C,EAAe3D,KAAKyG,MAAMzL,OAChCk0E,EAASC,wBAAwBxrE,GAEjC3D,KAAKovE,mBAML,MAAMC,EAA2B,EAAAzqE,WAAW0N,aAAatS,KAAKumB,SAASgoD,oBAAsB,IAG7F,IAAK,IAAIl8D,KAAepX,OAAO4W,KAAK7R,KAAKmuE,0BAA2B,CACnE,IAAImB,EAAgB,UAAetvE,KAAKuvE,2BAA2Bl9D,IAEnE,MAAM7X,EAAOwF,KAAKmuE,yBAAyB97D,GACrC7H,EAAOhQ,EAAKgQ,OAElB,GAAIhQ,EAAK+D,SAAW,EAAAkE,aAAa0I,YAAY7L,OAK5C,GACCU,KAAKumB,SAAS+nD,YACd,EAAA1pE,WAAWwK,iBAAiBiD,EAAag9D,GACxC,CACD,MAAMG,EAAoCF,EAActqE,IAAKC,GACxD,UAAgBA,GACZwuD,WAAWxuD,IAAM,EAEjBA,GAGTzD,EAASkR,aACRL,EACA,IAAIka,EAAMpZ,uBAAuBq8D,EAAyBhlE,QAErD,CACN,MAAMilE,EAAa,EAAA19D,cAAc29D,wBAAwBJ,GACzDJ,EAASS,sBAAsBt9D,EAAao9D,EAAmB,OAAGA,EAAoB,aAEjF,CACN,MAAMD,EAA0BF,EAChC9tE,EAASkR,aAAaL,EAAa,IAAIka,EAAMpZ,uBAAuBq8D,EAAyBhlE,MAIhG,OAAO,IAAI+hB,EAAM9iB,OAAOjI,EAAU,EAAAiB,aAAaK,UAAUypB,EAAM9iB,OAAO5M,OAG/D,mBACP,IAAI+yE,EAEJ,MAAMzgE,EAAQ,EAAAvK,WAAW0N,aAAatS,KAAKumB,SAAS8nD,cAAgB,IAEpE,GAAIruE,KAAKyG,OAC0B,OAA7BmpE,EAAW5vE,KAAKyG,MAAM,IAC1B,IAAK,IAAI4L,KAAepX,OAAO4W,KAAK+9D,GAAW,CAC9C,MAAMt6D,EAAes6D,EAASv9D,GAE9B,GAAIrS,KAAK6vE,sBAAsBv6D,GAC9B,IAAK,IAAI1X,KAAO3C,OAAO4W,KAAKyD,GAAe,CAC1C,MAAMw6D,EAAmB,CAACz9D,EAAazU,GAAKsH,KAtIrB,KAuIjB6qE,EAAoBz6D,EAAajD,GAElC,EAAAzN,WAAWwK,iBAAiB0gE,EAAkB3gE,KAClDnP,KAAKmuE,yBAAyB2B,GAAoB,EAAAE,kBAAkBC,WACnEF,SAKE,EAAAnrE,WAAWwK,iBAAiBiD,EAAalD,KAC7CnP,KAAKmuE,yBAAyB97D,GAAe,EAAA29D,kBAAkBC,WAAW36D,KAQxE,2BAA2BjD,GAClC,OAAIrS,KAAKyG,MACDzG,KAAKyG,MAAMzB,IAAKkrE,IACtB,MAAM97C,EAAS/hB,EAAYzD,MA5JD,KA4J8B,GAClDtR,EAAQ4yE,EAAa97C,GAC3B,GAAIp0B,KAAK6vE,sBAAsBvyE,GAAQ,CAEtC,OAAOA,EADkB+U,EAAYrE,UAAUomB,EAAOp5B,OAAS,KAC7B,EAElC,OAAOsC,GAAS,IAIX,GAIT,sBAAsBA,GACrB,OAAO,UAAgBA,KAAW,UAAeA,M,6BC9LnD,uZAsEI6yE,EAAa,WAEhB,SAASA,EAAYC,GAEpB,IAAOh1E,KAAM4E,KAAMowE,GAEnBpwE,KAAKqwE,YAAc,KACnBrwE,KAAKswE,UAAY,KAqNlB,SAASC,IAER,IAAItvE,EAAU,GAEd,MAAO,CAEN/D,IAAK,SAAWU,GAEf,OAAOqD,EAASrD,IAIjBqf,IAAK,SAAWrf,EAAKG,GAEpBkD,EAASrD,GAAQG,GAIlBmf,OAAQ,SAAWtf,UAEXqD,EAASrD,IAIjB4yE,UAAW,WAEVvvE,EAAU,KA3ObkvE,EAAWj1E,UAAYD,OAAO4iB,OAAQ5iB,OAAO0C,OAAQ,IAAOzC,WAAa,CAExE6Y,YAAao8D,EAEbM,KAAM,SAAWrsC,EAAKssC,EAAQC,EAAYC,GAEzC,IAEIC,EAFA7W,EAAQh6D,KAMX6wE,EAF0B,KAAtB7wE,KAAK6wE,aAEM7wE,KAAK6wE,aAEK,KAAd7wE,KAAKkY,KAEDlY,KAAKkY,KAIL,IAAY44D,eAAgB1sC,GAO5C41B,EAAMoW,QAAQW,UAAW3sC,GAEzB,IAAI4sC,EAAW,SAAWxhE,GAEpBohE,EAEJA,EAASphE,GAITnM,QAAQ2a,MAAOxO,GAIhBwqD,EAAMoW,QAAQa,UAAW7sC,GACzB41B,EAAMoW,QAAQc,QAAS9sC,IAIpB+sC,EAAS,IAAI,IAAYnX,EAAMoW,SAEnCe,EAAOC,QAASpxE,KAAKkY,MACrBi5D,EAAOE,gBAAiB,eAEG,oBAAtBrX,EAAMsX,aAEVH,EAAOI,oBAAoB,GAI5BJ,EAAOV,KAAMrsC,GAAK,SAAW5pC,GAE5B,IAECw/D,EAAM5rD,MAAO5T,EAAMq2E,GAAc,SAAWW,GAE3Cd,EAAQc,GAERxX,EAAMoW,QAAQc,QAAS9sC,KAErB4sC,GAEF,MAAQxhE,GAETwhE,EAAUxhE,MAITmhE,EAAYK,IAIhBS,eAAgB,SAAWpB,GAG1B,OADArwE,KAAKqwE,YAAcA,EACZrwE,MAIR0xE,aAAc,SAAWpB,GAGxB,OADAtwE,KAAKswE,UAAYA,EACVtwE,MAIRoO,MAAO,SAAW5T,EAAM0d,EAAMw4D,EAAQE,GAErC,IAAIxrD,EACAusD,EAAa,GAEjB,GAAqB,iBAATn3E,EAEX4qB,EAAU5qB,OAMV,GAFY,IAAYo3E,WAAY,IAAIl4C,WAAYl/B,EAAM,EAAG,MAE9Cq3E,EAAgC,CAE9C,IAECF,EAAYG,EAAWC,iBAAoB,IAAIC,EAAqBx3E,GAEnE,MAAQwjB,GAGT,YADK4yD,GAAUA,EAAS5yD,IAKzBoH,EAAUusD,EAAYG,EAAWC,iBAAkB3sD,aAInDA,EAAU,IAAYwsD,WAAY,IAAIl4C,WAAYl/B,IAMpD,IAAIq0E,EAAO/jC,KAAK18B,MAAOgX,GAEvB,QAAoB7gB,IAAfsqE,EAAKoD,OAAuBpD,EAAKoD,MAAMC,QAAS,GAAM,EAErDtB,GAAUA,EAAS,IAAIhgC,MAAO,gFAFpC,CAOA,GAAKi+B,EAAKsD,eAET,IAAM,IAAIr3E,EAAI,EAAGA,EAAI+zE,EAAKsD,eAAen3E,SAAWF,EAAI,CAEvD,IAAIs3E,EAAgBvD,EAAKsD,eAAgBr3E,GACrCu3E,EAAqBxD,EAAKwD,oBAAsB,GAEpD,OAASD,GAER,KAAKN,EAAWQ,oBACfX,EAAYS,GAAkB,IAAIG,EAAqB1D,GACvD,MAED,KAAKiD,EAAWU,wBACfb,EAAYS,GAAkB,IAAIK,EAClC,MAED,KAAKX,EAAWY,oBACff,EAAYS,GAAkB,IAAIO,EAClC,MAED,KAAKb,EAAWc,sCACfjB,EAAYS,GAAkB,IAAIS,GAClC,MAED,KAAKf,EAAWgB,2BACfnB,EAAYS,GAAkB,IAAIW,GAAmClE,EAAM7uE,KAAKqwE,aAChF,MAED,KAAKyB,EAAWkB,iBACfrB,EAAYS,GAAkB,IAAIa,EAAyBjzE,KAAKswE,WAChE,MAED,KAAKwB,EAAWoB,sBACfvB,EAAYS,GAAkB,IAAIe,GAClC,MAED,KAAKrB,EAAWsB,sBACfzB,EAAYS,GAAkB,IAAIiB,GAClC,MAED,QAEMhB,EAAmB/oE,QAAS8oE,IAAmB,GAEnD/uE,QAAQiE,KAAM,wCAA0C8qE,EAAgB,OAUhE,IAAIkB,GAAYzE,EAAM8C,EAAY,CAE9Cz5D,KAAMA,GAAQlY,KAAK6wE,cAAgB,GACnCS,YAAatxE,KAAKsxE,YAClBlB,QAASpwE,KAAKowE,UAIRhiE,MAAOsiE,EAAQE,OA8CxB,IAAIkB,EAAa,CAChBC,gBAAiB,kBACjBe,2BAA4B,6BAC5BR,oBAAqB,sBACrBE,wBAAyB,0BACzBI,sCAAuC,sCACvCF,oBAAqB,sBACrBQ,sBAAuB,wBACvBE,sBAAuB,wBACvBJ,iBAAkB,oBASnB,SAASC,EAAyB3C,GAEjC,IAAOA,EAEN,MAAM,IAAI1/B,MAAO,iFAIlB5wC,KAAKnD,KAAOi1E,EAAWkB,iBACvBhzE,KAAKswE,UAAYA,EASlB,SAASiC,EAAqB1D,GAE7B7uE,KAAKnD,KAAOi1E,EAAWQ,oBAEvB,IAAIiB,EAAc1E,EAAK8C,YAAc9C,EAAK8C,WAAYG,EAAWQ,sBAA2B,GAC5FtyE,KAAKwzE,UAAYD,EAAUE,QAAU,GAgEtC,SAASd,IAER3yE,KAAKnD,KAAOi1E,EAAWY,oBA+CxB,SAASD,IAERzyE,KAAKnD,KAAOi1E,EAAWU,wBA/GxBD,EAAoBr3E,UAAUw4E,UAAY,SAAWC,GAEpD,IACIC,EADAC,EAAW7zE,KAAKwzE,UAAWG,GAG3B9pE,EAAQ,IAAI,QAAO,eACCtF,IAAnBsvE,EAAShqE,OAAsBA,EAAMq8C,UAAW2tB,EAAShqE,OAE9D,IAAI08B,OAA2BhiC,IAAnBsvE,EAASttC,MAAsBstC,EAASttC,MAAQ,EAE5D,OAASstC,EAASt1E,MAEjB,IAAK,eACJq1E,EAAY,IAAI,mBAAkB/pE,IACxB41C,OAAOrrC,SAAS7T,IAAK,EAAG,GAAK,GACvCqzE,EAAU32D,IAAK22D,EAAUn0B,QACzB,MAED,IAAK,SACJm0B,EAAY,IAAI,aAAY/pE,IAClB8gB,SAAW4b,EACrB,MAED,IAAK,QACJqtC,EAAY,IAAI,YAAW/pE,IACjB8gB,SAAW4b,EAErBstC,EAASC,KAAOD,EAASC,MAAQ,GACjCD,EAASC,KAAKC,oBAAkDxvE,IAAjCsvE,EAASC,KAAKC,eAA+BF,EAASC,KAAKC,eAAiB,EAC3GF,EAASC,KAAKE,oBAAkDzvE,IAAjCsvE,EAASC,KAAKE,eAA+BH,EAASC,KAAKE,eAAiBxnE,KAAKmV,GAAK,EACrHiyD,EAAUhX,MAAQiX,EAASC,KAAKE,eAChCJ,EAAUK,SAAW,EAAMJ,EAASC,KAAKC,eAAiBF,EAASC,KAAKE,eACxEJ,EAAUn0B,OAAOrrC,SAAS7T,IAAK,EAAG,GAAK,GACvCqzE,EAAU32D,IAAK22D,EAAUn0B,QACzB,MAED,QACC,MAAM,IAAI7O,MAAO,6CAA+CijC,EAASt1E,KAAO,MAclF,OARAq1E,EAAUx/D,SAAS7T,IAAK,EAAG,EAAG,GAE9BqzE,EAAUM,MAAQ,OAEU3vE,IAAvBsvE,EAAS1xB,YAA0ByxB,EAAUzxB,UAAY0xB,EAAS1xB,WAEvEyxB,EAAU/2E,KAAOg3E,EAASh3E,MAAU,SAAW82E,EAExC1rD,QAAQC,QAAS0rD,IAezBjB,EAA4Bz3E,UAAUi5E,gBAAkB,WAEvD,OAAO,qBAIRxB,EAA4Bz3E,UAAUk5E,aAAe,SAAWC,EAAgBC,EAAaC,GAE5F,IAAIC,EAAU,GAEdH,EAAexqE,MAAQ,IAAI,QAAO,EAAK,EAAK,GAC5CwqE,EAAenjC,QAAU,EAEzB,IAAIujC,EAAoBH,EAAYI,qBAEpC,GAAKD,EAAoB,CAExB,GAAK5rC,MAAM8rC,QAASF,EAAkBG,iBAAoB,CAEzD,IAAIryE,EAAQkyE,EAAkBG,gBAE9BP,EAAexqE,MAAMq8C,UAAW3jD,GAChC8xE,EAAenjC,QAAU3uC,EAAO,QAIWgC,IAAvCkwE,EAAkBI,kBAEtBL,EAAQl5E,KAAMi5E,EAAOO,cAAeT,EAAgB,MAAOI,EAAkBI,mBAM/E,OAAO5sD,QAAQshB,IAAKirC,IAerB/B,EAAgCv3E,UAAUi5E,gBAAkB,WAE3D,OAAO,KAIR1B,EAAgCv3E,UAAUk5E,aAAe,SAAWC,EAAgBC,EAAaC,GAEhG,IAAIC,EAAU,GAEVjB,EAAYe,EAAY3C,WAAY3xE,KAAKnD,MA0B7C,QAxBmC0H,IAA9BgvE,EAAUwB,kBAEdV,EAAeW,UAAYzB,EAAUwB,sBAIFxwE,IAA/BgvE,EAAU0B,kBAEdT,EAAQl5E,KAAMi5E,EAAOO,cAAeT,EAAgB,eAAgBd,EAAU0B,wBAInC1wE,IAAvCgvE,EAAU2B,2BAEdb,EAAec,mBAAqB5B,EAAU2B,+BAIF3wE,IAAxCgvE,EAAU6B,2BAEdZ,EAAQl5E,KAAMi5E,EAAOO,cAAeT,EAAgB,wBAAyBd,EAAU6B,iCAI9C7wE,IAArCgvE,EAAU8B,yBAEdb,EAAQl5E,KAAMi5E,EAAOO,cAAeT,EAAgB,qBAAsBd,EAAU8B,8BAEpC9wE,IAA3CgvE,EAAU8B,uBAAuB72D,OAAsB,CAE3D,IAAIA,EAAQ+0D,EAAU8B,uBAAuB72D,MAE7C61D,EAAeiB,qBAAuB,IAAI,UAAS92D,EAAOA,GAM5D,OAAOyJ,QAAQshB,IAAKirC,IAKrB,IAAI3C,EAAgC,OAEhC0D,EAAuC,WAAvCA,EAAwD,QAE5D,SAASvD,EAAqBx3E,GAE7BwF,KAAKnD,KAAOi1E,EAAWC,gBACvB/xE,KAAKolB,QAAU,KACfplB,KAAK+tC,KAAO,KAEZ,IAAIynC,EAAa,IAAIC,SAAUj7E,EAAM,EATD,IAiBpC,GANAwF,KAAK01E,OAAS,CACbC,MAAO,IAAY/D,WAAY,IAAIl4C,WAAYl/B,EAAK6D,MAAO,EAAG,KAC9D6zE,QAASsD,EAAWI,UAAW,GAAG,GAClC56E,OAAQw6E,EAAWI,UAAW,GAAG,IAG7B51E,KAAK01E,OAAOC,QAAU9D,EAE1B,MAAM,IAAIjhC,MAAO,qDAEX,GAAK5wC,KAAK01E,OAAOxD,QAAU,EAEjC,MAAM,IAAIthC,MAAO,kDAOlB,IAHA,IAAIilC,EAAY,IAAIJ,SAAUj7E,EA3BM,IA4BhCs7E,EAAa,EAETA,EAAaD,EAAUE,YAAa,CAE3C,IAAIC,EAAcH,EAAUD,UAAWE,GAAY,GACnDA,GAAc,EAEd,IAAIG,EAAYJ,EAAUD,UAAWE,GAAY,GAGjD,GAFAA,GAAc,EAETG,IAAcV,EAAoC,CAEtD,IAAIW,EAAe,IAAIx8C,WAAYl/B,EAxCD,GAwCwCs7E,EAAYE,GACtFh2E,KAAKolB,QAAU,IAAYwsD,WAAYsE,QAEjC,GAAKD,IAAcV,EAAmC,CAE5D,IAAIY,EA7C8B,GA6CgBL,EAClD91E,KAAK+tC,KAAOvzC,EAAK6D,MAAO83E,EAAYA,EAAaH,GAMlDF,GAAcE,EAIf,GAAsB,OAAjBh2E,KAAKolB,QAET,MAAM,IAAIwrB,MAAO,6CAWnB,SAASmiC,GAAmClE,EAAMwB,GAEjD,IAAOA,EAEN,MAAM,IAAIz/B,MAAO,uDAIlB5wC,KAAKnD,KAAOi1E,EAAWgB,2BACvB9yE,KAAK6uE,KAAOA,EACZ7uE,KAAKqwE,YAAcA,EACnBrwE,KAAKqwE,YAAY+F,UAoElB,SAASjD,KAERnzE,KAAKnD,KAAOi1E,EAAWoB,sBAkDxB,SAASmD,GAA4B7tE,GAEpC,uBAAqBpN,KAAM4E,MAE3BA,KAAKs2E,kCAAmC,EAGxC,IAAIC,EAA+B,CAClC,yBACA,mCACA,UACCrxE,KAAM,MAEJsxE,EAAiC,CACpC,2BACA,qCACA,UACCtxE,KAAM,MAEJuxE,EAA2B,CAC9B,kCACA,yBACA,wDACA,mDACA,oFACA,yCACA,UACCvxE,KAAM,MAEJwxE,EAA6B,CAChC,uCACA,2BACA,4DACA,kFACA,2CACA,UACCxxE,KAAM,MAEJyxE,EAA6B,CAChC,6BACA,4CACA,kFACA,+DACA,6HACA,mDACA,uEACA,gDACCzxE,KAAM,MAEJqtB,EAAW,CACdqkD,SAAU,CAAEt5E,OAAO,IAAI,SAAQu5E,OAAQ,WACvCC,WAAY,CAAEx5E,MAAO,GACrBy5E,YAAa,CAAEz5E,MAAO,MACtB05E,cAAe,CAAE15E,MAAO,OAGzB0C,KAAKi3E,eAAiB1kD,EAGtBvyB,KAAKk3E,gBAAkB,SAAWC,GAEjC,IAAM,IAAIC,KAAe7kD,EAExB4kD,EAAO5kD,SAAU6kD,GAAgB7kD,EAAU6kD,GAI5CD,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAAS,2BAA4B,0BACnFkpE,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAAS,2BAA4B,6BACnFkpE,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAAS,wCAAyCsoE,GAChGY,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAAS,wCAAyCuoE,GAChGW,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAAS,mCAAoCwoE,GAC3FU,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAAS,mCAAoCyoE,GAC3FS,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAAS,sCAAuC0oE,IAK/F17E,OAAOo8E,iBACNr3E,KACA,CACC42E,SAAU,CACT15E,IAAK,WAAc,OAAOq1B,EAASqkD,SAASt5E,OAC5CiD,IAAK,SAAW0E,GAAMstB,EAASqkD,SAASt5E,MAAQ2H,IAEjD8xE,YAAa,CACZ75E,IAAK,WAAc,OAAOq1B,EAASwkD,YAAYz5E,OAC/CiD,IAAK,SAAW0E,GAAMstB,EAASwkD,YAAYz5E,MAAQ2H,IAEpD6xE,WAAY,CACX55E,IAAK,WAAc,OAAOq1B,EAASukD,WAAWx5E,OAC9CiD,IAAK,SAAW0E,GAAMstB,EAASukD,WAAWx5E,MAAQ2H,IAEnD+xE,cAAe,CACd95E,IAAK,WAAc,OAAOq1B,EAASykD,cAAc15E,OACjDiD,IAAK,SAAW0E,GAEfstB,EAASykD,cAAc15E,MAAQ2H,EAE1BA,GAEJjF,KAAK6gD,QAAQy2B,kBAAoB,GAEjCt3E,KAAK6gD,QAAQ02B,iBAAmB,YAIzBv3E,KAAK6gD,QAAQ02B,wBACbv3E,KAAK6gD,QAAQy2B,8BAUlBt3E,KAAKgK,iBACLhK,KAAKiK,iBACLjK,KAAKw3E,oBACLx3E,KAAKy3E,aAEZz3E,KAAK03E,UAAWlvE,GAsBjB,SAASqqE,KAER,MAAO,CAENh2E,KAAMi1E,EAAWc,sCAEjB+E,yBAA0B,CACzB,QACA,MACA,WACA,oBACA,QACA,iBACA,WACA,oBACA,cACA,UACA,YACA,YACA,gBACA,kBACA,oBACA,mBACA,cACA,WACA,gBACA,aACA,WACA,SACA,kBACA,mBAGDxD,gBAAiB,WAEhB,OAAOkC,IAIRjC,aAAc,SAAWC,EAAgBC,EAAaC,GAErD,IAAIqD,EAAwBtD,EAAY3C,WAAY3xE,KAAKnD,MAEzDw3E,EAAexqE,MAAQ,IAAI,QAAO,EAAK,EAAK,GAC5CwqE,EAAenjC,QAAU,EAEzB,IAAIsjC,EAAU,GAEd,GAAK3rC,MAAM8rC,QAASiD,EAAsBC,eAAkB,CAE3D,IAAIt1E,EAAQq1E,EAAsBC,cAElCxD,EAAexqE,MAAMq8C,UAAW3jD,GAChC8xE,EAAenjC,QAAU3uC,EAAO,GAoBjC,QAhB8CgC,IAAzCqzE,EAAsBE,gBAE1BtD,EAAQl5E,KAAMi5E,EAAOO,cAAeT,EAAgB,MAAOuD,EAAsBE,iBAIlFzD,EAAe0D,SAAW,IAAI,QAAO,EAAK,EAAK,GAC/C1D,EAAeyC,gBAAwDvyE,IAA3CqzE,EAAsBI,iBAAiCJ,EAAsBI,iBAAmB,EAC5H3D,EAAeuC,SAAW,IAAI,QAAO,EAAK,EAAK,GAE1C/tC,MAAM8rC,QAASiD,EAAsBK,iBAEzC5D,EAAeuC,SAAS1wB,UAAW0xB,EAAsBK,qBAID1zE,IAApDqzE,EAAsBM,0BAA0C,CAEpE,IAAIC,EAAkBP,EAAsBM,0BAC5C1D,EAAQl5E,KAAMi5E,EAAOO,cAAeT,EAAgB,gBAAiB8D,IACrE3D,EAAQl5E,KAAMi5E,EAAOO,cAAeT,EAAgB,cAAe8D,IAIpE,OAAOlwD,QAAQshB,IAAKirC,IAIrB4D,eAAgB,SAAW/D,GAE1B,IAAIlxE,EAAW,IAAIkzE,GAA4BhC,GA0C/C,OAzCAlxE,EAASquC,KAAM,EAEfruC,EAAS0G,MAAQwqE,EAAexqE,MAEhC1G,EAAS6B,SAA6BT,IAAvB8vE,EAAervE,IAAoB,KAAOqvE,EAAervE,IAExE7B,EAASk1E,SAAW,KACpBl1E,EAASm1E,kBAAoB,EAE7Bn1E,EAASo1E,WAAiCh0E,IAAzB8vE,EAAekE,MAAsB,KAAOlE,EAAekE,MAC5Ep1E,EAASq1E,eAAiB,EAE1Br1E,EAAS40E,SAAW1D,EAAe0D,SACnC50E,EAASs1E,kBAAoB,EAC7Bt1E,EAASu1E,iBAA6Cn0E,IAA/B8vE,EAAeqE,YAA4B,KAAOrE,EAAeqE,YAExFv1E,EAASw1E,aAAqCp0E,IAA3B8vE,EAAesE,QAAwB,KAAOtE,EAAesE,QAChFx1E,EAASy1E,UAAY,EAErBz1E,EAAS01E,eAAyCt0E,IAA7B8vE,EAAewE,UAA0B,KAAOxE,EAAewE,UACpF11E,EAAS21E,cAAgB,wBAEpBzE,EAAe0E,cAAc51E,EAAS41E,YAAc1E,EAAe0E,aAExE51E,EAAS61E,gBAAkB,KAC3B71E,EAAS81E,kBAAoB,EAC7B91E,EAAS+1E,iBAAmB,EAE5B/1E,EAAS4zE,iBAA6CxyE,IAA/B8vE,EAAe0C,YAA4B,KAAO1C,EAAe0C,YACxF5zE,EAASyzE,SAAWvC,EAAeuC,SAEnCzzE,EAAS6zE,mBAAiDzyE,IAAjC8vE,EAAe2C,cAA8B,KAAO3C,EAAe2C,cAC5F7zE,EAAS2zE,WAAazC,EAAeyC,WAErC3zE,EAASg2E,SAAW,KAEpBh2E,EAASi2E,YAAmC70E,IAA1B8vE,EAAe+E,OAAuB,KAAO/E,EAAe+E,OAC9Ej2E,EAASsgE,gBAAkB,EAE3BtgE,EAASk2E,gBAAkB,IAEpBl2E,IAaV,SAASkwE,KAERrzE,KAAKnD,KAAOi1E,EAAWsB,sBAUxB,SAASkG,GAA4BC,EAAoBC,EAAcC,EAAYC,GAElF,IAAYt+E,KAAM4E,KAAMu5E,EAAoBC,EAAcC,EAAYC,GAjavE3G,GAAkC73E,UAAUy+E,gBAAkB,SAAWC,EAAWrF,GAEnF,IAAI1F,EAAO7uE,KAAK6uE,KACZwB,EAAcrwE,KAAKqwE,YACnBwJ,EAAkBD,EAAUjI,WAAY3xE,KAAKnD,MAAOi9E,WACpDC,EAAmBH,EAAUjI,WAAY3xE,KAAKnD,MAAOqV,WACrD8nE,EAAoB,GACpBC,EAAyB,GACzBC,EAAmB,GAEvB,IAAM,IAAIC,KAAiBJ,EAAmB,CAE7C,IAAIK,EAAqBC,GAAYF,IAAmBA,EAAcG,cAEtEN,EAAmBI,GAAuBL,EAAkBI,GAI7D,IAAMA,KAAiBP,EAAU1nE,WAAa,CAEzCkoE,EAAqBC,GAAYF,IAAmBA,EAAcG,cAEtE,QAA2C/1E,IAAtCw1E,EAAkBI,GAAgC,CAEtD,IAAII,EAAc1L,EAAK2L,UAAWZ,EAAU1nE,WAAYioE,IACpDM,EAAgBC,GAAuBH,EAAYE,eAEvDP,EAAkBE,GAAuBK,EACzCR,EAAwBG,IAAkD,IAA3BG,EAAY7yB,YAM7D,OAAO6sB,EAAOoG,cAAe,aAAcd,GAAkBxjD,MAAM,SAAWyjD,GAE7E,OAAO,IAAI7xD,SAAS,SAAWC,GAE9BmoD,EAAYuK,gBAAiBd,GAAY,SAAWt4E,GAEnD,IAAM,IAAI24E,KAAiB34E,EAAS0Q,WAAa,CAEhD,IAAI4B,EAAYtS,EAAS0Q,WAAYioE,GACjCzyB,EAAauyB,EAAwBE,QAErB51E,IAAfmjD,IAA2B5zC,EAAU4zC,WAAaA,GAIxDx/B,EAAS1mB,KAEPw4E,EAAmBE,UAmBzB/G,GAA8Bj4E,UAAU2/E,cAAgB,SAAW/gD,EAASxb,GA8B3E,OA5BAwb,EAAUA,EAAQ/2B,aAEQwB,IAArB+Z,EAAUyoC,QAEdjtB,EAAQitB,OAAOb,UAAW5nC,EAAUyoC,aAITxiD,IAAvB+Z,EAAUuB,WAEdia,EAAQja,SAAWvB,EAAUuB,eAILtb,IAApB+Z,EAAUE,OAEdsb,EAAQghD,OAAO50B,UAAW5nC,EAAUE,YAITja,IAAvB+Z,EAAUy8D,UAEd13E,QAAQiE,KAAM,wCAA0CtH,KAAKnD,KAAO,kCAIrEi9B,EAAQ9J,aAAc,EAEf8J,GA+IRu8C,GAA2Bn7E,UAAYD,OAAO0C,OAAQ,uBAAqBzC,WAC3Em7E,GAA2Bn7E,UAAU6Y,YAAcsiE,GAEnDA,GAA2Bn7E,UAAU4kB,KAAO,SAAWk7D,GAWtD,OATA,uBAAqB9/E,UAAU4kB,KAAK1kB,KAAM4E,KAAMg7E,GAChDh7E,KAAK+2E,YAAciE,EAAOjE,YAC1B/2E,KAAK42E,SAAS92D,KAAMk7D,EAAOpE,UAC3B52E,KAAKg3E,cAAgBgE,EAAOhE,cAC5Bh3E,KAAK82E,WAAakE,EAAOlE,kBAClB92E,KAAKgK,iBACLhK,KAAKiK,iBACLjK,KAAKw3E,oBACLx3E,KAAKy3E,aACLz3E,MAoKRs5E,GAA2Bp+E,UAAYD,OAAO0C,OAAQ,IAAYzC,WAClEo+E,GAA2Bp+E,UAAU6Y,YAAculE,GAEnDA,GAA2Bp+E,UAAU+/E,iBAAmB,SAAW74E,GAUlE,IALA,IAAIvG,EAASmE,KAAK05E,aACjB50E,EAAS9E,KAAKw5E,aACd0B,EAAYl7E,KAAKk7E,UACjBn0B,EAAS3kD,EAAQ84E,EAAY,EAAIA,EAExBpgF,EAAI,EAAGA,IAAMogF,EAAWpgF,IAEjCe,EAAQf,GAAMgK,EAAQiiD,EAASjsD,GAIhC,OAAOe,GAIRy9E,GAA2Bp+E,UAAUigF,aAAe7B,GAA2Bp+E,UAAU+/E,iBAEzF3B,GAA2Bp+E,UAAUkgF,UAAY9B,GAA2Bp+E,UAAU+/E,iBAEtF3B,GAA2Bp+E,UAAUmgF,aAAe,SAAWC,EAAIC,EAAIh+E,EAAGi+E,GAyBzE,IAvBA,IAAI3/E,EAASmE,KAAK05E,aACd50E,EAAS9E,KAAKw5E,aACd7/C,EAAS35B,KAAKk7E,UAEdO,EAAmB,EAAT9hD,EACV+hD,EAAmB,EAAT/hD,EAEVgiD,EAAKH,EAAKD,EAEVt9E,GAAMV,EAAIg+E,GAAOI,EACjBC,EAAK39E,EAAIA,EACT49E,EAAMD,EAAK39E,EAEX69E,EAAUR,EAAKI,EACfK,EAAUD,EAAUJ,EAEpBM,GAAO,EAAIH,EAAM,EAAID,EACrBK,EAAKJ,EAAMD,EACXM,EAAK,EAAIF,EACTG,EAAKF,EAAKL,EAAK39E,EAITnD,EAAI,EAAGA,IAAM6+B,EAAQ7+B,IAAO,CAErC,IAAIshF,EAAKt3E,EAAQi3E,EAAUjhF,EAAI6+B,GAC3B0iD,EAAKv3E,EAAQi3E,EAAUjhF,EAAI2gF,GAAYE,EACvCW,EAAKx3E,EAAQg3E,EAAUhhF,EAAI6+B,GAC3B4iD,EAAKz3E,EAAQg3E,EAAUhhF,GAAM6gF,EAEjC9/E,EAAQf,GAAMohF,EAAKE,EAAKD,EAAKE,EAAKL,EAAKM,EAAKL,EAAKM,EAIlD,OAAO1gF,GAUR,IAAI2gF,GAWK,EAXLA,GAYI,EAZJA,GAaQ,EAbRA,GAcS,EAdTA,GAeQ,EAfRA,GAgBa,EAhBbA,GAiBW,EAKX9B,GAAwB,CAC3B+B,KAAMC,UACNC,KAAMjjD,WACNkjD,KAAMC,WACNC,KAAM//C,YACNggD,KAAMC,YACNC,KAAM9iD,cAGH+iD,GAAgB,CACnBC,KAAM,gBACNC,KAAM,eACNC,KAAM,6BACNC,KAAM,4BACNC,KAAM,4BACNC,KAAM,4BAGHC,GAAkB,CACrBC,MAAO,sBACPC,MAAO,yBACPC,MAAO,kBAGJC,GAAmB,CACtB,OAAU,EACV,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,IAGLxD,GAAa,CAChByD,SAAU,WACVC,OAAQ,SACRC,QAAS,UACTC,WAAY,KACZC,WAAY,MACZC,QAAS,QACTC,UAAW,aACXC,SAAU,aAGPC,GAAkB,CACrB9/D,MAAO,QACP+/D,YAAa,WACb1+D,SAAU,aACV2+D,QAAS,yBAGNC,GAAgB,CACnBC,iBAAan6E,EAEbq2B,OAAQ,oBACR+jD,KAAM,uBAGHC,GACK,SADLA,GAEG,OAFHA,GAGI,QAGJC,GAAoB,CACvB,YAAa,aACb,aAAc,aAKf,SAASC,GAAY16C,EAAKlsB,GAGzB,MAAoB,iBAARksB,GAA4B,KAARA,EAAoB,IAG/C,gBAAgBx2B,KAAMsK,IAAU,MAAMtK,KAAMw2B,KAEhDlsB,EAAOA,EAAKjK,QAAS,0BAA2B,OAK5C,mBAAmBL,KAAMw2B,IAGzB,gBAAgBx2B,KAAMw2B,IAGtB,aAAax2B,KAAMw2B,GANqBA,EAStClsB,EAAOksB,GA2Bf,SAAS26C,GAAgCC,EAAiBjhF,EAAQkhF,GAIjE,IAAM,IAAIpiF,KAAQoiF,EAAUtN,gBAEMptE,IAA5By6E,EAAiBniF,KAErBkB,EAAO2T,SAASwtE,eAAiBnhF,EAAO2T,SAASwtE,gBAAkB,GACnEnhF,EAAO2T,SAASwtE,eAAgBriF,GAASoiF,EAAUtN,WAAY90E,IAYlE,SAASsiF,GAAwBphF,EAAQqhF,QAEhB76E,IAAnB66E,EAAQC,SAEmB,iBAAnBD,EAAQC,OAEnBpkF,OAAO4iB,OAAQ9f,EAAO2T,SAAU0tE,EAAQC,QAIxCh8E,QAAQiE,KAAM,sDAAwD83E,EAAQC,SAqFjF,SAASC,GAAoBC,EAAMC,GAIlC,GAFAD,EAAKD,0BAEoB/6E,IAApBi7E,EAAQhB,QAEZ,IAAM,IAAI1jF,EAAI,EAAG6qD,EAAK65B,EAAQhB,QAAQxjF,OAAQF,EAAI6qD,EAAI7qD,IAErDykF,EAAKE,sBAAuB3kF,GAAM0kF,EAAQhB,QAAS1jF,GAOrD,GAAK0kF,EAAQH,QAAUx2C,MAAM8rC,QAAS6K,EAAQH,OAAOK,aAAgB,CAEpE,IAAIA,EAAcF,EAAQH,OAAOK,YAEjC,GAAKH,EAAKE,sBAAsBzkF,SAAW0kF,EAAY1kF,OAAS,CAE/DukF,EAAKI,sBAAwB,GAE7B,IAAU7kF,EAAI,EAAG6qD,EAAK+5B,EAAY1kF,OAAQF,EAAI6qD,EAAI7qD,IAEjDykF,EAAKI,sBAAuBD,EAAa5kF,IAAQA,OAMlDuI,QAAQiE,KAAM,yEA6BjB,SAASs4E,GAAqB1tE,GAM7B,IAJA,IAAI2tE,EAAgB,GAEhBhuE,EAAO5W,OAAO4W,KAAMK,GAAajC,OAE3BnV,EAAI,EAAG6qD,EAAK9zC,EAAK7W,OAAQF,EAAI6qD,EAAI7qD,IAE1C+kF,GAAiBhuE,EAAM/W,GAAM,IAAMoX,EAAYL,EAAM/W,IAAQ,IAI9D,OAAO+kF,EAMR,SAASvM,GAAYzE,EAAM8C,EAAYlzE,GAEtCuB,KAAK6uE,KAAOA,GAAQ,GACpB7uE,KAAK2xE,WAAaA,GAAc,GAChC3xE,KAAKvB,QAAUA,GAAW,GAG1BuB,KAAK8/E,MAAQ,IAAIvP,EAGjBvwE,KAAK+/E,eAAiB,GAEtB//E,KAAKggF,cAAgB,IAAI,gBAAehgF,KAAKvB,QAAQ2xE,SACrDpwE,KAAKggF,cAAcC,eAAgBjgF,KAAKvB,QAAQ6yE,aAEhDtxE,KAAKkgF,WAAa,IAAI,IAAYlgF,KAAKvB,QAAQ2xE,SAC/CpwE,KAAKkgF,WAAW7O,gBAAiB,eAEC,oBAA7BrxE,KAAKvB,QAAQ6yE,aAEjBtxE,KAAKkgF,WAAW3O,oBAAoB,GA07BtC,SAAS4O,GAAwB3+E,EAAU4+E,EAAc7L,GAExD,IAAIriE,EAAakuE,EAAaluE,WAE1BsiE,EAAU,GAEd,SAAS6L,EAAyBC,EAAenG,GAEhD,OAAO5F,EAAOoG,cAAe,WAAY2F,GACvCjqD,MAAM,SAAWkqD,GAEjB/+E,EAASkR,aAAcynE,EAAeoG,MAMzC,IAAM,IAAIC,KAAqBtuE,EAAa,CAE3C,IAAIkoE,EAAqBC,GAAYmG,IAAuBA,EAAkBlG,cAGzEF,KAAsB54E,EAAS0Q,YAEpCsiE,EAAQl5E,KAAM+kF,EAAyBnuE,EAAYsuE,GAAqBpG,IAIzE,QAA8B71E,IAAzB67E,EAAax8E,UAA2BpC,EAASY,MAAQ,CAE7D,IAAIm+E,EAAWhM,EAAOoG,cAAe,WAAYyF,EAAax8E,SAAUyyB,MAAM,SAAWkqD,GAExF/+E,EAASgB,SAAU+9E,MAIpB/L,EAAQl5E,KAAMilF,GAQf,OAJApB,GAAwB39E,EAAU4+E,GA3InC,SAAwB5+E,EAAU4+E,EAAc7L,GAE/C,IAAIriE,EAAakuE,EAAaluE,WAE1BuuE,EAAM,IAAI,OAEd,QAA6Bl8E,IAAxB2N,EAAW4rE,SAAhB,CAEC,IAEIpyD,GAFA60D,EAAWhM,EAAO1F,KAAK2L,UAAWtoE,EAAW4rE,WAE9BpyD,IACfjf,EAAM8zE,EAAS9zE,IAInB,QAAalI,IAARmnB,QAA6BnnB,IAARkI,EAA1B,CAECg0E,EAAIlgF,IACH,IAAI,UAASmrB,EAAK,GAAKA,EAAK,GAAKA,EAAK,IACtC,IAAI,UAASjf,EAAK,GAAKA,EAAK,GAAKA,EAAK,KAgBzC,IAAIi0E,EAAUN,EAAaM,QAE3B,QAAiBn8E,IAAZm8E,EAAwB,CAK5B,IAHA,IAAIC,EAAkB,IAAI,UACtBC,EAAS,IAAI,UAEP9lF,EAAI,EAAG6qD,EAAK+6B,EAAQ1lF,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAEpD,IAAI2kD,EAASihC,EAAS5lF,GAEtB,QAAyByJ,IAApBk7C,EAAOq+B,SAAyB,CAEpC,IAAIyC,EACA70D,GADA60D,EAAWhM,EAAO1F,KAAK2L,UAAW/6B,EAAOq+B,WAC1BpyD,IACfjf,EAAM8zE,EAAS9zE,SAINlI,IAARmnB,QAA6BnnB,IAARkI,GAGzBm0E,EAAOC,KAAMr0E,KAAKC,IAAKD,KAAK8lD,IAAK5mC,EAAK,IAAOlf,KAAK8lD,IAAK7lD,EAAK,MAC5Dm0E,EAAOE,KAAMt0E,KAAKC,IAAKD,KAAK8lD,IAAK5mC,EAAK,IAAOlf,KAAK8lD,IAAK7lD,EAAK,MAC5Dm0E,EAAOG,KAAMv0E,KAAKC,IAAKD,KAAK8lD,IAAK5mC,EAAK,IAAOlf,KAAK8lD,IAAK7lD,EAAK,MAM5Dk0E,EAAgBl0E,IAAKm0E,IAIrBv9E,QAAQiE,KAAM,wEASjBm5E,EAAIO,eAAgBL,GAIrBn/E,EAASiQ,YAAcgvE,EAEvB,IAAIQ,EAAS,IAAI,SAEjBR,EAAI/Y,UAAWuZ,EAAOzZ,QACtByZ,EAAOtmB,OAAS8lB,EAAI/0D,IAAIw1D,WAAYT,EAAIh0E,KAAQ,EAEhDjL,EAAS2/E,eAAiBF,OAlExB59E,QAAQiE,KAAM,wEAsHhB85E,CAAe5/E,EAAU4+E,EAAc7L,GAEhCtsD,QAAQshB,IAAKirC,GAAUn+C,MAAM,WAEnC,YAAgC9xB,IAAzB67E,EAAaM,QA/oCtB,SAA0Bl/E,EAAUk/E,EAASnM,GAK5C,IAHA,IAAI8M,GAAmB,EACnBC,GAAiB,EAEXxmF,EAAI,EAAG6qD,EAAK+6B,EAAQ1lF,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAOpD,QAHyByJ,KAFrBk7C,EAASihC,EAAS5lF,IAEVgjF,WAAyBuD,GAAmB,QACjC98E,IAAlBk7C,EAAOs+B,SAAuBuD,GAAiB,GAE/CD,GAAoBC,EAAiB,MAI3C,IAAOD,IAAsBC,EAAiB,OAAOr5D,QAAQC,QAAS1mB,GAEtE,IAAI+/E,EAA2B,GAC3BC,EAAyB,GAE7B,IAAU1mF,EAAI,EAAG6qD,EAAK+6B,EAAQ1lF,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAEpD,IAAI2kD,EAASihC,EAAS5lF,GAEtB,GAAKumF,EAAmB,CAEvB,IAAII,OAAsCl9E,IAApBk7C,EAAOq+B,SAC1BvJ,EAAOoG,cAAe,WAAYl7B,EAAOq+B,UACzCt8E,EAAS0Q,WAAWkC,SAEvBmtE,EAAyBjmF,KAAMmmF,GAIhC,GAAKH,EAAiB,CAEjBG,OAAoCl9E,IAAlBk7C,EAAOs+B,OAC1BxJ,EAAOoG,cAAe,WAAYl7B,EAAOs+B,QACzCv8E,EAAS0Q,WAAWuyC,OAEvB+8B,EAAuBlmF,KAAMmmF,IAM/B,OAAOx5D,QAAQshB,IAAK,CACnBthB,QAAQshB,IAAKg4C,GACbt5D,QAAQshB,IAAKi4C,KACVnrD,MAAM,SAAWmkD,GAEpB,IAAIkH,EAAiBlH,EAAW,GAC5BmH,EAAenH,EAAW,GAM9B,OAJK6G,IAAmB7/E,EAASolD,gBAAgBxyC,SAAWstE,GACvDJ,IAAiB9/E,EAASolD,gBAAgBnC,OAASk9B,GACxDngF,EAASqlD,sBAAuB,EAEzBrlD,KAqlCJogF,CAAiBpgF,EAAU4+E,EAAaM,QAASnM,GACjD/yE,KAWL,SAASyoD,GAAqBzoD,EAAU0oD,GAEvC,IAAI9nD,EAAQZ,EAASgnD,WAIrB,GAAe,OAAVpmD,EAAiB,CAErB,IAAIwB,EAAU,GAEVwQ,EAAW5S,EAASc,aAAc,YAEtC,QAAkBiC,IAAb6P,EAcJ,OADA/Q,QAAQ2a,MAAO,kGACRxc,EAZP,IAAM,IAAI1G,EAAI,EAAGA,EAAIsZ,EAAS7H,MAAOzR,IAEpC8I,EAAQtI,KAAMR,GAIf0G,EAASgB,SAAUoB,GACnBxB,EAAQZ,EAASgnD,WAanB,IAAI2B,EAAoB/nD,EAAMmK,MAAQ,EAClC28C,EAAa,GAEjB,GAAKgB,IAAa,sBAIjB,IAAUpvD,EAAI,EAAGA,GAAKqvD,EAAmBrvD,IAExCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAM,IAC7B+B,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,IAC7BouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,SAQlC,IAAUA,EAAI,EAAGA,EAAIqvD,EAAmBrvD,IAElCA,EAAI,GAAM,GAEdouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,IAC7BouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,IACjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,MAKjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,IACjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,EAAI,IACjCouD,EAAW5tD,KAAM8G,EAAM+kD,KAAMrsD,KAQzBouD,EAAWluD,OAAS,IAAQmvD,GAElC9mD,QAAQ2a,MAAO,2FAMhB,IAAIosC,EAAc5oD,EAASuB,QAG3B,OAFAqnD,EAAY5nD,SAAU0mD,GAEfkB,EAyvBR,OA7zDAkpB,GAAWp4E,UAAUkT,MAAQ,SAAWsiE,EAAQE,GAE/C,IAAI2D,EAASv0E,KACT6uE,EAAO7uE,KAAK6uE,KACZ8C,EAAa3xE,KAAK2xE,WAGtB3xE,KAAK8/E,MAAMtP,YAGXxwE,KAAK6hF,WAEL55D,QAAQshB,IAAK,CAEZvpC,KAAK8hF,gBAAiB,SACtB9hF,KAAK8hF,gBAAiB,aACtB9hF,KAAK8hF,gBAAiB,YAEnBzrD,MAAM,SAAWtB,GAEpB,IAAIl5B,EAAS,CACZuH,MAAO2xB,EAAc,GAAK85C,EAAKzrE,OAAS,GACxC2+E,OAAQhtD,EAAc,GACtB6uB,WAAY7uB,EAAc,GAC1BitD,QAASjtD,EAAc,GACvBk9C,MAAOpD,EAAKoD,MACZsC,OAAQA,EACR7iE,SAAU,IAGXqtE,GAAgCpN,EAAY91E,EAAQgzE,GAEpDsQ,GAAwBtjF,EAAQgzE,GAEhC6B,EAAQ70E,MAELkzE,MAAO6B,IAOZ0C,GAAWp4E,UAAU2mF,SAAW,WAW/B,IATA,IAAII,EAAWjiF,KAAK6uE,KAAKjgB,OAAS,GAC9BszB,EAAWliF,KAAK6uE,KAAKsT,OAAS,GAC9BC,EAAWpiF,KAAK6uE,KAAKwT,QAAU,GAE/BC,EAAiB,GACjBC,EAAW,GAILC,EAAY,EAAGC,EAAaP,EAASlnF,OAAQwnF,EAAYC,EAAYD,IAI9E,IAFA,IAAIE,EAASR,EAAUM,GAAYE,OAEzB5nF,EAAI,EAAG6qD,EAAK+8B,EAAO1nF,OAAQF,EAAI6qD,EAAI7qD,IAE5CmnF,EAAUS,EAAQ5nF,IAAM6nF,QAAS,EAWnC,IAAM,IAAIC,EAAY,EAAGC,EAAaZ,EAASjnF,OAAQ4nF,EAAYC,EAAYD,IAAe,CAE7F,IAAIE,EAAUb,EAAUW,QAEFr+E,IAAjBu+E,EAAQvD,YAE4Bh7E,IAAnC+9E,EAAgBQ,EAAQvD,QAE5B+C,EAAgBQ,EAAQvD,MAASgD,EAAUO,EAAQvD,MAAS,GAI7D+C,EAAgBQ,EAAQvD,aAKFh7E,IAAjBu+E,EAAQC,OAEZX,EAAUU,EAAQvD,MAAOx7B,eAAgB,IAQ5C/jD,KAAK6uE,KAAKyT,eAAiBA,EAC3BtiF,KAAK6uE,KAAK0T,SAAWA,GAUtBjP,GAAWp4E,UAAUy/E,cAAgB,SAAWp8E,EAAM6D,GAErD,IAAI4gF,EAAWzkF,EAAO,IAAM6D,EACxBozB,EAAax1B,KAAK8/E,MAAM5iF,IAAK8lF,GAEjC,IAAOxtD,EAAa,CAEnB,OAASj3B,GAER,IAAK,QACJi3B,EAAax1B,KAAKijF,UAAW7gF,GAC7B,MAED,IAAK,OACJozB,EAAax1B,KAAKkjF,SAAU9gF,GAC5B,MAED,IAAK,OACJozB,EAAax1B,KAAKmjF,SAAU/gF,GAC5B,MAED,IAAK,WACJozB,EAAax1B,KAAKojF,aAAchhF,GAChC,MAED,IAAK,aACJozB,EAAax1B,KAAKqjF,eAAgBjhF,GAClC,MAED,IAAK,SACJozB,EAAax1B,KAAKsjF,WAAYlhF,GAC9B,MAED,IAAK,WACJozB,EAAax1B,KAAKujF,aAAcnhF,GAChC,MAED,IAAK,UACJozB,EAAax1B,KAAKwjF,YAAaphF,GAC/B,MAED,IAAK,OACJozB,EAAax1B,KAAKyjF,SAAUrhF,GAC5B,MAED,IAAK,YACJozB,EAAax1B,KAAK0jF,cAAethF,GACjC,MAED,IAAK,SACJozB,EAAax1B,KAAK2jF,WAAYvhF,GAC9B,MAED,IAAK,QACJozB,EAAax1B,KAAK2xE,WAAYG,EAAWQ,qBAAsBoB,UAAWtxE,GAC1E,MAED,QACC,MAAM,IAAIwuC,MAAO,iBAAmBryC,GAItCyB,KAAK8/E,MAAM7iE,IAAK+lE,EAAUxtD,GAI3B,OAAOA,GASR89C,GAAWp4E,UAAU4mF,gBAAkB,SAAWvjF,GAEjD,IAAIw2B,EAAe/0B,KAAK8/E,MAAM5iF,IAAKqB,GAEnC,IAAOw2B,EAAe,CAErB,IAAIw/C,EAASv0E,KACT4jF,EAAO5jF,KAAK6uE,KAAMtwE,GAAkB,SAATA,EAAkB,KAAO,OAAW,GAEnEw2B,EAAe9M,QAAQshB,IAAKq6C,EAAK5+E,KAAK,SAAW6+E,EAAKzhF,GAErD,OAAOmyE,EAAOoG,cAAep8E,EAAM6D,OAIpCpC,KAAK8/E,MAAM7iE,IAAK1e,EAAMw2B,GAIvB,OAAOA,GASRu+C,GAAWp4E,UAAUooF,WAAa,SAAWQ,GAE5C,IAAIC,EAAY/jF,KAAK6uE,KAAKmV,QAASF,GAC/B3S,EAASnxE,KAAKkgF,WAElB,GAAK6D,EAAUxlF,MAA2B,gBAAnBwlF,EAAUxlF,KAEhC,MAAM,IAAIqyC,MAAO,qBAAuBmzC,EAAUxlF,KAAO,kCAK1D,QAAuBgG,IAAlBw/E,EAAUE,KAAqC,IAAhBH,EAEnC,OAAO77D,QAAQC,QAASloB,KAAK2xE,WAAYG,EAAWC,iBAAkBhkC,MAIvE,IAAItvC,EAAUuB,KAAKvB,QAEnB,OAAO,IAAIwpB,SAAS,SAAWC,EAASC,GAEvCgpD,EAAOV,KAAMqO,GAAYiF,EAAUE,IAAKxlF,EAAQyZ,MAAQgQ,OAAS3jB,GAAW,WAE3E4jB,EAAQ,IAAIyoB,MAAO,4CAA8CmzC,EAAUE,IAAM,cAapF3Q,GAAWp4E,UAAUmoF,eAAiB,SAAWxJ,GAEhD,IAAIqK,EAAgBlkF,KAAK6uE,KAAKsV,YAAatK,GAE3C,OAAO75E,KAAK26E,cAAe,SAAUuJ,EAAcp6B,QAASzzB,MAAM,SAAWyzB,GAE5E,IAAIisB,EAAamO,EAAcnO,YAAc,EACzCI,EAAa+N,EAAc/N,YAAc,EAC7C,OAAOrsB,EAAOzrD,MAAO83E,EAAYA,EAAaJ,OAWhDzC,GAAWp4E,UAAUkoF,aAAe,SAAW9C,GAE9C,IAAI/L,EAASv0E,KACT6uE,EAAO7uE,KAAK6uE,KAEZ0L,EAAcv6E,KAAK6uE,KAAK2L,UAAW8F,GAEvC,QAAgC/7E,IAA3Bg2E,EAAYT,iBAAmDv1E,IAAvBg2E,EAAY6J,OAKxD,OAAOn8D,QAAQC,QAAS,MAIzB,IAAIm8D,EAAqB,GAmBzB,YAjBgC9/E,IAA3Bg2E,EAAYT,WAEhBuK,EAAmB/oF,KAAM0E,KAAK26E,cAAe,aAAcJ,EAAYT,aAIvEuK,EAAmB/oF,KAAM,WAIEiJ,IAAvBg2E,EAAY6J,SAEhBC,EAAmB/oF,KAAM0E,KAAK26E,cAAe,aAAcJ,EAAY6J,OAAOxgF,QAAQk2E,aACtFuK,EAAmB/oF,KAAM0E,KAAK26E,cAAe,aAAcJ,EAAY6J,OAAOt/E,OAAOg1E,cAI/E7xD,QAAQshB,IAAK86C,GAAqBhuD,MAAM,SAAW8tD,GAEzD,IAWI5hF,EAAO+hF,EAXPxK,EAAaqK,EAAa,GAE1B5xE,EAAWsrE,GAAkBtD,EAAYh8E,MACzCkpD,EAAaizB,GAAuBH,EAAYE,eAGhD8J,EAAe98B,EAAWc,kBAC1Bi8B,EAAYD,EAAehyE,EAC3B4jE,EAAaoE,EAAYpE,YAAc,EACvCsO,OAAwClgF,IAA3Bg2E,EAAYT,WAA2BjL,EAAKsV,YAAa5J,EAAYT,YAAa2K,gBAAalgF,EAC5GmjD,GAAwC,IAA3B6yB,EAAY7yB,WAI7B,GAAK+8B,GAAcA,IAAeD,EAAY,CAI7C,IAAIE,EAAUl4E,KAAKkhB,MAAOyoD,EAAasO,GACnCE,EAAa,qBAAuBpK,EAAYT,WAAa,IAAMS,EAAYE,cAAgB,IAAMiK,EAAU,IAAMnK,EAAYhuE,MACjIq4E,EAAKrQ,EAAOuL,MAAM5iF,IAAKynF,GAEpBC,IAENriF,EAAQ,IAAIklD,EAAYqyB,EAAY4K,EAAUD,EAAYlK,EAAYhuE,MAAQk4E,EAAaF,GAG3FK,EAAK,IAAI,IAAmBriF,EAAOkiF,EAAaF,GAEhDhQ,EAAOuL,MAAM7iE,IAAK0nE,EAAYC,IAI/BN,EAAkB,IAAI,6BAA4BM,EAAIryE,EAAY4jE,EAAasO,EAAeF,EAAc78B,QAM3GnlD,EAFmB,OAAfu3E,EAEI,IAAIryB,EAAY8yB,EAAYhuE,MAAQgG,GAIpC,IAAIk1C,EAAYqyB,EAAY3D,EAAYoE,EAAYhuE,MAAQgG,GAIrE+xE,EAAkB,IAAI,kBAAiB/hF,EAAOgQ,EAAUm1C,GAKzD,QAA4BnjD,IAAvBg2E,EAAY6J,OAAuB,CAEvC,IAAIS,EAAkBhH,GAAiBiH,OACnCC,EAAoBrK,GAAuBH,EAAY6J,OAAOxgF,QAAQ62E,eAEtEuK,EAAoBzK,EAAY6J,OAAOxgF,QAAQuyE,YAAc,EAC7D8O,EAAmB1K,EAAY6J,OAAOt/E,OAAOqxE,YAAc,EAE3D+O,EAAgB,IAAIH,EAAmBZ,EAAa,GAAKa,EAAmBzK,EAAY6J,OAAO73E,MAAQs4E,GACvGM,EAAe,IAAI19B,EAAY08B,EAAa,GAAKc,EAAkB1K,EAAY6J,OAAO73E,MAAQgG,GAE9E,OAAfunE,IAGJwK,EAAkB,IAAI,kBAAiBA,EAAgB/hF,MAAMlE,QAASimF,EAAgB/xE,SAAU+xE,EAAgB58B,aAIjH,IAAM,IAAI5sD,EAAI,EAAG6qD,EAAKu/B,EAAclqF,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAE1D,IAAIsH,EAAQ8iF,EAAepqF,GAM3B,GAJAwpF,EAAgBzD,KAAMz+E,EAAO+iF,EAAcrqF,EAAIyX,IAC1CA,GAAY,GAAI+xE,EAAgBxD,KAAM1+E,EAAO+iF,EAAcrqF,EAAIyX,EAAW,IAC1EA,GAAY,GAAI+xE,EAAgBvD,KAAM3+E,EAAO+iF,EAAcrqF,EAAIyX,EAAW,IAC1EA,GAAY,GAAI+xE,EAAgBc,KAAMhjF,EAAO+iF,EAAcrqF,EAAIyX,EAAW,IAC1EA,GAAY,EAAI,MAAM,IAAIq+B,MAAO,sEAMxC,OAAO0zC,MAWThR,GAAWp4E,UAAUsoF,YAAc,SAAW6B,GAE7C,IAWIrK,EAXAzG,EAASv0E,KACT6uE,EAAO7uE,KAAK6uE,KACZpwE,EAAUuB,KAAKvB,QACfuhF,EAAgBhgF,KAAKggF,cAErBsF,EAAMC,KAAKD,KAAOC,KAAKC,UAEvBC,EAAa5W,EAAK6W,SAAUL,GAE5BM,EAAoBF,EAAW9T,YAAc,GAc7CiU,GARH5K,EAFI2K,EAAmB7T,EAAWkB,kBAEzBnE,EAAKgX,OAAQF,EAAmB7T,EAAWkB,kBAAmBgI,QAI9DnM,EAAKgX,OAAQJ,EAAWzK,SAIXiJ,IACnB6B,GAAc,EAiBlB,YAf2BvhF,IAAtBy2E,EAAOlB,aAIX8L,EAAYrR,EAAOoG,cAAe,aAAcK,EAAOlB,YAAazjD,MAAM,SAAWyjD,GAEpFgM,GAAc,EACd,IAAIC,EAAO,IAAIC,KAAM,CAAElM,GAAc,CAAEv7E,KAAMy8E,EAAOiL,WAEpD,OADAL,EAAYN,EAAIY,gBAAiBH,OAO5B99D,QAAQC,QAAS09D,GAAYvvD,MAAM,SAAWuvD,GAIpD,IAAIzU,EAAS1yE,EAAQ2xE,QAAQ+V,WAAYP,GAUzC,OAROzU,IAENA,EAASwU,EAAmB7T,EAAWkB,kBACpCuB,EAAO5C,WAAYG,EAAWkB,kBAAmB1C,UACjD0P,GAIG,IAAI/3D,SAAS,SAAWC,EAASC,GAEvCgpD,EAAOV,KAAMqO,GAAY8G,EAAWnnF,EAAQyZ,MAAQgQ,OAAS3jB,EAAW4jB,SAItEkO,MAAM,SAAWyD,IAIC,IAAhBgsD,GAEJR,EAAIc,gBAAiBR,GAItB9rD,EAAQusD,OAAQ,EAEXZ,EAAW5oF,OAAOi9B,EAAQj9B,KAAO4oF,EAAW5oF,MAG5Cm+E,EAAOiL,YAAYpH,KAEvB/kD,EAAQwsD,OAASzH,GAAmB7D,EAAOiL,WAI5C,IACIM,GADW1X,EAAK2X,UAAY,IACRf,EAAWc,UAAa,GAOhD,OALAzsD,EAAQoK,UAAYg5C,GAAeqJ,EAAQriD,YAAe,eAC1DpK,EAAQmK,UAAYi5C,GAAeqJ,EAAQtiD,YAAe,2BAC1DnK,EAAQiK,MAAQ05C,GAAiB8I,EAAQxiD,QAAW,iBACpDjK,EAAQkK,MAAQy5C,GAAiB8I,EAAQviD,QAAW,iBAE7ClK,MAaTw5C,GAAWp4E,UAAU45E,cAAgB,SAAWT,EAAgBoS,EAASC,GAExE,IAAInS,EAASv0E,KAEb,OAAOA,KAAK26E,cAAe,UAAW+L,EAAOtkF,OAAQi0B,MAAM,SAAWyD,GAErE,IAAOA,EAAQ6sD,oBAEd,OAASF,GAER,IAAK,QACL,IAAK,cACL,IAAK,eACL,IAAK,YACL,IAAK,eACJ3sD,EAAQwsD,OAAS,YAepB,QANyB/hF,IAApBmiF,EAAO3L,UAA6C,GAAnB2L,EAAO3L,UAAiC,UAAZ0L,GAA0C,GAAnBC,EAAO3L,UAE/F13E,QAAQiE,KAAM,mCAAqCo/E,EAAO3L,SAAW,gBAAkB0L,EAAU,uBAI7FlS,EAAO5C,WAAYG,EAAWoB,uBAA0B,CAE5D,IAAI50D,OAAkC/Z,IAAtBmiF,EAAO/U,WAA2B+U,EAAO/U,WAAYG,EAAWoB,4BAA0B3uE,EAErG+Z,IAEJwb,EAAUy6C,EAAO5C,WAAYG,EAAWoB,uBAAwB2H,cAAe/gD,EAASxb,IAM1F+1D,EAAgBoS,GAAY3sD,MAc9Bw5C,GAAWp4E,UAAU0rF,oBAAsB,SAAWrH,GAErD,IAAI/9E,EAAW+9E,EAAK/9E,SAChB2B,EAAWo8E,EAAKp8E,SAEhB0jF,OAAoDtiF,IAAhC/C,EAAS0Q,WAAW2yC,QACxCiiC,OAAgDviF,IAA9B/C,EAAS0Q,WAAWrI,MACtCk9E,OAAgDxiF,IAA/B/C,EAAS0Q,WAAWuyC,OACrCuiC,GAAqC,IAAvBzH,EAAKx7B,cACnBkjC,EAAkBhsF,OAAO4W,KAAMrQ,EAASolD,iBAAkB5rD,OAAS,EACnEksF,EAAkBD,QAAuD1iF,IAApC/C,EAASolD,gBAAgBnC,OAElE,GAAK86B,EAAKrY,SAAW,CAEpB,IAAI8b,EAAW,kBAAoB7/E,EAASkO,KAExC81E,EAAiBnnF,KAAK8/E,MAAM5iF,IAAK8lF,GAE9BmE,IAENA,EAAiB,IAAI,iBACrB,WAASjsF,UAAU4kB,KAAK1kB,KAAM+rF,EAAgBhkF,GAC9CgkF,EAAet9E,MAAMiW,KAAM3c,EAAS0G,OACpCs9E,EAAeniF,IAAM7B,EAAS6B,IAC9BmiF,EAAeC,iBAAkB,EAEjCpnF,KAAK8/E,MAAM7iE,IAAK+lE,EAAUmE,IAI3BhkF,EAAWgkF,OAEL,GAAK5H,EAAKtY,OAAS,CAErB+b,EAAW,qBAAuB7/E,EAASkO,KAA/C,IAEIg2E,EAAernF,KAAK8/E,MAAM5iF,IAAK8lF,GAE5BqE,IAENA,EAAe,IAAI,oBACnB,WAASnsF,UAAU4kB,KAAK1kB,KAAMisF,EAAclkF,GAC5CkkF,EAAax9E,MAAMiW,KAAM3c,EAAS0G,OAElC7J,KAAK8/E,MAAM7iE,IAAK+lE,EAAUqE,IAI3BlkF,EAAWkkF,EAKZ,GAAKR,GAAqBC,GAAmBC,GAAkBC,GAAeC,EAAkB,CAE3FjE,EAAW,kBAAoB7/E,EAASkO,KAAO,IAE9ClO,EAASmzE,mCAAmC0M,GAAY,wBACxDgE,IAAchE,GAAY,aAC1B6D,IAAoB7D,GAAY,oBAChC8D,IAAkB9D,GAAY,kBAC9B+D,IAAiB/D,GAAY,iBAC7BiE,IAAkBjE,GAAY,kBAC9BkE,IAAkBlE,GAAY,kBAEnC,IAAIsE,EAAiBtnF,KAAK8/E,MAAM5iF,IAAK8lF,GAE9BsE,IAENA,EAAiBnkF,EAASJ,QAErBikF,IAAcM,EAAe/vD,UAAW,GACxCsvD,IAAoBS,EAAeC,gBAAiB,GACpDT,IAAkBQ,EAAel9E,cAAe,GAChD28E,IAAiBO,EAAeE,aAAc,GAC9CP,IAAkBK,EAAeG,cAAe,GAChDP,IAAkBI,EAAe3F,cAAe,GAErD3hF,KAAK8/E,MAAM7iE,IAAK+lE,EAAUsE,IAI3BnkF,EAAWmkF,EAMPnkF,EAASo1E,YAAqCh0E,IAA5B/C,EAAS0Q,WAAWw1E,UAAgDnjF,IAA3B/C,EAAS0Q,WAAWyb,IAEnFnsB,EAASkR,aAAc,MAAO,IAAI,kBAAiBlR,EAAS0Q,WAAWyb,GAAGprB,MAAO,IAK7EY,EAAS41E,cAAiB8N,IAE9B1jF,EAAS41E,YAAYxzE,GAAMpC,EAAS41E,YAAYxzE,GAI5CpC,EAASmyE,uBAA0BuR,IAEvC1jF,EAASmyE,qBAAqB/vE,GAAMpC,EAASmyE,qBAAqB/vE,GAInEg6E,EAAKp8E,SAAWA,GASjBmwE,GAAWp4E,UAAUqoF,aAAe,SAAWoE,GAE9C,IAKIC,EAJA/Y,EAAO7uE,KAAK6uE,KACZ8C,EAAa3xE,KAAK2xE,WAClB2C,EAAczF,EAAKnlE,UAAWi+E,GAG9BtT,EAAiB,GACjBwT,EAAqBvT,EAAY3C,YAAc,GAE/C6C,EAAU,GAEd,GAAKqT,EAAoB/V,EAAWc,uCAA0C,CAE7E,IAAIkV,EAAcnW,EAAYG,EAAWc,uCACzCgV,EAAeE,EAAY3T,kBAC3BK,EAAQl5E,KAAMwsF,EAAY1T,aAAcC,EAAgBC,EAf5Ct0E,YAiBN,GAAK6nF,EAAoB/V,EAAWY,qBAAwB,CAElE,IAAIqV,EAAepW,EAAYG,EAAWY,qBAC1CkV,EAAeG,EAAa5T,kBAC5BK,EAAQl5E,KAAMysF,EAAa3T,aAAcC,EAAgBC,EArB7Ct0E,WAuBN,CAKN4nF,EAAe,uBAEf,IAAInT,EAAoBH,EAAYI,sBAAwB,GAK5D,GAHAL,EAAexqE,MAAQ,IAAI,QAAO,EAAK,EAAK,GAC5CwqE,EAAenjC,QAAU,EAEpBrI,MAAM8rC,QAASF,EAAkBG,iBAAoB,CAEzD,IAAIryE,EAAQkyE,EAAkBG,gBAE9BP,EAAexqE,MAAMq8C,UAAW3jD,GAChC8xE,EAAenjC,QAAU3uC,EAAO,QAIWgC,IAAvCkwE,EAAkBI,kBAEtBL,EAAQl5E,KA9CG0E,KA8CU80E,cAAeT,EAAgB,MAAOI,EAAkBI,mBAI9ER,EAAerqE,eAAiDzF,IAArCkwE,EAAkBuT,eAA+BvT,EAAkBuT,eAAiB,EAC/G3T,EAAepqE,eAAkD1F,IAAtCkwE,EAAkBwT,gBAAgCxT,EAAkBwT,gBAAkB,OAE7D1jF,IAA/CkwE,EAAkByT,2BAEtB1T,EAAQl5E,KAvDG0E,KAuDU80E,cAAeT,EAAgB,eAAgBI,EAAkByT,2BACtF1T,EAAQl5E,KAxDG0E,KAwDU80E,cAAeT,EAAgB,eAAgBI,EAAkByT,6BAMvD,IAA5B5T,EAAY6T,cAEhB9T,EAAevqE,KAAO,cAIvB,IAAIs+E,EAAY9T,EAAY8T,WAAaxJ,GA2DzC,GAzDKwJ,IAAcxJ,IAElBvK,EAAehqE,aAAc,EAG7BgqE,EAAegU,YAAa,IAI5BhU,EAAehqE,aAAc,EAExB+9E,IAAcxJ,KAElBvK,EAAe9iC,eAAwChtC,IAA5B+vE,EAAYgU,YAA4BhU,EAAYgU,YAAc,UAM5D/jF,IAA9B+vE,EAAYiU,eAA+BX,IAAiB,sBAEhEpT,EAAQl5E,KA3FI0E,KA2FS80E,cAAeT,EAAgB,YAAaC,EAAYiU,gBAE7ElU,EAAe0E,YAAc,IAAI,UAAS,EAAG,QAEJx0E,IAApC+vE,EAAYiU,cAAc/pE,OAE9B61D,EAAe0E,YAAYx4E,IAAK+zE,EAAYiU,cAAc/pE,MAAO81D,EAAYiU,cAAc/pE,aAMvDja,IAAjC+vE,EAAYkU,kBAAkCZ,IAAiB,sBAEnEpT,EAAQl5E,KAzGI0E,KAyGS80E,cAAeT,EAAgB,QAASC,EAAYkU,wBAE1BjkF,IAA1C+vE,EAAYkU,iBAAiBC,WAEjCpU,EAAemE,eAAiBlE,EAAYkU,iBAAiBC,gBAM3BlkF,IAA/B+vE,EAAYoU,gBAAgCd,IAAiB,sBAEjEvT,EAAe0D,UAAW,IAAI,SAAQ7xB,UAAWouB,EAAYoU,sBAIzBnkF,IAAhC+vE,EAAYqU,iBAAiCf,IAAiB,qBAElEpT,EAAQl5E,KA3HI0E,KA2HS80E,cAAeT,EAAgB,cAAeC,EAAYqU,kBAI3Ed,EAAoB/V,EAAWU,yBAA4B,CAE/D,IAAIoW,EAAqBjX,EAAYG,EAAWU,yBAChDoV,EAAegB,EAAmBzU,kBAClCK,EAAQl5E,KAAMstF,EAAmBxU,aAAcC,EAAgB,CAAE1C,WAAYkW,GAnIjE7nF,OAuIb,OAAOioB,QAAQshB,IAAKirC,GAAUn+C,MAAM,WAEnC,IAAIlzB,EAsBJ,OAlBCA,EAFIykF,IAAiBvR,GAEV1E,EAAYG,EAAWc,uCAAwCwF,eAAgB/D,GAI/E,IAAIuT,EAAcvT,GAIzBC,EAAYz3E,OAAOsG,EAAStG,KAAOy3E,EAAYz3E,MAG/CsG,EAAS6B,MAAM7B,EAAS6B,IAAI6jF,SAAW,gBACvC1lF,EAASu1E,cAAcv1E,EAASu1E,YAAYmQ,SAAW,gBAE5D1J,GAAwBh8E,EAAUmxE,GAE7BA,EAAY3C,YAAaoN,GAAgCpN,EAAYxuE,EAAUmxE,GAE7EnxE,MA0QTmwE,GAAWp4E,UAAU4tF,eAAiB,SAAWC,GAEhD,IAAIxU,EAASv0E,KACT2xE,EAAa3xE,KAAK2xE,WAClBmO,EAAQ9/E,KAAK+/E,eAEjB,SAASiJ,EAAsBpP,GAE9B,OAAOjI,EAAYG,EAAWgB,4BAC5B6G,gBAAiBC,EAAWrF,GAC5Bl+C,MAAM,SAAW70B,GAEjB,OAAO2+E,GAAwB3+E,EAAUo4E,EAAWrF,MAQvD,IAFA,IAnqC4B6L,EAExB6I,EAiqCAzU,EAAU,GAEJ15E,EAAI,EAAG6qD,EAAKojC,EAAW/tF,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAEvD,IAaKouF,EAbDtP,EAAYmP,EAAYjuF,GACxBkoF,GAtqCDiG,aAFwB7I,EAwqCQxG,GAtqCFjI,YAAcyO,EAAazO,WAAYG,EAAWgB,6BAKrE,SAAWmW,EAAenP,WACrC,IAAMmP,EAAerlF,QACrB,IAAMg8E,GAAqBqJ,EAAe/2E,YAI/BkuE,EAAax8E,QAAU,IAAMg8E,GAAqBQ,EAAaluE,YAAe,IAAMkuE,EAAa5iF,MA8pC3G2rF,EAASrJ,EAAOkD,GAEpB,GAAKmG,EAGJ3U,EAAQl5E,KAAM6tF,EAAOC,cASpBF,EAHItP,EAAUjI,YAAciI,EAAUjI,WAAYG,EAAWgB,4BAG3CkW,EAAsBpP,GAKtBuG,GAAwB,IAAI,iBAAkBvG,EAAWrF,GAK5EuL,EAAOkD,GAAa,CAAEpJ,UAAWA,EAAWwP,QAASF,GAErD1U,EAAQl5E,KAAM4tF,GAMhB,OAAOjhE,QAAQshB,IAAKirC,IASrBlB,GAAWp4E,UAAUioF,SAAW,SAAWkG,GAU1C,IARA,IAr4C+BvJ,EAq4C3BvL,EAASv0E,KAGTw/E,EAFOx/E,KAAK6uE,KAEGwT,OAAQgH,GACvBN,EAAavJ,EAAQuJ,WAErBvU,EAAU,GAEJ15E,EAAI,EAAG6qD,EAAKojC,EAAW/tF,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAEvD,IAAIqI,OAAwCoB,IAA7BwkF,EAAYjuF,GAAIqI,eA74CIoB,KAFLu7E,EAg5CJ9/E,KAAK8/E,OA94CF,kBAE7BA,EAAyB,gBAAI,IAAI,uBAAsB,CACtDj2E,MAAO,SACPkuE,SAAU,EACV/tE,UAAW,EACXC,UAAW,EACXI,aAAa,EACbC,WAAW,EACXR,KAAM,eAKDg2E,EAAyB,iBAi4C5B9/E,KAAK26E,cAAe,WAAYoO,EAAYjuF,GAAIqI,UAEnDqxE,EAAQl5E,KAAM6H,GAMf,OAFAqxE,EAAQl5E,KAAMi5E,EAAOuU,eAAgBC,IAE9B9gE,QAAQshB,IAAKirC,GAAUn+C,MAAM,SAAWizD,GAO9C,IALA,IAAI5/E,EAAY4/E,EAAQjrF,MAAO,EAAGirF,EAAQtuF,OAAS,GAC/C2G,EAAa2nF,EAASA,EAAQtuF,OAAS,GAEvCqnF,EAAS,GAEHvnF,EAAI,EAAG6qD,EAAKhkD,EAAW3G,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAEvD,IAKIykF,EALA/9E,EAAWG,EAAY7G,GACvB8+E,EAAYmP,EAAYjuF,GAMxBqI,EAAWuG,EAAW5O,GAE1B,GAAK8+E,EAAUp8E,OAASg/E,IACvB5C,EAAUp8E,OAASg/E,IACnB5C,EAAUp8E,OAASg/E,SACAj4E,IAAnBq1E,EAAUp8E,MAOkB,KAJ5B+hF,GAAiC,IAA1BC,EAAQz7B,cACZ,IAAI,cAAaviD,EAAU2B,GAC3B,IAAI,OAAM3B,EAAU2B,IAEb4gD,eAA4Bw7B,EAAK/9E,SAAS0Q,WAAWq3E,WAAW7hC,YAIzE63B,EAAKiK,uBAID5P,EAAUp8E,OAASg/E,GAEvB+C,EAAK/9E,SAAWyoD,GAAqBs1B,EAAK/9E,SAAU,yBAEzCo4E,EAAUp8E,OAASg/E,KAE9B+C,EAAK/9E,SAAWyoD,GAAqBs1B,EAAK/9E,SAAU,6BAI/C,GAAKo4E,EAAUp8E,OAASg/E,GAE9B+C,EAAO,IAAI,eAAc/9E,EAAU2B,QAE7B,GAAKy2E,EAAUp8E,OAASg/E,GAE9B+C,EAAO,IAAI,OAAM/9E,EAAU2B,QAErB,GAAKy2E,EAAUp8E,OAASg/E,GAE9B+C,EAAO,IAAI,IAAU/9E,EAAU2B,OAEzB,IAAKy2E,EAAUp8E,OAASg/E,GAM9B,MAAM,IAAI5rC,MAAO,iDAAmDgpC,EAAUp8E,MAJ9E+hF,EAAO,IAAI,SAAQ/9E,EAAU2B,GAQzBlI,OAAO4W,KAAM0tE,EAAK/9E,SAASolD,iBAAkB5rD,OAAS,GAE1DskF,GAAoBC,EAAMC,GAI3BD,EAAK1iF,KAAO2iF,EAAQ3iF,MAAU,QAAUwsF,EAEnC1nF,EAAW3G,OAAS,IAAIukF,EAAK1iF,MAAQ,IAAM/B,GAEhDqkF,GAAwBI,EAAMC,GAE9BjL,EAAOqS,oBAAqBrH,GAE5B8C,EAAO/mF,KAAMikF,GAId,GAAuB,IAAlB8C,EAAOrnF,OAEX,OAAOqnF,EAAQ,GAIhB,IAAI9/B,EAAQ,IAAI,QAEhB,IAAUznD,EAAI,EAAG6qD,EAAK08B,EAAOrnF,OAAQF,EAAI6qD,EAAI7qD,IAE5CynD,EAAMtlC,IAAKolE,EAAQvnF,IAIpB,OAAOynD,MAWT+wB,GAAWp4E,UAAUyoF,WAAa,SAAW8F,GAE5C,IAAInsE,EACAosE,EAAY1pF,KAAK6uE,KAAKmT,QAASyH,GAC/BjhF,EAASkhF,EAAWA,EAAUnrF,MAElC,GAAOiK,EAqBP,MAdwB,gBAAnBkhF,EAAUnrF,KAEd+e,EAAS,IAAI,oBAAmB,YAAUqsE,SAAUnhF,EAAOohF,MAAQphF,EAAOqhF,aAAe,EAAGrhF,EAAOshF,OAAS,EAAGthF,EAAOuhF,MAAQ,KAEhG,iBAAnBL,EAAUnrF,OAErB+e,EAAS,IAAI,qBAAoB9U,EAAOwhF,MAAS,EAAGxhF,EAAOwhF,KAAO,EAAGxhF,EAAOyhF,KAAO,EAAGzhF,EAAOyhF,MAAS,EAAGzhF,EAAOshF,MAAOthF,EAAOuhF,OAI1HL,EAAU7sF,OAAOygB,EAAOzgB,KAAO6sF,EAAU7sF,MAE9CsiF,GAAwB7hE,EAAQosE,GAEzBzhE,QAAQC,QAAS5K,GAnBvBja,QAAQiE,KAAM,iDA4BhBgsE,GAAWp4E,UAAUuoF,SAAW,SAAWjB,GAE1C,IAAI0H,EAAUlqF,KAAK6uE,KAAKsT,MAAOK,GAE3B2H,EAAY,CAAEzH,OAAQwH,EAAQxH,QAElC,YAAqCn+E,IAAhC2lF,EAAQE,oBAELniE,QAAQC,QAASiiE,GAIlBnqF,KAAK26E,cAAe,WAAYuP,EAAQE,qBAAsB/zD,MAAM,SAAWkqD,GAIrF,OAFA4J,EAAUC,oBAAsB7J,EAEzB4J,MAWT7W,GAAWp4E,UAAUwoF,cAAgB,SAAW2G,GAY/C,IAVA,IAEIC,EAFOtqF,KAAK6uE,KAEQjrB,WAAYymC,GAEhCE,EAAe,GACfC,EAAwB,GACxBC,EAAyB,GACzBC,EAAkB,GAClBC,EAAiB,GAEX7vF,EAAI,EAAG6qD,EAAK2kC,EAAaM,SAAS5vF,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAElE,IAAI+vF,EAAUP,EAAaM,SAAU9vF,GACjCyrF,EAAU+D,EAAa9D,SAAUqE,EAAQtE,SACzC9mC,EAASorC,EAAQprC,OACjB5iD,OAAuB0H,IAAhBk7C,EAAOh8C,KAAqBg8C,EAAOh8C,KAAOg8C,EAAO/vC,GACxD8I,OAAoCjU,IAA5B+lF,EAAaQ,WAA2BR,EAAaQ,WAAYvE,EAAQ/tE,OAAU+tE,EAAQ/tE,MACnG0lB,OAAqC35B,IAA5B+lF,EAAaQ,WAA2BR,EAAaQ,WAAYvE,EAAQroD,QAAWqoD,EAAQroD,OAEzGqsD,EAAajvF,KAAM0E,KAAK26E,cAAe,OAAQ99E,IAC/C2tF,EAAsBlvF,KAAM0E,KAAK26E,cAAe,WAAYniE,IAC5DiyE,EAAuBnvF,KAAM0E,KAAK26E,cAAe,WAAYz8C,IAC7DwsD,EAAgBpvF,KAAMirF,GACtBoE,EAAervF,KAAMmkD,GAItB,OAAOx3B,QAAQshB,IAAK,CAEnBthB,QAAQshB,IAAKghD,GACbtiE,QAAQshB,IAAKihD,GACbviE,QAAQshB,IAAKkhD,GACbxiE,QAAQshB,IAAKmhD,GACbziE,QAAQshB,IAAKohD,KAEVt0D,MAAM,SAAWtB,GAUpB,IARA,IAAI65B,EAAQ75B,EAAc,GACtBg2D,EAAiBh2D,EAAc,GAC/Bi2D,EAAkBj2D,EAAc,GAChCyxD,EAAWzxD,EAAc,GACzB2rD,EAAU3rD,EAAc,GAExBk2D,EAAS,GAEHnwF,EAAI,EAAG6qD,EAAKiJ,EAAM5zD,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAElD,IAAI2I,EAAOmrD,EAAO9zD,GACdowF,EAAgBH,EAAgBjwF,GAChCqwF,EAAiBH,EAAiBlwF,GAClCyrF,EAAUC,EAAU1rF,GACpB2kD,EAASihC,EAAS5lF,GAEtB,QAAcyJ,IAATd,EAAL,CAKA,IAAI2nF,EAEJ,OALA3nF,EAAK4c,eACL5c,EAAKic,kBAAmB,EAIf4+D,GAAiB7+B,EAAOvnC,OAEhC,KAAKomE,GAAgBE,QAEpB4M,EAAqB,IACrB,MAED,KAAK9M,GAAgBz+D,SAEpBurE,EAAqB,IACrB,MAED,KAAK9M,GAAgBlqE,SACrB,KAAKkqE,GAAgB9/D,MACrB,QAEC4sE,EAAqB,IAKvB,IAAIC,EAAa5nF,EAAK5G,KAAO4G,EAAK5G,KAAO4G,EAAK4N,KAE1Ci6E,OAA0C/mF,IAA1BgiF,EAAQ+E,cAA8B7M,GAAe8H,EAAQ+E,eAAkB,oBAE/F5L,EAAc,GAEbpB,GAAiB7+B,EAAOvnC,QAAWomE,GAAgBE,QAGvD/6E,EAAK2/C,UAAU,SAAWrlD,IAEF,IAAlBA,EAAOipE,QAAmBjpE,EAAO0hF,uBAErCC,EAAYpkF,KAAMyC,EAAOlB,KAAOkB,EAAOlB,KAAOkB,EAAOsT,SAQvDquE,EAAYpkF,KAAM+vF,GAInB,IAAIE,EAAcJ,EAAe5oF,MAEjC,GAAK4oF,EAAezjC,WAAa,CAEhC,IAAIlpC,EAEJ,GAAK+sE,EAAYx3E,cAAgB2oE,UAEhCl+D,EAAQ,EAAI,SAEN,GAAK+sE,EAAYx3E,cAAgB2lB,WAEvClb,EAAQ,EAAI,SAEN,GAAK+sE,EAAYx3E,aAAe8oE,WAEtCr+D,EAAQ,EAAI,UAEN,IAAK+sE,EAAYx3E,cAAgBgpB,YAMvC,MAAM,IAAI6T,MAAO,iEAJjBpyB,EAAQ,EAAI,MAUb,IAFA,IAAIgtE,EAAS,IAAIrxD,aAAcoxD,EAAYvwF,QAEjCgB,EAAI,EAAG4pD,EAAK2lC,EAAYvwF,OAAQgB,EAAI4pD,EAAI5pD,IAEjDwvF,EAAQxvF,GAAMuvF,EAAavvF,GAAMwiB,EAIlC+sE,EAAcC,EAIf,IAAUxvF,EAAI,EAAG4pD,EAAK85B,EAAY1kF,OAAQgB,EAAI4pD,EAAI5pD,IAAO,CAExD,IAAIyvF,EAAQ,IAAIL,EACf1L,EAAa1jF,GAAM,IAAMsiF,GAAiB7+B,EAAOvnC,MACjDgzE,EAAc3oF,MACdgpF,EACAD,GAI8B,gBAA1B/E,EAAQ+E,gBAEZG,EAAMC,kBAAoB,SAAkD7vF,GAM3E,OAAO,IAAIy9E,GAA4Bt5E,KAAK2rF,MAAO3rF,KAAK8E,OAAQ9E,KAAK4rF,eAAiB,EAAG/vF,IAK1F4vF,EAAMC,kBAAkBG,2CAA4C,GAIrEZ,EAAO3vF,KAAMmwF,KAMf,IAAI5uF,EAAOytF,EAAaztF,KAAOytF,EAAaztF,KAAO,aAAewtF,EAElE,OAAO,IAAI,IAAextF,OAAM0H,EAAW0mF,OAW7C3X,GAAWp4E,UAAUgoF,SAAW,SAAWN,GAE1C,IAWKpO,EAXD3F,EAAO7uE,KAAK6uE,KACZ8C,EAAa3xE,KAAK2xE,WAClB4C,EAASv0E,KAETsiF,EAAiBzT,EAAKyT,eACtBC,EAAW1T,EAAK0T,SAEhBO,EAAUjU,EAAKjgB,MAAOg0B,GAE1B,OAEKpO,EAAU,QAEQjwE,IAAjBu+E,EAAQvD,MAEZ/K,EAAQl5E,KAAMi5E,EAAOoG,cAAe,OAAQmI,EAAQvD,MAAOlpD,MAAM,SAAWkpD,GAE3E,IAAI97E,EAEJ,GAAK6+E,EAAgBQ,EAAQvD,MAAS,EAAI,CAEzC,IAAIuM,EAAcvJ,EAAUO,EAAQvD,SAEpC97E,EAAO87E,EAAKx8E,SACPlG,MAAQ,aAAeivF,OAI5BroF,EAAO87E,EAqBR,YAhByBh7E,IAApBu+E,EAAQtE,SAEZ/6E,EAAK2/C,UAAU,SAAWrmD,GAEzB,GAAOA,EAAEiqE,OAET,IAAM,IAAIlsE,EAAI,EAAG6qD,EAAKm9B,EAAQtE,QAAQxjF,OAAQF,EAAI6qD,EAAI7qD,IAErDiC,EAAE0iF,sBAAuB3kF,GAAMgoF,EAAQtE,QAAS1jF,MAQ5C2I,WAMec,IAAnBu+E,EAAQxlE,QAEZk3D,EAAQl5E,KAAMi5E,EAAOoG,cAAe,SAAUmI,EAAQxlE,SAIlDwlE,EAAQnR,YACTmR,EAAQnR,WAAYG,EAAWQ,2BACgC/tE,IAA/Du+E,EAAQnR,WAAYG,EAAWQ,qBAAsBp/B,OAExDshC,EAAQl5E,KAAMi5E,EAAOoG,cAAe,QAASmI,EAAQnR,WAAYG,EAAWQ,qBAAsBp/B,QAI5FjrB,QAAQshB,IAAKirC,IAEfn+C,MAAM,SAAWp1B,GAEtB,IAAIwC,EAqBJ,IAhBCA,GAFuB,IAAnBq/E,EAAQH,OAEL,IAAI,OAEA1hF,EAAQjG,OAAS,EAErB,IAAI,QAEmB,IAAnBiG,EAAQjG,OAEZiG,EAAS,GAIT,IAAI,cAIEA,EAAS,GAEtB,IAAM,IAAInG,EAAI,EAAG6qD,EAAK1kD,EAAQjG,OAAQF,EAAI6qD,EAAI7qD,IAE7C2I,EAAKwZ,IAAKhc,EAASnG,IAiBrB,GAXKgoF,EAAQjmF,OAEZ4G,EAAKiO,SAAS7U,KAAOimF,EAAQjmF,KAC7B4G,EAAK5G,KAAO,IAAgBkvF,iBAAkBjJ,EAAQjmF,OAIvDsiF,GAAwB17E,EAAMq/E,GAEzBA,EAAQnR,YAAaoN,GAAgCpN,EAAYluE,EAAMq/E,QAEpDv+E,IAAnBu+E,EAAQxjE,OAAuB,CAEnC,IAAIA,EAAS,IAAI,UACjBA,EAAO4mC,UAAW48B,EAAQxjE,QAC1B7b,EAAKgf,aAAcnD,aAIU/a,IAAxBu+E,EAAQvE,aAEZ96E,EAAK2Q,SAAS8xC,UAAW48B,EAAQvE,kBAIRh6E,IAArBu+E,EAAQjjE,UAEZpc,EAAK6d,WAAW4kC,UAAW48B,EAAQjjE,eAIbtb,IAAlBu+E,EAAQtkE,OAEZ/a,EAAK+a,MAAM0nC,UAAW48B,EAAQtkE,OAMhC,OAAO/a,MAWT6vE,GAAWp4E,UAAU+nF,UAAY,WAIhC,SAAS+I,EAAmBC,EAAQC,EAAcrd,EAAM0F,GAEvD,IAAIuO,EAAUjU,EAAKjgB,MAAOq9B,GAE1B,OAAO1X,EAAOoG,cAAe,OAAQsR,GAAS51D,MAAM,SAAW5yB,GAE9D,YAAsBc,IAAjBu+E,EAAQC,KAA4Bt/E,EAMlC8wE,EAAOoG,cAAe,OAAQmI,EAAQC,MAAO1sD,MAAM,SAAW0sD,GAMpE,IAFA,IAAIoJ,EAAgB,GAEVrxF,EAAI,EAAG6qD,GAJjBwkC,EAAYpH,GAIoBL,OAAO1nF,OAAQF,EAAI6qD,EAAI7qD,IAEtDqxF,EAAc7wF,KAAMi5E,EAAOoG,cAAe,OAAQwP,EAAUzH,OAAQ5nF,KAIrE,OAAOmtB,QAAQshB,IAAK4iD,MAEjB91D,MAAM,SAAW+1D,GAuCpB,OArCA3oF,EAAK2/C,UAAU,SAAWm8B,GAEzB,GAAOA,EAAKvY,OAAZ,CAKA,IAHA,IAAI5iB,EAAQ,GACRioC,EAAe,GAETrwF,EAAI,EAAG4pD,EAAKwmC,EAAWpxF,OAAQgB,EAAI4pD,EAAI5pD,IAAO,CAEvD,IAAIswF,EAAYF,EAAYpwF,GAE5B,GAAKswF,EAAY,CAEhBloC,EAAM9oD,KAAMgxF,GAEZ,IAAIl9C,EAAM,IAAI,eAEyB7qC,IAAlC4lF,EAAUC,qBAEdh7C,EAAI8W,UAAWikC,EAAUC,oBAAoB7nF,MAAW,GAAJvG,GAIrDqwF,EAAa/wF,KAAM8zC,QAInB/rC,QAAQiE,KAAM,mDAAoD6iF,EAAUzH,OAAQ1mF,IAMtFujF,EAAK1hF,KAAM,IAAI,IAAUumD,EAAOioC,GAAgB9M,EAAKgN,iBAI/C9oF,KAvDR,IAAI0mF,KA2DD9zD,MAAM,SAAW5yB,GAIpByoF,EAAajvE,IAAKxZ,GAElB,IAAI+wE,EAAU,GAEd,GAAKsO,EAAQp9D,SAIZ,IAFA,IAAIA,EAAWo9D,EAAQp9D,SAEb5qB,EAAI,EAAG6qD,EAAKjgC,EAAS1qB,OAAQF,EAAI6qD,EAAI7qD,IAAO,CAErD,IAAIqtE,EAAQziD,EAAU5qB,GACtB05E,EAAQl5E,KAAM0wF,EAAmB7jB,EAAO1kE,EAAMorE,EAAM0F,IAMtD,OAAOtsD,QAAQshB,IAAKirC,MAMtB,OAAO,SAAoBgY,GAE1B,IAAI3d,EAAO7uE,KAAK6uE,KACZ8C,EAAa3xE,KAAK2xE,WAClB8a,EAAWzsF,KAAK6uE,KAAKkT,OAAQyK,GAK7BppF,EAAQ,IAAI,QACXqpF,EAAS5vF,OAAOuG,EAAMvG,KAAO4vF,EAAS5vF,MAE3CsiF,GAAwB/7E,EAAOqpF,GAE1BA,EAAS9a,YAAaoN,GAAgCpN,EAAYvuE,EAAOqpF,GAM9E,IAJA,IAAIC,EAAUD,EAAS79B,OAAS,GAE5B4lB,EAAU,GAEJ15E,EAAI,EAAG6qD,EAAK+mC,EAAQ1xF,OAAQF,EAAI6qD,EAAI7qD,IAE7C05E,EAAQl5E,KAAM0wF,EAAmBU,EAAS5xF,GAAKsI,EAAOyrE,EAjB1C7uE,OAqBb,OAAOioB,QAAQshB,IAAKirC,GAAUn+C,MAAM,WAEnC,OAAOjzB,MAhIuB,GAwI1B+sE,EApsGS,I,6BCtEjB,qFASIwc,EAAc,SAAWvc,GAE5B,IAAOh1E,KAAM4E,KAAMowE,GAEnBpwE,KAAK4sF,YAAc,GACnB5sF,KAAK6sF,cAAgB,GACrB7sF,KAAK8sF,cAAgB,KACrB9sF,KAAK+sF,eAAiB,KAEtB/sF,KAAKgtF,YAAc,EACnBhtF,KAAKitF,WAAa,GAClBjtF,KAAKktF,iBAAmB,EACxBltF,KAAKmtF,gBAAkB,GAEvBntF,KAAKotF,oBAAsB,CAC1Bh5E,SAAU,WACVqwC,OAAQ,SACR56C,MAAO,QACP8jB,GAAI,aAEL3tB,KAAKqtF,sBAAwB,CAC5Bj5E,SAAU,eACVqwC,OAAQ,eACR56C,MAAO,eACP8jB,GAAI,iBAKNg/D,EAAYzxF,UAAYD,OAAO4iB,OAAQ5iB,OAAO0C,OAAQ,IAAOzC,WAAa,CAEzE6Y,YAAa44E,EAEbW,eAAgB,SAAWp1E,GAI1B,OAFAlY,KAAK4sF,YAAc10E,EAEZlY,MAIRutF,iBAAkB,SAAWC,GAI5B,OAFAxtF,KAAK6sF,cAAgBW,EAEdxtF,MAIRytF,eAAgB,SAAWT,GAI1B,OAFAhtF,KAAKgtF,YAAcA,EAEZhtF,MAKR0tF,aAAc,WAEbrqF,QAAQiE,KAAM,oEAKfqmF,YAAa,WAEZtqF,QAAQiE,KAAM,mEAKfsmF,sBAAuB,WAEtBvqF,QAAQiE,KAAM,6EAIfmpE,KAAM,SAAWrsC,EAAKssC,EAAQC,EAAYC,GAEzC,IAAIO,EAAS,IAAI,IAAYnxE,KAAKowE,SAElCe,EAAOC,QAASpxE,KAAKkY,MACrBi5D,EAAOE,gBAAiB,eAEE,oBAArBrxE,KAAKsxE,aAETH,EAAOI,oBAAoB,GAI5BJ,EAAOV,KAAMrsC,EAAO0lB,IAEnB,IAAI+jC,EAAa,CAChBC,aAAc9tF,KAAKotF,oBACnBW,eAAgB/tF,KAAKqtF,sBACrBW,cAAc,GAGfhuF,KAAKiuF,eAAgBnkC,EAAQ+jC,GAC3Bx3D,KAAMq6C,GACN3B,MAAO6B,IAEPD,EAAYC,IAKhBgK,gBAAiB,SAAW9wB,EAAQvvC,EAAUuzE,EAAcC,GAE3D,IAAIF,EAAa,CAChBC,aAAcA,GAAgB9tF,KAAKotF,oBACnCW,eAAgBA,GAAkB/tF,KAAKqtF,sBACvCW,eAAiBF,GAGlB9tF,KAAKiuF,eAAgBnkC,EAAQ+jC,GAAax3D,KAAM9b,IAIjD0zE,eAAgB,SAAWnkC,EAAQ+jC,GAKlC,IAAM,IAAI/5E,KAAa+5E,EAAWE,eAAiB,CAElD,IAAIxvF,EAAOsvF,EAAWE,eAAgBj6E,QAENvP,IAA3BhG,EAAKgqD,oBAETslC,EAAWE,eAAgBj6E,GAAcvV,EAAK1B,MAQhD,IA+BIqxF,EA/BAC,EAAUrjD,KAAKC,UAAW8iD,GAI9B,GAAKlB,EAAYyB,UAAUrzD,IAAK+uB,GAAW,CAE1C,IAAIukC,EAAa1B,EAAYyB,UAAUlxF,IAAK4sD,GAE5C,GAAKukC,EAAWzwF,MAAQuwF,EAEvB,OAAOE,EAAWjF,QAEZ,GAA2B,IAAtBt/B,EAAOisB,WAMlB,MAAM,IAAInlC,MAET,iHAYH,IAAI09C,EAAStuF,KAAKktF,mBACdqB,EAAWzkC,EAAOisB,WAIlByY,EAAkBxuF,KAAKyuF,WAAYH,EAAQC,GAC7Cl4D,KAAQq4D,IAERR,EAASQ,EAEF,IAAIzmE,QAAS,CAAEC,EAASC,KAE9B+lE,EAAOl4D,WAAYs4D,GAAW,CAAEpmE,UAASC,UAEzC+lE,EAAOS,YAAa,CAAEpwF,KAAM,SAAUmR,GAAI4+E,EAAQT,aAAY/jC,UAAU,CAAEA,QAO3EzzB,KAAQv0B,GAAa9B,KAAK4uF,gBAAiB9sF,EAAQN,WAwBrD,OArBAgtF,EACEK,QAAS,KAEJX,GAAUI,GAEdtuF,KAAK8uF,aAAcZ,EAAQI,KAS9B3B,EAAYyB,UAAU7tF,IAAKupD,EAAQ,CAElClsD,IAAKuwF,EACL/E,QAASoF,IAIHA,GAIRI,gBAAiB,SAAWG,GAE3B,IAAIvtF,EAAW,IAAI,iBAEdutF,EAAa3sF,OAEjBZ,EAASgB,SAAU,IAAI,kBAAiBusF,EAAa3sF,MAAMG,MAAO,IAInE,IAAM,IAAIzH,EAAI,EAAGA,EAAIi0F,EAAa78E,WAAWlX,OAAQF,IAAO,CAE3D,IAAIgZ,EAAYi7E,EAAa78E,WAAYpX,GACrC+B,EAAOiX,EAAUjX,KACjB0F,EAAQuR,EAAUvR,MAClBgQ,EAAWuB,EAAUvB,SAEzB/Q,EAASkR,aAAc7V,EAAM,IAAI,kBAAiB0F,EAAOgQ,IAI1D,OAAO/Q,GAIRwtF,aAAc,SAAW5qD,EAAK6qD,GAE7B,IAAI9d,EAAS,IAAI,IAAYnxE,KAAKowE,SAIlC,OAHAe,EAAOC,QAASpxE,KAAK4sF,aACrBzb,EAAOE,gBAAiB4d,GAEjB,IAAIhnE,QAAS,CAAEC,EAASC,KAE9BgpD,EAAOV,KAAMrsC,EAAKlc,OAAS3jB,EAAW4jB,MAMxCiuD,QAAS,WAIR,OAFAp2E,KAAKkvF,eAEElvF,MAIRkvF,aAAc,WAEb,GAAKlvF,KAAK+sF,eAAiB,OAAO/sF,KAAK+sF,eAEvC,IAAIoC,EAA+B,iBAAhBC,aAAwD,OAA5BpvF,KAAK6sF,cAActuF,KAC9D8wF,EAAmB,GAsCvB,OApCKF,EAEJE,EAAiB/zF,KAAM0E,KAAKgvF,aAAc,mBAAoB,UAI9DK,EAAiB/zF,KAAM0E,KAAKgvF,aAAc,wBAAyB,SACnEK,EAAiB/zF,KAAM0E,KAAKgvF,aAAc,qBAAsB,iBAIjEhvF,KAAK+sF,eAAiB9kE,QAAQshB,IAAK8lD,GACjCh5D,KAAQi5D,IAER,IAAIC,EAAYD,EAAW,GAEpBH,IAENnvF,KAAK6sF,cAAc2C,WAAaF,EAAW,IAI5C,IAAIG,EAAK9C,EAAY+C,YAAYC,WAE7B5hD,EAAO,CACV,sBACAwhD,EACA,GACA,eACAE,EAAGzhF,UAAWyhF,EAAGnmF,QAAS,KAAQ,EAAGmmF,EAAGG,YAAa,OACpD1qF,KAAM,MAERlF,KAAKmtF,gBAAkB7H,IAAIY,gBAAiB,IAAIF,KAAM,CAAEj4C,OAInD/tC,KAAK+sF,gBAIb0B,WAAY,SAAWH,EAAQC,GAE9B,OAAOvuF,KAAKkvF,eAAe74D,KAAM,KAI/B,IAyCG63D,EA3CCluF,KAAKitF,WAAWjyF,OAASgF,KAAKgtF,cAE9BkB,EAAS,IAAI2B,OAAQ7vF,KAAKmtF,kBAEvBn3D,WAAa,GACpBk4D,EAAO4B,WAAa,GACpB5B,EAAO6B,UAAY,EAEnB7B,EAAOS,YAAa,CAAEpwF,KAAM,OAAQsuF,cAAe7sF,KAAK6sF,gBAExDqB,EAAO8B,UAAY,SAAWxgF,GAE7B,IAAI1N,EAAU0N,EAAEhV,KAEhB,OAASsH,EAAQvD,MAEhB,IAAK,SACJ2vF,EAAOl4D,WAAYl0B,EAAQ4N,IAAKwY,QAASpmB,GACzC,MAED,IAAK,QACJosF,EAAOl4D,WAAYl0B,EAAQ4N,IAAKyY,OAAQrmB,GACxC,MAED,QACCuB,QAAQ2a,MAAO,2CAA6Clc,EAAQvD,KAAO,OAM9EyB,KAAKitF,WAAW3xF,KAAM4yF,IAItBluF,KAAKitF,WAAWh9E,MAAM,SAAWC,EAAGC,GAEnC,OAAOD,EAAE6/E,UAAY5/E,EAAE4/E,WAAc,EAAI,KAS3C,OAHI7B,EAASluF,KAAKitF,WAAYjtF,KAAKitF,WAAWjyF,OAAS,IAChD80F,WAAYxB,GAAWC,EAC9BL,EAAO6B,WAAaxB,EACbL,KAMTY,aAAc,SAAWZ,EAAQI,GAEhCJ,EAAO6B,WAAa7B,EAAO4B,WAAYxB,UAChCJ,EAAOl4D,WAAYs4D,UACnBJ,EAAO4B,WAAYxB,IAI3B2B,MAAO,WAEN5sF,QAAQC,IAAK,cAAetD,KAAKitF,WAAWjoF,IAAOkpF,GAAYA,EAAO6B,aAIvE7xE,QAAS,WAER,IAAM,IAAIpjB,EAAI,EAAGA,EAAIkF,KAAKitF,WAAWjyF,SAAWF,EAE/CkF,KAAKitF,WAAYnyF,GAAIo1F,YAMtB,OAFAlwF,KAAKitF,WAAWjyF,OAAS,EAElBgF,QAQT2sF,EAAY+C,YAAc,WAEzB,IAAI7C,EACAE,EAkKJ,SAASoD,EAAiBC,EAAOC,EAASC,EAAenW,EAAeoW,EAAez8E,GAEtF,IAGI08E,EAEAjuF,EALAkuF,EAAgB38E,EAAU48E,iBAE1BC,EADYL,EAAcM,aACFH,EAK5B,OAASF,GAER,KAAKp2D,aACJq2D,EAAa,IAAIJ,EAAMS,kBACvBR,EAAQS,8BAA+BR,EAAex8E,EAAW08E,GACjEjuF,EAAQ,IAAI43B,aAAcw2D,GAC1B,MAED,KAAKjU,UACJ8T,EAAa,IAAIJ,EAAMW,eACvBV,EAAQW,6BAA8BV,EAAex8E,EAAW08E,GAChEjuF,EAAQ,IAAIm6E,UAAWiU,GACvB,MAED,KAAK9T,WACJ2T,EAAa,IAAIJ,EAAMa,gBACvBZ,EAAQa,8BAA+BZ,EAAex8E,EAAW08E,GACjEjuF,EAAQ,IAAIs6E,WAAY8T,GACxB,MAED,KAAKQ,WACJX,EAAa,IAAIJ,EAAMgB,gBACvBf,EAAQgB,8BAA+Bf,EAAex8E,EAAW08E,GACjEjuF,EAAQ,IAAI4uF,WAAYR,GACxB,MAED,KAAKj3D,WACJ82D,EAAa,IAAIJ,EAAMkB,gBACvBjB,EAAQkB,8BAA+BjB,EAAex8E,EAAW08E,GACjEjuF,EAAQ,IAAIm3B,WAAYi3D,GACxB,MAED,KAAK5zD,YACJyzD,EAAa,IAAIJ,EAAMoB,iBACvBnB,EAAQoB,+BAAgCnB,EAAex8E,EAAW08E,GAClEjuF,EAAQ,IAAIw6B,YAAa4zD,GACzB,MAED,KAAK3T,YACJwT,EAAa,IAAIJ,EAAMsB,iBACvBrB,EAAQsB,+BAAgCrB,EAAex8E,EAAW08E,GAClEjuF,EAAQ,IAAIy6E,YAAa2T,GACzB,MAED,QACC,MAAM,IAAI//C,MAAO,iDAInB,IAAM,IAAI91C,EAAI,EAAGA,EAAI61F,EAAW71F,IAE/ByH,EAAOzH,GAAM01F,EAAWoB,SAAU92F,GAMnC,OAFAs1F,EAAMyB,QAASrB,GAER,CACN3zF,KAAMs9E,EACN53E,MAAOA,EACPgQ,SAAUk+E,GArOZT,UAAY,SAAWxgF,GAEtB,IAAI1N,EAAU0N,EAAEhV,KAEhB,OAASsH,EAAQvD,MAEhB,IAAK,OACJsuF,EAAgB/qF,EAAQ+qF,cACxBE,EAAiB,IAAI9kE,SAAS,SAAWC,GAExC2kE,EAAciF,eAAiB,SAAW1B,GAGzCloE,EAAS,CAAEkoE,MAAOA,KAInB2B,mBAAoBlF,MAGrB,MAED,IAAK,SACJ,IAAI/iC,EAAShoD,EAAQgoD,OACjB+jC,EAAa/rF,EAAQ+rF,WACzBd,EAAe12D,KAAQ75B,IAEtB,IAAI4zF,EAAQ5zF,EAAO4zF,MACfC,EAAU,IAAID,EAAM4B,QACpBC,EAAgB,IAAI7B,EAAM8B,cAC9BD,EAAcE,KAAM,IAAIzV,UAAW5yB,GAAUA,EAAOisB,YAEpD,IAEC,IAAIv0E,EA4BT,SAAyB4uF,EAAOC,EAAS4B,EAAepE,GAEvD,IAGIyC,EACA8B,EAJAtE,EAAeD,EAAWC,aAC1BC,EAAiBF,EAAWE,eAK5BsE,EAAehC,EAAQiC,uBAAwBL,GAEnD,GAAKI,IAAiBjC,EAAMmC,gBAE3BjC,EAAgB,IAAIF,EAAM7mF,KAC1B6oF,EAAiB/B,EAAQmC,mBAAoBP,EAAe3B,OAEtD,IAAK+B,IAAiBjC,EAAMqC,YAOlC,MAAM,IAAI7hD,MAAO,gDALjB0/C,EAAgB,IAAIF,EAAMsC,WAC1BN,EAAiB/B,EAAQsC,yBAA0BV,EAAe3B,GAQnE,IAAO8B,EAAeQ,MAA8B,IAAtBtC,EAAcuC,IAE3C,MAAM,IAAIjiD,MAAO,uCAAyCwhD,EAAeU,aAI1E,IAAItxF,EAAW,CAAEY,MAAO,KAAM8P,WAAY,IAG1C,IAAM,IAAIioE,KAAiB2T,EAAe,CAEzC,IAEIh6E,EACAi/E,EAHAxC,EAAgBhL,KAAMwI,EAAgB5T,IAS1C,GAAK0T,EAAWG,aAEf+E,EAAcjF,EAAc3T,GAC5BrmE,EAAYu8E,EAAQ2C,uBAAwB1C,EAAeyC,OAErD,CAIN,IAAuB,KAFvBA,EAAc1C,EAAQ4C,eAAgB3C,EAAeF,EAAOtC,EAAc3T,MAE/C,SAE3BrmE,EAAYu8E,EAAQ6C,aAAc5C,EAAeyC,GAIlDvxF,EAAS0Q,WAAW5W,KAAM60F,EAAiBC,EAAOC,EAASC,EAAenW,EAAeoW,EAAez8E,IAKzG,GAAKu+E,IAAiBjC,EAAMmC,gBAAkB,CAQ7C,IALA,IAAIY,EAAW7C,EAAc8C,YAEzBhxF,EAAQ,IAAI46E,YADY,EAAXmW,GAEbE,EAAa,IAAIjD,EAAMgB,gBAEjBt2F,EAAI,EAAGA,EAAIq4F,IAAar4F,EAAI,CAErCu1F,EAAQiD,gBAAiBhD,EAAex1F,EAAGu4F,GAE3C,IAAM,IAAIr3F,EAAI,EAAGA,EAAI,IAAMA,EAE1BoG,EAAW,EAAJtH,EAAQkB,GAAMq3F,EAAWzB,SAAU51F,GAM5CwF,EAASY,MAAQ,CAAEG,MAAOH,EAAOmQ,SAAU,GAE3C69E,EAAMyB,QAASwB,GAMhB,OAFAjD,EAAMyB,QAASvB,GAER9uF,EA1HYysF,CAAgBmC,EAAOC,EAAS4B,EAAepE,GAE1D7J,EAAUxiF,EAAS0Q,WAAWlN,IAAOsjD,GAAUA,EAAK/lD,MAAMunD,QAEzDtoD,EAASY,OAAQ4hF,EAAQ1oF,KAAMkG,EAASY,MAAMG,MAAMunD,QAEzDy7B,KAAKoJ,YAAa,CAAEpwF,KAAM,SAAUmR,GAAI5N,EAAQ4N,GAAIlO,YAAYwiF,GAE/D,MAAQhmE,GAET3a,QAAQ2a,MAAOA,GAEfunE,KAAKoJ,YAAa,CAAEpwF,KAAM,QAASmR,GAAI5N,EAAQ4N,GAAIsO,MAAOA,EAAMlc,UAE/D,QAEDsuF,EAAMyB,QAASI,GACf7B,EAAMyB,QAASxB,SAyLrB1D,EAAYyB,UAAY,IAAImF,QAK5B5G,EAAYW,eAAiB,WAE5BjqF,QAAQiE,KAAM,4FAKfqlF,EAAYY,iBAAmB,WAE9BlqF,QAAQiE,KAAM,8FAKfqlF,EAAY6G,qBAAuB,WAElCnwF,QAAQiE,KAAM,kGAKfqlF,EAAY8G,iBAAmB,WAE9BpwF,QAAQiE,KAAM,+F,8GCxqBf,OAEA,QAEA,2BACA,4BACA,4BAEA,kCACC,YACS9F,EACAkyF,EACAC,GAFA,KAAAnyF,WACA,KAAAkyF,YACA,KAAAC,YAGT,UACC,MAAMC,EAAoB,IAAI,EAAAziF,aAAanR,KAAK2zF,WAC1CE,EAAoB,IAAI,EAAA1iF,aAAanR,KAAK0zF,WAC1CI,EAAYF,EAAkBG,WAC9BC,EAAYH,EAAkBE,WAEpC,GAAyB,IAArBD,EAAU94F,QAAqC,IAArBg5F,EAAUh5F,OACvC,OAGD,MAAMi5F,EACLH,EAAU94F,OAASg5F,EAAUh5F,OAC1B,CAAC44F,EAAmBC,GACpB,CAACA,EAAmBD,GAElBM,EAAoBD,EAA6B,GACjDE,EAAmBF,EAA6B,GAEhDG,EAAoBF,EAAkBH,WACtCM,EAAmBF,EAAiBJ,WAEpCO,EAAkBJ,EAAkB1/E,SACpC+/E,EAAiBJ,EAAiB3/E,SAClCggF,EAAwBF,EAAgBt5F,OAExCy5F,EAAa,UAAcH,EAAiBC,GAG5CG,EAA2B,GACjCN,EAAkBxyF,QAAQ,CAAC+yF,EAAS75F,KACnC,MAAM85F,EAAkBP,EAAiBv5F,GAEzC45F,EAAep5F,KAAKq5F,EAAQ,IAC5BD,EAAep5F,KAAKq5F,EAAQ,IAC5BD,EAAep5F,KAAKs5F,EAAgB,GAAKJ,GAEzCE,EAAep5F,KAAKq5F,EAAQ,IAC5BD,EAAep5F,KAAKs5F,EAAgB,GAAKJ,GACzCE,EAAep5F,KAAKs5F,EAAgB,GAAKJ,KAGb,UAC5BN,EAAkB5hF,eAClB6hF,EAAiB7hF,gBAGG1Q,QAASyQ,IAC7B,MAAMsD,EAAcu+E,EAAkBv+E,YAAYtD,GAClD,IAAIi9D,EAAgBmlB,EAAWzvF,IAAK2P,GACnCA,EAAMW,aAAajD,IAEhBsD,EAAc,IACjB25D,EAAgB,UACfA,EAActqE,IAAKC,GAAMA,EAAEF,aAG7B/E,KAAKwB,SAASkR,aACbL,EACA,IAAI,EAAAc,uBAAuBm8D,EAAe35D,MAK5C3V,KAAKwB,SAASgB,SAASkyF,GACvB10F,KAAKwB,SAASoQ,0B,mFC/EhB,eAKmB,EAAAijF,kBALX,EAAAA,kBACR,eAIQ,EAAAC,UAJA,EAAAA,UACR,OACAC,YAAYC,O,2FCHZ,SAGA,SAEA,MAAaH,EACZ,YAAoB93C,GAAA,KAAAA,QAEpB,iBAAiBviD,GAEhB,OADiB,IAAIq6F,EAAkBr6F,GACvB4I,QAGX,Q,mDACL,MAAMA,EAAQ,IAAI,EAAA0xF,UAClB1xF,EAAMwZ,mBAAmBq4E,kBAGzB,MAAM53C,EAAar9C,KAAK+8C,MAAkB,WAC1C,GAAIM,EAAY,CAEfj6C,EAAMqqD,UAAUpQ,EAAkB,OAAK,GACvC,MAAME,EAAcF,EAAwB,aAAK,GACjDj6C,EAAMq6C,gBAAgBy3C,gBAAgB33C,EAAY,IAAM,EAAGA,EAAY,IAAM,KAC7E,MAAMC,EAAqBH,EAA+B,mBACtDG,GACHp6C,EAAMq6C,gBAAgB03C,uBAAuB33C,EAAmB,GAAIA,EAAmB,IAGpFH,EAAoC,yBACvCj6C,EAAMu6C,mBAAmBuoB,4BAA4B7oB,EAAoC,yBAO3Fj6C,EAAMqmC,OAAOC,QAEb,MAAM0rD,EAAW,EAAAC,qBAAqBl4C,cAAc/5C,EAAM0Z,MAe1D,OAdI9c,KAAK+8C,MAAY,MACpBq4C,EAASE,aAAat1F,KAAK+8C,MAAY,MAEpC/8C,KAAK+8C,MAAU,IAClBq4C,EAASG,gBAAgBv1F,KAAK+8C,MAAU,UAGnC35C,EAAMwZ,mBAAmB44E,iBAC/BpyF,EAAMqmC,OAAOG,UAMNxmC,MAjDT,uB,8ECFA,0BACC,YAAoBA,GAAA,KAAAA,QAEpB,KAAAqyF,yBAA0C,KAE1C,4BAA4BC,GAC3B11F,KAAKy1F,yBAA2BC,EAEjC,8BACC,OAAO11F,KAAKy1F,yBAEb,yBACC,GAAIz1F,KAAK09C,wBAAyB,CAEjC,OADoB19C,KAAKoD,MAAMK,KAAKzD,KAAK09C,yBAIzC,OADAr6C,QAAQiE,KAAK,gCACNtH,KAAK21F,mBAIN,mBACP,MAAM74E,EAAO9c,KAAKoD,MAAM0Z,KACxB,OAAOA,EAAK8I,cAAc,sBAAsB,IAAM9I,EAAK8I,cAAc,uBAAuB,M,8ECjBlG,eAKC,YAAoBlM,GAAA,KAAAA,SAJZ,KAAAk8E,OAAiD,IAAIvlE,IACrD,KAAAwlE,aAAuB,EACvB,KAAAC,oBAAsB91F,KAAK+1F,cAAcl4F,KAAKmC,MAGrDA,KAAK61F,aAAe,EAGrB,QACC71F,KAAK61F,cAAgB,EAEtB,UACC71F,KAAK61F,cAAgB,EACjB71F,KAAK61F,aAAe,IACvB71F,KAAK61F,aAAe,GAGrB71F,KAAKg2F,gBAIN,cACC,OAAOh2F,KAAK61F,aAAe,EAG5B,QAAQpyF,EAAqBwyF,GAC5Bj2F,KAAK41F,OAAOr1F,IAAIkD,EAAKmoB,cAAeqqE,GAGrC,gBACKj2F,KAAKk2F,SAMTl2F,KAAK41F,OAAOh0F,QAAQ5B,KAAK81F,qBASlB,cAAcG,EAAwDvmF,GAC7E,MAAMjM,EAAOzD,KAAK0Z,OAAOI,MAAMm9C,aAAavnD,GACxCjM,IACHzD,KAAK41F,OAAOO,OAAOzmF,GACnBjM,EAAKyb,iBAAiBk3E,qBAAqBH,O,8EC1D9C,eAkBA,kBAKC,cAHA,KAAAI,SAAmB,EAIlBr2F,KAAKia,OAAS,IAAI,EAAAq8E,MAAM,CACvBC,UAAU,EACVC,UAAU,EACVC,YAAY,IAId,QACC,OAAOz2F,KAAKia,OAEb,UAAU7W,GACTpD,KAAK0Z,OAAStW,EAEf,QACC,OAAOpD,KAAK0Z,OAGb,UACC,MAAiB,GAAI1Z,KAAKq2F,UAAY,IAGvC,QAAQ5yF,GACPzD,KAAKia,OAAOD,QAAQvW,EAAKmoB,cAAenoB,GAGzC,WAAWA,GACVzD,KAAKia,OAAOQ,WAAWhX,EAAKmoB,eAG7B,eAAe6qB,GACd,MAAMmY,EAAyB,GAC/B,IAAK,IAAIl/C,KAAM+mC,EAAK,CACnB,MAAMhzC,EAAOzD,KAAKi3D,aAAavnD,GAC3BjM,GACHmrD,EAAMtzD,KAAKmI,GAGb,OAAOmrD,EAeR,aAAal/C,GACZ,OAAO1P,KAAKia,OAAOxW,KAAKiM,GAGzB,QAAQgL,EAAoBoR,GAC3B,MAAM4qE,EAASh8E,EAAIkR,cACbI,EAAUF,EAAKF,cAErB,GAAI5rB,KAAKia,OAAO08E,QAAQD,IAAW12F,KAAKia,OAAO08E,QAAQ3qE,GAAU,CAChEhsB,KAAKia,OAAO28E,QAAQF,EAAQ1qE,GAK5B,IAAI6qE,GAAkB,EAKtB,SAPsB72F,KAAK0Z,QAAS1Z,KAAK0Z,OAAOkD,mBAAmBC,cAIlEg6E,GAAmB,EAAAC,IAAIC,UAAU/2F,KAAKia,SAGnC48E,GACH72F,KAAKia,OAAO+8E,WAAWN,EAAQ1qE,IACxB,IAEPtR,EAAIwE,iBAAiB+3E,4CAEd,GAIR,OADA5zF,QAAQiE,KAAK,wCAAwCovF,QAAa1qE,MAC3D,EAIT,WAAWtR,EAAoBoR,GAC9B,GAAIpR,GAAOoR,EAAM,CAChB,MAAMorE,EAAWx8E,EAAIkR,cACfurE,EAAYrrE,EAAKF,cACvB5rB,KAAKia,OAAO+8E,WAAWE,EAAUC,GAEjCz8E,EAAIwE,iBAAiB+3E,4CAGvB,wBAAwBxzF,GACvB,MAAMuX,EAAehb,KAAKgb,aAAavX,GACvC,IAAK,IAAI22C,KAAep/B,EACvBhb,KAAK4a,WAAWw/B,EAAa32C,GAG/B,sBAAsBA,GACrB,MAAMwX,EAAajb,KAAKib,WAAWxX,GACnC,IAAK,IAAIi+B,KAAazmB,EACrBjb,KAAK4a,WAAWnX,EAAMi+B,GAsBxB,gBAAgBhyB,GACf,OAAO1P,KAAKia,OAAOe,aAAatL,IAAO,GAExC,aAAajM,GACZ,MAAMgzC,EAAMz2C,KAAK+a,gBAAgBtX,EAAKmoB,eACtC,OAAO5rB,KAAK82D,eAAergB,GAE5B,cAAc/mC,GACb,OAAO1P,KAAKia,OAAOgB,WAAWvL,IAAO,GAEtC,WAAWjM,GACV,MAAMgzC,EAAMz2C,KAAKo3F,cAAc3zF,EAAKmoB,gBAAkB,GACtD,OAAO5rB,KAAK82D,eAAergB,GAGpB,aAAahzC,EAAqBk9D,GACzC,MAAMlqB,EAAyB,GAC/B,IAAI4gD,EAAWr3F,KAAK2gE,GAAQl9D,EAAKmoB,eAEjC,KAAOyrE,EAASr8F,OAAS,GAAG,CAC3B,MAAMs8F,EAAgB,GACtB,IAAK,IAAIv9E,KAAWs9E,EACnB,IAAK,IAAIE,KAAgBv3F,KAAK2gE,GAAQ5mD,GACrCu9E,EAAch8F,KAAKi8F,GAIrB,IAAK,IAAI7nF,KAAM2nF,EACd5gD,EAAIn7C,KAAKoU,GAEV,IAAK,IAAIA,KAAM4nF,EACdD,EAAS/7F,KAAKoU,GAEf2nF,EAAWC,EAEZ,OAAO7gD,EAER,oBAAoBhzC,GACnB,OAAOzD,KAAKw3F,aAAa/zF,EAAM,mBAEhC,kBAAkBA,GACjB,OAAOzD,KAAKw3F,aAAa/zF,EAAM,iBAEhC,iBAAiBA,GAChB,MAAMgzC,EAAMz2C,KAAKy3F,oBAAoBh0F,GACrC,OAAOzD,KAAK82D,eAAergB,GAE5B,eAAehzC,GACd,MAAMgzC,EAAMz2C,KAAK03F,kBAAkBj0F,GACnC,OAAOzD,KAAK82D,eAAergB,M,yMCnM7B,uBAGC,cAFQ,KAAAkhD,qBAAkD,IAAItnE,IACtD,KAAAunE,UAAwB,GAGhC,SAASn0F,GACRzD,KAAK23F,qBAAqBp3F,IAAIkD,EAAKmoB,cAAenoB,GAEnD,YAAYA,GACXzD,KAAK23F,qBAAqBxB,OAAO1yF,EAAKmoB,eAEA,GAAlC5rB,KAAK23F,qBAAqBntF,MAC7BxK,KAAK63F,QAIC,QACP,IAAIt9E,EACJ,KAAQA,EAAWva,KAAK43F,UAAUtvE,OACjC/N,IAII,2B,mDACL,OAAsC,GAAlCva,KAAK23F,qBAAqBntF,UAC7B,EAEO,IAAIyd,QAAQ,CAACC,EAASC,KAC5BnoB,KAAK43F,UAAUt8F,KAAK4sB,W,8EC7BxB,MACA,cAUA,2BACC,YAAoB9kB,GAAA,KAAAA,QAIpB,aAAa00F,GACZ93F,KAAK+3F,iBAAmBD,EAGzB,sBACC,OAAO93F,KAAK+3F,iBAEb,SAASC,EAAwBhyE,EAAiDxrB,G,MAC5D,QAArB,EAAAwF,KAAK+3F,wBAAgB,SAAEE,eAAeD,EAAShyE,EAAYxrB,GAE5D,mBACC,OACCwF,KAAKoD,MAAMwZ,mBAAmBk8B,QACL,MAAzB94C,KAAK+3F,kBACL/3F,KAAKoD,MAAMwZ,mBAAmBs7E,gBAC7B,EAAAr/E,KAAKq8B,WAAWijD,iB,2FChBdC,EAAkB,CACvB/iD,WAAW,GAMZ,4BAQC,cAPA,KAAAgjD,kBAA4B,EAC5B,KAAAC,iBAA2B,EAC3B,KAAAC,WAA+B,GAC/B,KAAAC,UAA6B,GACrB,KAAAC,iBAA2B,EAC3B,KAAAb,UAAwB,GAIhC,qBACM53F,KAAKy4F,kBACTz4F,KAAKy4F,iBAAkB,GAGzB,kBAAkB5oD,GACjB,IAAIoF,EAAmC,KAavC,OAZIj1C,KAAKy4F,kBACRxjD,EAAKj1C,KAAK04F,yBAAyB7oD,GAAQ,IAEvCoF,IACJA,EAAKj1C,KAAK04F,yBAAyB7oD,GAAQ,IAQrCoF,EAEA,yBAAyBpF,EAA2B8oD,GAC3D,IAAIC,EAAeD,EAAS,SAAW,QACnC1jD,EAAKpF,EAAOgpD,WAAWD,EAAcR,GAKzC,OAJKnjD,IACJ2jD,EAAeD,EAAS,sBAAwB,qBAChD1jD,EAAKpF,EAAOgpD,WAAWD,EAAcR,IAE/BnjD,EAYR,kBAAkB92B,GACjB,GAAKA,EAA+B26E,YACnC,MAAM,IAAIloD,MAAM,6BAEhBzyB,EAA+B26E,YAAc94F,KAAKq4F,mBAAqB,EAexEr4F,KAAKu4F,WAAYp6E,EAA+B26E,aAAe36E,EAEpB,GAAvCljB,OAAO4W,KAAK7R,KAAKu4F,YAAYv9F,QAChCgF,KAAK+4F,8BAA8B56E,GAGrC,oBAAoBA,UACZne,KAAKu4F,WAAYp6E,EAA+B26E,aACvD36E,EAASD,UAEF,iBACP,MAAM86E,EAAW/9F,OAAO4W,KAAK7R,KAAKu4F,YAAY,GAC9C,OAAIS,EACIh5F,KAAKu4F,WAAWS,GAEjB,KAER,YACC,OAAO/9F,OAAO6J,OAAO9E,KAAKu4F,YAGnB,8BAA8Bp6E,GACrC,IAAI5D,EACJ,KAAQA,EAAWva,KAAK43F,UAAUtvE,OACjC/N,EAAS4D,GAIL,oB,mDACL,MAAMA,EAAWne,KAAKi5F,iBACtB,OAAI96E,GAGI,IAAI8J,QAAQ,CAACC,EAASC,KAC5BnoB,KAAK43F,UAAUt8F,KAAK4sB,W,8EC9GxB,oCACS,KAAAgxE,eAAiD,GACjD,KAAAC,0BAAoD,GACpD,KAAAC,uBAAyD,GAEjE,cAAc31F,EAA2B2V,EAA4B3a,GACpE,MAAM2oC,EAAU3jC,EAAKkhB,eACf00E,EAAY51F,EAAKlF,OAIvB,GAHAyB,KAAKk5F,eAAe9xD,GAAWpnC,KAAKk5F,eAAe9xD,IAAY,GAE/BpnC,KAAKk5F,eAAe9xD,GAASiyD,GAE5D,MAAM,IAAIzoD,MAAM,QAAQxJ,KAAWiyD,wBAEpCr5F,KAAKk5F,eAAe9xD,GAASiyD,GAAa51F,EAEtC2V,IACHpZ,KAAKm5F,0BAA0B/xD,GAAWpnC,KAAKm5F,0BAA0B/xD,IAAY,GACrFpnC,KAAKm5F,0BAA0B/xD,GAASiyD,GAAajgF,GAEtDpZ,KAAKo5F,uBAAuBhyD,GAAWpnC,KAAKo5F,uBAAuBhyD,IAAY,GAC3E3oC,IACHuB,KAAKo5F,uBAAuBhyD,GAASiyD,GAAa56F,GAGpD,gBAAgB2oC,EAAiBiyD,UACzBr5F,KAAKk5F,eAAe9xD,GAASiyD,UAC7Br5F,KAAKm5F,0BAA0B/xD,GAASiyD,UACxCr5F,KAAKo5F,uBAAuBhyD,GAASiyD,GAE7C,6CAA6CjyD,EAAsBkyD,GAElE,GADYt5F,KAAKk5F,eAAe9xD,GACvB,CAER,OAD0BnsC,OAAO6J,OAAO9E,KAAKk5F,eAAe9xD,IACnCvd,OAAQpmB,I,MAChC,MAAMhF,EAAUuB,KAAKo5F,uBAAuBhyD,GAAS3jC,EAAKlF,QAC1D,IAAKE,EACJ,OAAO,EACD,CACN,MAAM86F,EAAc96F,EAAc,KAC5B+6F,EAAgB/6F,EAAgB,OAChCg7F,EAAmB,GAAGryD,KAAWkyD,IACvC,GAAIC,EACH,OAAOA,EAAY52C,SAAS82C,GAE7B,GAAID,EACH,OAAQA,EAAc72C,SAAS82C,GAGjC,OAAQh7F,IAA0B,QAAnB,EAAIA,EAAc,YAAC,eAAEkkD,SAAS22C,MAG9C,MAAO,GAGT,iBAAiBlyD,EAAsBkyD,GACtC,MAAM1zE,EAAiD,GACjDgpC,EAAQ5uD,KAAK05F,6CAA6CtyD,EAASkyD,GACzE,IAAK,IAAI71F,KAAQmrD,EAAO,CAEvBhpC,EADaniB,EAAKlF,QACIkF,EAEvB,OAAOmiB,EAER,oBAAoBwhB,EAAsB7oC,GACzC,OAAOyB,KAAKm5F,0BAA0B/xD,GAAS7oC,M,8ECjFjD,eACA,SAIA,8BAGC,YAAY6E,GAFJ,KAAAu2F,yBAA6E,IAAI,EAAA7kC,sBACjF,KAAA8kC,aAAiE,CAAC55F,KAAK25F,0BAG/E,oBAAoBl2F,GACnB,MAAMk8C,EAAa3/C,KAAK65F,yBAAyBp2F,GAC7Ck8C,GACHA,EAAWtmC,cAAc5V,GAG3B,sBAAsBA,GACrB,MAAMk8C,EAAa3/C,KAAK65F,yBAAyBp2F,GAC7Ck8C,GACHA,EAAWm6C,gBAAgBr2F,GAI7B,cAAcmsC,EAAcC,EAA2BC,GACtD,IAAK,IAAI6P,KAAc3/C,KAAK45F,aAC3B,GAAIj6C,EAAWo6C,cAAcnqD,GAE5B,YADA+P,EAAWq6C,QAAQpqD,EAAOC,EAAQC,GAM7B,yBACPrsC,GAEA,OAAQA,EAAKlF,MACZ,KAAK,EAAA2vD,eAAe3vD,OACnB,OAAOyB,KAAK25F,6B,8EC7BhB,wBAWC,YAAoBl2F,GAAA,KAAAA,OAVpB,KAAAw2F,aAAuB,EACvB,KAAAC,QAAkB,EAelB,eACC,OAAuB,IAAhBl6F,KAAKk6F,OAEb,sBACC,OAAOl6F,KAAKm6F,iBAEb,kBACC,OAAOn6F,KAAKi6F,aAEb,oBAAoBp9F,EAAc8jE,GACjC3gE,KAAKo6F,uBAAyBp6F,KAAKo6F,wBAA0B,GAC7Dp6F,KAAKq6F,kBAAoBr6F,KAAKq6F,mBAAqB,GAE9Cr6F,KAAKo6F,uBAAuBz3C,SAAS9lD,GAIzCwG,QAAQiE,KAAK,kBAAkBzK,mBAAuBmD,KAAKyD,OAH3DzD,KAAKo6F,uBAAuB9+F,KAAKuB,GACjCmD,KAAKq6F,kBAAkB/+F,KAAKqlE,IAK9B,uBAAuB9jE,GACtB,GAAImD,KAAKo6F,wBAA0Bp6F,KAAKq6F,kBAAmB,CAC1D,MAAMj4F,EAAQpC,KAAKo6F,uBAAuB9wF,QAAQzM,GAC9CuF,GAAS,IACZpC,KAAKo6F,uBAAuBl+F,OAAOkG,EAAO,GAC1CpC,KAAKq6F,kBAAkBn+F,OAAOkG,EAAO,KAIxC,SAASvF,GACR,QAAImD,KAAKo6F,wBACDp6F,KAAKo6F,uBAAuBz3C,SAAS9lD,GAU9C,qBACCmD,KAAKk6F,QAAS,EAEf,4BAA4BtrC,GAC3B5uD,KAAKs6F,yBAA2B1rC,EAAM5pD,IAAKlH,GAAMA,EAAE8tB,eAKpD,UAAUqqE,EAAoDsE,GAC5C,MAAbA,IACHA,GAAY,GAGZtE,GACAj2F,KAAKs6F,0BACLt6F,KAAKs6F,yBAAyB33C,SAASszC,EAA4BrqE,iBAKjC,MAA/BqqE,IACHA,EAA8Bj2F,KAAKyD,MAkBpCzD,KAAKk6F,QAAS,EACdl6F,KAAKm6F,iBAAmB5zB,YAAYC,MACpCxmE,KAAKi6F,cAAgB,EAErBj6F,KAAKo2F,qBAAqBH,IAGR,IAAdsE,GAEHv6F,KAAKoa,qBAAqB67E,IAI5B,qBAAqBA,GACpB,GAAIj2F,KAAKq6F,kBAAmB,CAC3B,MAAM5wD,EAASzpC,KAAKyD,KAAKL,MAAMqmC,OAC/B,GAAIA,EAAOysD,QACVzsD,EAAO+wD,QAAQx6F,KAAKyD,KAAMwyF,QAE1B,IAAK,IAAI/9C,KAAQl4C,KAAKq6F,kBACrBniD,EAAK+9C,IAST,qBAAqBA,GAKpBj2F,KAAKy6F,mBAAqBz6F,KAAKy6F,oBAAsBz6F,KAAKyD,KAAKk+B,uBAE/D,IAAK,IAAID,KAAa1hC,KAAKy6F,mBAC1B/4D,EAAUxiB,iBAAiB/E,UAAU87E,GAJpB,GA6BnB,yBACCj2F,KAAKy6F,wBAAqBl2F,EAE3B,2CACCvE,KAAK06F,yBACL,IAAK,IAAItgD,KAAep6C,KAAKyD,KAAKk3F,yBACjCvgD,EAAYl7B,iBAAiBw7E,4B,8EChLhC,aACA,OAEA,QAQA,eAaC,YAAoBj3F,EAAoB6B,EAAY,EAAGC,EAAY,GAA/C,KAAA9B,OAZZ,KAAA8lE,UAAqB,IAAI,EAAA5yC,QACzB,KAAAikE,OAAiB,GACjB,KAAAC,eAAyB,EACzB,KAAAC,OAAgB,IAAI,EAAA3wF,MAAM,IAAM,IAAM,KAEtC,KAAA4wF,kBAA4B,EAE5B,KAAAt0F,MAAwB,CAC/BnB,EAAG,EACHC,EAAG,GAIHvF,KAAKupE,UAAUjkE,EAAIA,EACnBtF,KAAKupE,UAAUhkE,EAAIA,EAGpB,kBAAkBo1D,GACjB36D,KAAK66F,eAAiBlgC,EAEvB,gBACC,OAAO36D,KAAK66F,eAEb,UAAUjhE,GACT55B,KAAK46F,OAAShhE,EAEf,QACC,OAAO55B,KAAK46F,OAEb,YAAYI,GACXh7F,KAAKi7F,SAAWD,EAChBh7F,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAU2jF,yBAE1B,cACC,OAAOl7F,KAAKi7F,SAEb,UAAUpxF,GACT7J,KAAK86F,OAASjxF,EAEf,QACC,OAAO7J,KAAK86F,OAQb,wBACC96F,KAAK+6F,kBAAmB,EAEzB,qBACC,OAAO/6F,KAAK+6F,iBAGb,KAAK9zF,GACJjH,KAAKupE,UAAUzpD,KAAK7Y,EAAQmN,UAC5BpU,KAAK86F,OAAOh7E,KAAK7Y,EAAQ4C,SAG1B,eACC,OAAO7J,KAAKupE,UAGb,aAAaC,EAAgCjkE,EAAY,GACxD,GAAIikE,aAAwB,EAAA7yC,QAC3B32B,KAAKupE,UAAUzpD,KAAK0pD,OACd,CACN,MAAMlkE,EAAIkkE,EACVxpE,KAAKupE,UAAUhpE,IAAI+E,EAAGC,GAEvBvF,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAU4jF,0BAG1B,UAAUp0C,EAAiBq0C,GAAgB,GAC1Cp7F,KAAKupE,UAAUtsD,IAAI8pC,GAEfq0C,IACHp7F,KAAKupE,UAAUjkE,EAAIkH,KAAK6uF,MAAMr7F,KAAKupE,UAAUjkE,GAC7CtF,KAAKupE,UAAUhkE,EAAIiH,KAAK6uF,MAAMr7F,KAAKupE,UAAUhkE,IAG9CvF,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAU4jF,0BAW1B,UAIC,OAHAn7F,KAAKyG,MAAMnB,EAAItF,KAAKupE,UAAUjkE,EAC9BtF,KAAKyG,MAAMlB,EAAIvF,KAAKupE,UAAUhkE,EAC9BvF,KAAKyG,MAAMu0F,QAAUh7F,KAAKi7F,SACnBj7F,KAAKyG,S,8EC3Gd,eACA,SAEA,yBAGC,YAAsBhD,GAAA,KAAAA,OAFtB,KAAA63F,eAAiB,IAAI,EAAAC,mBAAmBv7F,KAAKyD,MAC7C,KAAAua,MAAQ,IAAI,EAAAw9E,WAAWx7F,KAAKyD,S,8ECP7B,eAEA,MAAa83F,UAA2B,EAAAE,UACvC,aACC,OAAOz7F,KAAK07F,6BAA+B17F,KAAK27F,4BAGjD,4BACC,MAAM/rC,EAAc5vD,KAAKyD,KAAK+E,OAAO02B,MACrC,IAAK,IAAI3U,KAAcqlC,EAAa,CACnC,MAAMp4C,EAAQxX,KAAKyD,KAAK+E,OAAOtL,IAAIqtB,GACnC,GAAI/S,GAASA,EAAMsa,OAAOwpE,eAAe76F,OACxC,OAAO,EAGT,OAAO,EAGR,4BACC,MAAMiH,EAAS1H,KAAKyD,KAAK5C,GAAG6G,OAAOA,SACnC,IAAK,IAAI8Q,KAAS9Q,EACjB,GAAI8Q,GAASA,EAAMsZ,OAAOwpE,eAAe76F,OACxC,OAAO,EAGT,OAAO,EAGR,uBACC,MAAMsa,EAAkB/a,KAAKyD,KAAKm4F,qBAAqB52F,IAAKlH,GAAMA,EAAE8tB,eAC9DiwE,EAAa77F,KAAKyD,KAAKL,MAAMq6C,gBAAgB5xB,WAC9C9Q,EAAgB4nC,SAASk5C,EAAWjwE,gBACxC5rB,KAAKyD,KAAKilB,gBAAgBmzE,GAG5B,yBACC,MAAMA,EAAa77F,KAAKyD,KAAKL,MAAMq6C,gBAAgB5xB,WACnD7rB,KAAKyD,KAAKklB,mBAAmBkzE,IAnC/B,wB,8ECFA,cACA,SAEA,MAAaL,UAAmB,EAAAC,UAG/B,IAAI35F,GACC9B,KAAK87F,UAAYh6F,IACpBuB,QAAQiE,KAAK,QAASxF,EAAS9B,KAAKyD,KAAK4E,aACzCrI,KAAK87F,SAAWh6F,EAChB9B,KAAKu1D,aAGP,cACC,OAAOv1D,KAAK87F,SAEb,QACC97F,KAAKO,SAAIgE,GAEV,aACC,OAAwB,MAAjBvE,KAAK87F,SAGH,YACY,MAAjB97F,KAAK87F,UAER97F,KAAKyD,KAAKtC,cAAc,KAAM,eAAenB,KAAK87F,aAGnD97F,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAUwkF,gBA1B3B,gB,8ECFA,eAGA,SAEA,kCAIC,YAAsBt4F,GAAA,KAAAA,OAHd,KAAAu4F,QAA+B,KAKvC,aACC,OAAOh8F,KAAKg8F,QAGb,WAAWt7F,GACNA,GAAUV,KAAKyD,KAAKuhB,kBAAkBtkB,SACzCV,KAAKg8F,QAAUt7F,EACXV,KAAKg8F,SAERh8F,KAAKyD,KAAKiY,gBAAgB87B,uBAAuB,EAAAnzB,eAAe43E,UAAUj8F,KAAKyD,QAKlF,c,UACC,OAAkD,QAA3C,EAAgC,QAAhC,EAAW,QAAX,EAAAzD,KAAKU,cAAM,eAAE6kB,2BAAmB,eAAEoqC,iBAAS,eAAEusC,SAASl8F,KAAKyD,SAAS,EAE5E,YACC,MAAM04F,EAAY,EAAA/jF,WAAW/Y,UAC7B,GAAoB,MAAhBW,KAAKg8F,QAAiB,CACzB,MAAMI,EAAmBp8F,KAAKg8F,QAAQ3zF,YACtC,OAAI+zF,IAAqBD,EACjBC,EAAmBp8F,KAAKyD,KAAK5G,KAE7Bu/F,EAAmBD,EAAYn8F,KAAKyD,KAAK5G,KAGjD,OAAOs/F,EAIT,gBACC,GAAIn8F,KAAKq8F,qBACR,IAAK,IAAInkD,KAAQl4C,KAAKq8F,qBACrBnkD,IAIH,UAAUhgC,GAIT,GAAY,MAARA,EACH,OAAO,KAER,GAAIA,IAAS,EAAAE,WAAW8R,SAAWhS,IAAS,EAAAE,WAAWgU,mBACtD,OAAOpsB,KAAKyD,KAEb,GAAIyU,IAAS,EAAAE,WAAW4R,QAAU9R,IAAS,EAAAE,WAAWiU,kBACrD,OAAOrsB,KAAKyD,KAAK/C,OAGlB,MAAMy7F,EAAY,EAAA/jF,WAAW/Y,UACzB6Y,EAAK,KAAOikF,IACfjkF,EAAOA,EAAKlK,UAAU,EAAGkK,EAAKld,SAG/B,MAAM2T,EAAWuJ,EAAKtJ,MAAMutF,GAC5B,GAAwB,IAApBxtF,EAAS3T,OAAc,CAC1B,MAAM6B,EAAO8R,EAAS,GACtB,OAAI3O,KAAKyD,KAAK8hB,oBACNvlB,KAAKyD,KAAK8hB,oBAAoBI,cAAc9oB,GAE5C,KAGR,OAAO,EAAAub,WAAWG,UAAUvY,KAAKyD,KAAMyU,M,2FC9E1C,QAGA,QAEA,4BACA,2BACA,4BACA,4BACA,QAEA,SACA,SAEA,QASA,oCAcC,YAAsBzU,EAA4B64F,GAA5B,KAAA74F,OAA4B,KAAA64F,WAX1C,KAAAC,UAAsC,GACtC,KAAAC,kBAA0C,GAC1C,KAAAC,uCAA+D,GAE/D,KAAAC,2BAAqC,EAI7C,gBACC,OAAQ18F,KAAK28F,WAAa38F,KAAK28F,YAAc,IAAI,EAAAC,kBAAkB58F,KAAKyD,MAGzE,cACC,OAAOzD,KAAKs8F,SAEb,KAAKO,GAAqB,GAOzB78F,KAAKu8F,UAAY,GAGbM,IACH78F,KAAK08F,0BAA4BG,EAC7B78F,KAAK08F,4BACR18F,KAAK88F,eAAiB,IAAI,EAAAp6E,cAAc1iB,KAAKyD,KAAKL,MAjC7B,YAmCrBpD,KAAKyD,KAAKilB,gBAAgB1oB,KAAK88F,kBAOlC,eAAer5F,EAAoB+P,GAElC,IAAIupF,EAIJ,GAFAvpF,GADAA,EAAWA,EAASvF,QAAQ,gBAAiB,MACzBA,QAAQ,SAAU,KAEsB,OAAvD8uF,EAA0B/8F,KAAKu8F,UAAU/oF,IAAoB,CAEjE,GAAI/P,EAAK5G,OAAS2W,GAAYupF,EAAwBnxE,gBAAkBnoB,EAAKmoB,cAC5E,OAMD,OAFApY,EAAW,EAAA5O,WAAWo4F,UAAUxpF,GAEzBxT,KAAKu3C,eAAe9zC,EAAM+P,GAC3B,CAEN,MAAMypF,EAAex5F,EAAK5G,KAGJmD,KAAKu8F,UAAUU,WAE7Bj9F,KAAKu8F,UAAUU,GAIvBj9F,KAAKu8F,UAAU/oF,GAAY/P,EAC3BA,EAAKiY,gBAAgBwhF,wBAAwB1pF,GAC7CxT,KAAKm9F,sBAAsB15F,GAC3BzD,KAAKyD,KAAKL,MAAM45C,iBAAiBogD,yBAAyB35F,IAI5D,yBACC,MAAO,GAAGzD,KAAKyD,KAAKkhB,kBAAkB3kB,KAAKyD,KAAKlF,OAGjD,6BACC,OAAO,EAAAsa,KAAKq8B,WAAW37B,iBAAiBvZ,KAAKs8F,SAAUt8F,KAAKyD,KAAKlF,MASlE,oBAAoB86F,GAEnB,OAAqB,MADFr5F,KAAKq9F,6BAA6BhE,GAItD,YAAYA,GACX,MAAMiE,EAAat9F,KAAKq9F,6BAA6BhE,GAErD,GAAkB,MAAdiE,EAAoB,CACvB,MAAMx7F,EAAU,oBAAoBu3F,0BAAkCr5F,KAAKyD,KAAK4E,sCAAsCpN,OAAO4W,KAC5H7R,KAAKq9F,8BACJn4F,KAAK,UAAUlF,KAAKs8F,aAAat8F,KAAKyD,KAAKlF,OAE7C,MADA8E,QAAQ2a,MAAMlc,GACRA,EACA,CACN,MAAM81C,EAAa,IAAI0lD,EAAWt9F,KAAKyD,KAAKL,MAAO,cAAci2F,KAKjE,OAJAzhD,EAAW2lD,2BAEXv9F,KAAKmqB,SAASytB,GACdA,EAAWvW,UAAUm8D,yBACd5lD,GAIT,SAASA,GASR,GAJAA,EAAW3yB,WAAWjlB,KAAKyD,MAC3Bm0C,EAAWpvC,OAAOopC,OAClBgG,EAAW5yB,kBAAkBy4E,gBAC7B7lD,EAAWl8B,gBAAgBi8B,qBACvBC,EAAWN,oBAAsBM,EAAWryB,oBAC/C,IAAK,IAAI4iD,KAASvwB,EAAWryB,oBAAoBG,WAChDyiD,EAAMzsD,gBAAgBi8B,qBAqBxB,OAlBA33C,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAUmmF,QAAS,CAACC,gBAAiB/lD,EAAWvxB,YAC3DrmB,KAAKyD,KAAKL,MAAMw6F,qBAAqBC,0BACxCjmD,EAAWvW,UAAUy8D,sBAEtBlmD,EAAWvW,UAAU08D,mBACrB/9F,KAAKu3C,eAAeK,EAAY,EAAAvzB,eAAe43E,UAAUrkD,IACzD53C,KAAKyD,KAAK49B,UAAU28D,uBAAuBpmD,GAGvC53C,KAAK08F,2BAA6B18F,KAAK88F,gBAC1C98F,KAAK88F,eAAep0E,gBAAgBkvB,GAEjCA,EAAW7yB,kBACd/kB,KAAKyD,KAAKL,MAAM66F,iBAAiBC,qBAGlCl+F,KAAKyD,KAAKL,MAAMy0C,yCAAyCC,6BAA6BF,GAE/EA,EAMR,YAAYA,G,QACX,GAAIA,EAAWl3C,QAAUV,KAAKyD,KAC7B,OAAOJ,QAAQiE,KAAK,QAAQswC,EAAW/6C,yBAAyBmD,KAAKyD,KAAK4E,eACpE,CAENuvC,EAAWx9B,qBAAqBpa,KAAKyD,MAEjCzD,KAAK08F,2BAA6B18F,KAAK88F,gBAC1C98F,KAAK88F,eAAen0E,mBAAmBivB,GAGpC53C,KAAK2vD,UAAUusC,SAAStkD,IAC3B53C,KAAK2vD,UAAUzyC,OAAO,CAAC06B,IAGxB,MAAMvV,EAAmBuV,EAAW/2C,GAAGkG,YAAYuF,yBACN,QAA7C,EAAAsrC,EAAW/2C,GAAGkG,YAAY2F,2BAAmB,SAAE9K,QAASiG,IACnDA,GACHA,EAAiB+S,WAAW,CAACmL,WAAW,MAGI,QAA9C,EAAA6xB,EAAW/2C,GAAGkG,YAAY8nD,4BAAoB,SAAEjtD,QAASu8F,IACxD,GAAIA,IACHA,EAAkBvjF,WAAW,CAACmL,WAAW,IACrCsc,GAAkB,CACrB,MAAM+7D,EAAU/7D,EAAiBt6B,SAC3Bs2F,EAAmBF,EAAkBj2F,aACrCo2F,EAAWH,EAAkBrvC,UAC7ByvC,EAAkBJ,EAAkB12F,YAC1C62F,EAASz9F,GAAG6G,OAAOqe,UAAUw4E,EAAiBH,EAASC,MAM1DzmD,EAAW4mD,8BAGX5mD,EAAW3yB,WAAW,aACfjlB,KAAKu8F,UAAU3kD,EAAW/6C,MACjCmD,KAAKy+F,2BAA2B7mD,GAChC53C,KAAKyD,KAAKL,MAAM45C,iBAAiB0hD,8BAA8B9mD,GAE/D53C,KAAKyD,KAAK49B,UAAUs9D,0BAA0B/mD,GAC9CA,EAAWvW,UAAUu9D,sBACrBhnD,EAAWhwB,KAAK,EAAArQ,UAAUsnF,QAAS,CAACC,UAAW9+F,KAAKyD,KAAKmoB,iBAI3D,sBAAsBnoB,GACrB,MAAMs7F,EAAUt7F,EAAKmoB,cACfrtB,EAAOkF,EAAKlF,KAClByB,KAAKw8F,kBAAkBj+F,GAAQyB,KAAKw8F,kBAAkBj+F,IAAS,GAC1D,UAAgByB,KAAKw8F,kBAAkBj+F,GAAOwgG,IAClD/+F,KAAKw8F,kBAAkBj+F,GAAMjD,KAAKyjG,GAEnC/+F,KAAKg/F,6CAA6Cv7F,GAEnD,2BAA2BA,GAC1B,MAAMs7F,EAAUt7F,EAAKmoB,cACfrtB,EAAOkF,EAAKlF,KAClB,GAAIyB,KAAKw8F,kBAAkBj+F,GAAO,CACjC,MAAM6D,EAAQpC,KAAKw8F,kBAAkBj+F,GAAM+K,QAAQy1F,GAC/C38F,GAAS,IACZpC,KAAKw8F,kBAAkBj+F,GAAMrC,OAAOkG,EAAO,GACA,GAAvCpC,KAAKw8F,kBAAkBj+F,GAAMvD,eACzBgF,KAAKw8F,kBAAkBj+F,IAIjCyB,KAAKi/F,kDAAkDx7F,GAExD,6CAA6CA,G,MAC5C,MAAMs7F,EAAUt7F,EAAKmoB,cACfrtB,EAAOkF,EAAKkhB,eAClB3kB,KAAKy8F,uCAAuCl+F,GAAQyB,KAAKy8F,uCAAuCl+F,IAAS,GACpG,UAAgByB,KAAKy8F,uCAAuCl+F,GAAOwgG,IACvE/+F,KAAKy8F,uCAAuCl+F,GAAMjD,KAAKyjG,GAEpD/+F,KAAKyD,KAAK/C,QAAUV,KAAKyD,KAAK/C,OAAO42C,qBACJ,QAApC,EAAAt3C,KAAKyD,KAAK/C,OAAO6kB,2BAAmB,SAAEy5E,6CAA6Cv7F,IAGrF,kDAAkDA,G,MACjD,MAAMs7F,EAAUt7F,EAAKmoB,cACfrtB,EAAOkF,EAAKkhB,eAClB,GAAI3kB,KAAKy8F,uCAAuCl+F,GAAO,CACtD,MAAM6D,EAAQpC,KAAKy8F,uCAAuCl+F,GAAM+K,QAAQy1F,GACpE38F,GAAS,IACZpC,KAAKy8F,uCAAuCl+F,GAAMrC,OAAOkG,EAAO,GACA,GAA5DpC,KAAKy8F,uCAAuCl+F,GAAMvD,eAC9CgF,KAAKy8F,uCAAuCl+F,IAIlDyB,KAAKyD,KAAK/C,QAAUV,KAAKyD,KAAK/C,OAAO42C,qBACJ,QAApC,EAAAt3C,KAAKyD,KAAK/C,OAAO6kB,2BAAmB,SAAE05E,kDAAkDx7F,IAI1F,cAAclF,GACb,MAAMs4D,EAAW72D,KAAKw8F,kBAAkBj+F,IAAS,GAC3Cub,EAAQ9Z,KAAKyD,KAAKL,MAAM0W,MACxB80C,EAAwB,GAO9B,OANAiI,EAASj1D,QAASm9F,IACjB,MAAMt7F,EAAOqW,EAAMm9C,aAAa8nC,GAC5Bt7F,GACHmrD,EAAMtzD,KAAKmI,KAGNmrD,EAER,cAAc/xD,GACb,OAAOmD,KAAKu8F,UAAU1/F,GAOvB,4CAA4CuqC,GAC3C,OAA+D,MAAxDpnC,KAAKy8F,uCAAuCr1D,GAKpD,WACC,OAAO,UAAcpnC,KAAKu8F,WAE3B,iBACC,OAAO,UAAc,UAAYv8F,KAAKu8F,YAKvC,kBAAkBhiF,G,MACjB,IAAK,IAAI4tD,KAASnoE,KAAK0lB,WACtBnL,EAAS4tD,GAEgB,QAAzB,EAAAA,EAAM5iD,2BAAmB,SAAE25E,kBAAkB3kF,M,mHCtThD,4BACA,4BAEA,4BACA,QAEA,0BAEC,YAAoBzU,GAAA,KAAAA,QADpB,KAAAq5F,UAAsB,GAsDd,KAAA14F,MAAkB,GAhD1B,OACC,OAAOzG,KAAK8F,MAGb,QACC,OAAO9F,KAAK8F,MAAM1C,MAAM0W,MAAMg9C,eAAe92D,KAAKm/F,WAGnD,SAAS17F,GACR,OAAOzD,KAAKm/F,UAAUx8C,SAASl/C,EAAKmoB,eAErC,OAAOgjC,GACN,MAAMiI,EAAWjI,EAAM5pD,IAAKvB,GAASA,EAAKmoB,eAAe3b,OACzD,OAAO,UAAe4mD,EAAU72D,KAAKm/F,WAGtC,QACCn/F,KAAKm/F,UAAY,GACjBn/F,KAAKo/F,oBAEN,IAAIxwC,GAEH5uD,KAAKm/F,UAAY,GACjBn/F,KAAKid,IAAI2xC,GAGV,IAAIywC,GAGH,MAAMC,EAAkBD,EAAar6F,IAAKvB,GAASA,EAAKmoB,eACxD5rB,KAAKm/F,UAAY,UAAan/F,KAAKm/F,UAAWG,GAE9Ct/F,KAAKo/F,oBAGN,OAAOG,GAGN,MAAMC,EAAqBD,EAAgBv6F,IAAKvB,GAASA,EAAKmoB,eAC9D5rB,KAAKm/F,UAAY,UAAkBn/F,KAAKm/F,UAAWK,GAEnDx/F,KAAKo/F,oBAGE,oBACPp/F,KAAK8F,MAAM8hB,KAAK,EAAArQ,UAAUkoF,mBAI3B,UAGC,OAFAz/F,KAAKyG,MAAQzG,KAAKyG,OAAS,GAC3BzG,KAAKyG,MAAQzG,KAAKm/F,UAAUn6F,IAAK0K,GAAOA,GACjC1P,KAAKyG,S,+EC9Dd,4BAOC,YAAsBhD,GAAA,KAAAA,OANZ,KAAAi8F,qBAAsB,EAQhC,yBACC1/F,KAAK0/F,qBAAsB,EAE5B,yBACC,OAAO1/F,KAAKyD,KAAKL,MAAMwZ,mBAAmBk8B,QAAU94C,KAAK0/F,oBAO1D,sBAAsBnlF,GACrBva,KAAK2/F,oBAAsB3/F,KAAK2/F,qBAAuB,GACvD3/F,KAAK2/F,oBAAoBrkG,KAAKif,GAE/B,uBAAuB9W,GACtBzD,KAAK4/F,8BAA8B5/F,KAAK2/F,oBAAqBl8F,GAQ9D,yBAAyB8W,GACxBva,KAAK6/F,uBAAyB7/F,KAAK6/F,wBAA0B,GAC7D7/F,KAAK6/F,uBAAuBvkG,KAAKif,GAElC,0BAA0B9W,GACzBzD,KAAK4/F,8BAA8B5/F,KAAK6/F,uBAAwBp8F,GAQjE,mBAAmB8W,GAClBva,KAAK8/F,iBAAmB9/F,KAAK8/F,kBAAoB,GACjD9/F,KAAK8/F,iBAAiBxkG,KAAKif,GAE5B,sBACCva,KAAK+/F,cAAc//F,KAAK8/F,kBAQzB,gBAAgBvlF,GACfva,KAAKggG,cAAgBhgG,KAAKggG,eAAiB,GAC3ChgG,KAAKggG,cAAc1kG,KAAKif,GAEzB,mBACCva,KAAK+/F,cAAc//F,KAAKggG,eAQzB,gBAAgBzlF,GACfva,KAAKigG,iBAAmBjgG,KAAKigG,kBAAoB,GACjDjgG,KAAKigG,iBAAiB3kG,KAAKif,GAE5B,sBACCva,KAAK+/F,cAAc//F,KAAKigG,kBAQf,cAAcC,GACvB,GAAIA,EACH,IAAK,IAAIhoD,KAAQgoD,EAChBhoD,IAIO,8BAA8BgoD,EAA4CtoD,GACnF,GAAIsoD,EACH,IAAK,IAAIhoD,KAAQgoD,EAChBhoD,EAAKN,M,2FClGT,QAEA,uBAeC,YAAoBn0C,GAAA,KAAAA,OAdpB,KAAA08F,UAAoB,EACpB,KAAAC,aAAuB,EACvB,KAAAC,gBAA0B,EAE1B,KAAAC,uBAAiC,EAGjC,KAAAC,WAAqB,EAErB,KAAAC,kBAA4B,EAG5B,KAAAC,6BAAuC,EAIvC,6BACCzgG,KAAKygG,6BAA8B,EAGpC,iBACC,OAAyB,IAAlBzgG,KAAKmgG,SAEb,kBACC,OAAOngG,KAAKogG,aAEb,gBACC,OAAOpgG,KAAKugG,WAWL,sBACPvgG,KAAKmgG,UAAW,EAChBngG,KAAK0gG,yBAA2B1gG,KAAKyD,KAAKyb,iBAAiByhF,gBAEpD,yBAAyBC,GACb,MAAfA,IACHA,EAAc5gG,KAAKyD,KAAKL,MAAMmjE,YAAYs6B,SAEvCD,IACH5gG,KAAK8gG,iBAAmBv6B,YAAYC,OAIxB,yBAAyBrhD,G,mDACtC,GAAInlB,KAAKyD,KAAKquB,OAAO9T,MAAMvd,OAC1BT,KAAKslB,gBAGL,UACOtlB,KAAKyD,KAAKo8B,KAAK1a,GACpB,MAAO3V,GACRxP,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,yBAAyBiP,OACpDnM,QAAQ2a,MAAMhe,KAAKyD,KAAK4E,YAAamH,GACrCxP,KAAKslB,eAKF,Y,mDACL,GAAItlB,KAAKg5C,WACR,OAEDh5C,KAAK+gG,sBACL,MAAMH,EAAc5gG,KAAKyD,KAAKL,MAAMmjE,YAAYs6B,QAC5CD,IACH5gG,KAAKghG,6BAA+Bz6B,YAAYC,OAEjDxmE,KAAKyD,KAAKquB,OAAO9T,MAAML,QAGvB,MAAMsjF,QAAyBjhG,KAAKkhG,6BAEpClhG,KAAKmhG,yBAAyBP,GAE9B,MAAMz7E,EAAiB,GACvB,GAAI87E,EAAkB,CACrB,IAAIG,EACJ,IAAK,IAAItmG,EAAI,EAAGA,EAAImmG,EAAiBjmG,OAAQF,IAC5CsmG,EAAkBH,EAAiBnmG,GAC/BsmG,IACCphG,KAAKyD,KAAK5C,GAAG6G,OAAO25F,mCAAmCvmG,GAC1DqqB,EAAe7pB,KAAK8lG,EAAgBE,uBAEpCn8E,EAAe7pB,KAAK8lG,EAAgBp/F,uBAMlChC,KAAKuhG,yBAAyBp8E,MAE/B,2B,mDACLnlB,KAAKyD,KAAKL,MAAMyY,gBAAgBsO,SAASnqB,KAAKyD,MAC1CzD,KAAKg5C,WAKR31C,QAAQiE,KAAK,2CAA4CtH,KAAKyD,KAAK4E,cAGpErI,KAAK+gG,sBACL/gG,KAAKmhG,2BACLnhG,KAAKyD,KAAKquB,OAAO9T,MAAML,cAEjB3d,KAAKyD,KAAK+E,OAAOmnC,iBACjB3vC,KAAKuhG,yBAAyB,QAKrC,SAASz/F,GACR9B,KAAKwhG,yBAEL,MAAMb,EAAkB3gG,KAAKyD,KAAKyb,iBAAiByhF,gBAC5B,MAAnBA,GAA2BA,IAAoB3gG,KAAK0gG,0BACvD1gG,KAAKyD,KAAK4W,qBACVra,KAAKyhG,4BAEL,EAAA5oF,KAAKq8B,WAAW5xC,IAAI,aAAcq9F,EAAiB3gG,KAAK0gG,yBAA0B1gG,KAAKyD,KAAK4E,aAC5FrI,KAAKmgG,UAAW,EAChBngG,KAAKw2B,aAIP,0BACKx2B,KAAKg5C,aAERh5C,KAAKmgG,UAAW,EAIhBngG,KAAK0hG,oBAGLxrE,WAAWl2B,KAAKyD,KAAK3D,qBAAqBw2B,kBAAkBz4B,KAAKmC,KAAKyD,KAAK3D,sBAAuB,IAG5F,yBACHE,KAAKg5C,YACqB,MAAzBh5C,KAAK8gG,mBACR9gG,KAAKogG,cAAgB,GAaxB,oBACC,GAAIpgG,KAAKyD,KAAKL,MAAMmjE,YAAYs6B,QAAS,CACxC,MAAMc,EAAgBp7B,YAAYC,MAEO,MAArCxmE,KAAKghG,+BACRhhG,KAAKsgG,uBAAyBqB,EAAgB3hG,KAAKghG,6BACnDhhG,KAAKghG,kCAA+Bz8F,GAGD,MAAhCvE,KAAK4hG,yBAA4D,MAAzB5hG,KAAK8gG,mBAChD9gG,KAAKwgG,kBAAoBxgG,KAAK8gG,iBAAmB9gG,KAAK4hG,yBAG1B,MAAzB5hG,KAAK8gG,mBACR9gG,KAAKugG,WAAaoB,EAAgB3hG,KAAK8gG,iBACvC9gG,KAAK8gG,sBAAmBv8F,GAGzBvE,KAAKqgG,eAAiB7zF,KAAKC,IAAIzM,KAAKqgG,eAAgBrgG,KAAKugG,YAGtDvgG,KAAKyD,KAAKL,MAAMmjE,YAAYs6B,SAC/B7gG,KAAKyD,KAAKL,MAAMmjE,YAAYs7B,sBAAsB7hG,KAAKyD,MAQnD,6B,mDAGL,IAAIw9F,EAA6C,GAiBjD,OAhBIjhG,KAAKygG,8BACRQ,QAAyBjhG,KAAKyD,KAAK5C,GAAG6G,OAAOo6F,0BAI1C9hG,KAAKyD,KAAKL,MAAMmjE,YAAYs6B,UAC/B7gG,KAAK4hG,wBAA0Br7B,YAAYC,aAGTxmE,KAAKyD,KAAK+E,OAAOmnC,WAO7CsxD,KAIR,4BACC,OAAOjhG,KAAKsgG,uBAGb,uBACC,OAAOtgG,KAAKwgG,kBAEb,qBAAqB30D,GAEpB,OAAOr/B,KAAK6uF,MADM,IACAxvD,GADA,O,8EC3NpB,Q,KAAA,wBACA,QAEA,QAGA,IAAKk2D,GAAL,SAAKA,GACJ,gCACA,oCAFD,CAAKA,MAAO,KAKZ,+BAGC,YAAsBt+F,GAAA,KAAAA,OAUtB,mBACC,OAAOzD,KAAKgiG,6BAA6BD,EAAQE,YAGlD,qBACC,OAAOjiG,KAAKgiG,6BAA6BD,EAAQG,cAE1C,6BAA6BvhC,GACpC,MAAMn4D,EAASxI,KAAKyD,KAAK+E,OAAO+gC,IAC1B44D,EAA+B,GACrC,IAAK,IAAI3qF,KAAShP,EACjB25F,EAAY7mG,KAAKkc,GAElB2qF,EAAY7mG,KAAK0E,KAAKyD,MACtB,MAAM2+F,EAAcD,EACpB,IAAIE,EAA6B,GACjC,IAAK,IAAIC,KAAcF,EACtBpiG,KAAKuiG,2BAA2BD,EAAY3hC,EAAQ0hC,GAGrD,GAAI1hC,GAAUohC,EAAQE,WACrB,IAAK,IAAIx+F,KAAQzD,KAAKwiG,uBACrBH,EAAW/mG,KAAKmI,GAKlB4+F,EAAaA,EAAWx4E,OAAQ44E,GACxBA,EAAW72E,eAAiB5rB,KAAKyD,KAAKmoB,eAE9C,MAAM82E,EAA8B,UAAeL,EAAavkG,GAAMA,EAAE8tB,eAClE+2E,EAAkC,GAIxC,OAHA1nG,OAAO4W,KAAK6wF,GAA6B9gG,QAASgqB,IACjD+2E,EAAgBrnG,KAAKonG,EAA4B92E,GAAe,MAE1D+2E,EAGA,2BAA2Bl/F,EAAqBk9D,EAAiB0hC,GACxE,MAAMO,EAAan/F,EAAKk9D,KACxB,IAAK,IAAI52C,KAAa64E,EACjB74E,aAAqB,EAAA84E,eACxBR,EAAW/mG,KAAKyuB,EAAUtmB,OA1EuB1G,EA4EnCgtB,GA1E0B,iBAFiB+4E,EA4EhC,EAAAC,sBAzEbhmG,IAF6C+lG,EAIrD/lG,aAJqD+lG,GA4ExDT,EAAW/mG,KAAKyuB,GAEhB/pB,KAAKuiG,2BAA2Bx4E,EAAW42C,EAAQ0hC,IA/ExD,IAAqDtlG,EAAQ+lG,EAoF3D,OAAOT,EASR,mBAAmB7qF,GAClBxX,KAAKgjG,mCAAqChjG,KAAKgjG,oCAAsC,GACrFhjG,KAAKgjG,mCAAmCxrF,EAAMoU,eAAiBpU,EAEhE,sBAAsBA,GACjBxX,KAAKgjG,2CACDhjG,KAAKgjG,mCAAmCxrF,EAAMoU,eAGvD,kBACC,MAAMhjB,EAAO,GACb,GAAI5I,KAAKgjG,mCACR,IAAK,IAAIp3E,KAAiB3wB,OAAO4W,KAAK7R,KAAKgjG,oCAC1Cp6F,EAAKtN,KAAK0E,KAAKgjG,mCAAmCp3E,IAGpD,OAAOhjB,EAER,uBACC,MAAMq6F,EAAkD,GACxD,IAAIx/F,EACJ,IAAK,IAAI+T,KAASxX,KAAKkjG,kBACtBz/F,EAAO+T,EAAM/T,KACbw/F,EAAsBx/F,EAAKmoB,eAAiBnoB,EAE7C,MAAMmF,EAAO,GACb,IAAK,IAAIgjB,KAAiB3wB,OAAO4W,KAAKoxF,GACrCr6F,EAAKtN,KAAK2nG,EAAsBr3E,IAEjC,OAAOhjB,K,kFCzHT,uBAIC,YAAsB4O,GAAA,KAAAA,QAHtB,KAAA2rF,eAAyB,EACzB,KAAAC,sBAAgC,EAChC,KAAAC,qBAA2C,GAG3C,mBACC,OAA2B,IAAvBrjG,KAAKmjG,iBAILnjG,KAAKwX,MAAMpU,MAAMwZ,mBAAmBC,YAQjC7c,KAAKwX,MAAMpU,MAAM6iB,oBAAoB+C,cAG7C,aAKC,OAJAhpB,KAAKmjG,eAAgB,EACjBnjG,KAAKwX,MAAM8rF,aAAetjG,KAAKwX,MAAMoR,YACxC5oB,KAAKwX,MAAMoR,WAAWhnB,QAASjF,GAAMA,EAAEgrB,gBAAgB47E,eAEjD,EAER,eAKC,OAJAvjG,KAAKmjG,eAAgB,EACjBnjG,KAAKwX,MAAM8rF,aAAetjG,KAAKwX,MAAMoR,YACxC5oB,KAAKwX,MAAMoR,WAAWhnB,QAASjF,GAAMA,EAAEgrB,gBAAgB67E,iBAEjD,EAER,oBAEC,OADAxjG,KAAKojG,sBAAuB,GACrB,EAER,sBAEC,OADApjG,KAAKojG,sBAAuB,GACrB,EAGR,gBAAgBp9E,GACfhmB,KAAKqjG,qBAAqBr9E,GAAchmB,KAAKqjG,qBAAqBr9E,IAAe,EACjFhmB,KAAKqjG,qBAAqBr9E,IAAe,EAE1C,aAAaA,GACZ,OAAOhmB,KAAKqjG,qBAAqBr9E,IAAe,EAGjD,KAAK4pB,GACA5vC,KAAKgpB,eACRhpB,KAAKwX,MAAMoQ,KAAKgoB,GAEe,MAA3B5vC,KAAKwX,MAAMgR,eAAsD,IAA9BxoB,KAAKojG,sBAC3CpjG,KAAKwX,MAAMgR,aAAaZ,KAAKgoB,O,8EC1CjC,wBACC,YAAsBp4B,GAAA,KAAAA,QAEtB,UACC,MAAMhd,EAA4B,CACjCqC,KAAMmD,KAAKwX,MAAM3a,KACjB0B,KAAMyB,KAAKwX,MAAMjZ,KACjBipB,UAAWxnB,KAAKwnB,YAChBlqB,MAAO0C,KAAK1C,QACZgzC,WAAYtwC,KAAKswC,aACjB1kB,cAAe5rB,KAAKwX,MAAMoU,cAE1BwT,cAAep/B,KAAKo/B,gBACpBqkE,WAAYzjG,KAAKyjG,aAEjB76E,gBAAYrkB,GAOb,OAJIvE,KAAKwX,MAAM8rF,aAAetjG,KAAKwX,MAAMoR,aACxCpuB,EAAiB,WAAIwF,KAAKwX,MAAMoR,WAAW5jB,IAAK+jC,GAAcA,EAAUnd,gBAGlEpxB,EAGR,YACC,OAAOwF,KAAKwX,MAAM8yB,qBAEnB,QACC,OAAOtqC,KAAKwX,MAAMksF,iBAEnB,a,MACC,OAAO1jG,KAAKwX,MAAMmsF,iBAAmD,QAAjC,EAAC3jG,KAAKwX,MAAM4R,6BAAqB,eAAEknB,gBAAa/rC,EAErF,gBACC,OAAOvE,KAAKwX,MAAMsa,OAAO9T,MAAMlc,QAEhC,aACC,OAAO9B,KAAKwX,MAAM/Y,QAAQglG,c,8ECvD5B,eACA,SAEA,yBAGC,YAAsBjsF,GAAA,KAAAA,QAFtB,KAAA8jF,eAAiB,IAAI,EAAAC,mBAAmBv7F,KAAKwX,OAC7C,KAAAwG,MAAQ,IAAI,EAAAw9E,WAAWx7F,KAAKwX,U,8ECL7B,2BACC,YAAsBA,GAAA,KAAAA,QAEtB,aACC,MAAMosF,EAAsB5jG,KAAKwX,MAAMpU,MAAMq6C,gBAAgB5xB,WAAWD,cAExE,OAAO5rB,KAAKwX,MAAMqsF,wBAAwBlhD,SAASihD,M,8ECPrD,eAIA,mBAEC,YAAoBpsF,GAAA,KAAAA,QAEpB,IAAI1V,GACC9B,KAAK87F,UAAYh6F,IACpB9B,KAAK87F,SAAWh6F,EACZ9B,KAAK87F,UACRz4F,QAAQC,IAAItD,KAAKwX,MAAMnP,YAAarI,KAAK87F,UAE1C97F,KAAKwX,MAAMmQ,gBAAgBC,KAAK,EAAAC,WAAWk0E,gBAG7C,cACC,OAAO/7F,KAAK87F,SAEb,QACC97F,KAAKO,SAAIgE,GAEV,aACC,OAAwB,MAAjBvE,KAAK87F,Y,2FCtBd,QAKA,QAKA,SAGA,QAmBA,yBAqBC,YAAsBr4F,GAAA,KAAAA,OApBd,KAAAqgG,oBAA8B,EAC9B,KAAAC,gBAA6C,GAE7C,KAAAC,aAAgC,GAChC,KAAAC,aAAyB,GACzB,KAAAC,kBAAqC,GACrC,KAAAC,cAAiC,GACjC,KAAAC,uBAAmC,GACnC,KAAAC,mBAA+B,GAI/B,KAAAC,sCAAgD,EAUhD,uBACFtkG,KAAKukG,eAETvkG,KAAKukG,aAAe,IAAI,EAAA7hF,cAAc1iB,KAAKyD,KAAKL,MA1C1B,UA4CtBpD,KAAKyD,KAAKilB,gBAAgB1oB,KAAKukG,eAIjC,OACCvkG,KAAKwkG,uBAELxkG,KAAK8jG,oBAAqB,EAE1B9jG,KAAKykG,0BACLzkG,KAAKyD,KAAKihG,gBACV1kG,KAAK2kG,sBAEE,sBACP3kG,KAAK4kG,iBAEL5kG,KAAK6kG,uBACL7kG,KAAK8jG,oBAAqB,EAE1B9jG,KAAK8kG,8BAcN,cAAcrmG,GACb,IAAIsmG,GAAsB,EACtBC,GAAsB,EAC1B,GAAIvmG,EAAQihC,gBACX,IAAK,IAAI7iC,KAAQ4B,EAAQihC,gBACpB1/B,KAAK+6B,IAAIl+B,KACZmD,KAAKilG,aAAapoG,GAClBmoG,GAAsB,GAIzB,GAAIvmG,EAAQqhC,OACX,IAAK,IAAIolE,KAAczmG,EAAQqhC,OAAQ,CACxB9/B,KAAKklB,UAClBggF,EAAW3mG,KACX2mG,EAAWroG,KACXqoG,EAAW1mG,WACX0mG,EAAWzmG,WAGXsmG,GAAsB,IAKrBC,GAAuBD,KAC1B/kG,KAAK4kG,iBACL5kG,KAAK6kG,uBAEL7kG,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAUkvB,iBAG3B,2BACCzmC,KAAK4kG,iBACL5kG,KAAK6kG,uBAGE,0BACP,MAAM77F,EAAgBhJ,KAAKyD,KAAKuF,cAChC,GAAIA,EACH,IAAK,IAAInM,KAAQ5B,OAAO4W,KAAK7I,GAAgB,CAC5C,MAAMwkF,EAASxkF,EAAcnM,GAC7BmD,KAAKklB,UAAUsoE,EAAOjvF,KAAM1B,EAAM2wF,EAAOhvF,WAAYgvF,EAAO/uF,UAIvD,uBACP,IAAI0mG,EAA4BlqG,OAAOmqG,oBAAoBplG,KAAKyD,KAAKmc,IACrE5f,KAAKqlG,2BAA2BF,GAEhCA,EAA4BlqG,OAAOmqG,oBAAoBplG,KAAKyD,KAAKmc,IAEjE,IAAK,IAAIpI,KAASxX,KAAKupC,IAAK,CAC3B,MAAMU,EAAoBzyB,EAAM/Y,QAAQwrC,WAEJk7D,EAA0BxiD,SAASnrC,EAAM3a,OAE3CotC,KACjChvC,OAAO+B,eAAegD,KAAKyD,KAAKmc,GAAIpI,EAAM3a,KAAM,CAC/CK,IAAK,IACGsa,EAAMla,MAGdgoG,aAAcr7D,IAEfhvC,OAAO+B,eAAegD,KAAKyD,KAAKxF,EAAGuZ,EAAM3a,KAAM,CAC9CK,IAAK,IACGsa,EAER8tF,aAAcr7D,MAKV,2BAA2Bk7D,GAClC,MAAMlmE,EAAsBj/B,KAAKikG,aAC3BsB,EAAkB,GACxB,IAAK,IAAIC,KAA4BL,EAC/BlmE,EAAoB0jB,SAAS6iD,IACjCD,EAAgBjqG,KAAKkqG,GAIvB,IAAK,IAAIC,KAAkBF,EAC1BtqG,OAAO+B,eAAegD,KAAKyD,KAAKmc,GAAI6lF,EAAgB,CACnDvoG,IAAK,OAGLooG,cAAc,IAEfrqG,OAAO+B,eAAegD,KAAKyD,KAAKxF,EAAGwnG,EAAgB,CAClDvoG,IAAK,OAGLooG,cAAc,IAKjB,kBACC,OAAOtlG,KAAKukG,aAEb,UACC,OAAOvkG,KAAKgkG,aAEb,gBACC,OAAOhkG,KAAKkkG,kBAEb,YACC,OAAOlkG,KAAKmkG,cAEb,YACC,OAAOnkG,KAAKikG,aAEb,sBACC,OAAOjkG,KAAKokG,uBAEb,kBACC,OAAOpkG,KAAKqkG,mBAUL,cAAmCxnG,EAAcS,EAAkCiB,GAC1F,MAAMiZ,EAAQxX,KAAK0lG,gBAAgB7oG,EAAM0B,GACrCiZ,EACHA,EAAMjX,IAAIjD,GAEV+F,QAAQiE,KAAK,SAASzK,yBAA4B0B,KAGpD,UAAU1B,EAAcS,GACvB0C,KAAK2lG,cAAc9oG,EAAMS,EAAO,EAAAoB,UAAUI,OAE3C,YAAYjC,EAAcS,GACzB0C,KAAK2lG,cAAc9oG,EAAMS,EAAO,EAAAoB,UAAUc,SAG3C,UAAU3C,GACT,OAAqC,MAA9BmD,KAAK+jG,gBAAgBlnG,GAE7B,IAAIA,GACH,OAAOmD,KAAKomC,UAAUvpC,GAEvB,IAAIA,GACH,OAAOmD,KAAKwX,MAAM3a,GAEnB,gBAAqCA,EAAc0B,GAClD,MAAMiZ,EAAQxX,KAAKwX,MAAM3a,GACzB,GAAI2a,GAASA,EAAMjZ,MAAQA,EAC1B,OAAOiZ,EAGT,UAAU3a,GACT,OAAOmD,KAAK0lG,gBAAgB7oG,EAAM,EAAA6B,UAAUI,OAE7C,kBAAkBjC,GACjB,OAAOmD,KAAK0lG,gBAAgB7oG,EAAM,EAAA6B,UAAUO,eAE7C,MAAMpC,G,MACL,OAAuB,QAAvB,EAAOmD,KAAKwX,MAAM3a,UAAK,eAAES,MAE1B,gBAAqCT,EAAc0B,G,MAClD,OAAuC,QAAhC,EAAAyB,KAAK0lG,gBAAgB7oG,EAAM0B,UAAK,eAAEjB,MAM1C,QAAQT,GACP,OAAOmD,KAAK4lG,gBAAgB/oG,EAAM,EAAA6B,UAAUE,SAE7C,MAAM/B,GACL,OAAOmD,KAAK4lG,gBAAgB/oG,EAAM,EAAA6B,UAAUI,OAE7C,QAAQjC,GACP,OAAOmD,KAAK4lG,gBAAgB/oG,EAAM,EAAA6B,UAAUM,SAE7C,OAAOnC,GACN,OAAOmD,KAAK4lG,gBAAgB/oG,EAAM,EAAA6B,UAAUY,QAE7C,QAAQzC,GACP,OAAOmD,KAAK4lG,gBAAgB/oG,EAAM,EAAA6B,UAAUa,SAE7C,QAAQ1C,GACP,OAAOmD,KAAK4lG,gBAAgB/oG,EAAM,EAAA6B,UAAUc,SAE7C,MAAM3C,GACL,OAAOmD,KAAK4lG,gBAAgB/oG,EAAM,EAAA6B,UAAUG,OAG7C,MAAMhC,GACL,MAAMoB,EAAI+B,KAAK+jG,gBAAgBlnG,GAC/B,OAAS,MAALoB,EACIA,GAEPoF,QAAQiE,KACP,0BAA0BzK,cAAiBmD,KAAKyD,KAAK4E,yCACpDrI,KAAKk/B,iBACMl/B,KAAKyD,KAAK4E,eAEhB,MAcD,aAAakiB,GACpB,MAAM/S,EAAQxX,KAAK+jG,gBAAgBx5E,GACnC,IAAI/S,EAmBH,MAAM,IAAIo5B,MAAM,UAAUrmB,6BAAsCvqB,KAAKyD,KAAK4E,eAb1E,GALIrI,KAAKukG,cACRvkG,KAAKukG,aAAa57E,mBAAmB3oB,KAAK+jG,gBAAgBx5E,IAE3D/S,EAAMqR,SAAS,aACR7oB,KAAK+jG,gBAAgBx5E,GACxB/S,EAAM8rF,aAAe9rF,EAAMoR,WAC9B,IAAK,IAAImgB,KAAavxB,EAAMoR,WAAY,CACvC,MAAMi9E,EAAa98D,EAAUlsC,YACtBmD,KAAK+jG,gBAAgB8B,IAchC,UACCtnG,EACA1B,EACA2B,EACAC,EAAwB,IAExB,MAAMwrC,EAAWxrC,EAAe,QAAK,GACL,IAA5BuB,KAAK8jG,oBAAiC75D,GACzC5mC,QAAQiE,KACP,QAAQtH,KAAKyD,KAAK4E,gBACjBrI,KAAKyD,KAAKlF,gBACC1B,iDAGS,MAAnBmD,KAAKyD,KAAKL,OACbC,QAAQiE,KAAK,QAAQtH,KAAKyD,KAAK4E,gBAAgBrI,KAAKyD,KAAKlF,+BAG1D,MAAMwV,EAAc,EAAAg8C,uBAAuBxxD,GAC3C,GAAmB,MAAfwV,EAAqB,CACxB,MAAM+xF,EAAiB9lG,KAAK+jG,gBAAgBlnG,GACxCipG,IACC77D,EAGC67D,EAAevnG,MAAQA,GAC1ByB,KAAKilG,aAAaa,EAAejpG,MAIlCwG,QAAQiE,KAAK,iBAAiBzK,mBAAuBmD,KAAKyD,OAG5D,MAAM+T,EAAgC,IAAIzD,EAAY/T,KAAKyD,KAAKL,OAYhE,GAXAoU,EAAM/Y,QAAQ8B,IAAI9B,GAElB+Y,EAAM8M,SAASznB,GACf2a,EAAMyxB,eAAezqC,GACrBgZ,EAAMuuF,kBACNvuF,EAAMjX,IAAI/B,GACVgZ,EAAMqR,SAAS7oB,KAAKyD,MAEpBzD,KAAK+jG,gBAAgBvsF,EAAM3a,MAAQ2a,EAG/BA,EAAM8rF,aAAe9rF,EAAMoR,WAC9B,IAAK,IAAImgB,KAAavxB,EAAMoR,WAC3B5oB,KAAK+jG,gBAAgBh7D,EAAUlsC,MAAQksC,EAMzC,OAFA/oC,KAAKskG,sCAAuC,EAErC9sF,GAID,iBACPxX,KAAKgkG,aAAe/oG,OAAO6J,OAAO9E,KAAK+jG,iBACvC/jG,KAAKikG,aAAehpG,OAAO4W,KAAK7R,KAAK+jG,iBACrC/jG,KAAKkkG,kBAAoBjpG,OAAO6J,OAAO9E,KAAK+jG,iBAAiBl6E,OAAQ5rB,IAAOA,EAAEQ,QAAQwrC,UACtFjqC,KAAKmkG,cAAgBlpG,OAAO6J,OAAO9E,KAAK+jG,iBAAiBl6E,OAAQ5rB,GAAMA,EAAEQ,QAAQwrC,UACjFjqC,KAAKokG,uBAAyBnpG,OAAO6J,OAAO9E,KAAK+jG,iBAC/Cl6E,OAAQ5rB,IAAOA,EAAEQ,QAAQwrC,UACzBjlC,IAAK/G,GAAMA,EAAEpB,MACfmD,KAAKqkG,mBAAqBppG,OAAO6J,OAAO9E,KAAK+jG,iBAC3Cl6E,OAAQ5rB,GAAMA,EAAEQ,QAAQwrC,UACxBjlC,IAAK/G,GAAMA,EAAEpB,MAGV,YAAY2a,G,mDAIeA,EAAM8C,iBACP9C,EAAM8xB,UAEhC9xB,EAAMsa,OAAO9T,MAAMvd,QACtBT,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,UAAUiX,EAAM3a,gBAAgB2a,EAAMsa,OAAO9T,MAAMlc,eAS3E,YAAY0G,G,mDACjB,MAAM6gC,EAAW,GACjB,IAAK,IAAIvuC,EAAI,EAAGA,EAAI0N,EAAOxN,OAAQF,IAC9B0N,EAAO1N,GAAGwf,UACb+uB,EAAS/tC,KAAK0E,KAAKgmG,YAAYx9F,EAAO1N,WAGlCmtB,QAAQshB,IAAIF,GAEdrpC,KAAKyD,KAAKquB,OAAO9T,MAAMvd,QAC1BT,KAAKyD,KAAKtC,cAAc,SAIpB,W,mDACDnB,KAAKukG,eACJvkG,KAAKukG,aAAajqF,UAAYta,KAAKskG,8CAChCtkG,KAAKimG,YAAYjmG,KAAKgkG,cAE5BhkG,KAAKukG,aAAalqF,qBAClBra,KAAKskG,sCAAuC,MAU/C,4BAA4BpsD,GAC3Bl4C,KAAKkmG,yBAA2BhuD,EAEjC,uBAAuBr7C,EAAc8jE,GACpC3gE,KAAKmmG,0BAA4BnmG,KAAKmmG,2BAA6B,GACnEnmG,KAAKomG,qBAAuBpmG,KAAKomG,sBAAwB,GAEpDpmG,KAAKmmG,0BAA0BxjD,SAAS9lD,GAI5CwG,QAAQiE,KAAK,kBAAkBzK,mBAAuBmD,KAAKyD,OAH3DzD,KAAKmmG,0BAA0B7qG,KAAKuB,GACpCmD,KAAKomG,qBAAqB9qG,KAAKqlE,IAKjC,8BACK3gE,KAAKkmG,0BACRlmG,KAAKkmG,2BAGP,0BACC,GAAIlmG,KAAKomG,qBACR,IAAK,IAAIluD,KAAQl4C,KAAKomG,qBACrBluD,O,2FCheJ,2BACA,4BAEA,2BACA,SACA,QACA,QAIA,MAAa8X,UAAqB,EAAAjgB,kBACjC,cACC,OAAO,EAAArxC,UAAUE,QAGlB,+BACC,OAAI,UAAgBoB,KAAK4S,eACjB5S,KAAK4S,cAEL5S,KAAKiwC,QAAQjwC,KAAK4S,iBAAkB,EAG7C,2BACC,OAAO5S,KAAKqnB,WAEb,uBACC,OAAOrnB,KAAK1C,MAEb,2BACC27B,EACAC,GAEA,OAAOD,GAAcC,EAEtB,wBAAwBjS,EAA6CC,GACpE,OAAOD,GAAQC,EAEhB,QAAQF,GACP,GAAI,UAAiBA,GACpB,OAAOA,EAEP,GAAI,UAAgBA,GACnB,OAAOA,GAAW,EAElB,GAAI,UAAgBA,GAAU,CAC7B,GAAI,EAAApiB,WAAWyhG,WAAWr/E,GACzB,OAAO,EAAApiB,WAAW0hG,WAAWt/E,GAE7B,GAAI,EAAApiB,WAAW4uD,UAAUxsC,GAAU,CAElC,OADeysC,WAAWzsC,IACT,GAMtB,OAAO,MA9CT,kB,2FCTA,SAIA,SACA,SACA,SACA,QAEA,0BASC,YACQxP,GAAA,KAAAA,QATD,KAAA+uF,iBAA2B,EAC1B,KAAAC,eAAyB,EAKzB,KAAAC,YAA0B,IAAI,EAAAhrD,WAKrCz7C,KAAK0mG,mBAAqB,IAAI,EAAAC,kBAAkB3mG,KAAKwX,OACrDxX,KAAK4mG,wBAA0B,IAAI,EAAAnjF,uBAAuBzjB,KAAKwX,OAGhE,iBAAiB84B,GAChB,GAAItwC,KAAKwmG,cACR,MAAM,IAAI51D,MAAM,+BAA+B5wC,KAAKwX,MAAMnP,eAE3DrI,KAAKwmG,eAAgB,EACrBxmG,KAAKumG,iBAAkB,EACvBvmG,KAAKymG,YAAczmG,KAAKymG,aAAe,IAAI,EAAAhrD,WAE3Cz7C,KAAK2I,QACD3I,KAAKwX,MAAMjZ,MAAQ,EAAAG,UAAUY,OAChCU,KAAKymG,YAAYI,kCAAkCv2D,GAEnDtwC,KAAKymG,YAAY31C,iBAAiBxgB,GAEnCtwC,KAAK0mG,mBAAmBI,WAAW9mG,KAAKymG,aAEK,MAAzCzmG,KAAK0mG,mBAAmBtnE,gBAC3Bp/B,KAAK4mG,wBAAwBruE,OAAOv4B,KAAK0mG,oBACrC1mG,KAAK4mG,wBAAwBxnE,cAChCp/B,KAAKwX,MAAMsa,OAAO9T,MAAMzd,IAAIP,KAAK4mG,wBAAwBxnE,gBAEzDp/B,KAAKumG,iBAAkB,EACvBvmG,KAAKwmG,eAAgB,IAMlB,mB,mDAEL,IAAIxmG,KAAK+mG,kBAWR,OAAO,IAAI9+E,QAAQ,CAACC,EAASC,KAC5BD,EAAQ,QAXT,IAEC,aADwBloB,KAAK0mG,mBAAmBM,gBAE/C,MAAOx3F,GAIR,OAAO,IAAIyY,QAAQ,CAACC,EAASC,IAAWD,SAS3C,QACCloB,KAAKumG,iBAAkB,EACvBvmG,KAAKwmG,eAAgB,EAGrBxmG,KAAK4mG,wBAAwBj+F,QAE7B3I,KAAK0mG,mBAAmB/9F,QAGzB,iBACC,OAAO3I,KAAK0mG,mBAAmBh2D,WAEhC,oBACC,OAAO1wC,KAAK0mG,mBAAmBtnE,cAGxB,kBACP,OAA0Cp/B,KAAK0mG,mBAAmBO,eAmBnE,4CACCjnG,KAAKknG,4BACJlnG,KAAKknG,6BAA+B,IAAI,EAAAC,0BAA0BnnG,KAAKwX,OAExE,MAAM4vF,EAAwBpnG,KAAKknG,4BAA4BJ,WAAW9mG,KAAKymG,aAE3EW,EACHpnG,KAAKwX,MAAMjX,IAAI6mG,GAEf/jG,QAAQiE,KAAK,sC,4FCpHhB,SAEA,SACA,SACA,2BAwCM+/F,EAA6C,CAClDC,YAAa,UAGd,SACMC,EAAiBtsG,OAAO4W,KAAK,EAAAwd,QAK7Bm4E,EAA6C,GAzCvB,CAC3B,MACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,MACA,OACA,MACA,QACA,QACA,MACA,QACA,OACA,QACA,MACA,MACA,MACA,QACA,OACA,MACA,OACA,OACA,MACA,QAcmB5lG,QAAS/E,IAC5B2qG,EAA4B3qG,GAAQ,QAAQA,MAbb,CAAC,OAAQ,QAAS,QAAS,SAenC+E,QAAS/E,IAChC2qG,EAA4B3qG,GAAQ,QAAQA,MAE7C5B,OAAO4W,KAAKw1F,GAA6BzlG,QAAS/E,IACjD,MAAM4qG,EAAUJ,EAA4BxqG,GAC5C2qG,EAA4B3qG,GAAQ,QAAQ4qG,MAhBnB,CAAC,MAAO,QAAS,QAAS,UAAW,UAAW,OAAQ,SAkBhE7lG,QAAS/E,IAC1B2qG,EAA4B3qG,GAAQ,aAAaA,MAElD0qG,EAAe3lG,QAAS/E,IACvB2qG,EAA4B3qG,GAAQ,oBAAoBA,MAlB7B,CAAC,aAoBT+E,QAAS/E,IAC5B2qG,EAA4B3qG,GAAQ,eAAeA,MAGpD,MAAM6qG,EAAgD,CACrDn6D,GAAI,EAAAo6D,4BAA4Bp6D,IAG3Bq6D,EAAuC,GA3Bf,CAAC,IAAK,MAAO,OAAQ,SAAU,QAAS,KAAM,UAAW,SA4BjEhmG,QAAS/E,IAC9B+qG,EAAiB/qG,GAAQ,QAAQA,MAGlC,MAAMgrG,EAA6C,EAAAC,aAmBnD,SAEMC,EAAkC,CACvCziG,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHtI,EAAG,EACH8V,EAAG,EACH9C,EAAG,GAOJ,SAEA,SACA,SACA,QAEA,SAEA,MAAaw2F,UAA0B,EAAAqB,cAgBtC,YAAmBxwF,GAClBvR,MAAMuR,GADY,KAAAA,QAbX,KAAAywF,mCAAqC,IAAI,EAAAC,gCAGzC,KAAAC,QAAwB,GACxB,KAAAC,cAAwB,EAEzB,KAAAC,oBAA0C,GAC1C,KAAAC,uBAA0C,GAU1C,WAAW7B,GAGjB,GAFAzmG,KAAK2I,QAE4B,MAA7B89F,EAAYrnE,cAAuB,CACtC,IAIC,GAFAp/B,KAAKioG,mCAAmCt/F,QAEpC89F,EAAYhjG,KAAM,CACrB,MAAM8kG,EAAuBvoG,KAAK46C,cAAc6rD,EAAYhjG,MACxD8kG,IAAyBvoG,KAAK0wC,aACjC1wC,KAAKuoG,qBAAuBA,QAG7BllG,QAAQiE,KAAK,uBAEb,MAAOkI,GACRnM,QAAQiE,KAAK,iCAAiCtH,KAAKwX,MAAMnP,eACzDhF,QAAQiE,KAAKkI,GAGd,GAAIxP,KAAKuoG,qBACR,IACCvoG,KAAKwoG,SAAW,IAAI,EAAAntD,cACnB,OACA,QACA,UACA,wBACA,kCAEEr7C,KAAKyoG,wHAMP,MAAOj5F,GACRnM,QAAQiE,KAAKkI,GACbxP,KAAK26C,UAAU,iCAGhB36C,KAAK26C,UAAU,sCAGhB36C,KAAK26C,UAAU,2BAIjB,QACC10C,MAAM0C,QACN3I,KAAKuoG,0BAAuBhkG,EAC5BvE,KAAKmoG,QAAU,GACfnoG,KAAKooG,cAAgB,EACrBpoG,KAAKwoG,cAAWjkG,EAChBvE,KAAKqoG,oBAAsB,GAC3BroG,KAAKsoG,uBAAyB,GAG/B,gBACC,OAAItoG,KAAKwX,MAAM/Y,QAAQkyD,2BACf,iQAMH3wD,KAAKioG,mCAAmCS,4CACpC1oG,KAAKioG,mCAAmCU,mDAC3C3oG,KAAKioG,mCAAmCW,2JAG9B5oG,KAAKuoG,sTAab,kGAGWvoG,KAAKuoG,4JAWzB,eACC,OAAwB,MAAjBvoG,KAAKwoG,SAEb,gBAIC,GAAIxoG,KAAKwoG,SAAU,CAClBxoG,KAAK6oG,cAEL,MAAMC,EAAO,CACZt8F,KAAM,EAAAyT,SACN8oF,OAAQ,EAAAnkG,YAGT,OADe5E,KAAKwoG,SAASM,EAAM9oG,KAAKwX,MAAOxX,KAAKmoG,QAASnoG,KAAKu6C,8BAU1D,wBAAwB92C,GACjC,MAAMulG,EAAmBvlG,EAAKiuD,UAAU1sD,IAAKikG,GACrCjpG,KAAK46C,cAAcquD,IAGrBvuD,EADSj3C,EAAKkuD,OACO90D,KAC3B,GAAI69C,EAAa,CAEhB,MAAMwuD,EAAmBxB,EAAkBhtD,GAC3C,GAAIwuD,EACH,OAAOA,EAAiBF,GAIzB,MAAMG,EAAmB,GAAGH,EAAiB9jG,KAtLpB,QAuLnBkkG,EAAuB5B,EAA4B9sD,GACzD,GAAI0uD,EACH,MAAO,GAAGA,KAAwBD,KAKnC,GADwBtB,EAA4BntD,GAC/B,CACpB,MAAM2uD,EAAY5lG,EAAKiuD,UAAU,GAE3B43C,EAAkB,UAAUN,EAAiB,KACnD,IAAIO,EACAC,EAAgB,GACpB,IACCD,EAAyB,IAAIlwD,SAASiwD,GACtCE,EAAgBD,IACf,UASF,OADAvpG,KAAKypG,gCAAgC/uD,EAAa8uD,EAAeH,GAC1D,kBAAkBrpG,KAAKooG,oCAAoCe,QAIpEnpG,KAAK26C,UAAU,mBAAmBD,KAEzB,0BAA0Bj3C,GAKnC,MAAO,IAAIzD,KAAK46C,cAAcn3C,EAAKo3C,SAASp3C,EAAKq3C,YAAY96C,KAAK46C,cAAcn3C,EAAKs3C,UAE5E,2BAA2Bt3C,GAMpC,MAAO,IAAIzD,KAAK46C,cAAcn3C,EAAKo3C,SAASp3C,EAAKq3C,YAAY96C,KAAK46C,cAAcn3C,EAAKs3C,UAE5E,0BAA0Bt3C,GACnC,MAAO,GAAGzD,KAAK46C,cAAcn3C,EAAK1F,WAAWiC,KAAK46C,cAAcn3C,EAAKzF,YAE5D,yBAAyByF,GAClC,GAxOuB,MAwOnBA,EAAKq3C,SAA+B,CACvC,IACIjnC,EACA7V,EAFA0rG,EAAWjmG,EAAKimG,SAGpB,OAAQA,EAASnrG,MAChB,IAAK,aAEJsV,EADsC61F,EACD7sG,KACrC,MAED,IAAK,mBAAoB,CACxB,MAAM8sG,EAAuCD,EACvCE,EAAcD,EAA2B5rG,OACzC8rG,EAAgBF,EAA2B3rG,SACjD6V,EAAiB+1F,EAAY/sG,KAC7BmB,EAAW6rG,EAAchtG,KACzB,OAMF,GAAIgX,EAAgB,CAEnB,GADAA,EAAiB,EAAA9B,cAAcC,WAAW6B,GACpB,SAAlBA,EACH,MAAO,wCACD,CACN,MAAMi2F,EAAqB9pG,KAAKioG,mCAAmC6B,mBAClEj2F,GAEKk2F,EAAY/pG,KAAKioG,mCAAmC8B,UAAUl2F,GAEpE,GADA7T,KAAKioG,mCAAmChrF,IAAIpJ,GACxC7V,EAAU,CAEb,MAAO,GAAG+rG,kBAA0BD,KADZ/B,EAAiB/pG,MAGzC,MAAO,GAAG+rG,kBAA0BD,MAKtC,OADAzmG,QAAQiE,KAAK,uBACN,GAGR,MAAO,GAAG7D,EAAKq3C,WAAW96C,KAAK46C,cAAcn3C,EAAKimG,YAI1C,iBAAiBjmG,GAC1B,MAAO,GAAGA,EAAK23C,MAGN,oBAAoB33C,GAE7B,GAD8BA,EAAK5G,KAAK,IACX,EAAAy9C,gBAkB5B,OAAO72C,EAAK5G,KAlBiC,CAC7C,MAAMmtG,EAAsCvmG,EAAK5G,KAAK2R,OAAO,GAGvDy7F,EAAuBrC,EAAiBoC,GAC9C,GAAIC,EACH,OAAOA,EAIR,MAAMvvD,EAAc,uBAAuBsvD,IAE3C,GADgBhqG,KAAa06C,GAE5B,OAAQ16C,KAAa06C,KAErB16C,KAAK26C,UAAU,uBAAuBl3C,EAAK5G,SAYpC,wBAET,OADAmD,KAAKsoG,uBAAuBhtG,KAAK0E,KAAKwX,MAAMpU,MAAMq6C,gBAAgB5xB,YAC3D,oCAEE,0BAET,OADA7rB,KAAKsoG,uBAAuBhtG,KAAK0E,KAAKwX,MAAMpU,MAAMq6C,gBAAgB5xB,YAC3D,kCAEE,wBAET,OADA7rB,KAAKsoG,uBAAuBhtG,KAAK0E,KAAKwX,MAAMpU,MAAMq6C,gBAAgB5xB,YAC3D,mCAEE,yBACT,MAAO,IAAW7rB,KAAKwX,MAAM3a,QAEpB,0BACT,OAAOmD,KAAKkqG,iBAAiB,KAEpB,0BACT,OAAOlqG,KAAKkqG,iBAAiB,KAEpB,0BACT,OAAOlqG,KAAKkqG,iBAAiB,KAMtB,iBAAiBnhE,GACxB,MACMogE,EADmB,CAAC,EAAG,IAAWpgE,MACE7jC,KAxVhB,MA0V1B,OADAlF,KAAKypG,gCAAgC,WAAY,GAC1C,kBAAkBzpG,KAAKooG,oCAAoCe,OAQ3D,gCACPzuD,EACA8uD,EACAH,GAEA,MACM1oC,EAAS,IAAIwpC,EADQtC,EAA4BntD,IACjB16C,KAAKwX,OAC3CxX,KAAKooG,cAAgB,EACrBpoG,KAAKmoG,QAAQnoG,KAAKooG,cAAgBznC,EAElC,MAAMypC,EAAoBzpC,EAAO0pC,gBAAgBb,GAC7CY,GACCf,GACHe,EAAkBE,cAAcjB,GAEjCrpG,KAAKqoG,oBAAoB/sG,KAAK8uG,IAE1Bf,GAAa,UAAgBG,IAChCxpG,KAAKwX,MAAMpU,MAAMy0C,yCAAyC0yD,SACzDvqG,KAAKwX,MACL6xF,EACAG,IA7VL,uB,8EChIA,oCACC,UAAU3xF,GAIT,MAAO,IAHWA,EAAK,UACNA,EAAK,UACJA,EAAK,S,8ECAzB,eAEA,SACA,SACA,SACA,SAMA,SAIA,SAIA,SACA,SAKA,SACA,SACA,SACA,SAEa,EAAAiwF,aAAe,CAE3BlgC,KAAM,EAAA4iC,KACNC,GAAI,EAAAC,GACJC,SAAU,EAAAC,SACVC,QAAS,EAAAC,OACTC,MAAO,EAAAC,MACPC,SAAU,EAAAC,SACVv2F,MAAO,EAAAw2F,MACPxnG,aAAc,EAAAynG,YAEdtrF,KAAM,EAAAurF,KACNC,gBAAiB,EAAAC,cACjBC,WAAY,EAAAC,UACZC,UAAW,EAAAC,SACXC,QAAS,EAAAC,S,2FCnDV,QAEA,OAYMC,EAA2C,CAAC,MAAO,MAAO,OAAQ,UAClEC,EAAkB,CAAC,IAAK,IAAK,KAEnC,MAAavB,UAAa,EAAAwB,WAGzB,4BACC,MAAO,CACN,CAAC,SAAU,gBACX,CAAC,SAAU,yCACX,CAAC,SAAU,6BAIb,gBAAgBl0F,GACf,OAAO9X,KAAKisG,qCAAqCn0F,GAGlD,kBAAkBD,GACjB,IAAIva,EAAQ,EACZ,OAAO,IAAI2qB,QAAQ,CAAOC,EAASC,IAAW,EAAD,0CAC5C,GAAmB,GAAftQ,EAAK7c,OAAa,CACrB,MAAM8c,EAAgBD,EAAK,GACrBq0F,EAAcr0F,EAAK,GACnBixB,EAAiBjxB,EAAK,GAE5B,IAAI9V,EAAsC,KAC1C,IACCA,QAAmB/B,KAAKmsG,8BAA8Br0F,GACrD,MAAOtI,GACR2Y,EAAO3Y,GAEJzN,IACHzE,EAAQ0C,KAAKosG,0BAA0BrqG,EAAWmqG,EAAapjE,GAC/D5gB,EAAQ5qB,SAGT4qB,EAAQ,OAKH,0BACPnmB,EACAmqG,EACApjE,GAEA,GAAIgjE,EAAaxiG,QAAQ4iG,IAAgB,EAAG,CAC3C,MAAMtkC,EAAO7lE,EAAU0lE,eAEvB,IAAImZ,EAAS,IAAI,EAAAxtE,QACjB,OAAQ84F,GACP,IAAK,OACJtkC,EAAKD,QAAQiZ,GACb,MACD,IAAK,SACJhZ,EAAKF,UAAUkZ,GACf,MACD,QACCA,EAAShZ,EAAKskC,GAGhB,OAAIH,EAAgBziG,QAAQw/B,IAAmB,EAEvC83C,EAAO93C,IAEN,EAGT,OAAQ,GAlEX,U,oFCjBA,E,KAAA,uBAGA,QAMA,MAAalwB,UAAyB,EAAA8J,cAMrC,YACQlL,EACAgyF,EACArxF,GAEPlS,MAAMuR,EAAMpU,MAAO,oBAJZ,KAAAoU,QACA,KAAAgyF,gBACA,KAAArxF,kBALA,KAAAk0F,+BAAiCrsG,KAAKssG,yBAAyBzuG,KAAKmC,MAW3EA,KAAKwa,oBAAoB,2BAA4Bxa,KAAKqsG,gCAE3D,yBAAyBnyF,GACxB,GAAIA,GAAWla,KAAKmY,gBAAiB,CACpC,MAAM1U,EAAOyW,EACbla,KAAKmY,gBAAgBo0F,wBAAwB9oG,GAC7C,MAAM+oG,EAAWxsG,KAAKmY,gBAAgBs0F,UAEhCC,EAAU1sG,KAAK2sG,UACjBD,IACHA,EAAQpvG,MAAQ,GAAGovG,EAAQpvG,QAAQ2Q,QAAQ,GAAGjO,KAAKwpG,gBAAiBgD,GACpEE,EAAQtxD,IAAMsxD,EAAQtxD,IAAIntC,QAAQ,GAAGjO,KAAKwpG,gBAAiBgD,IAExDxsG,KAAKwX,MAAM4R,uBACdppB,KAAKwX,MAAM4R,sBAAsB2nC,6CAIpC,QACC/wD,KAAK4sG,gCAGN,0BACK5sG,KAAK2sG,WAAa3sG,KAAKmY,iBAC1BnY,KAAKmY,gBAAgB45C,YAAYnwD,QAASirG,IACzC,GAAIA,EAAc,CACjB,MAAMppG,EAAOopG,EACTppG,EAAKiY,iBACR1b,KAAK0oB,gBAAgBjlB,EAAKiY,gBAAgBmQ,eAO/C,cAAc8gF,GACb3sG,KAAK2sG,UAAYA,EAElB,wBAAwBlpG,GACvBzD,KAAK8sG,oBAAsBrpG,EAE5B,oBAAoByU,GACnBlY,KAAK+sG,gBAAkB70F,EAGxB,cACCV,EACAM,EACArU,EACA0U,GAEA,MAAM60F,EAAW,UAAgBl1F,GAW3Bo9B,EAAW,IAAIt8B,EAAiBpB,EAAOM,EAAeK,GAC5D,GAAI1U,EACHyxC,EAAS+3D,wBAAwBxpG,QAEjC,IAAKupG,EAAU,CACd,MAAM90F,EAAOJ,EACbo9B,EAASg4D,oBAAoBh1F,GAG/B,OAAOg9B,GAtFT,sB,2FCTA,QAKA,MAAa01D,UAAiB,EAAAoB,WAG7B,4BACC,MAAO,CACN,CAAC,SAAU,gBACX,CAAC,SAAU,6BAIb,gBAAgBl0F,GACf,OAAO9X,KAAKisG,qCAAqCn0F,GAGlD,kBAAkBD,GACjB,OAAO,IAAIoQ,QAAQ,CAAOC,EAASC,IAAW,EAAD,0CAK5C,GAAmB,GAAftQ,EAAK7c,OAAa,CACrB,MAAM8c,EAAgBD,EAAK,GACrBixB,EAAiBjxB,EAAK,GAC5B,IAAI9V,EAAsC,KAC1C,IACCA,QAAmB/B,KAAKmsG,8BAA8Br0F,GACrD,MAAOtI,GACR2Y,EAAO3Y,GAGR,GAAIzN,EAAW,CACd,MAAM6lE,EAAO7lE,EAAU0lE,eAMjBnqE,EALSsqE,EAAKl8C,IAClB3oB,QACAka,IAAI2qD,EAAKn7D,KACTsT,eAAe,IAEI+oB,GAEpB5gB,EADY,MAAT5qB,EACKA,EAGA,SAIV4qB,EAAQ,QA9CZ,c,2FCHA,QACA,SAIA,MAAawiF,UAAW,EAAAsB,WAKvB,4BACC,MAAO,CAAC,CAAC,SAAU,kBAOpB,gBAAgBl0F,GACf,MAAMK,EAAkB,IAAI,EAAAM,eACtBjB,EAAQxX,KAAKmtG,qBAAqBr1F,EAAyBK,GACjE,OAAIX,EACIxX,KAAK2Y,kBAAkBnB,EAAOM,EAAeK,IAEpD9U,QAAQiE,KAAK,wBAEP,MAcF,kBAAkBuQ,G,mDACvB,IAAIpJ,EAAW,EACf,GAAmB,GAAfoJ,EAAK7c,OAAa,CACrB,MAAMkd,EAAOL,EAAK,GACZu1F,EAAMptG,KAAKmtG,qBAAqBj1F,GACtC,GAAIk1F,EAAK,OACFA,EAAI9jE,UACV,MAAMztC,EAASuxG,EAAI9vG,MACL,MAAVzB,IAEH4S,EAAM5S,IAKT,OAAO4S,MAlDT,Q,8ECPA,cAEA,SAIA,MAAa48F,UAAa,EAAAW,WACzB,4BACC,MAAO,CACN,CAAC,SAAU,gBACX,CAAC,UAAW,kBAGd,4BACC,MAAO,CAAC,CAAC,SAAU,8BAGpB,gBAAgBl0F,GACf,MAAMrU,EAAOzD,KAAK0Y,2BAA2BZ,GAG7C,GAAIrU,GAAqB,QAAbA,EAAKlF,KAAgB,CAChC,MAAM8uG,EAAc5pG,EAAqB4pG,WACzC,OAAOrtG,KAAK2Y,kBAAkB00F,EAAYv1F,GAE3C,OAAO,KAQR,kBAAkBD,GACjB,OAAO,IAAIoQ,QAAQ,CAACC,EAASC,KAC5B,GAAmB,GAAftQ,EAAK7c,QAA8B,GAAf6c,EAAK7c,OAAa,CACzC,MAAMkd,EAAOL,EAAK,GACZjF,EAAgBiF,EAAK,GACrBhE,EAAiBgE,EAAK,GAEtBpU,EAAO,EAAA2U,WAAWG,UAAUvY,KAAKyD,KAAMyU,GAE7C,IAAI5a,EACAmG,GAAqB,QAAbA,EAAKlF,OAChBjB,EAASmG,EAAqB6pG,YAAYz5F,IAM9B,MAATvW,IACHA,EAAQsV,GAETsV,EAAQ5qB,QAER4qB,EAAQ,MAjDZ,U,2FCNA,QAIA,MAAa4iF,UAAe,EAAAkB,WAG3B,4BACC,MAAO,CACN,CAAC,SAAU,gBACX,CAAC,SAAU,2BAIb,gBAAgBl0F,GACf,OAAO9X,KAAKisG,qCAAqCn0F,GAG5C,kBAAkBD,G,mDACvB,IAAIva,EAAQ,EACZ,GAAmB,GAAfua,EAAK7c,OAAa,CACrB,MAAM8c,EAAgBD,EAAK,GACrBixB,EAAiBjxB,EAAK,GACtB9V,QAAmB/B,KAAKmsG,8BAA8Br0F,GAE5D,GAAI/V,EAAW,CACd,MAAMwrG,EAAaxrG,EAAUwrG,aACzB,CAAC,EAAG,IAAK,KAAK5qD,SAAS7Z,GAC1BxrC,EAAQiwG,EAAW,GAEf,CAAC,EAAG,IAAK,KAAK5qD,SAAS7Z,KAC1BxrC,EAAQiwG,EAAW,KAKvB,OAAOjwG,MAhCT,Y,8ECJA,cACA,QAEA,MAAa0tG,UAAc,EAAAgB,WAK1B,4BACC,MAAO,CAAC,CAAC,SAAU,SAGpB,kBAAkBn0F,GACjB,OAAO,IAAIoQ,QAAQ,CAACC,EAASC,KAC5BnoB,KAAKwtG,kBAAkB31F,EAAK,IAAIwe,KAAM+N,IACrClc,EAAQkc,OASX,kBAAkBvnC,GACjB,OAAO,IAAIorB,QAAQ,CAACC,EAASC,KAI5B,IAAIic,EAEJ,MAAMqpE,EAAqB,EAAA50F,KAAKq8B,WAAWu4D,qBAC3C,IAAIA,EAAmBhtG,SAKtB,OAAOynB,EAAQ,IAJfulF,EAAmBC,eAAe7wG,EAAMmD,KAAKwX,OAC7C4sB,EAAMqpE,EAAmBE,sBAAsB9wG,GAC/CqrB,EAAQkc,MAhCZ,W,8ECHA,cAIA,QAGA,MAAa8mE,UAAiB,EAAAc,WAC7B,4BACC,MAAO,CAAC,CAAC,SAAU,iBAGpB,gBAAgBl0F,GACf,MAAM+T,EAAa7rB,KAAK0Y,2BAA2BZ,GACnD,GAAI+T,EAAY,CACf,MAAMpoB,EAAOooB,EACb,GAAIpoB,EAAKiY,gBAAiB,CACzB,MAAMkyF,EAAYnqG,EAAKiY,gBAAgBmQ,WACvC,OAAO7rB,KAAK2Y,kBAAkBi1F,EAAW91F,IAG3C,OAAO,KAYR,kBAAkBD,GACjB,OAAO,IAAIoQ,QAAQ,CAACC,EAASC,KAC5B,GAAmB,GAAftQ,EAAK7c,OAAa,CACrB,MAAM8c,EAAgBD,EAAK,GACrBpU,EAAOzD,KAAKgY,oBAAoBF,GACtC,GAAIrU,EAAM,CACT,MAAM5G,EAAO4G,EAAK5G,KAElBqrB,EADc,EAAAtjB,WAAWipG,YAAYhxG,SAGrCqrB,EAAQ,QAGTA,EAAQ,MAvCZ,c,2FCPA,QAKA,MAAaijF,UAAc,EAAAa,WAC1B,4BACC,MAAO,CACN,CAAC,SAAU,gBACX,CAAC,QAAS,eACV,CAAC,SAAU,mBAIb,gBAAgBl0F,GACf,OAAO9X,KAAKisG,qCAAqCn0F,GAGlD,kBAAkBD,GACjB,OAAO,IAAIoQ,QAAQ,CAAOC,EAASC,IAAW,EAAD,0CAC5C,GAAmB,GAAftQ,EAAK7c,OAAa,CACrB,MAAM8c,EAAgBD,EAAK,GACrBxF,EAAcwF,EAAK,GACnBnD,EAAcmD,EAAK,GACzB,IAAI9V,EAAsC,KAC1C,IACCA,QAAmB/B,KAAKmsG,8BAA8Br0F,GACrD,MAAOtI,GACR2Y,EAAO3Y,GAER,GAAIzN,EAAW,CACd,MAAMzE,EAAQ0C,KAAKosG,0BAA0BrqG,EAAWsQ,EAAaqC,GACrEwT,EAAQ5qB,SAGT4qB,EAAQ,OAKX,0BAA0BnmB,EAA8BsQ,EAAqBqC,GAC5E,MAAM1T,EAAae,EAAUC,eAE7B,GAAIhB,EAAY,CACf,MAAM2T,EAAQ3T,EAAWwT,SAASE,GAElC,OAAIC,EACIA,EAAMW,aAAajD,GAEnB,EAGR,OAAO,MA/CV,W,2FCLA,QAKA,MAAa+4F,UAAoB,EAAAY,WAGhC,4BACC,MAAO,CAAC,CAAC,SAAU,iBAGpB,gBAAgBl0F,GACf,OAAO9X,KAAKisG,qCAAqCn0F,GAGlD,kBAAkBD,GACjB,OAAO,IAAIoQ,QAAQ,CAAOC,EAASC,IAAW,EAAD,0CAC5C,GAAmB,GAAftQ,EAAK7c,OAAa,CACrB,MAAM8c,EAAgBD,EAAK,GAC3B,IAAI9V,EACJ,IACCA,QAAmB/B,KAAKmsG,8BAA8Br0F,GACrD,MAAOtI,GAER,YADA2Y,EAAO3Y,GAIR,GAAIzN,EAAW,CACd,MAAMzE,EAAQyE,EAAU4B,eACxBukB,EAAQ5qB,SAGT4qB,EAAQ,QA5BZ,iB,2FCLA,QAGA,MAAaqjF,UAAsB,EAAAS,WAElC,4BACC,MAAO,CAAC,CAAC,SAAU,kCAQd,kBAAkBn0F,G,mDACvB,IAAIva,EAAQ,EACZ,GAAmB,GAAfua,EAAK7c,OAAa,CAErBsC,EADeua,EAAK,GACL7c,OAEhB,OAAOsC,MAjBT,mB,2FCHA,QAGA,MAAamuG,UAAkB,EAAAO,WAI9B,4BACC,MAAO,GAYF,kBAAkBn0F,G,mDACvB,IAAIva,EAAQ,GAEZ,IAAK,IAAI2rG,KAAOpxF,EACJ,MAAPoxF,IACHA,EAAM,IAEP3rG,GAAS,GAAG2rG,IAGb,OAAO3rG,MA3BT,e,2FCHA,QAGA,MAAaquG,UAAiB,EAAAK,WAE7B,4BACC,MAAO,CACN,CAAC,SAAU,4BACX,CAAC,SAAU,0BASP,kBAAkBn0F,G,mDACvB,IAAIva,GAAS,EACb,GAAmB,GAAfua,EAAK7c,OAAa,CACrB,MAAMy2D,EAAS55C,EAAK,GACdi2F,EAAaj2F,EAAK,GACxBva,EAAQm0D,EAAOnoD,QAAQwkG,GAExB,OAAOxwG,MArBT,c,2FCHA,QAGA,MAAauuG,UAAe,EAAAG,WAE3B,4BACC,MAAO,CACN,CAAC,SAAU,4BACX,CAAC,UAAW,eACZ,CAAC,UAAW,eASR,kBAAkBn0F,G,mDACvB,IAAIva,EAAQ,GACZ,MAAMm0D,EAAS55C,EAAK,GACdk2F,EAAcl2F,EAAK,IAAM,EAC/B,IAAIm2F,EAAan2F,EAAK,IAAM,EAI5B,OAHI45C,IACHn0D,EAAQm0D,EAAOjjD,OAAOu/F,EAAaC,IAE7B1wG,MAvBT,Y,8ECHA,MAAa4qG,EAEZ,eAEA,QACKloG,KAAKiuG,kBACRjuG,KAAKiuG,iBAAiBtwF,QAGxB,0B,MACC,GAAI3d,KAAKiuG,iBAAkB,CAC1B,MAAM76E,EAAkB,GAIxB,OAHqB,QAArB,EAAApzB,KAAKiuG,wBAAgB,SAAErsG,QAASiS,IAC/Buf,EAAM93B,KAAK4sG,EAAgCgG,sBAAsBr6F,MAE3Duf,EAAMluB,KAAK,OAElB,MAAO,GAGT,sB,MACC,GAAIlF,KAAKiuG,iBAAkB,CAC1B,MAAM76E,EAAkB,GAKxB,OAJqB,QAArB,EAAApzB,KAAKiuG,wBAAgB,SAAErsG,QAASiS,IAC/Buf,EAAM93B,KAAK4sG,EAAgCiG,sBAAsBt6F,IACjEuf,EAAM93B,KAAK4sG,EAAgCkG,kBAAkBv6F,MAEvDuf,EAAMluB,KAAK,OAElB,MAAO,GAGT,gC,MACC,GAAIlF,KAAKiuG,iBAAkB,CAC1B,MAAMI,EAAsB,GAK5B,OAJqB,QAArB,EAAAruG,KAAKiuG,wBAAgB,SAAErsG,QAASiS,IAC/B,MAAM+gB,EAAWszE,EAAgCoG,cAAcz6F,GAC/Dw6F,EAAU/yG,KAAKs5B,KAETy5E,EAAUnpG,KAAK,QAEtB,MAAO,OAIT,IAAI2O,GACH7T,KAAKiuG,iBAAmBjuG,KAAKiuG,kBAAoB,IAAIvnD,IACrD1mD,KAAKiuG,iBAAiBhxF,IAAIpJ,GAG3B,6BAA6BA,GAE5B,MAAO,SADe7T,KAAKsuG,cAAcz6F,2CAC6BA,MAEvE,6BAA6BA,GAC5B,MAAMy6F,EAAgBtuG,KAAKsuG,cAAcz6F,GAEzC,MAAO,SADoB7T,KAAK8pG,mBAAmBj2F,QACXy6F,aAEzC,yBAAyBz6F,GACxB,MAAMy6F,EAAgBtuG,KAAKsuG,cAAcz6F,GAEzC,MAAO,SADW7T,KAAK+pG,UAAUl2F,QACFy6F,UAGhC,qBAAqBz6F,GACpB,MAAO,UAAUA,IAElB,0BAA0BA,GACzB,MAAO,eAAeA,IAEvB,iBAAiBA,GAChB,MAAO,SAASA,IAEjB,mBAAmBA,GAClB,OAAOq0F,EAAgC4B,mBAAmBj2F,GAE3D,UAAUA,GACT,OAAOq0F,EAAgC6B,UAAUl2F,IA9EnD,qC,8ECOA,MAUA,SAEA,MAAaszF,UAAkC,EAAAa,cAC9C,YAAmBxwF,GAClBvR,MAAMuR,GADY,KAAAA,QAInB,WAAWivF,GACV,GAAiC,MAA7BA,EAAYrnE,eAAyBqnE,EAAYhjG,KACpD,IACC,OAAOzD,KAAK46C,cAAc6rD,EAAYhjG,MACrC,MAAO+L,GACRxP,KAAK26C,UAAU,gCAGhB36C,KAAK26C,UAAU,qBAIP,wBAAwBl3C,GACjC,MAGM0lG,EAAmB,GAHA1lG,EAAKiuD,UAAU1sD,IAAKikG,GACrCjpG,KAAK46C,cAAcquD,IAEkB/jG,KAjCnB,QAoC1B,MAAO,GADczB,EAAKkuD,OAA2B90D,QAC5BssG,KAEhB,yBAAyB1lG,GAClC,MAAO,GAAGA,EAAKq3C,WAAW96C,KAAK46C,cAAcn3C,EAAKimG,YAGzC,oBAAoBjmG,GAC7B,MAAO,GAAGA,EAAK5G,QA/BjB,+B,8ECNA,+BASC,YAAmB2a,GAAA,KAAAA,QANX,KAAA+2F,uBAAiC,EAEjC,KAAAlG,oBAA0C,GAQxC,UAAUvmG,GACnB9B,KAAKo/B,cAAgBp/B,KAAKo/B,eAAiBt9B,EAG5C,QACC9B,KAAKwX,MAAMo1F,gCAEX5sG,KAAKqoG,oBAAoBzmG,QAASwoG,IACjCA,EAAkBzhG,UAEnB3I,KAAKqoG,oBAAsB,GAa5B,OAAO3B,GASN1mG,KAAKuuG,uBAAwB,EAE7BvuG,KAAKwuG,+BAA+B9H,GACpC1mG,KAAKqoG,oBAAsB3B,EAAmB2B,oBAC9CroG,KAAKyuG,6BAGLzuG,KAAK0uG,0BAGE,+BAA+BhI,GACtCA,EAAmB4B,uBAAuB1mG,QAAS4zB,IAClD,GAAkC,GAA9Bx1B,KAAKuuG,uBACsC,GAA1CvuG,KAAKwX,MAAMkR,gBAAgB8M,GAI9B,OAHAx1B,KAAKuuG,uBAAwB,EAC7BvuG,KAAK26C,UAAU,0DACf36C,KAAK2I,UAMD,6BACP3I,KAAKqoG,oBAAoBzmG,QAASwoG,IACC,GAA9BpqG,KAAKuuG,uBACRvuG,KAAK2uG,yBAAyBvE,KAKzB,yBAAyBA,GAChC,MAAMwE,EAAcxE,EAAkB0C,oBAEtC,GAAI8B,IAME5uG,KAAKwX,MAAMkR,gBAAgBkmF,GAI/B,OAHA5uG,KAAKuuG,uBAAwB,EAC7BvuG,KAAK26C,UAAU,0DACf36C,KAAK2I,QAQA,0BACP3I,KAAKqoG,oBAAoBzmG,QAASwoG,IACjCA,EAAkBsE,+B,8EC9GrB,cACA,QAIA,MAAaz+C,UAAoB,EAAA3pC,WAChC,cACC,OAAO,EAAA5nB,UAAUC,OAElB,+BACC,OAAOqB,KAAK4S,cAEb,2BACC,OAAO5S,KAAKqnB,WAEb,uBACC,OAAOrnB,KAAK1C,MAEb,2BACC27B,EACAC,GAEA,OAAO,EAER,wBAAwBjS,EAA4CC,GACnE,OAAO,EAER,eACClnB,KAAKvB,QAAQkyC,oBAvBf,iB,2FCLA,SACA,2BAEA,OACA,QAOMk+D,EAAwB,CAAC,IAAK,IAAK,KACzC,MAAa3+C,UAAmB,EAAAznB,mBAAhC,c,oBACW,KAAA1hB,OAAS,IAAI,EAAA5c,MAIvB,cACC,OAAO,EAAAzL,UAAUG,MAElB,6BACC,OAAOgwG,EAER,+BACC,OAAI,UAAe7uG,KAAK4S,eAChB5S,KAAK4S,cAEL5S,KAAK4S,cAAc7N,UAW5B,uBACC,OAAO/E,KAAK1C,MAAMyH,UAET,iBAAiByiB,GAC1B,GAAIA,aAAqB,EAAArd,MACxB,OAAOqd,EAAUzkB,QAGjB,MADmC,CAACykB,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAI5E,2BACCyR,EACAC,GAEA,OAAID,aAAsB,EAAA9uB,MACrB+uB,aAAsB,EAAA/uB,MAClB8uB,EAAWzZ,OAAO0Z,GAElBD,EAAW97B,GAAK+7B,EAAW,IAAMD,EAAWhmB,GAAKimB,EAAW,IAAMD,EAAW9oB,GAAK+oB,EAAW,GAGjGA,aAAsB,EAAA/uB,MAClB8uB,EAAW,IAAMC,EAAW/7B,GAAK87B,EAAW,IAAMC,EAAWjmB,GAAKgmB,EAAW,IAAMC,EAAW/oB,EAGpG8oB,EAAW,IAAMC,EAAW,IAAMD,EAAW,IAAMC,EAAW,IAAMD,EAAW,IAAMC,EAAW,GAKpG,wBAAwBjS,EAA2CC,GAClE,OAAOD,EAAKzH,OAAO0H,GAEpB,kBACCjhB,MAAM8/F,kBACN/lG,KAAK7C,EAAI6C,KAAK4oB,WAAW,GACzB5oB,KAAKiT,EAAIjT,KAAK4oB,WAAW,GACzB5oB,KAAKmQ,EAAInQ,KAAK4oB,WAAW,GAqB1B,4BACC5oB,KAAK+mB,OAAO5pB,EAAI6C,KAAK7C,EAAEG,MACvB0C,KAAK+mB,OAAO9T,EAAIjT,KAAKiT,EAAE3V,MACvB0C,KAAK+mB,OAAO5W,EAAInQ,KAAKmQ,EAAE7S,OAxFzB,gB,8ECZA,cACA,QAIA,MAAa6yD,UAAoB,EAAA7pC,WAChC,cACC,OAAO,EAAA5nB,UAAUK,OAElB,+BACC,OAAOiB,KAAK4S,cAEb,2BACC,OAAO5S,KAAKqnB,WAEb,uBACC,OAAOrnB,KAAK1C,MAEb,2BACC27B,EACAC,GAEA,OAAO,EAER,wBAAwBjS,EAA4CC,GACnE,OAAO,GApBT,iB,oFCLA,E,KAAA,uBAGA,SACA,QACA,QAIA,MAAakpC,UAAqB,EAAArgB,kBACjC,cACC,OAAO,EAAArxC,UAAUM,QAElB,+BACC,OAAOgB,KAAK4S,cAEb,2BACC,OAAO5S,KAAKwnB,UAEb,uBACC,OAAOxnB,KAAK1C,MAGb,2BACC27B,EACAC,GAEA,OAAOD,GAAcC,EAEtB,wBAAwBjS,EAA6CC,GACpE,OAAOD,GAAQC,EAEhB,eAAeF,GACd,GAAI,UAAgBA,GACnB,OAAOxa,KAAK6uF,MAAMr0E,GAElB,GAAI,EAAApiB,WAAW4uD,UAAUxsC,GAAU,CAClC,MAAM1W,EAASxC,SAASkZ,GACxB,GAAI,UAAgB1W,GACnB,OAAOA,EAGT,OAAO,KAGT,QAAQ0W,GACP,MAAMnrB,EAASu0D,EAAangB,QAAQjpB,GACpC,OAAInrB,EACImE,KAAKvB,QAAQi1D,gBAAgB73D,GAE7BA,GAzCV,kB,8ECTA,cAWA,MAAag/B,EACZ,YAAoB0uC,EAAoB,EAAWxiD,EAAiB,GAAhD,KAAAwiD,YAA+B,KAAAxiD,SAEnD,UACC,MAAO,CACN3S,SAAUpU,KAAKupE,UACfjsE,MAAO0C,KAAK+mB,QAGd,eACC,OAAO/mB,KAAKupE,UAEb,YACC,OAAOvpE,KAAK+mB,OAEb,KAAKpS,GACJ3U,KAAKupE,UAAY50D,EAAMP,SACvBpU,KAAK+mB,OAASpS,EAAMrX,MAErB,QACC,MAAMqX,EAAQ,IAAIkmB,EAElB,OADAlmB,EAAMmL,KAAK9f,MACJ2U,EAER,SAASm6F,GACR,OAAO9uG,KAAKupE,WAAaulC,EAAY16F,UAAYpU,KAAK+mB,QAAU+nF,EAAYxxG,MAE7E,cAAcuxE,GACb,OAAO7uE,KAAKupE,WAAasF,EAAKz6D,UAAYpU,KAAK+mB,QAAU8nD,EAAKvxE,MAE/D,UAAUuxE,GACT7uE,KAAKupE,UAAYsF,EAAKz6D,SACtBpU,KAAK+mB,OAAS8nD,EAAKvxE,MAEpB,sBAAsByxG,EAAsBC,GAC3C,OAAOD,EAAM36F,UAAY46F,EAAM56F,UAAY26F,EAAMzxG,OAAS0xG,EAAM1xG,MAEjE,iBAAiBuxE,GAChB,OAAO,IAAIh0C,EAAUg0C,EAAKz6D,SAAUy6D,EAAKvxE,QAI3C,IAAYq9B,EA1CZ,cA0CA,SAAYA,GACX,kBADD,CAAYA,EAAA,EAAAA,oBAAA,EAAAA,kBAAiB,KAG7B,MAAa5B,EAGZ,YAAoBk2E,EAAyBt0E,EAAkBC,OAAgBtmB,EAAuB,IAAlF,KAAA26F,iBAA2D,KAAA36F,UAC9EtU,KAAK8sD,MAAQ,EAAA7qC,UAAUitF,eAGxB,WACC,OAAOlvG,KAAK8sD,MAEb,oBACC,OAAO9sD,KAAKivG,eAEb,aACC,OAAOjvG,KAAKsU,QAEb,iBAAiBu6D,GAChB,MAAMr6D,EAAS,GACf,IAAK,IAAI26F,KAActgC,EAAKr6D,OAC3BA,EAAOlZ,KAAKu/B,EAAU7B,UAAUm2E,IAEjC,OAAO,IAAIp2E,EAAU81C,EAAKyc,cAAe92E,GAE1C,UACC,MAAO,CACN82E,cAAetrF,KAAKivG,eACpBz6F,OAAQxU,KAAKsU,QAAQtP,IAAK/G,GAAMA,EAAEooB,YAGpC,QACC,MAAM+oF,EAAO,IAAIr2E,EAEjB,OADAq2E,EAAKtvF,KAAK9f,MACHovG,EAER,KAAKA,GACJpvG,KAAKivG,eAAiBG,EAAK9jB,cAC3B,IAAIlpF,EAAQ,EACZ,IAAK,IAAIuS,KAASy6F,EAAK56F,OAAQ,CAC9B,MAAM66F,EAAgBrvG,KAAKsU,QAAQlS,GAC/BitG,EACHA,EAAcvvF,KAAKnL,GAEnB3U,KAAKsU,QAAQhZ,KAAKqZ,EAAM5R,SAEzBX,GAAS,GAIX,SAASktG,GACR,GAAItvG,KAAKivG,gBAAkBK,EAAiBhkB,cAC3C,OAAO,EAER,MAAMikB,EAAeD,EAAiB96F,OACtC,GAAIxU,KAAKsU,QAAQtZ,QAAUu0G,EAAav0G,OACvC,OAAO,EAER,IAAIoH,EAAQ,EACZ,IAAK,IAAIuS,KAAS3U,KAAKsU,QAAS,CAC/B,MAAMw6F,EAAcS,EAAantG,GACjC,IAAKuS,EAAMwkB,SAAS21E,GACnB,OAAO,EAER1sG,GAAS,EAGV,OAAO,EAER,cAAcysE,GACb,GAAI7uE,KAAKivG,gBAAkBpgC,EAAKyc,cAC/B,OAAO,EAER,GAAItrF,KAAKsU,QAAQtZ,QAAU6zE,EAAKr6D,OAAOxZ,OACtC,OAAO,EAER,IAAIoH,EAAQ,EACZ,IAAK,IAAIuS,KAAS3U,KAAKsU,QAAS,CAC/B,MAAMw6F,EAAcjgC,EAAKr6D,OAAOpS,GAChC,IAAKuS,EAAMykB,cAAc01E,GACxB,OAAO,EAER1sG,GAAS,EAEV,OAAO,EAER,sBAAsB2sG,EAAsBC,GAC3C,GAAID,EAAMzjB,eAAiB0jB,EAAM1jB,cAChC,OAAO,EAER,GAAIyjB,EAAMv6F,OAAOxZ,QAAUg0G,EAAMx6F,OAAOxZ,OACvC,OAAO,EAER,IAAIoH,EAAQ,EACZ,IAAK,IAAIotG,KAAUT,EAAMv6F,OAAQ,CAChC,MAAMi7F,EAAST,EAAMx6F,OAAOpS,GAC5B,IAAKy4B,EAAU60E,eAAeF,EAAQC,GACrC,OAAO,EAERrtG,GAAS,EAEV,OAAO,EAER,UAAUysE,GACT7uE,KAAKivG,eAAiBpgC,EAAKyc,cAE3B,IAAIlpF,EAAQ,EACZ,IAAK,IAAI+sG,KAActgC,EAAKr6D,OAAQ,CACnC,MAAM66F,EAAgBrvG,KAAKsU,QAAQlS,GAC/BitG,EACHA,EAAcr2E,UAAUm2E,GAExBnvG,KAAKsU,QAAQhZ,KAAKu/B,EAAU7B,UAAUm2E,IAEvC/sG,GAAS,IAhHZ,e,8ECxDA,cACA,QAIA,MAAaiuD,UAAuB,EAAA/pC,WACnC,cACC,OAAO,EAAA5nB,UAAUW,UAElB,+BACC,OAAOW,KAAK4S,cAEb,2BACC,OAAO5S,KAAKqnB,WAEb,uBACC,OAAOrnB,KAAK1C,MAEb,2BACC27B,EACAC,GAEA,OAAO,EAER,wBACCjS,EACAC,GAEA,OAAO,GAvBT,oB,2FCLA,SAEA,2BACA,OACA,QAKMyoF,EAA0B,CAAC,IAAK,KACtC,MAAar/C,UAAqB,EAAA7nB,mBAAlC,c,oBACW,KAAA1hB,OAAS,IAAI,EAAA4P,QAGvB,cACC,OAAO,EAAAj4B,UAAUa,QAGlB,6BACC,OAAOowG,EAER,+BACC,OAAI,UAAe3vG,KAAK4S,eAChB5S,KAAK4S,cAEL5S,KAAK4S,cAAc7N,UAW5B,uBACC,OAAO/E,KAAK1C,MAAMyH,UAET,iBAAiByiB,GAC1B,GAAIA,aAAqB,EAAAmP,QACxB,OAAOnP,EAAUzkB,QAGjB,MADmC,CAACykB,EAAU,GAAIA,EAAU,IAI9D,2BACCyR,EACAC,GAEA,OAAID,aAAsB,EAAAtC,QACrBuC,aAAsB,EAAAvC,QAClBsC,EAAWzZ,OAAO0Z,GAElBD,EAAW3zB,GAAK4zB,EAAW,IAAMD,EAAW1zB,GAAK2zB,EAAW,GAGhEA,aAAsB,EAAAvC,QAClBsC,EAAW,IAAMC,EAAW5zB,GAAK2zB,EAAW,IAAMC,EAAW3zB,EAE7D0zB,EAAW,IAAMC,EAAW,IAAMD,EAAW,IAAMC,EAAW,GAIxE,wBAAwBjS,EAA6CC,GACpE,OAAOD,EAAKzH,OAAO0H,GAEpB,kBACCjhB,MAAM8/F,kBACN/lG,KAAKsF,EAAItF,KAAK4oB,WAAW,GACzB5oB,KAAKuF,EAAIvF,KAAK4oB,WAAW,GAG1B,4BACC5oB,KAAK+mB,OAAOzhB,EAAItF,KAAKsF,EAAEhI,MACvB0C,KAAK+mB,OAAOxhB,EAAIvF,KAAKuF,EAAEjI,OAlEzB,kB,2FCVA,SACA,2BAGA,OACA,QAKMsyG,EAA0B,CAAC,IAAK,IAAK,KAC3C,MAAar/C,UAAqB,EAAA9nB,mBAAlC,c,oBACW,KAAA1hB,OAAS,IAAI,EAAA3T,QAIvB,cACC,OAAO,EAAA1U,UAAUc,QAElB,6BACC,OAAOowG,EAER,+BACC,OAAI,UAAe5vG,KAAK4S,eAChB5S,KAAK4S,cAEL5S,KAAK4S,cAAc7N,UAW5B,uBACC,OAAO/E,KAAK1C,MAAMyH,UAET,iBAAiByiB,GAC1B,GAAIA,aAAqB,EAAApU,QACxB,OAAOoU,EAAUzkB,QAGjB,MADmC,CAACykB,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAK5E,2BACCyR,EACAC,GAEA,OAAID,aAAsB,EAAA7lB,QACrB8lB,aAAsB,EAAA9lB,QAClB6lB,EAAWzZ,OAAO0Z,GAElBD,EAAW3zB,GAAK4zB,EAAW,IAAMD,EAAW1zB,GAAK2zB,EAAW,IAAMD,EAAWzzB,GAAK0zB,EAAW,GAGjGA,aAAsB,EAAA9lB,QAClB6lB,EAAW,IAAMC,EAAW5zB,GAAK2zB,EAAW,IAAMC,EAAW3zB,GAAK0zB,EAAW,IAAMC,EAAW1zB,EAGpGyzB,EAAW,IAAMC,EAAW,IAAMD,EAAW,IAAMC,EAAW,IAAMD,EAAW,IAAMC,EAAW,GAKpG,wBAAwBjS,EAA6CC,GACpE,OAAOD,EAAKzH,OAAO0H,GAEpB,kBACCjhB,MAAM8/F,kBACN/lG,KAAKsF,EAAItF,KAAK4oB,WAAW,GACzB5oB,KAAKuF,EAAIvF,KAAK4oB,WAAW,GACzB5oB,KAAKwF,EAAIxF,KAAK4oB,WAAW,GAsB1B,4BACC5oB,KAAK+mB,OAAOzhB,EAAItF,KAAKsF,EAAEhI,MACvB0C,KAAK+mB,OAAOxhB,EAAIvF,KAAKuF,EAAEjI,MACvB0C,KAAK+mB,OAAOvhB,EAAIxF,KAAKwF,EAAElI,OA1FzB,kB,2FCXA,SAEA,2BACA,QACA,QAKMuyG,EAA0B,CAAC,IAAK,IAAK,IAAK,KAChD,MAAar/C,UAAqB,EAAA/nB,mBAAlC,c,oBACW,KAAA1hB,OAAS,IAAI,EAAAuiD,QAKvB,cACC,OAAO,EAAA5qE,UAAUe,QAElB,6BACC,OAAOowG,EAER,+BACC,OAAI,UAAe7vG,KAAK4S,eAChB5S,KAAK4S,cAEL5S,KAAK4S,cAAc7N,UAgB5B,uBACC,OAAO/E,KAAK1C,MAAMyH,UAGT,iBAAiByiB,GAC1B,GAAIA,aAAqB,EAAA8hD,QACxB,OAAO9hD,EAAUzkB,QAGjB,MADmC,CAACykB,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAI1F,2BACCyR,EACAC,GAEA,OAAID,aAAsB,EAAAqwC,QACrBpwC,aAAsB,EAAAowC,QAClBrwC,EAAWzZ,OAAO0Z,GAGxBD,EAAW3zB,GAAK4zB,EAAW,IAC3BD,EAAW1zB,GAAK2zB,EAAW,IAC3BD,EAAWzzB,GAAK0zB,EAAW,IAC3BD,EAAWxzB,GAAKyzB,EAAW,GAIzBA,aAAsB,EAAAowC,QAExBrwC,EAAW,IAAMC,EAAW5zB,GAC5B2zB,EAAW,IAAMC,EAAW3zB,GAC5B0zB,EAAW,IAAMC,EAAW1zB,GAC5ByzB,EAAW,IAAMC,EAAWzzB,EAI5BwzB,EAAW,IAAMC,EAAW,IAC5BD,EAAW,IAAMC,EAAW,IAC5BD,EAAW,IAAMC,EAAW,IAC5BD,EAAW,IAAMC,EAAW,GAKhC,wBAAwBjS,EAA6CC,GACpE,OAAOD,EAAKzH,OAAO0H,GAEpB,kBACCjhB,MAAM8/F,kBACN/lG,KAAKsF,EAAItF,KAAK4oB,WAAW,GACzB5oB,KAAKuF,EAAIvF,KAAK4oB,WAAW,GACzB5oB,KAAKwF,EAAIxF,KAAK4oB,WAAW,GACzB5oB,KAAKyF,EAAIzF,KAAK4oB,WAAW,GAG1B,4BACC5oB,KAAK+mB,OAAOzhB,EAAItF,KAAKsF,EAAEhI,MACvB0C,KAAK+mB,OAAOxhB,EAAIvF,KAAKuF,EAAEjI,MACvB0C,KAAK+mB,OAAOvhB,EAAIxF,KAAKwF,EAAElI,MACvB0C,KAAK+mB,OAAOthB,EAAIzF,KAAKyF,EAAEnI,OA5FzB,kB,8ECQA,4BACC,kB,8ECjBD,0BAEC,YAAYmG,GADJ,KAAAqsG,OAAiB,EAEzB,KAAKC,GACJ/vG,KAAK8vG,OAASC,EAAYzyD,MAE3B,YACC,OAAOt9C,KAAK8vG,U,8ECPd,eACA,SACA,SAEA,qBAKC,YAAsBrsG,GAAA,KAAAA,OAJZ,KAAAusG,aAAsC,IAAI,EAAAC,sBAAsBjwG,KAAKyD,MAS/E,kBACC,OAAOzD,KAAKgwG,aAOb,aACC,OAAQhwG,KAAKkwG,QAAUlwG,KAAKkwG,SAAW,IAAI,EAAAC,iBAAoBnwG,KAAKyD,MAErE,aACC,OAAuB,MAAhBzD,KAAKkwG,QAOb,cACC,OAAQlwG,KAAKowG,SAAWpwG,KAAKowG,UAAY,IAAI,EAAAC,kBAAqBrwG,KAAKyD,MAExE,cACC,OAAwB,MAAjBzD,KAAKowG,Y,oFCtCd,E,KAAA,uBAUA,8BAIC,YAAsBtqG,GAAA,KAAAA,QAFd,KAAAwqG,oBAAgE,IAAIjgF,IAI5E,cACC,MAAM9jB,EAAQvM,KAAK8F,MAAMjF,GAAG6G,OAAO6oG,iBACnCvwG,KAAKwwG,mBAAqB,IAAI3nE,MAAMt8B,GAQrC,qBAAqB3E,GAChB5H,KAAKwwG,mBAERxwG,KAAKwwG,mBAAmB5oG,EAAWH,aAAeG,EAKlDvE,QAAQiE,KAAK,2CAGf,wBAAwBM,GACvB,GAAI5H,KAAKwwG,mBACR,GAAI5oG,EAAWH,YAAczH,KAAKwwG,mBAAmBx1G,OAAQ,CAC5DgF,KAAKwwG,mBAAmB5oG,EAAWH,kBAAelD,EAElD,IAAIksG,GAAsC,EAC1C,IAAK,IAAI31G,EAAI8M,EAAWH,YAAa3M,EAAIkF,KAAKwwG,mBAAmBx1G,OAAQF,IACpEkF,KAAKwwG,mBAAmB11G,KAC3B21G,GAAsC,GAGpCA,IACHzwG,KAAKwwG,mBAAqBxwG,KAAKwwG,mBAAmBnyG,MAAM,EAAGuJ,EAAWH,mBAGvEpE,QAAQiE,KAAK,kDAAkDM,EAAWH,oBAG3EpE,QAAQiE,KAAK,2CAGf,iBAAiBlF,GAChB,GAAIpC,KAAKwwG,mBACR,OAAOxwG,KAAKwwG,mBAAmBpuG,GAGjC,yBACC,OAAO,UAAepC,KAAKwwG,oBAAoB,GAMhD,oBACC,OAAOxwG,KAAKwwG,mBAQb,sBAAsB5oG,GACrB,MAAMM,EAAeN,EAAWM,aAC1BwH,EAAK9H,EAAW8H,GACtB,IAAIghG,EAAoB1wG,KAAKswG,oBAAoBpzG,IAAIgL,GAChDwoG,IACJA,EAAoB,IAAIrgF,IACxBrwB,KAAKswG,oBAAoB/vG,IAAI2H,EAAcwoG,IAE5CA,EAAkBnwG,IAAImP,EAAI9H,GAI3B,yBAAyBA,GACxB,MAAMM,EAAeN,EAAWM,aAC1BwH,EAAK9H,EAAW8H,GACtB,IAAIghG,EAAoB1wG,KAAKswG,oBAAoBpzG,IAAIgL,GACjDwoG,GACHA,EAAkBva,OAAOzmF,GAK3B,qBACC,IAAI9G,EAAyB,GAe7B,OAbA5I,KAAKswG,oBAAoB1uG,QAAQ,CAAC8uG,EAAmBxoG,KACpDwoG,EAAkB9uG,QAAQ,CAACgG,EAAY8H,KAClC9H,GACHgB,EAAKtN,KAAKsM,OAUNgB,K,2FClHT,4BACA,2BAGA,SAEA,QACA,QACA,QACA,SAgBA,yBAmBC,YAAsBnF,GAAA,KAAAA,OAlBd,KAAAktG,mBAAsC,GACtC,KAAAT,QAA2B,GAC3B,KAAAU,mBAA6B,EAG7B,KAAAC,kBAA4B,EAC5B,KAAAC,kBAA4B,EAC5B,KAAAC,oBAA8B,EAS9B,KAAAC,0BAAoC,EAsB5C,sBAAsBC,GACrBjxG,KAAK+wG,mBAAqBE,EAEnB,qBAAqBC,GAC5BlxG,KAAK6wG,kBAAoBK,EAKlB,qBAAqBX,GAC5BvwG,KAAK8wG,kBAAoBP,EACzBvwG,KAAKmxG,yBAGN,sCAAsCt0G,GACrC,GAAImD,KAAKoxG,+BACR,IAAK,IAAIx9E,KAAoB5zB,KAAKoxG,+BACjC,GAAIx9E,EAAiB/2B,MAAQA,EAC5B,OAAO+2B,EAKX,kCAAkCy9E,GACjCrxG,KAAK4wG,mBAAoB,EACzB5wG,KAAKoxG,+BAAiCC,EACtCrxG,KAAKsxG,qBAAqB,GAC1BtxG,KAAKuxG,qBAAqBF,EAAkBr2G,QAC5CgF,KAAKmxG,yBACLnxG,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAUi6F,sBAE1B,uBACC,OAAOxxG,KAAK4wG,kBAEb,oCACC,OAAO5wG,KAAKoxG,gCAAkC,GAEvC,yBACP,IAAK,IAAIt2G,EAAI,EAAGA,EAAIkF,KAAK8wG,kBAAmBh2G,IAC3CkF,KAAK2wG,mBAAmB71G,GAAKkF,KAAK2wG,mBAAmB71G,IAAMkF,KAAKyxG,yBAAyB32G,GAGnF,yBAAyBsH,GAChC,MAAMsvG,EAAmB,IAAI,EAAAhvF,cAAc1iB,KAAKyD,KAAKL,MAAO,SAAShB,KAGrE,OADApC,KAAKyD,KAAKilB,gBAAgBgpF,GACnBA,EAGR,uBACC,OAAO1xG,KAAK8wG,mBAAqB,EAElC,iBAAiBrpG,GAChB,OAAOzH,KAAK2wG,mBAAmBlpG,GAehC,UAAUikB,EAAajf,GACX,MAAPA,IACHA,EAAMif,GAEP1rB,KAAKsxG,qBAAqB5lF,GAC1B1rB,KAAKuxG,qBAAqB9kG,GAE1BzM,KAAK2xG,6BACL3xG,KAAK4xG,qCAEE,qCACP5xG,KAAKyD,KAAK5C,GAAGkG,YAAYC,cAwDpB,yB,mDACL,IAAI6qG,EAA0C,GAC9C,GAAI7xG,KAAK8wG,kBAAoB,EAAG,CAC/B,MAAMgB,EAAmC,GAOzC,GANA9xG,KAAK0H,SAAS9F,QAAQ,CAAC4W,EAAO1d,KACzB0d,GACHs5F,EAAuBx2G,KAAKR,KAI1Bg3G,EAAuB92G,OAASgF,KAAK6wG,kBACxC7wG,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,2BAE3B,GAAIuxG,EAAuB92G,OAAS,EAAG,CACtC,MAAMquC,EAAWyoE,EAAuB9sG,IAAKyC,GACrCzH,KAAKyD,KAAK5C,GAAG6G,OAAOqqG,oBAAoBtqG,IAEhDoqG,QAAmB5pF,QAAQshB,IAAIF,IAIlC,OAAOwoE,KAiBF,oBAAoBpqG,G,mDACzB,MAAM1F,QAAkB/B,KAAKyD,KAAK3D,qBAAqBs2B,wBAAwB3uB,GAE/E,GAAI1F,GAAaA,EAAUC,oBAEpB,CACN,MAAM8F,EAAa9H,KAAKwY,MAAM/Q,GAC9B,GAAIK,EAAY,CACf,MAAMkqG,EAAsBlqG,EAAWgqB,OAAO9T,MAAMlc,QAChDkwG,GACHhyG,KAAKyD,KAAKquB,OAAO9T,MAAMzd,IAAI,SAASkH,wBAAkCuqG,OAIzE,OAAOjwG,KAaR,sBAAsBlF,GACrB,GAAImD,KAAKoxG,+BACR,IAAK,IAAIt2G,EAAI,EAAGA,EAAIkF,KAAKoxG,+BAA+Bp2G,OAAQF,IAC/D,GAAIkF,KAAKoxG,+BAA+Bt2G,GAAG+B,MAAQA,EAClD,OAAO/B,EAIV,OAAQ,EAcT,gBAAgB+qB,GACf,GAAI,UAAgBA,GAAsB,CACzC,GAAI7lB,KAAKiyG,iBACR,OAAOjyG,KAAKkyG,sBAAsBrsF,GAElC,MAAM,IAAI+qB,MAAM,QAAQ5wC,KAAKyD,KAAK4E,mCAGnC,OAAOwd,EAIT,UAAUA,EAAsCpiB,EAAgBqiB,EAAwC,GACvG,MAAMre,EAAczH,KAAK2H,gBAAgBke,IAAwB,EACjE,GAAIpe,EAAc,EAAG,CACpB,MAAM3F,EAAU,kBAAkB+jB,eAAiC7lB,KAAKyD,KAAK4E,cAE7E,MADAhF,QAAQiE,KAAKxF,GACP,IAAI8uC,MAAM9uC,GAGjB,IAAIoG,EAAe,EACnB,GAAIzE,GACCA,EAAK5C,GAAGC,QAAQqxG,oBAEnBjqG,EAAezE,EAAK5C,GAAGC,QAAQ6tD,iBAAiB7oC,GAC5B,MAAhB5d,GAAwBA,EAAe,GAE1C,YADA7E,QAAQiE,KAAK,QAAQ7D,EAAK4E,6CAA6Cyd,KAU1E,MAAM4rF,EAAmB1xG,KAAK2wG,mBAAmBlpG,GACjD,GAAwB,MAApBiqG,EAA0B,CAC7B,MAAM5vG,EAAU,uCAAuC2F,IAEvD,MADApE,QAAQiE,KAAKxF,GACP,IAAI8uC,MAAM9uC,GAGjB,GAAI2B,GAAQzD,KAAKyD,KAAK/C,QAAU+C,EAAK/C,OACpC,OAUD,MAAM0xG,EAAiBpyG,KAAKkwG,QAAQzoG,GACpC,IAAI42F,EAAkC,KAClCgU,OAA6C9tG,EAC7CvE,KAAKyD,KAAK5C,GAAGkG,cAChBsrG,EAAiBryG,KAAKyD,KAAK5C,GAAGkG,YAAYc,iBAAiBJ,IAExD4qG,IACHhU,EAAmBgU,EAAenqG,cAG/BzE,IAAS2uG,GAAkBlqG,GAAgBm2F,IAExB,MAAlB+T,GACCpyG,KAAK+wG,oBACRW,EAAiB/oF,mBAAmBypF,GAI1B,MAAR3uG,EACCiuG,EAAiBhpF,gBAAgBjlB,IAI/BzD,KAAK+wG,oBACTW,EAAiB/oF,mBAAmBllB,GAIjC4uG,GACHA,EAAez3F,WAAW,CAACmL,WAAW,IAEvC/lB,KAAKkwG,QAAQzoG,GAAehE,EAC5B,IAAI,EAAA6uG,eAAe7uG,EAAMzD,KAAKyD,KAAMyE,EAAcT,IAElDpE,QAAQiE,KAAK,kBAAkB7D,EAAK4E,kBAAkBrI,KAAKyD,KAAK4E,gBAGjErI,KAAKkwG,QAAQzoG,GAAe,KACxB4qG,GACHA,EAAez3F,WAAW,CAACmL,WAAW,KAKxC/lB,KAAKuyG,0BACLb,EAAiBt3F,uBAEjBpa,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAUi7F,iBAI3B,aAAa/uG,GACZ,UAAYzD,KAAK0H,SAAU,CAAC8Q,EAAOpW,KACrB,MAAToW,GAAyB,MAAR/U,GAChB+U,EAAMoT,gBAAkBnoB,EAAKmoB,eAChC5rB,KAAK+lB,UAAU3jB,EAAO,QAM1B,MAAMqF,GACL,OAAOzH,KAAKkwG,QAAQzoG,GAGrB,YAAY6rB,GACX,GAAItzB,KAAKiyG,iBAAkB,CAC1B,MAAMxqG,EAAczH,KAAK2H,gBAAgB2rB,GACzC,OAAOtzB,KAAKkwG,QAAQzoG,GAEpB,OAAO,KAGT,6BAA6B6rB,GAC5B,GAAItzB,KAAKiyG,kBAAoBjyG,KAAKoxG,+BAAgC,CACjE,MAAM3pG,EAAczH,KAAK2H,gBAAgB2rB,GACzC,OAAOtzB,KAAKoxG,+BAA+B3pG,IAG7C,gBAAgB5K,GACf,OAAOmD,KAAKkyG,sBAAsBr1G,IAAS,EAE5C,UAAU4K,GACT,OAAoC,MAA7BzH,KAAKkwG,QAAQzoG,GAErB,SACC,OAAOzH,KAAKkwG,QAYb,kCACC,IAAI5yG,GAAQ,EACZ,IAAK,IAAIqf,KAAS3c,KAAKyyG,wBAClB91F,GAAS,EAAAhY,eAAe+tG,YAC3Bp1G,GAAQ,GAGV,OAAOA,EAGR,wBACC,OAAQ0C,KAAK2yG,wBAA0B3yG,KAAK2yG,yBAA2B3yG,KAAK2xG,6BAE7E,aAAavvG,GACZ,OAAOpC,KAAKqhG,mCAAmCj/F,GAEhD,sCACC,MAAMwG,EAAO,GACPkpB,EAAS9xB,KAAKyyG,wBACpB,IAAK,IAAI33G,EAAI,EAAGA,EAAIg3B,EAAO92B,OAAQF,IAClC8N,EAAKtN,KAAK0E,KAAKqhG,mCAAmCvmG,IAEnD,OAAO8N,EAER,mCAAmCxG,GAClC,MAGMua,EAHS3c,KAAKyyG,wBAGCrwG,GACrB,OAAQua,GACP,KAAK,EAAAhY,eAAeiuG,OACnB,OAAO,EACR,KAAK,EAAAjuG,eAAekuG,MACnB,OAAO,EACR,KAAK,EAAAluG,eAAe+tG,UACnB,OAAQ1yG,KAAKgxG,yBAIf,OAAO,EAAA8B,WAAWC,YAAYp2F,GAI/B,2BAA2B7X,EAAkC,MAM5D,OALIA,IACH9E,KAAKgzG,6BAA+BluG,GAErC9E,KAAK2yG,wBAA0B3yG,KAAKgzG,8BAAgChzG,KAAKizG,uCAElEjzG,KAAK2yG,wBAEL,uCACP,MAAM/pG,EAAO,GACb,IAAK,IAAI9N,EAAI,EAAGA,EAAIkF,KAAK8wG,kBAAmBh2G,IAE3C8N,EAAKtN,KAAK,EAAAqJ,eAAeiuG,QAE1B,OAAOhqG,EAGR,4BAA4B+T,GAC3B3c,KAAKgxG,yBAA2Br0F,EAChC3c,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAU27F,gCAE1B,0BACC,OAAOlzG,KAAKgxG,yBAQb,sBAAsBn0G,EAAcq7C,GACnCl4C,KAAKmzG,iBAAmBnzG,KAAKmzG,kBAAoB,GACjDnzG,KAAKozG,sBAAwBpzG,KAAKozG,uBAAyB,GAEtDpzG,KAAKozG,sBAAsBzwD,SAAS9lD,GAIxCwG,QAAQiE,KAAK,kBAAkBzK,mBAAuBmD,KAAKyD,OAH3DzD,KAAKmzG,iBAAiB73G,KAAK48C,GAC3Bl4C,KAAKozG,sBAAsB93G,KAAKuB,IAK1B,0BACP,GAAImD,KAAKmzG,iBACR,IAAK,IAAIj7D,KAAQl4C,KAAKmzG,iBACrBj7D,O,8EC3gBJ,MAAao6D,EAIZ,YACSe,EACAC,EACAC,EAAwB,EACxBC,EAAuB,GAHvB,KAAAH,YACA,KAAAC,aACA,KAAAC,gBACA,KAAAC,eAERxzG,KAAKy1D,IAAM68C,EAAejc,WAEtBr2F,KAAKqzG,UAAUxyG,GAAGkG,aAAe/G,KAAKszG,WAAWzyG,GAAGkG,cACvD/G,KAAKqzG,UAAUxyG,GAAGkG,YAAY0sG,sBAAsBzzG,MACpDA,KAAKszG,WAAWzyG,GAAGkG,YAAY2sG,qBAAqB1zG,OAGtD,SACC,OAAOA,KAAKy1D,IAGb,eACC,OAAOz1D,KAAKqzG,UAEb,gBACC,OAAOrzG,KAAKszG,WAEb,mBACC,OAAOtzG,KAAKuzG,cAEb,kBACC,OAAOvzG,KAAKwzG,aAGb,WAAW/0G,EAAgC,IACtCuB,KAAKqzG,UAAUxyG,GAAGkG,aAAe/G,KAAKszG,WAAWzyG,GAAGkG,cACvD/G,KAAKqzG,UAAUxyG,GAAGkG,YAAY4sG,yBAAyB3zG,MACvDA,KAAKszG,WAAWzyG,GAAGkG,YAAY6sG,wBAAwB5zG,QAG9B,IAAtBvB,EAAQsnB,WACX/lB,KAAKszG,WAAWzyG,GAAG6G,OAAOqe,UAAU/lB,KAAKwzG,aAAc,OAzC1D,mBACgB,EAAAnd,SAAmB,G,2FCLnC,2BACA,2BACA,2BACA,QAMA,0BAKC,YAAoB5yF,GAAA,KAAAA,OAJZ,KAAAowG,cAAwB,EAExB,KAAAC,oBAA8B,EAatC,qBACC9zG,KAAK6zG,cAAe,EAErB,oBACC7zG,KAAK6zG,cAAe,EAGrB,kBACC,OAAO7zG,KAAK6zG,aAEb,wBACC,OAAO7zG,KAAK8zG,mBAEb,iBAAiBj3G,GAEhB,OAAOmD,KAAK+zG,uBAAuBl3G,IAAS,EAE7C,qCACC,OAAOmD,KAAKg0G,iCAAmC,GAEhD,wBAAwB5xG,GACvB,GAAIpC,KAAKg0G,gCACR,OAAOh0G,KAAKg0G,gCAAgC5xG,GAa9C,uBAAuBvF,GACtB,GAAImD,KAAKg0G,gCACR,IAAK,IAAIl5G,EAAI,EAAGA,EAAIkF,KAAKg0G,gCAAgCh5G,OAAQF,IAChE,GAAIkF,KAAKg0G,gCAAgCl5G,GAAG+B,MAAQA,EACnD,OAAO/B,EAIV,OAAQ,EAUT,iBAAiBgrB,GAChB,OAA4B,MAAxBA,EACC,UAAgBA,GACf9lB,KAAKmyG,kBACDnyG,KAAK+zG,uBAAuBjuF,IAEnCziB,QAAQiE,KAAK,QAAQtH,KAAKyD,KAAK4E,qCACvB,GAGFyd,GAGD,EAGT,uCAAuCjpB,GACtC,GAAImD,KAAKg0G,gCACR,IAAK,IAAIpgF,KAAoB5zB,KAAKg0G,gCACjC,GAAIpgF,EAAiB/2B,MAAQA,EAC5B,OAAO+2B,EAMX,mCAAmCy9E,EAAmDl3F,GAAqB,GAC1Gna,KAAK8zG,oBAAqB,EAC1B9zG,KAAKg0G,gCAAkC3C,EACnCl3F,GAAana,KAAKyD,KAAKL,OAI1BpD,KAAKyD,KAAK0W,UAAUna,KAAKyD,MAE1BzD,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAU08F,uBAE1B,oBACC,GAAIj0G,KAAKyD,KAAK5C,GAAGkG,YAAa,CAC7B,MAAMmtG,EAAiB,UACtBl0G,KAAKyD,KAAK5C,GAAGkG,YACX8nD,qBACA7pD,IAAK4C,GAAgBA,EAAaA,EAAWM,aAAe,OAEzDisG,EAAgC,GAStC,OARAD,EAAetyG,QAASQ,IACnB,UAAgBA,IACnB+xG,EAAoB74G,KAAK8G,KAGS+xG,EAAoBnvG,IAAK5C,GACrDpC,KAAKiI,+BAA+B7F,GAAOvF,MAInD,MAAO,M,8ECrHV,uBACC,kB,8ECnBD,eAGA,MAAa0yC,UAAuB,EAAArY,eACnC,YAAY9R,GACXnf,MAAMof,YAAYD,IAFpB,oB,8ECDA,2CACW,KAAAgvF,wBAA0C,IAAI/jF,IACxD,cAAc5sB,GACbzD,KAAKo0G,wBAAwB7zG,IAAIkD,EAAKmoB,cAAenoB,GAEtD,gBAAgBA,GACfzD,KAAKo0G,wBAAwBje,OAAO1yF,EAAKmoB,eAG1C,QAAQgkB,EAAUC,EAA2BC,GAC5C9vC,KAAKo0G,wBAAwBxyG,QAAS6B,GAASA,EAAKsrD,cAAcnf,EAAOC,EAAQC,O,8ECVnF,4BACC,YAAoB1sC,GAAA,KAAAA,QAEZ,KAAAixG,8BAAwC,EAEhD,yBACC,OAAOr0G,KAAKoD,MAAMwZ,mBAAmBk8B,QAAU94C,KAAKq0G,6BAGrD,kBAAkB95F,GACjBva,KAAKq0G,8BAA+B,EACpC95F,IACAva,KAAKq0G,8BAA+B,K,2FCZtC,0BACC,YAAoBjxG,GAAA,KAAAA,QAEpB,KAAAkxG,gBAA0B,EAC1B,KAAAC,gBAA0B,EAC1B,KAAAC,sBAAgC,EAEhC,kBACCx0G,KAAKy0G,oBAAmB,GAEnB,iB,yDACCz0G,KAAKy0G,oBAAmB,MAMjB,mBAAmB93F,G,mDAChC3c,KAAKs0G,eAAiB33F,QAChB3c,KAAK00G,iBAAiB10G,KAAKs0G,mBAElC,iBACC,OAAOt0G,KAAKs0G,eAEb,aACC,OAAQt0G,KAAKs0G,eAEd,oBACC,OAAOt0G,KAAKu0G,eAGP,gBAAgBn2E,G,mDACrB,GAAIp+B,KAAKu0G,iBAAmBn2E,IAC3Bp+B,KAAKu0G,eAAiBn2E,EAClBp+B,KAAKu0G,gBAAgB,CAIxB,MAAMz3F,EAAO9c,KAAKoD,MAAM0Z,KACpBA,UACGA,EAAKk5E,qBAcf,yB,MACC,IAAKh2F,KAAKw0G,qBAAsB,CAC/Bx0G,KAAKw0G,sBAAuB,EAE5B,MAAMrjC,EAASrZ,SAAS68C,eAAe,2BACnCxjC,IACiB,QAApB,EAAAA,EAAOyjC,qBAAa,SAAEC,YAAY1jC,Q,8EC3DtC,8BAEC,cADQ,KAAA2jC,cAA4C,IAAIzkF,IAGxD,eAAe7Y,GACdxX,KAAK80G,cAAcv0G,IAAIiX,EAAMoU,cAAepU,GAE7C,iBAAiBA,GAChBxX,KAAK80G,cAAc3e,OAAO3+E,EAAMoU,eAOjC,iCAAiCnoB,GAChCA,EAAKiY,gBAAgBmQ,WAAWzR,qBAAqB3W,M,8ECjBvD,eAEA,SAKA,kDACS,KAAAsxG,WAAwD,IAAI1kF,IAEpE,SAAS7Y,EAAsBm1F,EAA4BnD,GAC1D,MAAMwL,EAA+B,IAAI,EAAAC,2BAA2Bz9F,EAAOgyF,GAI3E,OAFA,EAAAl0E,SAASC,uBAAuBv1B,KAAK+0G,WAAYv9F,EAAMoU,cAAeopF,GAE/DA,EAER,iBAAiBx9F,GAChBxX,KAAK+0G,WAAW5e,OAAO3+E,EAAMoU,eAS9B,6BAA6BnoB,GAC5BzD,KAAKk1G,uCAAuCzxG,GAC5C,IAAK,IAAI+T,KAAS/T,EAAK+E,OAAO+gC,IAC7BvpC,KAAKm1G,wCAAwC39F,GAGvC,uCAAuC/T,GAC9C,MAAMiM,EAAKjM,EAAKmoB,cAEhB5rB,KAAK+0G,WAAWnzG,QAAQ,CAACwzG,EAAoBrW,KAC5C,IAAIsW,GAAc,EAClB,IAAK,IAAIjI,KAAOgI,EACXhI,EAAIkI,aAAa7xG,EAAK4E,eACzBgtG,GAAc,EACdjI,EAAImI,gCAGFF,GACHr1G,KAAK+0G,WAAW5e,OAAOzmF,KAIlB,wCAAwC8H,GAC/C,MAAM9H,EAAK8H,EAAMoU,cAEjB5rB,KAAK+0G,WAAWnzG,QAAQ,CAACwzG,EAAoBrW,KAC5C,IAAIsW,GAAc,EAClB,IAAK,IAAIjI,KAAOgI,EACXhI,EAAIkI,aAAa99F,EAAMnP,eAC1BgtG,GAAc,EACdjI,EAAImI,gCAGFF,GACHr1G,KAAK+0G,WAAW5e,OAAOzmF,Q,8EC7D3B,eAEA,mCACC,YAAoB8H,EAAsEU,GAAtE,KAAAV,QAAsE,KAAAU,OAI1F,aAAaA,GAEZ,OADiB,EAAAE,WAAW8T,mBAAmBlsB,KAAKwX,MAAM/T,KAAMzD,KAAKkY,OAClDA,EAGpB,4C,MACiC,QAAhC,EAAAlY,KAAKwX,MAAM4R,6BAAqB,SAAE2nC,4CAGnC,+BACC,MAAMv4C,EAAQxY,KAAKwX,MAAM8yB,qBACzBtqC,KAAKwX,MAAMjX,IAAIP,KAAKwX,MAAM5E,eAC1B5S,KAAKwX,MAAMjX,IAAIiY,M,2FClBjB,4BACA,2BACA,2BACA,SACA,QAKA,wBACC,YAAoBpV,GAAA,KAAAA,QAGpB,KAAAoyG,yBAAgD,GAChD,KAAAC,wCAA4F,GAE5F,OACCz1G,KAAK01G,MAAQ,IAAI,EAAAC,mBAAmB31G,KAAKoD,OACzCpD,KAAK01G,MAAMnY,2BAEXv9F,KAAK01G,MAAME,qBAGZ,WACC,OAAO51G,KAAK01G,MAEb,kBAAkBrmG,GACjB,MAAMF,EAAQE,EAAKT,MAAM,KAEzB,IAAIggD,EAAQ5uD,KAAK8c,KAAK4I,WACtBkpC,EAAQA,EAAM/kC,OAAQpmB,GAAS,EAAAmB,WAAWwK,iBAAiB3L,EAAK5G,KAAMsS,IACtE,MAAMlO,EAAU2tD,EAAM5pD,IAAKs9C,GAAQA,EAAIvkD,QACvC,OAAO,UAAekD,GAEvB,Q,MACC,MAAMykB,EAAW1lB,KAAK8c,KAAK4I,WAC3B,IAAK,IAAIyiD,KAASziD,EACY,QAA7B,EAAA1lB,KAAK8c,KAAKyI,2BAAmB,SAAEE,YAAY0iD,GAO7C,KAAKjwD,GACJ,MAAa,MAATA,EACIlY,KAAK8c,KAEL9c,KAAK8c,KAAKrZ,KAAKyU,GAGxB,YACC,IAAI02C,EAAwB,CAAC5uD,KAAK8c,MAC9B+4F,EAAkC,CAAC71G,KAAK8c,MACxCoO,EAAQ,EACZ,KAAO2qF,EAAgB76G,OAAS,GAAKkwB,EAAQ,IAAI,CAChD,MAAMxF,EAAW,UAChBmwF,EAAgB7wG,IAAK8wG,GAChBA,EAAex+D,mBACXw+D,EAAepwF,WAEf,KAIVkpC,EAAQ,UAAcA,EAAOlpC,GAC7BmwF,EAAkBnwF,EAClBwF,GAAS,EAEV,OAAO,UAAe0jC,GAGvB,gCACC5uD,KAAKw1G,yBAA2B,GAEjC,gCAAgC/xG,GAC3BA,EAAK6zC,oBAAsB7zC,EAAK8hB,sBACnCvlB,KAAKw1G,yBAAyB/xG,EAAK8hB,oBAAoBwwF,2BAA4B,GAGrF,0BACC,OAAO96G,OAAO4W,KAAK7R,KAAKw1G,0BACtBvlG,OACAjL,IAAK5I,GAAMA,EAAEk+E,eAGhB,yBAAyB72E,GACxB,MAAM2jC,EAAU3jC,EAAKkhB,eACf00E,EAAY51F,EAAKlF,KACvByB,KAAKy1G,wCAAwCruE,GAC5CpnC,KAAKy1G,wCAAwCruE,IAAY,GAC1DpnC,KAAKy1G,wCAAwCruE,GAASiyD,GACrDr5F,KAAKy1G,wCAAwCruE,GAASiyD,IAAc,GACrEr5F,KAAKy1G,wCAAwCruE,GAASiyD,GAAW51F,EAAKmoB,eAAiBnoB,EAGxF,8BAA8BA,GAC7B,MAAM2jC,EAAU3jC,EAAKkhB,eACf00E,EAAY51F,EAAKlF,YAChByB,KAAKy1G,wCAAwCruE,GAASiyD,GAAW51F,EAAKmoB,eAG9E,mBAAmBwb,EAAsBiyD,GACxC,MAAMzqC,EAAQ,GACd,GAAI5uD,KAAKy1G,wCAAwCruE,GAAU,CAC1D,MAAM4uE,EAAeh2G,KAAKy1G,wCAAwCruE,GAASiyD,GAC3E,GAAI2c,EACH,IAAK,IAAItmG,KAAMzU,OAAO4W,KAAKmkG,GAC1BpnD,EAAMtzD,KAAK06G,EAAatmG,IAI3B,OAAOk/C,K,2FCnHT,QAIA,SAeA,QACA,QAOA,OAEA,MAAMqnD,UAAmC,EAAAntG,kBACzC,MAAMC,EAAe,IAAIktG,EAEzB,MAAaN,UAA2B,EAAAO,qBAAxC,c,oBACC,KAAAltG,cAAgBD,EAQR,KAAAoU,QAAiB,IAAI,EAAA5R,MACrB,KAAA4qG,oBAAmD,GACnD,KAAAC,sBAAqD,GACrD,KAAAC,oBAA8C,GAE9C,KAAAC,sBAAgC,EAE9B,KAAApzF,6BAA+B,EAAA9iB,YAAYsc,IAdrD,cACC,MAAO,MAcR,kB,MACyB,QAAxB,EAAA1c,KAAKulB,2BAAmB,SAAEqsB,OAI1B5xC,KAAKqhC,UAAUk1E,sBAAsBv2G,KAAKw2G,cAAc34G,KAAKmC,OAC7DA,KAAKqhC,UAAUo1E,yBAAyBz2G,KAAK02G,iBAAiB74G,KAAKmC,OAQpE,qBACCA,KAAKmd,QAAQtgB,KAAO,UACpBmD,KAAK0Z,OAAOs7B,cAAc/3B,IAAIjd,KAAKmd,SAQpC,SACC,OAAOnd,KAAKmd,QAEb,YAAgD5e,GAC/C,OAAO0H,MAAMuf,YAAYjnB,GAE1B,WACC,OAAO0H,MAAMyf,WAEd,cAAkDnnB,GACjD,OAAO0H,MAAM2f,cAAcrnB,GAG5B,iCACC,OAAO,EAGR,aAAakF,GACZ,MAAMiM,EAAKjM,EAAKmoB,cAChB,GAAoC,MAAhC5rB,KAAKm2G,oBAAoBzmG,GAC5B,OAAQ1P,KAAKm2G,oBAAoBzmG,GAAMjM,EAInC,gB,mDACLzD,KAAKo2G,sBAAwB,GAC7B,MAAM3/D,EAAMx7C,OAAO4W,KAAK7R,KAAKm2G,qBAC7B,IAAK,IAAIzmG,KAAM+mC,EAAK,CACnB,MAAMhzC,EAAOzD,KAAKm2G,oBAAoBzmG,UAC/B1P,KAAKm2G,oBAAoBzmG,GAEhC,MAAMrH,EAAY,QAAQ5E,EAAK4Y,iBAAiB5Y,EAAK4E,cAarDrI,KAAKo2G,sBAAsB/tG,GAAa5E,EAGzC,MAAM4lC,EAAWpuC,OAAO4W,KAAK7R,KAAKo2G,uBAChCnmG,OACAjL,IAAK2xG,IACL,MAAMlzG,EAAOzD,KAAKo2G,sBAAsBO,GACxC,OAAO32G,KAAK+c,cAActZ,KAG5BzD,KAAKq2G,oBAAsBr2G,KAAKq2G,4BAA8Br2G,KAAK42G,oCAEnE52G,KAAKs2G,qBAAuB/vC,YAAYC,MACxCv+C,QAAQshB,IAAIF,GAAUhT,KAAK,KAC1B,EAAAxd,KAAKq8B,WAAW5xC,IACf,iBAAiBtD,KAAKoD,MAAMvG,YAAY0pE,YAAYC,MAAQxmE,KAAKs2G,6BAYpE,cAAc7yG,GACRzD,KAAKoD,MAAMwZ,mBAAmBs7E,cAIlCl4F,KAAK62G,aAAapzG,GAHlBzD,KAAK82G,aAAarzG,GAmCpB,oBAAoBA,GAGnB,GAAIA,EAAKuZ,wBAAyB,CAIjC,MAAM+5F,EAAatzG,EAAK5C,GAAG6G,OAAO8Q,MAAM,GACxC,OAAIu+F,EAGIA,EAAWC,eAEXh3G,KAAKmd,QAIb,OAAO,KAIT,aAAa1Z,GASZ,GAAIA,EAAKuZ,wBAAyB,CACjC,MAAMi6F,EAAgBj3G,KAAKk3G,oBAAoBzzG,GAC3CwzG,IAKCxzG,EAAK0zG,cAER1zG,EAAK2zG,qBAAqBH,GAG1BxzG,EAAK4zG,8BAmBT,kBAAkB5zG,GACjBA,EAAK4zG,4BAEN,uBACC,MAAM3xF,EAAW1lB,KAAK0lB,WACtB,IAAK,IAAIyiD,KAASziD,EACjB,GAAIyiD,EAAMmvC,0BACT,OAAO,EAGT,OAAO,EAGF,mC,mDACL,MAAMC,EAAYv3G,KAAK4lB,cAAc,OAC/B4xF,EAAqC,GAC3C,IAAK,IAAIC,KAAYF,EAAW,QACJE,EAASC,kBAEnCF,EAAWC,EAAS7rF,eAAiB6rF,GAGvC,OAAOD,KAuBR,wBAAwB/zG,GACvBzD,KAAK+c,cAActZ,GAWpB,6BAA6BA,GAC5BzD,KAAK+c,cAActZ,GAUZ,cAAcA,GACjBA,GACHzD,KAAK+c,cAActZ,GAGb,iBAAiBA,GACpBA,GACHzD,KAAK23G,kBAAkBl0G,IA7R1B,wB,8EChCA,cACA,QACA,SAEA,SAEA,MAAayyG,UAAyD,EAAAr2G,UAAtE,c,oBACC,KAAAC,qBAAmE,IAAI,EAAAC,yBACtEC,KACA,EAAA43G,kBAGD,sBACC,OAAO,EAAAx3G,YAAYkc,QAEpB,cAAczf,GACb,OAAOoJ,MAAMoB,cAAcxK,IAV7B,yBAeA,qCAA0Cq5G,K,8ECrB1C,eAGA,MAAa0B,UAAyB,EAAA1gF,eACrC,YAAY9R,GACXnf,MAAMof,YAAYD,IAFpB,sB,2FCHA,2BACA,4BACA,4BACA,SAGA,sCACS,KAAAyyF,UAAoB,EAC5B,KAAAC,YAA6B,EAC7B,KAAAC,oBAA8B,EAC9B,KAAAC,iBAAgD,GAChD,KAAAC,mBAAyC,GACzC,KAAAC,yBAA+C,GAQ/C,QAAQr7G,EAAc8jE,GACrB,MAAMgK,EAAapE,YAAYC,MAC/B7F,IACA,MAAMw3C,EAAa5xC,YAAYC,MAAQmE,EACvCtnE,QAAQC,IAAI,GAAGzG,MAASs7G,KAGzB,QACMn4G,KAAK63G,WACT73G,KAAK2I,QACL3I,KAAK63G,UAAW,EAChB73G,KAAK83G,YAAcvxC,YAAYC,MAC/BxmE,KAAKg4G,iBAAmB,GACxBh4G,KAAK+3G,oBAAsB/3G,KAAK83G,aAKlC,OACC93G,KAAK2I,QAEN,QACC3I,KAAK63G,UAAW,EAChB73G,KAAK83G,YAAc,KACnB93G,KAAKi4G,mBAAqB,GAC1Bj4G,KAAKk4G,yBAA2B,GAChCl4G,KAAKg4G,iBAAmB,GAGzB,cACC,OAAOh4G,KAAK63G,SAGb,sBAAsBp0G,GACrB,MAAMiM,EAAKjM,EAAKmoB,cACiB,MAA7B5rB,KAAKg4G,iBAAiBtoG,KACzB1P,KAAKg4G,iBAAiBtoG,GAAM,IAAI,EAAA0oG,gBAAgB30G,IAEjDzD,KAAKg4G,iBAAiBtoG,GAAI2oG,mBAG3B,OAAOx7G,GACDmD,KAAK6gG,SACT7gG,KAAK0lD,QAGN,MAAM4yD,EAAoB/xC,YAAYC,MAWtC,OATqC,MAAjCxmE,KAAKi4G,mBAAmBp7G,KAC3BmD,KAAKi4G,mBAAmBp7G,GAAQ,GAEjCmD,KAAKi4G,mBAAmBp7G,IAASy7G,EAAoBt4G,KAAK+3G,oBACf,MAAvC/3G,KAAKk4G,yBAAyBr7G,KACjCmD,KAAKk4G,yBAAyBr7G,GAAQ,GAEvCmD,KAAKk4G,yBAAyBr7G,IAAS,EAE/BmD,KAAK+3G,oBAAsBO,EAGpC,QACCt4G,KAAKu4G,uBACLv4G,KAAKw4G,mBAGN,uBACC,IAAIC,EAAoBx9G,OAAO6J,OAAO9E,KAAKg4G,kBAC3CS,EAAoB,UAAcA,EAAoBC,IAAsBA,EAAiBC,iBAE7F,MAAMC,EAAgBH,EAAkBzzG,IAAK0zG,GAAqBA,EAAiBG,gBAEnFx1G,QAAQC,IAAI,+CAEZ,MAAMw1G,EAAgB,GAChBC,EAAuB,UAAcH,EAAgBC,IAAkBA,EAA8B,iBAC3G,IAAK,IAAIA,KAAgBE,EACxBD,EAAcx9G,KAAKu9G,GAKpB,OAFAx1G,QAAQ21G,MAAMF,GAEPF,EAGR,mBAEC,MAAMK,EAAoB,UAAaj5G,KAAKi4G,oBACtCiB,EAA0B,UAAal5G,KAAKk4G,0BAG5CiB,EAAY,GAEZC,EAA0C,GAEhD,IAAK,IAAIv8G,KAAQ5B,OAAO4W,KAAKonG,GAAoB,CAChD,MAAM3yE,EAAW2yE,EAAkBp8G,GAGnCs8G,EAAU79G,KAAKgrC,GACoB,MAA/B8yE,EAAkB9yE,KACrB8yE,EAAkB9yE,GAAY,IAE/B8yE,EAAkB9yE,GAAUhrC,KAAKuB,GAGlCs8G,EAAUlpG,KAAK,CAACC,EAAGC,IAAMD,EAAIC,GAC7B,MAAMkpG,EAAmB,UAAYF,GAErC91G,QAAQC,IAAI,+CAGZ,MAAMw1G,EAAgB,GACtB,IAAK,IAAIxyE,KAAY+yE,EAAkB,CACtC,MAAMn6E,EAAQk6E,EAAkB9yE,GAChC,IAAK,IAAIzpC,KAAQqiC,EAAO,CACvB,MAAM3yB,EAAQ2sG,EAAwBr8G,GAGhCy8G,EAAQ,CAAChzE,WAAUzpC,OAAM0P,QAAOgtG,uBAFPjzE,EAAW/5B,GAG1CusG,EAAcx9G,KAAKg+G,IAOrB,OADAj2G,QAAQ21G,MAAMF,GACPA,K,8ECrIT,wBAKC,YAAoBhzG,GAAA,KAAAA,QAJpB,KAAAs6F,aAAuB,EACvB,KAAAoZ,iBAA2B,EAC3B,KAAAC,6BAAuC,EACvC,KAAAC,wBAAkC,EAGlC,mBACC15G,KAAKogG,cAAgB,EACrBpgG,KAAKw5G,kBAAoBx5G,KAAK8F,MAAM+V,gBAAgB89F,UACpD35G,KAAKy5G,8BAAgCz5G,KAAK8F,MAAM+V,gBAAgB+9F,sBAChE55G,KAAK05G,yBAA2B15G,KAAK8F,MAAM+V,gBAAgBg+F,iBAG5D,sBACC,OAAO75G,KAAKw5G,iBAEb,8BACC,OAAIx5G,KAAKogG,aAAe,EAChBpgG,KAAKw5G,iBAAmBx5G,KAAKogG,aAE7B,EAGT,kCACC,OAAOpgG,KAAKy5G,6BAEb,gDACC,OAAIz5G,KAAKogG,aAAe,EAChBpgG,KAAKy5G,6BAA+Bz5G,KAAKogG,aAEzC,EAIT,6BACC,OAAOpgG,KAAK05G,wBAEb,2CACC,OAAI15G,KAAKogG,aAAe,EAChBpgG,KAAK05G,wBAA0B15G,KAAKogG,aAEpC,EAIT,kBACC,OAAOpgG,KAAKogG,aAGb,eACC,MAAO,CACN/3F,UAAWrI,KAAK8F,MAAMuC,YACtByxG,YAAa95G,KAAK85G,YAClBnB,gBAAiB34G,KAAK24G,gBACtBoB,wBAAyB/5G,KAAK+5G,wBAC9BC,4BAA6Bh6G,KAAKg6G,4BAClCC,0CAA2Cj6G,KAAKi6G,0CAChDC,uBAAwBl6G,KAAKk6G,uBAC7BC,qCAAsCn6G,KAAKm6G,yC,8ECvE9C,cACA,SAQA,uBAUC,YAAoB/2G,GAAA,KAAAA,QATV,KAAAmiF,KAA4BvlF,KAC9B,KAAA8vG,OAAiB,EACjB,KAAAsK,MAAgB,EAChB,KAAAC,sBAAgC,EAEhC,KAAAC,aAA2B,CAAC,EAAG,KAC/B,KAAAC,oBAA0C,EAAC,GAAM,GACjD,KAAAC,UAAoB,EAG3Bx6G,KAAKm3C,YAAc,IAAI,EAAAz0B,cAActf,EAAO,mBAG7C,iBACC,OAAOpD,KAAKm3C,YAGb,YACC,OAAOn3C,KAAK8vG,OAEb,WACC,OAAO9vG,KAAKo6G,MAEb,kBACC,OAAOp6G,KAAKs6G,aAEb,yBACC,OAAOt6G,KAAKu6G,oBAEb,gBAAgBE,EAAqBC,GACpC16G,KAAKs6G,aAAa,GAAK9tG,KAAKkhB,MAAM+sF,GAClCz6G,KAAKs6G,aAAa,GAAK9tG,KAAKkhB,MAAMgtF,GAClC16G,KAAKoD,MAAM6iB,oBAAoBC,SAASlmB,KAAKm3C,YAAa,EAAAwjE,WAAWC,qBAEtE,uBAAuBC,EAAuBC,GAC7C96G,KAAKu6G,oBAAoB,GAAKM,EAC9B76G,KAAKu6G,oBAAoB,GAAKO,EAC9B96G,KAAKoD,MAAM6iB,oBAAoBC,SAASlmB,KAAKm3C,YAAa,EAAAwjE,WAAWC,qBAOtE,SAAS/uE,EAAckvE,GAAe,GACrC,GAAIlvE,GAAQ7rC,KAAKo6G,MAAO,CAGvB,GAFAp6G,KAAKo6G,MAAQvuE,EAETkvE,EAAc,CACjB,MAAMC,EAAYxuG,KAAKkhB,MApDf,GAoDqB1tB,KAAKo6G,OAClCp6G,KAAK8vG,OAASkL,EAIfh7G,KAAKoD,MAAM6iB,oBAAoBC,SAASlmB,KAAKm3C,YAAa,EAAAwjE,WAAWM,eACrEj7G,KAAKoD,MAAMqvB,oBAAoByoF,uCAG/Bl7G,KAAKoD,MAAMqmC,OAAOC,QAClB1pC,KAAK6rB,WAAWzR,uBAChBpa,KAAKoD,MAAMqmC,OAAOG,WAIpB,UAAU0T,EAAe69D,GAAc,GAClC79D,GAASt9C,KAAK8vG,SACjBxyD,EAAQt9C,KAAKo7G,4BAA4B99D,KAC5Bt9C,KAAK8vG,SACjB9vG,KAAK8vG,OAASxyD,EACV69D,GACHn7G,KAAKq7G,SAASr7G,KAAK8vG,OAzEZ,IAyE0B,IAKrC,4BACK9vG,KAAKw6G,WACHx6G,KAAKoD,MAAM0Z,KAAKw+F,wBACpBt7G,KAAKu7G,kBAIR,iBACC,MAAMC,EAAkBj1C,YAAYC,MAC9Bv3C,GAASusF,EAAkBx7G,KAAKq6G,uBAAyB,IACzDoB,EAAWz7G,KAAKo6G,MAAQnrF,EAC9BjvB,KAAKq6G,sBAAwBmB,EAC7Bx7G,KAAKq7G,SAASI,GAGf,4BAA4Bn+D,GAC3B,OAAIt9C,KAAKu6G,oBAAoB,IAAMj9D,EAAQt9C,KAAKs6G,aAAa,GACrDt6G,KAAKs6G,aAAa,GAEtBt6G,KAAKu6G,oBAAoB,IAAMj9D,EAAQt9C,KAAKs6G,aAAa,GACrDt6G,KAAKs6G,aAAa,GAEnBh9D,EAER,cACC,OAAyB,IAAlBt9C,KAAKw6G,SAEb,QACsB,GAAjBx6G,KAAKw6G,WACRx6G,KAAKw6G,UAAW,EAChBx6G,KAAKoD,MAAM6iB,oBAAoBC,SAASlmB,KAAKm3C,YAAa,EAAAwjE,WAAWe,qBAGvE,QACuB,IAAlB17G,KAAKw6G,WACRx6G,KAAKw6G,UAAW,EAChBx6G,KAAKq6G,sBAAwB9zC,YAAYC,MACzCxmE,KAAKoD,MAAM6iB,oBAAoBC,SAASlmB,KAAKm3C,YAAa,EAAAwjE,WAAWe,qBAGvE,oBACK17G,KAAK27G,QACR37G,KAAK2tD,QAEL3tD,KAAK0tD,U,8EClIR,SAAYitD,GACX,kDACA,sCACA,gDAHD,CAAY,EAAAA,aAAA,EAAAA,WAAU,M,8ECCtB,eAEA,4BACC,YAAoBv3G,GAAA,KAAAA,QAEpB,QAAQw4G,GAAyC,GAChD,MAAMC,EAA6C,GAC7CC,EAA8C,GAEpD,IAAK,IAAIr4G,KAAQzD,KAAKoD,MAAM45C,iBAAiB++D,YAAa,CACzD,MAAMC,EAAkB,IAAI,EAAAj4F,eAAetgB,GAC3Co4G,EAAuBp4G,EAAKmoB,eAAiBowF,EAAgB31F,QAAQu1F,GAErE,MAAMpzG,EAAS/E,EAAK+E,OAAO+gC,IAC3B,IAAK,IAAI/xB,KAAShP,EACjBszG,EAAwBtkG,EAAMoU,eAAiBpU,EAAM6O,UAIvD,MAAO,CACNw1F,yBACAC,8B,8ECrBH,aAaA,2BACC,YAAoB14G,GAAA,KAAAA,QAEZ,KAAA64G,+BAAgE,GAChE,KAAAC,mCAAsD,KAEtD,KAAAC,YAAuB,IAAI,EAAAxlF,QAAQ,EAAG,GACtC,KAAAylF,qCAA4E,GAC5E,KAAAC,yCAAqD,GAG7D,iCAAiC3sG,EAAY6iB,GAC5CvyB,KAAKi8G,+BAA+BvsG,GAAM6iB,EAC1CvyB,KAAKs8G,4CAEN,oCAAoC5sG,UAC5B1P,KAAKi8G,+BAA+BvsG,GAC3C1P,KAAKs8G,4CAEI,4CACTt8G,KAAKk8G,mCAAqCjhH,OAAO4W,KAAK7R,KAAKi8G,gCAErD,uCACN,MAAMpwE,EAAO7rC,KAAKoD,MAAMyoC,KACxB,GAAI7rC,KAAKk8G,mCACR,IAAK,IAAIxsG,KAAM1P,KAAKk8G,mCAAoC,CACtCl8G,KAAKi8G,+BAA+BvsG,GAC5Cm8B,KAAKvuC,MAAQuuC,GAMzB,uCAAuCn8B,EAAY6iB,GAClDvyB,KAAKo8G,qCAAqC1sG,GAAM6iB,EAChDvyB,KAAKu8G,kDACDv8G,KAAKm8G,aACRn8G,KAAKw8G,qCAAqCjqF,GAG5C,0CAA0C7iB,UAClC1P,KAAKo8G,qCAAqC1sG,GACjD1P,KAAKu8G,kDAEI,kDACTv8G,KAAKq8G,yCAA2CphH,OAAO4W,KAAK7R,KAAKo8G,sCAElE,2CAA2C7O,GAC1CvtG,KAAKm8G,YAAYr8F,KAAKytF,GACtB,IAAK,IAAI79F,KAAM1P,KAAKq8G,yCAA0C,CAC7D,MAAM9pF,EAAWvyB,KAAKo8G,qCAAqC1sG,GAC3D1P,KAAKw8G,qCAAqCjqF,IAG5C,qCAAqCA,GACpCA,EAASg7E,WAAWjwG,MAAMgI,EAAItF,KAAKm8G,YAAY72G,EAAInH,OAAO83C,iBAC1D1jB,EAASg7E,WAAWjwG,MAAMiI,EAAIvF,KAAKm8G,YAAY52G,EAAIpH,OAAO83C,oB,8ECtE5D,cAIA,wBACC,cAEA,KAAAwiD,iBAA2B,EAE3B,iBACC,OAAOz4F,KAAKy4F,gBAEb,qBACMz4F,KAAKy4F,kBACTz4F,KAAKy4F,iBAAkB,EACvB,EAAA5/E,KAAKq8B,WAAWp8B,qBAAqBolF,yB,2FCdxC,2BACA,4BACA,2BACA,2BACA,2BAIA,OACA,SAKA,yBACC,YAAsBp4F,GAAA,KAAAA,QAEtB,aAAatL,GAKZ,GAJAwF,KAAKy8G,aAAajiH,EAAY,OAC9BwF,KAAK08G,cAAcliH,EAAgB,WAG/BwF,KAAK8F,MAAMjF,GAAG6G,OAAOi1G,kCAAmC,CAC3D,MAAMC,EAAWpiH,EAA8B,wBAC3CoiH,GACH58G,KAAK8F,MAAMjF,GAAG6G,OAAOm1G,4BAA4BD,GAInD58G,KAAK88G,UAAUtiH,GACfwF,KAAK+8G,WAAWviH,EAAa,QAE7BwF,KAAKg9G,iBAAiBxiH,GAEtBwF,KAAK8F,MAAMu7B,UAAUm8D,yBAEtB,oBAAoBhjG,GACnBwF,KAAKi9G,WAAWziH,EAAa,QAG9B,gBAAgBA,GACf,IAAKA,EACJ,OAED,MAAMyM,EAAUjH,KAAK8F,MAAMmB,QACrBi2G,EAAM1iH,EAAU,IACtB,GAAI0iH,EAAK,CACR,MAAMt8B,GAAS,IAAI,EAAAjqD,SAAUuvB,UAAUg3D,GACvCj2G,EAAQk3B,aAAayiD,GAEtB,MAAMoa,EAAUxgG,EAAc,QAC1BwgG,GACH/zF,EAAQk2G,YAAYniB,GAErBh7F,KAAKo9G,sBAAsB5iH,EAAY,OAGxC,aAAaA,GACZ,IAAKA,EACJ,OAGD,MAAM6iH,EAAapiH,OAAO4W,KAAKrX,GACzBo0D,EAAwB,GAC9B,IAAK,IAAI0uD,KAAaD,EAAY,CACjC,MACMhkB,EADY7+F,EAAK8iH,GACW,KAClC,GAAIt9G,KAAK8F,MAAMwxC,oBAAsBt3C,KAAK8F,MAAMyf,oBAAqB,CACpE,MAAM9hB,EAAOzD,KAAK8F,MAAM0f,YAAY6zE,GAChC51F,IACHA,EAAK6gB,SAASg5F,GACd1uD,EAAMtzD,KAAKmI,KAId,MAAM85G,EAAY,GAClB,IAAIn7G,EAAQ,EACZ,IAAK,IAAIqB,KAAQmrD,EAAO,CACvB,MAAMwmC,EAAW,EAAAC,qBAAqBl4C,cAAc15C,GACpD85G,EAAUjiH,KAAK85F,GACfA,EAASE,aAAa96F,EAAKiJ,EAAK5G,OAChCuF,IAEDA,EAAQ,EACR,IAAK,IAAIqB,KAAQmrD,EAAO,CACN2uD,EAAUn7G,GAClBo7G,oBAAoBhjH,EAAKiJ,EAAK5G,OACvCuF,KAGF,cAAc5H,GACb,GAAIwF,KAAK8F,MAAMwxC,oBAAsBt3C,KAAK8F,MAAMyf,qBAC3C/qB,GAAQA,EAAKQ,OAAS,EAAG,CAC5B,MAAMyiH,EAAiC,GACvCjjH,EAAKoH,QAAS07G,IACb,MAAM75G,EAAOzD,KAAK8F,MAAMrC,KAAK65G,GACzB75G,GACHg6G,EAAeniH,KAAKmI,KAGtBzD,KAAK8F,MAAMyf,oBAAoBoqC,UAAUpvD,IAAIk9G,IAKhD,UAAUjjH,G,YACT,MAAM0F,EAAQ1F,EAAY,MAC1B,GAAI0F,EAAO,CACV,MAAMupB,EAASvpB,EAAc,OACf,MAAVupB,IACqB,QAAxB,EAAgB,QAAhB,EAAAzpB,KAAK8F,MAAM5F,aAAK,eAAEupB,cAAM,SAAElpB,IAAIkpB,IAE/B,MAAMnpB,EAAUJ,EAAe,QAChB,MAAXI,IACsB,QAAzB,EAAgB,QAAhB,EAAAN,KAAK8F,MAAM5F,aAAK,eAAEI,eAAO,SAAEC,IAAID,KAKlC,WAAWo9G,GACLA,GAILA,EAAY97G,QAAQ,CAAC+7G,EAAY7iH,KAChC,GAAI6iH,GAAc39G,KAAK8F,MAAMpF,OAC5B,GAAI,UAAgBi9G,GAAa,CAChC,MAAMC,EAAkBD,EAClB71G,EAAa9H,KAAK8F,MAAMpF,OAAO+C,KAAKm6G,GAC1C59G,KAAK8F,MAAMigB,UAAUjrB,EAAGgN,OAClB,CACN,MAAMA,EAAa9H,KAAK8F,MAAMpF,OAAO+C,KAAKk6G,EAAiB,MACrDrqF,EAAaqqF,EAAiB,KAChC39G,KAAK8F,MAAMjF,GAAG6G,OAAOm2G,gBAAgBvqF,GACxCtzB,KAAK8F,MAAMigB,UAAU43F,EAAiB,KAAG71G,EAAY61G,EAAmB,QAExEt6G,QAAQiE,KAAK,GAAGtH,KAAK8F,MAAMuC,kCAAkCirB,QAOlE,sBAAsB94B,GACrB,IAAKA,EACJ,OAGkBS,OAAO4W,KAAKrX,GACpBoH,QAAS07G,IACnB,MAAM75G,EAAOzD,KAAK8F,MAAMrC,KAAK65G,GAC7B,GAAI75G,EAAM,CACT,MAAMq6G,EAAYtjH,EAAK8iH,GACvB,EAAAjoB,qBAAqBl4C,cAAc15C,GAAM8xF,gBAAgBuoB,MAW5D,WAAWtjH,GACV,IAAKA,EACJ,OAED,MAAMo1D,EAAc30D,OAAO4W,KAAKrX,GAE1BwkC,EAA6C,GACnD,IAAK,IAAIzU,KAAcqlC,EAAa,CACnC,MAAMs1C,EAAa1qG,EAAK+vB,GAClB9rB,EAAUymG,EAAoB,QAG9B6Y,EAAa7Y,EAAiB,KAEpC,IACI1tF,EADAwmG,GAA0B,EADZh+G,KAAK8F,MAAM0C,OAAO49B,UAAU7b,KAI7C/S,EAAQxX,KAAK8F,MAAM0C,OAAOtL,IAAIqtB,IAEzB/S,GAASA,EAAMjZ,MAAQw/G,GAA6B,MAAdA,KAC1CC,GAA0B,IAIxBA,EACCh+G,KAAKi+G,uBAAuB/Y,GAC/BllG,KAAKk+G,4BAA4B3zF,EAAY26E,GAE7CllG,KAAKm+G,2BAA2B5zF,EAAY26E,IAO7ClmE,EAAsBU,gBAAkBV,EAAsBU,iBAAmB,GACjFV,EAAsBU,gBAAgBpkC,KAAKivB,GAC3CyU,EAAsBc,OAASd,EAAsBc,QAAU,GAC/Dd,EAAsBc,OAAOxkC,KAAK,CACjCuB,KAAM0tB,EACNhsB,KAAMw/G,EACNv/G,WAAY0mG,EAA0B,cACtCzmG,QAASA,KAkBZ,MAAM2/G,EACLp/E,EAAsBU,iBAAmBV,EAAsBU,gBAAgB1kC,OAAS,EACnFqjH,EAAsBr/E,EAAsBc,QAAUd,EAAsBc,OAAO9kC,OAAS,EAElG,GAAIojH,GAA0BC,EAAqB,CAClDr+G,KAAK8F,MAAM0C,OAAOu3B,cAAcf,GAEhC,IAAK,IAAIs/E,KAAet+G,KAAK8F,MAAM0C,OAAOo3B,MAAO,CAChD,MAAMslE,EAAa1qG,EAAK8jH,EAAYzhH,OAE/ByhH,EAAY91F,cAAgB08E,IAC5BllG,KAAKi+G,uBAAuB/Y,GAC/BllG,KAAKk+G,4BAA4BI,EAAYzhH,KAAMqoG,GAEnDllG,KAAKm+G,2BACJG,EAAYzhH,KACZqoG,KASLllG,KAAK8F,MAAM0C,OAAO+1G,0BAGX,2BAA2Bh0F,EAAoB26E,G,MACrB,QAAjC,EAAAllG,KAAK8F,MAAM0C,OAAOtL,IAAIqtB,UAAW,SAAEhqB,IAAI2kG,GAGhC,4BAA4B36E,EAAoB26E,GACvD,MAAM1tF,EAAQxX,KAAK8F,MAAM0C,OAAOtL,IAAIqtB,GAChC/S,GACH,EAAA69E,qBAAqB91D,eAAe/nB,GAAO89E,aAAa4P,GAsClD,uBAAuBA,GAE9B,QACC,UAAgBA,IAChB,UAAgBA,IAChB,UAAeA,IACf,UAAiBA,QAKd,UAAgBA,KACfjqG,OAAO4W,KAAKqzF,GAAYviD,SAAS,SAQvC,iBAAiBnoD,O,8EC9TlB,eAKA,MAAay6D,UAAkC,EAAAG,kBAC9C,SAAS56D,KADV,+B,8ECJA,eAKMgkH,EAAoB,QAE1B,MAAatpD,UAAgC,EAAAE,kBAC5C,SAAS56D,GACR,IAAIgtB,EAAYhtB,EAAgB,eACd+J,IAAdijB,IAEHA,EAAYA,EAAUvZ,QAAQuwG,EAAmB,MACjDx+G,KAAK8pC,OAAOvpC,IAAIinB,KANnB,6B,8ECRA,eAMA,MAAa2tC,UAA8B,EAAAC,kBAC1C,SAAS56D,GACR,MAAMgtB,EAAYhtB,EAAgB,UAC9BgtB,GAEHxnB,KAAK8pC,OAAOvpC,IAAIinB,IALnB,2B,8ECNA,eACA,SACA,SACA,SACA,SACA,SAEA,QAEA,oBACC,aACC,EAAAi3F,YAAYzpB,IAAI,EAAAn8E,KAAKq8B,YACrB,EAAAwpE,cAAc1pB,IAAI,EAAAn8E,KAAKq8B,YACvB,EAAAypE,WAAW3pB,IAAI,EAAAn8E,KAAKq8B,YACpB,EAAA0pE,YAAY5pB,IAAI,EAAAn8E,KAAKq8B,YACrB,EAAA2pE,YAAY7pB,IAAI,EAAAn8E,KAAKq8B,YACrB,EAAA4pE,YAAY9pB,IAAI,EAAAn8E,KAAKq8B,e,8EChBvB,eAEA,SACA,SACA,SACA,SACA,SAWA,oBACC,WAAW6pE,GACVA,EAAK1lG,cAAc,EAAA2lG,eAAgB,EAAAzjF,aAAaE,UAChDsjF,EAAK1lG,cAAc,EAAA4lG,cAAe,EAAA1jF,aAAaC,OAC/CujF,EAAK1lG,cAAc,EAAAye,YAAa,EAAAyD,aAAaC,OAC7CujF,EAAK1lG,cAAc,EAAA6lG,YAAa,EAAA3jF,aAAaD,MAC7CyjF,EAAK1lG,cAAc,EAAA8lG,cAAe,EAAA5jF,aAAaD,S,2FCvBjD,SACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,QAOA,SAGA,SACA,SAaA,OAEA,SAGA,SACA,QACA,SACA,MAAM8jF,UAA+B,EAAAt2G,iBAArC,c,oBACC,KAAAykG,WAAa,EAAAhvF,YAAYhf,QAAQ,CAAC,IAAK,OAGxC,MAAMwJ,EAAe,IAAIq2G,EAEzB,MAAaJ,UAAuB,EAAA7hF,aAApC,c,oBACC,KAAAn0B,cAAgBD,EAIN,KAAA8oC,sBAEN7xC,KAAK8xC,+BAaD,KAAAutE,cAAsB,IAAI,EAAA91G,KAAK,IAAI,EAAAo+B,oBAAoB,EAAG,IAG1D,KAAA23E,kBAAoC,IAAI,EAAAhvF,eAAe,CAC9DiC,SAAU,GACVH,aA7C0B,gEA8C1BC,eAAgB,KAET,KAAAktF,eAAwB,IAAI,EAAAj0G,MAC5B,KAAAk0G,gBAA0B,IAAI,EAAAC,OAM5B,KAAAv8F,6BAA+B,EAAA9iB,YAAY0G,GAjCrD,cACC,MAAO,UAMA,+BACP,MAAMktB,EAAkB,IAAI,EAAAwJ,uBACtBj2B,EAAuB,IAAI,EAAAy8D,sBAA8ChkE,KAAM,EAAA0/G,wBAErF,OADAn4G,EAAqBo4G,8BAA8B3rF,GAC5CzsB,EAGR,2BACC,OAAOvH,KAAK6xC,sBAmBb,kB,MACC7xC,KAAKqhC,UAAUqQ,mBAAmB1xC,KAAKuH,qBAAqBoqC,UAAU9zC,KAAKmC,KAAKuH,uBACxD,QAAxB,EAAAvH,KAAKulB,2BAAmB,SAAEqsB,OAC1B5xC,KAAKq/G,cAAcl8G,SAAWnD,KAAKs/G,kBACnCt/G,KAAKu/G,eAAetiG,IAAIjd,KAAKq/G,eAC7Br/G,KAAKw/G,gBAAgBprG,SAAS5O,EAAI,EAOlCxF,KAAKkf,iBAAiB1E,oBACrB,+BACAxa,KAAK4/G,6BAA6B/hH,KAAKmC,OAExCA,KAAKwI,OAAO24B,4BAA4B,KACvCnhC,KAAK6/G,eAAiB7/G,KAAK8/G,wBAC3B9/G,KAAK+/G,UAAY//G,KAAKggH,iBAAiBhgH,KAAK6/G,kBAI9C,YAA+CthH,GAC9C,OAAO0H,MAAMuf,YAAYjnB,GAE1B,WACC,OAAO0H,MAAMyf,WAEd,cAAiDnnB,GAChD,OAAO0H,MAAM2f,cAAcrnB,GAGpB,6BAA6B2b,GAChCA,GAAWA,EAAQ0R,eAAiB5rB,KAAK/B,EAAEsvG,WAAW3hF,eACzD5rB,KAAKigH,SAGC,SACPjgH,KAAK6/G,eAAiB7/G,KAAK8/G,wBAC3B9/G,KAAK+/G,UAAY//G,KAAKggH,iBAAiBhgH,KAAK6/G,gBAC5C7/G,KAAKkgH,aAAelgH,KAAKmgH,uBAElB,uBACP,MAAMvmF,EAAQ55B,KAAK4f,GAAG2tF,WAAWjoG,EAC3B86G,EAASpgH,KAAK4f,GAAG2tF,WAAWhoG,EAClC,OAAO,IAAI40B,aAAaP,EAAQwmF,EAAS,GAGpC,O,yDACCpgH,KAAKkkE,sBAGXlkE,KAAKqgH,sBAGN,kBACC,MAAO,CACNC,SAAUtgH,KAAKugH,kBAIX,sB,mDACDvgH,KAAKuH,qBAAqBwqC,2BAGvB/xC,KAAKwgH,gBAUXxgH,KAAKuH,qBAAqB0qC,mBAGd,gB,mDACb,MAAMtgB,EAAe,EAAAC,aAAaC,kBAAkB7xB,MACpD,GAAI2xB,EAAa32B,OAAS,EAEzB,YADAgF,KAAK8xB,OAAO9T,MAAMzd,IAAI,gCAGvB,MAAM8yB,EAAc1B,EAAa,GACjC,GAAI0B,EAAa,CAChBrzB,KAAKuH,qBAAqBypB,UAAUC,eAAe,CAACoC,UAG9CrzB,KAAKuH,qBAAqBypB,UAAUyvF,yBAG1C,MAAMC,EAAkB1gH,KAAKuH,qBAAqBypB,UAAU0vF,kBACtDnuF,EAAWvyB,KAAKuH,qBAAqBypB,UAAUuB,WACjDmuF,GAAmBnuF,IACtBvyB,KAAKugH,iBAAmBG,EACxB1gH,KAAK2gH,UAAYpuF,GAKdvyB,KAAKuH,qBAAqBypB,UAAUwB,0BACvCxyB,KAAK8xB,OAAOwpE,eAAeslB,uBAE3B5gH,KAAK8xB,OAAOwpE,eAAeulB,yBAIzB7gH,KAAKugH,kBAAoBvgH,KAAK2gH,YACjC3gH,KAAKs/G,kBAAkBjtF,eAAiBryB,KAAKugH,iBAC7CvgH,KAAKs/G,kBAAkB/sF,SAAWvyB,KAAK2gH,UACvC3gH,KAAKs/G,kBAAkBtvF,aAAc,EACrChwB,KAAKs/G,kBAAkB/sF,SAASg7E,WAAa,CAC5CjwG,MAAO0C,KAAK4f,GAAG2tF,gBAOV,iBAAiBuT,GACxB,MAAM3iG,EAAW,IAAI,EAAAi3B,cAAc,CAACC,WAAW,IAO/C,OANAl3B,EAAS63B,cAAc73C,OAAO83C,kBAE9B93B,EAAS4iG,WAAY,EAErB5iG,EAAS6iG,gBAAgBF,GAElB3iG,EAGF,mB,mDACL,MAAMyb,EAAQ55B,KAAK4f,GAAG2tF,WAAWjoG,EAC3B86G,EAASpgH,KAAK4f,GAAG2tF,WAAWhoG,EAMlC,IAAMvF,KAAK+/G,YAAa//G,KAAK6/G,eAC5B,OAED7/G,KAAK+/G,UAAUpiG,QACf3d,KAAK+/G,UAAUhiG,OAAO/d,KAAKu/G,eAAgBv/G,KAAKw/G,iBAIhDx/G,KAAKkgH,aAAelgH,KAAKkgH,cAAgBlgH,KAAKmgH,uBAC9CngH,KAAK+/G,UAAUkB,uBAAuBjhH,KAAK6/G,eAAgB,EAAG,EAAGjmF,EAAOwmF,EAAQpgH,KAAKkgH,cAUrF,MAAMpmF,EAAU,IAAI,EAAAC,YAAY/5B,KAAKkgH,aAActmF,EAAOwmF,EAAQ,EAAAc,WAAY,EAAAC,iBAOxE,EAAAC,UAAUC,MAAM,KAElBvnF,EACH95B,KAAKslC,YAAYxL,GAEjB95B,KAAK6b,gBAAgByJ,cAOf,wBACP,MAAMye,EAAQ,EAAAd,oBACRe,EAAQ,EAAAf,oBAERgB,EAAY,EAAAX,cACZY,EAAY,EAAAZ,cAYlB,OAVmB,IAAI,EAAAg+E,kBAAkBthH,KAAK4f,GAAG2tF,WAAWjoG,EAAGtF,KAAK4f,GAAG2tF,WAAWhoG,EAAG,CACpFw+B,MAAOA,EACPC,MAAOA,EACPC,UAAWA,EACXC,UAAWA,EACXoiD,OAAQ,EAAA46B,WACR3iH,KAAM,sBAAsBqP,KAAK2zG,UAAUC,WAAa,EAAAtkF,cAAgB,EAAAikF,UACxEM,eAAe,EACfC,aAAa,KApOhB,oB,8EClDA,eAGA,MAAatkF,UAAyB,EAAAlG,eAErC,YAAY9R,GACXnf,MAAMof,YAAYD,GASnB,UACC,OAAOplB,KAAKo3B,SAEb,eACC,OAAOp3B,KAAKo3B,SAEb,sB,MACC/zB,QAAQC,IAAI,QAAStD,KAAKo3B,UAC1B,MAAM0C,EAAuB,QAAhB,EAAG95B,KAAKo3B,gBAAQ,eAAEr0B,QAI/B,OAHI+2B,IACHA,EAAQ9J,aAAc,GAEhB8J,EAGR,SACC,OAAO95B,KAAK85B,UAGb,QACC,GAAqB,MAAjB95B,KAAKo3B,SACR,MAAO,CAACp3B,KAAKo3B,UAGf,aACC,OAAIp3B,KAAKo3B,UACJp3B,KAAKo3B,SAAS+O,MACV,CAACnmC,KAAKo3B,SAAS+O,MAAMvM,MAAO55B,KAAKo3B,SAAS+O,MAAMi6E,QAGlD,EAAE,GAAI,IA1Cf,sB,8ECHA,eACA,QAMA,MAAa12F,UAAmB,EAAAi4F,SAAhC,c,oBACW,KAAAtsD,QAAkB,EAC5B,YACCr1D,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAUqqG,qBACzB5hH,KAAKyD,KAAK0W,aAJZ,gB,8ECPA,eACA,QAEA,MAAaoP,UAAoB,EAAAo4F,SAChC,YACC3hH,KAAKyD,KAAKmkB,KAAK,EAAArQ,UAAUsqG,uBAF3B,iB,mGCHA,QAEA,QAQA,4BACA,2BACA,2BAEA,oCAGC,YAAoBp+G,GAAA,KAAAA,OAFZ,KAAA8+D,mCAA6C,EAIrD,sCACCviE,KAAKuiE,mCAAoC,EAG1C,kBACCviE,KAAKyD,KAAK+E,OAAO24B,4BAA4BnhC,KAAK8hH,0BAA0BjkH,KAAKmC,OAGlF,4BACC,IAAKA,KAAKuiE,kCACT,OAED,MAAMx7D,EAA8C,GACpD,IAAK,IAAIwjB,KAAcvqB,KAAKyD,KAAK+E,OAAO02B,MAAO,CAC9C,IAAI6iF,GAAY,EAQhB,GANC/hH,KAAKgiH,wBACLhiH,KAAKgiH,uBAAuBhnH,OAAS,GACrCgF,KAAKgiH,uBAAuBr/D,SAASp4B,KAErCw3F,GAAY,GAETA,GACC/hH,KAAKyD,KAAK+E,OAAOuyB,IAAIxQ,GAAa,CACrC,MAAM/S,EAAQxX,KAAKyD,KAAK+E,OAAOtL,IAAIqtB,GACnC,GAAI/S,IAAUA,EAAMgR,aAAc,CACjC,MAAMk6C,EAAkB,EAAAp+D,kCAAkCkT,EAAMjZ,MAChE,GAAImkE,EAAiB,CACpB,MAAM96D,EAAa,IAAI,EAAAo6B,0BAA0BxqB,EAAM3a,KAAM6lE,GAC7D37D,EAAYzL,KAAKsM,MAMtB5H,KAAKyD,KAAK5C,GAAG6G,OAAOw6B,kCAAkCn7B,GAGvD,0BAA0Bm4B,GACzB,OAAQl/B,KAAKgiH,uBAAyB9iF,EAGvC,0BACC,MAAM+iF,EAA4E,IAAI5xF,IAChF6xF,EAAgF,IAAI7xF,IACpF4O,EAAgCj/B,KAAKyD,KAAK+E,OAAOo2B,YACjDI,EAA6C,GAEnD,IAAK,IAAIzU,KAAc0U,EACtB,GAAIj/B,KAAKyD,KAAK+E,OAAOuyB,IAAIxQ,GAAa,CACrC,MAAM/S,EAAQxX,KAAKyD,KAAK+E,OAAOtL,IAAIqtB,GAC/B/S,IACHyqG,EAAmC1hH,IAAIgqB,EAAY/S,EAAM8yB,sBACzD43E,EAAuC3hH,IAAIgqB,EAAY/S,EAAM+yB,0BAC7DvL,EAAsBU,gBAAkBV,EAAsBU,iBAAmB,GACjFV,EAAsBU,gBAAgBpkC,KAAKivB,IAK9C,IAAK,IAAIqJ,KAAoB5zB,KAAKyD,KAAK5C,GAAG6G,OAAOmF,8BAA+B,CAC/E,MAAM0d,EAAaqJ,EAAiB/2B,KAC9BkhH,EAAwBnqF,EAAiBmqF,WAC/C,IAAIv/G,EAAao1B,EAAiBp1B,WAIlC,MAAM2jH,EAAwBD,EAAuChlH,IAAIqtB,GAInE63F,EAA0BpiH,KAAKyD,KAAK4+G,uBAAuB93F,GAiBjE,GARC/rB,EAD8B,MAA3B4jH,EACUA,EAEgB,MAAzBD,EACUA,EAEAvuF,EAAiBp1B,WAG5B,UAAeo1B,EAAiBp1B,aAAe,UAAgBA,GAAa,CAC/E,MAAM+D,EAAQ,IAAIsmC,MAAMjV,EAAiBp1B,WAAWxD,QACpD,IAAK,IAAIF,EAAI,EAAGA,EAAIyH,EAAMvH,OAAQF,IACjCyH,EAAMzH,GAAK0D,EAEZA,EAAa+D,EAGI,MAAd/D,IACHwgC,EAAsBc,OAASd,EAAsBc,QAAU,GAC/Dd,EAAsBc,OAAOxkC,KAAK,CACjCuB,KAAM0tB,EACNhsB,KAAMw/G,EACNv/G,WAAY,UAAaA,GACzBC,QAAS,CACRmhC,OAAO,MAKX,IAAK5/B,KAAKyD,KAAKL,MAAMwZ,mBAAmBC,WAAY,CACnD7c,KAAKyD,KAAK+E,OAAOu3B,cAAcf,GAE/B,IAAK,IAAIs/E,KAAet+G,KAAKyD,KAAK+E,OAAOo3B,MACxC,IAAK0+E,EAAY91F,aAAc,CAC9B,MAAMhB,EAAYy6F,EAAmC/kH,IAAIohH,EAAYzhH,MACjE2qB,GACH82F,EAAY/9G,IAAIinB,Q,8ECrItB,eAGA,SAkCA,yBAEC,YAAsB1hB,GAAA,KAAAA,QAEtB,O,YACM9F,KAAKsiH,WACTtiH,KAAK8F,MAAM1C,MAAM45C,iBAAiBulE,gCAAgCviH,KAAK8F,OAExE9F,KAAK+8C,MAAQ,CACZx+C,KAAMyB,KAAK8F,MAAMvH,MAQlB,MAAM6+C,EAAap9C,KAAKo9C,aACxB,GAAIniD,OAAO4W,KAAKurC,GAAYpiD,OAAS,EAAG,CACvCgF,KAAK+8C,MAAa,MAAIK,EAGtB,MAAMhW,EAAwC,QAAjC,EAAGpnC,KAAK8F,MAAMyf,2BAAmB,eAAE6hB,QAC5CA,IACHpnC,KAAK+8C,MAAwB,iBAAI3V,GAuBnC,GAnBKpnC,KAAKsiH,YACTtiH,KAAK+8C,MAAc,OAAI/8C,KAAKy/B,cAE5Bz/B,KAAK+8C,MAAc,OAAI/8C,KAAK09G,eAIzB19G,KAAK8F,MAAM5F,QACdF,KAAK+8C,MAAa,MAAI,GAClB/8C,KAAK8F,MAAM5F,MAAMsiH,eACO,QAA3B,EAAIxiH,KAAK8F,MAAM5F,MAAMupB,cAAM,eAAEhpB,UAC5BT,KAAK+8C,MAAa,MAAU,OAAI/8C,KAAK8F,MAAM5F,MAAMupB,OAAOhpB,QAGtDT,KAAK8F,MAAM5F,MAAMuiH,gBACpBziH,KAAK+8C,MAAa,MAAW,QAA4B,QAA3B,EAAG/8C,KAAK8F,MAAM5F,MAAMI,eAAO,eAAEG,SAIzDT,KAAK8F,MAAMwxC,mBAAoB,CAClC,MAAMqY,EAA0C,QAAjC,EAAG3vD,KAAK8F,MAAMyf,2BAAmB,eAAEoqC,UAClD,GAAIA,GAAa3vD,KAAK8F,MAAM4f,WAAW1qB,OAAS,EAAG,CAElD,MAAM0nH,EAAoC,GACpCC,EAAoC,GAC1C,IAAK,IAAIC,KAAiBjzD,EAAUf,QACnC+zD,EAAaC,EAAch3F,gBAAiB,EAE7C,IAAK,IAAIu8C,KAASnoE,KAAK8F,MAAM4f,WACxByiD,EAAMv8C,iBAAiB+2F,GAC1BD,EAAkBpnH,KAAK6sE,GAGzBnoE,KAAK+8C,MAAiB,UAAI2lE,EAAkB19G,IAAKlH,GAAMA,EAAEjB,OAK3D,GAAImD,KAAK8F,MAAMjF,GAAG6G,OAAOi1G,kCAAmC,CAC3D,MAAMC,EAAW58G,KAAK8F,MAAMjF,GAAG6G,OAAO+nD,0BAClCmtD,IACH58G,KAAK+8C,MAA+B,wBAAI6/D,GAO1C,OAFA58G,KAAK6iH,aAEE7iH,KAAK+8C,MAGb,UACC,MAAMviD,EAA+B,GACrC,IAAKwF,KAAKsiH,UAAW,CACpB,MAAMr7G,EAAUjH,KAAK8F,MAAMmB,QAC3BzM,EAAU,IAAIyM,EAAQmN,SAASrP,UAC/B,MAAMi2F,EAAU/zF,EAAQ+zF,QACpBA,IACHxgG,EAAc,QAAI,EAAAsoH,kBAAkBC,gBAAgB/nB,IAGtD,MAAMt1E,EAAW1lB,KAAK8F,MAAM4f,WAS5B,OARIA,EAAS1qB,OAAS,IACrBR,EAAY,MAAI,GAChBkrB,EAAS9jB,QAASumE,IACjB,MAAM66C,EAAgB,EAAA1jF,qBAAqB6d,cAAcgrB,GACzD3tE,EAAY,MAAE2tE,EAAMtrE,MAAQmmH,EAAc/7G,aAIrCzM,EAGA,UACP,OAA6B,OAAtBwF,KAAK8F,MAAMpF,QAAmBV,KAAK8F,MAAM8lB,eAAiB5rB,KAAK8F,MAAMgX,KAAK8O,cAGxE,cACT,MAAMpxB,EAAoB,GAmB1B,OAjBAwF,KAAK8F,MAAMjF,GAAG6G,OAAOA,SAAS9F,QAAQ,CAAC4W,EAAO/Q,KAE7C,GAAI+Q,EAAO,CAEV,MAAM5Q,EAAa5H,KAAK8F,MAAMjF,GAAGkG,YAAYc,iBAAiBJ,GAC9D,GAAIzH,KAAK8F,MAAMjF,GAAG6G,OAAOuqG,iBAAkB,CAC1C,MAAM3+E,EAAatzB,KAAK8F,MAAMjF,GAAG6G,OAAOmF,8BAA8BpF,GAAa5K,KAE7EqL,EAAeN,EAAWM,aAC1BC,EAAcqQ,EAAM3X,GAAGC,QAAQmH,+BAA+BC,GAAcrL,KAClFrC,EAAKc,KAAK,CAACuB,KAAMy2B,EAAY7vB,KAAM+U,EAAM3b,KAAMqhC,OAAQ/1B,SAEvD3N,EAAKc,KAAKkd,EAAM3b,SAKZrC,EAGE,cACT,MAAMA,EAAqD,GAE3D,IAAK,IAAI+vB,KAAcvqB,KAAK8F,MAAM0C,OAAO02B,MAAO,CAC/C,MAAM1nB,EAAQxX,KAAK8F,MAAM0C,OAAOtL,IAAIqtB,GACpC,GAAI/S,IAAUA,EAAMgR,aAAc,CACjC,MAAM6W,EAAiB,EAAAC,qBAAqBC,eAAe/nB,GAC3D,GAAI6nB,EAAeG,SAAU,CAC5B,MAAMC,EAAcJ,EAAe7kC,OACnCA,EAAKgd,EAAM3a,MAAQ4iC,IAKtB,OAAOjlC,EAGE,aACT,MAAMA,EAAyC,GAC/C,IAAK,IAAI2tE,KAASnoE,KAAK8F,MAAM4f,WAAY,CACxC,MAAMs9F,EAAgB,EAAA1jF,qBAAqB6d,cAAcgrB,GACzD3tE,EAAK2tE,EAAMtrE,MAAQmmH,EAAcxoH,OAElC,OAAOA,EAGE,iB,8EChMX,eAIA,MAAaiiD,UAAiC,EAAAK,kBAC7C,WAKC,IAAI98C,KAAKmqC,wBAGR,OAAOnqC,KAAK8pC,OAAOQ,qBAFnBtqC,KAAK+pC,cAAyB,UAAI/pC,KAAK8pC,OAAOQ,sBAPjD,8B,8ECJA,eAEA,SAEA,MAAaqS,UAAsC,EAAAG,kBAClD,WACC,IAAIruC,EAAMzO,KAAK8pC,OAAOtiB,UAItB,GAFA/Y,EAAM,EAAAq0G,kBAAkBC,gBAAgBt0G,IAEpCzO,KAAKmqC,wBAGR,OAAO17B,EAFPzO,KAAK+pC,cAAyB,UAAIt7B,GAPrC,mC,8ECHA,eACA,SAGA,MAAamuC,UAAgC,EAAAE,kBAC5C,WAEC,IAAIruC,EAAMzO,KAAK8pC,OAAOtiB,UAItB,GAFA/Y,EAAM,EAAAq0G,kBAAkBC,gBAAgBt0G,IAEpCzO,KAAKmqC,wBAGR,OAAO17B,EAFPzO,KAAK+pC,cAAyB,UAAIt7B,GARrC,6B,8ECLA,eAGA,MAAaouC,UAA8B,EAAAC,kBAC1C,WACC,IAAI98C,KAAKmqC,wBAGR,OAAOnqC,KAAK8pC,OAAOQ,qBAFnBtqC,KAAK+pC,cAAyB,UAAI/pC,KAAK8pC,OAAOQ,sBAHjD,2B,2FCHA,SAGA,QACA,4BAEA,SACA,SACA,QAGA,QAEA,QACA,QAEA,QAGA,MAAao1E,UAA+B,EAAAvvF,sBAG3C,uBACC,MAAO,CACNkC,eAAgB,UAChBD,kBAAc7tB,EACdguB,cAAUhuB,GAQZ,kBACC,OAAOvE,KAAKiyB,iBAAiB/0B,IAAI,EAAAqT,WAAW4hB,UAO7C,WACC,OAAOnyB,KAAK2gH,UAMP,yB,mDACL3gH,KAAK6yB,OAAS,IAAIxC,IAClBrwB,KAAKiyB,iBAAmB,IAAI5B,IAC5B,IAAK,IAAIyC,KAAe9yB,KAAK+yB,aAC5B,GAAID,GAAe,EAAAviB,WAAW4hB,SAAU,CACvC,MAAMa,EAAWhzB,KAAKurC,iBAAiBlZ,eACvCryB,KAAK6yB,OAAOtyB,IAAIuyB,EAAaE,EAASpkB,MAAM,OAG1C5O,KAAKkxB,YAAYl2B,OAAS,UAEvBgF,KAAKkzB,sBAAsBlzB,KAAKkxB,aAEtClxB,KAAKmzB,gBAGNnzB,KAAK2gH,UAAY3gH,KAAK2gH,WAAa,GACnC3gH,KAAKsyB,aAAatyB,KAAK2gH,WAQvB,IAAK,IAAI7tF,KAAe9yB,KAAK+yB,aAAc,CAC1C,MAAMK,EAAQpzB,KAAK6yB,OAAO31B,IAAI41B,GAC1BM,GACHpzB,KAAKiyB,iBAAiB1xB,IAAIuyB,EAAaM,EAAMluB,KAAK,OAKpD,MAAM9B,EAAQpD,KAAK6wB,gBAAgBztB,MAC7BsM,EAAK1P,KAAK6wB,gBAAgBjF,cAC5B5rB,KAAKwyB,0BACJxyB,KAAK2gH,WACRv9G,EAAMqvB,oBAAoBC,iCAAiChjB,EAAI1P,KAAK2gH,WAGrEv9G,EAAMqvB,oBAAoBE,oCAAoCjjB,MAShE,kBAAkBmuB,GACjBA,EAAa3Y,UAAU,EAAAxmB,UAAUG,MAAO,QAAS,CAAC,EAAG,EAAG,GAAI,CAAC4tC,QAAQ,IACrE5O,EAAa3Y,UAAU,EAAAxmB,UAAUI,MAAO,QAAS,EAAG,CAAC2tC,QAAQ,IAE9D,mBAAmB3X,GAClBA,EAAaj0B,GAAGC,QAAQqG,mCAAmC,CAC1D,IAAI,EAAA66B,0BAA0B,eAAgB,EAAAn+B,oBAAoBI,MAClE,IAAI,EAAA+9B,0BAA0B,OAAQ,EAAAn+B,oBAAoB/E,SAU5D,wBACC,MAAO,CAAC,IAAI,EAAAouC,aAAa,EAAA38B,WAAW4hB,SAAU,CAAC,QAAS,SAAU,KAEnE,0BACC,MAAO,CACN,IAAI,EAAAmb,eAAe,QAAS,CAC3BlZ,OAAQ,wBAET,IAAI,EAAAkZ,eAAe,QAAS,CAC3BlZ,OAAQ,oBACRD,QAAS,SAUF,oBAAoBrB,GAC7B,MAAO,mBAEE,kBAAkBA,GAC3B,MAAO,iBAEE,gBAAgBA,GACzB,MAAO,CAAC,mBAAoB,kBAG7B,oBAAoB+B,EAAsB/B,EAAyB8B,GAC/C,YAAf9B,GACH+B,EAAWv5B,KAAK,QAAQs5B,0EAgF1B,sBAAsBvB,EAA2B5qB,GAChD,MAAM+rB,EAAcx0B,KAAKq2D,4BACxBhjC,EACA5qB,EAA8B8rB,qBAE/B,GAAIC,EACH,IAAK,IAAIlB,KAAckB,EAAa,CAGnC,GAFcnB,EAAYxyB,GAAG6G,OAAO6rB,YAAYD,GAErC,CACV,MAAM2vF,EAAS5vF,EAAYvmB,mBAAmBwmB,GAE9C,IAAIvmB,EACc,SAAdumB,IACHvmB,EAAY,sBAAsB,EAAAzE,UAAUC,IAAI06G,MAE/B,SAAd3vF,IACHvmB,EAAY,oBAAoB,EAAAzE,UAAUC,IAAI06G,MAE3Cl2G,GACHtE,EAA8BwE,eAAeomB,EAAa,CAACtmB,MAiEhE,uBAAuB+nB,EAA6BrsB,GAMnD,MAAMqqB,EAAcrqB,EAA8B8rB,oBAElD,IADsBv0B,KAAKy0B,cAAc3B,GAExC,OAED,MAAM+B,EAAuB,GACvBiB,EAAqC,GAa3C,IAAK,IAAI3tB,KAAe2sB,EAAaj0B,GAAGC,QAAQq0B,oBAAqB,CACpE,MAAMP,EAAWE,EAAa1sB,YAAYD,GAG1C,OAAQA,GACP,IAAK,OACJ2tB,EAAYx6B,KAAK,IAAI,EAAA+5B,oBAAoBP,EAAc,EAAAjxB,oBAAoB/E,MAAOqJ,IAKlF0sB,EAAWv5B,KAAK,SAASs5B,OAAczsB,KAQvCnI,KAAKy1B,8BACL,MAED,IAAK,eACJz1B,KAAK01B,oBAAoBb,EAAY/B,EAAa8B,IA6BrDnsB,EAA8ByE,gBAAgB4nB,EAAcgB,EAAahD,GACzErqB,EAA8BwE,eAAe6nB,EAAcD,IAnX7D,4B,2FCnBA,2BAEA,SAGA,SAEA,QACA,SACA,SACA,SACA,SAEA,SAEA,oBAQC,YAAoB8I,EAA2C9M,GAA3C,KAAA8M,aAA2C,KAAA9M,kBAP/D,KAAAnoB,0BAAoD,IAAI,EAAAw6G,uBACxD,KAAAC,4BAAsC,EAGtC,KAAAtwF,OAAmD,IAAIxC,IACvD,KAAA+yF,mBAA4D,IAAI/yF,IAI1D,iBAAiBob,G,mDACtB,MAAM43E,EAAiB,IAAI,EAAAC,mBAAmCtjH,KAAK29B,WAAY39B,KAAK6wB,iBACpFwyF,EAAejgE,SAAS3X,GAExB,MAAM83E,EAA0D,IAAIlzF,IACpE,IAAK,IAAIyC,KAAe9yB,KAAK+yB,eAC5BwwF,EAAqBhjH,IAAIuyB,EAAauwF,EAAeG,sBAAsB1wF,IAE5E,MAAM2wF,EAAeJ,EAAeI,eACpC,IAAK,IAAI3wF,KAAe9yB,KAAK+yB,eAAgB,CAC5C,MAAM2wF,EAAwB1jH,KAAK29B,WAAWgmF,0BAA0B7wF,GAexE,IAAK,IAAI0a,KAAak2E,EAGrB,EAAApuF,SAASC,uBAAuBguF,EAAsBzwF,EAAa0a,GAerE,MAAMo2E,EAAwC,IAAIvzF,IAClD,IAAK,IAAI5sB,KAAQggH,EAChBG,EAAgBrjH,IAAIkD,EAAKmoB,eAAe,GAGzC,IAAK,IAAI4hB,KAAa/B,EAChBm4E,EAAgB1mH,IAAIswC,EAAU5hB,iBAClC63F,EAAanoH,KAAKkyC,GAClBo2E,EAAgBrjH,IAAIitC,EAAU5hB,eAAe,IAG/C,IAAK,IAAInoB,KAAQggH,EAEhBhgH,EAAKogH,aAEN,IAAK,IAAIpgH,KAAQggH,QACVhgH,EAAK+E,OAAOmnC,WAQnB3vC,KAAK8jH,+BAAiC,IAAI,EAAAC,4BACzC/jH,KAAK+yB,eACL/yB,KAAK+yB,eAAe,IAErB/yB,KAAK2I,QACL,IAAK,IAAImqB,KAAe9yB,KAAK+yB,eAAgB,CAC5C,MAAM67B,EAAQ,UAAY20D,EAAqBrmH,IAAI41B,IAEnD,GADA9yB,KAAK8jH,+BAA+BE,wBAAwBlxF,GACxD87B,EACH,IAAK,IAAInrD,KAAQmrD,EAEZ5uD,KAAKmjH,4BACR1/G,EAAKwgH,oBAENxgH,EAAKygH,UAAUlkH,KAAK8jH,gCASnB9jH,KAAKmjH,4BACRnjH,KAAKikH,kBAAkBR,GAExBzjH,KAAKmkH,eAAeV,MAGrB,6BACCzjH,KAAKmjH,4BAA6B,EAEnC,0BACCnjH,KAAKmjH,4BAA6B,EAGnC,eACC,OAAOnjH,KAAK29B,WAAW5K,aAGhB,QACP,IAAK,IAAID,KAAe9yB,KAAK+yB,eAAgB,CAC5C,MAAMqxF,EAAY,IAAI/zF,IAItBrwB,KAAK6yB,OAAOtyB,IAAIuyB,EAAasxF,GAC7BpkH,KAAKojH,mBAAmB7iH,IAAIuyB,EAAa,IAAIzC,MAI/C,gBACC,OAAOrwB,KAAK0I,0BAA0BE,MAAQ,GAE/C,MAAMkqB,EAAyBuZ,GAC9B,OAAOrsC,KAAK6yB,OAAO31B,IAAI41B,GAAc51B,IAAImvC,GAE1C,YACC,OAAOrsC,KAAK6yB,OAGb,kBAAkB+7B,GACjB5uD,KAAK0I,0BAA0BC,QAC/B,IAAK,IAAIlF,KAAQmrD,EAAO,CACvB,MAAMnwB,EAAgBh7B,EAAKg7B,gBAC3B,GAAIA,EACH,IAAK,IAAID,KAAgBC,EACxBz+B,KAAK0I,0BAA0BpN,KAAKkjC,IAMxC,eAAeowB,GACd,IAAK,IAAI97B,KAAe9yB,KAAK+yB,eAE5B/yB,KAAKqkH,eAAez1D,EAAO97B,GAK7B,eAAe87B,EAAyB97B,GACvC9yB,KAAKkN,gBAAgB0hD,EAAO97B,EAAa,EAAAptB,iBAAiBU,SAAU,EAAAunC,SAASC,sBAC7E5tC,KAAKkN,gBAAgB0hD,EAAO97B,EAAa,EAAAptB,iBAAiBW,QAAS,EAAAsnC,SAASG,QAC5E9tC,KAAKkN,gBAAgB0hD,EAAO97B,EAAa,EAAAptB,iBAAiBY,QAAS,EAAAqnC,SAASG,QAC5E9tC,KAAKkN,gBAAgB0hD,EAAO97B,EAAa,EAAAptB,iBAAiBQ,UAAW,EAAAynC,SAASG,QAE9E9tC,KAAKskH,sCAAsC11D,EAAO97B,EAAa,EAAA6a,SAASK,MAGjE,gBACP4gB,EACA97B,EACAyxF,EACAl4E,GAEA,IAAKrsC,KAAK8jH,+BACT,OAED,MAAMhuF,EAAc,GACpB,IAAK,IAAIryB,KAAQmrD,EAAO,CACvB,IAAI41D,EAAmBxkH,KAAK8jH,+BAA+BhuF,YAAYhD,EAAarvB,GACpF,GAAI+gH,EAAkB,CACrBA,EAAmBA,EAAiB36F,OAAQjtB,GAAMA,EAAE2nH,iBAAmBA,GACvE,IAAK,IAAIrvF,KAAcsvF,EACtB1uF,EAAYx6B,KAAK45B,IAKpB,GAAIY,EAAY96B,OAAS,EAAG,CAC3B,MAAMypH,EAAa,IAAI,EAAAz+G,4BAA8C8vB,GAC/DigC,EAAmB0uD,EAAWC,OACpC,GAAID,EAAWE,QAEd,KAAM,uBAAuBF,EAAWrlF,gBAGzC,MAAMwlF,EAA0D,IAAIv0F,IAC9DwmC,EAAiC,IAAIxmC,IAC3C,IAAK,IAAI6E,KAAc6gC,EAAkB,CACxC,MAAMgpC,EAAU7pE,EAAWzxB,KAAKmoB,cAC3BirC,EAAS97B,IAAIgkE,IACjBloC,EAASt2D,IAAIw+F,GAAS,GAEvB,EAAAzpE,SAASC,uBAAuBqvF,EAAwB7lB,EAAS7pE,GAElE,MAAM2vF,EAAmB7kH,KAAK6yB,OAAO31B,IAAI41B,GACzC+jC,EAASj1D,QAAQ,CAACmmC,EAAkBg3D,KACnC,MAAMjpE,EAAc8uF,EAAuB1nH,IAAI6hG,GAC/C,GAAIjpE,EAAa,CAChB,MAAMgvF,EAAmBhvF,EAAY,GAErC,GAAIgvF,EAAkB,CACrB,MAAM9pB,EAAU,EAAA+pB,cAAcC,aAAaF,EAAiBrhH,KAAM4oC,GAClE,EAAA/W,SAASC,uBAAuBsvF,EAAkBx4E,EAAW2uD,GAE7D,IAAK,IAAI9lE,KAAcY,EAAa,CACnC,MAAM2qC,EAAO,EAAAskD,cAAcE,UAAU/vF,EAAWurC,KAAMp0B,GACtD,EAAA/W,SAASC,uBAAuBsvF,EAAkBx4E,EAAWo0B,GAE9D,MAAM07B,EAAY,EAAA4oB,cAAcG,oBAAoB74E,GACpD,EAAA/W,SAASC,uBAAuBsvF,EAAkBx4E,EAAW8vD,QAMlE,sCAAsCvtC,EAAyB97B,EAAyBuZ,GAQvF,IAAI84E,GAPJv2D,EAAQA,EAAM/kC,OAAQpmB,IACrB,GAAIzD,KAAK8jH,+BAAgC,CACxC,MAAM1wF,EAAQpzB,KAAK8jH,+BAA+BjvF,WAAW/B,EAAarvB,GAC1E,OAAO2vB,GAASA,EAAMp4B,OAAS,MAITA,OACxB,IAAK,IAAIF,EAAI,EAAGA,EAAIqqH,EAAarqH,IAAK,CACrC,MAAMsqH,EAAUtqH,GAAK8zD,EAAM5zD,OAAS,EACpCgF,KAAKqlH,qCAAqCz2D,EAAM9zD,GAAIg4B,EAAauZ,EAAW+4E,IAG9E,qCACC3hH,EACAqvB,EACAuZ,EACA+4E,GAEA,IAAKplH,KAAK8jH,+BACT,OAED,MAAM1wF,EAAQpzB,KAAK8jH,+BAA+BjvF,WAAW/B,EAAarvB,GAE1E,GAAI2vB,GAASA,EAAMp4B,OAAS,EAAG,CAC9B,MAAM6pH,EAAmB7kH,KAAK6yB,OAAO31B,IAAI41B,GACnCkoE,EAAU,EAAA+pB,cAAcC,aAAavhH,EAAM4oC,GAMjD,GALA,EAAA/W,SAASC,uBAAuBsvF,EAAkBx4E,EAAW2uD,GAC7D,UAAY5nE,GAAOxxB,QAAS6+D,IAC3BA,EAAO,EAAAskD,cAAcE,UAAUxkD,EAAMp0B,GACrC,EAAA/W,SAASC,uBAAuBsvF,EAAkBx4E,EAAWo0B,KAExDp0B,GAAa,EAAAsB,SAASK,OAAQo3E,EAAU,CAC7C,MAAMjpB,EAAY,EAAA4oB,cAAcG,oBAAoB74E,GACpD,EAAA/W,SAASC,uBAAuBsvF,EAAkBx4E,EAAW8vD,Q,2FCnRjE,SACA,QACA,OACA,OAEA,QAGA,SAIA,QACA,SASA,MAAa59E,EAKZ,YACShY,EACAR,EACAiiB,EACAs9F,GAHA,KAAA/+G,QACA,KAAAR,QACA,KAAAiiB,iBACA,KAAAs9F,gBAGT,kBAAuC9tG,EAAsBm0B,GAC5D,OAAO,IAAIptB,EAAe/G,EAAMjZ,KAAMiZ,EAAM3a,KAAM2a,EAAM5E,cAAe+4B,GAGxE,WACC,OAAO3rC,KAAKuG,MAEb,WACC,OAAOvG,KAAK+F,MAEb,oBACC,OAAO/F,KAAKgoB,eAEb,mBACC,OAAOhoB,KAAKslH,cAGb,cACC,OAAQtlH,KAAKulH,SAAWvlH,KAAKulH,UAAYvlH,KAAKwlH,kBAGvC,kBACP,OAAOjnG,EAAYknG,gBAAgBzlH,KAAKuG,OAGzC,oBACC,MAAMm/G,EAAiB1lH,KAAK2lH,UAAU9nH,KAAKmC,MAC3C,OAAQA,KAAKuG,OACZ,KAAK,EAAA7H,UAAUO,cACd,MAAO,CAACsb,SAAUmrG,EAAgBv+E,eAAgB,CAACC,QAAS,EAAAhnC,YAAYi9B,MACzE,QACC,MAAO,CAAC9iB,SAAUmrG,IAIb,UAAUjiH,EAAoB+T,GACrCxX,KAAK4rC,QAAQtuC,MAAQka,EAAMla,MAI5B,uBAAuBiB,GACtB,OAAQA,GACP,KAAK,EAAAG,UAAUE,QAEf,KAAK,EAAAF,UAAUC,OACd,MAAO,CAACrB,MAAO,GAChB,KAAK,EAAAoB,UAAUG,MACd,MAAO,CAACvB,MAAO,IAAI,EAAA8V,QAAQ,EAAG,EAAG,IAClC,KAAK,EAAA1U,UAAUI,MAEf,KAAK,EAAAJ,UAAUK,OAEf,KAAK,EAAAL,UAAUM,QAEf,KAAK,EAAAN,UAAUO,cACd,MAAO,CAAC3B,MAAO,GAEhB,KAAK,EAAAoB,UAAUU,KACd,MAAO,CAAC9B,MAAO,MAChB,KAAK,EAAAoB,UAAUW,UACd,MAAO,CAAC/B,MAAO,GAChB,KAAK,EAAAoB,UAAUY,OACd,MAAO,CAAChC,MAAO,MAChB,KAAK,EAAAoB,UAAUa,QACd,MAAO,CAACjC,MAAO,IAAI,EAAAq5B,QAAQ,EAAG,IAC/B,KAAK,EAAAj4B,UAAUc,QACd,MAAO,CAAClC,MAAO,IAAI,EAAA8V,QAAQ,EAAG,EAAG,IAClC,KAAK,EAAA1U,UAAUe,QACd,MAAO,CAACnC,MAAO,IAAI,EAAAgsE,QAAQ,EAAG,EAAG,EAAG,IAEtC,EAAAwpC,WAAWC,YAAYx0G,GAGlB,kBAAkBkF,G,mDAEvB,MAAMmoC,EAAU5rC,KAAK4rC,QAEfp0B,EAAQ/T,EAAK+E,OAAOtL,IAAI8C,KAAK+F,OACnC,GAAIyR,EAAO,OACJA,EAAM8xB,UACZ,MAAMhsC,EAAQka,EAAMla,MAEpB,GAAc,MAATA,GAAiB0C,KAAK4lH,kBAAkBtoH,IAAW0C,KAAK6lH,mBAI5D,OAAQ7lH,KAAKuG,OACZ,KAAK,EAAA7H,UAAUO,oBACRe,KAAK8lH,+BAAyCtuG,EAA6Bo0B,GACjF,MAED,KAAK,EAAAltC,UAAUU,KACdY,KAAK+lH,4BAAsCvuG,EAAqBo0B,GAChE,MAED,QACCA,EAAQtuC,MAAQka,EAAMla,WAYrB,+BAA+Bka,EAA0Bo0B,G,mDAM9D,MAAMpD,EAAahxB,EAAMgxB,aACzB,GAAIA,EAAY,CACf,MACM1O,SADkB0O,EAAWvwB,qBACT6hB,UAC1B8R,EAAQtuC,MAAQw8B,OAEhB8R,EAAQtuC,MAAQ,QAIlB,4BAA4Bka,EAAkBo0B,GAC7CA,EAAQtuC,MAAQka,EAAMwuG,eAGvB,kBAAkBxwG,GACjB,MAAMywG,EAAoB,EAAAl2D,uBAAuB/vD,KAAKuG,OACtD,GAAIvG,KAAKkmH,oBAAqB,CAC7B,MAAMC,GAAeF,EAAkB1+F,iBAAiB/R,EAAWxV,KAAKkmH,qBAIxE,OAHIC,IACHnmH,KAAKkmH,oBAAsBD,EAAkBG,YAAY5wG,IAEnD2wG,EAGP,OADAnmH,KAAKkmH,oBAAsBD,EAAkBG,YAAY5wG,IAClD,EA2CT,mBACC,IAAI3Z,GAAS,EACb,MAAM+vC,EAAU5rC,KAAK4rC,QACrB,GAAIA,EAAS,CACZ,MAAMtuC,EAAQsuC,EAAQtuC,MAClBA,IACHzB,EAASyB,EAAMyW,aAAe,EAAAmyB,cAIhC,OAAOrqC,GA3MT,iB,8ECpBA,eAGA,oCAEC,YAAoBwqH,EAAqCC,GAArC,KAAAD,gBAAqC,KAAAC,uBADjD,KAAAC,iCAAqE,IAAIl2F,IAEhF,IAAK,IAAIyC,KAAe9yB,KAAKqmH,cAC5BrmH,KAAKumH,iCAAiChmH,IAAIuyB,EAAa,IAAI,EAAA0zF,gBAAgB1zF,IAI7E,mBACC,OAAO9yB,KAAKqmH,cAGb,wBAAwBvzF,GACvB9yB,KAAKsmH,qBAAuBxzF,EAE7B,0BACC,OAAO9yB,KAAKsmH,qBAGb,gBAAgB7iH,EAAsBqyB,EAAiChD,GACtE,GAA0B,GAAtBgD,EAAY96B,OACf,OAED83B,EAAcA,GAAe9yB,KAAKsmH,qBAClC,MAAMG,EAAmBzmH,KAAKumH,iCAAiCrpH,IAAI41B,GAC/D2zF,GACHA,EAAiBv5G,gBAAgBzJ,EAAMqyB,GAGzC,YAAYhD,EAAyBrvB,GACpC,MAAMgjH,EAAmBzmH,KAAKumH,iCAAiCrpH,IAAI41B,GACnE,GAAI2zF,EACH,OAAOA,EAAiB3wF,YAAYryB,GAItC,eAAeA,EAAsB2vB,EAAiBN,GACrD,GAAoB,GAAhBM,EAAMp4B,OACT,OAED83B,EAAcA,GAAe9yB,KAAKsmH,qBAClC,MAAMG,EAAmBzmH,KAAKumH,iCAAiCrpH,IAAI41B,GAC/D2zF,GACHA,EAAiBx5G,eAAexJ,EAAM2vB,GAGxC,WAAWN,EAAyBrvB,GACnC,MAAMgjH,EAAmBzmH,KAAKumH,iCAAiCrpH,IAAI41B,GACnE,GAAI2zF,EACH,OAAOA,EAAiB5xF,WAAWpxB,M,8ECnDtC,eAEA,wBAIC,YAAoB6yD,GAAA,KAAAA,eAHZ,KAAAowD,wBAA2D,IAAIr2F,IAC/D,KAAAs2F,uBAAgD,IAAIt2F,IAI5D,kBACC,OAAOrwB,KAAKs2D,aAGb,gBAAgB7yD,EAAsBqyB,GACrC,IAAK,IAAIZ,KAAcY,EACtB,EAAAR,SAASC,uBAAuBv1B,KAAK0mH,wBAAyBjjH,EAAKmoB,cAAesJ,GAGpF,YAAYzxB,GACX,OAAOzD,KAAK0mH,wBAAwBxpH,IAAIuG,EAAKmoB,eAG9C,eAAenoB,EAAsB2vB,GACpC,IAAK,IAAIqtC,KAAQrtC,EAChB,EAAAkC,SAASC,uBAAuBv1B,KAAK2mH,uBAAwBljH,EAAKmoB,cAAe60C,GAGnF,WAAWh9D,GACV,OAAOzD,KAAK2mH,uBAAuBzpH,IAAIuG,EAAKmoB,kB,8EC7B9C,eAEMg7F,EAAgB,CACrB,CAAC,EAAAj5E,SAASC,sBAAuB,GACjC,CAAC,EAAAD,SAASG,QAAS,IACnB,CAAC,EAAAH,SAASK,MAAO,KAGZ64E,EAAgB,CACrB,CAAC,EAAAl5E,SAASC,sBAAuB,GACjC,CAAC,EAAAD,SAASG,QAAS,GACnB,CAAC,EAAAH,SAASK,MAAO,MAGlB,sBACC,oBAAoBvqC,EAAsB4oC,GACzC,IAAIo0B,EAAO,MAAMh9D,EAAK4E,cAItB,OAHIgkC,GAAa,EAAAsB,SAASK,OACzByyB,EAAO,KAAIA,KAELA,EAER,iBAAiBA,EAAcp0B,GAC9B,IAAIy6E,GAAa,EAIjB,OAH2B,GAAvBrmD,EAAKn3D,QAAQ,QAAyC,GAA1Bm3D,EAAKn3D,QAAQ,YAC5Cw9G,GAAa,GAEVA,EACI,GAAGD,EAAcx6E,KAAao0B,IAAOmmD,EAAcv6E,KAEnD,GAAGw6E,EAAcx6E,KAAao0B,IAGvC,2BAA2Bp0B,GAC1B,OAAOA,GAAa,EAAAsB,SAASK,KAAO,KAAM,M,8EChC5C,0B,6BCHA,OAAe,mN,8ECAf,kBACC,aAAanC,GACZ,OAAO,IAAI5jB,QAAQ,CAACC,EAASC,KAC5B+N,WAAW,KACVhO,KACE2jB,Q,2FCAN,SAIA,SAIA,OACA,QACA,QACA,MAAMk7E,UAA8B,EAAAj+G,kBAKpC,MAAMC,EAAe,IAAIg+G,EACzB,MAAa9H,UAAsB,EAAA9hF,aAAnC,c,oBACC,KAAAn0B,cAAgBD,EAChB,cACC,MAAO,UAYR,kBACC/I,KAAKa,GAAG6G,OAAOmX,UAAU,GAGzB7e,KAAKa,GAAG6G,OAAOiqG,2BAA2B,CAAC,EAAAhtG,eAAekuG,QAOrD,KAAK1tF,G,mDACV,MAAM2U,EAAU3U,EAAe,GACzB0+C,QAAgB7jE,KAAKgnH,2BAA2BltF,GAClD+pC,EACH7jE,KAAKslC,YAAYu+B,GAEjB7jE,KAAK6b,gBAAgByJ,cAIT,2BAA2BwU,G,mDAIxC,MAAM3b,QAAiB,EAAAtF,KAAKq8B,WAAWp8B,qBAAqBmuG,oBAQ5D,GAAI9oG,EAAU,CAWb,OAVuB,IAAI,EAAA+oG,eAAe/oG,GAECgpG,oBAAoBrtF,GAKnBA,QAK5C95B,KAAK8xB,OAAO9T,MAAMzd,IAAI,8DA7DzB,mB,4FCtBA,SACA,SAOA,OACA,SAIA,SAEA,QAkBA,IAAK6mH,GAAL,SAAKA,GACJ,YACA,gBACA,YAHD,CAAKA,MAAS,KAMd,MAAa/iF,EAqCZ,YAAoBv+B,EAA6BgkC,GAA7B,KAAAhkC,QAA6B,KAAAgkC,SAE3C,4BAA4B1F,G,mDACjC,IACIoE,EADA1O,EAA0B,KAG9B,GAA2B,OAAvBsK,EAAIp2B,UAAU,EAAG,GAAa,CACjC,MAAMsc,EAAY8Z,EAAIp2B,UAAU,GAEhC,GADAw6B,EAAa,EAAApwB,WAAWG,UAAUvY,KAAK8F,MAAOwkB,GAC1Cke,EACH,GAAIA,aAAsB,EAAA6+E,iBAAkB,CAE3CvtF,SAD0C0O,EAAWvwB,qBACjC6hB,eAEpB95B,KAAK8F,MAAMgsB,OAAO9T,MAAMzd,IAAI,yCAK7BP,KAAK8F,MAAMgsB,OAAO9T,MAAMzd,IAAI,0BAA0B+pB,WAGvDwP,QAAgB95B,KAAKsnH,SAASljF,GAC1BtK,EAEC95B,KAAK8pC,OAAOrrC,QAAQ8oH,mBAGvBztF,EAAUuK,EAAkBmjF,wBAAwB1tF,IAGrD95B,KAAK8F,MAAMgsB,OAAO9T,MAAMzd,IAAI,0BAA0B6jC,KAYxD,OANIoE,GAAcxoC,KAAK8pC,OAAO8xD,qBAAqB,IAAMpzD,IACxDxoC,KAAK8pC,OAAO8iE,gCACZ5sG,KAAK8pC,OAAOphB,gBAAgB8f,IAItB1O,KAGF,SAASsK,G,mDACd,OAAO,IAAInc,QAAQ,CAAOC,EAASC,IAAW,EAAD,0CAE5C,MAAMs/F,EAAMpjF,EAAkBqjF,KAAKtjF,GAEnC,GAAIC,EAAkBsjF,iBAAiBhlE,SAAS8kE,GAAM,CAErD,aADoCznH,KAAK4nH,eAAexjF,GAGxDpkC,KAAK6nH,eAAeJ,GAAKpxF,KAAM86C,IAC9BA,EAAOV,KAAKrsC,EAAKlc,OAAS3jB,EAAYyZ,IACrC3a,QAAQiE,KAAK,QAAS0W,GACtBmK,eAOC,eAAes/F,G,mDAKpB,OAJsBA,EAAIntC,eAKzB,KAAK8sC,EAAUU,IAAK,CACnB,MAAM,UAACC,SAAa,4CAAa,QACjC,OAAO,IAAIA,EAEZ,KAAKX,EAAUY,IAAK,CACnB,MAAM,WAACC,SAAc,4CAAa,OAC5B92C,EAAS,IAAI82C,EAGnB,OAFA92C,EAAO+2C,YAAY,EAAAC,kBAEZh3C,EAER,KAAKi2C,EAAUgB,MAAO,CACrB,MAAM,mBAACC,SAAsB,4CAC5B,OAEKl3C,EAAS,IAAIk3C,EACnBl3C,EAAOm3C,kBAAkB,yBACzB,MAAMnqG,QAAiB,EAAAtF,KAAKq8B,WAAWp8B,qBAAqBmuG,oBAM5D,OALI9oG,EACHgzD,EAAOo3C,cAAcpqG,GAErB9a,QAAQiE,KAAK,6DAEP6pE,GAmBT,OAAO,IAAI,EAAAq3C,iBASZ,eAAepkF,GACd,OAAO,IAAInc,QAAQ,CAACC,EAASC,KAC5B,MAAMsgG,EAAQ3wD,SAAS4wD,cAAc,SAIrCD,EAAM/1G,aAAa,cAAe,aAClC+1G,EAAM/1G,aAAa,WAAY,QAC/B+1G,EAAM/1G,aAAa,OAAQ,QAG3B+1G,EAAME,iBAAmB,WACxBF,EAAM96D,QACN,MAAM7zB,EAAU,IAAI,EAAAoM,aAAauiF,GACjCvgG,EAAQ4R,IAIT,MAAMkhD,EAASljB,SAAS4wD,cAAc,UAChCjB,EAAMpjF,EAAkBqjF,KAAKtjF,GACnC,IAAI7lC,EAAe8lC,EAAkBukF,yBAAyBnB,GAC9DlpH,EAAOA,GAAQ8lC,EAAkBwkF,2BAA2BzkF,GAC5D42C,EAAOtoE,aAAa,OAAQnU,GAC5By8E,EAAOtoE,aAAa,MAAO0xB,GAE3BqkF,EAAMK,YAAY9tC,KAGpB,kCAAkC52C,GAEjC,MAAO,SADKpkC,KAAK0nH,KAAKtjF,KAIvB,kBAAkBtK,GACjB,MAAMivF,EAAMjvF,EAAQqM,MACd0J,EAASioB,SAAS4wD,cAAc,UACtC74E,EAAOjW,MAAQmvF,EAAInvF,MACnBiW,EAAOuwE,OAAS2I,EAAI3I,OACpB,MAAMh5E,EAAUyI,EAAOgpD,WAAW,MAClC,GAAIzxD,EAEH,OADAA,EAAQ4hF,UAAUD,EAAK,EAAG,EAAGA,EAAInvF,MAAOmvF,EAAI3I,QACrCh5E,EAAQ6hF,aAAa,EAAG,EAAGF,EAAInvF,MAAOmvF,EAAI3I,QAyDnD,YAAYh8E,GACX,MAAMz1B,EAAWy1B,EAAIx1B,MAAM,KAC3B,OAAOD,EAASA,EAAS3T,OAAS,GAAGs/E,cAUtC,+BAA+BxgD,GAe9B,OAAOA,GA5RT,sBACQ,EAAAwK,cAAgB,4BAChB,EAAA4kF,kBAAoB,wCAEpB,EAAAvB,iBAAmB,CAAC,MAAO,OAAQ,OACnC,EAAAiB,yBAAiD,CACvDO,IAAK,qCACLC,IAAK,qCACLC,IAAK,+C,6BC/CP,sEAkBIpB,EAAa,SAAW73C,GAE3B,IAAkBh1E,KAAM4E,KAAMowE,GAE9BpwE,KAAKzB,KAAO,oBAIb0pH,EAAW/sH,UAAYD,OAAO4iB,OAAQ5iB,OAAO0C,OAAQ,IAAkBzC,WAAa,CAEnF6Y,YAAak0G,EAIb75G,MAAO,SAAW07C,GAEjB,IAUCw/D,EAAa,SAAWC,EAAiBC,GAExC,OAASD,GAER,KARgB,EAQMlmH,QAAQ2a,MAAO,2BAA8BwrG,GAAO,KACzE,MACD,KATiB,EASMnmH,QAAQ2a,MAAO,4BAA+BwrG,GAAO,KAC3E,MACD,KAVkB,EAUMnmH,QAAQ2a,MAAO,gCAAmCwrG,GAAO,KAChF,MACD,QACA,KAZkB,EAYMnmH,QAAQ2a,MAAO,uBAA0BwrG,GAAO,KAGzE,OArBqB,GAwCtBC,EAAQ,SAAW3/D,EAAQ4/D,EAAWC,GAErCD,EAAcA,GAAY,KAK1B,IAJA,IAAIzrH,EAAI6rD,EAAOozD,IACdpiH,GAAM,EAAG8uH,EAAM,EAAGxtH,EAAI,GACtBytH,EAAQ9gB,OAAO+gB,aAAanuH,MAAO,KAAM,IAAIohC,YAAa+sB,EAAOigE,SAAU9rH,EAAGA,EADxC,OAG7B,GAAMnD,EAAI+uH,EAAMvgH,QATjB,QAS6CsgH,EAAMF,GAAiBzrH,EAAI6rD,EAAOisB,YAEvF35E,GAAKytH,EAAOD,GAAOC,EAAM7uH,OACzBiD,GANsC,IAOtC4rH,GAAS9gB,OAAO+gB,aAAanuH,MAAO,KAAM,IAAIohC,YAAa+sB,EAAOigE,SAAU9rH,EAAGA,EAPzC,OAWvC,OAAO,EAAInD,KAQL,IAAU6uH,IAAU7/D,EAAOozD,KAAO0M,EAAM9uH,EAAI,GAC1CsB,EAAIytH,EAAMxrH,MAAO,EAAGvD,KAiP1BkvH,EAAoB,WAIvB,IAAIC,EAAY,IAAI9vF,aAAc,GAC9B+vF,EAAY,IAAI/4B,WAAY84B,EAAUngE,QAK1C,SAASqgE,EAAQ17G,GAEhBw7G,EAAW,GAAMx7G,EACjB,IAAInJ,EAAI4kH,EAAW,GAEfE,EAAS9kH,GAAK,GAAO,MACrB5I,EAAM4I,GAAK,GAAO,KAClBkK,EAAMlK,GAAK,GAAO,IAItB,OAAKkK,EAAI,IAAa46G,EAGjB56G,EAAI,KAER46G,GAAQ,MAGRA,IAAiB,KAAL56G,EAAa,EAAI,IAAa,QAAJlK,GAMlCkK,EAAI,IAKR46G,KAHA1tH,GAAK,OAGY,IAAM8S,IAAY9S,GAAO,IAAM8S,EAAQ,IAKzD46G,GAAY56G,EAAI,KAAS,GAAS9S,GAAK,EAGvC0tH,GAAY,EAAJ1tH,GAKT,OAAO,SAAW2tH,EAAaC,EAAcC,EAAWC,GAEvD,IAAIh7G,EAAI66G,EAAaC,EAAe,GAChC9rG,EAAQhS,KAAK4iB,IAAK,EAAK5f,EAAI,KAAU,IAEzC+6G,EAAWC,EAAa,GAAML,EAAQE,EAAaC,EAAe,GAAM9rG,GACxE+rG,EAAWC,EAAa,GAAML,EAAQE,EAAaC,EAAe,GAAM9rG,GACxE+rG,EAAWC,EAAa,GAAML,EAAQE,EAAaC,EAAe,GAAM9rG,IA5DlD,GAkEpBisG,EAAY,IAAI/wF,WAAYowB,GAChC2gE,EAAUvN,IAAM,EAChB,IA/EoCmN,EAAaC,EAAcC,EAAWC,EAErEh7G,EACAgP,EA4EDksG,EA7Se,SAAW5gE,GAE5B,IAAI2W,EAAM5yD,EAIT88G,EAAW,oCACXC,EAAc,uCACdC,EAAY,uBACZC,EAAgB,oCAGhBp1C,EAAS,CAERq1C,MAAO,EAEPt5D,OAAQ,GAERu5D,SAAU,GAEVC,YAAa,OAEb3kC,OAAQ,GAER4kC,MAAO,EAEPC,SAAU,EAEVvxF,MAAO,EAAGwmF,OAAQ,GAIpB,GAAKt2D,EAAOozD,KAAOpzD,EAAOisB,cAAkBtV,EAAOgpD,EAAO3/D,IAEzD,OAAOw/D,EAvGS,EAuGoB,mBAIrC,KAASz7G,EAAQ4yD,EAAK5yD,MAjCJ,eAmCjB,OAAOy7G,EA3GW,EA2GoB,qBAOvC,IAJA5zC,EAAOq1C,OAjFiB,EAkFxBr1C,EAAOu1C,YAAcp9G,EAAO,GAC5B6nE,EAAOjkB,QAAUgP,EAAO,MAKlB,KADLA,EAAOgpD,EAAO3/D,KAId,GAFA4rB,EAAOjkB,QAAUgP,EAAO,KAEnB,MAAQA,EAAK2qD,OAAQ,IA+B1B,IAxBKv9G,EAAQ4yD,EAAK5yD,MAAO88G,MAExBj1C,EAAOw1C,MAAQz3D,WAAY5lD,EAAO,GAAK,MAGnCA,EAAQ4yD,EAAK5yD,MAAO+8G,MAExBl1C,EAAOy1C,SAAW13D,WAAY5lD,EAAO,GAAK,MAGtCA,EAAQ4yD,EAAK5yD,MAAOg9G,MAExBn1C,EAAOq1C,OA7GU,EA8GjBr1C,EAAO4Q,OAASz4E,EAAO,KAGnBA,EAAQ4yD,EAAK5yD,MAAOi9G,MAExBp1C,EAAOq1C,OAlHc,EAmHrBr1C,EAAO0qC,OAAStyG,SAAUD,EAAO,GAAK,IACtC6nE,EAAO97C,MAAQ9rB,SAAUD,EAAO,GAAK,KArHpB,EAyHX6nE,EAAOq1C,OAxHQ,EAwHyBr1C,EAAOq1C,MAAkC,WA7BvFr1C,EAAOs1C,UAAYvqD,EAAO,KAiC5B,OA7HmB,EA6HViV,EAAOq1C,MA5HO,EAiIdr1C,EAAOq1C,MAMTr1C,EAJC4zC,EAlKW,EAkKoB,gCAL/BA,EA7JW,EA6JoB,4BAmNlB+B,CAAiBZ,GAExC,IAvXuB,IAuXMC,EAAmB,CAE/C,IAAIjlH,EAAIilH,EAAiB9wF,MACxBxnB,EAAIs4G,EAAiBtK,OACrBkL,EA5MqB,SAAWxhE,EAAQrkD,EAAG2M,GAE3C,IAAIm5G,EAAWxkE,EAAQm2D,EAAK3wG,EAAOi/G,EAClCC,EAAiB54B,EAAK64B,EAAS5wH,EAAG2B,EAAGkvH,EAAKC,EACHC,EAAvCC,EAAiBrmH,EAAGsmH,EAAgB35G,EAGrC,GAEK05G,EAAiB,GAASA,EAAiB,OAE3C,IAAMhiE,EAAQ,IAAW,IAAMA,EAAQ,IAAyB,IAAdA,EAAQ,GAI9D,OAAO,IAAIpwB,WAAYowB,GAIxB,GAAKgiE,KAAuBhiE,EAAQ,IAAO,EAAMA,EAAQ,IAExD,OAAOw/D,EA/LW,EA+LoB,wBAMvC,KAFAiC,EAAY,IAAI7xF,WAAY,EAAIj0B,EAAI2M,MAEdm5G,EAAUvwH,OAE/B,OAAOsuH,EAtMW,EAsMoB,mCASvC,IALAviE,EAAS,EAAGm2D,EAAM,EAAGwO,EAAU,EAAII,EACnCD,EAAY,IAAInyF,WAAY,GAC5B+xF,EAAkB,IAAI/xF,WAAYgyF,GAGxBK,EAAgB,GAAS7O,EAAMpzD,EAAOisB,YAAe,CAE9D,GAAKmnC,EAAM,EAAIpzD,EAAOisB,WAErB,OAAOuzC,EAtNQ,GA+NhB,GALAuC,EAAW,GAAM/hE,EAAQozD,KACzB2O,EAAW,GAAM/hE,EAAQozD,KACzB2O,EAAW,GAAM/hE,EAAQozD,KACzB2O,EAAW,GAAM/hE,EAAQozD,KAElB,GAAK2O,EAAW,IAAW,GAAKA,EAAW,KAAeA,EAAW,IAAO,EAAMA,EAAW,KAASC,EAE5G,OAAOxC,EA/NU,EA+NqB,4BAOvC,IADAz2B,EAAM,EACIA,EAAM64B,GAAexO,EAAMpzD,EAAOisB,YAAe,CAM1D,IAHA61C,GADAr/G,EAAQu9C,EAAQozD,MACO,OACH3wG,GAAS,KAEtB,IAAMA,GAAasmF,EAAMtmF,EAAQm/G,EAEvC,OAAOpC,EA9OS,EA8OsB,qBAIvC,GAAKsC,EAIJ,IADAJ,EAAY1hE,EAAQozD,KACdpiH,EAAI,EAAGA,EAAIyR,EAAOzR,IAEvB2wH,EAAiB54B,KAAW24B,OAQ7BC,EAAgBlrH,IAAKupD,EAAOigE,SAAU7M,EAAKA,EAAM3wG,GAASsmF,GAC1DA,GAAOtmF,EAAO2wG,GAAO3wG,EAUvB,IADA9P,EAAIqvH,EACEhxH,EAAI,EAAGA,EAAI2B,EAAG3B,IAEnB6wH,EAAM,EACNJ,EAAWxkE,GAAW0kE,EAAiB3wH,EAAI6wH,GAC3CA,GAAOG,EACPP,EAAWxkE,EAAS,GAAM0kE,EAAiB3wH,EAAI6wH,GAC/CA,GAAOG,EACPP,EAAWxkE,EAAS,GAAM0kE,EAAiB3wH,EAAI6wH,GAC/CA,GAAOG,EACPP,EAAWxkE,EAAS,GAAM0kE,EAAiB3wH,EAAI6wH,GAC/C5kE,GAAU,EAIXglE,IAID,OAAOR,EAyFWS,CAAqBvB,EAAUV,SAAUU,EAAUvN,KAAOz3G,EAAG2M,GAEhF,IA7XsB,IA6XOk5G,EAAkB,CAE9C,OAAStrH,KAAKzB,MAEb,KAAK,mBAEJ,IAAI/D,EAAO8wH,EACPhlC,EAAS,aACT/nF,EAAO,mBACX,MAED,KAAK,YAKJ,IAHA,IAAI0tH,EAAgBX,EAAgBtwH,OAAS,EAAM,EAC/CkxH,EAAa,IAAI/xF,aAAc8xF,GAEzBjwH,EAAI,EAAGA,EAAIiwH,EAAajwH,IAvGyBuuH,EAyGd2B,EAzGyB1B,EAyGT,EAAJxuH,EAvGxDwT,SACAgP,SADAhP,GAF+B66G,EAyGXiB,IAzGwBhB,EAyGH,EAAJtuH,GAvGL,GAChCwiB,EAAQhS,KAAK4iB,IAAK,EAAK5f,EAAI,KAAU,IAEzC+6G,EAAWC,EAAa,GAAMH,EAAaC,EAAe,GAAM9rG,EAChE+rG,EAAWC,EAAa,GAAMH,EAAaC,EAAe,GAAM9rG,EAChE+rG,EAAWC,EAAa,GAAMH,EAAaC,EAAe,GAAM9rG,EAsGzDhkB,EAAO0xH,EACP5lC,EAAS,YACT/nF,EAAO,YACX,MAED,KAAK,gBAEA0tH,EAAgBX,EAAgBtwH,OAAS,EAAM,EAAnD,IACImxH,EAAY,IAAIpvF,YAAakvF,GAEjC,IAAUjwH,EAAI,EAAGA,EAAIiwH,EAAajwH,IAEjCguH,EAAmBsB,EAAqB,EAAJtvH,EAAOmwH,EAAe,EAAJnwH,GAInDxB,EAAO2xH,EACP7lC,EAAS,YACT/nF,EAAO,gBACX,MAED,QAEC8E,QAAQ2a,MAAO,uCAAwChe,KAAKzB,MAK9D,MAAO,CACNq7B,MAAOn0B,EAAG26G,OAAQhuG,EAClB5X,KAAMA,EACNk7E,OAAQg1C,EAAiBj5D,OACzBy5D,MAAOR,EAAiBQ,MACxBC,SAAUT,EAAiBS,SAC3B7kC,OAAQA,EACR/nF,KAAMA,IAOT,OAAO,MAIR2pH,YAAa,SAAW5qH,GAGvB,OADA0C,KAAKzB,KAAOjB,EACL0C,MAIRywE,KAAM,SAAWrsC,EAAKssC,EAAQC,EAAYC,GAuCzC,OAAO,IAAkB11E,UAAUu1E,KAAKr1E,KAAM4E,KAAMokC,GArCpD,SAAyBtK,EAASsyF,GAEjC,OAAStyF,EAAQv7B,MAEhB,KAAK,mBAEJu7B,EAAQ+uD,SAAW,eACnB/uD,EAAQmK,UAAY,gBACpBnK,EAAQoK,UAAY,gBACpBpK,EAAQuyF,iBAAkB,EAC1BvyF,EAAQusD,OAAQ,EAChB,MAED,KAAK,YASL,KAAK,gBAEJvsD,EAAQ+uD,SAAW,iBACnB/uD,EAAQmK,UAAY,eACpBnK,EAAQoK,UAAY,eACpBpK,EAAQuyF,iBAAkB,EAC1BvyF,EAAQusD,OAAQ,EAKb3V,GAASA,EAAQ52C,EAASsyF,KAIyCz7C,EAAYC,O,6BCphBvF,8FA8BIy3C,EAAqB,SAAWj4C,GAEnC,IAAOh1E,KAAM4E,KAAMowE,GAEnBpwE,KAAKssH,eAAiB,GACtBtsH,KAAKusH,iBAAmB,KACxBvsH,KAAKwsH,kBAAoB,KAEzBxsH,KAAKgtF,YAAc,EACnBhtF,KAAKitF,WAAa,GAClBjtF,KAAKktF,iBAAmB,EACxBltF,KAAKmtF,gBAAkB,GACvBntF,KAAKysH,aAAe,CACnBnmC,OAAQ,KACRomC,eAAe,EACfC,eAAe,EACfC,cAAc,EACdC,cAAc,EACdC,gBAAgB,IAKlBzE,EAAmBntH,UAAYD,OAAO4iB,OAAQ5iB,OAAO0C,OAAQ,IAAOzC,WAAa,CAEhF6Y,YAAas0G,EAEbC,kBAAmB,SAAWpwG,GAI7B,OAFAlY,KAAKssH,eAAiBp0G,EAEflY,MAIRytF,eAAgB,SAAWT,GAI1B,OAFAhtF,KAAKgtF,YAAcA,EAEZhtF,MAIRuoH,cAAe,SAAWpqG,GAEzB,IAAIqvE,EAASxtF,KAAKysH,aASlB,GAPAj/B,EAAOk/B,gBAAmBvuG,EAASwzD,WAAWz0E,IAAK,iCACnDswF,EAAOm/B,gBAAmBxuG,EAASwzD,WAAWz0E,IAAK,gCACnDswF,EAAOo/B,eAAkBzuG,EAASwzD,WAAWz0E,IAAK,iCAClDswF,EAAOq/B,eAAkB1uG,EAASwzD,WAAWz0E,IAAK,iCAClDswF,EAAOs/B,iBAAoB3uG,EAASwzD,WAAWz0E,IAAK,qCAC7CihB,EAASwzD,WAAWz0E,IAAK,yCAE3BswF,EAAOk/B,cAEXl/B,EAAOlH,OAAS+hC,EAAmB0E,aAAaC,iBAE1C,GAAKx/B,EAAOm/B,cAElBn/B,EAAOlH,OAAS+hC,EAAmB0E,aAAaE,eAE1C,GAAKz/B,EAAOq/B,aAElBr/B,EAAOlH,OAAS+hC,EAAmB0E,aAAaG,YAE1C,GAAK1/B,EAAOs/B,eAElBt/B,EAAOlH,OAAS+hC,EAAmB0E,aAAaI,qBAE1C,KAAK3/B,EAAOo/B,aAMlB,MAAM,IAAIh8E,MAAO,0EAJjB48C,EAAOlH,OAAS+hC,EAAmB0E,aAAaK,QAQjD,OAAOptH,MAIRywE,KAAM,SAAWrsC,EAAKssC,EAAQC,EAAYC,GAEzC,IAAIO,EAAS,IAAI,IAAYnxE,KAAKowE,SAElCe,EAAOE,gBAAiB,eAExBF,EAAOV,KAAMrsC,EAAO0lB,IAEnB9pD,KAAKqtH,eAAgBvjE,GACnBzzB,KAAMq6C,GACN3B,MAAO6B,IAEPD,EAAYC,IAQhBy8C,eAAgB,SAAWvjE,GAE1B,IAAIokC,EACAI,EAEAC,EAAWzkC,EAAOisB,WAElBu3C,EAAiBttH,KAAKutH,gBAAiBh/B,GACzCl4D,KAAQq4D,IAERR,EAASQ,EACTJ,EAAStuF,KAAKktF,mBAEP,IAAIjlE,QAAS,CAAEC,EAASC,KAE9B+lE,EAAOl4D,WAAYs4D,GAAW,CAAEpmE,UAASC,UAEzC+lE,EAAOS,YAAa,CAAEpwF,KAAM,YAAamR,GAAI4+E,EAAQxkC,UAAU,CAAEA,QAKlEzzB,KAAQv0B,IAER,IAIIg4B,EAJA0zD,EAASxtF,KAAKysH,cAEd,MAAE7yF,EAAK,OAAEwmF,EAAM,QAAEoN,EAAO,OAAElnC,GAAWxkF,EAIzC,OAASwkF,GAER,KAAK+hC,EAAmB0E,aAAaC,YACpClzF,EAAU,IAAI,IAAmB0zF,EAAS5zF,EAAOwmF,EAAQ,wBACzD,MACD,KAAKiI,EAAmB0E,aAAaE,UACpCnzF,EAAU,IAAI,IAAmB0zF,EAAS5zF,EAAOwmF,EAAQ,oBACzD,MACD,KAAKiI,EAAmB0E,aAAaU,OACrC,KAAKpF,EAAmB0E,aAAaG,OACpCpzF,EAAU,IAAI,IAAmB0zF,EAAS5zF,EAAOwmF,EAAQiI,EAAmBqF,eAAgBlgC,EAAOlH,QAAU,oBAC7G,MACD,KAAK+hC,EAAmB0E,aAAaK,QACpCtzF,EAAU,IAAI,IAAmB0zF,EAAS5zF,EAAOwmF,EAAQ,mBACzD,MACD,KAAKiI,EAAmB0E,aAAaY,gBACpC7zF,EAAU,IAAI,IAAmB0zF,EAAS5zF,EAAOwmF,EAAQ,2BACzD,MACD,KAAKiI,EAAmB0E,aAAaI,iBACpCrzF,EAAU,IAAI,IAAmB0zF,EAAS5zF,EAAOwmF,EAAQ,4BACzD,MACD,QACC,MAAM,IAAIxvE,MAAO,4DASnB,OALA9W,EAAQmK,UAA+B,IAAnBupF,EAAQxyH,OAAe,eAAe,2BAC1D8+B,EAAQoK,UAAY,eACpBpK,EAAQuyF,iBAAkB,EAC1BvyF,EAAQ9J,aAAc,EAEf8J,IAgBT,OAZAwzF,EACEz+B,QAAS,KAEJX,GAAUI,IAEdJ,EAAO6B,WAAaxB,SACbL,EAAOl4D,WAAYs4D,MAMtBg/B,GAIRM,gBAAiB,WAEhB,IAAO5tH,KAAKwsH,kBAAoB,CAG/B,IAAIqB,EAAW,IAAI,IAAY7tH,KAAKowE,SACpCy9C,EAASz8C,QAASpxE,KAAKssH,gBACvB,IAAI/8B,EAAY,IAAItnE,QAAS,CAAEC,EAASC,KAEvC0lG,EAASp9C,KAAM,sBAAuBvoD,OAAS3jB,EAAW4jB,KAKvD2lG,EAAe,IAAI,IAAY9tH,KAAKowE,SACxC09C,EAAa18C,QAASpxE,KAAKssH,gBAC3BwB,EAAaz8C,gBAAiB,eAC9B,IAAI08C,EAAgB,IAAI9lG,QAAS,CAAEC,EAASC,KAE3C2lG,EAAar9C,KAAM,wBAAyBvoD,OAAS3jB,EAAW4jB,KAIjEnoB,KAAKwsH,kBAAoBvkG,QAAQshB,IAAK,CAAEgmD,EAAWw+B,IACjD13F,KAAM,EAAIk5D,EAAWw+B,MAErB,IAAIt+B,EAAK44B,EAAmB2F,YAAYr+B,WAEpC5hD,EAAO,CACV,4BACAwhD,EACA,eACAE,EAAGzhF,UAAWyhF,EAAGnmF,QAAS,KAAQ,EAAGmmF,EAAGG,YAAa,OACpD1qF,KAAM,MAERlF,KAAKmtF,gBAAkB7H,IAAIY,gBAAiB,IAAIF,KAAM,CAAEj4C,KACxD/tC,KAAKusH,iBAAmBwB,IAM3B,OAAO/tH,KAAKwsH,mBAIbe,gBAAiB,SAAWh/B,GAE3B,OAAOvuF,KAAK4tH,kBAAkBv3F,KAAM,KAIlC,IA4CG63D,EA9CCluF,KAAKitF,WAAWjyF,OAASgF,KAAKgtF,cAE9BkB,EAAS,IAAI2B,OAAQ7vF,KAAKmtF,kBAEvBn3D,WAAa,GACpBk4D,EAAO6B,UAAY,EAEnB7B,EAAOS,YAAa,CACnBpwF,KAAM,OACNivF,OAAQxtF,KAAKysH,aACbF,iBAAkBvsH,KAAKusH,mBAGxBr+B,EAAO8B,UAAY,SAAWxgF,GAE7B,IAAI1N,EAAU0N,EAAEhV,KAEhB,OAASsH,EAAQvD,MAEhB,IAAK,YACJ2vF,EAAOl4D,WAAYl0B,EAAQ4N,IAAKwY,QAASpmB,GACzC,MAED,IAAK,QACJosF,EAAOl4D,WAAYl0B,EAAQ4N,IAAKyY,OAAQrmB,GACxC,MAED,QACCuB,QAAQ2a,MAAO,kDAAoDlc,EAAQvD,KAAO,OAMrFyB,KAAKitF,WAAW3xF,KAAM4yF,IAItBluF,KAAKitF,WAAWh9E,MAAM,SAAWC,EAAGC,GAEnC,OAAOD,EAAE6/E,UAAY5/E,EAAE4/E,WAAc,EAAI,KAU3C,OAJI7B,EAASluF,KAAKitF,WAAYjtF,KAAKitF,WAAWjyF,OAAS,IAEhD+0F,WAAaxB,EAEbL,KAMThwE,QAAS,WAER,IAAM,IAAIpjB,EAAI,EAAGA,EAAIkF,KAAKitF,WAAWjyF,OAAQF,IAE5CkF,KAAKitF,WAAYnyF,GAAIo1F,YAMtB,OAFAlwF,KAAKitF,WAAWjyF,OAAS,EAElBgF,QAQTqoH,EAAmB0E,aAAe,CACjCK,QAAS,EACTa,QAAS,EACTR,OAAQ,EACRP,OAAQ,EACRgB,OAAQ,EACRC,OAAQ,EACRC,sBAAuB,EACvBnB,UAAW,EACXU,gBAAiB,EACjBR,iBAAkB,EAClBH,YAAa,GACbqB,WAAY,GACZC,+BAAgC,GAChCC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,YAAa,IAKdrG,EAAmBsG,WAAa,CAC/BC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,8BAA+B,MAC/BC,8BAA+B,OAEhC1G,EAAmBqF,eAAiB,GACpCrF,EAAmBqF,eAAgBrF,EAAmB0E,aAAaU,QAClEpF,EAAmBsG,WAAWC,6BAC/BvG,EAAmBqF,eAAgBrF,EAAmB0E,aAAaG,QAClE7E,EAAmBsG,WAAWI,8BAI/B1G,EAAmB2F,YAAc,WAEhC,IAAIxgC,EACAg/B,EACAwC,EAEJh/B,UAAY,SAAWxgF,GAEtB,IAyCcggF,EAEVy/B,EA3CAntH,EAAU0N,EAAEhV,KAEhB,OAASsH,EAAQvD,MAEhB,IAAK,OACJivF,EAAS1rF,EAAQ0rF,OAoCLgC,EAnCN1tF,EAAQyqH,iBAsChBC,EAAoB,IAAIvkG,QAAWC,IAElC+mG,EAAc,CAAEz/B,aAAY0/B,qBAAsBhnG,GAClDkgG,MAAO6G,KAEJ54F,KAAM,KAET,IAAI,UAAE84F,EAAS,gBAAEC,GAAoBH,EAErCD,EAAaG,EAEbC,MAhDC,MAED,IAAK,YACJ5C,EAAkBn2F,KAAM,KAEvB,IAMC,IAJA,IAAI,MAAEuD,EAAK,OAAEwmF,EAAM,SAAEiP,EAAQ,QAAE7B,EAAO,OAAElnC,GA+C7C,SAAoBx8B,GAEnB,IAAIwlE,EAAY,IAAIN,EAAY,IAAIt1F,WAAYowB,IAE5ClwB,EAAQ01F,EAAUC,cAAe,EAAG,GACpCnP,EAASkP,EAAUE,eAAgB,EAAG,GACtCC,EAASH,EAAUI,aAAc,GACjCL,EAAWC,EAAUK,cAEzB,SAASC,IAERN,EAAUO,QACVP,EAAUn5B,SAIX,IAAOk5B,EAEN,OAAS7hC,EAAOlH,QAEf,KAAK,EACJkH,EAAOlH,OAAS,EASnB,IAAO1sD,IAAWwmF,IAAYqP,EAG7B,MADAG,IACM,IAAIh/E,MAAO,kDAIlB,IAAO0+E,EAAUQ,mBAGhB,MADAF,IACM,IAAIh/E,MAAO,sDAMlB,IAFA,IAAI48E,EAAU,GAEJuC,EAAM,EAAGA,EAAMN,EAAQM,IAAS,CAEzC,IAAIC,EAAWV,EAAUC,cAAe,EAAGQ,GACvCE,EAAYX,EAAUE,eAAgB,EAAGO,GACzCG,EAAM,IAAIx2F,WAAY41F,EAAUa,8BAA+B,EAAGJ,EAAKviC,EAAOlH,SAWlF,IATagpC,EAAUc,eACtBF,EACA,EACAH,EACAviC,EAAOlH,OACP,EACA+oC,GAMA,MADAO,IACM,IAAIh/E,MAAO,qDAIlB48E,EAAQlyH,KAAM,CAAEd,KAAM01H,EAAKt2F,MAAOo2F,EAAU5P,OAAQ6P,IAMrD,OAFAL,IAEO,CAAEh2F,QAAOwmF,SAAQiP,WAAU7B,UAASlnC,OAAQkH,EAAOlH,QAzHH+pC,CAAWvuH,EAAQgoD,QAElEk6B,EAAU,GAEJlpF,EAAI,EAAGA,EAAI0yH,EAAQxyH,SAAWF,EAEvCkpF,EAAQ1oF,KAAMkyH,EAAS1yH,GAAIN,KAAKsvD,QAIjCy7B,KAAKoJ,YAAa,CAAEpwF,KAAM,YAAamR,GAAI5N,EAAQ4N,GAAIkqB,QAAOwmF,SAAQiP,WAAU7B,UAASlnC,UAAUtC,GAElG,MAAQhmE,GAET3a,QAAQ2a,MAAOA,GAEfunE,KAAKoJ,YAAa,CAAEpwF,KAAM,QAASmR,GAAI5N,EAAQ4N,GAAIsO,MAAOA,EAAMlc,iB,2FC5ZtE,SACA,OACA,QAEMiH,EAAe,IAAI,EAAAD,iBACzB,MAAao2G,UAAoB,EAAA/hF,aAAjC,c,oBACC,KAAAn0B,cAAgBD,EAChB,cACC,MAAO,OAGR,kBACC/I,KAAKa,GAAG6G,OAAOmX,UAAU,GACzB7e,KAAKa,GAAG6G,OAAOiqG,2BAA2B,CAAC,EAAAhtG,eAAekuG,QAGrD,KAAK1tF,G,mDACV,MAAM2U,EAAU3U,EAAe,GAC/BnlB,KAAKslC,YAAYxL,OAbnB,iB,2FCNA,SAEA,OACA,QACA,MAAMw2F,UAA8B,EAAAxnH,iBAApC,c,oBACC,KAAA0P,MAAQ,EAAA+F,YAAYvf,QAAQ,EAAG,CAC9BunC,MAAO,CAAC,EAAG,GACXC,aAAc,EAAC,GAAM,MAGvB,MAAMz9B,EAAe,IAAIunH,EAEzB,MAAanR,UAAsB,EAAAhiF,aAAnC,c,oBACC,KAAAn0B,cAAgBD,EAChB,cACC,MAAO,SAGR,kBACC/I,KAAKa,GAAG6G,OAAOmX,UAAU,EAAG,GAC5B7e,KAAKa,GAAG6G,OAAOiqG,2BAA2B,CACzC,EAAAhtG,eAAekuG,MACf,EAAAluG,eAAekuG,MACf,EAAAluG,eAAekuG,MACf,EAAAluG,eAAekuG,QAEhB7yG,KAAKiH,QAAQspH,UAAU,KAGvBvwH,KAAK6b,gBAAgB20G,6BAGhB,O,mDACL,MAAM/oH,EAAczH,KAAK4f,GAAGpH,MAC5B,GAAIxY,KAAKa,GAAG6G,OAAO+oH,UAAUhpH,GAAc,CAC1C,MAAM1F,QAAkB/B,KAAKF,qBAAqBs2B,wBAAwB3uB,GAC1EzH,KAAKslC,YAAYvjC,EAAU+3B,gBAE3B95B,KAAK8xB,OAAO9T,MAAMzd,IAAI,YAAYkH,SA1BrC,mB,8ECZA,eAEA,SACA,SACA,SACA,SACA,SAWA,sBACC,WAAWs3G,GACVA,EAAK1lG,cAAc,EAAAq3G,2BAA4B,EAAAh1F,eAAeL,QAC9D0jF,EAAK1lG,cAAc,EAAAolC,6BAA8B,EAAA/iB,eAAeL,QAChE0jF,EAAK1lG,cAAc,EAAAs3G,cAAe,EAAAj1F,eAAeJ,MACjDyjF,EAAK1lG,cAAc,EAAA60C,eAAgB,EAAAxyB,eAAeJ,MAClDyjF,EAAK1lG,cAAc,EAAAu3G,cAAe,EAAAl1F,eAAeJ,S,2FCtBnD,SACA,SAEA,MAAao1F,UAAmC,EAAAjyE,6BAC/C,cACC,MAAO,sBAGF,yBAAyBnhC,EAAgB1N,G,mDAO9C,OAAO,IAAI,EAAA0wD,YAAYhjD,EAAQ1N,OAZjC,gC,2FCFA,SAYA,MAAsB8uC,UAAiE,EAAApP,eAKhF,eAAehyB,EAAgBuzG,G,mDAMpC,MAAMjyE,QAAiB5+C,KAAK8wH,yBAAyBxzG,EAAQuzG,GACvDE,EAAYxqD,YAAYC,MAK9B,OAJA5nB,EAAS/hD,KAAO,GAAGmD,KAAKqI,eAAeiV,EAAOzgB,QAAQk0H,KAAa/wH,KAAKgxH,sBAElEhxH,KAAKwI,OAAOmnC,WAClB3vC,KAAKixH,eAAeryE,GACbA,KAIR,cACC,OAAO9T,KAAKC,UAAU/qC,KAAKwI,OAAO+gC,IAAIvkC,IAAK/G,GAAMA,EAAEylG,oBAtBrD,kC,2FCdA,SACA,QACA,QACA,SAiBA,SAEA,OAEA,SAEA,OACA,SACA,yBACA,MAAawtB,EAKZ,YAAsBztH,GAAA,KAAAA,OAFZ,KAAA0tH,UAAY,IAAI,EAAA3pF,UAChB,KAAA4pF,MAAQ,IAAI,EAAAz6F,QAErB32B,KAAKqxH,uBAEN,cAAczhF,EAAcC,EAA2BC,GAClDF,aAAiB0hF,WACpBtxH,KAAKuxH,oBAAoB3hF,EAAOC,EAAQC,GAC9BF,aAAiB4hF,eAC3BxxH,KAAKyxH,uBAAuB7hF,EAAOC,EAAQC,GAG7C,oBAAoBF,EAAmBC,EAA2BC,IAClE,uBAAuBF,EAAsBC,EAA2BC,IACxE,SAASrsC,GACRzD,KAAKyD,KAAOA,EAEb,wBACU,iCAAiCmsC,EAAmBC,GAC7D7vC,KAAKoxH,MAAM9rH,EAAKsqC,EAAM8hF,QAAU7hF,EAAO8hF,YAAe,EAAI,EAC1D3xH,KAAKoxH,MAAM7rH,GAAMqqC,EAAMgiF,QAAU/hF,EAAOgiF,aAAgB,EAAI,GAvB9D,4BAgCA,MAAMC,UAA8B,EAAAhpH,iBAApC,c,oBACC,KAAAipH,gBAAkB,EAAAxzG,YAAYjf,OA1DD,sdA0D+B,CAC3D0yH,OAAO,EACPr4E,SAAU,EAAAtB,oBAAoB45E,aAE/B,KAAAC,gBAAkB,EAAA3zG,YAAYjf,OAAO,GAAI,CAACmtC,QAAQ,KAEnD,MAAM1jC,EAAe,IAAI+oH,EAEzB,MAAanB,UAAsB,EAAArhF,eAAnC,c,oBACC,KAAAtmC,cAAgBD,EAKhB,cACC,MAAO,OAER,kBAEC/I,KAAKa,GAAG6G,OAAOw6B,kCAAkC,CAChD,IAAI,EAAAF,0BAA0B,UAAW,EAAAn+B,oBAAoBE,QAI/D,cAAc6rC,EAAcC,EAA2BC,GACtD9vC,KAAKmyH,uBAEDnyH,KAAKoyH,YACRpyH,KAAKoyH,WAAWrjE,cAAcnf,EAAOC,EAAQC,GAGvC,uBACF9vC,KAAKoyH,YAAcpyH,KAAKqyH,qBAAuBryH,KAAK4f,GAAGsyG,iBAC3DlyH,KAAKgyC,WAGC,WACP,IACC,MAAMy2D,EAAgB,kBACnB,EAAA6pB,iBAAiBzoG,OAAO7pB,KAAK4f,GAAGsyG,kFAInC7uH,QAAQC,IAAI,iBACZD,QAAQC,IAAImlG,GACZ,MAKM8pB,EALgD,IAAI,EAAAl3E,cACzD,0BACA,QACAotD,EAEuB+pB,CAA2BtB,EAAyB3kG,GACxEgmG,GACHvyH,KAAKoyH,WAAa,IAAIG,EAAgBvyH,MACtCA,KAAKqyH,oBAAsBryH,KAAK4f,GAAGsyG,kBAEnClyH,KAAK8xB,OAAO9T,MAAMzd,IAAI,4BACtBP,KAAKoyH,gBAAa7tH,GAElB,MAAOiL,GACRnM,QAAQiE,KAAKkI,GACbxP,KAAK8xB,OAAO9T,MAAMzd,IAAI,6BAA6BiP,MACnDxP,KAAKoyH,gBAAa7tH,IArDrB,mB,+ECtEA,eACA,QACA,QACA,OAGA,MAAMkuH,UAA8B,EAAA3pH,kBACpC,MAAMC,EAAe,IAAI0pH,EAEzB,MAAa7B,UAAsB,EAAAthF,eAAnC,c,oBACC,KAAAtmC,cAAgBD,EAEhB,cACC,MAAO,OAER,kBAEC/I,KAAKa,GAAG6G,OAAOw6B,kCACd,CAAC,EAAG,EAAG,EAAG,GAAGl9B,IAAKlK,GAAM,IAAI,EAAAknC,0BAA0B,UAAUlnC,IAAK,EAAA+I,oBAAoBE,QAE1F/D,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAA0B,QAAS,EAAAn+B,oBAAoBE,QAI7D,cAAc6rC,EAAcC,EAA2BC,GACtD,MACM8e,EADc5uD,KAAKa,GAAGkG,YAAY8nD,qBACO7pD,IAAK4C,GAAeA,EAAWknD,WAC9E,IAAK,IAAIrrD,KAAQmrD,EAChBnrD,EAAKsrD,cAAcnf,EAAOC,EAAQC,IApBrC,mB,8ECTA,eAEA,SACA,SAEA,SAOA,SAuBA,SAWA,SAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAoFA,QAEA,mBACC,WAAWivE,GACVA,EAAK1lG,cAAc,EAAAq5G,UAAW,EAAA/2F,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAs5G,WAAY,EAAAh3F,YAAYO,OAC3C6iF,EAAK1lG,cAAc,EAAAu5G,UAAW,EAAAj3F,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAw5G,YAAa,EAAAl3F,YAAYO,OAC5C6iF,EAAK1lG,cAAc,EAAAy5G,UAAW,EAAAn3F,YAAYI,OAC1CgjF,EAAK1lG,cAAc,EAAA05G,WAAY,EAAAp3F,YAAYO,OAC3C6iF,EAAK1lG,cAAc,EAAA25G,WAAY,EAAAr3F,YAAYO,OAC3C6iF,EAAK1lG,cAAc,EAAAknB,gBAAiB,EAAA5E,YAAYG,QAAS,CAACm3F,OAAQ,CAAC,GAAG,EAAA7yH,YAAYi9B,iBAClF0hF,EAAK1lG,cAAc,EAAA65G,WAAY,EAAAv3F,YAAYK,MAC3C+iF,EAAK1lG,cAAc,EAAA85G,UAAW,EAAAx3F,YAAYO,OAC1C6iF,EAAK1lG,cAAc,EAAAipD,eAAgB,EAAA3mC,YAAYG,SAC/CijF,EAAK1lG,cAAc,EAAA+5G,iBAAkB,EAAAz3F,YAAYK,MACjD+iF,EAAK1lG,cAAc,EAAAg6G,YAAa,EAAA13F,YAAYP,UAC5C2jF,EAAK1lG,cAAc,EAAAi6G,YAAa,EAAA33F,YAAYK,MAC5C+iF,EAAK1lG,cAAc,EAAAk6G,cAAe,EAAA53F,YAAYC,YAC9CmjF,EAAK1lG,cAAc,EAAAm6G,WAAY,EAAA73F,YAAYP,UAC3C2jF,EAAK1lG,cAAc,EAAAqoD,eAAgB,EAAA/lC,YAAYP,UAC/C2jF,EAAK1lG,cAAc,EAAAo6G,aAAc,EAAA93F,YAAYK,MAC7C+iF,EAAK1lG,cAAc,EAAAsoD,UAAW,EAAAhmC,YAAYP,UAC1C2jF,EAAK1lG,cAAc,EAAAq6G,aAAc,EAAA/3F,YAAYK,MAC7C+iF,EAAK1lG,cAAc,EAAAs6G,UAAW,EAAAh4F,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAu6G,WAAY,EAAAj4F,YAAYK,MAC3C+iF,EAAK1lG,cAAc,EAAAw6G,UAAW,EAAAl4F,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAy6G,YAAa,EAAAn4F,YAAYK,MAC5C+iF,EAAK1lG,cAAc,EAAA06G,iBAAkB,EAAAp4F,YAAYC,YACjDmjF,EAAK1lG,cAAc,EAAA26G,kBAAmB,EAAAr4F,YAAYC,YAClDmjF,EAAK1lG,cAAc,EAAA46G,kBAAmB,EAAAt4F,YAAYC,YAClDmjF,EAAK1lG,cAAc,EAAA66G,kBAAmB,EAAAv4F,YAAYC,YAClDmjF,EAAK1lG,cAAc,EAAA86G,YAAa,EAAAx4F,YAAYK,MAC5C+iF,EAAK1lG,cAAc,EAAA+6G,YAAa,EAAAz4F,YAAYK,MAC5C+iF,EAAK1lG,cAAc,EAAA0yB,cAAe,EAAApQ,YAAYG,SAC9CijF,EAAK1lG,cAAc,EAAAg7G,eAAgB,EAAA14F,YAAY98B,OAC/CkgH,EAAK1lG,cAAc,EAAAi7G,iBAAkB,EAAA34F,YAAYC,YACjDmjF,EAAK1lG,cAAc,EAAAk7G,kBAAmB,EAAA54F,YAAYK,MAClD+iF,EAAK1lG,cAAc,EAAAm7G,wBAAyB,EAAA74F,YAAYP,UACxD2jF,EAAK1lG,cAAc,EAAAo7G,aAAc,EAAA94F,YAAYP,UAC7C2jF,EAAK1lG,cAAc,EAAAq7G,gBAAiB,EAAA/4F,YAAY98B,OAChDkgH,EAAK1lG,cAAc,EAAAs7G,aAAc,EAAAh5F,YAAYK,MAC7C+iF,EAAK1lG,cAAc,EAAAu7G,UAAW,EAAAj5F,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAw7G,WAAY,EAAAl5F,YAAYK,MAC3C+iF,EAAK1lG,cAAc,EAAAuoD,UAAW,EAAAjmC,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAwoD,UAAW,EAAAlmC,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAyoD,UAAW,EAAAnmC,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAy7G,UAAW,EAAAn5F,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAA07G,WAAY,EAAAp5F,YAAYK,MAC3C+iF,EAAK1lG,cAAc,EAAA27G,cAAe,EAAAr5F,YAAYK,MAC9C+iF,EAAK1lG,cAAc,EAAA47G,WAAY,EAAAt5F,YAAYQ,MAC3C4iF,EAAK1lG,cAAc,EAAA67G,YAAa,EAAAv5F,YAAYP,UAC5C2jF,EAAK1lG,cAAc,EAAA87G,gBAAiB,EAAAx5F,YAAYK,MAChD+iF,EAAK1lG,cAAc,EAAA+7G,SAAU,EAAAz5F,YAAYI,OACzCgjF,EAAK1lG,cAAc,EAAAg8G,aAAc,EAAA15F,YAAYG,SAC7CijF,EAAK1lG,cAAc,EAAAi8G,YAAa,EAAA35F,YAAYG,SAC5CijF,EAAK1lG,cAAc,EAAA0oD,UAAW,EAAApmC,YAAYK,MAC1C+iF,EAAK1lG,cAAc,EAAAk8G,eAAgB,EAAA55F,YAAYM,MAC/C8iF,EAAK1lG,cAAc,EAAAm8G,wBAAyB,EAAA75F,YAAYM,MACxD8iF,EAAK1lG,cAAc,EAAAo8G,kBAAmB,EAAA95F,YAAYM,MAClD8iF,EAAK1lG,cAAc,EAAAq8G,iBAAkB,EAAA/5F,YAAYM,MACjD8iF,EAAK1lG,cAAc,EAAAs8G,WAAY,EAAAh6F,YAAYG,SAC3CijF,EAAK1lG,cAAc,EAAAu8G,aAAc,EAAAj6F,YAAYG,SAC7CijF,EAAK1lG,cAAc,EAAAw8G,cAAe,EAAAl6F,YAAYC,YAC9CmjF,EAAK1lG,cAAc,EAAA2oD,cAAe,EAAArmC,YAAYP,UAC9C2jF,EAAK1lG,cAAc,EAAAy8G,cAAe,EAAAn6F,YAAYP,UAC9C2jF,EAAK1lG,cAAc,EAAA08G,eAAgB,EAAAp6F,YAAY98B,OAC/CkgH,EAAK1lG,cAAc,EAAA28G,aAAc,EAAAr6F,YAAYP,UAC7C2jF,EAAK1lG,cAAc,EAAA48G,YAAa,EAAAt6F,YAAYK,MAC5C+iF,EAAK1lG,cAAc,EAAA68G,WAAY,EAAAv6F,YAAYK,MAC3C+iF,EAAK1lG,cAAc,EAAA88G,UAAW,EAAAx6F,YAAYO,OAC1C6iF,EAAK1lG,cAAc,EAAA+8G,WAAY,EAAAz6F,YAAYK,MAC3C+iF,EAAK1lG,cAAc,EAAA4oD,WAAY,EAAAtmC,YAAYP,UAC3C2jF,EAAK1lG,cAAc,EAAAg9G,gBAAiB,EAAA16F,YAAYK,MAChD+iF,EAAK1lG,cAAc,EAAAi9G,UAAW,EAAA36F,YAAYO,OAC1C6iF,EAAK1lG,cAAc,EAAAk9G,cAAe,EAAA56F,YAAY98B,OAC9CkgH,EAAK1lG,cAAc,EAAAm9G,mBAAoB,EAAA76F,YAAYO,OACnD6iF,EAAK1lG,cAAc,EAAAo9G,kBAAmB,EAAA96F,YAAYC,YAClDmjF,EAAK1lG,cAAc,EAAAq9G,kBAAmB,EAAA/6F,YAAYC,YAClDmjF,EAAK1lG,cAAc,EAAAs9G,kBAAmB,EAAAh7F,YAAYC,YAClDmjF,EAAK1lG,cAAc,EAAAu9G,mBAAoB,EAAAj7F,YAAYC,YACnDmjF,EAAK1lG,cAAc,EAAAw9G,kBAAmB,EAAAl7F,YAAYP,UAClD2jF,EAAK1lG,cAAc,EAAAy9G,kBAAmB,EAAAn7F,YAAYP,a,8EC1PpD,cACA,QACA,QACA,QACA,OASA,MAAM27F,UAAiC,EAAAjuH,iBAAvC,c,oBACC,KAAAg9B,MAAQ,EAAAvnB,YAAYzf,MAAM,IAE3B,MAAMk4H,EAAyB,IAAID,EACnC,MAAahD,UAAyB,EAAAptH,YAAtC,c,oBACC,KAAAqC,cAAgBguH,EAChB,cACC,MAAO,eAGR,kBACCh3H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAbiB,MAa0B,EAAAn+B,oBAAoBG,OAIrE,UAAUyE,GACT,MAAMq9B,EAAQ9lC,KAAK8M,mBAAmB,SAGhCC,EAAY,OADN/M,KAAKoI,YAAY,gBACS,EAAAE,UAAUw9B,MAAMA,MACtDr9B,EAA8BwE,eAAejN,KAAM,CAAC+M,KAjBtD,qBA2BA,MAAMkqH,UAAiC,EAAAnuH,iBAAvC,c,oBACC,KAAAu5D,IAAM,EAAA9jD,YAAYvf,QAAQ,IAE3B,MAAMk4H,EAAyB,IAAID,EACnC,MAAa3C,UAAyB,EAAA3tH,YAAtC,c,oBACC,KAAAqC,cAAgBkuH,EAChB,cACC,MAAO,eAGR,kBACCl3H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAbmB,QAa0B,EAAAn+B,oBAAoB/E,SAIvE,UAAU2J,GACT,MAAM45D,EAAMriE,KAAK8M,mBAAmB,OAG9BC,EAAY,SADJ/M,KAAKoI,YAAY,oBACa,EAAAE,UAAU+5D,IAAIA,MAC1D55D,EAA8BwE,eAAejN,KAAM,CAAC+M,KAjBtD,sB,8EChDA,cACA,QACA,QACA,QACA,OAQA,MAAMoqH,UAAkC,EAAAruH,iBAAxC,c,oBACC,KAAAxD,EAAI,EAAAiZ,YAAYzf,MAAM,GACtB,KAAAyG,EAAI,EAAAgZ,YAAYzf,MAAM,IAEvB,MAAMs4H,EAAgB,IAAID,EAC1B,MAAanD,UAA0B,EAAArtH,YAAvC,c,oBACC,KAAAqC,cAAgBouH,EAChB,cACC,MAAO,gBAIR,kBACCp3H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAA0BgyF,EAAkB93E,YAAa,EAAAr4C,oBAAoBI,QAInF,UAAUwE,GACT,MAAMnD,EAAItF,KAAK8M,mBAAmB,KAC5BvH,EAAIvF,KAAK8M,mBAAmB,KAG5BC,EAAY,QADN/M,KAAKoI,YAAY4rH,EAAkB93E,kBACZ,EAAA5zC,UAAU+uH,OAAO/xH,EAAGC,KACvDkD,EAA8BwE,eAAejN,KAAM,CAAC+M,KAnBtD,sBAKiB,EAAAmvC,YAAc,OAuB/B,MAAMo7E,UAAkC,EAAAxuH,iBAAxC,c,oBACC,KAAAxD,EAAI,EAAAiZ,YAAYzf,MAAM,GACtB,KAAAyG,EAAI,EAAAgZ,YAAYzf,MAAM,GACtB,KAAA0G,EAAI,EAAA+Y,YAAYzf,MAAM,IAEvB,MAAMy4H,EAAgB,IAAID,EAC1B,MAAarD,UAA0B,EAAAttH,YAAvC,c,oBACC,KAAAqC,cAAgBuuH,EAChB,cACC,MAAO,gBAIR,kBACCv3H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAA0BiyF,EAAkB/3E,YAAa,EAAAr4C,oBAAoBK,QAInF,UAAUuE,GACT,MAAMnD,EAAItF,KAAK8M,mBAAmB,KAC5BvH,EAAIvF,KAAK8M,mBAAmB,KAC5BtH,EAAIxF,KAAK8M,mBAAmB,KAG5BC,EAAY,QADN/M,KAAKoI,YAAY6rH,EAAkB/3E,kBACZ,EAAA5zC,UAAUkvH,OAAOlyH,EAAGC,EAAGC,KAC1DiD,EAA8BwE,eAAejN,KAAM,CAAC+M,KApBtD,sBAKiB,EAAAmvC,YAAc,OAwB/B,MAAMu7E,UAAkC,EAAA3uH,iBAAxC,c,oBACC,KAAAxD,EAAI,EAAAiZ,YAAYzf,MAAM,GACtB,KAAAyG,EAAI,EAAAgZ,YAAYzf,MAAM,GACtB,KAAA0G,EAAI,EAAA+Y,YAAYzf,MAAM,GACtB,KAAA2G,EAAI,EAAA8Y,YAAYzf,MAAM,IAEvB,MAAM44H,EAAgB,IAAID,EAC1B,MAAavD,UAA0B,EAAAvtH,YAAvC,c,oBACC,KAAAqC,cAAgB0uH,EAChB,cACC,MAAO,gBAIR,kBACC13H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAA0BkyF,EAAkBh4E,YAAa,EAAAr4C,oBAAoBM,QAInF,UAAUsE,GACT,MAAMnD,EAAItF,KAAK8M,mBAAmB,KAC5BvH,EAAIvF,KAAK8M,mBAAmB,KAC5BtH,EAAIxF,KAAK8M,mBAAmB,KAC5BrH,EAAIzF,KAAK8M,mBAAmB,KAG5BC,EAAY,QADN/M,KAAKoI,YAAY8rH,EAAkBh4E,kBACZ,EAAA5zC,UAAUqvH,OAAOryH,EAAGC,EAAGC,EAAGC,KAC7DgD,EAA8BwE,eAAejN,KAAM,CAAC+M,KArBtD,sBAKiB,EAAAmvC,YAAc,Q,8EC5F/B,cACA,QACA,OACA,QACA,QAGA,MAAM07E,UAA0B,EAAA9uH,kBAChC,MAAMC,EAAe,IAAI6uH,EACzB,MAAMC,UAAwB,EAAAlxH,YAA9B,c,oBACC,KAAAqC,cAAgBD,GAQjB,SAAS+uH,EAAev5H,EAAcE,GACrC,MAAMmqB,EAAanqB,EAAQmqB,WACrBm1F,EAAat/G,EAAQs/G,WAC3B,OAAO,cAA0B8Z,EAChC,cACC,OAAOt5H,EAGR,kBACCyB,KAAKa,GAAGC,QAAQqG,mCACfyhB,EAAW5jB,IAAKrI,GACR,IAAI,EAAAqlC,0BAA0BrlC,EAAG,EAAAkH,oBAAoB/E,SAI/D,gBACCkB,KAAKklB,UAAU64F,EAAY,MAAOn1F,EAAW5jB,IAAKrI,GAAM,IAGzD,UAAU8L,GACT,MAAMosB,EAAuB,GAEvB1vB,EAAMnF,KAAK8M,mBAAmB,OAEpC9M,KAAKa,GAAGC,QAAQq0B,oBAAoBvzB,QAASjF,IAC5C,MAAMi4B,EAAW50B,KAAKoI,YAAYzL,GAClCk4B,EAAWv5B,KAAK,SAASs5B,OAAczvB,KAAOxI,OAE/C8L,EAA8BwE,eAAejN,KAAM60B,KAKtD,MAAMkjG,EAAgB,CAAC,IAAK,IAAK,IAAK,KAEtC,MAAatB,UAA0BqB,EAAe,gBAAiB,CACtElvG,WAAY,CAAC,IAAK,KAClBm1F,WAAY,EAAAr/G,UAAUa,YAFvB,sBAIA,MAAam3H,UAA0BoB,EAAe,gBAAiB,CACtElvG,WAAY,CAAC,IAAK,IAAK,KACvBm1F,WAAY,EAAAr/G,UAAUc,YAFvB,sBAIA,MAAam3H,UAA0BmB,EAAe,gBAAiB,CACtElvG,WAAYmvG,EACZha,WAAY,EAAAr/G,UAAUe,YAFvB,sBAKA,MAAam3H,UAA2BiB,EACvC,cACC,MAAO,iBAMR,kBACC73H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAA0B40F,EAAmBoB,iBAAkB,EAAAn0H,oBAAoBK,MACvF,IAAI,EAAA89B,0BAA0B40F,EAAmBqB,cAAe,EAAAp0H,oBAAoB/E,SAGtF,gBACCkB,KAAKklB,UAAU,EAAAxmB,UAAUe,QAASm3H,EAAmBsB,gBAAiBH,EAAc/yH,IAAKrI,GAAM,IAGhG,UAAU8L,GACT,MAAMosB,EAAa,GAEbsjG,EAAUvB,EAAmBsB,gBAC7BE,EAAWxB,EAAmBoB,iBAC9BK,EAAQzB,EAAmBqB,cAC3B9yH,EAAMnF,KAAK8M,mBAAmBqrH,GAE9BhjG,EAAoBn1B,KAAKa,GAAGC,QAAQq0B,oBAE1C,GAAIA,EAAkB7rB,QAAQ8uH,IAAa,EAAG,CAC7C,MAAMxjG,EAAW50B,KAAKoI,YAAYgwH,GAClCvjG,EAAWv5B,KAAK,QAAQs5B,OAAczvB,SAEvC,GAAIgwB,EAAkB7rB,QAAQ+uH,IAAU,EAAG,CAC1C,MAAMzjG,EAAW50B,KAAKoI,YAAYiwH,GAClCxjG,EAAWv5B,KAAK,SAASs5B,OAAczvB,OAExCsD,EAA8BwE,eAAejN,KAAM60B,IApCrD,uBAIiB,EAAAqjG,gBAAkB,OAClB,EAAAF,iBAAmB,OACnB,EAAAC,cAAgB,K,8ECxEjC,cAQA,SAASK,EAAwB/5H,EAAcE,EAA2B,IACzE,MAAMuO,EAAiBvO,EAAQkiE,QAAUpiE,EACnCqiE,EAAiBniE,EAAQoiE,KAAO,MAChC03D,EAAgB95H,EAAQsiE,IAAM,KACpC,OAAO,cAAmB,EAAAy3D,iCACzB,cACC,OAAOj6H,EAER,kBACC0H,MAAMmB,kBACNpH,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAChFA,KAAK8L,0BAA0Bu1D,yBAAyBrhE,KAAKshE,gBAAgBzjE,KAAKmC,OAEzE,eAAeoC,GACxB,OAAOm2H,EAEE,gBAAgBn2H,GACzB,OAAOw+D,EAER,iBACC,OAAO5zD,IAIV,MAAa0lH,UAAkB4F,EAAwB,SAAvD,cACA,MAAa3F,UAAmB2F,EAAwB,OAAQ,CAACz3D,IAAK,cAAtE,eACA,MAAakyD,UAAmBuF,EAAwB,OAAQ,CAACz3D,IAAK,cAAtE,eACA,MAAamyD,UAAmBsF,EAAwB,OAAQ,CAACz3D,IAAK,cAAtE,eACA,MAAaqyD,UAAmBoF,EAAwB,UAAxD,eACA,MAAanF,UAAkBmF,EAAwB,MAAO,CAACv3D,GAAI,cAAnE,cACA,MAAawyD,UAAsB+E,EAAwB,UAAW,CAACv3D,GAAI,UAAWF,IAAK,cAA3F,kBAEA,MAAa8yD,UAAkB2E,EAAwB,SAAvD,cACA,MAAa1E,UAAmB0E,EAAwB,UAAxD,eACA,MAAanE,UAAoBmE,EAAwB,WAAzD,gBACA,MAAalE,UAAoBkE,EAAwB,WAAzD,gBACA,MAAa/D,UAA0B+D,EAAwB,eAAgB,CAAC33D,OAAQ,kBAAxF,sBACA,MAAai0D,UAAkB0D,EAAwB,SAAvD,cACA,MAAazD,UAAmByD,EAAwB,UAAxD,eACA,MAAanD,UAAwBmD,EAAwB,YAAa,CAACz3D,IAAK,iBAAhF,oBACA,MAAag1D,UAAsByC,EAAwB,UAAW,CAACv3D,GAAI,UAAWF,IAAK,cAA3F,kBACA,MAAaq1D,UAAmBoC,EAAwB,UAAxD,eACA,MAAanC,UAAkBmC,EAAwB,MAAO,CAACv3D,GAAI,cAAnE,cACA,MAAaq1D,UAAmBkC,EAAwB,UAAxD,eACA,MAAahC,UAAkBgC,EAAwB,SAAvD,e,8ECpDA,cACA,QAEA,QASA,SAASG,EAAiCl6H,EAAcE,GACvD,MAAMi6H,EAAYj6H,EAAQi6H,WAAan6H,EACjC4J,EAAc1J,EAAQoiE,KAAO,MAC7B83D,EAAYl6H,EAAQk6H,UACpB13D,EAAmBxiE,EAAQwiE,iBACjC,OAAO,cAAmB,EAAAG,iCACzB,cACC,OAAO7iE,EAER,kBACC0H,MAAMmB,kBACNpH,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAChFA,KAAK8L,0BAA0Bu1D,yBAAyBrhE,KAAKshE,gBAAgBzjE,KAAKmC,OAElFA,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAEpG,UAAUyI,GACT,MAAMkE,EAAgC3M,KAAKa,GAAGC,QAAQmH,+BAA+B,GAAG1J,KAQlFqO,EAPO5M,KAAKa,GAAG6G,OAAOmF,8BAA8B7H,IAAI,CAAC4C,EAAY9M,KAC1E,MAAM+B,EAAO+K,EAAW/K,KAClB4tD,EAAWzqD,KAAK8M,mBAAmBjQ,GACzC,GAAI4tD,EACH,OAAO,EAAAniD,UAAUC,IAAIkiD,KAGEvlD,KAAK,IAAIlF,KAAK44H,mBAGjC7rH,EAAY,GAAGJ,KADT3M,KAAKoI,YAAYpI,KAAK8L,0BAA0B3D,YAAY,SAC9BnI,KAAKgN,oBAAoBJ,KACnEnE,EAA8BwE,eAAejN,KAAM,CAAC+M,IAErD,eAAe3K,GACd,MAAO,GAAGs2H,IAAYt2H,IAEvB,gBAAgBA,GACf,OAAO+F,EAER,eACC,OAAOwwH,EAEE,wBACT,IAAIl3D,EAAmBzhE,KAAK8L,0BAA0BO,8BACtD,GAAIo1D,GAAoBR,IAClBA,EAAiBte,SAAS8e,GAAmB,CAGjD,MAAMp/B,EAAmBriC,KAAKa,GAAG6G,OAAOmF,8BAA8B,GAClEw1B,IACHo/B,EAAmBp/B,EAAiB9jC,MAIvC,MAAMA,EAAOkjE,GAAoB,EAAA59D,oBAAoB/E,MAE/C+5H,EAAsB74H,KAAKa,GAAGkG,YAAY2F,oBAC1CosH,EAAiBD,EAAsBrsH,KAAKC,IAAIosH,EAAoB79H,OAAS,EAAG,GAAK,EACrF6mC,EAAuB,GAC7B,IAAK,IAAI/mC,EAAI,EAAGA,EAAIg+H,EAAgBh+H,IACnC+mC,EAAqBvmC,KAAKiD,GAE3B,OAAOsjC,EAEE,yBAET,MAAO,CADM7hC,KAAKgM,wBAAwB,MAK7C,MAAa4mH,UAAkB6F,EAAiC,MAAO,CACtEC,UAAW,MACX73D,IAAK,MACL83D,UAAW,QAHZ,cAKA,MAAalF,UAAqBgF,EAAiC,SAAU,CAC5EC,UAAW,MACX73D,IAAK,SACL83D,UAAW,QAHZ,iBAKA,MAAatC,UAAwBoC,EAAiC,YAAa,CAClFC,UAAW,MACX73D,IAAK,YACL83D,UAAW,QAHZ,oBAMA,MAAa5D,UAAmB0D,EAAiC,OAAQ,CACxEC,UAAW,OACX73D,IAAK,UACL83D,UAAW,OAEX,cACC,MAAO,OAER,uBAAuB97H,GACtB,OAAO,EAGR,kBACCoJ,MAAMmB,kBACNpH,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAE1F,wBACT,MAAM+4H,EAAc/4H,KAAKgM,wBAEzB,MAAO,CADM+sH,EAAYA,EAAY/9H,OAAS,IAIrC,wBACT,MAAM0R,EAAoB1M,KAAKa,GAAGkG,YAAY2F,oBAC9C,GAAIA,EAAmB,CACtB,MAAM21B,EAAmB31B,EAAkB,GAE3C,GAAI21B,EAAkB,CACrB,MAGM9jC,EAHwCyB,KAAKa,GAAG6G,OAAOmF,8BAC5Dw1B,EAAiB56B,aAEiClJ,KAC7Cu6H,EAAiBpsH,EAAoBA,EAAkB1R,OAAS,EAAI,EACpEg+H,EAAc,IAAInwF,MAAMiwF,GAE9B,GAAIv6H,GAAQ,EAAAsF,oBAAoB/E,MAAO,CACtC,MAAMm6H,EAAoBvsH,EAAoBA,EAAkB,GAAK,KACrE,GAAIusH,EAAmB,CACtB,MAGMC,EAHyCl5H,KAAKa,GAAG6G,OAAOmF,8BAC7DosH,EAAkBxxH,aAEwClJ,KAC3D,OAAI26H,GAAe,EAAAr1H,oBAAoB/E,MAE/Bk6H,EAAYh0H,IAAKlK,GAAMyD,GAGvB,CAACA,EAAM26H,GAIf,MAAO,CAAC36H,EAAMA,GAIf,OAAOy6H,EAAYh0H,IAAI,IAAMzG,IAIhC,MAAO,CAAC,EAAAsF,oBAAoB/E,MAAO,EAAA+E,oBAAoB/E,QA5DzD,gB,8ECjGA,eAMA,SAASq6H,EAA+B56H,EAAcE,GACrD,OAAO,cAAmB,EAAA26H,wCACzB,cACC,OAAO76H,EAER,kBACC0H,MAAMmB,kBACNpH,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAChFA,KAAK8L,0BAA0Bu1D,yBAAyBrhE,KAAKshE,gBAAgBzjE,KAAKmC,OAGnF,oBACC,OAAOvB,EAAQ46H,GAEN,gBAAgBj3H,GACzB,OAAO7D,EAEE,eAAe6D,EAAQ,GAChC,MAAO,GAAG7D,IAAO6D,MAIpB,MAAa0wH,UAAkBqG,EAA+B,MAAO,CAACE,GAAI,SAA1E,cACA,MAAajE,UAAiB+D,EAA+B,KAAM,CAACE,GAAI,SAAxE,c,8EC7BA,cAEA,QACA,QAGA,MAAsBD,UAAgD,EAAAh4D,iCACrE,kBACCn7D,MAAMmB,kBACNpH,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAE1F,wBACT,MAAO,CAAC,EAAA6D,oBAAoBE,KAAM,EAAAF,oBAAoBE,MAG7C,yBACT,MAAO,CAAC,EAAAF,oBAAoBE,MAK7B,UAAU0E,GACT,MAIMmE,EAJO5M,KAAKa,GAAG6G,OAAOmF,8BAA8B7H,IAAI,CAACuuB,EAAaz4B,KAC3E,MAAM+B,EAAO02B,EAAY12B,KACzB,OAAO,EAAAyL,UAAUC,IAAIvI,KAAK8M,mBAAmBjQ,MAErBqI,KAAK,IAAIlF,KAAKs5H,wBAGjCvsH,EAAY,QADN/M,KAAKoI,YAAYpI,KAAK8L,0BAA0B3D,YAAY,SACrCyE,IACnCnE,EAA8BwE,eAAejN,KAAM,CAAC+M,KAzBtD,6C,2FCNA,QACA,2BACA,QACA,QAEA,IAAKwsH,GAAL,SAAKA,GACJ,YACA,UAFD,CAAKA,MAAS,KAId,MAAMC,EAA+B,CAACD,EAAUE,IAAKF,EAAU7gE,IAOzDghE,EAAgC,CACrC,CAACH,EAAUE,KAHiB,CAAC,EAAG,EAAG,GAInC,CAACF,EAAU7gE,IAHgB,CAAC,EAAG,EAAG,IAMnC,MAAam6D,UAAoB,EAAAzxD,iCAChC,cACC,MAAO,QAGR,kBACCn7D,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkBo3H,EAAWp3H,IACrFpC,KAAK8L,0BAA0BC,kCAAkC,IAAM,CACtE,EAAAlI,oBAAoBK,KACpB,EAAAL,oBAAoBK,OAErBlE,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAAC,EAAApI,oBAAoBM,OAM9F,uBAAuBtH,GACtB,OAAO68H,EAAc78H,GAEtB,iBACC,MAAO,QASR,0BACC,MAAO,CAAC,IAAI,EAAA2kE,qBAAqBxhE,KAAM,EAAA6D,oBAAoBM,KAAM,aAjCnE,iB,2FCrBA,QACA,4BACA,QACA,QAEA,MAAaivH,UAAyB,EAAAoF,iCACrC,cACC,MAAO,aAGR,iBACC,MAAO,aAGR,0BACC,MAAO,CACN,IAAI,EAAAh3D,qBACHxhE,KACAA,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,MACpF,aAdJ,sB,6BCLA,OAAe,8P,8ECAf,cACA,QACA,OACA,QACA,QAKA,MAAM66H,UAA4B,EAAA7wH,iBAAlC,c,oBACC,KAAAxD,EAAI,EAAAiZ,YAAY/e,QAAQ,CAAC,EAAG,EAAG,IAC/B,KAAA+F,EAAI,EAAAgZ,YAAY/e,QAAQ,CAAC,EAAG,EAAG,KAEhC,MAAMuJ,EAAe,IAAI4wH,EACzB,MAAatG,UAAoB,EAAA1sH,YAAjC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,QAGR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAjBa,QAiB0B,EAAAn+B,oBAAoBK,QAIjE,UAAUuE,GACT,MAAMnD,EAAI,EAAAgD,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB,MAC5CvH,EAAI,EAAA+C,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB,MAG5CC,EAAY,QADH/M,KAAKoI,YAzBF,oBA0B0B9C,MAAMC,KAClDkD,EAA8BwE,eAAejN,KAAM,CAAC+M,KApBtD,iB,oFCdA,E,KAAA,wBACA,SAEA,MAAaumH,UAAoB,EAAAzwD,wBAAwB,QAAS,CACjE9B,GAAI,CAAC,KAAM,MAAO,OAClB5sC,QAAS,CAAC1nB,IAAK,GACf00D,UAAW,CAAC,eAHb,iB,6BCHA,OAAe,sY,2FCAf,QACA,QACA,4BACA,OACA,QAEA,QACA,QAGA,MAAMy4D,UAA2B,EAAA9wH,iBAAjC,c,oBACC,KAAAsL,SAAW,EAAAmK,YAAYhf,QAAQ,CAAC,EAAG,IACnC,KAAAioE,OAAS,EAAAjpD,YAAYhf,QAAQ,CAAC,EAAG,IACjC,KAAAo7D,OAAS,EAAAp8C,YAAYzf,MAAM,GAC3B,KAAA+6H,QAAU,EAAAt7G,YAAYzf,MAAM,KAE7B,MAAMiK,EAAe,IAAI6wH,EACzB,MAAapG,UAAmB,EAAA7sH,YAAhC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,OAGR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAlBa,QAkB0B,EAAAn+B,oBAAoB/E,SAIjE,UAAU2J,GACT,MAAM2L,EAAW,EAAA9L,UAAUwxH,QAAQ95H,KAAK8M,mBAAmB,aACrD06D,EAAS,EAAAl/D,UAAUwxH,QAAQ95H,KAAK8M,mBAAmB,WACnD6tD,EAAS,EAAAryD,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB,WACjD+sH,EAAU,EAAAvxH,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB,YAGlDC,EAAY,SADJ/M,KAAKoI,YAAY,mBACYgM,MAAaozD,MAAW7M,MAAWk/D,KAE9EpxH,EAA8BwE,eAAejN,KAAM,CAAC+M,IAEpDtE,EAA8ByE,gBAAgBlN,KAAM,CACnD,IAAI,EAAAwhE,qBAAqBxhE,KAAM,EAAA6D,oBAAoB/E,MAAO,cA1B7D,gB,6BCjBA,OAAe,qjB,2FCAf,QACA,QAGA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,4BACA,OACA,QAEA,QACA,QAEMi7H,EAAa,CAClB,cACA,UACA,WACA,gBACA,YACA,aACA,kBACA,cACA,eACA,eACA,WACA,YACA,iBACA,aACA,cACA,qBACA,iBACA,kBACA,SACA,mBACA,eACA,gBAOA,cACA,UACA,YAGKC,EAA0C,CAC/C,kBAAmB,UACnB,qBAAsB,UACtB,cAAe,UACf,cAAe,UACf,WAAY,UACZ,kBAAmB,UACnB,cAAe,UACf,iBAAkB,UAClBxnE,OAAQ,UACR,eAAgB,UAChB,cAAe,UACf,UAAW,UACX,UAAW,UACX,WAAY,UACZ,iBAAkB,UAClB,eAAgB,UAChB,eAAgB,UAChB,aAAc,UACd,aAAc,UACd,mBAAoB,UACpB,iBAAkB,UAClB,iBAAkB,UAClB,cAAe,UACf,YAAa,UACb,gBAAiB,UACjB,gBAAiB,UACjB,aAAc,UACd,aAAc,UACd,cAAe,UACf,YAAa,UACb,WAAY,WAEPynE,EAAyD,CAC9D,YAAa,CAAC,WACd,gBAAiB,CAAC,YAGbC,EAAgD,CACrD,kBAAmB,gBACnB,qBAAsB,mBACtB,cAAe,aACf,cAAe,aACf,WAAY,UACZ,kBAAmB,iBACnB,cAAe,aACf,iBAAkB,eAClB1nE,OAAQ,SACR,eAAgB,cAChB,cAAe,YACf,UAAW,SACX,UAAW,SACX,WAAY,UACZ,iBAAkB,eAClB,eAAgB,cAChB,eAAgB,aAChB,aAAc,YACd,aAAc,YACd,mBAAoB,iBACpB,iBAAkB,gBAClB,iBAAkB,eAClB,cAAe,YACf,YAAa,WACb,gBAAiB,eACjB,gBAAiB,cACjB,aAAc,YACd,aAAc,YACd,cAAe,aACf,YAAa,WACb,WAAY,WAIP2nE,EAAoBJ,EAAWzwH,QAAQ,eAC7C,MAAM8wH,UAA6B,EAAAtxH,iBAAnC,c,oBACC,KAAAvK,KAAO,EAAAggB,YAAYvf,QAAQm7H,EAAmB,CAC7Cx1F,KAAM,CACLC,QAASm1F,EAAW/0H,IAAI,CAACnI,EAAM/B,KACvB,CAAC+B,KAAMA,EAAMS,MAAOxC,QAI9B,KAAA0d,MAAQ,EAAA+F,YAAYzf,MAAM,IAE3B,MAAMiK,EAAe,IAAIqxH,EACzB,MAAa1G,UAAqB,EAAA/sH,YAAlC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,SAGR,kBACC9C,MAAMmB,kBAENpH,KAAK4G,wBAAwByzH,0BAA0B,CAAC,SAExDr6H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAzBa,MAyB0B,EAAAn+B,oBAAoB/E,SAIjE,UAAU2J,GACT,MAAM6xH,EAAYP,EAAW/5H,KAAK4f,GAAGrhB,MAC/Bm8C,EAAcw/E,EAA0BI,GACxCC,EAAqBP,EAAoBM,GAE/C,IAAIE,EAAiB,CAAC,IAAI,EAAAh5D,qBAAqBxhE,KAAM,EAAA6D,oBAAoB/E,MAAOy7H,IAChF,MAAME,GAAyBR,EAAiCK,IAAc,IAAIt1H,IAChFu8D,GAAM,IAAI,EAAAC,qBAAqBxhE,KAAM,EAAA6D,oBAAoB/E,MAAOyiE,IAE9Dk5D,IACHD,EAAiBC,EAAsBC,OAAOF,IAM/C,MAAMG,EAAW,EAAAryH,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB,UAGnDC,EAAY,SAFA/M,KAAKoI,YA9CL,YAgDwBsyC,KAAeigF,KACzDlyH,EAA8ByE,gBAAgBlN,KAAMw6H,GACpD/xH,EAA8BwE,eAAejN,KAAM,CAAC+M,KArCtD,kB,6BChKA,OAAe,gL,6BCAf,OAAe,4M,6BCAf,OAAe,mF,6BCAf,OAAe,uL,6BCAf,OAAe,kE,6BCAf,OAAe,wG,6BCAf,OAAe,qF,6BCAf,OAAe,yT,6BCAf,OAAe,yD,6BCAf,OAAe,gF,6BCAf,OAAe,kO,6BCAf,OAAe,uF,6BCAf,OAAe,qJ,6BCAf,OAAe,sH,6BCAf,OAAe,qI,6BCAf,OAAe,kE,6BCAf,OAAe,qI,6BCAf,OAAe,8K,6BCAf,OAAe,0c,6BCAf,OAAe,4H,6BCAf,OAAe,wG,6BCAf,OAAe,4I,6BCAf,OAAe,uF,6BCAf,OAAe,+F,6BCAf,OAAe,4E,6BCAf,OAAe,oK,6BCAf,OAAe,sE,6BCAf,OAAe,sE,6BCAf,OAAe,+F,6BCAf,OAAe,oF,6BCAf,OAAe,wI,2FCAf,QACA,4BACA,QACA,QAEM2sH,EAAoC,CACzC7sG,QAAS,EACTC,QAAS,GAGV,MAAa+mG,UAAkB,EAAA+G,iCAC9B,cACC,MAAO,MAGE,eAAex4H,GACxB,MAAO,CAAC,MAAO,UAAW,UAAW,WAAY,YAAYA,GAE9D,uBAAuBvF,GACtB,OAAO68H,EAAc78H,GAEZ,iBACT,MAAO,MAGR,0BACC,MAAO,CAAC,IAAI,EAAA2kE,qBAAqBxhE,KAAM,EAAA6D,oBAAoB/E,MAAO,aAhBpE,e,2FCVA,QACA,4BACA,QACA,QAEM46H,EAAoC,CACzC7sG,QAAS,EACTC,QAAS,GAGV,MAAagnG,UAAoB,EAAA/wD,iCAChC,cACC,MAAO,QAGR,cAAc3gE,GACb,MAAO,CAAC,MAAO,UAAW,WAAWA,GAEtC,uBAAuBvF,GACtB,OAAO68H,EAAc78H,GAEtB,iBACC,MAAO,QAGR,0BACC,MAAO,CAAC,IAAI,EAAA2kE,qBAAqBxhE,KAAM,EAAA6D,oBAAoB/E,MAAO,aAhBpE,iB,2FCVA,QACA,QAEA,4BACA,QACA,QAEA,QAGA,OACA,MAAM+7H,UAA+B,EAAA/xH,iBAArC,c,oBACC,KAAAgyH,IAAM,EAAAv8G,YAAY/e,QAAQ,CAAC,EAAG,EAAG,KAElC,MAAMuJ,EAAe,IAAI8xH,EACzB,MAAaxG,UAAuB,EAAA1tH,YAApC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,aAGR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAhBa,MAgB0B,EAAAn+B,oBAAoBK,QAIjE,UAAUuE,GACT,MAAMsyH,EAA6B,GAC7BlmG,EAAa,GAEnBkmG,EAA2Bz/H,KAAK,IAAI,EAAAkmE,qBAAqBxhE,KAAM,EAAA6D,oBAAoBK,KAAM,YAEzF,MAAM5G,EAAQ,EAAAgL,UAAUjD,QAAQrF,KAAK8M,mBAAmB9M,KAAK/B,EAAE68H,IAAIj+H,OAE7Dm+H,EAAMh7H,KAAKoI,YA5BC,OA6BlBysB,EAAWv5B,KAAK,QAAQ0/H,eAAiB19H,MACzCmL,EAA8ByE,gBAAgBlN,KAAM+6H,GACpDtyH,EAA8BwE,eAAejN,KAAM60B,IAzBrD,oB,6BCfA,OAAe,sU,2FCAf,QACA,QAEA,2BACA,OACA,QACA,QAEA,QAEMomG,EACK,WADLA,EAEG,SAFHA,EAGc,mBAHdA,EAIiB,sBAJjBA,EAKW,gBAGjB,MAAMC,UAAwC,EAAApyH,iBAA9C,c,oBACC,KAAAsL,SAAW,EAAAmK,YAAY/e,QAAQ,CAAC,EAAG,EAAG,IACtC,KAAAilD,OAAS,EAAAlmC,YAAY/e,QAAQ,CAAC,EAAG,EAAG,IACpC,KAAA27H,kBAAoB,EAAA58G,YAAY/e,QAAQ,CAAC,EAAG,EAAG,IAC/C,KAAA47H,qBAAuB,EAAA78G,YAAY9e,QAAQ,CAAC,EAAG,EAAG,EAAG,IACrD,KAAA47H,eAAiB,EAAA98G,YAAY/e,QAAQ,CAAC,EAAG,EAAG,KAE7C,MAAMuJ,EAAe,IAAImyH,EACzB,MAAa1G,UAAgC,EAAA7tH,YAA7C,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,qBAGR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAA0BhiC,KAAKs7H,0BAA2B,EAAAz3H,oBAAoBK,MAClF,IAAI,EAAA89B,0BAA0BhiC,KAAKu7H,wBAAyB,EAAA13H,oBAAoBK,QAIlF,UAAUuE,GACT,MAAMosB,EAAa,GACbkmG,EAA6B,GAEnCA,EAA2Bz/H,KAAK,IAAI,EAAAkmE,qBAAqBxhE,KAAM,EAAA6D,oBAAoBM,KAAM,YAEzF,MACMiQ,EADiBpU,KAAKa,GAAG6G,OAAO6rB,YAAYvzB,KAAK/B,EAAEmW,SAASvX,MAE/D,EAAAyL,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB9M,KAAK/B,EAAEmW,SAASvX,OACxDmD,KAAKw7H,oBAGF/2E,EADezkD,KAAKa,GAAG6G,OAAO6rB,YAAYvzB,KAAK/B,EAAEwmD,OAAO5nD,MAE3D,EAAAyL,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB9M,KAAK/B,EAAEwmD,OAAO5nD,OACtDmD,KAAKy7H,kBAGFC,EADyB17H,KAAKa,GAAG6G,OAAO6rB,YAAYvzB,KAAK/B,EAAEk9H,kBAAkBt+H,MAEhF,EAAAyL,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB9M,KAAK/B,EAAEk9H,kBAAkBt+H,OACjEmD,KAAK27H,2BAA2BlzH,GAI7BmzH,EAD4B57H,KAAKa,GAAG6G,OAAO6rB,YAAYvzB,KAAK/B,EAAEm9H,qBAAqBv+H,MAEtF,EAAAyL,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB9M,KAAK/B,EAAEm9H,qBAAqBv+H,OACpEmD,KAAK67H,oCAAoCpzH,GAGtCqzH,EADsB97H,KAAKa,GAAG6G,OAAO6rB,YAAYvzB,KAAK/B,EAAEo9H,eAAex+H,MAE1E,EAAAyL,UAAUw9B,MAAM9lC,KAAK8M,mBAAmB9M,KAAK/B,EAAEo9H,eAAex+H,OAC9DmD,KAAK+7H,8BAA8BtzH,GAEhCuzH,EAAkBh8H,KAAKoI,YAAYpI,KAAKs7H,2BACxCW,EAAgBj8H,KAAKoI,YAAYpI,KAAKu7H,yBAC5C1mG,EAAWv5B,KAAK,QAAQ0gI,YAA0B5nH,MAClDygB,EAAWv5B,KAAK,GAAG0gI,QAAsBF,KACzCjnG,EAAWv5B,KAAK,GAAG0gI,yBAAuCA,MAAoBJ,OAC9E/mG,EAAWv5B,KAAK,GAAG0gI,QAAsBN,KACzC7mG,EAAWv5B,KAAK,QAAQ2gI,YAAwBx3E,MAChD5vB,EAAWv5B,KAAK,GAAG2gI,yBAAqCA,MAAkBL,OAE1EnzH,EAA8BwE,eAAejN,KAAM60B,GACnDpsB,EAA8ByE,gBAAgBlN,KAAM+6H,GAErD,0BACC,MAAO,WAER,wBACC,MAAO,SAGA,oBACP,OAAOE,EAEA,kBACP,OAAOA,EAEA,2BAA2BxyH,G,QAClC,OAAyE,QAAzE,EAAyB,QAAzB,EAAOzI,KAAKuD,qBAAa,eAAEgE,qBAAqBypB,UAAUgD,uBAAe,eAAEC,eAC1Ej0B,KACA,EAAA6D,oBAAoBK,KACpB+2H,EACAxyH,GAMM,oCAAoCA,G,QAC3C,OAAyE,QAAzE,EAAyB,QAAzB,EAAOzI,KAAKuD,qBAAa,eAAEgE,qBAAqBypB,UAAUgD,uBAAe,eAAEC,eAC1Ej0B,KACA,EAAA6D,oBAAoBM,KACpB82H,EACAxyH,GAMM,8BAA8BA,G,QACrC,OAAyE,QAAzE,EAAyB,QAAzB,EAAOzI,KAAKuD,qBAAa,eAAEgE,qBAAqBypB,UAAUgD,uBAAe,eAAEC,eAC1Ej0B,KACA,EAAA6D,oBAAoBK,KACpB+2H,EACAxyH,IAnGH,6B,8EC1BA,cACA,QAEA,MAAagsH,UAAqB,EAAA+D,iCACjC,cACC,MAAO,SAGR,kBACCvyH,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAChFA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAG1F,eAAeoC,GACxB,MAAO,CAAC,KAAKA,GAEd,iBACC,MAAO,SAGE,yBACT,MAAO,CAAC,EAAAyB,oBAAoB/E,QApB9B,kB,8ECHA,cACA,QACA,QACA,QAIA,OACA,MAAMo9H,UAAgC,EAAApzH,iBAAtC,c,oBACC,KAAAgyH,IAAM,EAAAv8G,YAAY/e,QAAQ,CAAC,EAAG,EAAG,KAElC,MAAMuJ,EAAe,IAAImzH,EACzB,MAAaxH,UAAwB,EAAA/tH,YAArC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,YAGR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAhBa,MAgB0B,EAAAn+B,oBAAoB/E,SAIjE,UAAU2J,GACT,MAAMnL,EAAQ,EAAAgL,UAAUjD,QAAQrF,KAAK8M,mBAAmB,UAIlDC,EAAY,SAFN/M,KAAKoI,YAAY,sCAEiC9K,KAC9DmL,EAA8BwE,eAAejN,KAAM,CAAC+M,KApBtD,qB,8ECZA,cACA,QAEA,MAAa+nH,UAAkB,EAAAlpH,yBAC9B,cACC,MAAO,MAGR,kBACC3F,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkB,CAAC,SAAU,SAAU,SAASA,IACxGpC,KAAK8L,0BAA0Bu1D,yBAAyBrhE,KAAKshE,gBAAgBzjE,KAAKmC,OAClFA,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAG1F,kBACT,MAAO,MAGE,wBACT,MAAMzB,EAAOyB,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoB/E,MACjG,MAAO,CAACP,EAAMA,EAAM,EAAAsF,oBAAoB/E,OAG/B,yBAET,MAAO,CADMkB,KAAKgM,wBAAwB,KAxB5C,e,8ECHA,cACA,QAGM0tH,EAAoC,CACzCyC,KAAM,GAGP,IAAK5C,GAAL,SAAKA,GACJ,gBACA,oBACA,cACA,sBAJD,CAAKA,MAAS,KAOd,MAAavE,UAAsB,EAAAoH,iCAClC,cACC,MAAO,WAGE,eAAeh6H,GACxB,MAAO,CAACm3H,EAAU8C,MAAO9C,EAAU+C,QAAS/C,EAAUgD,KAAMhD,EAAUiD,UAAUp6H,GAEjF,uBAAuBvF,GACtB,OAAO68H,EAAc78H,GAGtB,UAAU4L,GACT,MAAMnL,EAAQ,EAAAgL,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAU8C,QACxDI,EAAU,EAAAn0H,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAU+C,UAC1DH,EAAO,EAAA7zH,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUgD,OACvDG,EAAW,EAAAp0H,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUiD,WAE3D1oG,EAAU9zB,KAAKkM,yBAAyB,GACxCywH,EAAW38H,KAAKa,GAAGC,QAAQmH,+BAA+B,GAAGpL,KAE7DkQ,EAAY,GAAG+mB,KADT9zB,KAAKoI,YAAYu0H,SACaR,MAAS7+H,OAAWm/H,SAAeC,IAC7Ej0H,EAA8BwE,eAAejN,KAAM,CAAC+M,KAtBtD,mB,8ECfA,cACA,QAGA,MAAa4nH,UAAqB,EAAA6D,iCACjC,cACC,MAAO,SAGR,kBACCvyH,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkB,CAAC,MAAMA,IAGxE,eAAeA,GACxB,MAAO,CAAC,MAAMA,GAGf,UAAUqG,GACT,MAAMkyH,EAAW,EAAAryH,UAAUC,IAAIvI,KAAK8M,mBAAmB9M,KAAKoM,eAAe,KAIrEW,EAAY,GAFF/M,KAAKa,GAAG6G,OAAOmF,8BAA8B,GAAGtO,QACpDyB,KAAKoI,YAAYpI,KAAK8L,0BAA0B3D,YAAY,gBACxBwyH,IAChDlyH,EAA8BwE,eAAejN,KAAM,CAAC+M,KArBtD,kB,2FCJA,2BACA,QACA,QACA,SAGA,4BAKA,4BACA,4BACA,4BACA,4BACA,4BAEA,4BACA,QAGA,IAAK6vH,GAAL,SAAKA,GAKJ,wCAEA,wCAEA,wCAEA,qBACA,qBAEA,qBAdD,CAAKA,MAAU,KAwBf,MAAMC,EAAiC,CACtCD,EAAWE,kBACXF,EAAWG,kBACXH,EAAWI,kBACXJ,EAAWK,SACXL,EAAWM,SACXN,EAAWO,UAINC,EAAsC,CAC3C,CAACR,EAAWE,mBAAoB,UAChC,CAACF,EAAWG,mBAAoB,UAChC,CAACH,EAAWI,mBAAoB,UAChC,CAACJ,EAAWK,UAAW,UACvB,CAACL,EAAWM,UAAW,UACvB,CAACN,EAAWO,UAAW,WAGlBE,EAAmD,CACxD,CAACT,EAAWE,mBAAoB,EAAAj5H,oBAAoBI,KACpD,CAAC24H,EAAWG,mBAAoB,EAAAl5H,oBAAoBK,KACpD,CAAC04H,EAAWI,mBAAoB,EAAAn5H,oBAAoBM,KACpD,CAACy4H,EAAWK,UAAW,EAAAp5H,oBAAoBI,KAC3C,CAAC24H,EAAWM,UAAW,EAAAr5H,oBAAoBK,KAC3C,CAAC04H,EAAWO,UAAW,EAAAt5H,oBAAoBM,MAGtCm5H,EAAmD,CACxD,CAACV,EAAWE,mBAAoB,EAAAj5H,oBAAoB/E,MACpD,CAAC89H,EAAWG,mBAAoB,EAAAl5H,oBAAoB/E,MACpD,CAAC89H,EAAWI,mBAAoB,EAAAn5H,oBAAoB/E,MACpD,CAAC89H,EAAWK,UAAW,EAAAp5H,oBAAoB/E,MAC3C,CAAC89H,EAAWM,UAAW,EAAAr5H,oBAAoB/E,MAC3C,CAAC89H,EAAWO,UAAW,EAAAt5H,oBAAoB/E,OAEtCy+H,EAA4C,CACjD,CAACX,EAAWE,mBAAoB,SAChC,CAACF,EAAWG,mBAAoB,SAChC,CAACH,EAAWI,mBAAoB,SAChC,CAACJ,EAAWK,UAAW,SACvB,CAACL,EAAWM,UAAW,SACvB,CAACN,EAAWO,UAAW,UAGxB,IAAKK,GAAL,SAAKA,GACJ,2BACA,qBACA,mBACA,mBACA,mBALD,CAAKA,MAAW,KAOhB,MAAMC,EAAmC,CACxCD,EAAYE,SACZF,EAAYG,MACZH,EAAYI,KACZJ,EAAYK,KACZL,EAAYM,MAGPC,EAAwC,CAC7C,CAACP,EAAYE,UAAW,gBACxB,CAACF,EAAYG,OAAQ,QACrB,CAACH,EAAYI,MAAO,OACpB,CAACJ,EAAYK,MAAO,OACpB,CAACL,EAAYM,MAAO,QAGfE,EAA6D,CAClE,CAACR,EAAYE,UAAW,EAAA75H,oBAAoB/E,MAC5C,CAAC0+H,EAAYG,OAAQ,EAAA95H,oBAAoB/E,MACzC,CAAC0+H,EAAYI,MAAO,EAAA/5H,oBAAoBI,KACxC,CAACu5H,EAAYK,MAAO,EAAAh6H,oBAAoBK,KACxC,CAACs5H,EAAYM,MAAO,EAAAj6H,oBAAoBM,MAGnC85H,EAAiB,CAAC,IAAK,IAAK,IAAK,KAEjCC,EAAqBrB,EAAYvzH,QAAQszH,EAAWM,UACpDiB,EAAsBX,EAAYE,SAElChE,EAAoC,CACzC0E,IAAK,EACLC,KAAM,GAGP,IAAK9E,GAAL,SAAKA,GACJ,YACA,sBACA,cACA,kBAJD,CAAKA,MAAS,KAOd,aAEA,QACA,QACA,MAAM+E,UAA4B,EAAAx1H,iBAAlC,c,oBACC,KAAAvK,KAAO,EAAAggB,YAAYvf,QAAQk/H,EAAoB,CAC9Cv5F,KAAM,CACLC,QAASi4F,EAAY73H,IAAI,CAACu5H,EAAYzjI,KAG9B,CAAC+B,KADK,GAAG0hI,cADUjB,EAA0BiB,MAEhCjhI,MAAOxC,QAI9B,KAAA0jI,YAAc,EAAAjgH,YAAYvf,QAAQm/H,EAAqB,CACtDx5F,KAAM,CACLC,QAAS64F,EAAaz4H,IAAKw5H,IAC1B,MAAM/vH,EAAMgvH,EAAae,GAEzB,MAAO,CAAC3hI,KADKkhI,EAAkBtvH,GACXnR,MAAOmR,QAI9B,KAAAgwH,QAAU,EAAAlgH,YAAYvf,QAAQ,EAAG,CAACunC,MAAO,CAAC,EAAG,IAAKC,aAAc,EAAC,GAAM,KACvE,KAAAk4F,gBAAkB,EAAAngH,YAAYzf,MAAM,GAAK,CAACynC,MAAO,CAAC,EAAG,KACrD,KAAAo4F,cAAgB,EAAApgH,YAAYzf,MAAM,EAAG,CAACynC,MAAO,CAAC,EAAG,MACjD,KAAA41D,UAAY,EAAA59E,YAAYlf,aAEzB,MAAM0J,EAAe,IAAIu1H,EACzB,MAAapJ,UAAoB,EAAAvuH,YAAjC,c,oBACC,KAAAqC,cAAgBD,EAMA,KAAA+C,0BAAqD,IAAI,EAAAiwC,wBAAwB/7C,MAJjG,cACC,MAAO,QAIR,kBACCiG,MAAMmB,kBACNpH,KAAK8L,0BAA0B1E,kBAC/BpH,KAAK4G,wBAAwByzH,0BAA0B,CAAC,UAAW,kBAAmB,kBAEtFr6H,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BA3Da,QA2D0B,EAAAn+B,oBAAoB/E,SAGhEkB,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAG1F,eAAeoC,GACxB,MAAO,CAACm3H,EAAUqF,IAAKrF,EAAUz7C,SAAUy7C,EAAUsF,KAAMtF,EAAUuF,QAAQ18H,GAE9E,uBAAuBvF,GACtB,OAAO68H,EAAc78H,GAGd,wBACP,MAAM0hI,EAAa1B,EAAY78H,KAAK4f,GAAGrhB,MACjCA,EAAO8+H,EAA0BkB,GACvC,MAAO,CAAChgI,EAAMA,EAAMA,EAAMA,GAEnB,yBACP,MAAMggI,EAAa1B,EAAY78H,KAAK4f,GAAGrhB,MACjCigI,EAAcf,EAAaz9H,KAAK4f,GAAG4+G,aACzC,OAAIA,GAAehB,EAAYE,SACvB,CAACJ,EAA0BiB,IAE3B,CAACP,EAA+BQ,IAIzC,UAAU/1H,GACT,MAAMsyH,EAA6B,GAC7BlmG,EAAa,GAEb0pG,EAAa1B,EAAY78H,KAAK4f,GAAGrhB,MACjCwgI,EAAiB3B,EAAqBmB,GACtCS,EAAuB1B,EAA0BiB,GACvDxD,EAA2Bz/H,KAAK,IAAI,EAAAkmE,qBAAqBxhE,KAAMg/H,EAAsB,YACrFjE,EAA2Bz/H,KAAK,IAAI,EAAAkmE,qBAAqBxhE,KAAMg/H,EAAsBD,IACrFhE,EAA2Bz/H,KAAK,IAAI,EAAAkmE,qBAAqBxhE,KAAMg/H,EAAsBh/H,KAAKi/H,iBAE1F,MAAMC,EAAiBl/H,KAAKkM,yBAAyB,GAGrD,GAAIgzH,GAAkBF,EAAsB,CAC3C,MAAMv+D,EAAOzgE,KAAKm/H,oBAElBtqG,EAAWv5B,KAAKmlE,OACV,CAEN,MAUM2+D,EAV6B,EAAA16H,kCAAkCw6H,GAW/DG,EAA0B,GAC1BC,EAAQt/H,KAAKoI,YAAY,SAC/B,IAAK,IAAItN,EAAI,EAAGA,EAAIskI,EAAsBtkI,IAAK,CAC9C,MAAMiuC,EAAYk1F,EAAenjI,GACjCukI,EAAc/jI,KAAK,GAAGgkI,IAAQv2F,KAC9B,MAKMw2F,EALalC,EAA0BkB,GAMvCiB,EAA0B,EAAA96H,kCAAkC66H,GAI5DE,EAAU,GAAGF,KAHG,UAAaC,GACjCx6H,IAAKhJ,GAAM,EAAAsM,UAAUw9B,MAAM,IAAOhrC,IAClCoK,KAAK,SAEDu7D,EAAOzgE,KAAKm/H,kBAAkBp2F,EAAWA,EAAW02F,GAC1D5qG,EAAWv5B,KAAKmlE,GAGjB,MACMi/D,EAAgB,MAAMN,KAAwBE,UAAcF,KAD9CC,EAAcn6H,KAAK,SAEvC2vB,EAAWv5B,KAAKokI,GAIjBj3H,EAA8ByE,gBAAgBlN,KAAM+6H,GACpDtyH,EAA8BwE,eAAejN,KAAM60B,GAG5C,kBACP,MAAM0pG,EAAa1B,EAAY78H,KAAK4f,GAAGrhB,MAEvC,MAAO,OADag/H,EAA2BgB,MAClBv+H,KAAKnD,OAG3B,eACP,MAAM0hI,EAAa1B,EAAY78H,KAAK4f,GAAGrhB,MACjCm8C,EAAc6iF,EAA2BgB,GAEzCoB,EAAatC,EAA0BkB,GAE7C,MAAO,WACDv+H,KAAK4/H,yBAAyBD,kFAGf,EAAAr3H,UAAU+5D,IAAIriE,KAAK4f,GAAG6+G,8CACpB/jF,qBACf,EAAApyC,UAAUw9B,MAAM9lC,KAAK4f,GAAG++G,qCACjB,EAAAr2H,UAAUw9B,MAAM9lC,KAAK4f,GAAG8+G,+CAOhC,kBAAkBmB,EAA6B92F,EAAoB02F,GAC1E,MAAMlB,EAAa1B,EAAY78H,KAAK4f,GAAGrhB,MAEjCm8C,EAAc16C,KAAK4/H,kBAEnBxB,EAAM,EAAA91H,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUqF,MACtDxqH,EAAW,EAAA9L,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUz7C,WAC3DugD,EAAO,EAAA/1H,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUsF,OAC7D,IAAI93E,EAAS,EAAAz+C,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUuF,SACzDW,IACH14E,EAAS,IAAIA,KAAU04E,MAExB,MA4BM7yH,EA5BO,CAAC,IAAIwH,KAAYiqH,MAASt3E,KA4Bd7hD,KAAK,MAIxBo6H,EAAQt/H,KAAKoI,YA3ND,SA4NZ03H,EAAa,GAAG1B,KAAO1jF,KAAe9tC,KAC5C,GAAIm8B,EACH,MAAO,SAASu2F,IAAQO,QAAyBC,MAAe/2F,IAIhE,MAAO,GADau0F,EAA0BiB,MACrBe,OAAWQ,KArLvC,iB,6BCvKA,OAAe,2jC,6BCAf,OAAe,kxF,6BCAf,OAAe,gvK,6BCAf,OAAe,swV,6BCAf,OAAe,i/D,6BCAf,OAAe,qqF,6BCAf,OAAe,24G,8ECAf,cAGA,QAGA,MAAa7K,UAAmB,EAAAuD,iCAC/B,cACC,MAAO,OAGR,UAAU/vH,GACT,MAAMkyH,EAAW,EAAAryH,UAAUC,IAAIvI,KAAK8M,mBAAmB,OAIjDC,EAAY,GAFF/M,KAAKa,GAAG6G,OAAOmF,8BAA8B,GAAGtO,QACpDyB,KAAKoI,YAAY,cACYuyH,IACzClyH,EAA8BwE,eAAejN,KAAM,CAAC+M,KAXtD,gB,8ECNA,cAMA,OAEA,MAAMgzH,UAA6B,EAAAj3H,kBAanC,MAAMC,EAAe,IAAIg3H,EAEzB,MAAa1K,UAAqB,EAAA1uH,YAAlC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,SAGR,kBACC9C,MAAMmB,kBACNpH,KAAKwa,oBAAoB,wBAAyBxa,KAAKu8C,sBAAsB1+C,KAAKmC,OAGnF,gB,MACmB,QAAlB,EAAAA,KAAKuD,qBAAa,SAAEgE,qBAAqBu2B,kBAAkB99B,MAG5D,UAAUyI,G,MAES,QAAlB,EAAAzI,KAAKuD,qBAAa,SAAEgE,qBAAqBypB,UAAUgvG,sBAAsBhgI,KAAMyI,IAjBjF,kB,2FCvBA,QACA,QAMA,2BAEA,OACA,QACA,QACA,SAEA,SACA,MAAMw3H,UAA4B,EAAAn3H,iBAAlC,c,oBACC,KAAAjM,KAAO,EAAA0hB,YAAYjf,OAAO,IAC1B,KAAAf,KAAO,EAAAggB,YAAYvf,QAAQ,EAAA8E,qBAAqBwF,QAAQ,EAAAzF,oBAAoB/E,OAAQ,CACnF6lC,KAAM,CACLC,QAAS,EAAA9gC,qBAAqBkB,IAAI,CAACnI,EAAM/B,KACjC,CAAC+B,KAAMA,EAAMS,MAAOxC,QAI9B,KAAAolI,SAAW,EAAA3hH,YAAY3f,QAAQ,EAAG,CACjC6wB,WAAY,CAAClxB,KAAM,EAAAuF,qBAAqBwF,QAAQ,EAAAzF,oBAAoBK,UAGtE,MAAM6E,EAAe,IAAIk3H,EAEzB,MAAa3K,UAAoB,EAAA3uH,YAAjC,c,oBACC,KAAAqC,cAAgBD,EAIN,KAAAw5D,mCAA6C,EAC/C,KAAA1mB,kCAAoC77C,KAAK87C,4BAA4Bj+C,KAAKmC,MAClE,KAAA8L,0BAAqD,IAAI,EAAAiwC,wBAAwB/7C,MALjG,cACC,MAAO,QAMR,kBACCA,KAAKwa,oBAAoB,wBAAyBxa,KAAKu8C,sBAAsB1+C,KAAKmC,OAClFA,KAAKqhC,UAAUqQ,mBAAmB1xC,KAAK67C,mCACvC77C,KAAK8L,0BAA0B1E,kBAE/BpH,KAAK8L,0BAA0BC,kCAAkC,IAAM,IACvE/L,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAAC,EAAAnI,qBAAqB9D,KAAK4f,GAAGrhB,QAavG,UAAUkK,GACT,MAAMqtB,EAAc,GAEdhC,EAAU,EAAAhwB,qBAAqB9D,KAAK4f,GAAGrhB,MACvCq2B,EAAW50B,KAAK2rC,eAEtB7V,EAAYx6B,KAAK,IAAI,EAAA+5B,oBAAoBr1B,KAAM8zB,EAASc,IACxDnsB,EAA8ByE,gBAAgBlN,KAAM81B,GAErD,oBACC,MAAMhC,EAAU,EAAAhwB,qBAAqB9D,KAAK4f,GAAGrhB,MACvCqU,EAAgB,EAAApO,4BAA4BsvB,GAClD,IAAIiqF,EAAa,EAAA35G,kCAAkC0vB,GAEnD9zB,KAAK0I,0BAA4B1I,KAAK0I,2BAA6B,IAAI,EAAAw6G,uBACvEljH,KAAK0I,0BAA0BC,QAG9Bo1G,GAAc,EAAAr/G,UAAUc,SACxBQ,KAAK/B,EAAEiiI,SAAS5iI,OAChB,UAAesV,IACS,GAAxBA,EAAc5X,OAEdgF,KAAK0I,0BAA0By3H,gBAC9B,EAAAzhI,UAAUG,MACVmB,KAAK4f,GAAG/iB,KACR+V,EACA5S,KAAK2rC,gBAGN3rC,KAAK0I,0BAA0By3H,gBAC9BpiB,EACA/9G,KAAK4f,GAAG/iB,KACR+V,EACA5S,KAAK2rC,gBAIR,eACC,MAAM3jC,EAA0BhI,KAAKa,GAAGC,QAAQmH,+BAA+B,GAE/E,OADiBjI,KAAKoI,YAAYJ,EAAwBnL,MAgBnD,8BACa,IAAhBmD,KAAK4f,GAAG/iB,MACXmD,KAAK/B,EAAEpB,KAAK0D,IAAIP,KAAKnD,OAtFxB,iB,8EC9BA,cACA,QAEA,MAAai5H,UAAsB,EAAAlqH,yBAClC,cACC,MAAO,UAGR,kBACC3F,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkB,CAAC,IAAK,IAAK,OAAOA,IAC5FpC,KAAK8L,0BAA0Bu1D,yBAA0Bj/D,GAAkB,WAC3EpC,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OAGpG,iBACC,MAAO,UAGE,wBACT,MAAMzB,EAAOyB,KAAK8L,0BAA0BO,+BAAiC,EAAAxI,oBAAoBK,KACjG,MAAO,CAAC3F,EAAMA,EAAM,EAAAsF,oBAAoB/E,OAG/B,yBAET,MAAO,CADMkB,KAAKgM,wBAAwB,KAxB5C,mB,2FCHA,QACA,2BACA,QACA,QAEA,MAAaupH,UAAuB,EAAAiD,iCACnC,cACC,MAAO,YAER,kBACCvyH,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkB,CAAC,QAAS,SAASA,IAC7FpC,KAAK8L,0BAA0BC,kCAAkC,IAAM,CACtE,EAAAlI,oBAAoBM,KACpB,EAAAN,oBAAoBM,OAErBnE,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAAC,EAAApI,oBAAoBM,OAM9F,iBACC,MAAO,YASR,0BACC,MAAO,CAAC,IAAI,EAAAq9D,qBAAqBxhE,KAAM,EAAA6D,oBAAoBM,KAAM,aA7BnE,oB,2FCLA,QACA,2BACA,QACA,QAEA,IAAKo1H,GAAL,SAAKA,GACJ,cACA,gBAFD,CAAKA,MAAS,KAId,MAAMC,EAA+B,CAACD,EAAU6G,KAAM7G,EAAU8G,OAO1D3G,EAAgC,CACrC,CAACH,EAAU6G,MAHkB,CAAC,EAAG,EAAG,GAIpC,CAAC7G,EAAU8G,OAHkB,GAM9B,MAAa7K,UAAgC,EAAAp0D,iCAC5C,cACC,MAAO,uBAGR,kBACCn7D,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkBo3H,EAAWp3H,IACrFpC,KAAK8L,0BAA0BC,kCAAkC,IAAM,CACtE,EAAAlI,oBAAoBK,KACpB,EAAAL,oBAAoB/E,QAErBkB,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAAC,EAAApI,oBAAoBM,OAM9F,uBAAuBtH,GACtB,OAAO68H,EAAc78H,GAEtB,iBACC,MAAO,uBASR,0BACC,MAAO,CAAC,IAAI,EAAA2kE,qBAAqBxhE,KAAM,EAAA6D,oBAAoBM,KAAM,aAjCnE,6B,2FCrBA,QACA,2BACA,QACA,QAEA,MAAasxH,UAA0B,EAAA+C,iCACtC,cACC,MAAO,gBAGR,kBACCvyH,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkB,CAAC,QAAQA,IACnFpC,KAAK8L,0BAA0BC,kCAAkC,IAAM,CAAC,EAAAlI,oBAAoBM,OAC5FnE,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAAC,EAAApI,oBAAoB/E,QAM9F,iBACC,MAAO,gBASR,0BACC,MAAO,CAAC,IAAI,EAAA0iE,qBAAqBxhE,KAAM,EAAA6D,oBAAoB/E,MAAO,aA3BpE,uB,2FCLA,QACA,2BACA,QACA,QAEA,MAAa42H,UAAyB,EAAA8C,iCACrC,cACC,MAAO,eAGR,kBACCvyH,MAAMmB,kBAENpH,KAAK8L,0BAA0BK,wBAAyB/J,GAAkB,CAAC,QAAQA,IACnFpC,KAAK8L,0BAA0BC,kCAAkC,IAAM,CAAC,EAAAlI,oBAAoBM,OAC5FnE,KAAK8L,0BAA0BG,mCAAmC,IAAM,CAAC,EAAApI,oBAAoBK,OAM9F,iBACC,MAAO,eASR,0BACC,MAAO,CAAC,IAAI,EAAAs9D,qBAAqBxhE,KAAM,EAAA6D,oBAAoBK,KAAM,aA3BnE,sB,8ECLA,cACA,QACA,QAEA,QACA,SACA,SACA,QAIA,OACA,MAAMo8H,UAA2B,EAAAx3H,iBAAjC,c,oBACC,KAAAjM,KAAO,EAAA0hB,YAAYjf,OAAO,QAC1B,KAAAkZ,MAAQ,EAAA+F,YAAYzf,MAAM,IAE3B,MAAMiK,EAAe,IAAIu3H,EACzB,MAAa3K,UAAmB,EAAAhvH,YAAhC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,OAGR,aACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAlBa,MAkB0B,EAAAn+B,oBAAoB/E,SAIjE,UAAU2J,GACT,MAAMqrB,EAAU,EAAAjwB,oBAAoB/E,MAC9BisD,EAAe/qD,KAAKslH,gBACpB1wF,EAAW50B,KAAKoI,YAzBJ,OA2BZ8sB,EAAa,IAAI,EAAAG,oBAAoBr1B,KAAM,EAAA6D,oBAAoBQ,WAAY0mD,GACjFtiD,EAA8ByE,gBAAgBlN,KAAM,CAACk1B,IAErD,MAAMqrG,EAAYvgI,KAAK8M,mBAAmB9M,KAAK/B,EAAEua,MAAM3b,MACjDkQ,EAAY,GAAG+mB,KAAWc,iBAAwB50B,KAAKslH,yBAAyBib,aACtF93H,EAA8BwE,eAAejN,KAAM,CAAC+M,IAErD,oBACC/M,KAAK0I,0BAA4B1I,KAAK0I,2BAA6B,IAAI,EAAAw6G,uBACvEljH,KAAK0I,0BAA0BC,QAC/B3I,KAAK0I,0BAA0By3H,gBAC9B,EAAAzhI,UAAUU,KACVY,KAAK4f,GAAG/iB,KACR,EAAAqC,UAAUC,cACVa,KAAKslH,iBAGC,gBACP,MAAO,gBAAkBtlH,KAAKoI,YA7CZ,QAQpB,gB,8ECjBA,cACA,QACA,OACA,QACA,QAKA,MAAMo4H,UAA6B,EAAA13H,iBAAnC,c,oBACC,KAAA23H,KAAO,EAAAliH,YAAYhf,QAAQ,CAAC,EAAG,KAEhC,MAAMwJ,EAAe,IAAIy3H,EACzB,MAAa5K,UAAqB,EAAAjvH,YAAlC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,SAGR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAhBa,OAgB0B,EAAAn+B,oBAAoB/E,SAIjE,UAAU2J,GAaT,MAAM6qB,EAAatzB,KAAKa,GAAG6G,OAAOmF,8BAA8B,GAAGhQ,KAC7DS,EAAQ,EAAAgL,UAAUwxH,QAAQ95H,KAAK8M,mBAAmBwmB,IAGlDvmB,EAAY,SADJ/M,KAAKoI,YApCD,kBAqCyB9K,KAE3CmL,EAA8BwE,eAAejN,KAAM,CAAC+M,KAjCtD,kB,2FCbA,QACA,QAEA,4BACA,OACA,QACA,QACA,QAIA,MAAM2zH,UAA+B,EAAA53H,iBAArC,c,oBACC,KAAAkyH,IAAM,EAAAz8G,YAAY/e,QAAQ,CAAC,EAAG,EAAG,KAElC,MAAMuJ,EAAe,IAAI23H,EACzB,MAAa3K,UAAuB,EAAApvH,YAApC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,aAGR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAfa,MAe0B,EAAAn+B,oBAAoBK,QAIjE,UAAUuE,GACT,MAAMsyH,EAA6B,GAC7BlmG,EAAa,GAEnBkmG,EAA2Bz/H,KAAK,IAAI,EAAAkmE,qBAAqBxhE,KAAM,EAAA6D,oBAAoBK,KAAM,YAEzF,MAAM82H,EAAM,EAAA1yH,UAAUjD,QAAQrF,KAAK8M,mBAAmB,QAEhDguH,EAAM96H,KAAKoI,YAAY,OAC7BysB,EAAWv5B,KAAK,QAAQw/H,eAAiBE,MACzCvyH,EAA8ByE,gBAAgBlN,KAAM+6H,GACpDtyH,EAA8BwE,eAAejN,KAAM60B,IAzBrD,oB,6BCfA,OAAe,4b,2FCAf,SACA,2BACA,QACA,QAEA,IAAK8rG,GAAL,SAAKA,GACJ,mBACA,mBAFD,CAAKA,MAAI,KAIT,MAAMC,EAAqB,CAACD,EAAKP,KAAMO,EAAK1kG,MAGtC4kG,EAA4B,CACjC,CAACF,EAAKP,MAAO,oBACb,CAACO,EAAK1kG,MAAO,mBAGR6kG,EAAsC,CAC3C,CAACH,EAAKP,MAAO,CAAC,SAAU,OAAQ,SAChC,CAACO,EAAK1kG,MAAO,CAAC,SAAU,SAEnB8kG,EAAiC,CACtC,CAACJ,EAAKP,MAAO,yBACb,CAACO,EAAK1kG,MAAO,oBAGR+kG,EAA8C,CACnD,CAACL,EAAKP,MAAO,CAAC,EAAAv8H,oBAAoBK,KAAM,EAAAL,oBAAoBK,KAAM,EAAAL,oBAAoB/E,OACtF,CAAC6hI,EAAK1kG,MAAO,CAAC,EAAAp4B,oBAAoBK,KAAM,EAAAL,oBAAoBM,OAGvDu1H,EAAqC,CAC1C94C,OAAQ,CAAC,EAAG,EAAG,GACfqgD,KAAM,CAAC,EAAG,EAAG,IAGd,OAEA,QAEA,MAAMC,UAA2B,EAAAp4H,iBAAjC,c,oBACC,KAAAq4H,UAAY,EAAA5iH,YAAYvf,QAAQ2hI,EAAKP,KAAM,CAC1Cz7F,KAAM,CACLC,QAASg8F,EAAM57H,IAAI,CAACxH,EAAM1C,KAElB,CAAC+B,KADMgkI,EAAYrjI,GACLF,MAAOxC,SAMhC,MAAMiO,EAAe,IAAIm4H,EACzB,MAAalL,UAAqB,EAAAnqH,mBAAlC,c,oBACC,KAAA7C,cAAgBD,EAChB,cACC,MAAO,SAKR,kBACC9C,MAAMmB,kBACNpH,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OACnGA,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAGvE,eAAeoC,GACxB,MAAM5E,EAAOojI,EAAM5gI,KAAK4f,GAAGuhH,WAC3B,OAAOL,EAAiBtjI,GAAM4E,GAE/B,uBAAuBvF,GACtB,OAAO68H,EAAc78H,GAEtB,iBACC,MAAMW,EAAOojI,EAAM5gI,KAAK4f,GAAGuhH,WAC3B,OAAOJ,EAAiBvjI,GAGf,wBACT,MAAMA,EAAOojI,EAAM5gI,KAAK4f,GAAGuhH,WAC3B,OAAOH,EAAiBxjI,GAEf,yBACT,MAAO,CAAC,EAAAqG,oBAAoBK,MAE7B,0BACC,MAAM3F,EAAOyB,KAAKkM,yBAAyB,GAC3C,MAAO,CAAC,IAAI,EAAAs1D,qBAAqBxhE,KAAMzB,EAAM,YAG9C,UAAUkK,GACT,MAAMkE,EAAgC3M,KAAKa,GAAGC,QAAQmH,+BAA+B,GAAG1J,KAKlFqO,EAJO5M,KAAKa,GAAG6G,OAAOmF,8BAA8B7H,IAAI,CAAC4C,EAAY9M,KAC1E,MAAM+B,EAAO+K,EAAW/K,KACxB,OAAO,EAAAyL,UAAUC,IAAIvI,KAAK8M,mBAAmBjQ,MAErBqI,KAAK,MAGxB6H,EAAY,GAAGJ,KADT3M,KAAKoI,YAAYpI,KAAK8L,0BAA0B3D,YAAY,SAC9BnI,KAAKgN,oBAAoBJ,KACnEnE,EAA8BwE,eAAejN,KAAM,CAAC+M,IACpDtE,EAA8ByE,gBAAgBlN,KAAMA,KAAKmN,4BAlD3D,kB,8ECpDA,cACA,QAEA,QAEM8wH,EAAiB,CAAC,IAAK,IAAK,IAAK,KAGvC,MAAahI,UAAoB,EAAAuC,iCAChC,cACC,MAAO,QAYR,UAAU/vH,GAMT,MAAMZ,EAAmB7H,KAAKa,GAAG6G,OAAOmF,8BAA8B,GAChEvP,EAAQ,EAAAgL,UAAUwxH,QAAQ95H,KAAK8M,mBAAmBjF,EAAiBhL,OAEnEshG,EAAoBn+F,KAAKa,GAAGC,QAAQmH,+BAA+B,GACnE2sB,EAAW50B,KAAKoI,YAAY+1F,EAAkBthG,MAE9Cg4B,EAAuB,GAE7B,GAAmB,GADC,EAAAnwB,kCAAkCy5F,EAAkB5/F,MAEvEs2B,EAAWv5B,KAAK,GAAG6iG,EAAkB5/F,QAAQq2B,OAAc50B,KAAKohI,aAAa9jI,UACvE,CACN,MAAM+jI,EAAyBpD,EAAej5H,IAAKrI,GAC3CqD,KAAKohI,aAAa,GAAG9jI,KAASX,MAEtCk4B,EAAWv5B,KACV,GAAG6iG,EAAkB5/F,QAAQq2B,OAAcupE,EAAkB5/F,QAAQ8iI,EAAan8H,KAAK,SAGzFuD,EAA8BwE,eAAejN,KAAM60B,GAG5C,aAAav3B,GACpB,MAAO,QAAQA,gBAAoBA,WA1CrC,iB,8ECRA,cACA,SAEA,QACA,QACA,QACA,QAEA,SACA,QAEA,OACA,MAAMgkI,UAA4B,EAAAx4H,iBAAlC,c,oBACC,KAAAyhB,WAAa,EAAAhM,YAAYjf,OAAO,eAChC,KAAAsT,cAAgB,EAAA2L,YAAYjf,OAAO,EAAAw4B,YAAYC,kBAAkBC,IACjE,KAAArK,GAAK,EAAApP,YAAYhf,QAAQ,CAAC,EAAG,KAE9B,MAAMwJ,EAAe,IAAIu4H,EACzB,MAAa/K,UAAsB,EAAA5vH,YAAnC,c,oBACC,KAAAqC,cAAgBD,EAChB,cACC,MAAO,UAIR,kBACC9C,MAAMmB,kBAENpH,KAAKa,GAAGC,QAAQqG,mCAAmC,CAClD,IAAI,EAAA66B,0BAA0Bu0F,EAAcr6E,YAAa,EAAAr4C,oBAAoBM,QAI/E,UAAUsE,GACT,MAAMklB,EAAK,EAAArlB,UAAUwxH,QAAQ95H,KAAK8M,mBAAmB9M,KAAK/B,EAAE0vB,GAAG9wB,OAEzD0kI,EAAOvhI,KAAKoI,YAAYmuH,EAAcr6E,aACtCl3C,EAAMhF,KAAKslH,gBACXpwF,EAAa,IAAI,EAAAG,oBAAoBr1B,KAAM,EAAA6D,oBAAoBQ,WAAYW,GAC3E+H,EAAY,QAAQw0H,iBAAoBv8H,MAAQ2oB,KACtDllB,EAA8ByE,gBAAgBlN,KAAM,CAACk1B,IACrDzsB,EAA8BwE,eAAejN,KAAM,CAAC+M,IAGrD,oBACC/M,KAAK0I,0BAA4B1I,KAAK0I,2BAA6B,IAAI,EAAAw6G,uBACvEljH,KAAK0I,0BAA0BC,QAE/B3I,KAAK0I,0BAA0By3H,gBAC9B,EAAAzhI,UAAUO,cACVe,KAAK4f,GAAG2K,WACRvqB,KAAK4f,GAAGhN,cACR5S,KAAKslH,iBAGC,gBACP,OAAOtlH,KAAKoI,YAAYpI,KAAK4f,GAAG2K,aAtClC,kBAKiB,EAAA2xB,YAAc,Q,8ECvB/B,cACA,QACA,SAGA,IAAKq9E,GAAL,SAAKA,GACJ,wBACA,oBACA,sBAHD,CAAKA,MAAS,KAKd,MAAMC,EAA+B,CAACD,EAAUiI,UAAWjI,EAAUkI,QAASlI,EAAUmI,UAExF,QAEA,MAAalL,UAA2B,EAAAmL,qBAAxC,c,oBAKiB,KAAA71H,0BAAqD,IAAI,EAAAiwC,wBAAwB/7C,MAJjG,cACC,MAAO,iBAIR,kBACCiG,MAAMmB,kBACNpH,KAAK8L,0BAA0B1E,kBAE/BpH,KAAK8L,0BAA0BC,kCAAkC/L,KAAKgM,sBAAsBnO,KAAKmC,OACjGA,KAAK8L,0BAA0BG,mCAAmCjM,KAAKkM,uBAAuBrO,KAAKmC,OACnGA,KAAK8L,0BAA0BK,wBAAwBnM,KAAKoM,eAAevO,KAAKmC,OAChFA,KAAK8L,0BAA0Bu1D,yBAAyBrhE,KAAKshE,gBAAgBzjE,KAAKmC,OAGzE,eAAeoC,GACxB,OAAOo3H,EAAWp3H,GAET,kBACT,MA9BkB,QAgCT,wBACT,MAAMw/H,EACL5hI,KAAKa,GAAGkG,YAAYc,iBAAiB,IAAM7H,KAAKa,GAAGkG,YAAYc,iBAAiB,GAC3EtJ,EAA4BqjI,EAC/B5hI,KAAK8L,0BAA0Bw2B,gCAAgCs/F,GAC/D,EAAA/9H,oBAAoB/E,MACvB,MAAO,CAAC,EAAA+E,oBAAoBE,KAAMxF,EAAMA,GAE/B,yBAET,MAAO,CADMyB,KAAKgM,wBAAwB,IAI3C,UAAUvD,GACT,MAAMosB,EAAuB,GAEvBv3B,EAAQ0C,KAAKoI,YAhDD,SAiDZy5H,EAAY,EAAAv5H,UAAU85D,KAAKpiE,KAAK8M,mBAAmBysH,EAAUiI,YAC7DM,EAAU,EAAAx5H,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUkI,UAC1DM,EAAW,EAAAz5H,UAAUC,IAAIvI,KAAK8M,mBAAmBysH,EAAUmI,WAE3D5tG,EAAU9zB,KAAKkM,yBAAyB,GAC9C2oB,EAAWv5B,KAAK,GAAGw4B,KAAWx2B,KAC9Bu3B,EAAWv5B,KAAK,MAAMumI,OACtBhtG,EAAWv5B,KAAK,GAAGgC,OAAWwkI,KAC9BjtG,EAAWv5B,KAAK,YAChBu5B,EAAWv5B,KAAK,GAAGgC,OAAWykI,KAC9BltG,EAAWv5B,KAAK,KAChBmN,EAA8BwE,eAAejN,KAAM60B,IAlDrD,wB,oFCdA,E,KAAA,uBACA,SACA,QAEM6kG,EAAqC,CAC1Ch0E,MAAO,CAAC,EAAG,EAAG,GACds8E,IAAK,CAAC,EAAG,EAAG,GACZn3G,GAAI,CAAC,EAAG,EAAG,IAGZ,MAAagsG,UAA0B,EAAAh0D,wBAAwB,eAAgB,CAC9E9B,GAAI,CAAC,QAAS,MAAO,MACrBJ,OAAQ,uBACRQ,UAAW,CAAC,cAEF,wBACT,MAAM5iE,EAAO,EAAAsF,oBAAoBK,KACjC,MAAO,CAAC3F,EAAMA,EAAMA,GAEX,yBACT,MAAO,CAAC,EAAAsF,oBAAoBM,MAE7B,uBAAuBtH,GACtB,OAAO68H,EAAc78H,IAbvB,uB,oFCVA,E,KAAA,uBACA,SACA,QAEM68H,EAAqC,CAC1Ch0E,MAAO,CAAC,EAAG,EAAG,GACds8E,IAAK,CAAC,EAAG,EAAG,IAGb,MAAalL,UAA0B,EAAAp2D,wBAAwB,eAAgB,CAC9EK,GAAI,CAAC,QAAS,OACdJ,OAAQ,eACRQ,UAAW,CAAC,cAEF,wBACT,MAAM5iE,EAAO,EAAAsF,oBAAoBK,KACjC,MAAO,CAAC3F,EAAMA,GAEL,yBACT,MAAO,CAAC,EAAAsF,oBAAoB/E,OAE7B,uBAAuBjC,GACtB,OAAO68H,EAAc78H,IAbvB,uB,8ECTA,eAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAcA,oBACC,WAAWkiH,GACVA,EAAK1lG,cAAc,EAAA4oH,iBAAkB,EAAA5lG,aAAa15B,MAClDo8G,EAAK1lG,cAAc,EAAA6oH,wBAAyB,EAAA7lG,aAAaZ,UACzDsjF,EAAK1lG,cAAc,EAAA8oH,mBAAoB,EAAA9lG,aAAa15B,MACpDo8G,EAAK1lG,cAAc,EAAA+oH,0BAA2B,EAAA/lG,aAAaZ,UAC3DsjF,EAAK1lG,cAAc,EAAAiqD,oBAAqB,EAAAjnC,aAAa15B,MACrDo8G,EAAK1lG,cAAc,EAAAgpH,2BAA4B,EAAAhmG,aAAaZ,UAC5DsjF,EAAK1lG,cAAc,EAAAipH,cAAe,EAAAjmG,aAAalzB,QAC/C41G,EAAK1lG,cAAc,EAAA0qD,qBAAsB,EAAA1nC,aAAaZ,a,2FChCxD,QACA,OACA,QAEA,OACA,SACA,SACA,SACA,SACA,SACA,MAAM8mG,UAAiC,EAAA/pG,2BACtC,EAAAd,sBAAsB,EAAAJ,oBAAoB,EAAAhI,gBAAgB,EAAA0hB,iBAAiB,EAAAloC,wBAE5E,MAAMC,EAAe,IAAIw5H,EAEzB,MAAaN,UAAyB,EAAA7mH,aAAtC,c,oBACC,KAAApS,cAAgBD,EAaP,KAAAuvB,uBAA+C,IAAI,EAAAT,qBAAqB73B,KAAM,CAACmgD,eAAe,IAC9F,KAAAvnB,6BAA0D,IAAI,EAAAF,0BAA0B14B,KAAM,CACtGmgD,eAAe,IAdhB,cACC,MAAO,aAGR,kBACC,OAAO,IAAI,EAAArY,kBAAkB,CAC5B19B,cAAc,EACdN,KAAM,EAAAC,UACNF,MAAO,SACPqnC,QAAS,IAOX,kBACClxC,KAAKwI,OAAO24B,4BAA4B,KACvCnhC,KAAKs4B,uBAAuBlxB,kBAC5BpH,KAAK44B,6BAA6BxxB,oBAG9B,O,mDACL,EAAAiqC,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MACtB,EAAAw3B,mBAAmBe,OAAOv4B,MAC1BA,KAAKs4B,uBAAuBC,SAC5Bv4B,KAAK44B,6BAA6BL,SAElCv4B,KAAK2jE,aAAa3jE,KAAKmD,cA/BzB,sB,8ECdA,eAGA,MAAakY,UAA0B,EAAA6b,eACtC,YAAY9R,GACXnf,MAAMof,YAAYD,GAEnB,aAAajiB,GACS,MAAjBnD,KAAKo3B,UACRp3B,KAAKo3B,SAASlZ,UAEfle,KAAKqlB,YAAYliB,GAElB,eACC,OAAOnD,KAAKwiI,cAEb,WACC,OAAOxiI,KAAKolB,WAdd,uB,2FCJA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,MAAMm9G,UAAiC,EAAA/pG,2BACtC,EAAAd,sBAAsB,EAAAJ,oBAAoB,EAAAhI,gBAAgB,EAAA0hB,iBAAiB,EAAAloC,wBAE5E,MAAMC,EAAe,IAAIw5H,EAEzB,MAAaL,UAAgC,EAAAzwF,oBAA7C,c,oBACC,KAAAzoC,cAAgBD,EAKP,KAAAuvB,uBAA+C,IAAI,EAAAT,qBAAqB73B,KAAM,CAACuyB,UAAU,IACzF,KAAAqG,6BAA0D,IAAI,EAAAF,0BAA0B14B,KAAM,CACtGuyB,UAAU,IANX,cACC,MAAO,qBAOR,kBACCvyB,KAAKwI,OAAO24B,4BAA4B,KACvCnhC,KAAKs4B,uBAAuBlxB,kBAC5BpH,KAAK44B,6BAA6BxxB,oBAI1B,+BACT,OAAO,IAAI,EAAA48D,sBAA4ChkE,KAAM,EAAAyiI,sBAGxD,O,yDACCziI,KAAKkkE,sBAEX,EAAA7yB,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MACtB,EAAAw3B,mBAAmBe,OAAOv4B,YACpB,EAAA63B,qBAAqBU,OAAOv4B,YAC5B,EAAA04B,0BAA0BH,OAAOv4B,MAEvCA,KAAK2jE,aAAa3jE,KAAKmD,cA9BzB,6B,8ECbA,cACA,QACA,QAEA,SAEA,MAAas/H,UAA6B,EAAA7gF,oBACzC,uBACC,MAAM5uB,EAAW,EAAA0vG,UAAUC,MAC3B,MAAO,CACNvwG,aAAcY,EAASZ,aACvBC,eAAgBW,EAASX,eACzBE,SAAUS,EAAST,UAGrB,kBACC,MAAMqwG,EAAkB5iI,KAAKurC,iBAEvBpoC,EAAW,IAAI,EAAAmtB,eAAe,CAKnCmjD,QAAQ,EAIRlhD,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,iBAGjC,OADAryB,KAAK8iI,sBAAsB3/H,GACpBA,GA1BT,0B,8ECPA,cACA,QACA,QACA,OACA,OAEA,SACA,QAEM8nC,EAAiD,IAAI5a,IAAI,CAC9D,CAAC,EAAA9f,WAAWzF,OAAQ,2BACpB,CAAC,EAAAyF,WAAW4hB,SAAU,sCAGvB,MAAaovB,UAA0C,EAAArxB,wBAGtD,uBACC,MAAM8C,EAAW,EAAA0vG,UAAUK,aAC3B,MAAO,CACN3wG,aAAcY,EAASZ,aACvBC,eAAgBW,EAASX,eACzBE,SAAUS,EAAST,UAGX,kBAAkBO,GAC3B,OAAOmY,EAAsB/tC,IAAI41B,GAGlC,kBACC,MAAM8vG,EAAkB5iI,KAAKurC,iBAC7B,OAAO,IAAI,EAAAjb,eAAe,CAMzBuwB,QAAS,CACRmiF,cAAe,CAAC,EAAAC,iBAAkB,EAAAC,mBAAmB,IAGtD3wG,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,kBA7BnC,uC,8ECdA,cACA,QACA,QACA,OACA,OAEA,SACA,QAEM4Y,EAAiD,IAAI5a,IAAI,CAC9D,CAAC,EAAA9f,WAAWzF,OAAQ,2BACpB,CAAC,EAAAyF,WAAW4hB,SAAU,sCAGvB,MAAasvB,UAAuC,EAAAvxB,wBAGnD,uBACC,MAAM8C,EAAW,EAAA0vG,UAAUjsE,MAC3B,MAAO,CACNrkC,aAAcY,EAASZ,aACvBC,eAAgBW,EAASX,eACzBE,SAAUS,EAAST,UAGX,kBAAkBO,GAC3B,OAAOmY,EAAsB/tC,IAAI41B,GAGlC,kBACC,MAAM8vG,EAAkB5iI,KAAKurC,iBAC7B,OAAO,IAAI,EAAAjb,eAAe,CAMzBuwB,QAAS,CACRmiF,cAAe,CAAC,EAAAC,iBAAkB,EAAAC,mBAAmB,IAGtD3wG,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,kBA7BnC,oC,2FCdA,QACA,QAKA,SAEA,4BACA,4BACA,QAEM2Y,EAAmD,IAAI3a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,uBAChFmgC,EAAiD,IAAI5a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,oBAGpF,MAAa62C,UAA0C,EAAAzxB,wBAGtD,uBACC,MAAO,CACNkC,aAAc,UACdC,eAAgB,UAChBE,SAAU,CACT4wG,MAAO,CAAC7lI,MAAO,GACf8lI,KAAM,CAAC9lI,MAAO,MAIP,oBAAoBw1B,GAC7B,OAAOkY,EAAwB9tC,IAAI41B,GAE1B,kBAAkBA,GAC3B,OAAOmY,EAAsB/tC,IAAI41B,GAGlC,kBACC,MAAM8vG,EAAkB5iI,KAAKurC,iBAC7B,OAAO,IAAI,EAAAjb,eAAe,CAKzBiC,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,kBA7BnC,uC,6BChBA,OAAe,kM,2FCAf,SACA,OACA,QAEA,OACA,SACA,SACA,SACA,SACA,SACA,MAAMgxG,UAAmC,EAAA7qG,2BACxC,EAAAd,sBAAsB,EAAAJ,oBAAoB,EAAAhI,gBAAgB,EAAA0hB,iBAAiB,EAAAloC,wBAE5E,MAAMC,EAAe,IAAIs6H,EAEzB,MAAalB,UAA2B,EAAA/mH,aAAxC,c,oBACC,KAAApS,cAAgBD,EAaP,KAAAuvB,uBAA+C,IAAI,EAAAT,qBAAqB73B,KAAM,CAACmgD,eAAe,IAC9F,KAAAvnB,6BAA0D,IAAI,EAAAF,0BAA0B14B,KAAM,CACtGmgD,eAAe,IAdhB,cACC,MAAO,eAGR,kBACC,OAAO,IAAI,EAAAj2C,oBAAoB,CAC9BE,cAAc,EACdN,KAAM,EAAAC,UACNF,MAAO,SACPqnC,QAAS,IAOX,kBACClxC,KAAKwI,OAAO24B,4BAA4B,KACvCnhC,KAAKs4B,uBAAuBlxB,kBAC5BpH,KAAK44B,6BAA6BxxB,oBAG9B,O,mDACL,EAAAiqC,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MACtB,EAAAw3B,mBAAmBe,OAAOv4B,MAC1BA,KAAKs4B,uBAAuBC,SAC5Bv4B,KAAK44B,6BAA6BL,SAElCv4B,KAAK2jE,aAAa3jE,KAAKmD,cA/BzB,wB,2FCfA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,MAAMkgI,UAAmC,EAAA7qG,2BACxC,EAAAd,sBAAsB,EAAAJ,oBAAoB,EAAAhI,gBAAgB,EAAA0hB,iBAAiB,EAAAloC,wBAE5E,MAAMC,EAAe,IAAIs6H,EAEzB,MAAajB,UAAkC,EAAA3wF,oBAA/C,c,oBACC,KAAAzoC,cAAgBD,EAKP,KAAAuvB,uBAA+C,IAAI,EAAAT,qBAAqB73B,KAAM,CAACuyB,UAAU,IACzF,KAAAqG,6BAA0D,IAAI,EAAAF,0BAA0B14B,KAAM,CACtGuyB,UAAU,IANX,cACC,MAAO,uBAOR,kBACCvyB,KAAKwI,OAAO24B,4BAA4B,KACvCnhC,KAAKs4B,uBAAuBlxB,kBAC5BpH,KAAK44B,6BAA6BxxB,oBAI1B,+BACT,OAAO,IAAI,EAAA48D,sBAA8ChkE,KAAM,EAAAsjI,wBAG1D,O,yDACCtjI,KAAKkkE,sBAEX,EAAA7yB,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MACtB,EAAAw3B,mBAAmBe,OAAOv4B,YACpB,EAAA63B,qBAAqBU,OAAOv4B,YAC5B,EAAA04B,0BAA0BH,OAAOv4B,MAEvCA,KAAK2jE,aAAa3jE,KAAKmD,cA9BzB,+B,8ECdA,cACA,QACA,QAEA,SAEA,MAAamgI,UAA+B,EAAA1hF,oBAC3C,uBACC,MAAM5uB,EAAW,EAAA0vG,UAAUa,QAC3B,MAAO,CACNnxG,aAAcY,EAASZ,aACvBC,eAAgBW,EAASX,eACzBE,SAAUS,EAAST,UAGrB,kBACC,MAAMqwG,EAAkB5iI,KAAKurC,iBACvBpoC,EAAW,IAAI,EAAAmtB,eAAe,CACnCmjD,QAAQ,EAERlhD,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,iBAGjC,OADAryB,KAAK8iI,sBAAsB3/H,GACpBA,GAnBT,4B,2FCPA,OACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAIA,SAEA,MAAMigE,UAAoC,EAAAC,yBACzC,EAAA7qC,2BACC,EAAAd,sBAAsB,EAAAJ,oBAAoB,EAAAhI,gBAAgB,EAAA0hB,iBAAiB,EAAAloC,wBAF7E,c,oBAKC,KAAAkB,UAAY,EAAAuU,YAAYzf,MAAM,EAAAqkE,gBAAgBn5D,UAAW,CACxD61B,MAAM,EACNtlB,SAAU,CAAC9W,EAAoB+T,IAC9B6qH,EAA2BmB,kBAAkB//H,KAE/C,KAAAwG,UAAY,EAAAsU,YAAYzf,MAAM,EAAAqkE,gBAAgBl5D,UAAW,CACxD41B,MAAM,EACNtlB,SAAU,CAAC9W,EAAoB+T,IAC9B6qH,EAA2BoB,kBAAkBhgI,MAGhD,MAAMsF,EAAe,IAAIq6D,EAEzB,MAAai/D,UAAmC,EAAA5wF,oBAAhD,c,oBAIC,KAAAzoC,cAAgBD,EAKP,KAAAuvB,uBAA+C,IAAI,EAAAT,qBAAqB73B,KAAM,CAACuyB,UAAU,IACzF,KAAAqG,6BAA0D,IAAI,EAAAF,0BAA0B14B,KAAM,CACtGuyB,UAAU,IAEF,KAAAgxC,2BAAsD,IAAI,EAAAC,wBAAwBxjE,KAAM,CAChGuyB,UAAU,EACV4tB,eAAe,EACftS,QAAQ,IAXT,cACC,MAAO,wBAYR,kBACC7tC,KAAKwI,OAAO24B,4BAA4B,KACvCnhC,KAAKs4B,uBAAuBlxB,kBAC5BpH,KAAK44B,6BAA6BxxB,kBAClCpH,KAAKujE,2BAA2Bn8D,oBAIxB,+BACT,OAAO,IAAI,EAAA48D,sBAA+ChkE,KAAM,EAAA0jI,yBAG3D,O,yDACC1jI,KAAKkkE,sBAEX,EAAA7yB,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MACtB,EAAAw3B,mBAAmBe,OAAOv4B,YACpB,EAAA63B,qBAAqBU,OAAOv4B,YAC5B,EAAA04B,0BAA0BH,OAAOv4B,YACjC,EAAAwjE,wBAAwBjrC,OAAOv4B,MAEjCA,KAAK+b,YACR/b,KAAK+b,UAAUwW,SAASkxC,gBAAgBnmE,MAAQ0C,KAAK4f,GAAG8jD,kBACxD2+D,EAA2BmB,kBAAkBxjI,MAC7CqiI,EAA2BoB,kBAAkBzjI,OAG9CA,KAAK2jE,aAAa3jE,KAAKmD,aAExB,yBAAyBM,GACxBA,EAAKN,SAASovB,SAASvoB,UAAU1M,MAAQmG,EAAKmc,GAAG5V,UAElD,yBAAyBvG,GACxBA,EAAKN,SAASovB,SAAStoB,UAAU3M,MAAQmG,EAAKmc,GAAG3V,WApDnD,gC,2FCjCA,QACA,QACA,QAEA,SACA,SACA,SACA,SAEA,4BACA,4BAEA,QACA,QAEA,MAAay5H,UAAgC,EAAA9hF,oBAC5C,cACC,OAAO,EAGR,uBACC,MAAM5uB,EAAWhzB,KAAK2jI,cAAgB,EAAAjB,UAAUkB,SAAW,EAAAlB,UAAUmB,SACrE,MAAO,CACNzxG,aAAcY,EAASZ,aACvBC,eAAgBW,EAASX,eACzBE,SAAUS,EAAST,UAIrB,kBACC,MAAMqwG,EAAkB5iI,KAAKurC,iBAEvB9sC,EAAU,CACfg1E,QAAQ,EACR9B,WAAY,CACXmyD,aAAa,GAGdvxG,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,gBAQ3BlvB,EAAW,IAAI,EAAAmtB,eAAe7xB,GAcpC,OAXA0E,EAAS+zE,gBAAkB,SAASC,GACnCA,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAC7C,mCACA,WAEDkpE,EAAO9kD,eAAiB8kD,EAAO9kD,eAAepkB,QAC7C,mCACA,YAGFjO,KAAK8iI,sBAAsB3/H,GACpBA,EAgBR,kBAAkB06B,GACjB,EAAA1N,sBAAsB2N,kBAAkBD,GAGxCA,EAAa3Y,UAAU,EAAAxmB,UAAUI,MAAO,YAAa,GACrD++B,EAAa3Y,UAAU,EAAAxmB,UAAUI,MAAO,YAAa,GAQtD,wBACC,MAAO,CACN,IAAI,EAAAouC,aAAa,EAAA38B,WAAWzF,OAAQ,CAAC,WAAY,SAAU,MAAO,IAClE,IAAI,EAAAoiC,aAAa,EAAA38B,WAAW4hB,SAAU,CAAC,QAAS,QAAS,YAAa,aAAc,CAAC,EAAA5hB,WAAWzF,UAGlG,0BACC,OAAO,EAAAqlB,sBAAsBid,0BAA0BstF,OAAO,CAC7D,IAAI,EAAAptF,eAAe,YAAa,CAC/BnZ,QAAS,MACTC,OAAQ,4BAET,IAAI,EAAAkZ,eAAe,YAAa,CAC/BnZ,QAAS,MACTC,OAAQ,+BA1FZ,6B,6BCfA,OAAe,wS,6BCAf,OAAe,wS,2FCAf,QACA,OACA,QAEA,SACA,SAIA,OACA,SAAgB2vG,EAA6C1lH,GAC5D,OAAO,cAAoBA,EAApB,c,oBACN,KAAA7T,KAAO,EAAA+T,YAAYzf,MAAM,GACzB,KAAAklI,iBAAmB,EAAAzlH,YAAY3f,QAAQ,KAHzC,sBAOA,MAAMklE,UAA8B,EAAAx0C,gBAAgB,EAAA0hB,iBAAiB+yF,EAAkB,EAAAj7H,sBACvF,MAAMC,EAAe,IAAI+6D,EAEzB,MAAaw+D,UAAsB,EAAAlnH,aAAnC,c,oBACC,KAAApS,cAAgBD,EAChB,cACC,MAAO,SAGR,kBACC,OAAO,IAAI,EAAAwB,eAAe,CACzBH,cAAc,EACdN,KAAM,EAAAC,UACNF,MAAO,SACPqnC,QAAS,IAIL,O,mDACL,EAAAG,iBAAiB9Y,OAAOv4B,MACxB,EAAA0vB,eAAe6I,OAAOv4B,MAItBA,KAAKmD,SAASqH,KAAOxK,KAAK4f,GAAGpV,KAC7BxK,KAAKmD,SAASikF,gBAAkBpnF,KAAK4f,GAAGokH,iBAExChkI,KAAK2jE,aAAa3jE,KAAKmD,cAxBzB,mB,8ECpBA,cACA,QACA,QAEA,SAEA,SACA,SAEA,SACA,SACA,SACA,SAEA,QACA,QACA,QACA,QAEM+nC,EAAiD,IAAI7a,IAAI,CAC9D,CAAC,EAAA9f,WAAWzF,OAAQ,CAAC,0BAA2B,yBAChD,CAAC,EAAAyF,WAAW4hB,SAAU,MAGjB8xG,EAA2C,IAAI5zG,IACrD4zG,EAAqB1jI,IAAI,EAAA0vB,mBAAmBqxB,SAAU,EAAA4iF,qCACtDD,EAAqB1jI,IAAI,EAAA0vB,mBAAmBuxB,MAAO,EAAA2iF,kCACnDF,EAAqB1jI,IAAI,EAAA0vB,mBAAmByxB,UAAW,EAAA0iF,qCAEvD,MAAangE,UAA8B,EAAA/zC,wBAE1C,wCACC,OAAO+zG,EAGR,uBACC,MAAMjxG,EAAW,EAAA0vG,UAAUluH,OAC3B,MAAO,CACN4d,aAAcY,EAASZ,aACvBC,eAAgBW,EAASX,eACzBE,SAAUS,EAAST,UAGrB,kBACC,MAAMqwG,EAAkB5iI,KAAKurC,iBAKvBpoC,EAAW,IAAI,EAAAmtB,eAAe,CACnCjmB,aAAa,EACbmnC,KAAK,EAOLqP,QAAS,CAERwjF,oBAAqB,GAGtB9xG,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,iBAGjC,OADAryB,KAAK8iI,sBAAsB3/H,GACpBA,EAWR,kBAAkB06B,GACjB,EAAA1N,sBAAsB2N,kBAAkBD,GACxCA,EAAa3Y,UAAU,EAAAxmB,UAAUI,MAAO,eAAgB,GAEzD,yCACC,OAAO,EAAAqxB,sBAAsBuc,yCAAyCguF,OAAO,CAC5E,IAAI,EAAA14F,0BAA0B,gBAAiB,EAAAn+B,oBAAoBI,QAgBrE,wBACC,MAAO,CACN,IAAI,EAAAipC,aAAa,EAAA38B,WAAWzF,OAAQ,CAAC,WAAY,SAAU,KAAM,gBAAiB,IAClF,IAAI,EAAAoiC,aAAa,EAAA38B,WAAW4hB,SAAU,CAAC,QAAS,SAAU,CAAC,EAAA5hB,WAAWzF,UAGxE,0BACC,OAAO,EAAAqlB,sBAAsBid,0BAA0BstF,OAAO,CAC7D,IAAI,EAAAptF,eAAe,eAAgB,CAClCnZ,QAAS,MACTC,OAAQ,kBACRC,OAAQ,qBA8BD,gBAAgBvB,GACzB,OAAOoY,EAAoBhuC,IAAI41B,IAlHjC,2B,2FC7BA,QACA,QACA,QACA,OACA,OAEA,SAEA,4BACA,QAEMkY,EAAmD,IAAI3a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,uBAChFmgC,EAAiD,IAAI5a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,oBAEpF,MAAaq5H,UAAyC,EAAAj0G,wBAGrD,uBACC,MAAM8C,EAAW,EAAA0vG,UAAUjsE,MAErBlkC,EAAW,EAAAswG,cAAc9/H,MAAMiwB,EAAST,UAI9C,OAHAA,EAAe,KAAI,CAACj1B,MAAO,GAC3Bi1B,EAAgB,MAAI,CAACj1B,MAAO,GAErB,CACN80B,aAAc,UACdC,eAAgBW,EAASX,eACzBE,SAAUA,GAGF,oBAAoBO,GAC7B,OAAOkY,EAAwB9tC,IAAI41B,GAE1B,kBAAkBA,GAC3B,OAAOmY,EAAsB/tC,IAAI41B,GAGlC,kBACC,MAAM8vG,EAAkB5iI,KAAKurC,iBAC7B,OAAO,IAAI,EAAAjb,eAAe,CAMzBuwB,QAAS,CACRwjF,oBAAqB,EACrBrB,cAAe,CAAC,EAAAC,iBAAkB,EAAAC,mBAAmB,IAGtD3wG,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,kBAtCnC,sC,6BCdA,OAAe,khB,2FCAf,QACA,QACA,QACA,OACA,OAEA,SAEA,4BAEA,QAEM2Y,EAAmD,IAAI3a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,uBAChFmgC,EAAiD,IAAI5a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,oBAEpF,MAAao5H,UAA4C,EAAAh0G,wBAGxD,uBACC,MAAM8C,EAAW,EAAA0vG,UAAUK,aAErBxwG,EAAW,EAAAswG,cAAc9/H,MAAMiwB,EAAST,UAI9C,OAHAA,EAAe,KAAI,CAACj1B,MAAO,GAC3Bi1B,EAAgB,MAAI,CAACj1B,MAAO,GAErB,CACN80B,aAAc,UACdC,eAAgBW,EAASX,eACzBE,SAAUA,GAGF,oBAAoBO,GAC7B,OAAOkY,EAAwB9tC,IAAI41B,GAE1B,kBAAkBA,GAC3B,OAAOmY,EAAsB/tC,IAAI41B,GAGlC,kBACC,MAAM8vG,EAAkB5iI,KAAKurC,iBAC7B,OAAO,IAAI,EAAAjb,eAAe,CAMzBuwB,QAAS,CACRwjF,oBAAqB,EACrBrB,cAAe,CAAC,EAAAC,iBAAkB,EAAAC,mBAAmB,IAGtD3wG,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,kBAtCnC,yC,6BCfA,OAAe,i2C,2FCAf,QACA,QAKA,SAEA,4BACA,4BACA,QAEM2Y,EAAmD,IAAI3a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,uBAChFmgC,EAAiD,IAAI5a,IAAI,CAAC,CAAC,EAAA9f,WAAWzF,OAAQ,oBAEpF,MAAas5H,UAA4C,EAAAl0G,wBAGxD,uBACC,MAAO,CACNkC,aAAc,UACdC,eAAgB,UAChBE,SAAU,CACT/nB,KAAM,CAAClN,MAAO,GACdkhB,MAAO,CAAClhB,MAAO,GACf6lI,MAAO,CAAC7lI,MAAO,GACf8lI,KAAM,CAAC9lI,MAAO,MAIP,oBAAoBw1B,GAC7B,OAAOkY,EAAwB9tC,IAAI41B,GAE1B,kBAAkBA,GAC3B,OAAOmY,EAAsB/tC,IAAI41B,GAGlC,kBACC,MAAM8vG,EAAkB5iI,KAAKurC,iBAC7B,OAAO,IAAI,EAAAjb,eAAe,CAIzBhmB,WAAW,EACXu2C,QAAS,CACRwjF,oBAAqB,GAGtB9xG,SAAU,EAAAswG,cAAc9/H,MAAM6/H,EAAgBrwG,UAC9CH,aAAcwwG,EAAgBxwG,aAC9BC,eAAgBuwG,EAAgBvwG,kBAnCnC,yC,6BCfA,OAAe,oa,8ECAf,eAEA,SACA,SACA,SACA,SACA,SACA,SAEA,SACA,SACA,SACA,SAEA,SACA,SACA,SACA,SAEA,SACA,SAuBA,oBACC,WAAW0sF,GACVA,EAAK1lG,cAAc,EAAAirH,oBAAqB,EAAAppG,aAAaC,OACrD4jF,EAAK1lG,cAAc,EAAAkrH,iBAAkB,EAAArpG,aAAaC,OAClD4jF,EAAK1lG,cAAc,EAAAmrH,wBAAyB,EAAAtpG,aAAaC,OACzD4jF,EAAK1lG,cAAc,EAAAorH,uBAAwB,EAAAvpG,aAAaC,OACxD4jF,EAAK1lG,cAAc,EAAAqrH,kBAAmB,EAAAxpG,aAAaC,OACnD4jF,EAAK1lG,cAAc,EAAAsrH,iBAAkB,EAAAzpG,aAAaC,OAElD4jF,EAAK1lG,cAAc,EAAAurH,cAAe,EAAA1pG,aAAa5e,SAC/CyiG,EAAK1lG,cAAc,EAAAwrH,iBAAkB,EAAA3pG,aAAa5e,SAClDyiG,EAAK1lG,cAAc,EAAAyrH,WAAY,EAAA5pG,aAAa5e,SAC5CyiG,EAAK1lG,cAAc,EAAA0rH,mBAAoB,EAAA7pG,aAAa5e,SAEpDyiG,EAAK1lG,cAAc,EAAA2rH,WAAY,EAAA9pG,aAAaE,UAC5C2jF,EAAK1lG,cAAc,EAAA4rH,YAAa,EAAA/pG,aAAaE,UAC7C2jF,EAAK1lG,cAAc,EAAA6rH,aAAc,EAAAhqG,aAAaI,MAE9CyjF,EAAK1lG,cAAc,EAAA8rH,0BAA2B,EAAAjqG,aAAaG,QAC3D0jF,EAAK1lG,cAAc,EAAA+rH,yBAA0B,EAAAlqG,aAAaG,QAG1D0jF,EAAK1lG,cAAc,EAAAgsH,WAAY,EAAAnqG,aAAaI,S,8ECjE9C,eACA,SAEA,OACA,MAAMgqG,UAAoC,EAAAx8H,iBAA1C,c,oBACC,KAAAe,MAAQ,EAAA0U,YAAY1f,MAAM,CAAC,EAAG,EAAG,IACjC,KAAAsjD,UAAY,EAAA5jC,YAAYzf,MAAM,IAE/B,MAAMiK,EAAe,IAAIu8H,EAEzB,MAAahB,UAA4B,EAAAnyF,kBAAzC,c,oBACC,KAAAnpC,cAAgBD,EAEhB,cACC,MAAO,gBAGR,eACC,OAAO,IAAI,EAAAw8H,aAEZ,kBACCvlI,KAAKa,GAAG6G,OAAOmX,UAAU,EAAG,GAG7B,sBACC7e,KAAKkzC,MAAMrpC,MAAQ7J,KAAK4f,GAAG/V,MAC3B7J,KAAKkzC,MAAMiP,UAAYniD,KAAK4f,GAAGuiC,WAhBjC,yB,8ECTA,eAGA,MAAa/lC,UAAwB,EAAA8a,eACpC,YAAY9R,GACXnf,MAAMof,YAAYD,GAEnB,WAAWrnB,GACV,OAAOiC,KAAKqlB,YAAYtnB,GAEzB,aACC,OAAOiC,KAAKwiI,cAEb,SACC,OAAOxiI,KAAKolB,WAXd,qB,2FCJA,SAEA,SAEA,SACA,QAEA,OAGA,SAAgBogH,EAAgDnnH,GAC/D,OAAO,cAAoBA,EAApB,c,oBACN,KAAAxU,MAAQ,EAAA0U,YAAY1f,MAAM,CAAC,EAAG,EAAG,IACjC,KAAAsjD,UAAY,EAAA5jC,YAAYzf,MAAM,EAAG,CAACynC,MAAO,CAAC,EAAG,MAC7C,KAAA3M,MAAQ,EAAArb,YAAYzf,MAAM,EAAG,CAACynC,MAAO,CAAC,EAAG,MACzC,KAAA65E,OAAS,EAAA7hG,YAAYzf,MAAM,EAAG,CAACynC,MAAO,CAAC,EAAG,QAL5C,yBASA,MAAMk/F,UAAiCD,EAAqB,EAAApnH,uBAAuB,EAAAtV,qBACnF,MAAMC,EAAe,IAAI08H,EAEzB,MAAalB,UAAyB,EAAAryF,4BAAtC,c,oBACC,KAAAlpC,cAAgBD,EAChB,cACC,MAAO,aAOR,eAGC,OAFe,IAAI,EAAA28H,cAAc,SAAU,EAAG,EAAG,GAYlD,sBACC1lI,KAAKkzC,MAAMrpC,MAAQ7J,KAAK4f,GAAG/V,MAC3B7J,KAAKkzC,MAAMiP,UAAYniD,KAAK4f,GAAGuiC,UAC/BniD,KAAKkzC,MAAMtZ,MAAQ55B,KAAK4f,GAAGga,MAC3B55B,KAAKkzC,MAAMktE,OAASpgH,KAAK4f,GAAGwgG,OAIvB,O,mDAGC,EAAAulB,yBAAiCC,cACtC,EAAAD,yBAAyB/zF,OACxB,EAAA+zF,yBAAiCC,aAAc,GAGjD5lI,KAAK0e,qBAAqB6Z,SAC1Bv4B,KAAKoyC,sBACLpyC,KAAKqyC,uBACLryC,KAAK6b,gBAAgByJ,eA1CvB,sB,6BCtBA,kGA6BIqgH,EAA2B,CAE9B/zF,KAAM,WAIL,IAMIi0F,EAAQ,IAAI,cAAa,IAAI1rG,aANjB,CAAE,EAAG,EAAG,EAAG,KAAO,EAAG,EAAG,EAAG,UAAaa,SAAW,WAAa,SAAY,WAAa,SAAW,UAAa,SAAY,WAAa,SAAW,UAAY,SAAY,UAAa,SAAW,UAAY,SAAY,UAAa,SAAW,UAAY,SAAY,UAAa,SAAW,SAAW,SAAY,UAAa,SAAW,SAAW,SAAY,UAAa,SAAW,OAAS,SAAY,UAAa,SAAW,SAAW,SAAY,UAAa,SAAW,SAAW,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,QAAU,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,OAAS,SAAY,UAAY,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,QAAW,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,QAAW,UAAY,SAAW,QAAU,QAAW,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,QAAW,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAS,SAAY,UAAY,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,SAAW,UAAY,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,SAAY,UAAa,UAAa,QAAS,GAAK,WAAa,WAAa,QAAS,SAAY,WAAa,SAAW,WAAa,SAAY,WAAa,SAAW,UAAa,SAAY,WAAa,SAAW,UAAY,SAAY,UAAa,SAAW,UAAY,SAAY,UAAa,SAAW,UAAY,SAAY,SAAY,SAAW,SAAW,SAAY,UAAa,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,OAAS,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,QAAU,QAAU,QAAW,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,QAAW,SAAW,KAAO,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,QAAW,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,QAAW,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,UAAY,SAAW,QAAS,SAAY,UAAY,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,QAAW,UAAY,QAAU,QAAS,SAAY,UAAY,UAAY,QAAS,SAAW,UAAY,UAAY,QAAS,QAAU,YAAe,SAAY,QAAS,SAAY,UAAY,SAAW,SAAY,SAAY,WAAa,SAAW,UAAa,QAAW,UAAa,SAAW,UAAY,SAAY,SAAY,SAAW,UAAY,QAAW,UAAa,SAAW,QAAU,SAAY,SAAY,SAAW,SAAW,QAAW,UAAY,SAAW,SAAW,QAAW,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,UAAY,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,QAAU,QAAW,SAAW,SAAW,QAAU,QAAW,QAAU,SAAW,QAAU,QAAW,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,KAAO,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,QAAU,QAAS,SAAY,SAAW,SAAW,QAAS,QAAW,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,QAAU,QAAS,SAAY,UAAY,SAAW,QAAS,SAAY,SAAW,UAAY,QAAS,QAAW,UAAY,UAAY,OAAQ,SAAY,UAAY,UAAY,QAAS,QAAS,YAAe,SAAY,QAAS,SAAY,WAAa,SAAW,WAAa,SAAY,WAAa,QAAU,UAAa,SAAY,UAAa,SAAW,SAAW,SAAY,UAAa,SAAW,UAAY,SAAY,UAAa,SAAW,UAAY,SAAY,UAAY,SAAW,SAAW,SAAY,SAAW,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,SAAW,SAAY,UAAY,SAAW,QAAU,QAAW,UAAY,SAAW,SAAW,QAAW,UAAY,SAAW,SAAW,SAAY,UAAY,QAAU,SAAW,QAAW,UAAY,SAAW,SAAW,SAAY,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,QAAW,SAAW,QAAU,QAAU,QAAW,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,QAAU,SAAW,OAAS,SAAY,SAAW,SAAW,OAAS,OAAU,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,SAAW,QAAU,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,QAAW,SAAW,SAAW,QAAS,SAAY,UAAY,SAAW,QAAS,SAAY,QAAU,UAAY,QAAS,SAAY,UAAY,UAAY,QAAS,QAAS,YAAe,WAAa,QAAS,SAAY,WAAa,QAAU,WAAa,QAAW,WAAa,QAAU,UAAa,SAAY,UAAa,QAAU,UAAY,SAAY,UAAa,QAAU,SAAW,SAAY,UAAa,QAAU,UAAY,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,MAAS,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,OAAU,SAAW,QAAU,OAAS,SAAY,SAAW,SAAW,QAAU,QAAW,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,QAAW,QAAU,SAAW,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,QAAU,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,QAAU,OAAQ,SAAY,SAAW,QAAU,OAAQ,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,OAAQ,SAAY,UAAY,UAAY,QAAS,QAAW,UAAY,UAAY,QAAS,QAAS,WAAe,UAAa,QAAS,SAAY,WAAa,QAAU,WAAa,SAAY,WAAa,QAAU,UAAa,SAAY,UAAa,QAAU,UAAY,SAAY,UAAa,QAAU,UAAY,SAAY,UAAY,QAAU,UAAY,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,OAAS,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,OAAU,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,QAAU,QAAU,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,QAAW,UAAY,SAAW,QAAS,SAAY,UAAY,UAAY,QAAS,EAAG,WAAe,UAAa,QAAS,SAAY,WAAa,QAAU,WAAa,SAAY,WAAa,QAAU,UAAa,SAAY,UAAa,QAAU,UAAY,SAAY,UAAa,QAAU,UAAY,SAAY,SAAW,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,QAAW,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,SAAW,MAAQ,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,QAAU,QAAS,SAAY,QAAU,SAAW,QAAS,SAAY,SAAW,OAAS,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,QAAW,UAAY,SAAW,QAAS,SAAY,SAAW,UAAY,QAAS,QAAU,YAAe,SAAY,QAAS,SAAY,WAAa,QAAU,WAAa,SAAY,WAAa,QAAU,UAAa,QAAW,UAAa,QAAU,UAAY,SAAY,UAAa,QAAU,UAAY,SAAY,UAAY,QAAU,UAAY,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,MAAQ,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAU,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,QAAU,SAAW,QAAS,SAAY,QAAU,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,UAAY,UAAY,QAAS,QAAS,WAAe,UAAa,QAAS,SAAY,WAAa,QAAU,WAAa,SAAY,WAAa,QAAU,UAAa,SAAY,UAAa,QAAU,SAAW,SAAY,UAAa,QAAU,UAAY,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,SAAW,MAAQ,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,QAAW,SAAW,MAAQ,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,OAAS,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,QAAW,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,SAAW,OAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,QAAW,QAAU,SAAW,QAAS,QAAW,SAAW,SAAW,OAAQ,QAAW,SAAW,SAAW,QAAS,QAAW,UAAY,UAAY,QAAS,QAAS,WAAe,UAAa,QAAS,SAAY,WAAa,QAAU,WAAa,SAAY,SAAY,QAAU,SAAY,OAAU,UAAa,QAAU,UAAY,SAAY,UAAa,OAAS,UAAY,SAAY,UAAY,OAAS,UAAY,SAAY,UAAY,OAAS,QAAU,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,SAAW,SAAY,UAAY,QAAU,QAAU,SAAY,UAAY,QAAU,QAAU,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,OAAS,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,OAAS,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,OAAS,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,OAAS,QAAU,OAAS,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,QAAW,SAAW,QAAU,OAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,QAAU,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,QAAU,SAAW,QAAS,QAAW,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,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QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,OAAS,QAAU,QAAU,SAAY,QAAU,QAAU,OAAS,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,OAAS,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAS,SAAY,QAAU,QAAU,QAAS,SAAY,QAAU,QAAU,QAAS,SAAY,OAAS,QAAU,QAAS,SAAY,QAAU,QAAU,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,SAAW,SAAW,QAAS,SAAY,UAAY,UAAa,QAAS,SAAY,WAAa,QAAU,WAAa,SAAY,SAAY,QAAU,SAAY,SAAY,UAAa,QAAU,UAAa,SAAY,UAAY,QAAU,UAAa,SAAY,SAAW,QAAU,UAAY,SAAY,UAAY,QAAU,UAAY,QAAW,UAAY,QAAU,UAAY,SAAY,UAAY,QAAU,UAAY,SAAY,SAAW,QAAU,UAAY,SAAY,SAAW,QAAU,UAAY,SAAY,SAAW,QAAU,UAAY,SAAY,SAAW,OAAS,UAAY,SAAY,QAAU,QAAU,SAAW,SAAY,SAAW,OAAS,SAAW,SAAY,SAAW,QAAU,SAAW,QAAW,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,QAAU,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,QAAW,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,QAAU,QAAU,SAAW,SAAY,QAAU,QAAU,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SAAY,UAAa,UAAY,QAAU,UAAY,UAAa,UAAY,QAAU,UAAY,UAAa,UAAY,QAAU,UAAY,UAAa,QAAU,OAAS,SAAW,UAAa,SAAW,QAAU,UAAY,UAAa,SAAW,QAAU,UAAY,UAAa,SAAW,QAAU,UAAY,UAAa,SAAW,QAAU,UAAY,SAAY,SAAW,QAAU,UAAY,UAAa,SAAW,QAAU,SAAW,UAAa,SAAW,QAAU,SAAW,UAAa,QAAU,OAAS,QAAU,SAAY,SAAW,QAAU,SAAW,UAAa,SAAW,QAAU,SAAW,UAAa,SAAW,QAAU,SAAW,UAAa,SAAW,OAAS,SAAW,UAAa,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,SAAW,SAAY,SAAW,QAAU,QAAU,SAAY,QAAU,QAAU,SAAW,SAAY,QAAU,QAAU,SAAW,SAAY,QAAU,QAAU,SAAW,SAAY,QAAU,QAAU,SAAW,SAAY,QAAU,QAAU,SAAW,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,QAAW,OAAS,QAAU,OAAS,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,OAAS,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,QAAW,QAAU,QAAU,QAAU,SAAY,OAAS,OAAS,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAU,SAAY,QAAU,QAAU,QAAS,SAAY,QAAU,QAAU,QAAS,SAAY,QAAU,QAAU,QAAS,SAAY,QAAU,QAAU,QAAS,SAAY,SAAW,QAAU,QAAS,SAAY,SAAW,OAAS,QAAS,SAAY,SAAW,SAAW,QAAS,SAAW,SAAW,UAAY,QAAS,UAAa,WAAa,QAAU,WAAa,UAAa,UAAa,QAAU,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,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,WAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG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,QAAU,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,QAAW,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,WAAa,QAAU,WAAa,EAAG,SAAY,OAAS,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,SAAY,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,MAAQ,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,MAAQ,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAa,QAAU,SAAY,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,OAAS,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,MAAQ,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,MAAQ,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,YAAa,EAAG,EAAG,EAAG,YAAa,EAAG,EAAG,EAAG,YAAa,EAAG,EAAG,EAAG,YAAa,EAAG,EAAG,EAAG,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,YAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,SAAY,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,OAAS,SAAY,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,SAAY,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,MAAQ,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,SAAY,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,OAAS,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,MAAQ,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,OAAS,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,OAAS,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,MAAQ,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,MAAQ,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,OAAS,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,UAAa,OAAS,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,OAAS,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,OAAS,OAAS,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,OAAU,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,MAAQ,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,QAAW,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,MAAQ,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,OAAS,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,WAAa,EAAG,QAAU,QAAU,SAAY,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,SAAY,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,OAAS,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,WAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,OAAS,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,SAAY,EAAG,SAAW,OAAS,WAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,QAAW,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,OAAS,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,UAAa,EAAG,SAAW,QAAU,WAAa,EAAG,UAAY,OAAS,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,SAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,WAAa,EAAG,UAAY,QAAU,QAAW,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,OAAS,UAAa,EAAG,UAAY,QAAU,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,QAAW,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,QAAW,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,WAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,QAAW,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,MAAQ,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,MAAQ,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,SAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,UAAY,QAAU,WAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,MAAQ,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,WAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,QAAW,EAAG,QAAU,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,SAAY,EAAG,QAAU,QAAU,QAAW,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,MAAQ,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,OAAS,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,SAAY,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,OAAS,WAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,SAAY,EAAG,UAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,OAAS,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,EAAG,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,WAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,WAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,SAAY,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,OAAS,KAAO,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,SAAY,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,OAAS,SAAY,EAAG,EAAG,QAAU,UAAa,EAAG,WAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,OAAS,UAAa,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,OAAS,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,MAAQ,QAAU,UAAY,EAAG,MAAQ,QAAU,UAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,WAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,MAAQ,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,OAAS,SAAY,EAAG,EAAG,QAAU,UAAa,EAAG,WAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,MAAQ,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,QAAW,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,OAAS,QAAU,SAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,SAAY,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,SAAY,EAAG,SAAW,QAAU,UAAa,EAAG,SAAW,QAAU,UAAa,EAAG,QAAU,QAAU,UAAaa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,WAAa,QAAU,UAAa,EAAG,UAAa,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAa,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,SAAW,EAAG,OAAS,QAAU,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,MAAQ,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,UAAa,EAAG,EAAG,EAAG,SAAY,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,EAAG,QAAU,UAAa,EAAG,WAAa,QAAU,UAAa,EAAG,UAAa,OAAS,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,MAAQ,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,UAAa,QAAU,UAAY,EAAG,UAAa,QAAU,SAAW,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,OAAS,UAAY,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,MAAQ,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,OAAS,UAAY,EAAG,WAAa,QAAU,UAAY,EAAG,UAAa,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,OAAS,UAAY,EAAG,SAAW,OAAS,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,OAAS,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,OAAS,OAAS,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,MAAQ,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,SAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,OAAS,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,WAAa,QAAU,UAAY,EAAG,UAAa,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,MAAQ,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,MAAQ,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,OAAS,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,MAAQ,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,UAAY,EAAG,UAAa,QAAU,UAAY,EAAG,UAAY,OAAS,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,MAAQ,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAa,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,OAAS,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,OAAS,UAAY,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,UAAY,EAAG,WAAa,QAAU,UAAY,EAAG,UAAa,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,MAAQ,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,WAAa,QAAU,UAAY,EAAG,UAAa,QAAU,QAAU,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,SAAW,OAAS,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,UAAa,QAAU,UAAY,EAAG,UAAY,OAAS,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,OAAS,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,EAAG,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,EAAG,QAAU,UAAY,EAAG,WAAa,QAAU,UAAY,EAAG,UAAa,QAAU,UAAY,EAAG,SAAW,QAAU,UAAY,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,UAAY,EAAG,SAAW,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,SAAW,OAAS,UAAY,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,OAAS,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,WAAa,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,OAAS,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,OAAS,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,MAAQ,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,WAAa,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,WAAaa,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,MAAQ,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,OAAS,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,WAAa,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,UAAY,OAAS,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,MAAQ,UAAY,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,UAAa,OAAS,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,OAAS,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,MAAQ,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,OAAS,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,OAAS,EAAG,EAAG,QAAU,SAAW,EAAG,WAAa,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,OAAS,QAAU,QAAU,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,EAAG,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,EAAG,QAAU,SAAW,EAAG,UAAa,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,UAAY,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,SAAW,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,OAAS,QAAU,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,OAAS,QAAU,EAAG,EAAG,OAAS,QAAU,EAAG,UAAa,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,MAAQ,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,OAAS,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,WAAa,QAAU,QAAU,EAAG,UAAa,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,IAAM,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,MAAQ,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,KAAO,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,MAAQ,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,OAAS,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,WAAa,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,UAAY,QAAU,OAAS,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,MAAQ,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,MAAQ,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,MAAQ,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,QAAU,QAAU,UAAY,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,UAAa,QAAU,QAAU,EAAG,UAAY,QAAU,OAAS,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,OAAS,QAAU,EAAG,SAAW,MAAQ,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,OAAS,EAAG,EAAG,EAAG,OAAS,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,UAAa,QAAU,OAAS,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,MAAQ,QAAU,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,MAAQ,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,WAAa,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,OAAS,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,MAAQ,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,UAAa,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,OAAS,QAAU,EAAG,UAAa,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,OAAS,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,MAAQ,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,MAAQ,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,SAAW,EAAG,MAAQ,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,UAAY,QAAU,OAAS,EAAG,UAAY,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,MAAQ,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,WAAa,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,OAAS,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,MAAQ,SAAW,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,EAAG,EAAG,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,UAAa,OAAS,QAAU,EAAG,UAAY,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,MAAQ,OAAS,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,MAAQ,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,MAAQ,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,OAAS,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,EAAG,EAAG,OAAS,EAAG,EAAG,QAAU,QAAU,EAAG,UAAY,QAAU,QAAU,EAAG,SAAW,QAAU,OAAS,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,OAAS,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,MAAQ,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,MAAQ,OAAS,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,OAAS,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,OAAS,QAAU,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,OAAS,QAAU,SAAW,EAAG,EAAG,QAAU,QAAU,EAAG,EAAG,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,SAAW,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,OAAS,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,OAAS,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,QAAU,QAAU,EAAG,QAAU,OAAS,QAAU,EAAG,OAAS,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QAAU,QAAU,SAAW,EAAG,QA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,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,IAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,IAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAEhCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,IAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAEhCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAEhCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,EAAK,KAChCw1G,EAAK,IAAO69D,EAAerzK,E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","file":"polygonjs-engine.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpPOLY\"] = window[\"webpackJsonpPOLY\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([414,2,0,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// import {BaseNode} from '../../_Base';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamOptions} from '../../../params/utils/OptionsController';\nimport {RampParam} from '../../../params/Ramp';\nimport {ParamValuesTypeMap} from '../../../params/types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from '../../../params/types/ParamInitValuesTypeMap';\nimport {ParamConstructorMap} from '../../../params/types/ParamConstructorMap';\nimport {ParamOptionsByTypeMap} from '../../../params/types/ParamOptionsByTypeMap';\n\n// function _ParamCheckNameConsistency<T extends BaseNode>(name: string, target: T, key: keyof T, type: ParamType) {\n// \tconst key_s = key as string;\n// \tif (key_s != `_param_${name}`) {\n// \t\tconsole.warn('param name inconsistent');\n// \t}\n// \tconst param = target.params.get(name);\n// \tif (param && param.type != type) {\n// \t\tconsole.warn('param type inconsistent');\n// \t}\n// }\n// export const _ParamBoolean = function ParamF(name: string) {\n// \treturn <T extends BaseNode>(target: T, key: keyof T) => {\n// \t\t_ParamCheckNameConsistency(name, target, key, ParamType.BOOLEAN);\n// \t\tObject.defineProperty(target, key, {\n// \t\t\tget: () => target.params.boolean(name),\n// \t\t});\n// \t};\n// };\n// export const _ParamFloat = function ParamF(name: string) {\n// \treturn <T extends BaseNode>(target: T, key: keyof T) => {\n// \t\t_ParamCheckNameConsistency(name, target, key, ParamType.FLOAT);\n// \t\tObject.defineProperty(target, key, {\n// \t\t\tget: () => target.params.float(name),\n// \t\t});\n// \t};\n// };\n// export const _ParamFloat = function ParamF(default_value: number, options?: ParamOptions) {\n// \treturn <T extends NodeParamsConfig>(target: T, key: string) => {\n// \t\t// _ParamCheckNameConsistency(name, target, key, ParamType.FLOAT);\n// \t\t// const config = new ParamConfig(ParamType.FLOAT, default_value, options);\n// \t\t// target.add_config(key, config);\n// \t\t// target.set_default_value(key, default_value);\n// \t\t// target.set_options(key, options);\n// \t\t// Object.defineProperty(target.options, key, {\n// \t\t// \tget: () => target.params.float(name),\n// \t\t// });\n// \t};\n// };\n// export const _ParamString = function ParamF(name: string) {\n// \treturn <T extends BaseNode>(target: T, key: keyof T) => {\n// \t\t_ParamCheckNameConsistency(name, target, key, ParamType.STRING);\n// \t\tObject.defineProperty(target, key, {\n// \t\t\tget: () => target.params.string(name),\n// \t\t});\n// \t};\n// };\n// export const _ParamVector2 = function ParamF(name: string) {\n// \treturn <T extends BaseNode>(target: T, key: keyof T) => {\n// \t\t_ParamCheckNameConsistency(name, target, key, ParamType.VECTOR2);\n// \t\tObject.defineProperty(target, key, {\n// \t\t\tget: () => target.params.vector2(name),\n// \t\t});\n// \t};\n// };\n// export const _ParamVector3 = function ParamF(name: string) {\n// \treturn <T extends BaseNode>(target: T, key: keyof T) => {\n// \t\t_ParamCheckNameConsistency(name, target, key, ParamType.VECTOR3);\n// \t\tObject.defineProperty(target, key, {\n// \t\t\tget: () => target.params.vector3(name),\n// \t\t});\n// \t};\n// };\n// export const _ParamColor = function ParamF(name: string) {\n// \treturn <T extends BaseNode>(target: T, key: keyof T) => {\n// \t\t_ParamCheckNameConsistency(name, target, key, ParamType.COLOR);\n// \t\tObject.defineProperty(target, key, {\n// \t\t\tget: () => target.params.color(name),\n// \t\t});\n// \t};\n// };\n// declare global {\n// \tconst ParamB: typeof _ParamBoolean;\n// \tconst ParamF: typeof _ParamFloat;\n// \tconst ParamS: typeof _ParamString;\n// \tconst ParamV2: typeof _ParamVector2;\n// \tconst ParamV3: typeof _ParamVector3;\n// \tconst ParamC: typeof _ParamColor;\n// }\n// class ParamConfig<T extends ParamType> {\n// \tconstructor(readonly type: T, readonly default_value: ParamValuesTypeMap[T], readonly options: ParamOptions = {}) {}\n// }\nexport class ParamTemplate<T extends ParamType> {\n\treadonly value_type!: ParamValuesTypeMap[T];\n\treadonly param_class!: ParamConstructorMap[T];\n\t// readonly options?: ParamOptions;\n\n\tconstructor(public type: T, public init_value: ParamInitValuesTypeMap[T], public options?: ParamOptions) {}\n}\n\n// class Test1 {\n// \ta: number\n// \tb: string\n// }\n// type test = Extract<typeof Test1, string>;\n// type test2 = Pick<typeof Test1, 'b'>;\n// type test3 = Test1['b'];\n// type test2 = keyof BoxSopParamConfig;\nexport class ParamConfig {\n\t// static _GENERIC<T extends ParamType> (type: T, init_value: ParamInitValuesTypeMap[T], options?: ParamOptions) {\n\t// \treturn new ParamTemplate<T>(type, init_value, options);\n\t// }\n\t// static BUTTON(init_value: ParamInitValuesTypeMap[ParamType.BUTTON], options?: ParamOptions) {\n\t// \treturn this._GENERIC<ParamType.BUTTON>(ParamType.BUTTON, init_value, options)\n\t// }\n\tstatic BUTTON(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.BUTTON],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.BUTTON]\n\t) {\n\t\treturn new ParamTemplate<ParamType.BUTTON>(ParamType.BUTTON, init_value, options);\n\t}\n\tstatic BOOLEAN(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.BOOLEAN],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.BOOLEAN]\n\t) {\n\t\treturn new ParamTemplate<ParamType.BOOLEAN>(ParamType.BOOLEAN, init_value, options);\n\t}\n\tstatic COLOR(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.COLOR],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.COLOR]\n\t) {\n\t\treturn new ParamTemplate<ParamType.COLOR>(ParamType.COLOR, init_value, options);\n\t}\n\tstatic FLOAT(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.FLOAT],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.FLOAT]\n\t) {\n\t\treturn new ParamTemplate<ParamType.FLOAT>(ParamType.FLOAT, init_value, options);\n\t}\n\tstatic FOLDER(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.FOLDER] = null,\n\t\toptions?: ParamOptionsByTypeMap[ParamType.FOLDER]\n\t) {\n\t\treturn new ParamTemplate<ParamType.FOLDER>(ParamType.FOLDER, init_value, options);\n\t}\n\tstatic INTEGER(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.INTEGER],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.INTEGER]\n\t) {\n\t\treturn new ParamTemplate<ParamType.INTEGER>(ParamType.INTEGER, init_value, options);\n\t}\n\tstatic OPERATOR_PATH(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.OPERATOR_PATH],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.OPERATOR_PATH]\n\t) {\n\t\treturn new ParamTemplate<ParamType.OPERATOR_PATH>(ParamType.OPERATOR_PATH, init_value, options);\n\t}\n\tstatic RAMP(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.RAMP] = RampParam.DEFAULT_VALUE,\n\t\toptions?: ParamOptionsByTypeMap[ParamType.RAMP]\n\t) {\n\t\treturn new ParamTemplate<ParamType.RAMP>(ParamType.RAMP, init_value, options);\n\t}\n\tstatic SEPARATOR(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.SEPARATOR] = null,\n\t\toptions?: ParamOptionsByTypeMap[ParamType.SEPARATOR]\n\t) {\n\t\treturn new ParamTemplate<ParamType.SEPARATOR>(ParamType.SEPARATOR, init_value, options);\n\t}\n\tstatic STRING(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.STRING] = '',\n\t\toptions?: ParamOptionsByTypeMap[ParamType.STRING]\n\t) {\n\t\treturn new ParamTemplate<ParamType.STRING>(ParamType.STRING, init_value, options);\n\t}\n\tstatic VECTOR2(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.VECTOR2],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.VECTOR2]\n\t) {\n\t\treturn new ParamTemplate<ParamType.VECTOR2>(ParamType.VECTOR2, init_value, options);\n\t}\n\tstatic VECTOR3(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.VECTOR3],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.VECTOR3]\n\t) {\n\t\treturn new ParamTemplate<ParamType.VECTOR3>(ParamType.VECTOR3, init_value, options);\n\t}\n\tstatic VECTOR4(\n\t\tinit_value: ParamInitValuesTypeMap[ParamType.VECTOR4],\n\t\toptions?: ParamOptionsByTypeMap[ParamType.VECTOR4]\n\t) {\n\t\treturn new ParamTemplate<ParamType.VECTOR4>(ParamType.VECTOR4, init_value, options);\n\t}\n}\n\nexport class NodeParamsConfig implements Dictionary<ParamTemplate<ParamType>> {\n\t[name: string]: ParamTemplate<ParamType>;\n}\n// export class NodeParamsConfig {}\n\n// interface ParamConfig {\n// \ttype: ParamType;\n// \tvalue: any;\n// \toptions?: ParamOptions;\n// }\n// export type ParamConfigsArray = ParamConfig[];\n\n// declare global {\n// \tinterface Window {\n// \t\tParamB: typeof _ParamB;\n// \t\tParamC: typeof _ParamC;\n// \t}\n// }\n// window.ParamC = _ParamC;\n","import {Object3D} from 'three/src/core/Object3D';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {Material} from 'three/src/materials/Material';\n// import {Group} from 'three/src/objects/Group';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n// import lodash_includes from 'lodash/includes';\nimport lodash_range from 'lodash/range';\nimport lodash_times from 'lodash/times';\nimport {TypedNode} from '../_Base';\nimport {CoreConstant} from '../../../core/geometry/Constant';\nimport {CoreGroup, Object3DWithGeometry} from '../../../core/geometry/Group';\nimport {CoreMaterial} from '../../../core/geometry/Material';\nimport {ObjectType} from '../../../core/geometry/Constant';\n\nimport {GeometryContainer} from '../../containers/Geometry';\nimport {TypedContainerController} from '../utils/ContainerController';\nimport {BaseMatNodeType} from '../mat/_Base';\nimport {NodeContext} from '../../poly/NodeContext';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {FlagsControllerDB} from '../utils/FlagsController';\n// import * as Container from '../../Container/Geometry';\n\n// import {AttribTypeParam} from './concerns/AttribTypeParam';\n// import {Bypass} from './Concerns/Bypass';\n// import {GroupParam} from './concerns/GroupParam';\n// import {Named} from './concerns/Named'; // TODO; typescript\n// import {ObjectTypeParam} from './concerns/ObjectTypeParam';\n\n// TODO: do I really need to add attributes in objects?\n// TODO: after setting a node dirty, it should clear its object\n\n// import {RequestContainerGeometryCallback} from '../../../Engine/Container/Geometry'\n// const CONTAINER_CLASS = 'Geometry';\n\nenum MESSAGE {\n\tFROM_SET_CORE_GROUP = 'from set_core_group',\n\tFROM_SET_GROUP = 'from set_group',\n\tFROM_SET_OBJECTS = 'from set_objects',\n\tFROM_SET_OBJECT = 'from set_object',\n\tFROM_SET_GEOMETRIES = 'from set_geometries',\n\tFROM_SET_GEOMETRY = 'from set_geometry',\n}\n\nconst INPUT_GEOMETRY_NAME = 'input geometry';\nconst DEFAULT_INPUT_NAMES = [INPUT_GEOMETRY_NAME, INPUT_GEOMETRY_NAME, INPUT_GEOMETRY_NAME, INPUT_GEOMETRY_NAME];\n\nexport class TypedSopNode<K extends NodeParamsConfig> extends TypedNode<'GEOMETRY', BaseSopNodeType, K> {\n\tcontainer_controller: TypedContainerController<GeometryContainer> = new TypedContainerController<GeometryContainer>(\n\t\tthis,\n\t\tGeometryContainer\n\t);\n\tpublic readonly flags: FlagsControllerDB = new FlagsControllerDB(this);\n\n\tstatic node_context(): NodeContext {\n\t\treturn NodeContext.SOP;\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn DEFAULT_INPUT_NAMES;\n\t}\n\n\t// _master_group: Group\n\t// _objects: Object3D[] = []\n\n\tinitialize_base_node() {\n\t\t// this.flags.add_bypass();\n\n\t\t// this.flags.add_display();\n\t\tif (this.flags.display) {\n\t\t\tthis.flags.display.set(false);\n\t\t\tthis.flags.display.add_hook(() => {\n\t\t\t\tif (this.flags.display.active) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent && parent.display_node_controller) {\n\t\t\t\t\t\tparent.display_node_controller.set_display_node(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.io.outputs.set_has_one_output();\n\t\t// this.container_controller.init(CONTAINER_CLASS);\n\t}\n\n\t// request_container() {\n\t// \treturn super.request_container(); //as Promise<GeometryContainer>;\n\t// }\n\n\t//\n\t//\n\t// GEOMETRY\n\t//\n\t//\n\t// group(): Group {\n\t// \treturn this._master_group = this._master_group || this._create_group()\n\t// }\n\t// set_group(group: Group){\n\t// \tthis._clear_objectsI() //(MESSAGE.FROM_SET_GROUP);\n\t// \tthis._master_group.add(group)\n\t// \t// let child;\n\n\t// \t// const new_children = [];\n\t// \t// while (child = group.children[0]) {\n\t// \t// \tnew_children.push(child);\n\t// \t// \tgroup.remove(child);\n\t// \t// }\n\n\t// \t// new_children.forEach(child=> {\n\t// \t// \tthis._master_group.add( child );\n\t// \t// });\n\n\t// \t// // if (this.allow_add_object_attributes()) {\n\t// \t// \tthis._master_group.traverse(object=> {\n\t// \t// \t\tthis._set_object_attributes(object);\n\t// \t// \t});\n\t// \t// // }\n\t// \tthis.set_container(this._master_group, MESSAGE.FROM_SET_GROUP);\n\t// }\n\tset_core_group(core_group: CoreGroup) {\n\t\tconst objects = core_group.objects();\n\t\tfor (let object of objects) {\n\t\t\tthis._set_object_attributes(object);\n\t\t}\n\t\tthis.set_container(core_group, MESSAGE.FROM_SET_CORE_GROUP);\n\t}\n\n\tset_object(object: Object3D) {\n\t\t// this._clear_objects();\n\t\t// this.add_object(object);\n\t\t// this.set_container(this.group(), MESSAGE.FROM_SET_OBJECT);\n\t\tthis._set_object_attributes(object);\n\t\t// const core_group = new CoreGroup();\n\t\t// core_group.set_objects([object]);\n\t\tthis.set_container_objects([object], MESSAGE.FROM_SET_OBJECT);\n\t}\n\tset_objects(objects: Object3D[]) {\n\t\t// this._clear_objects();\n\t\t// const list = objects;\n\t\t// lodash_times(list.length, i=> {\n\t\t// \tconst object = list[i];\n\t\t// \tthis.add_object(object);\n\t\t// });\n\t\tfor (let object of objects) {\n\t\t\tthis._set_object_attributes(object);\n\t\t}\n\t\t// const core_group = new CoreGroup();\n\t\t// core_group.set_objects(objects);\n\t\tthis.set_container_objects(objects, MESSAGE.FROM_SET_OBJECTS);\n\t}\n\n\t// add_object(object: Object3D) {\n\t// \tif (object != null) {\n\t// \t\tthis.group().add(object);\n\t// \t\t// if (this.allow_add_object_attributes()) {\n\t// \t\tthis._set_object_attributes(object);\n\t// \t\t// }\n\t// \t\treturn object;\n\t// \t}\n\t// }\n\t// add_geometry(geometry: BufferGeometry, type: ObjectType) {\n\t// \tlet object;\n\t// \tif (geometry.index == null) {\n\t// \t\tthis._add_index(geometry);\n\t// \t}\n\n\t// \tif ((object = this.create_object(geometry, type)) != null) {\n\t// \t\tthis.add_object(object);\n\t// \t}\n\t// }\n\n\tset_geometry(geometry: BufferGeometry, type?: ObjectType) {\n\t\t// this._clear_objects();\n\t\t// this.add_geometry(geometry, type);\n\t\t// this.set_container(this.group(), MESSAGE.FROM_SET_GEOMETRY);\n\t\tconst object = this.create_object(geometry, type);\n\t\t// const core_group = new CoreGroup();\n\t\t// core_group.set_objects([object]);\n\t\tthis.set_container_objects([object], MESSAGE.FROM_SET_GEOMETRY);\n\t}\n\t//this.end_cook()\n\n\tset_geometries(geometries: BufferGeometry[], type?: ObjectType) {\n\t\t// this._clear_objects();\n\t\tconst objects: Object3D[] = [];\n\t\tlet object;\n\t\tgeometries.forEach((geometry) => {\n\t\t\tobject = this.create_object(geometry, type);\n\t\t\tthis._set_object_attributes(object);\n\t\t\tobjects.push(object);\n\t\t});\n\t\t// const core_group = new CoreGroup();\n\t\t// core_group.set_objects(objects);\n\t\tthis.set_container_objects(objects, MESSAGE.FROM_SET_GEOMETRIES);\n\t}\n\n\tset_container_objects(objects: Object3D[], message: MESSAGE) {\n\t\tconst core_group = this.container_controller.container.core_content() || new CoreGroup();\n\t\tcore_group.set_objects(objects);\n\t\tcore_group.touch();\n\t\tthis.set_container(core_group);\n\t}\n\n\t// do_clone_inputs() {\n\t// \tlet result = true;\n\t// \tif (this.has_param('do_not_clone_inputs')) {\n\t// \t\tresult = false;\n\t// \t}\n\t// \treturn result;\n\t// }\n\t// allow_add_object_attributes() {\n\t// \tif (!this.do_clone_inputs()) { return false; }\n\t// \tlet result = true;\n\t// \tif (this.has_param('do_not_add_object_attributes')) {\n\t// \t\tresult = false;\n\t// \t}\n\t// \treturn result;\n\t// }\n\n\t// _create_group() {\n\t// \tconst group = new Group();\n\t// \tgroup.name = this.full_path();\n\n\t// \tthis._init_sop_bypass_group(group)\n\n\t// \treturn group;\n\t// }\n\n\tcreate_object(geometry: BufferGeometry, type?: ObjectType): Object3DWithGeometry {\n\t\t// ensure it has an index\n\t\tif (!geometry.index) {\n\t\t\tconst position_array = geometry.getAttribute('position').array;\n\t\t\tgeometry.setIndex(lodash_range(position_array.length / 3));\n\t\t}\n\n\t\tif (type == null) {\n\t\t\ttype = CoreConstant.OBJECT_TYPE.MESH;\n\t\t}\n\t\t// if (!lodash_includes(CoreConstant.OBJECT_TYPES, type)) {\n\t\t// \tconst human_type = CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[type];\n\t\t// \tconst human_names = CoreConstant.OBJECT_TYPES.map(\n\t\t// \t\t(n) => CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[n]\n\t\t// \t);\n\t\t// \tthrow `type '${human_type}' not recognized. Available types are ${human_names.join(', ')}.`;\n\t\t// }\n\n\t\t// if (geometry != null) {\n\t\tconst object_constructor = CoreConstant.CONSTRUCTORS_BY_NAME[type]; //THREE[type];\n\t\tconst material = CoreConstant.MATERIALS[type].clone();\n\t\tconst object = new object_constructor(geometry, material) as Object3DWithGeometry;\n\t\tobject.castShadow = true;\n\t\tobject.receiveShadow = true;\n\t\tobject.frustumCulled = false;\n\n\t\treturn object;\n\t\t// }\n\t}\n\n\t_set_object_attributes(object: Object3D) {\n\t\t// if (!this.allow_add_object_attributes()) { return; }\n\t\t// TODO: the exception below are just to debug when a geo could be reused or not cloned properly\n\t\t// I could remove that when more sure it all refreshes fine, and this would allow the null or merge to\n\t\t// not have to clone the data\n\t\t// if ((object.name == null) && (object.name !== '')) {\n\t\t// \tif (this.do_clone_inputs()) {\n\t\t// \t\tthrow `object.name already set to ${object.node_name} (attempt to set by ${this.full_path()})`;\n\t\t// \t}\n\t\t// } else {\n\t\t// \tobject.name = this.full_path();\n\t\t// }\n\n\t\t// if ((geometry = object.geometry) != null) {\n\t\t// \tif ((geometry.name == null) && (geometry.name !== '')) {\n\t\t// \t\tif (this.do_clone_inputs()) {\n\t\t// \t\t\tthrow `geometry.node_name already set to ${geometry.node_name} (attempt to set by ${this.full_path()})`;\n\t\t// \t\t}\n\t\t// \t} else {\n\t\t// \t\tgeometry.name = this.full_path();\n\t\t// \t}\n\t\t// }\n\t\tconst material: Material = (object as Mesh).material as Material;\n\t\tif (material) {\n\t\t\tif (!this.scene) {\n\t\t\t\tconsole.log('no scene');\n\t\t\t\tthrow 'no scene';\n\t\t\t}\n\t\t\tconst material_node = CoreMaterial.node(this.scene, material) as BaseMatNodeType;\n\t\t\tif (material_node) {\n\t\t\t\tmaterial_node.add_render_hook(object);\n\t\t\t}\n\t\t}\n\t}\n\n\t// _clear_objects() {\n\t// \tconst group = this.group();\n\n\t// \tlet child\n\t// \twhile(child = group.children[0]) {\n\t// \t\tgroup.remove(child);\n\t// \t}\n\t// \t// const children = lodash_clone(group.children);\n\t// \t// let child;\n\t// \t// for(let i=0; i < children.length; i++){\n\t// \t// \tchild = children[i]\n\t// \t// \tgroup.remove(child);\n\t// \t// \tchild.traverse((object)=>{\n\t// \t// \t\tif (object.geometry != null) {\n\t// \t// \t\t\tobject.geometry.dispose();\n\t// \t// \t\t}\n\t// \t// \t\t// no more material dispose since each the materials are not cloned\n\t// \t// \t\t// if (object.material){\n\t// \t// \t\t// \tif (lodash_isArray(object.material)){\n\t// \t// \t\t// \t\tobject.material.forEach((mat)=>{mat.dispose()})\n\t// \t// \t\t// \t} else {\n\t// \t// \t\t// \t\tobject.material.dispose()\n\t// \t// \t\t// \t}\n\t// \t// \t\t// }\n\t// \t// \t});\n\t// \t// }\n\t// }\n\n\t_add_index(geometry: BufferGeometry) {\n\t\tconst position_attrib = geometry.getAttribute('position');\n\t\tconst position_array = position_attrib.array;\n\t\tconst points_count = position_array.length / 3;\n\t\tconst indices: number[] = [];\n\t\tlodash_times(points_count, (i) => indices.push(i));\n\n\t\tgeometry.setIndex(indices);\n\t}\n}\n\nexport type BaseSopNodeType = TypedSopNode<NodeParamsConfig>;\nexport class BaseSopNodeClass extends TypedSopNode<NodeParamsConfig> {}\n","import {ParamInitValuesTypeMap} from '../../../params/types/ParamInitValuesTypeMap';\n\nimport {ParamType} from '../../../poly/ParamType';\nimport {RampParam} from '../../../params/Ramp';\n\n// TODO: simplify GLDataType into one enum\n// http://learnwebgl.brown37.net/12_shader_language/glsl_data_types.html\n\n//\n//\n// GL Data types\n//\n//\nexport enum ConnectionPointType {\n\tBOOL = 'bool',\n\t// BVEC2 = 'bvec2',\n\t// BVEC3 = 'bvec3',\n\t// BVEC4 = 'bvec4',\n\tINT = 'int',\n\t// IVEC2 = 'ivec2',\n\t// IVEC3 = 'ivec3',\n\t// IVEC4 = 'ivec4',\n\tFLOAT = 'float',\n\tVEC2 = 'vec2',\n\tVEC3 = 'vec3',\n\tVEC4 = 'vec4',\n\t// matrices to be used later\n\t// MAT2 = 'mat2',\n\t// MAT3 = 'mat3',\n\t// MAT4 = 'mat4',\n\tSAMPLER_2D = 'sampler2D',\n}\n\n//\n//\n// ALL GL Data types in an array\n//\n//\nexport const ConnectionPointTypes: Array<ConnectionPointType> = [\n\tConnectionPointType.BOOL,\n\t// ConnectionPointType.BVEC2,\n\t// ConnectionPointType.BVEC3,\n\t// ConnectionPointType.BVEC4,\n\tConnectionPointType.INT,\n\t// ConnectionPointType.IVEC2,\n\t// ConnectionPointType.IVEC3,\n\t// ConnectionPointType.IVEC4,\n\tConnectionPointType.FLOAT,\n\tConnectionPointType.VEC2,\n\tConnectionPointType.VEC3,\n\tConnectionPointType.VEC4,\n];\n\n//\n//\n// Map to convert from a GL Data type to a ParamType\n//\n//\ntype ConnectionPointTypeToParamTypeMapGeneric = {[key in ConnectionPointType]: ParamType};\nexport interface IConnectionPointTypeToParamTypeMap extends ConnectionPointTypeToParamTypeMapGeneric {\n\t[ConnectionPointType.BOOL]: ParamType.BOOLEAN;\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ConnectionPointType.INT]: ParamType.INTEGER;\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ConnectionPointType.FLOAT]: ParamType.FLOAT;\n\t[ConnectionPointType.VEC2]: ParamType.VECTOR2;\n\t[ConnectionPointType.VEC3]: ParamType.VECTOR3;\n\t[ConnectionPointType.VEC4]: ParamType.VECTOR4;\n}\nexport const ConnectionPointTypeToParamTypeMap: IConnectionPointTypeToParamTypeMap = {\n\t[ConnectionPointType.BOOL]: ParamType.BOOLEAN,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ConnectionPointType.INT]: ParamType.INTEGER,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ConnectionPointType.FLOAT]: ParamType.FLOAT,\n\t[ConnectionPointType.VEC2]: ParamType.VECTOR2,\n\t[ConnectionPointType.VEC3]: ParamType.VECTOR3,\n\t[ConnectionPointType.VEC4]: ParamType.VECTOR4,\n\n\t[ConnectionPointType.SAMPLER_2D]: ParamType.RAMP,\n};\n\n//\n//\n// Map to convert from a ParamType to GL Data type\n//\n//\ntype ParamTypeToConnectionPointTypeMapGeneric = {[key in ParamType]: ConnectionPointType | undefined};\nexport interface IParamTypeToConnectionPointTypeMap extends ParamTypeToConnectionPointTypeMapGeneric {\n\t[ParamType.BOOLEAN]: ConnectionPointType.BOOL;\n\t[ParamType.COLOR]: ConnectionPointType.VEC3;\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ParamType.INTEGER]: ConnectionPointType.INT;\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ParamType.FLOAT]: ConnectionPointType.FLOAT;\n\t[ParamType.FOLDER]: undefined;\n\t[ParamType.VECTOR2]: ConnectionPointType.VEC2;\n\t[ParamType.VECTOR3]: ConnectionPointType.VEC3;\n\t[ParamType.VECTOR4]: ConnectionPointType.VEC4;\n\t[ParamType.BUTTON]: undefined;\n\t[ParamType.OPERATOR_PATH]: undefined;\n\t[ParamType.RAMP]: undefined;\n\t[ParamType.SEPARATOR]: undefined;\n\t[ParamType.STRING]: undefined;\n}\nexport const ParamTypeToConnectionPointTypeMap: IParamTypeToConnectionPointTypeMap = {\n\t[ParamType.BOOLEAN]: ConnectionPointType.BOOL,\n\t[ParamType.COLOR]: ConnectionPointType.VEC3,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ParamType.INTEGER]: ConnectionPointType.INT,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ParamType.FLOAT]: ConnectionPointType.FLOAT,\n\t[ParamType.FOLDER]: undefined,\n\t[ParamType.VECTOR2]: ConnectionPointType.VEC2,\n\t[ParamType.VECTOR3]: ConnectionPointType.VEC3,\n\t[ParamType.VECTOR4]: ConnectionPointType.VEC4,\n\t[ParamType.BUTTON]: undefined,\n\t[ParamType.OPERATOR_PATH]: undefined,\n\t[ParamType.RAMP]: undefined,\n\t[ParamType.SEPARATOR]: undefined,\n\t[ParamType.STRING]: undefined,\n};\n\n//\n//\n// Map of GL Data type default values\n//\n//\nexport type ConnectionPointInitValueMapGeneric = {\n\t[key in ConnectionPointType]: ParamInitValuesTypeMap[IConnectionPointTypeToParamTypeMap[key]];\n};\nexport const ConnectionPointInitValueMap: ConnectionPointInitValueMapGeneric = {\n\t[ConnectionPointType.BOOL]: false,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ConnectionPointType.INT]: 0,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ConnectionPointType.FLOAT]: 0,\n\t[ConnectionPointType.VEC2]: [0, 0],\n\t[ConnectionPointType.VEC3]: [0, 0, 0],\n\t[ConnectionPointType.VEC4]: [0, 0, 0, 0],\n\n\t[ConnectionPointType.SAMPLER_2D]: RampParam.DEFAULT_VALUE_JSON,\n};\n\n//\n//\n// Map of GL Data type component counts\n//\n//\nexport type ConnectionPointComponentsCountMapGeneric = {\n\t[key in ConnectionPointType]: number;\n};\nexport const ConnectionPointComponentsCountMap: ConnectionPointComponentsCountMapGeneric = {\n\t[ConnectionPointType.BOOL]: 1,\n\t// [ConnectionPointType.BVEC2]: [ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC3]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t// [ConnectionPointType.BVEC4]: [ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN, ParamType.BOOLEAN]\n\t[ConnectionPointType.INT]: 1,\n\t// [ConnectionPointType.IVEC2]: [ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC3]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t// [ConnectionPointType.IVEC4]: [ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER, ParamType.INTEGER];\n\t[ConnectionPointType.FLOAT]: 1,\n\t[ConnectionPointType.VEC2]: 2,\n\t[ConnectionPointType.VEC3]: 3,\n\t[ConnectionPointType.VEC4]: 4,\n\t[ConnectionPointType.SAMPLER_2D]: 1,\n};\n","export enum InputCloneMode {\n\tALWAYS = 'always',\n\tNEVER = 'never',\n\tFROM_NODE = 'from_node',\n}\n","export enum ParamType {\n\tBOOLEAN = 'boolean',\n\tBUTTON = 'button',\n\tCOLOR = 'color',\n\tFLOAT = 'float',\n\tFOLDER = 'folder',\n\tINTEGER = 'integer',\n\tOPERATOR_PATH = 'operator_path',\n\tRAMP = 'ramp',\n\tSEPARATOR = 'separator',\n\tSTRING = 'string',\n\tVECTOR2 = 'vector2',\n\tVECTOR3 = 'vector3',\n\tVECTOR4 = 'vector4',\n}\n// export type ParamTypeKey = ParamType\n// export type ParamTypeKeysArray = Array<ParamTypeKey>\n// const ParamTypeKeysArray: ParamTypeKeysArray = [ParamType.BOOLEAN]\n","export enum NodeContext {\n\tCOP = 'cop',\n\tEVENT = 'event',\n\tGL = 'gl',\n\tJS = 'js',\n\tMANAGER = 'managers',\n\tMAT = 'mat',\n\tOBJ = 'objects',\n\tSOP = 'sop',\n\tPOST = 'post',\n}\n\nexport interface NodeContextAndType {\n\tcontext: NodeContext;\n\ttype: string;\n}\n","import {CoreString} from './String';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nimport lodash_isNumber from 'lodash/isNumber';\nimport lodash_isBoolean from 'lodash/isBoolean';\nimport lodash_isString from 'lodash/isString';\n\nexport class ThreeToGl {\n\tstatic any(value: any) {\n\t\tif (lodash_isString(value)) {\n\t\t\treturn value;\n\t\t}\n\t\tif (lodash_isBoolean(value)) {\n\t\t\treturn `${value}`;\n\t\t}\n\n\t\tif (lodash_isNumber(value)) {\n\t\t\treturn `${CoreString.ensure_float(value)}`;\n\t\t} else {\n\t\t\tconst values = value.toArray().map((v: number) => {\n\t\t\t\treturn `${CoreString.ensure_float(v)}`;\n\t\t\t});\n\t\t\tconst gl_type = `vec${values.length}`;\n\t\t\treturn `${gl_type}(${values.join(', ')})`;\n\t\t}\n\t}\n\n\tstatic vector3(vec: Vector3 | string): string {\n\t\tif (lodash_isString(vec)) {\n\t\t\treturn vec;\n\t\t}\n\t\tconst values = vec.toArray().map((v) => {\n\t\t\treturn `${CoreString.ensure_float(v)}`;\n\t\t});\n\t\treturn `vec3(${values.join(', ')})`;\n\t}\n\tstatic vector2(vec: Vector2 | string): string {\n\t\tif (lodash_isString(vec)) {\n\t\t\treturn vec;\n\t\t}\n\t\tconst values = vec.toArray().map((v) => {\n\t\t\treturn `${CoreString.ensure_float(v)}`;\n\t\t});\n\t\treturn `vec2(${values.join(', ')})`;\n\t}\n\n\tstatic vector3_float(vec: Vector3 | string, num: number | string): string {\n\t\tif (!lodash_isString(num)) {\n\t\t\tnum = CoreString.ensure_float(num);\n\t\t}\n\t\treturn `vec4(${this.vector3(vec)}, ${num})`;\n\t}\n\n\tstatic float4(x: number | string, y: number | string, z: number | string, w: number | string) {\n\t\tif (!lodash_isString(x)) {\n\t\t\tx = CoreString.ensure_float(x);\n\t\t}\n\t\tif (!lodash_isString(y)) {\n\t\t\ty = CoreString.ensure_float(y);\n\t\t}\n\t\tif (!lodash_isString(z)) {\n\t\t\tz = CoreString.ensure_float(z);\n\t\t}\n\t\tif (!lodash_isString(w)) {\n\t\t\tw = CoreString.ensure_float(w);\n\t\t}\n\t\treturn `vec4(${x}, ${y}, ${z}, ${w})`;\n\t}\n\tstatic float3(x: number | string, y: number | string, z: number | string) {\n\t\tif (!lodash_isString(x)) {\n\t\t\tx = CoreString.ensure_float(x);\n\t\t}\n\t\tif (!lodash_isString(y)) {\n\t\t\ty = CoreString.ensure_float(y);\n\t\t}\n\t\tif (!lodash_isString(z)) {\n\t\t\tz = CoreString.ensure_float(z);\n\t\t}\n\t\treturn `vec3(${x}, ${y}, ${z})`;\n\t}\n\tstatic float2(x: number | string, y: number | string) {\n\t\tif (!lodash_isString(x)) {\n\t\t\tx = CoreString.ensure_float(x);\n\t\t}\n\t\tif (!lodash_isString(y)) {\n\t\t\ty = CoreString.ensure_float(y);\n\t\t}\n\t\treturn `vec2(${x}, ${y})`;\n\t}\n\tstatic float(x: number | string) {\n\t\tif (!lodash_isString(x)) {\n\t\t\tx = CoreString.ensure_float(x);\n\t\t}\n\t\treturn `${x}`;\n\t}\n\tstatic int(x: number | string) {\n\t\treturn `${x}`;\n\t}\n\tstatic bool(x: number | string) {\n\t\treturn `${x}`;\n\t}\n}\n","import {BaseGlNodeType} from '../_Base';\nimport {TypedGLDefinitionCollection} from './GLDefinitionCollection';\nimport {ConnectionPointType} from '../../utils/connections/ConnectionPointType';\n\nexport enum GLDefinitionType {\n\tATTRIBUTE = 'attribute',\n\tFUNCTION = 'function',\n\tUNIFORM = 'uniform',\n\tVARYING = 'varying',\n}\n\nexport abstract class TypedGLDefinition<T extends GLDefinitionType> {\n\t// constructor(protected _node: BaseGlNodeType, protected _name: string) {}\n\tconstructor(\n\t\tprotected _definition_type: T,\n\t\tprotected _data_type: ConnectionPointType,\n\t\tprotected _node: BaseGlNodeType,\n\t\tprotected _name: string\n\t) {\n\t\t// super(_node, _name);\n\t}\n\n\tget definition_type() {\n\t\treturn this._definition_type;\n\t}\n\tget data_type() {\n\t\treturn this._data_type;\n\t}\n\tget node() {\n\t\treturn this._node;\n\t}\n\tget name() {\n\t\treturn this._name;\n\t}\n\t// get id() {\n\t// \treturn this._data_type;\n\t// }\n\n\tabstract get line(): string;\n\tcollection_instance() {\n\t\treturn new TypedGLDefinitionCollection<T>();\n\t}\n}\n\nexport class AttributeGLDefinition extends TypedGLDefinition<GLDefinitionType.ATTRIBUTE> {\n\tconstructor(protected _node: BaseGlNodeType, protected _data_type: ConnectionPointType, protected _name: string) {\n\t\tsuper(GLDefinitionType.ATTRIBUTE, _data_type, _node, _name);\n\t}\n\tget line() {\n\t\treturn `attribute ${this.data_type} ${this.name}`;\n\t}\n}\n\nexport class FunctionGLDefinition extends TypedGLDefinition<GLDefinitionType.FUNCTION> {\n\tconstructor(protected _node: BaseGlNodeType, protected _data_type: ConnectionPointType, protected _name: string) {\n\t\tsuper(GLDefinitionType.FUNCTION, _data_type, _node, _name);\n\t}\n\tget line() {\n\t\treturn this.name;\n\t}\n}\n\nexport class UniformGLDefinition extends TypedGLDefinition<GLDefinitionType.UNIFORM> {\n\tconstructor(protected _node: BaseGlNodeType, protected _data_type: ConnectionPointType, protected _name: string) {\n\t\tsuper(GLDefinitionType.UNIFORM, _data_type, _node, _name);\n\t}\n\tget line() {\n\t\treturn `uniform ${this.data_type} ${this.name}`;\n\t}\n}\n\nexport class VaryingGLDefinition extends TypedGLDefinition<GLDefinitionType.VARYING> {\n\tconstructor(protected _node: BaseGlNodeType, protected _data_type: ConnectionPointType, protected _name: string) {\n\t\tsuper(GLDefinitionType.VARYING, _data_type, _node, _name);\n\t}\n\tget line() {\n\t\treturn `varying ${this.data_type} ${this.name}`;\n\t}\n}\nexport type BaseGLDefinition = TypedGLDefinition<GLDefinitionType>;\n","import {\n\tConnectionPointType,\n\tConnectionPointInitValueMapGeneric,\n\tConnectionPointInitValueMap,\n\tConnectionPointTypeToParamTypeMap,\n\tIConnectionPointTypeToParamTypeMap,\n} from './ConnectionPointType';\n// import {ParamInitValuesTypeMap} from '../params/ParamsController';\n\nexport interface TypedNamedConnectionPointData<T extends ConnectionPointType> {\n\tname: string;\n\ttype: T;\n}\n\nexport class TypedNamedConnectionPoint<T extends ConnectionPointType> {\n\tprivate _json: TypedNamedConnectionPointData<T> | undefined;\n\n\tconstructor(\n\t\tprotected _name: string,\n\t\tprotected _type: T,\n\t\tprotected _init_value?: ConnectionPointInitValueMapGeneric[T]\n\t) {\n\t\tif (this._init_value === undefined) {\n\t\t\tthis._init_value = ConnectionPointInitValueMap[this._type];\n\t\t}\n\t}\n\tget name() {\n\t\treturn this._name;\n\t}\n\tget type() {\n\t\treturn this._type;\n\t}\n\tget param_type(): IConnectionPointTypeToParamTypeMap[T] {\n\t\treturn ConnectionPointTypeToParamTypeMap[this._type];\n\t}\n\tget init_value() {\n\t\treturn this._init_value;\n\t}\n\n\tto_json(): TypedNamedConnectionPointData<T> {\n\t\treturn (this._json = this._json || this._create_json());\n\t}\n\tprivate _create_json(): TypedNamedConnectionPointData<T> {\n\t\treturn {\n\t\t\tname: this._name,\n\t\t\ttype: this._type,\n\t\t};\n\t}\n}\n\nexport type BaseNamedConnectionPointType = TypedNamedConnectionPoint<ConnectionPointType>;\n","import {TypedNode} from '../_Base';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {BaseGlShaderAssembler} from './code/assemblers/_Base';\nimport {AssemblerControllerNode} from './code/Controller';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ParamConfigsController} from '../utils/code/controllers/ParamConfigsController';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {ParamInitValueSerialized} from '../../params/types/ParamInitValueSerialized';\nimport {GlNodeSpareParamsController} from './utils/SpareParamsController';\nimport {GlConnectionsController} from './utils/ConnectionsController';\n\nexport class TypedGlNode<K extends NodeParamsConfig> extends TypedNode<'GL', BaseGlNodeType, K> {\n\tstatic node_context(): NodeContext {\n\t\treturn NodeContext.GL;\n\t}\n\tprotected _param_configs_controller: ParamConfigsController | undefined;\n\tprotected _assembler: BaseGlShaderAssembler | undefined;\n\n\treadonly spare_params_controller: GlNodeSpareParamsController = new GlNodeSpareParamsController(this);\n\tpublic readonly gl_connections_controller: GlConnectionsController | undefined;\n\n\tinitialize_base_node() {\n\t\t// this.io.inputs.set_depends_on_inputs(false);\n\t\tthis.io.connections.init_inputs();\n\t\tthis.ui_data.set_layout_horizontal();\n\t\tthis.io.outputs.set_named_output_connection_points([]);\n\n\t\tthis.spare_params_controller.initialize_node();\n\t}\n\tnode_sibbling(name: string): BaseGlNodeType | null {\n\t\treturn super.node_sibbling(name) as BaseGlNodeType | null;\n\t}\n\tcook() {\n\t\tconsole.warn('gl nodes should never cook');\n\t}\n\n\tprotected _set_mat_to_recompile() {\n\t\tthis.material_node?.assembler_controller.set_compilation_required_and_dirty(this);\n\t}\n\tget material_node(): AssemblerControllerNode | undefined {\n\t\tif (this.parent) {\n\t\t\tif (this.parent.type == this.type) {\n\t\t\t\treturn (this.parent as BaseGlNodeType)?.material_node;\n\t\t\t} else {\n\t\t\t\treturn this.parent as AssemblerControllerNode;\n\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t//\n\t// VARIABLES\n\t//\n\t//\n\tgl_var_name(name: string) {\n\t\treturn `v_POLY_${this.name}_${name}`;\n\t}\n\n\tvariable_for_input(name: string): string {\n\t\tconst input_index = this.io.inputs.get_input_index(name);\n\t\tconst connection = this.io.connections.input_connection(input_index);\n\t\tif (connection) {\n\t\t\tconst input_node = (<unknown>connection.node_src) as BaseGlNodeType;\n\t\t\tconst output_connection_point =\n\t\t\t\tinput_node.io.outputs.named_output_connection_points[connection.output_index];\n\t\t\tif (output_connection_point) {\n\t\t\t\tconst output_name = output_connection_point.name;\n\t\t\t\treturn input_node.gl_var_name(output_name);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`no output called '${name}' for gl node ${input_node.full_path()}`);\n\t\t\t\tthrow 'variable_for_input ERROR';\n\t\t\t}\n\t\t} else {\n\t\t\treturn ThreeToGl.any(this.params.get(name)?.value);\n\t\t}\n\t}\n\n\t//\n\t//\n\t// ADDED LINES\n\t//\n\t//\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {}\n\n\treset_code() {\n\t\tthis._param_configs_controller?.reset();\n\t\t// this.reset_lines();\n\t}\n\n\t//\n\t//\n\t// PARAM CONFIGS\n\t//\n\t//\n\tpublic set_param_configs() {}\n\tparam_configs() {\n\t\treturn this._param_configs_controller?.list;\n\t}\n\t// private reset_param_configs() {\n\t// \tthis._param_configs = [];\n\t// }\n\t// add_param_config<T extends ParamType>(\n\t// \ttype: T,\n\t// \tname: string,\n\t// \tdefault_value: ParamInitValuesTypeMap[T],\n\t// \tuniform_name: string\n\t// ) {\n\t// \tconst param_config = new ParamConfig(type, name, default_value, uniform_name);\n\t// \tthis._param_configs.push(param_config);\n\t// }\n\t// param_configs() {\n\t// \treturn this._param_configs;\n\t// }\n\t//\n\t//\n\t// INPUT\n\t//\n\t//\n\tgl_input_default_value(name: string): ParamInitValueSerialized {\n\t\treturn null;\n\t}\n\n\t//\n\t//\n\t// MISC\n\t//\n\t//\n\n\t//\n\t//\n\t// NEEDED?\n\t//\n\t//\n\t// set_assembler(assembler: BaseGlShaderAssembler) {\n\t// \tthis._assembler = assembler;\n\t// }\n\t// get assembler(): BaseGlShaderAssembler | undefined {\n\t// \treturn this._assembler;\n\t// }\n\n\t// shader_configs() {\n\t// \treturn this.assembler?.shader_configs || [];\n\t// }\n\t// shader_config(name: string) {\n\t// \treturn this.assembler?.shader_config(name);\n\t// }\n\t// shader_names() {\n\t// \treturn this.assembler?.shader_names || [];\n\t// }\n}\n\nexport type BaseGlNodeType = TypedGlNode<NodeParamsConfig>;\nexport class BaseGlNodeClass extends TypedGlNode<NodeParamsConfig> {}\n\nclass ParamlessParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new ParamlessParamsConfig();\nexport class ParamlessTypedGlNode extends TypedGlNode<ParamlessParamsConfig> {\n\tparams_config = ParamsConfig;\n}\n","// import {VertexColors} from 'three/src/constants'\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {Scene} from 'three/src/scenes/Scene';\nimport {Points} from 'three/src/objects/Points';\nimport {Object3D} from 'three/src/core/Object3D';\n// import {NoColors} from 'three/src/constants';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {Group} from 'three/src/objects/Group';\nimport {FrontSide} from 'three/src/constants';\n// import {DoubleSide} from 'three/src/constants'\nimport {Color} from 'three/src/math/Color';\nimport {Bone} from 'three/src/objects/Bone';\n// import {AdditiveBlending} from 'three/src/constants'\nimport {Material} from 'three/src/materials/Material';\nimport {PointsMaterial} from 'three/src/materials/PointsMaterial';\nimport {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\nimport {MeshLambertMaterial} from 'three/src/materials/MeshLambertMaterial';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\n// const THREE = {AdditiveBlending, Bone, Color, DoubleSide, FrontSide, Group, LineBasicMaterial, LineSegments, Mesh, MeshLambertMaterial, MeshStandardMaterial, NoColors, Object3D, Points, PointsMaterial, Scene, SkinnedMesh, VertexColors}\n\ninterface MaterialsByString {\n\t[propName: string]: Material;\n}\n\n// export enum AttribClass {\n// \tVERTEX = \"vertex\",\n// \tOBJECT = \"object\"\n// }\n// materials['MeshStandard'] = new MeshStandardMaterial({\n// \tcolor: 0xffffff,\n// \t//vertexColors: VertexColors\n// \tside: FrontSide, // DoubleSide\n// \tmetalness: 0.5,\n// \troughness: 0.9\n// })\n// materials[Mesh.name] = new MeshLambertMaterial({ // MeshStandardMaterial\n// \tcolor: new Color(0.5,0.5,1),\n// \tside: FrontSide,\n// \tvertexColors: NoColors,\n// \ttransparent: true,\n// \tdepthTest: true\n// })\n// materials[Points.name] = new PointsMaterial({\n// \tcolor: 0xffffff,\n// \tsize: 0.1,\n// \t//blending: AdditiveBlending\n// \tdepthTest: true\n// })\n// materials[LineSegments.name] = new LineBasicMaterial({\n// \tcolor: 0xffffff,\n// \tlinewidth: 1\n// })\nexport enum ObjectType {\n\tMESH = 'MESH',\n\tPOINTS = 'POINTS',\n\tLINE_SEGMENTS = 'LINE_SEGMENTS',\n}\nexport const ObjectTypes = [ObjectType.MESH, ObjectType.POINTS, ObjectType.LINE_SEGMENTS];\nexport const ObjectTypeMenuEntries = [\n\t{name: 'Mesh', value: ObjectTypes.indexOf(ObjectType.MESH)},\n\t{name: 'Points', value: ObjectTypes.indexOf(ObjectType.POINTS)},\n\t{name: 'LineSegments', value: ObjectTypes.indexOf(ObjectType.LINE_SEGMENTS)},\n];\n\nexport function ObjectTypeByObject(object: Object3D): ObjectType | undefined {\n\tif (object instanceof Mesh) {\n\t\treturn ObjectType.MESH;\n\t}\n\tif (object instanceof LineSegments) {\n\t\treturn ObjectType.LINE_SEGMENTS;\n\t}\n\tif (object instanceof Points) {\n\t\treturn ObjectType.POINTS;\n\t}\n\tconsole.warn('ObjectTypeByObject received an unknown object type', object);\n}\n\nconst materials: MaterialsByString = {\n\tMeshStandard: new MeshStandardMaterial({\n\t\tcolor: 0xffffff,\n\t\t//vertexColors: VertexColors\n\t\tside: FrontSide, // DoubleSide\n\t\tmetalness: 0.5,\n\t\troughness: 0.9,\n\t}),\n\t[ObjectType.MESH]: new MeshLambertMaterial({\n\t\t// MeshStandardMaterial\n\t\tcolor: new Color(0.5, 0.5, 1),\n\t\tside: FrontSide,\n\t\tvertexColors: false,\n\t\ttransparent: true,\n\t\tdepthTest: true,\n\t}),\n\t[ObjectType.POINTS]: new PointsMaterial({\n\t\tcolor: 0xffffff,\n\t\tsize: 0.1,\n\t\t//blending: AdditiveBlending\n\t\tdepthTest: true,\n\t}),\n\t[ObjectType.LINE_SEGMENTS]: new LineBasicMaterial({\n\t\tcolor: 0xffffff,\n\t\tlinewidth: 1,\n\t}),\n};\n\n// TODO: typescript: check that this works after using uglifier\n\nexport enum AttribClass {\n\tVERTEX = 0,\n\tOBJECT = 1,\n}\n\nexport const AttribClassMenuEntries = [\n\t{name: 'vertex', value: AttribClass.VERTEX},\n\t{name: 'object', value: AttribClass.OBJECT},\n];\n\nexport enum AttribType {\n\tNUMERIC = 0,\n\tSTRING = 1,\n}\nexport const AttribTypeMenuEntries = [\n\t{name: 'numeric', value: AttribType.NUMERIC},\n\t{name: 'string', value: AttribType.STRING},\n];\n\nexport const CoreConstant = {\n\tATTRIB_CLASS: {\n\t\tVERTEX: AttribClass.VERTEX,\n\t\tOBJECT: AttribClass.OBJECT,\n\t},\n\n\tATTRIB_TYPE: {\n\t\tNUMERIC: 0,\n\t\tSTRING: 1,\n\t},\n\n\tOBJECT_TYPE: {\n\t\t// TODO: typescript\n\t\tMESH: ObjectType.MESH,\n\t\tPOINTS: ObjectType.POINTS,\n\t\tLINE_SEGMENTS: ObjectType.LINE_SEGMENTS,\n\t},\n\tOBJECT_TYPES: ObjectTypes,\n\tCONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME: {\n\t\t[Scene.name]: 'Scene',\n\t\t[Group.name]: 'Group',\n\t\t[Object3D.name]: 'Object3D',\n\t\t[Mesh.name]: 'Mesh',\n\t\t[Points.name]: 'Points',\n\t\t[LineSegments.name]: 'LineSegments',\n\t\t[Bone.name]: 'Bone',\n\t\t[SkinnedMesh.name]: 'SkinnedMesh',\n\t},\n\tCONSTRUCTORS_BY_NAME: {\n\t\t[ObjectType.MESH]: Mesh,\n\t\t[ObjectType.POINTS]: Points,\n\t\t[ObjectType.LINE_SEGMENTS]: LineSegments,\n\t},\n\t// CONSTRUCTORS_BY_TYPE: {\n\t// \t['MESH']: Mesh,\n\t// \t['POINTS']: Points,\n\t// \t['LINE_SEGMENTS']: LineSegments,\n\t// },\n\t// OBJECT_TYPE_BY_CONSTRUCTOR_NAME: {\n\t// \t[Mesh.name]: 'MESH',\n\t// \t[Points.name]: 'POINTS',\n\t// \t[LineSegments.name]: 'LINE_SEGMENTS',\n\t// },\n\tMATERIALS: materials,\n};\n\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[Scene.name] = 'Scene'\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[Group.name] = 'Group'\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[Object3D.name] = 'Object3D'\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[Mesh.name] = 'Mesh'\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[Points.name] = 'Points'\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[LineSegments.name] = 'LineSegments'\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[Bone.name] = 'Bone'\n// CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[SkinnedMesh.name] = 'SkinnedMesh'\n\n// CoreConstant.CONSTRUCTORS_BY_NAME[Mesh.name] = Mesh\n// CoreConstant.CONSTRUCTORS_BY_NAME[Points.name] = Points\n// CoreConstant.CONSTRUCTORS_BY_NAME[LineSegments.name] = LineSegments\n\n// CoreConstant.CONSTRUCTORS_BY_TYPE['MESH'] = Mesh\n// CoreConstant.CONSTRUCTORS_BY_TYPE['POINTS'] = Points\n// CoreConstant.CONSTRUCTORS_BY_TYPE['LINE_SEGMENTS'] = LineSegments\n\n// CoreConstant.OBJECT_TYPE_BY_CONSTRUCTOR_NAME[Mesh.name] = 'MESH'\n// CoreConstant.OBJECT_TYPE_BY_CONSTRUCTOR_NAME[Points.name] = 'POINTS'\n// CoreConstant.OBJECT_TYPE_BY_CONSTRUCTOR_NAME[LineSegments.name] = 'LINE_SEGMENTS'\n","import lodash_range from 'lodash/range';\nimport lodash_compact from 'lodash/compact';\nimport {BaseAdaptiveGlNode} from './_BaseAdaptive';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {GLDefinitionType, TypedGLDefinition} from './utils/GLDefinition';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\n\nexport class BaseGlMathFunctionParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new BaseGlMathFunctionParamsConfig();\nexport abstract class BaseGlMathFunctionGlNode extends BaseAdaptiveGlNode<BaseGlMathFunctionParamsConfig> {\n\tparams_config = ParamsConfig;\n\tprotected gl_method_name() {\n\t\treturn '';\n\t}\n\tprotected gl_function_definitions(): TypedGLDefinition<GLDefinitionType>[] {\n\t\treturn [];\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t}\n\tprotected _expected_input_types(): ConnectionPointType[] {\n\t\tconst type: ConnectionPointType =\n\t\t\tthis.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\tif (this.io.connections.first_input_connection()) {\n\t\t\tlet count = Math.max(lodash_compact(this.io.connections.input_connections()).length + 1, 2);\n\t\t\treturn lodash_range(count).map((i) => type);\n\t\t} else {\n\t\t\treturn lodash_range(2).map((i) => type);\n\t\t}\n\t}\n\tprotected _expected_output_types() {\n\t\tconst type = this._expected_input_types()[0];\n\t\treturn [type];\n\t}\n\tprotected _gl_input_name(index: number) {\n\t\treturn 'in';\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst var_type: ConnectionPointType = this.io.outputs.named_output_connection_points[0].type;\n\t\tconst args = this.io.inputs.named_input_connection_points.map((connection, i) => {\n\t\t\tconst name = connection.name;\n\t\t\treturn ThreeToGl.any(this.variable_for_input(name));\n\t\t});\n\t\tconst joined_args = args.join(', ');\n\n\t\tconst sum = this.gl_var_name(this.gl_connections_controller.output_name(0));\n\t\tconst body_line = `${var_type} ${sum} = ${this.gl_method_name()}(${joined_args})`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t\tshaders_collection_controller.add_definitions(this, this.gl_function_definitions());\n\t}\n}\n\n//\n//\n// 1 argument\n//\n//\nexport abstract class BaseNodeGlMathFunctionArg1GlNode extends BaseGlMathFunctionGlNode {\n\tprotected _gl_input_name(index: number) {\n\t\treturn 'in';\n\t}\n\tprotected _expected_input_types() {\n\t\tconst type = this.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\treturn [type];\n\t}\n}\n\n//\n//\n// 2 arguments\n//\n//\nexport abstract class BaseNodeGlMathFunctionArg2GlNode extends BaseGlMathFunctionGlNode {\n\tprotected _expected_input_types() {\n\t\tconst type = this.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\treturn [type, type];\n\t}\n}\n\n//\n//\n// 3 arguments\n//\n//\nexport abstract class BaseNodeGlMathFunctionArg3GlNode extends BaseGlMathFunctionGlNode {\n\tprotected _expected_input_types() {\n\t\tconst type = this.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\treturn [type, type, type];\n\t}\n}\n//\n//\n// 4 arguments\n//\n//\nexport abstract class BaseNodeGlMathFunctionArg4GlNode extends BaseGlMathFunctionGlNode {\n\tprotected _expected_input_types() {\n\t\tconst type = this.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\treturn [type, type, type, type];\n\t}\n}\n//\n//\n// 5 arguments\n//\n//\nexport abstract class BaseNodeGlMathFunctionArg5GlNode extends BaseGlMathFunctionGlNode {\n\tprotected _expected_input_types() {\n\t\tconst type = this.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\treturn [type, type, type, type, type];\n\t}\n}\n","import lodash_range from 'lodash/range';\nimport lodash_uniq from 'lodash/uniq';\nimport lodash_trim from 'lodash/trim';\nimport lodash_compact from 'lodash/compact';\nimport lodash_flatten from 'lodash/flatten';\nimport lodash_padEnd from 'lodash/padEnd';\nimport lodash_capitalize from 'lodash/capitalize';\nimport lodash_snakeCase from 'lodash/snakeCase';\nimport lodash_upperFirst from 'lodash/upperFirst';\nimport lodash_camelCase from 'lodash/camelCase';\nimport lodash_isNumber from 'lodash/isNumber';\n\nconst ATTRIB_NAMES_SEPARATOR = /[, ]/; //[',', ' ']\n\n// const LETTERS = 'abcdefghijklmnopqrstuvwxyz'\n// const LETTERS_UPPERCASE = LETTERS.toUpperCase()\n// const NUMBERS = '0123645789'\n// const ALL = LETTERS + LETTERS_UPPERCASE + NUMBERS\n\nconst TAIL_DIGIT_MATCH_REGEXP = /\\d+$/;\n// const DIGIT_PREDEDED_BY_UNDERSCOPE = /_\\d$/\nconst INDICES_LIST_SEPARATOR = /,| /;\n\n// https://stackoverflow.com/questions/41856126/regexp-optional-dot-in-a-decimal-number\nconst NUM_REGEXP = /^-?\\d+\\.?\\d*$/;\nenum BooleanString {\n\tTRUE = 'true',\n\tFALSE = 'false',\n}\n\nexport class CoreString {\n\t// static has_tail_digits(word: string): boolean {\n\t// \tconst match = word.match(TAIL_DIGIT_MATCH_REGEXP)\n\t// \treturn (match != null)\n\t// }\n\tstatic is_boolean(word: string): boolean {\n\t\treturn word == BooleanString.TRUE || word == BooleanString.FALSE;\n\t}\n\tstatic to_boolean(word: string): boolean {\n\t\treturn word == BooleanString.TRUE;\n\t}\n\tstatic is_number(word: string): boolean {\n\t\treturn NUM_REGEXP.test(word);\n\t}\n\n\tstatic tail_digits(word: string): number {\n\t\tconst match = word.match(TAIL_DIGIT_MATCH_REGEXP);\n\t\tif (match) {\n\t\t\treturn parseInt(match[0]);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tstatic increment(word: string): string {\n\t\tlet match;\n\t\tif ((match = word.match(TAIL_DIGIT_MATCH_REGEXP))) {\n\t\t\tconst digits = parseInt(match[0]);\n\t\t\tconst prefix = word.substring(0, word.length - match[0].length);\n\t\t\treturn `${prefix}${digits + 1}`;\n\t\t} else {\n\t\t\treturn `${word}1`;\n\t\t}\n\t}\n\n\tstatic pluralize(word: string): string {\n\t\tconst last_char = word[word.length - 1];\n\t\tif (last_char !== 's') {\n\t\t\treturn `${word}s`;\n\t\t} else {\n\t\t\treturn word;\n\t\t}\n\t}\n\n\tstatic camel_case(word: string): string {\n\t\treturn lodash_camelCase(word);\n\t}\n\tstatic upper_first(word: string): string {\n\t\treturn lodash_upperFirst(word);\n\t}\n\tstatic snake_case(word: string): string {\n\t\treturn lodash_snakeCase(word);\n\t}\n\tstatic titleize(word: string): string {\n\t\treturn lodash_capitalize(word.replace(/_/g, ' '));\n\t}\n\n\tstatic type_to_class_name(word: string): string {\n\t\treturn this.upper_first(lodash_camelCase(word));\n\t}\n\t// static class_name_to_type(word): string {\n\t// \t// if(this.has_tail_digits(word)){\n\t// \t// \tconst tail_digits = `${this.tail_digits(word)}`\n\t// \t// \tconst head = word.substr(0, word.length-tail_digits.length)\n\t// \t// \tconst head_snake_case = this.snake_case(head)\n\t// \t// \tconsole.log(word, tail_digits, head, head_snake_case)\n\t// \t// \treturn `${head_snake_case}${tail_digits}`;\n\t// \t// } else {\n\t// \t// \treturn this.snake_case(word)\n\t// \t// }\n\t// \tconst snake_case = this.snake_case(word)\n\t// \tconst match = snake_case.match(DIGIT_PREDEDED_BY_UNDERSCOPE)\n\t// \tconsole.log(\"-----\", snake_case, match)\n\t// \treturn snake_case\n\t// }\n\t// static class_name_to_human(word): string {\n\t// \tconst human_name = this.class_name_to_type(word).replace(/\\s/, ' ');\n\t// \treturn human_name.replace(/_/g, \" \");\n\t// }\n\n\tstatic timestamp_to_seconds(word: string): number {\n\t\treturn Date.parse(word) / 1000;\n\t}\n\tstatic seconds_to_timestamp(seconds: number): string {\n\t\tconst d = new Date();\n\t\td.setTime(seconds * 1000);\n\t\treturn d.toISOString().substr(11, 8);\n\t}\n\n\tstatic precision(val: number, decimals: number = 2): string {\n\t\t// if (decimals == null) { decimals = 2; }\n\t\t// const factor = Math.pow(10, decimals);\n\t\t// const num = Math.floor(factor * val) / factor;\n\t\t// let number_s = `${num}`;\n\n\t\t// let elements = number_s.split('.');\n\t\t// if (decimals <= 0){\n\t\t// \treturn elements[0];\n\t\t// }\n\n\t\t// if (elements.length === 1) {\n\t\t// \t// number_s = `${number_s}.00`;\n\t\t// \tconst string_to_pad = `${number_s}.`\n\t\t// \tconst pad = string_to_pad.length + decimals\n\t\t// \treturn lodash_padEnd(string_to_pad, pad, '0');\n\t\t// } else {\n\t\t// \tconst integer_element = elements[0];\n\t\t// \tlet fraction_element = elements[1];\n\t\t// \tif (fraction_element.length === 1) {\n\t\t// \t\tnumber_s = `${integer_element}.${fraction_element}0`;\n\t\t// \t} else if (fraction_element.length > 2) {\n\t\t// \t\tfraction_element = fraction_element.slice(0, 2);\n\t\t// \t\tnumber_s = `${integer_element}.${fraction_element}`;\n\t\t// \t}\n\t\t// }\n\n\t\t// elements = number_s.split('.');\n\t\t// console.log(\"decimals:\", decimals, elements[1].length, number_s)\n\t\t// if (elements[1].length < decimals){\n\t\t// \tconst string_to_pad = number_s\n\t\t// \tconst pad = string_to_pad.length + (decimals - elements[1].length)\n\t\t// \tnumber_s = lodash_padEnd(string_to_pad, pad, '0');\n\t\t// }\n\n\t\t// return number_s;\n\t\tdecimals = Math.max(decimals, 0);\n\t\tconst elements = `${val}`.split('.');\n\n\t\tif (decimals <= 0) {\n\t\t\treturn elements[0];\n\t\t}\n\n\t\tlet frac = elements[1];\n\t\tif (frac !== undefined) {\n\t\t\tif (frac.length > decimals) {\n\t\t\t\tfrac = frac.substring(0, decimals);\n\t\t\t}\n\n\t\t\tfrac = lodash_padEnd(frac, decimals, '0');\n\t\t\treturn `${elements[0]}.${frac}`;\n\t\t} else {\n\t\t\tconst string_to_pad = `${val}.`;\n\t\t\tconst pad = string_to_pad.length + decimals;\n\t\t\treturn lodash_padEnd(string_to_pad, pad, '0');\n\t\t}\n\t}\n\n\tstatic ensure_float(num: number): string {\n\t\t// const integer = Math.floor(num)\n\t\t// const delta = num - integer\n\t\t// if(delta)\n\t\tconst num_as_string = `${num}`;\n\t\tconst dot_pos = num_as_string.indexOf('.');\n\t\tif (dot_pos >= 0) {\n\t\t\treturn num_as_string;\n\t\t} else {\n\t\t\treturn `${num_as_string}.0`;\n\t\t}\n\t}\n\n\t// https://stackoverflow.com/questions/26246601/wildcard-string-comparison-in-javascript#32402438\n\tstatic match_mask(word: string, rule: string) {\n\t\tif (rule === '*') {\n\t\t\treturn true;\n\t\t}\n\t\t// \".\"  => Find a single character, except newline or line terminator\n\t\t// \".*\" => Matches any string that contains zero or more characters\n\t\trule = rule.split('*').join('.*');\n\n\t\t// \"^\"  => Matches any string with the following at the beginning of it\n\t\t// \"$\"  => Matches any string with that in front at the end of it\n\t\trule = `^${rule}$`;\n\n\t\t// Create a regular expression object for matching string\n\t\tconst regex = new RegExp(rule);\n\n\t\t// Returns true if it finds a match, otherwise it returns false\n\t\treturn regex.test(word);\n\t}\n\tstatic matches_one_mask(word: string, masks: string[]): boolean {\n\t\tlet matches_one_mask = false;\n\t\tfor (let mask of masks) {\n\t\t\tif (CoreString.match_mask(word, mask)) {\n\t\t\t\tmatches_one_mask = true;\n\t\t\t}\n\t\t}\n\t\treturn matches_one_mask;\n\t}\n\n\tstatic attrib_names(word: string): string[] {\n\t\t// let elements = [word];\n\t\t// lodash_each(ATTRIB_NAMES_SEPARATORS, separator => elements = lodash_flatten(lodash_map(elements, element => element.split(separator))));\n\t\tconst elements = word.split(ATTRIB_NAMES_SEPARATOR);\n\t\tconst trimed_elements = lodash_compact(\n\t\t\telements.map((e) => {\n\t\t\t\treturn lodash_trim(e);\n\t\t\t})\n\t\t);\n\t\tconst uniq = lodash_uniq(trimed_elements);\n\n\t\t// const names: string[] = []\n\t\t// ATTRIB_NAMES_SEPARATORS.forEach(separator=>{\n\t\t// \tword.split(separator).forEach( element=>{\n\t\t// \t\tnames.push(element.trim())\n\t\t// \t} )\n\t\t// })\n\n\t\t// // elements = lodash_filter(elements, element => (element != null) && (element.length > 0));\n\t\t// return lodash_uniq(names)\n\n\t\t// return lodash_map(elements, attr_name => lodash_trim(attr_name));\n\t\treturn uniq;\n\t}\n\tstatic to_id(val: string): number {\n\t\tif (val == null) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst elements = val.split('').reverse();\n\t\tlet id = 0;\n\t\tlet exp = 0;\n\t\telements.forEach((element, i) => {\n\t\t\tlet index = element.charCodeAt(0);\n\n\t\t\tif (index >= 0) {\n\t\t\t\texp = i % 10;\n\t\t\t\tid += index * 10 ** exp;\n\t\t\t\tid = id % Number.MAX_SAFE_INTEGER;\n\t\t\t}\n\t\t});\n\t\treturn id;\n\t}\n\n\tstatic indices(indices_string: string): number[] {\n\t\tconst elements = indices_string.split(INDICES_LIST_SEPARATOR);\n\t\tif (elements.length > 1) {\n\t\t\treturn lodash_uniq(lodash_flatten(elements.map((element) => this.indices(element)))).sort((a, b) => a - b);\n\t\t} else {\n\t\t\tconst element = elements[0];\n\t\t\tif (element) {\n\t\t\t\tconst range_separator = '-';\n\t\t\t\tif (element.indexOf(range_separator) > 0) {\n\t\t\t\t\tconst range_elements = element.split(range_separator);\n\t\t\t\t\treturn lodash_range(parseInt(range_elements[0]), parseInt(range_elements[1]) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tconst parsed = parseInt(element);\n\t\t\t\t\tif (lodash_isNumber(parsed)) {\n\t\t\t\t\t\treturn [parsed];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic escape_line_breaks(word: string): string {\n\t\treturn word.replace(/(\\r\\n|\\n|\\r)/gm, '\\\\n');\n\t}\n}\n","export enum ShaderName {\n\tVERTEX = 'vertex',\n\tFRAGMENT = 'fragment',\n\tLEAVES_FROM_NODES_SHADER = 'leaves_from_nodes_shader',\n\tPARTICLES_0 = 'particles_0',\n\tPARTICLES_1 = 'particles_1',\n\tPARTICLES_2 = 'particles_2',\n\tPARTICLES_3 = 'particles_3',\n\tPARTICLES_4 = 'particles_4',\n\tPARTICLES_5 = 'particles_5',\n\tPARTICLES_6 = 'particles_6',\n\tPARTICLES_7 = 'particles_7',\n\tPARTICLES_8 = 'particles_8',\n\tPARTICLES_9 = 'particles_9',\n}\nexport const ParticleShaderNames: Array<ShaderName> = [\n\tShaderName.PARTICLES_0,\n\tShaderName.PARTICLES_1,\n\tShaderName.PARTICLES_2,\n\tShaderName.PARTICLES_3,\n\tShaderName.PARTICLES_4,\n\tShaderName.PARTICLES_5,\n\tShaderName.PARTICLES_6,\n\tShaderName.PARTICLES_7,\n\tShaderName.PARTICLES_8,\n\tShaderName.PARTICLES_9,\n];\n","import {Vector3} from 'three/src/math/Vector3';\n// import {Vector2} from 'three/src/math/Vector2'\nimport {Int32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Box3} from 'three/src/math/Box3';\nimport {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute';\n\n// const THREE = {\n// \tBox3,\n// \tBufferGeometry,\n// \tFloat32BufferAttribute,\n// \tInt32BufferAttribute,\n// \tInterleavedBufferAttribute,\n// \tVector2,\n// \tVector3,\n// }\nimport lodash_range from 'lodash/range';\nimport lodash_uniq from 'lodash/uniq';\nimport lodash_each from 'lodash/each';\nimport lodash_chunk from 'lodash/chunk';\nimport lodash_cloneDeep from 'lodash/cloneDeep';\nimport lodash_clone from 'lodash/clone';\nimport lodash_isArray from 'lodash/isArray';\nimport lodash_isNumber from 'lodash/isNumber';\nimport {CorePoint} from './Point';\nimport {CoreFace} from './Face';\nimport {CoreConstant, ObjectType} from './Constant';\nimport {CoreAttribute} from './Attribute';\nimport {MonkeyPatcher} from './MonkeyPatcher';\n\nimport {BufferGeometryUtils} from '../../../modules/three/examples/jsm/utils/BufferGeometryUtils';\nimport {CoreAttributeData} from './AttributeData';\n\nexport class CoreGeometry {\n\t_bounding_box: Box3 | undefined;\n\tprivate _points: CorePoint[] | undefined;\n\n\t// @INDEX_MODE_POINTS = 'INDEX_MODE_POINTS'\n\t// @INDEX_MODE_FACES = 'INDEX_MODE_FACES'\n\t// @INDEX_MODE_LINES = 'INDEX_MODE_LINES'\n\n\tconstructor(private _geometry: BufferGeometry) {}\n\t//\n\n\tgeometry() {\n\t\treturn this._geometry;\n\t}\n\tuuid() {\n\t\treturn this._geometry.uuid;\n\t}\n\n\tbounding_box() {\n\t\treturn (this._bounding_box = this._bounding_box || this._create_bounding_box());\n\t}\n\t_create_bounding_box() {\n\t\tthis._geometry.computeBoundingBox();\n\t\tif (this._geometry.boundingBox) {\n\t\t\treturn this._geometry.boundingBox;\n\t\t}\n\t}\n\n\tmark_as_instance() {\n\t\tthis._geometry.userData['is_instance'] = true;\n\t}\n\tstatic marked_as_instance(geometry: BufferGeometry): boolean {\n\t\treturn geometry.userData['is_instance'] === true;\n\t}\n\tmarked_as_instance(): boolean {\n\t\treturn CoreGeometry.marked_as_instance(this._geometry);\n\t}\n\tposition_attrib_name() {\n\t\tlet name = 'position';\n\t\tif (this.marked_as_instance()) {\n\t\t\tname = 'instancePosition';\n\t\t}\n\t\treturn name;\n\t}\n\n\tcompute_vertex_normals() {\n\t\tthis._geometry.computeVertexNormals();\n\t}\n\n\tuser_data_attribs() {\n\t\tconst key = 'indexed_attrib_values';\n\t\treturn (this._geometry.userData[key] = this._geometry.userData[key] || {});\n\t}\n\tindexed_attribute_names() {\n\t\treturn Object.keys(this.user_data_attribs() || {});\n\t}\n\tuser_data_attrib(name: string) {\n\t\tname = CoreAttribute.remap_name(name);\n\t\treturn this.user_data_attribs()[name];\n\t}\n\tis_attrib_indexed(name: string): boolean {\n\t\tname = CoreAttribute.remap_name(name);\n\t\treturn this.user_data_attrib(name) != null;\n\t}\n\n\thas_attrib(name: string): boolean {\n\t\tif (name === 'ptnum') {\n\t\t\treturn true;\n\t\t}\n\t\tname = CoreAttribute.remap_name(name);\n\t\treturn this._geometry.attributes[name] != null;\n\t}\n\tattrib_type(name: string) {\n\t\tif (this.is_attrib_indexed(name)) {\n\t\t\treturn CoreConstant.ATTRIB_TYPE.STRING;\n\t\t} else {\n\t\t\treturn CoreConstant.ATTRIB_TYPE.NUMERIC;\n\t\t}\n\t}\n\n\tattrib_names(): string[] {\n\t\treturn Object.keys(this._geometry.attributes);\n\t}\n\tattrib_sizes() {\n\t\tconst h: Dictionary<number> = {};\n\t\tfor (let attrib_name of this.attrib_names()) {\n\t\t\th[attrib_name] = this._geometry.attributes[attrib_name].itemSize;\n\t\t}\n\t\treturn h;\n\t}\n\tattrib_size(name: string): number {\n\t\tlet attrib;\n\t\tname = CoreAttribute.remap_name(name);\n\t\tif ((attrib = this._geometry.attributes[name]) != null) {\n\t\t\treturn attrib.itemSize;\n\t\t} else {\n\t\t\tif (name === 'ptnum') {\n\t\t\t\t// to ensure attrib copy with ptnum as source works\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tset_indexed_attribute_values(name: string, values: string[]) {\n\t\tthis.user_data_attribs()[name] = values;\n\t}\n\n\tset_indexed_attribute(name: string, values: string[], indices: number[]) {\n\t\tthis.set_indexed_attribute_values(name, values);\n\t\tthis._geometry.setAttribute(name, new Int32BufferAttribute(indices, 1));\n\t}\n\n\tadd_numeric_attrib(name: string, size: number = 1, default_value: NumericAttribValue = 0) {\n\t\tconst values = [];\n\n\t\tlet attribute_added = false;\n\t\tif (lodash_isNumber(default_value)) {\n\t\t\t// adding number\n\t\t\tfor (let i = 0; i < this.points_count(); i++) {\n\t\t\t\tfor (let j = 0; j < size; j++) {\n\t\t\t\t\tvalues.push(default_value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tattribute_added = true;\n\t\t} else {\n\t\t\tif (size > 1) {\n\t\t\t\tif (lodash_isArray(default_value)) {\n\t\t\t\t\t// adding array\n\t\t\t\t\tfor (let i = 0; i < this.points_count(); i++) {\n\t\t\t\t\t\tfor (let j = 0; j < size; j++) {\n\t\t\t\t\t\t\tvalues.push(default_value[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tattribute_added = true;\n\t\t\t\t} else {\n\t\t\t\t\t// adding Vector2\n\t\t\t\t\tconst vec2 = default_value as Vector2Like;\n\t\t\t\t\tif (size == 2 && vec2.x != null && vec2.y != null) {\n\t\t\t\t\t\tfor (let i = 0; i < this.points_count(); i++) {\n\t\t\t\t\t\t\tvalues.push(vec2.x);\n\t\t\t\t\t\t\tvalues.push(vec2.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tattribute_added = true;\n\t\t\t\t\t}\n\t\t\t\t\t// adding Vector3\n\t\t\t\t\tconst vec3 = default_value as Vector3Like;\n\t\t\t\t\tif (size == 3 && vec3.x != null && vec3.y != null && vec3.z != null) {\n\t\t\t\t\t\tfor (let i = 0; i < this.points_count(); i++) {\n\t\t\t\t\t\t\tvalues.push(vec3.x);\n\t\t\t\t\t\t\tvalues.push(vec3.y);\n\t\t\t\t\t\t\tvalues.push(vec3.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tattribute_added = true;\n\t\t\t\t\t}\n\t\t\t\t\t// adding Color\n\t\t\t\t\tconst col = default_value as ColorLike;\n\t\t\t\t\tif (size == 3 && col.r != null && col.g != null && col.b != null) {\n\t\t\t\t\t\tfor (let i = 0; i < this.points_count(); i++) {\n\t\t\t\t\t\t\tvalues.push(col.r);\n\t\t\t\t\t\t\tvalues.push(col.g);\n\t\t\t\t\t\t\tvalues.push(col.b);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tattribute_added = true;\n\t\t\t\t\t}\n\t\t\t\t\t// adding Vector4\n\t\t\t\t\tconst vec4 = default_value as Vector4Like;\n\t\t\t\t\tif (size == 4 && vec4.x != null && vec4.y != null && vec4.z != null && vec4.w != null) {\n\t\t\t\t\t\tfor (let i = 0; i < this.points_count(); i++) {\n\t\t\t\t\t\t\tvalues.push(vec4.x);\n\t\t\t\t\t\t\tvalues.push(vec4.y);\n\t\t\t\t\t\t\tvalues.push(vec4.z);\n\t\t\t\t\t\t\tvalues.push(vec4.w);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tattribute_added = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (attribute_added) {\n\t\t\tthis._geometry.setAttribute(name, new Float32BufferAttribute(values, size));\n\t\t} else {\n\t\t\tthrow 'no other default value allowed for now in add_numeric_attrib';\n\t\t}\n\t}\n\n\tinit_position_attribute(points_count: number, default_value?: Vector3) {\n\t\tconst values = [];\n\t\tif (default_value == null) {\n\t\t\tdefault_value = new Vector3();\n\t\t}\n\n\t\tfor (let i = 0; i < points_count; i++) {\n\t\t\tvalues.push(default_value.x);\n\t\t\tvalues.push(default_value.y);\n\t\t\tvalues.push(default_value.z);\n\t\t}\n\n\t\treturn this._geometry.setAttribute('position', new Float32BufferAttribute(values, 3));\n\t}\n\n\tadd_attribute(name: string, attrib_data: CoreAttributeData) {\n\t\tswitch (attrib_data.type()) {\n\t\t\tcase CoreConstant.ATTRIB_TYPE.STRING:\n\t\t\t\treturn console.log('TODO: to implement');\n\t\t\tcase CoreConstant.ATTRIB_TYPE.NUMERIC:\n\t\t\t\treturn this.add_numeric_attrib(name, attrib_data.size());\n\t\t}\n\t}\n\n\trename_attribute(old_name: string, new_name: string) {\n\t\tif (this.is_attrib_indexed(old_name)) {\n\t\t\tthis.user_data_attribs()[new_name] = lodash_clone(this.user_data_attribs()[old_name]);\n\t\t\tdelete this.user_data_attribs()[old_name];\n\t\t}\n\n\t\tconst old_attrib = this._geometry.getAttribute(old_name);\n\t\tthis._geometry.setAttribute(new_name, new Float32BufferAttribute(old_attrib.array, old_attrib.itemSize));\n\t\treturn this._geometry.deleteAttribute(old_name);\n\t}\n\n\tdelete_attribute(name: string) {\n\t\tif (this.is_attrib_indexed(name)) {\n\t\t\tdelete this.user_data_attribs()[name];\n\t\t}\n\n\t\treturn this._geometry.deleteAttribute(name);\n\t}\n\n\tclone(): BufferGeometry {\n\t\treturn CoreGeometry.clone(this._geometry);\n\t}\n\n\tstatic clone(src_geometry: BufferGeometry): BufferGeometry {\n\t\tlet src_userData;\n\n\t\t// monkey path\n\t\tfor (let attribute_name of Object.keys(src_geometry.attributes)) {\n\t\t\tconst attribute = src_geometry.getAttribute(attribute_name);\n\t\t\tif (attribute.constructor.name == InterleavedBufferAttribute.name) {\n\t\t\t\tMonkeyPatcher.patch(attribute as InterleavedBufferAttribute);\n\t\t\t}\n\t\t}\n\n\t\tconst new_geometry = src_geometry.clone();\n\t\tif ((src_userData = src_geometry.userData) != null) {\n\t\t\tnew_geometry.userData = lodash_cloneDeep(src_userData);\n\t\t}\n\t\treturn new_geometry;\n\t}\n\n\tpoints_count(): number {\n\t\treturn CoreGeometry.points_count(this._geometry);\n\t}\n\n\tstatic points_count(geometry: BufferGeometry): number {\n\t\tlet position;\n\t\tlet count = 0;\n\t\tconst core_geometry = new this(geometry);\n\t\tlet position_attrib_name = 'position';\n\t\tif (core_geometry.marked_as_instance()) {\n\t\t\tposition_attrib_name = 'instancePosition';\n\t\t}\n\n\t\tif ((position = geometry.getAttribute(position_attrib_name)) != null) {\n\t\t\tlet array;\n\t\t\tif ((array = position.array) != null) {\n\t\t\t\tcount = array.length / 3;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t// TODO: use lodash_chunk\n\t// like: lodash_chunk(template_geometry.getAttribute('position').array, 3)\n\tpoints(): CorePoint[] {\n\t\treturn (this._points = this._points || this.points_from_geometry());\n\t}\n\treset_points() {\n\t\tthis._points = undefined;\n\t}\n\tpoints_from_geometry(): CorePoint[] {\n\t\tconst points = [];\n\t\tconst position_attrib = this._geometry.getAttribute(this.position_attrib_name());\n\n\t\tif (position_attrib != null) {\n\t\t\tconst points_count = position_attrib.array.length / 3;\n\t\t\tfor (let point_index = 0; point_index < points_count; point_index++) {\n\t\t\t\tconst point = new CorePoint(this, point_index);\n\n\t\t\t\t// lodash_each lodash_keys(@_geometry.attributes), (attrib_name) =>\n\n\t\t\t\t// \tattribute = @_geometry.getAttribute(attrib_name)\n\t\t\t\t// \titem_size = attribute.itemSize\n\t\t\t\t// \tcurrent_index = point_index  *item_size\n\n\t\t\t\t// \tattrib_value = switch item_size\n\t\t\t\t// \t\twhen 1\n\t\t\t\t// \t\t\tattribute.array[current_index]\n\t\t\t\t// \t\twhen 2\n\t\t\t\t// \t\t\tnew Vector2(\n\t\t\t\t// \t\t\t\tattribute.array[current_index + 0]\n\t\t\t\t// \t\t\t\tattribute.array[current_index + 1]\n\t\t\t\t// \t\t\t\t)\n\t\t\t\t// \t\twhen 3\n\t\t\t\t// \t\t\tnew Vector3(\n\t\t\t\t// \t\t\t\tattribute.array[current_index + 0]\n\t\t\t\t// \t\t\t\tattribute.array[current_index + 1]\n\t\t\t\t// \t\t\t\tattribute.array[current_index + 2]\n\t\t\t\t// \t\t\t\t)\n\n\t\t\t\t// \tpoint.add_attribute(attrib_name, item_size, attrib_value)\n\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\n\t\treturn points;\n\t}\n\n\tstatic geometry_from_points(points: CorePoint[], object_type: ObjectType): BufferGeometry {\n\t\tconst geometry = new BufferGeometry();\n\t\tconst geometry_wrapper = new this(geometry);\n\n\t\tconst first_point = points[0];\n\t\tif (first_point != null) {\n\t\t\tconst old_geometry = first_point.geometry();\n\t\t\tconst old_geometry_wrapper = first_point.geometry_wrapper();\n\n\t\t\t// index\n\t\t\tconst new_index_by_old_index: Dictionary<number> = {};\n\t\t\tlodash_each(points, (point, i) => (new_index_by_old_index[point.index] = i));\n\n\t\t\tconst indices = this._indices_from_points(new_index_by_old_index, old_geometry, object_type);\n\t\t\tif (indices != null && indices.length !== 0) {\n\t\t\t\tgeometry.setIndex(indices);\n\t\t\t}\n\n\t\t\t// attributes\n\t\t\tconst {attributes} = old_geometry;\n\t\t\t// const new_attributes = {}\n\t\t\tfor (let attribute_name of Object.keys(attributes)) {\n\t\t\t\tconst attrib_values = old_geometry_wrapper.user_data_attribs()[attribute_name];\n\t\t\t\tconst is_attrib_indexed = attrib_values != null;\n\n\t\t\t\tif (is_attrib_indexed) {\n\t\t\t\t\tconst new_values = lodash_uniq(points.map((point) => point.attrib_value(attribute_name)));\n\t\t\t\t\tconst new_index_by_value: Dictionary<number> = {};\n\t\t\t\t\tlodash_each(new_values, (new_value, i) => (new_index_by_value[new_value] = i));\n\n\t\t\t\t\tgeometry_wrapper.user_data_attribs()[attribute_name] = new_values;\n\n\t\t\t\t\t// const old_attrib = old_geometry.getAttribute(attribute_name)\n\t\t\t\t\t// const old_attrib_array = old_attrib.array\n\t\t\t\t\tconst new_attrib_indices = [];\n\t\t\t\t\tfor (let point of points) {\n\t\t\t\t\t\t// const old_index = old_attrib_array[point.index()]\n\t\t\t\t\t\tconst new_index = new_index_by_value[point.attrib_value(attribute_name)];\n\t\t\t\t\t\tnew_attrib_indices.push(new_index);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute(attribute_name, new Float32BufferAttribute(new_attrib_indices, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconst values = [];\n\t\t\t\t\tconst attrib_size = attributes[attribute_name].itemSize;\n\t\t\t\t\tfor (let point of points) {\n\t\t\t\t\t\tconst value = point.attrib_value(attribute_name);\n\t\t\t\t\t\tswitch (attrib_size) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tvalues.push(value.x);\n\t\t\t\t\t\t\t\tvalues.push(value.y);\n\t\t\t\t\t\t\t\tvalues.push(value.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute(attribute_name, new Float32BufferAttribute(values, attrib_size));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn geometry;\n\t}\n\n\tstatic _indices_from_points(\n\t\tnew_index_by_old_index: Dictionary<number>,\n\t\told_geometry: BufferGeometry,\n\t\tobject_type: ObjectType\n\t) {\n\t\tconst index_attrib = old_geometry.index;\n\t\tif (index_attrib != null) {\n\t\t\tconst old_indices = index_attrib.array;\n\n\t\t\tconst new_indices: number[] = [];\n\n\t\t\tswitch (object_type) {\n\t\t\t\tcase CoreConstant.OBJECT_TYPE.POINTS:\n\t\t\t\t\tlodash_each(old_indices, function (old_index, i: number) {\n\t\t\t\t\t\tconst new_index = new_index_by_old_index[old_index];\n\t\t\t\t\t\tif (new_index != null) {\n\t\t\t\t\t\t\tnew_indices.push(new_index);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CoreConstant.OBJECT_TYPE.MESH:\n\t\t\t\t\tlodash_each(old_indices, function (old_index, i: number) {\n\t\t\t\t\t\tif (i % 3 === 0) {\n\t\t\t\t\t\t\tconst old_index0 = old_indices[i];\n\t\t\t\t\t\t\tconst old_index1 = old_indices[i + 1];\n\t\t\t\t\t\t\tconst old_index2 = old_indices[i + 2];\n\t\t\t\t\t\t\tconst new_index0 = new_index_by_old_index[old_index0];\n\t\t\t\t\t\t\tconst new_index1 = new_index_by_old_index[old_index1];\n\t\t\t\t\t\t\tconst new_index2 = new_index_by_old_index[old_index2];\n\t\t\t\t\t\t\tif (new_index0 != null && new_index1 != null && new_index2 != null) {\n\t\t\t\t\t\t\t\tnew_indices.push(new_index0);\n\t\t\t\t\t\t\t\tnew_indices.push(new_index1);\n\t\t\t\t\t\t\t\tnew_indices.push(new_index2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CoreConstant.OBJECT_TYPE.LINE_SEGMENTS:\n\t\t\t\t\tlodash_each(old_indices, function (old_index, i: number) {\n\t\t\t\t\t\tif (i % 2 === 0) {\n\t\t\t\t\t\t\tconst old_index0 = old_indices[i];\n\t\t\t\t\t\t\tconst old_index1 = old_indices[i + 1];\n\t\t\t\t\t\t\tconst new_index0 = new_index_by_old_index[old_index0];\n\t\t\t\t\t\t\tconst new_index1 = new_index_by_old_index[old_index1];\n\t\t\t\t\t\t\tif (new_index0 != null && new_index1 != null) {\n\t\t\t\t\t\t\t\tnew_indices.push(new_index0);\n\t\t\t\t\t\t\t\tnew_indices.push(new_index1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn new_indices;\n\t\t}\n\t}\n\n\tstatic merge_geometries(geometries: BufferGeometry[]) {\n\t\tif (geometries.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\n\t\t// 1/3. set the new attrib indices for the indexed attributes\n\t\t//\n\t\tconst core_geometries = geometries.map((geometry) => new CoreGeometry(geometry));\n\t\tconst indexed_attribute_names = core_geometries[0].indexed_attribute_names();\n\n\t\tconst new_values_by_attribute_name: Dictionary<string[]> = {};\n\t\tfor (let indexed_attribute_name of indexed_attribute_names) {\n\t\t\tconst index_by_values: Dictionary<number> = {};\n\t\t\tconst all_geometries_points = [];\n\t\t\tfor (let core_geometry of core_geometries) {\n\t\t\t\tconst geometry_points = core_geometry.points();\n\t\t\t\tfor (let point of geometry_points) {\n\t\t\t\t\tall_geometries_points.push(point);\n\t\t\t\t\tconst value = point.attrib_value(indexed_attribute_name);\n\t\t\t\t\t//value_index = point.attrib_value_index(indexed_attribute_name)\n\t\t\t\t\t// TODO: typescript: that doesn't seem right\n\t\t\t\t\tindex_by_values[value] != null\n\t\t\t\t\t\t? index_by_values[value]\n\t\t\t\t\t\t: (index_by_values[value] = Object.keys(index_by_values).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst values = Object.keys(index_by_values);\n\t\t\tfor (let point of all_geometries_points) {\n\t\t\t\tconst value = point.attrib_value(indexed_attribute_name);\n\t\t\t\tconst new_index = index_by_values[value];\n\t\t\t\tpoint.set_attrib_index(indexed_attribute_name, new_index);\n\t\t\t}\n\n\t\t\tnew_values_by_attribute_name[indexed_attribute_name] = values;\n\t\t}\n\n\t\t//\n\t\t// 2/3. merge the geos\n\t\t//\n\t\tconst merged_geometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n\n\t\t//\n\t\t// 3/3. add the index attrib values\n\t\t//\n\n\t\tconst merged_geometry_wrapper = new this(merged_geometry);\n\t\tObject.keys(new_values_by_attribute_name).forEach((indexed_attribute_name) => {\n\t\t\tconst values = new_values_by_attribute_name[indexed_attribute_name];\n\t\t\tmerged_geometry_wrapper.set_indexed_attribute_values(indexed_attribute_name, values);\n\t\t});\n\n\t\tif (merged_geometry) {\n\t\t\tdelete merged_geometry.userData.mergedUserData;\n\t\t}\n\n\t\treturn merged_geometry;\n\t}\n\n\tsegments() {\n\t\t// const points = this.points();\n\t\tconst index = this.geometry().index?.array || [];\n\t\treturn lodash_chunk(index, 2);\n\t}\n\n\tfaces(): CoreFace[] {\n\t\treturn this.faces_from_geometry();\n\t}\n\tfaces_from_geometry(): CoreFace[] {\n\t\tconst index_array = this.geometry().index?.array || [];\n\t\tconst faces_count = index_array.length / 3;\n\t\treturn lodash_range(faces_count).map((i) => new CoreFace(this, i));\n\t}\n}\n\n// segments_count = 0.5*index.length\n// segments = []\n// lodash_times segments_count, (i)->\n// \tindices = [i, i+1]\n// \tsegments.push(indices) #lodash_map(indices, (index)->points[index])\n\n// segments\n","// events\nexport enum NodeEvent {\n\tCREATED = 'node_created',\n\tDELETED = 'node_deleted',\n\tNAME_UPDATED = 'node_name_update',\n\tOVERRIDE_CLONABLE_STATE_UPDATE = 'node_override_clonable_state_update',\n\tNAMED_OUTPUTS_UPDATED = 'node_named_outputs_updated',\n\tNAMED_INPUTS_UPDATED = 'node_named_inputs_updated',\n\tINPUTS_UPDATED = 'node_inputs_updated',\n\tPARAMS_UPDATED = 'node_params_updated',\n\tUI_DATA_POSITION_UPDATED = 'node_ui_data_position_updated',\n\tUI_DATA_COMMENT_UPDATED = 'node_ui_data_comment_updated',\n\tERROR_UPDATED = 'node_error_updated',\n\tFLAG_BYPASS_UPDATED = 'bypass_flag_updated',\n\tFLAG_DISPLAY_UPDATED = 'display_flag_updated',\n\tSELECTION_UPDATED = 'selection_updated',\n}\n","import {CoreWalker} from '../../../core/Walker';\nimport {DecomposedPath} from '../../../core/DecomposedPath';\n// import {NodeSimple} from '../../../core/graph/NodeSimple'\nimport {BaseParamType} from '../../params/_Base';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport lodash_isString from 'lodash/isString';\nimport lodash_isNumber from 'lodash/isNumber';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {BaseContainer} from '../../containers/_Base';\n\n// type NodeOrParam = BaseNode | BaseParam;\n\nexport abstract class BaseMethod {\n\tpublic node: BaseNodeType;\n\n\tconstructor(public readonly param: BaseParamType) {\n\t\t// this._init_update_dependencies_mode();\n\t\tthis.node = this.param.node;\n\t}\n\n\tstatic required_arguments(): any[] {\n\t\tconsole.warn('Expression.Method._Base.required_arguments virtual method call. Please override');\n\t\treturn [];\n\t}\n\tstatic optional_arguments(): any[] {\n\t\treturn [];\n\t}\n\tstatic min_allowed_arguments_count() {\n\t\treturn this.required_arguments().length;\n\t}\n\tstatic max_allowed_arguments_count() {\n\t\treturn this.min_allowed_arguments_count() + this.optional_arguments().length;\n\t}\n\tstatic allowed_arguments_count(count: number) {\n\t\treturn count >= this.min_allowed_arguments_count() && count <= this.max_allowed_arguments_count();\n\t}\n\n\tprocess_arguments(args: any): Promise<any> {\n\t\tthrow 'Expression.Method._Base.process_arguments virtual method call. Please override';\n\t}\n\n\tasync get_referenced_node_container(index_or_path: number | string): Promise<BaseContainer> {\n\t\tconst referenced_node = this.get_referenced_node(index_or_path);\n\n\t\tif (referenced_node) {\n\t\t\tconst container = await referenced_node.request_container();\n\t\t\tif (container) {\n\t\t\t\tconst core_group = container.core_content();\n\t\t\t\tif (core_group) {\n\t\t\t\t\treturn container;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow `referenced node invalid: ${referenced_node.full_path()}`;\n\t\t} else {\n\t\t\tthrow `invalid input (${index_or_path})`;\n\t\t}\n\t}\n\n\tget_referenced_param(path: string, decomposed_path?: DecomposedPath): BaseParamType | null {\n\t\tconst referenced_param = CoreWalker.find_param(this.node, path, decomposed_path);\n\n\t\t// if (referenced_param != null) {\n\n\t\t// \tif (this.update_dependencies_mode()) {\n\n\t\t// \t\t//param_connect_result = this.param().add_graph_input(referenced_param)\n\t\t// \t\tconst expression_node_connect_result = this.jsep_node()._graph_node.add_graph_input(referenced_param);\n\t\t// \t\t//if !(param_connect_result && expression_node_connect_result)\n\t\t// \t\tif (!expression_node_connect_result) {\n\t\t// \t\t\tthrow \"cannot create infinite graph\";\n\t\t// \t\t}\n\t\t// \t}\n\n\t\t// } else {\n\t\t// \tthrow `no param found for argument ${path}`;\n\t\t// }\n\n\t\treturn referenced_param || null;\n\t}\n\n\tfind_referenced_graph_node(index_or_path: number | string, decomposed_path?: DecomposedPath): CoreGraphNode | null {\n\t\tconst is_index = lodash_isNumber(index_or_path);\n\t\t// let node\n\t\tif (is_index) {\n\t\t\tconst index = index_or_path as number;\n\t\t\tconst input_graph_node = this.node.io.inputs.input_graph_node(index);\n\t\t\treturn input_graph_node;\n\t\t} else {\n\t\t\tconst path = index_or_path as string;\n\t\t\treturn this.get_referenced_node(path, decomposed_path);\n\t\t}\n\t}\n\tget_referenced_node(index_or_path: string | number, decomposed_path?: DecomposedPath): BaseNodeType | null {\n\t\t// if ((index_or_path != null) && (index_or_path.is_a != null) && index_or_path.is_a(BaseNode)) {\n\t\t// \tindex_or_path = index_or_path.full_path();\n\t\t// }\n\t\tif (lodash_isString(index_or_path)) {\n\t\t\tconst path = index_or_path;\n\t\t\treturn CoreWalker.find_node(this.node, path, decomposed_path);\n\t\t} else {\n\t\t\tconst index = index_or_path;\n\t\t\tthis.node.io.inputs.input(index);\n\t\t\treturn this.node.io.inputs.input(index);\n\t\t}\n\n\t\t// if (referenced_node != null) {\n\n\t\t// \tif (this.update_dependencies_mode()) {\n\t\t// \t\t//node_connect_result = this.param().add_graph_input(referenced_node)\n\n\t\t// \t\tconst expression_node_connect_result = this.jsep_node()._graph_node.add_graph_input(referenced_node);\n\t\t// \t\t//if !(node_connect_result && expression_node_connect_result)\n\t\t// \t\tif (!expression_node_connect_result) {\n\t\t// \t\t\tthrow \"cannot create infinite graph\";\n\t\t// \t\t}\n\t\t// \t}\n\n\t\t// } else {\n\t\t// \tthrow `no node found for argument ${index_or_path}`;\n\t\t// }\n\n\t\t// return referenced_node;\n\t}\n\n\tfind_dependency(args: any): MethodDependency | null {\n\t\treturn null;\n\t}\n\n\tprotected create_dependency_from_index_or_path(index_or_path: number | string): MethodDependency | null {\n\t\t// console.log(\"is_index\", index_or_path)\n\t\tconst decomposed_path = new DecomposedPath();\n\t\tconst node = this.find_referenced_graph_node(index_or_path, decomposed_path);\n\t\tif (node) {\n\t\t\treturn this.create_dependency(node, index_or_path, decomposed_path);\n\t\t} else {\n\t\t\tconsole.warn('node not found for path', index_or_path);\n\t\t}\n\t\treturn null;\n\t}\n\tprotected create_dependency(\n\t\tnode: CoreGraphNode,\n\t\tindex_or_path: number | string,\n\t\tdecomposed_path?: DecomposedPath\n\t): MethodDependency | null {\n\t\t// if (CoreObject.is_a(node, TypedNode) || CoreObject.is_a(node, TypedParam)) {\n\t\t// \tconst node_or_param = node as BaseNodeType;\n\t\t// \treturn MethodDependency.create(this.param, index_or_path, node_or_param, decomposed_path?.named_nodes);\n\t\t// }\n\t\tconst dependency = MethodDependency.create(this.param, index_or_path, node, decomposed_path);\n\t\treturn dependency;\n\t}\n\n\t//\n\t//\n\t// UPDATE DEPENDENCIES\n\t//\n\t//\n\t// _init_update_dependencies_mode() {\n\t// \treturn this.set_update_dependencies_mode(false);\n\t// }\n\t// set_update_dependencies_mode(mode){\n\t// \treturn this._update_dependencies_mode = mode;\n\t// }\n\t// update_dependencies_mode() {\n\t// \treturn this._update_dependencies_mode;\n\t// }\n\t// update_dependencies() {}\n}\n//\n","import {BaseNodeClass} from './nodes/_Base';\nimport {PolyScene} from './scene/PolyScene';\nimport {RenderersController} from './poly/RenderersController';\nimport {NodesRegister, RegisterOptions, BaseNodeConstructor} from './poly/NodesRegister';\nimport {NodeContext} from './poly/NodeContext';\n// import {ViewerLoadersManager} from '/viewers/LoadersManager';\n\nexport class Poly {\n\tstatic _instance: Poly | undefined;\n\trenderers_controller: RenderersController = new RenderersController();\n\tnodes_register: NodesRegister = new NodesRegister();\n\n\tscenes_by_uuid: Dictionary<PolyScene> = {};\n\t_env: string | undefined;\n\t// public viewer_loaders_manager: ViewerLoadersManager = new ViewerLoadersManager();\n\n\tstatic instance() {\n\t\treturn (this._instance = this._instance || new Poly());\n\t}\n\tprivate constructor() {}\n\n\tregister_node(node: BaseNodeConstructor, tab_menu_category?: string, options?: RegisterOptions) {\n\t\tthis.nodes_register.register_node(node, tab_menu_category, options);\n\t}\n\tregistered_nodes(parent_context: NodeContext, type: string): Dictionary<typeof BaseNodeClass> {\n\t\treturn this.nodes_register.registered_nodes(parent_context, type);\n\t}\n\tin_worker_thread() {\n\t\treturn false;\n\t}\n\tdesktop_controller(): any {}\n\t// notify_scene_loaded(scene: PolyScene) {}\n\n\tplayer_mode(): boolean {\n\t\treturn false;\n\t}\n\n\tlog(...args: any[]) {\n\t\tconsole.log(...args);\n\t}\n\tset_env(env: string) {\n\t\tthis._env = env;\n\t}\n\tget env() {\n\t\treturn this._env;\n\t}\n}\n\n// declare global {\n// \tconst POLY: Poly;\n// }\n\n// declare global {\n// \tinterface Window {\n// \t\tPOLY: Poly;\n// \t}\n// }\n// make sure not to have library: 'POLY' in webpack for this to work\n// export const POLY = Poly.instance();\n","import {CoreGraph, CoreGraphNodeId} from './CoreGraph';\nimport {DirtyController, PostDirtyHook} from './DirtyController';\nimport {PolyScene} from '../../engine/scene/PolyScene';\n// import {SceneNodeDirtyable} from './SceneNodeDirtyable';\n\n// type Constructor<T = {}> = new (...args: any[]) => T;\nexport class CoreGraphNode {\n\t// protected _scene: PolyScene;\n\tprivate _graph: CoreGraph;\n\tprivate _graph_node_id: CoreGraphNodeId;\n\tprivate _dirty_controller: DirtyController = new DirtyController(this);\n\t// protected _name: string;\n\tconstructor(protected _scene: PolyScene, protected _name: string) {\n\t\t// super(...args);\n\t\tthis._graph_node_id = _scene.graph.next_id();\n\t\t_scene.graph.setNode(this);\n\t\tthis._graph = _scene.graph;\n\t}\n\tget name() {\n\t\treturn this._name;\n\t}\n\tset_name(name: string) {\n\t\tthis._name = name;\n\t}\n\t// set_scene(scene: PolyScene) {\n\t// \tthis._scene = scene;\n\t// \t// this._graph_node = new CoreGraphNode();\n\t// \t// this._graph_node.init(this._scene.graph);\n\t// \tthis._graph = scene.graph;\n\t// \tthis._graph_node_id = this.graph.next_id();\n\t// \tthis.graph.setNode(this);\n\t// }\n\t// init(graph: CoreGraph) {\n\t// \tthis._graph = graph;\n\t// \tthis._id = this.graph.next_id();\n\t// \tthis.graph.setNode(this);\n\t// }\n\t// full_path: ->\n\t// \t\"node with unknown path #{this.graph_node_id}\"\n\tget scene() {\n\t\treturn this._scene;\n\t}\n\tget graph() {\n\t\treturn this._graph;\n\t}\n\tget graph_node_id(): CoreGraphNodeId {\n\t\treturn this._graph_node_id;\n\t}\n\n\t//\n\t//\n\t// DIRTY CONTROLLER\n\t//\n\t//\n\tget dirty_controller() {\n\t\treturn this._dirty_controller;\n\t}\n\tset_dirty(trigger?: CoreGraphNode | null) {\n\t\ttrigger = trigger || this;\n\t\tthis._dirty_controller.set_dirty(trigger);\n\t}\n\tset_successors_dirty(trigger?: CoreGraphNode) {\n\t\tthis._dirty_controller.set_successors_dirty(trigger);\n\t}\n\tremove_dirty_state() {\n\t\tthis._dirty_controller.remove_dirty_state();\n\t}\n\tget is_dirty() {\n\t\treturn this._dirty_controller.is_dirty;\n\t}\n\tadd_post_dirty_hook(name: string, callback: PostDirtyHook) {\n\t\tthis._dirty_controller.add_post_dirty_hook(name, callback);\n\t}\n\n\t//\n\t//\n\t// GRAPH\n\t//\n\t//\n\n\t// private graph_add() {\n\t// }\n\tgraph_remove() {\n\t\tthis.graph.removeNode(this);\n\t}\n\n\t// _graph_connect: (src, dest)->\n\t// \tthis.graph().connect(src, dest)\n\tadd_graph_input(src: CoreGraphNode): boolean {\n\t\treturn this.graph.connect(src, this);\n\t}\n\tremove_graph_input(src: CoreGraphNode) {\n\t\tthis.graph.disconnect(src, this);\n\t}\n\n\t// graph_disconnect: (src, dest)->\n\t// \tthis.graph().disconnect(src, dest)\n\n\tgraph_disconnect_predecessors() {\n\t\tthis.graph.disconnect_predecessors(this);\n\t}\n\tgraph_disconnect_successors() {\n\t\tthis.graph.disconnect_successors(this);\n\t}\n\n\tgraph_predecessor_ids(): CoreGraphNodeId[] {\n\t\treturn this.graph.predecessor_ids(this._graph_node_id) || [];\n\t}\n\tgraph_predecessors(): CoreGraphNode[] {\n\t\treturn this.graph.predecessors(this);\n\t}\n\tgraph_successors(): CoreGraphNode[] {\n\t\treturn this.graph.successors(this);\n\t}\n\tgraph_all_predecessors(): CoreGraphNode[] {\n\t\treturn this.graph.all_predecessors(this);\n\t}\n\tgraph_all_successors(): CoreGraphNode[] {\n\t\treturn this.graph.all_successors(this);\n\t}\n}\n","import {TypedNode} from '../_Base';\n\nimport {Material} from 'three/src/materials/Material';\n\n// import DisplayFlag from '../Concerns/DisplayFlag';\n\nimport {MaterialContainer} from '../../containers/Material';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {TypedContainerController} from '../utils/ContainerController';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\n// type RenderHook = (object: Object3D) => void;\n\nexport abstract class TypedMatNode<M extends Material, K extends NodeParamsConfig> extends TypedNode<\n\t'MATERIAL',\n\tBaseMatNodeType,\n\tK\n> {\n\tcontainer_controller: TypedContainerController<MaterialContainer> = new TypedContainerController<MaterialContainer>(\n\t\tthis,\n\t\tMaterialContainer\n\t);\n\tstatic node_context(): NodeContext {\n\t\treturn NodeContext.MAT;\n\t}\n\n\tprotected _material: M | undefined;\n\t// protected _update_methods: RenderHook[] = [];\n\n\tinitialize_base_node() {\n\t\tsuper.initialize_base_node();\n\t\t// this._update_methods = [];\n\n\t\t// this._init_bypass_flag({\n\t\t// \thas_bypass_flag: false,\n\t\t// });\n\t\t// this._init_display_flag({\n\t\t// \thas_display_flag: false,\n\t\t// });\n\n\t\t// this.set_inputs_count_to_zero();\n\t\t// this._init_outputs({has_outputs: false});\n\n\t\t// this.container_controller.init(MaterialContainer);\n\n\t\tthis.name_controller.add_post_set_full_path_hook(this.set_material_name.bind(this));\n\n\t\tthis.add_post_dirty_hook(\n\t\t\t'_cook_main_without_inputs_when_dirty',\n\t\t\tthis._cook_main_without_inputs_when_dirty_bound\n\t\t);\n\n\t\t// it's probably good not to have to create any material in the constructor\n\t\t// but only on request\n\t\t// this._material = this.create_material();\n\t\t// this.set_material(this._material);\n\t}\n\tnode_sibbling(name: string): BaseMatNodeType | null {\n\t\treturn super.node_sibbling(name) as BaseMatNodeType | null;\n\t}\n\tprivate _cook_main_without_inputs_when_dirty_bound = this._cook_main_without_inputs_when_dirty.bind(this);\n\tprivate async _cook_main_without_inputs_when_dirty() {\n\t\tawait this.cook_controller.cook_main_without_inputs();\n\t}\n\n\tprivate set_material_name() {\n\t\t// ensures the material has a full path set\n\t\t// allowing the render hook to be set\n\t\t//this.set_material(@_material)\n\t\tif (this._material) {\n\t\t\tthis._material.name = this.full_path();\n\t\t}\n\t}\n\n\tabstract create_material(): M;\n\tget material() {\n\t\treturn (this._material = this._material || this.create_material());\n\t}\n\t//\n\n\tset_material(material: Material) {\n\t\tthis.set_container(material);\n\t}\n\n\t// add_update_method(method, arg?: any) {\n\t// \tthis._update_methods.push([method.bind(this), arg]);\n\t// }\n\n\t//run_update_methods: ->\n\n\tadd_render_hook(object: Object3D) {}\n}\n//delete object.onBeforeRender\n\nexport type BaseMatNodeType = TypedMatNode<Material, any>;\nexport class BaseMatNodeClass extends TypedMatNode<Material, any> {\n\tcreate_material() {\n\t\treturn new Material();\n\t}\n}\n","import {Object3D} from 'three/src/core/Object3D';\n\nimport {TypedNode, BaseNodeType} from '../_Base';\n// import {BaseSopNode} from '../sop/_Base';\n// import {LookAt} from './Concerns/LookAt';\nimport {ObjectContainer} from '../../containers/Object';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {TypedContainerController} from '../utils/ContainerController';\nimport {ObjectsManagerNode} from '../manager/ObjectsManager';\nimport {Group} from 'three/src/objects/Group';\n\nconst INPUT_OBJECT_NAME = 'parent object';\nconst DEFAULT_INPUT_NAMES = [INPUT_OBJECT_NAME, INPUT_OBJECT_NAME, INPUT_OBJECT_NAME, INPUT_OBJECT_NAME];\n\ninterface Object3DWithNode extends Object3D {\n\tnode: BaseNodeType;\n}\n// interface BaseObjNodeVisitor extends BaseNodeVisitor {\n// \tvisit_node_obj: (node: BaseObjNodeType) => any;\n// }\n\nexport enum ObjNodeRenderOrder {\n\tMANAGER = 0,\n\tFOG = 1,\n\tCAMERA = 2,\n\tLIGHT = 3,\n\tEVENT = 4,\n\tMAT = 5,\n}\n\nexport class TypedObjNode<O extends Object3D, K extends NodeParamsConfig> extends TypedNode<\n\t'OBJECT',\n\tBaseObjNodeType,\n\tK\n> {\n\tcontainer_controller: TypedContainerController<ObjectContainer> = new TypedContainerController<ObjectContainer>(\n\t\tthis,\n\t\tObjectContainer\n\t);\n\tpublic readonly render_order: number = ObjNodeRenderOrder.MANAGER;\n\t// public readonly add_to_hierarchy: boolean = true;\n\tstatic node_context(): NodeContext {\n\t\treturn NodeContext.OBJ;\n\t}\n\tstatic displayed_input_names(): string[] {\n\t\treturn DEFAULT_INPUT_NAMES;\n\t}\n\n\t// protected _main_group = new Group();\n\tprotected _children_group = new Group();\n\tprotected _object!: O;\n\t// _sop_loaded: boolean = false;\n\n\t// protected _look_at_controller: LookAtController | undefined;\n\t// get look_at_controller(): LookAtController {\n\t// \treturn (this._look_at_controller = this._look_at_controller || new LookAtController(this));\n\t// }\n\t// protected _transform_controller: TransformController | undefined;\n\t// get transform_controller(): TransformController {\n\t// \treturn (this._transform_controller = this._transform_controller || new TransformController(this));\n\t// }\n\n\tprotected _attachable_to_hierarchy: boolean = true;\n\tget attachable_to_hierarchy() {\n\t\treturn this._attachable_to_hierarchy;\n\t}\n\tprotected _used_in_scene: boolean = true;\n\tget used_in_scene() {\n\t\treturn this._used_in_scene;\n\t}\n\t// TODO call set_used_in_scene(false) when node is deleted\n\tset_used_in_scene(state: boolean) {\n\t\tthis._used_in_scene = state;\n\t\tif (!this.scene.loading_controller.is_loading) {\n\t\t\tconst root = this.parent as ObjectsManagerNode;\n\t\t\tif (root) {\n\t\t\t\troot.update_object(this);\n\t\t\t}\n\t\t}\n\t}\n\tadd_object_to_parent(parent: Object3D) {\n\t\tif (this.attachable_to_hierarchy) {\n\t\t\tparent.add(this.object);\n\t\t}\n\t}\n\tremove_object_from_parent() {\n\t\tif (this.attachable_to_hierarchy) {\n\t\t\tconst parent = this.object.parent;\n\t\t\tif (parent) {\n\t\t\t\tparent.remove(this.object);\n\t\t\t}\n\t\t}\n\t}\n\n\t// protected _displayed_in_scene: boolean = true;\n\t// get displayed_in_scene() {\n\t// \treturn this._displayed_in_scene;\n\t// }\n\t// set_displayed_in_scene(state:boolean){\n\t// \tthis._displayed_in_scene = state;\n\t// }\n\n\tinitialize_base_node() {\n\t\t// this.container_controller.init(ObjectContainer);\n\t\tthis._object = this._create_object_with_attributes();\n\t\t// this._init_container_owner('Object');\n\t\t// this.flags.add_display();\n\t\tthis.name_controller.add_post_set_full_path_hook(this.set_object_name.bind(this));\n\t\tthis.set_object_name();\n\n\t\t// this.io.inputs.add_hook(() => {\n\t\t// \tthis.transform_controller.on_input_updated();\n\t\t// });\n\t\t// this._init_bypass_flag({\n\t\t// \thas_bypass_flag: false,\n\t\t// });\n\n\t\t// this._sop_loaded = false; // TODO: typescript, this should be moved to GeoObjNode\n\t}\n\tnode_sibbling(name: string): BaseObjNodeType | null {\n\t\treturn super.node_sibbling(name) as BaseObjNodeType | null;\n\t}\n\n\t// this.add_param 'toggle', 'display', 1,\n\t// \tcallback: this.post_state_display_flag.bind(this)\n\n\t// cook: ->\n\t// \tsuper\n\t// \tconsole.error(this.constructor, 'cook method is not overloaded')\n\n\t// post_set_dirty: (original_trigger_graph_node, direct_trigger_graph_node)->\n\t// \t#console.log(\"#{this.full_path()} set dirty by #{original_trigger_graph_node?.full_path()} and #{direct_trigger_graph_node?.full_path()}\")\n\t// \tthis.is_displayed (is_displayed)=>\n\t// \t\tif is_displayed\n\t// \t\t\tthis.parent().update_object(this)\n\n\t//post_remove_dirty_state: ->\n\t//console.log(\"obj #{this.full_path()} remove dirty\")\n\t//console.log(\"remove_dirty_state: #{this.full_path()}\")\n\n\t// set_object: (object)->\n\n\t// \tif object?\n\t// \t\tobject.name = this.name()\n\t// \t\tthis.set_container(object)\n\t// get main_group() {\n\t// \treturn this._main_group;\n\t// }\n\tget children_group() {\n\t\treturn this._children_group;\n\t}\n\tget object() {\n\t\treturn this._object; //= this._object || this._create_object_with_attributes()\n\t}\n\n\t_create_object_with_attributes(): O {\n\t\tconst object = this.create_object();\n\t\t// object.name = 'content';\n\t\t// if (object != null) {\n\t\t// \tobject.name = this.full_path();\n\t\t(object as Object3DWithNode).node = this;\n\t\t// }\n\t\t// this._main_group.add(this._children_group);\n\t\tobject.add(this._children_group);\n\t\treturn object as O;\n\t}\n\tprivate set_object_name() {\n\t\tif (this._object) {\n\t\t\tthis._object.name = this.full_path();\n\t\t\tthis._children_group.name = `${this.full_path()}:parented_outputs`;\n\t\t}\n\t}\n\t// private set_group_name() {\n\t// \t// ensures the material has a full path set\n\t// \t// allowing the render hook to be set\n\t// \t//this.set_material(@_material)\n\t// \tconst group = this.group;\n\t// \tif (group) {\n\t// \t\tgroup.name = this.full_path();\n\t// \t}\n\t// }\n\n\tcreate_object(): Object3D {\n\t\treturn new Object3D();\n\t}\n\n\t// request_display_node() {}\n\n\tis_display_node_cooking(): boolean {\n\t\treturn false;\n\t}\n\n\t// post_state_display_flag() {\n\t// \tconst object = this.object;\n\t// \tif (object != null) {\n\t// \t\tconst displayed = this.is_displayed();\n\t// \t\tif (displayed) {\n\t// \t\t\tobject.visible = displayed;\n\n\t// \t\t\tif (!this._sop_loaded) {\n\t// \t\t\t\tthis.request_display_node();\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tis_displayed(): boolean {\n\t\treturn this.flags?.display?.active || false;\n\t\t// if (callback == null) {\n\t\t// \tthrow 'no callback given to is_displayed';\n\t\t// }\n\n\t\t// const display_flag_state = this.display_flag_state();\n\t\t// return callback(display_flag_state);\n\t}\n\t// if !display_flag_state\n\t// \tcallback(false)\n\n\t// else\n\t// \tthis.param('display').eval (val)->\n\t// \t\tcallback(val)\n\n\t// accepts_visitor<T extends NodeVisitor>(visitor: T): ReturnType<T['visit_node_obj']> {\n\t// \treturn visitor.visit_node_obj(this);\n\t// }\n\n\t// replaces Dirtyable (TODO: try and replace this method name)\n\t// protected _init_dirtyable_hook() {\n\t// this.add_post_dirty_hook(this._cook_main_without_inputs_later.bind(this));\n\t// }\n\t// private _cook_main_without_inputs_later() {\n\t// \tconst c = () => {\n\t// \t\tthis.cook_controller.cook_main_without_inputs();\n\t// \t};\n\t// \tsetTimeout(c, 0);\n\t// \t// this.eval_all_params().then( ()=>{ this.cook() } )\n\t// }\n}\n\nexport type BaseObjNodeType = TypedObjNode<Object3D, any>;\nexport class BaseObjNodeClass extends TypedObjNode<Object3D, any> {}\n","import {Mesh} from 'three/src/objects/Mesh';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PlaneBufferGeometry} from 'three/src/geometries/PlaneGeometry';\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","import {Euler} from 'three/src/math/Euler';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Vector3} from 'three/src/math/Vector3';\n\n// import {Object3D} from 'three/src/core/Object3D';\n// import {BaseTransformedObjNodeType} from '../_BaseTransformed';\nimport {CoreMath} from '../../../../core/math/_Module';\nimport {CoreTransform, SetParamsFromMatrixOptions} from '../../../../core/Transform';\n// import {BaseObjNodeType} from '../_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\n// import {NodeContext} from '../../../poly/NodeContext';\nimport {TypedObjNode, BaseObjNodeType} from '../_Base';\nimport {Object3D} from 'three/src/core/Object3D';\n// import {FlagsControllerD} from '../../utils/FlagsController';\n// import {LookAtController} from './LookAtController';\nexport function TransformedParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\ttransform = ParamConfig.FOLDER();\n\t\tt = ParamConfig.VECTOR3([0, 0, 0]);\n\t\tr = ParamConfig.VECTOR3([0, 0, 0]);\n\t\ts = ParamConfig.VECTOR3([1, 1, 1]);\n\t\tscale = ParamConfig.FLOAT(1);\n\t\t// look_at = ParamConfig.OPERATOR_PATH('', {node_selection: {context: NodeContext.OBJ}});\n\t\t// up = ParamConfig.VECTOR3([0, 1, 0]);\n\t\t// pivot = ParamConfig.VECTOR3([0, 0, 0]);\n\t};\n}\nclass TransformedParamsConfig extends TransformedParamConfig(NodeParamsConfig) {}\nexport class TransformedObjNode extends TypedObjNode<Object3D, TransformedParamsConfig> {\n\t// public readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\treadonly transform_controller: TransformController = new TransformController(this);\n\t// get transform_controller(): TransformController {\n\t// \treturn this._transform_controller; // = this._transform_controller || new TransformController(this));\n\t// }\n}\n\nexport class TransformController {\n\tconstructor(private node: TransformedObjNode) {}\n\n\t// protected _look_at_controller = new LookAtController(this.node);\n\t// get look_at_controller(): LookAtController {\n\t// \treturn (this._look_at_controller = this._look_at_controller || new LookAtController(this));\n\t// }\n\n\tinitialize_node() {\n\t\t// not sure we should change if it is used in the scene, as parented children may still be\n\t\t// this.node.flags.display.add_hook(() => {\n\t\t// \t// this.node.set_used_in_scene(this.node.flags.display.active || false);\n\t\t// \tthis.node.object.visible = this.node.flags.display.active;\n\t\t// });\n\t\t// this.node.set_used_in_scene(true);\n\n\t\tthis.node.io.inputs.set_count(0, 1);\n\t\tthis.node.io.inputs.set_depends_on_inputs(false);\n\t\tthis.node.io.outputs.set_has_one_output();\n\t\tthis.node.io.inputs.add_on_set_input_hook('on_input_updated', () => {\n\t\t\tthis.on_input_updated();\n\t\t});\n\n\t\tconst hook_name = '_cook_main_without_inputs_when_dirty';\n\t\tif (!this.node.dirty_controller.has_hook(hook_name)) {\n\t\t\tthis.node.dirty_controller.add_post_dirty_hook(hook_name, this._cook_main_without_inputs_when_dirty_bound);\n\t\t}\n\t}\n\t// TODO: this will have to be checked via the parent, when I will have obj managers at lower levels than root\n\tprivate _cook_main_without_inputs_when_dirty_bound = this._cook_main_without_inputs_when_dirty.bind(this);\n\tprivate async _cook_main_without_inputs_when_dirty() {\n\t\t// if (this.node.used_in_scene) {\n\t\tawait this.node.cook_controller.cook_main_without_inputs();\n\t\t// }\n\t}\n\n\tstatic on_input_updated(node: BaseObjNodeType) {\n\t\tif (node.io.inputs.input(0) != null) {\n\t\t\tnode.root.add_to_parent_transform(node);\n\t\t} else {\n\t\t\tnode.root.remove_from_parent_transform(node);\n\t\t}\n\t}\n\ton_input_updated() {\n\t\tTransformController.on_input_updated(this.node);\n\t}\n\n\tupdate(matrix?: Matrix4) {\n\t\t// const object = this.node.object;\n\t\t// const update_full_matrix = false; // if true the camera controls do not work anymore\n\t\t//matrix = Core.Transform.matrix_from_node_with_transform_params(this)\n\n\t\t// if (object) {\n\t\t// if update_full_matrix\n\t\t// \tobject.matrixAutoUpdate = false\n\t\t// \tobject.matrix = matrix\n\t\t// else\n\n\t\t// if (this._look_at_controller.active == true) {\n\t\t// \treturn this._look_at_controller.compute(); //this._use_look_at_param();\n\t\t// } else {\n\t\tthis.update_transform_with_matrix(matrix);\n\t\t// }\n\t\t// if matrix?\n\t\t// \t# do not apply to cameras with control\n\t\t// \tobject.matrixAutoUpdate = false\n\t\t// \tobject.matrix = matrix\n\t\t// else\n\t\t// \tthis.update_transform_from_params()\n\t\t// } else {\n\t\t// \tconsole.warn(`no object to update for ${this.node.full_path()}`);\n\t\t// \t// return false;\n\t\t// }\n\t}\n\n\tupdate_transform_with_matrix(matrix?: Matrix4) {\n\t\t//console.warn \"no object to update for #{this.full_path()}\"\n\t\tconst object = this.node.object;\n\t\t//matrix ?= Core.Transform.matrix_from_node_with_transform_params(this)\n\t\tif (matrix != null && !matrix.equals(object.matrix)) {\n\t\t\t// do not apply to cameras with control\n\n\t\t\tobject.matrixAutoUpdate = false;\n\t\t\tobject.matrix = matrix;\n\n\t\t\treturn object.dispatchEvent({type: 'change'});\n\t\t} else {\n\t\t\treturn this.update_transform_from_params();\n\t\t}\n\t}\n\n\tprivate _update_transform_from_params_scale = new Vector3();\n\tupdate_transform_from_params() {\n\t\tconst object = this.node.object;\n\t\tif (object) {\n\t\t\tconst position: Vector3 = this.node.pv.t;\n\t\t\t//quaternion = new Quaternion()\n\t\t\tconst rotation: Vector3 = this.node.pv.r;\n\n\t\t\tthis._update_transform_from_params_scale.copy(this.node.pv.s).multiplyScalar(this.node.pv.scale);\n\t\t\t// const scale: Vector3 = this.node.pv.s\n\t\t\t// \t.clone()\n\t\t\t// \t.multiplyScalar(this.node.pv.scale);\n\t\t\t//matrix.decompose( position, quaternion, scale )\n\n\t\t\tobject.matrixAutoUpdate = false;\n\t\t\tobject.position.copy(position);\n\t\t\t//object.quaternion.copy(quaternion)\n\t\t\tconst radians = [\n\t\t\t\tCoreMath.degrees_to_radians(rotation.x),\n\t\t\t\tCoreMath.degrees_to_radians(rotation.y),\n\t\t\t\tCoreMath.degrees_to_radians(rotation.z),\n\t\t\t];\n\t\t\tconst euler = new Euler(\n\t\t\t\tradians[0],\n\t\t\t\tradians[1],\n\t\t\t\tradians[2]\n\t\t\t\t//'XYZ'\n\t\t\t);\n\t\t\tobject.rotation.copy(euler);\n\t\t\tobject.scale.copy(this._update_transform_from_params_scale);\n\t\t\tobject.matrixAutoUpdate = true;\n\t\t\tobject.updateMatrix();\n\n\t\t\tobject.dispatchEvent({type: 'change'});\n\t\t}\n\t}\n\n\tset_params_from_matrix(matrix: Matrix4, options: SetParamsFromMatrixOptions = {}) {\n\t\tCoreTransform.set_params_from_matrix(matrix, this.node, options);\n\t}\n}\n","/// <reference path=\"../../custom_typings/math.d.ts\" />\n\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Quaternion} from 'three/src/math/Quaternion';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Euler} from 'three/src/math/Euler';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {MathUtils} from 'three/src/math/MathUtils';\n\nimport {BaseNodeType} from '../engine/nodes/_Base';\n\nconst ROTATION_ORDER = 'XYZ';\n\nexport interface SetParamsFromMatrixOptions {\n\tscale?: boolean;\n}\n\n// TODO: remove the \"new\" in this whole file\n// const euler = new Euler(0, 0, 0, ROTATION_ORDER)\n\nexport class CoreTransform {\n\t// static create_params(node: BaseNodeType) {\n\t// \tnode.add_param(ParamType.VECTOR3, 't', [0, 0, 0]);\n\t// \tnode.add_param(ParamType.VECTOR3, 'r', [0, 0, 0]);\n\t// \tnode.add_param(ParamType.VECTOR3, 's', [1, 1, 1]);\n\t// \tnode.add_param(ParamType.FLOAT, 'scale', 1, {range: [0, 10]});\n\t// \tnode.add_param(ParamType.OPERATOR_PATH, 'look_at', '');\n\t// \tnode.add_param(ParamType.VECTOR3, 'up', [0, 1, 0]);\n\t// }\n\n\t// static matrix_from_node_with_transform_params(node: BaseNodeType): Matrix4 {\n\t// \tconst t = node.params.vector3('t');\n\t// \tconst r = node.params\n\t// \t\t.vector3('r')\n\t// \t\t.clone()\n\t// \t\t.multiplyScalar(Math.PI / 180);\n\t// \tconst s = node.params.vector3('s');\n\t// \tconst scale = node.params.float('scale');\n\t// \treturn this.matrix(t, r, s, scale);\n\t// }\n\n\t// if this is done, make sure to use eval with a  callback\n\t// @matrix_from_params: (node) ->\n\t// \tt = node.param('t').eval()\n\t// \tr = node.param('r').eval().multiplyScalar( Math.PI / 180 )\n\t// \ts = node.param('s').eval()\n\t// \tscale = node.param('scale').eval()\n\t// \tthis.matrix(t, r, s, scale)\n\n\tstatic set_params_from_matrix(matrix: Matrix4, node: BaseNodeType, options: SetParamsFromMatrixOptions = {}) {\n\t\tlet update_scale = options['scale'];\n\t\tif (update_scale == null) {\n\t\t\tupdate_scale = true;\n\t\t}\n\n\t\t// EPSILON = 0.0000001\n\t\t// PRECISION = 1000\n\t\t// components = ['x', 'y', 'z']\n\n\t\tconst position = new Vector3();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3();\n\t\tmatrix.decompose(position, quaternion, scale);\n\n\t\tconst euler = new Euler().setFromQuaternion(quaternion);\n\t\tconst rotation = euler.toVector3();\n\t\trotation.divideScalar(Math.PI / 180);\n\n\t\t// limit precision of position and rotation\n\t\t// lodash_each [position, rotation], (vector)->\n\t\t// \tlodash_each ['x', 'y', 'z'], (c)->\n\t\t// \t\tval = vector[c]\n\t\t// \t\tapproximation = parseInt(val * PRECISION) / PRECISION\n\t\t// \t\tvector[c] = approximation\n\n\t\t// round scale if we get values like 0.9999999999 or 1.00000000001\n\t\t// lodash_each ['x', 'y', 'z'], (c)->\n\t\t// \tval = scale[c]\n\t\t// \trounded = Math.round(val)\n\t\t// \tif Math.abs(val - rounded) < EPSILON\n\t\t// \t\tscale[c] = rounded\n\n\t\tnode.scene.batch_update(() => {\n\t\t\tnode.params.set_vector3('r', rotation.toArray() as Number3);\n\t\t\tnode.params.set_vector3('t', position.toArray() as Number3);\n\t\t\tnode.params.set_vector3('s', scale.toArray() as Number3);\n\t\t\tif (update_scale) {\n\t\t\t\tnode.params.set_float('scale', 1);\n\t\t\t}\n\t\t});\n\t}\n\t// this.object().position.copy(position)\n\t// this.object().quaternion.copy(quaternion)\n\t// this.object().scale.copy(scale)\n\n\tstatic set_params_from_object(object: Object3D, node: BaseNodeType) {\n\t\tconst position = object.position.toArray() as Number3;\n\t\tconst rotation = object.rotation.toArray().map((c) => c * (180 / Math.PI)) as Number3;\n\n\t\tnode.scene.batch_update(() => {\n\t\t\tnode.params.set_vector3('t', position);\n\t\t\tnode.params.set_vector3('r', rotation);\n\t\t});\n\t}\n\n\t// static translation_matrix(x: number, y: number, z: number): Matrix4 {\n\t// \tconst t = new Vector3(x, y, z);\n\t// \tconst quaternion = new Quaternion();\n\t// \tconst s = new Vector3(1, 1, 1);\n\n\t// \tconst matrix = new Matrix4();\n\t// \tmatrix.compose(t, quaternion, s);\n\t// \treturn matrix;\n\t// }\n\n\tprivate _translation_matrix: Matrix4 = new Matrix4();\n\tprivate _translation_matrix_q = new Quaternion();\n\tprivate _translation_matrix_s = new Vector3(1, 1, 1);\n\ttranslation_matrix(t: Vector3): Matrix4 {\n\t\tthis._translation_matrix.compose(t, this._translation_matrix_q, this._translation_matrix_s);\n\t\treturn this._translation_matrix;\n\t}\n\n\tstatic matrix_quaternion(matrix: Matrix4): Quaternion {\n\t\tconst t = new Vector3();\n\t\tconst quat = new Quaternion();\n\t\tconst s = new Vector3();\n\t\tmatrix.decompose(t, quat, s);\n\t\treturn quat;\n\t}\n\n\t// static matrix(t: Vector3, r: Vector3, s: Vector3, scale: number) {\n\t// \t// if I don't clone here, it created issues in the transform SOP\n\t// \ts = s.clone().multiplyScalar(scale);\n\n\t// \tconst quaternion = new Quaternion();\n\t// \tconst euler = new Euler(r.x, r.y, r.z, ROTATION_ORDER);\n\t// \tquaternion.setFromEuler(euler);\n\n\t// \tconst matrix = new Matrix4();\n\t// \tmatrix.compose(t, quaternion, s);\n\t// \treturn matrix;\n\t// }\n\tprivate _matrix = new Matrix4().identity();\n\tprivate _matrix_q = new Quaternion();\n\tprivate _matrix_e = new Euler();\n\tprivate _matrix_s = new Vector3();\n\tmatrix(t: Vector3, r: Vector3, s: Vector3, scale: number) {\n\t\tthis._matrix_e.set(MathUtils.degToRad(r.x), MathUtils.degToRad(r.y), MathUtils.degToRad(r.z), ROTATION_ORDER);\n\t\tthis._matrix_q.setFromEuler(this._matrix_e);\n\n\t\tthis._matrix_s.copy(s).multiplyScalar(scale);\n\n\t\tthis._matrix.compose(t, this._matrix_q, this._matrix_s);\n\t\treturn this._matrix;\n\t}\n\n\t// static rotate_geometry(geometry: BufferGeometry, vec_origin: Vector3, vec_dest: Vector3) {\n\t// \tconst quaternion = new Quaternion();\n\t// \tquaternion.setFromUnitVectors(vec_origin, vec_dest.clone().normalize());\n\t// \tconst matrix = new Matrix4();\n\t// \tmatrix.makeRotationFromQuaternion(quaternion);\n\t// \tgeometry.applyMatrix(matrix);\n\t// }\n\n\tprivate _rotate_geometry_m = new Matrix4();\n\tprivate _rotate_geometry_q = new Quaternion();\n\tprivate _rotate_geometry_vec_dest = new Vector3();\n\trotate_geometry(geometry: BufferGeometry, vec_origin: Vector3, vec_dest: Vector3) {\n\t\tthis._rotate_geometry_vec_dest.copy(vec_dest);\n\t\tthis._rotate_geometry_vec_dest.normalize();\n\t\tthis._rotate_geometry_q.setFromUnitVectors(vec_origin, this._rotate_geometry_vec_dest);\n\t\t// this._rotate_geometry_m.identity(); // not entirely sure this is necessary\n\t\tthis._rotate_geometry_m.makeRotationFromQuaternion(this._rotate_geometry_q);\n\t\tgeometry.applyMatrix4(this._rotate_geometry_m);\n\t}\n}\n","import {PolyScene} from '../scene/PolyScene';\nimport {CoreGraphNode} from '../../core/graph/CoreGraphNode';\n// import {NamedGraphNode} from '../../core/graph/NamedGraphNode';\n\n// import {BaseParam} from '../params/_Base';\n// import {GeometryContainer} from '../containers/Geometry';\n// import {UIData} from './UIData';\n\n// import {Bypass} from './concerns/Bypass';\n// import {ConnectionsOwner} from './concerns/ConnectionsOwner';\n// import {ContainerOwner} from './concerns/ContainerOwner';\n// import {Cook} from './concerns/Cook';\n// import {CustomNode} from './concerns/CustomNode';\n// import {Dependencies} from './concerns/old/Dependencies';\n// import {DisplayFlag} from './concerns/DisplayFlag';\n// import {Errored} from './concerns/Errored';\n// import {HierarchyChildrenOwner} from './concerns/HierarchyChildrenOwner';\n// import {HierarchyParentOwner} from './concerns/old/HierarchyParentOwner';\n// import {InputsClonable} from './concerns/InputsClonable';\n// import {InputsOwner} from './concerns/InputsOwner';\n// import {Json} from './concerns/Json';\n// import {LifeCycle} from './concerns/old/LifeCycle';\n// import {Named} from './concerns/Named';\n// import {OutputsOwner} from './concerns/OutputsOwner';\n// import {ParamsOwner} from './concerns/ParamsOwner';\n// import {Selectable} from './concerns/old/Selectable';\n// import {TimeDependent} from './concerns/TimeDependent';\n// import {UIDataOwner} from './concerns/UIDataOwner';\n// import {Visit} from './concerns/Visit';\n\nimport {UIData} from './utils/UIData';\nimport {FlagsController} from './utils/FlagsController';\nimport {StatesController} from './utils/StatesController';\nimport {HierarchyParentController} from './utils/hierarchy/ParentController';\nimport {HierarchyChildrenController} from './utils/hierarchy/ChildrenController';\nimport {LifeCycleController} from './utils/LifeCycleController';\nimport {TypedContainerController} from './utils/ContainerController';\nimport {CookController} from './utils/CookController';\nimport {DependenciesController} from './utils/DependenciesController';\nimport {NameController} from './utils/NameController';\nimport {NodeSerializer, NodeSerializerData} from './utils/Serializer';\nimport {ParamsController} from './utils/params/ParamsController';\nimport {ParamConstructorMap} from '../params/types/ParamConstructorMap';\nimport {ParamInitValuesTypeMap} from '../params/types/ParamInitValuesTypeMap';\n\nimport {NodeParamsConfig} from './utils/params/ParamsConfig';\nimport {ParamsValueAccessor, ParamsValueAccessorType} from './utils/params/ParamsValueAccessor';\nimport {ProcessingContext} from './utils/ProcessingContext';\nimport {IOController} from './utils/connections/IOController';\n\n// import {BaseContainer} from '../containers/_Base';\n\n// import {BaseParam} from '../params/_Base';\n// import {BooleanParam} from '../params/Boolean';\n// import {ButtonParam} from '../params/Button';\n// import {ColorParam} from '../params/Color';\n// import {FloatParam} from '../params/Float';\n// import {IntegerParam} from '../params/Integer';\n// import {OperatorPathParam} from '../params/OperatorPath';\n// import {RampParam} from '../params/Ramp';\n// import {SeparatorParam} from '../params/Separator';\n// import {StringParam} from '../params/String';\n// import {Vector2Param} from '../params/Vector2';\n// import {Vector3Param} from '../params/Vector3';\n// import {Vector4Param} from '../params/Vector4';\nimport {NodeEvent} from '../poly/NodeEvent';\nimport {NodeContext} from '../poly/NodeContext';\n\n// import {TypedContainer} from '../containers/_Base';\nimport {ParamsAccessorType, ParamsAccessor} from './utils/params/ParamsAccessor';\n\nexport interface NodeVisitor {\n\tvisit_node: (node: BaseNodeType) => any;\n\tvisit_node_obj: (node: BaseNodeType) => any;\n}\n\nexport interface NodeDeletedEmitData {\n\tparent_id: string;\n}\nexport interface NodeCreatedEmitData {\n\tchild_node_json: NodeSerializerData;\n}\ntype EmitDataByNodeEventMapGeneric = {[key in NodeEvent]: any};\nexport interface EmitDataByNodeEventMap extends EmitDataByNodeEventMapGeneric {\n\t[NodeEvent.CREATED]: NodeCreatedEmitData;\n\t[NodeEvent.DELETED]: NodeDeletedEmitData;\n\t[NodeEvent.ERROR_UPDATED]: undefined;\n}\n// emit(event_name: NodeEvent.CREATED, data: EmitDataByNodeEventMap[NodeEvent.CREATED]): void;\n// \temit(event_name: NodeEvent.DELETED, data: NodeDeletedEmitData): void;\n// \temit(event_name: NodeEvent.NAME_UPDATED): void;\n// \temit(event_name: NodeEvent.OVERRIDE_CLONABLE_STATE_UPDATE): void;\n// \temit(event_name: NodeEvent.NAMED_INPUTS_UPDATED): void;\n// \temit(event_name: NodeEvent.NAMED_OUTPUTS_UPDATED): void;\n// \temit(event_name: NodeEvent.INPUTS_UPDATED): void;\n// \temit(event_name: NodeEvent.PARAMS_UPDATED): void;\n// \temit(event_name: NodeEvent.UI_DATA_POSITION_UPDATED): void;\n// \temit(event_name: NodeEvent.UI_DATA_COMMENT_UPDATED): void;\n// \temit(event_name: NodeEvent.ERROR_UPDATED): void;\n// \temit(event_name: NodeEvent.FLAG_BYPASS_UPDATED): void;\n// \temit(event_name: NodeEvent.FLAG_DISPLAY_UPDATED): void;\n// \temit(event_name: NodeEvent.SELECTION_UPDATED): void;\n\nimport {ContainerMap} from '../containers/utils/ContainerMap';\nimport {ContainableMap} from '../containers/utils/ContainableMap';\nimport {BaseContainer} from '../containers/_Base';\nimport {ParamOptions} from '../params/utils/OptionsController';\nimport {ParamType} from '../poly/ParamType';\nimport {DisplayNodeController} from './utils/DisplayNodeController';\n\n// type Container = ContainerMap[KT];\ntype KT = keyof ContainerMap;\nexport class TypedNode<T extends KT, NT extends BaseNodeType, K extends NodeParamsConfig> extends CoreGraphNode {\n\tcontainer_controller: TypedContainerController<ContainerMap[T]> = new TypedContainerController<ContainerMap[T]>(\n\t\tthis,\n\t\tBaseContainer\n\t);\n\n\tprivate _parent_controller: HierarchyParentController | undefined;\n\n\tprivate _ui_data: UIData | undefined;\n\n\tprivate _dependencies_controller: DependenciesController | undefined;\n\tprivate _states: StatesController | undefined;\n\tprivate _lifecycle: LifeCycleController | undefined;\n\tprivate _serializer: NodeSerializer | undefined;\n\tprivate _cook_controller: CookController | undefined;\n\tpublic readonly flags: FlagsController | undefined;\n\tprotected _display_node_controller: DisplayNodeController | undefined;\n\tget display_node_controller() {\n\t\treturn this._display_node_controller;\n\t}\n\n\tprivate _params_controller: ParamsController | undefined;\n\treadonly params_config: K | undefined;\n\treadonly pv: ParamsValueAccessorType<K> = (<unknown>new ParamsValueAccessor<K>()) as ParamsValueAccessorType<K>;\n\t// readonly pv: ParamsValueAccessor<K> = new ParamsValueAccessor<K>(this);\n\treadonly p: ParamsAccessorType<K> = (<unknown>new ParamsAccessor<K>()) as ParamsAccessorType<K>;\n\t// readonly p: ParamsAccessor<K> = new ParamsAccessor<K>(this);\n\n\tprivate _processing_context: ProcessingContext | undefined;\n\tprivate _name_controller: NameController | undefined;\n\tprivate _io: IOController<NT> | undefined;\n\tget parent_controller(): HierarchyParentController {\n\t\treturn (this._parent_controller = this._parent_controller || new HierarchyParentController(this));\n\t}\n\tstatic displayed_input_names(): string[] {\n\t\treturn [];\n\t}\n\n\tprivate _children_controller: HierarchyChildrenController | undefined;\n\tprotected _children_controller_context: NodeContext | undefined;\n\tget children_controller_context() {\n\t\treturn this._children_controller_context;\n\t}\n\tprivate _create_children_controller(): HierarchyChildrenController | undefined {\n\t\tif (this._children_controller_context) {\n\t\t\treturn new HierarchyChildrenController(this, this._children_controller_context);\n\t\t}\n\t}\n\tget children_controller(): HierarchyChildrenController | undefined {\n\t\treturn (this._children_controller = this._children_controller || this._create_children_controller());\n\t}\n\tchildren_allowed(): boolean {\n\t\treturn this._children_controller_context != null;\n\t}\n\n\tget ui_data(): UIData {\n\t\treturn (this._ui_data = this._ui_data || new UIData(this));\n\t}\n\tget dependencies_controller(): DependenciesController {\n\t\treturn (this._dependencies_controller = this._dependencies_controller || new DependenciesController(this));\n\t}\n\tget states(): StatesController {\n\t\treturn (this._states = this._states || new StatesController(this));\n\t}\n\tget lifecycle(): LifeCycleController {\n\t\treturn (this._lifecycle = this._lifecycle || new LifeCycleController(this));\n\t}\n\tget serializer(): NodeSerializer {\n\t\treturn (this._serializer = this._serializer || new NodeSerializer(this));\n\t}\n\t// get container_controller(): TypedContainerController<T> {\n\t// \treturn (this._container_controller = this._container_controller || new TypedContainerController<T>(this));\n\t// }\n\tget cook_controller(): CookController {\n\t\treturn (this._cook_controller = this._cook_controller || new CookController(this));\n\t}\n\tget io(): IOController<NT> {\n\t\treturn (this._io = this._io || new IOController<NT>((<unknown>this) as NT));\n\t}\n\tget name_controller(): NameController {\n\t\treturn (this._name_controller = this._name_controller || new NameController(this));\n\t}\n\tset_name(name: string) {\n\t\tthis.name_controller.set_name(name);\n\t}\n\t_set_core_name(name: string) {\n\t\tthis._name = name;\n\t}\n\tget params(): ParamsController {\n\t\treturn (this._params_controller = this._params_controller || new ParamsController(this));\n\t}\n\tget processing_context(): ProcessingContext {\n\t\treturn (this._processing_context = this._processing_context || new ProcessingContext(this));\n\t}\n\n\tconstructor(scene: PolyScene, name: string = 'BaseNode') {\n\t\tsuper(scene, name);\n\t}\n\n\tprivate _initialized: boolean = false;\n\tpublic initialize_base_and_node() {\n\t\tif (!this._initialized) {\n\t\t\tthis.initialize_base_node(); // for base classes of Sop, Obj...\n\t\t\tthis.initialize_node(); // for Derivated node clases, like BoxSop, TransformSop...\n\t\t\tthis._initialized = true;\n\t\t} else {\n\t\t\tconsole.warn('node already initialized');\n\t\t}\n\t}\n\tprotected initialize_base_node() {}\n\tprotected initialize_node() {}\n\t// constructor() {\n\t// \tsuper('base_node');\n\n\t// \t// this._init_node_scene()\n\t// \t// this._init_context_owner()\n\t// \t// this._init_dirtyable()\n\t// \t// this._init_graph_node()\n\n\t// \t// this._init_bypass_flag();\n\t// \t// this._init_display_flag();\n\t// \t//this._init_context()\n\t// \t// this._init_cook();\n\t// \t// this._init_error();\n\t// \t// this._init_inputs();\n\t// \t// this._init_outputs();\n\t// \t// this._init_hierarchy_parent_owner();\n\t// \t//this._init_time_dependent()\n\t// \t// this._init_ui_data();\n\t// }\n\tstatic type(): string {\n\t\tthrow 'type to be overriden';\n\t}\n\tget type() {\n\t\tconst c = this.constructor as typeof BaseNodeClass;\n\t\treturn c.type();\n\t}\n\tstatic node_context(): NodeContext {\n\t\tthrow 'requires override';\n\t}\n\tnode_context(): NodeContext {\n\t\tconst c = this.constructor as typeof BaseNodeClass;\n\t\treturn c.node_context();\n\t}\n\n\tstatic required_three_imports(): string[] {\n\t\treturn [];\n\t}\n\tstatic required_imports() {\n\t\tlet three_imports = this.required_three_imports();\n\t\tif (three_imports) {\n\t\t\t// if (!lodash_isArray(three_imports)) {\n\t\t\t// \tthree_imports = [<unknown>three_imports as string];\n\t\t\t// }\n\t\t\treturn three_imports.map((e) => `three/examples/jsm/${e}`);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\trequired_imports() {\n\t\tconst c = this.constructor as typeof BaseNodeClass;\n\t\treturn c.required_imports();\n\t}\n\tstatic require_webgl2(): boolean {\n\t\treturn false;\n\t}\n\trequire_webgl2(): boolean {\n\t\tconst c = this.constructor as typeof BaseNodeClass;\n\t\treturn c.require_webgl2();\n\t}\n\n\t// set_scene(scene: PolyScene) {\n\t// \tsuper.set_scene(scene);\n\t// \t// this.io.inputs._init_graph_node_inputs();\n\t// }\n\n\t// accepts_visitor<T extends NodeVisitor>(visitor: T): ReturnType<T['visit_node']> {\n\t// \treturn visitor.visit_node(this);\n\t// }\n\tset_parent(parent: BaseNodeType | null) {\n\t\tthis.parent_controller.set_parent(parent);\n\t}\n\tget parent() {\n\t\treturn this.parent_controller.parent;\n\t}\n\tget root() {\n\t\treturn this._scene.root;\n\t}\n\tfull_path(): string {\n\t\treturn this.parent_controller.full_path();\n\t}\n\n\t// params\n\tcreate_params() {}\n\tadd_param<T extends ParamType>(\n\t\ttype: T,\n\t\tname: string,\n\t\tdefault_value: ParamInitValuesTypeMap[T],\n\t\toptions?: ParamOptions\n\t): ParamConstructorMap[T] | undefined {\n\t\treturn this._params_controller?.add_param(type, name, default_value, options);\n\t}\n\t// within_param_folder(folder_name: string, callback: () => void) {\n\t// \tthis._params_controller?.within_param_folder(folder_name, callback);\n\t// }\n\n\t// cook\n\tcook(input_contents: any[]): any {\n\t\treturn null;\n\t}\n\n\t// container\n\tasync request_container() {\n\t\treturn await this.container_controller.request_container();\n\t}\n\tset_container(content: ContainableMap[T], message: string | null = null) {\n\t\t// if message?\n\t\t// TODO: typescript: why is this a type of never\n\t\tthis.container_controller.container.set_content(content as never); //, this.self.cook_eval_key());\n\t\tif (content != null) {\n\t\t\tif (!(content as any).name) {\n\t\t\t\t(content as any).name = this.full_path();\n\t\t\t}\n\t\t\tif (!(content as any).node) {\n\t\t\t\t(content as any).node = this;\n\t\t\t}\n\t\t}\n\t\t//if @_container.has_content()?\n\t\tthis.cook_controller.end_cook(message);\n\t}\n\n\t// hierarchy\n\tcreate_node(type: string) {\n\t\treturn this.children_controller?.create_node(type);\n\t}\n\tremove_node(node: BaseNodeType) {\n\t\tthis.children_controller?.remove_node(node);\n\t}\n\tchildren() {\n\t\treturn this.children_controller?.children() || [];\n\t}\n\tnode(path: string) {\n\t\treturn this.parent_controller?.find_node(path) || null;\n\t}\n\tnode_sibbling(name: string): TypedNode<T, NT, any> | null {\n\t\tif (this.parent) {\n\t\t\tconst node = this.parent.children_controller?.child_by_name(name);\n\t\t\tif (node) {\n\t\t\t\treturn node as TypedNode<T, NT, any>;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tnodes_by_type(type: string) {\n\t\treturn this.children_controller?.nodes_by_type(type) || [];\n\t}\n\n\t// inputs\n\tset_input(input_index_or_name: number | string, node: NT | null, output_index_or_name: number | string = 0) {\n\t\tthis.io.inputs.set_input(input_index_or_name, node, output_index_or_name);\n\t}\n\n\t// emit\n\n\temit(event_name: NodeEvent.CREATED, data: EmitDataByNodeEventMap[NodeEvent.CREATED]): void;\n\temit(event_name: NodeEvent.DELETED, data: EmitDataByNodeEventMap[NodeEvent.DELETED]): void;\n\temit(event_name: NodeEvent.NAME_UPDATED): void;\n\temit(event_name: NodeEvent.OVERRIDE_CLONABLE_STATE_UPDATE): void;\n\temit(event_name: NodeEvent.NAMED_INPUTS_UPDATED): void;\n\temit(event_name: NodeEvent.NAMED_OUTPUTS_UPDATED): void;\n\temit(event_name: NodeEvent.INPUTS_UPDATED): void;\n\temit(event_name: NodeEvent.PARAMS_UPDATED): void;\n\temit(event_name: NodeEvent.UI_DATA_POSITION_UPDATED): void;\n\temit(event_name: NodeEvent.UI_DATA_COMMENT_UPDATED): void;\n\temit(event_name: NodeEvent.ERROR_UPDATED): void;\n\temit(event_name: NodeEvent.FLAG_BYPASS_UPDATED): void;\n\temit(event_name: NodeEvent.FLAG_DISPLAY_UPDATED): void;\n\temit(event_name: NodeEvent.SELECTION_UPDATED): void;\n\temit(event_name: NodeEvent, data: object | null = null): void {\n\t\t// super.emit(event_name, data);\n\t\tthis.scene.dispatch_controller.dispatch(this, event_name, data);\n\t}\n\n\t// serializer\n\tto_json(include_param_components: boolean = false) {\n\t\treturn this.serializer.to_json(include_param_components);\n\t}\n}\n\nexport type BaseNodeType = TypedNode<any, BaseNodeType, any>;\nexport class BaseNodeClass extends TypedNode<any, BaseNodeType, any> {}\n","// import {Vector3} from 'three/src/math/Vector3'\n// import {Vector2} from 'three/src/math/Vector2'\n\nimport {CoreWalker} from '../../core/Walker';\nimport {CoreGraphNode} from '../../core/graph/CoreGraphNode';\n// import {NodeScene} from '../../core/graph/NodeScene';\n// import {NamedGraphNode} from '../../core/graph/NamedGraphNode';\nimport {BaseNodeType} from '../nodes/_Base';\n\n// import {CallbackOption} from './concerns/options/Callback'\n// import {ColorOption} from './concerns/options/Color'\n// import {CookOption} from './concerns/options/Cook'\n// import {DesktopOption} from './concerns/options/Desktop'\n// import {ExpressionOption} from './concerns/options/Expression'\n// import {MenuOption} from './concerns/options/Menu'\n// import {NodeSelectionOption} from './concerns/options/NodeSelection'\n// import {RangeOption} from './concerns/options/Range'\n// import {AssetReferenceOption} from './concerns/options/AssetReference'\n// import {SpareOption} from './concerns/options/Spare'\n// import {MultilineOption} from './concerns/options/Multiline'\n// import {TextureOption} from './concerns/options/Texture'\n// import {VisibleOption} from './concerns/options/Visible'\n\n// import {Emit} from './concerns/Emit';\n// import {Errored} from './concerns/Errored';\n// import {Eval} from './concerns/Eval';\n// import {Expression} from './concerns/Expression';\n// import {Hierarchy} from './concerns/Hierarchy';\n// import {Json} from './concerns/Json';\n// import {Named} from './concerns/Named';\n// import {Node} from './concerns/Node';\n// import {Options} from './concerns/Options';\n// import {TimeDependent} from './concerns/TimeDependent';\n// import {Type} from './concerns/Type';\n// import {UIDataOwner} from './concerns/UIDataOwner';\n// import {VisitorsBase} from './concerns/visitors/_Base';\n\nimport {OptionsController} from './utils/OptionsController';\nimport {ExpressionController} from './utils/ExpressionController';\nimport {EmitController} from './utils/EmitController';\nimport {ParamSerializer} from './utils/Serializer';\nimport {StatesController} from './utils/StatesController';\n// import {UIData} from './utils/UIData';\n\nimport {TypedMultipleParam} from './_Multiple';\nimport {FloatParam} from './Float';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamEvent} from '../poly/ParamEvent';\nimport {PolyScene} from '../scene/PolyScene';\n\nimport {ParamInitValuesTypeMap} from '../params/types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from '../params/types/ParamValuesTypeMap';\nimport {ParamValueSerializedTypeMap} from '../params/types/ParamValueSerializedTypeMap';\nimport {ParamInitValueSerializedTypeMap} from './types/ParamInitValueSerializedTypeMap';\n// import {TypedNumericParam} from './_Numeric';\n\n// export interface ParamVisitor {\n// \tvisit_param: (param: BaseParamType) => any;\n// \tvisit_multiple_param: (param: TypedMultipleParam<any>) => any;\n// \tvisit_numeric_param: (param: TypedNumericParam<any>) => any;\n// }\n\n// type ParamTypeElem = ParamType;\ntype ComputeCallback = (value: void) => void;\n\nexport abstract class TypedParam<T extends ParamType> extends CoreGraphNode {\n\t// protected _raw_input: ParamInitValuesTypeMap[T];\n\tprotected _default_value!: ParamInitValuesTypeMap[T];\n\tprotected _raw_input!: ParamInitValuesTypeMap[T];\n\tprotected _value!: ParamValuesTypeMap[T];\n\t// protected _expression: string;\n\tprotected _node!: BaseNodeType;\n\tprotected _parent_param: TypedMultipleParam<any> | undefined;\n\tprotected _components: FloatParam[] | undefined;\n\tprotected _compute_resolves: ComputeCallback[] | undefined;\n\n\tprivate _options: OptionsController = new OptionsController(this);\n\tget options(): OptionsController {\n\t\treturn (this._options = this._options || new OptionsController(this));\n\t}\n\tprivate _emit_controller: EmitController = new EmitController(this);\n\tget emit_controller(): EmitController {\n\t\treturn (this._emit_controller = this._emit_controller || new EmitController(this));\n\t}\n\tprotected _expression_controller: ExpressionController<T> | undefined;\n\tget expression_controller(): ExpressionController<T> | undefined {\n\t\treturn this._expression_controller; // =\n\t\t//this._expression_controller || new ExpressionController(this);\n\t}\n\tprivate _serializer: ParamSerializer | undefined;\n\tget serializer(): ParamSerializer {\n\t\treturn (this._serializer = this._serializer || new ParamSerializer(this));\n\t}\n\tprivate _states: StatesController | undefined;\n\tget states(): StatesController {\n\t\treturn (this._states = this._states || new StatesController(this));\n\t}\n\t// private _ui_data: UIData | undefined;\n\t// get ui_data(): UIData {\n\t// \treturn (this._ui_data = this._ui_data || new UIData(this.scene, this));\n\t// }\n\n\tconstructor(scene: PolyScene) {\n\t\tsuper(scene, 'BaseParam');\n\t\tthis.initialize_param();\n\t}\n\tinitialize_value() {}\n\tinitialize_param() {}\n\t// \t// this.add_post_dirty_hook(this._remove_node_param_cache.bind(this))\n\t// }\n\t// initialize() {\n\t// \tthis.init_components();\n\t// \t// this.init_expression()\n\t// \t// this._init_ui_data()\n\t// }\n\t// accepts_visitor<T extends ParamVisitor>(visitor: T): ReturnType<T['visit_param']> {\n\t// \treturn visitor.visit_param(this);\n\t// }\n\n\t//\n\t// init_expression() {}\n\n\t// type\n\tstatic type(): ParamType {\n\t\treturn ParamType.FLOAT; // adding a type here, but just to not have a compile error\n\t}\n\tget type(): T {\n\t\treturn (this.constructor as typeof BaseParamClass).type() as T;\n\t}\n\tget is_numeric(): boolean {\n\t\treturn false;\n\t}\n\n\t// name\n\tset_name(name: string) {\n\t\tsuper.set_name(name);\n\t}\n\n\tget value(): ParamValuesTypeMap[T] {\n\t\treturn this._value;\n\t}\n\tabstract get default_value_serialized(): ParamInitValueSerializedTypeMap[T];\n\tabstract get raw_input_serialized(): ParamInitValueSerializedTypeMap[T];\n\tabstract get value_serialized(): ParamValueSerializedTypeMap[T];\n\tconvert(raw_val: any): ParamValuesTypeMap[T] | null {\n\t\treturn null;\n\t}\n\tstatic are_raw_input_equal(val1: any, val2: any) {\n\t\treturn false;\n\t}\n\tis_raw_input_equal(other_raw_input: ParamInitValuesTypeMap[T]) {\n\t\treturn (this.constructor as any).are_raw_input_equal(this._raw_input, other_raw_input);\n\t}\n\tstatic are_values_equal(val1: any, val2: any) {\n\t\treturn false;\n\t}\n\tis_value_equal(other_val: ParamValuesTypeMap[T]) {\n\t\treturn (this.constructor as any).are_values_equal(this.value, other_val);\n\t}\n\tprotected _clone_raw_input(raw_input: ParamInitValuesTypeMap[T]): ParamInitValuesTypeMap[T] {\n\t\treturn raw_input;\n\t}\n\tset(raw_input: ParamInitValuesTypeMap[T]): void {\n\t\tthis._raw_input = this._clone_raw_input(this._prefilter_invalid_raw_input(raw_input));\n\t\tthis.emit_controller.emit(ParamEvent.RAW_INPUT_UPDATED);\n\t\tthis.process_raw_input();\n\t}\n\tprotected _prefilter_invalid_raw_input(raw_input: any): ParamInitValuesTypeMap[T] {\n\t\treturn raw_input as ParamInitValuesTypeMap[T];\n\t}\n\tget default_value() {\n\t\treturn this._default_value;\n\t}\n\tget is_default(): boolean {\n\t\treturn true;\n\t}\n\tget raw_input() {\n\t\treturn this._raw_input;\n\t}\n\n\tprotected process_raw_input() {}\n\tprivate _is_computing: boolean = false;\n\tasync compute(): Promise<void> {\n\t\tif (this.scene.loading_controller.is_loading) {\n\t\t\tconsole.warn(`param attempt to compute ${this.full_path()}`);\n\t\t}\n\n\t\tif (this.is_dirty) {\n\t\t\tif (!this._is_computing) {\n\t\t\t\tthis._is_computing = true;\n\t\t\t\tawait this.process_computation();\n\t\t\t\tthis._is_computing = false;\n\n\t\t\t\tif (this._compute_resolves) {\n\t\t\t\t\tlet callback: ComputeCallback | undefined;\n\t\t\t\t\twhile ((callback = this._compute_resolves.pop())) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis._compute_resolves = this._compute_resolves || [];\n\t\t\t\t\tthis._compute_resolves.push(resolve);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tprotected async process_computation(): Promise<void> {}\n\t// set_default_value(default_value: ParamValuesTypeMap[T]) {\n\t// \tthis._default_value = default_value;\n\t// }\n\tset_init_value(init_value: ParamInitValuesTypeMap[T]) {\n\t\tthis._default_value = init_value; //this.convert(init_value);\n\t\t// this._raw_input = this._clone_raw_input(init_value);\n\n\t\t// if (this.is_multiple) {\n\t\t// \tthis.init_components();\n\t\t// }\n\n\t\t// this.set(init_value);\n\t}\n\t// eval_p(): Promise<ParamValuesTypeMap[T]> {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\tresolve();\n\t// \t});\n\t// }\n\n\t// node\n\tset_node(node: BaseNodeType | null) {\n\t\tif (!node) {\n\t\t\tif (this._node) {\n\t\t\t\tthis._node.params.params_node?.remove_graph_input(this);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._node = node;\n\t\t\tif (this.options.makes_node_dirty_when_dirty() && !this.parent_param) {\n\t\t\t\tnode.params.params_node?.add_graph_input(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.components) {\n\t\t\tfor (let c of this.components) {\n\t\t\t\tc.set_node(node);\n\t\t\t}\n\t\t}\n\t}\n\tget node() {\n\t\treturn this._node;\n\t}\n\tget parent() {\n\t\treturn this.node;\n\t}\n\n\t// hierarchy\n\tset_parent_param(param: TypedMultipleParam<any>) {\n\t\tparam.add_graph_input(this);\n\t\tthis._parent_param = param;\n\t}\n\tget parent_param(): TypedMultipleParam<any> | undefined {\n\t\treturn this._parent_param;\n\t}\n\thas_parent_param(): boolean {\n\t\treturn this._parent_param != null;\n\t}\n\tfull_path(): string {\n\t\treturn this.node?.full_path() + '/' + this.name;\n\t}\n\tpath_relative_to(node: BaseNodeType | BaseParamType): string {\n\t\treturn CoreWalker.relative_path(node, this);\n\t}\n\n\t// emit\n\temit(event_name: ParamEvent): void {\n\t\tif (this.emit_controller.emit_allowed) {\n\t\t\tthis.emit_controller.increment_count(event_name);\n\t\t\tthis.scene.dispatch_controller.dispatch(this, event_name);\n\t\t}\n\t}\n\n\t// multiple\n\tget components() {\n\t\treturn this._components;\n\t}\n\tstatic get component_names(): string[] {\n\t\treturn [];\n\t}\n\tget component_names(): string[] {\n\t\tconst c = (<unknown>this.constructor) as TypedParam<T>;\n\t\treturn c.component_names;\n\t}\n\tget is_multiple(): boolean {\n\t\treturn this.component_names.length > 0;\n\t}\n\t// create_components() {}\n\tinit_components() {}\n\n\t// expression\n\t// set_expression(expression: string | null) {\n\t// \tthis.expression_controller.set_expression(expression);\n\t// }\n\thas_expression(): boolean {\n\t\treturn this.expression_controller != null && this.expression_controller.active; // use this._expression_controller to avoid creating it\n\t}\n\n\t// serialize\n\tto_json() {\n\t\treturn this.serializer.to_json();\n\t}\n}\nexport type BaseParamType = TypedParam<ParamType>;\nexport class BaseParamClass extends TypedParam<ParamType> {\n\tget default_value_serialized() {\n\t\treturn 'BaseParamClass.default_value_serialized overriden';\n\t}\n\tget raw_input_serialized() {\n\t\treturn 'BaseParamClass.raw_input_serialized overriden';\n\t}\n\tget value_serialized() {\n\t\treturn 'BaseParamClass.value_serialized overriden';\n\t}\n}\n","import {BaseNodeType} from '../_Base';\n\nimport {BypassFlag} from './flags/Bypass';\nimport {DisplayFlag} from './flags/Display';\n\nexport class FlagsController {\n\tpublic readonly bypass: DisplayFlag | undefined;\n\tpublic readonly display: BypassFlag | undefined;\n\tconstructor(protected node: BaseNodeType) {}\n\thas_display(): boolean {\n\t\treturn false;\n\t}\n\thas_bypass(): boolean {\n\t\treturn false;\n\t}\n}\n\nfunction Display<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tprotected node!: BaseNodeType;\n\t\tpublic display: DisplayFlag = new DisplayFlag(this.node);\n\t\thas_display(): boolean {\n\t\t\treturn true;\n\t\t}\n\t};\n}\nfunction Bypass<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tprotected node!: BaseNodeType;\n\t\tpublic readonly bypass: BypassFlag = new BypassFlag(this.node);\n\t\thas_bypass(): boolean {\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\nexport class FlagsControllerD extends Display(FlagsController) {}\nexport class FlagsControllerB extends Bypass(FlagsController) {}\nexport class FlagsControllerDB extends Bypass(Display(FlagsController)) {}\n","export default \"\\n\\n// https://github.com/mattatz/ShibuyaCrowd/blob/master/source/shaders/common/quaternion.glsl\\nvec4 quat_mult(vec4 q1, vec4 q2)\\n{\\n\\treturn vec4(\\n\\tq1.w * q2.x + q1.x * q2.w + q1.z * q2.y - q1.y * q2.z,\\n\\tq1.w * q2.y + q1.y * q2.w + q1.x * q2.z - q1.z * q2.x,\\n\\tq1.w * q2.z + q1.z * q2.w + q1.y * q2.x - q1.x * q2.y,\\n\\tq1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z\\n\\t);\\n}\\n// http://glmatrix.net/docs/quat.js.html#line97\\n//   let ax = a[0], ay = a[1], az = a[2], aw = a[3];\\n\\n//   let bx = b[0], by = b[1], bz = b[2], bw = b[3];\\n\\n//   out[0] = ax * bw + aw * bx + ay * bz - az * by;\\n\\n//   out[1] = ay * bw + aw * by + az * bx - ax * bz;\\n\\n//   out[2] = az * bw + aw * bz + ax * by - ay * bx;\\n\\n//   out[3] = aw * bw - ax * bx - ay * by - az * bz;\\n\\n//   return out\\n\\n\\n\\n// http://www.neilmendoza.com/glsl-rotation-about-an-arbitrary-axis/\\nmat4 rotationMatrix(vec3 axis, float angle)\\n{\\n\\taxis = normalize(axis);\\n\\tfloat s = sin(angle);\\n\\tfloat c = cos(angle);\\n\\tfloat oc = 1.0 - c;\\n\\n \\treturn mat4(oc * axis.x * axis.x + c, oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s, 0.0, oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c, oc * axis.y * axis.z - axis.x * s,  0.0, oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c, 0.0, 0.0, 0.0, 0.0, 1.0);\\n}\\n\\n// https://www.geeks3d.com/20141201/how-to-rotate-a-vertex-by-a-quaternion-in-glsl/\\nvec4 quat_from_axis_angle(vec3 axis, float angle)\\n{\\n\\tvec4 qr;\\n\\tfloat half_angle = (angle * 0.5); // * 3.14159 / 180.0;\\n\\tfloat sin_half_angle = sin(half_angle);\\n\\tqr.x = axis.x * sin_half_angle;\\n\\tqr.y = axis.y * sin_half_angle;\\n\\tqr.z = axis.z * sin_half_angle;\\n\\tqr.w = cos(half_angle);\\n\\treturn qr;\\n}\\nvec3 rotate_with_axis_angle(vec3 position, vec3 axis, float angle)\\n{\\n\\tvec4 q = quat_from_axis_angle(axis, angle);\\n\\tvec3 v = position.xyz;\\n\\treturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\\n}\\n// vec3 applyQuaternionToVector( vec4 q, vec3 v ){\\n// \\treturn v + 2.0 * cross( q.xyz, cross( q.xyz, v ) + q.w * v );\\n// }\\nvec3 rotate_with_quat( vec3 v, vec4 q )\\n{\\n\\t// vec4 qv = multQuat( quat, vec4(vec, 0.0) );\\n\\t// return multQuat( qv, vec4(-quat.x, -quat.y, -quat.z, quat.w) ).xyz;\\n\\treturn v + 2.0 * cross( q.xyz, cross( q.xyz, v ) + q.w * v );\\n}\\n// https://github.com/glslify/glsl-look-at/blob/gh-pages/index.glsl\\n// mat3 rotation_matrix(vec3 origin, vec3 target, float roll) {\\n// \\tvec3 rr = vec3(sin(roll), cos(roll), 0.0);\\n// \\tvec3 ww = normalize(target - origin);\\n// \\tvec3 uu = normalize(cross(ww, rr));\\n// \\tvec3 vv = normalize(cross(uu, ww));\\n\\n// \\treturn mat3(uu, vv, ww);\\n// }\\n// mat3 rotation_matrix(vec3 target, float roll) {\\n// \\tvec3 rr = vec3(sin(roll), cos(roll), 0.0);\\n// \\tvec3 ww = normalize(target);\\n// \\tvec3 uu = normalize(cross(ww, rr));\\n// \\tvec3 vv = normalize(cross(uu, ww));\\n\\n// \\treturn mat3(uu, vv, ww);\\n// }\\n\\nfloat vector_angle(vec3 start, vec3 dest){\\n\\tstart = normalize(start);\\n\\tdest = normalize(dest);\\n\\n\\tfloat cosTheta = dot(start, dest);\\n\\tvec3 c1 = cross(start, dest);\\n\\t// We use the dot product of the cross with the Y axis.\\n\\t// This is a little arbitrary, but can still give a good sense of direction\\n\\tvec3 y_axis = vec3(0.0, 1.0, 0.0);\\n\\tfloat d1 = dot(c1, y_axis);\\n\\tfloat angle = acos(cosTheta) * sign(d1);\\n\\treturn angle;\\n}\\n\\n// http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-17-quaternions/#i-need-an-equivalent-of-glulookat-how-do-i-orient-an-object-towards-a-point-\\nvec4 vector_align(vec3 start, vec3 dest){\\n\\tstart = normalize(start);\\n\\tdest = normalize(dest);\\n\\n\\tfloat cosTheta = dot(start, dest);\\n\\tvec3 axis;\\n\\n\\t// if (cosTheta < -1 + 0.001f){\\n\\t// \\t// special case when vectors in opposite directions:\\n\\t// \\t// there is no \\\"ideal\\\" rotation axis\\n\\t// \\t// So guess one; any will do as long as it's perpendicular to start\\n\\t// \\taxis = cross(vec3(0.0f, 0.0f, 1.0f), start);\\n\\t// \\tif (length2(axis) < 0.01 ) // bad luck, they were parallel, try again!\\n\\t// \\t\\taxis = cross(vec3(1.0f, 0.0f, 0.0f), start);\\n\\n\\t// \\taxis = normalize(axis);\\n\\t// \\treturn gtx::quaternion::angleAxis(glm::radians(180.0f), axis);\\n\\t// }\\n\\tif(cosTheta > (1.0 - 0.0001) || cosTheta < (-1.0 + 0.0001) ){\\n\\t\\taxis = normalize(cross(start, vec3(0.0, 1.0, 0.0)));\\n\\t\\tif (length(axis) < 0.001 ){ // bad luck, they were parallel, try again!\\n\\t\\t\\taxis = normalize(cross(start, vec3(1.0, 0.0, 0.0)));\\n\\t\\t}\\n\\t} else {\\n\\t\\taxis = normalize(cross(start, dest));\\n\\t}\\n\\n\\tfloat angle = acos(cosTheta);\\n\\n\\treturn quat_from_axis_angle(axis, angle);\\n}\\nvec4 vector_align_with_up(vec3 start, vec3 dest, vec3 up){\\n\\tvec4 rot1 = vector_align(start, dest);\\n\\tup = normalize(up);\\n\\n\\t// Recompute desiredUp so that it's perpendicular to the direction\\n\\t// You can skip that part if you really want to force desiredUp\\n\\t// vec3 right = normalize(cross(dest, up));\\n\\t// up = normalize(cross(right, dest));\\n\\n\\t// Because of the 1rst rotation, the up is probably completely screwed up.\\n\\t// Find the rotation between the \\\"up\\\" of the rotated object, and the desired up\\n\\tvec3 newUp = rotate_with_quat(vec3(0.0, 1.0, 0.0), rot1);//rot1 * vec3(0.0, 1.0, 0.0);\\n\\tvec4 rot2 = vector_align(up, newUp);\\n\\n\\t// return rot1;\\n\\treturn rot2;\\n\\t// return multQuat(rot1, rot2);\\n\\t// return rot2 * rot1;\\n\\n}\\n\\n// https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\\nfloat quat_to_angle(vec4 q){\\n\\treturn 2.0 * acos(q.w);\\n}\\nvec3 quat_to_axis(vec4 q){\\n\\treturn vec3(\\n\\t\\tq.x / sqrt(1.0-q.w*q.w),\\n\\t\\tq.y / sqrt(1.0-q.w*q.w),\\n\\t\\tq.z / sqrt(1.0-q.w*q.w)\\n\\t);\\n}\\n\\nvec4 align(vec3 dir, vec3 up){\\n\\tvec3 start_dir = vec3(0.0, 0.0, 1.0);\\n\\tvec3 start_up = vec3(0.0, 1.0, 0.0);\\n\\tvec4 rot1 = vector_align(start_dir, dir);\\n\\tup = normalize(up);\\n\\n\\t// Recompute desiredUp so that it's perpendicular to the direction\\n\\t// You can skip that part if you really want to force desiredUp\\n\\tvec3 right = normalize(cross(dir, up));\\n\\tif(length(right)<0.001){\\n\\t\\tright = vec3(1.0, 0.0, 0.0);\\n\\t}\\n\\tup = normalize(cross(right, dir));\\n\\n\\t// Because of the 1rst rotation, the up is probably completely screwed up.\\n\\t// Find the rotation between the \\\"up\\\" of the rotated object, and the desired up\\n\\tvec3 newUp = rotate_with_quat(start_up, rot1);//rot1 * vec3(0.0, 1.0, 0.0);\\n\\tvec4 rot2 = vector_align(normalize(newUp), up);\\n\\n\\t// return rot1;\\n\\treturn quat_mult(rot1, rot2);\\n\\t// return rot2 * rot1;\\n\\n}\"","import {BaseNodeType} from '../engine/nodes/_Base';\nimport {BaseParamType} from '../engine/params/_Base';\nimport {DecomposedPath} from './DecomposedPath';\n// import {NodeSimple} from '/graph/NodeSimple'\n\ntype NodeOrParam = BaseNodeType | BaseParamType;\n\nexport class CoreWalker {\n\tpublic static readonly SEPARATOR = '/';\n\tpublic static readonly DOT = '.';\n\tpublic static readonly CURRENT = CoreWalker.DOT;\n\tpublic static readonly PARENT = '..';\n\tpublic static readonly CURRENT_WITH_SLASH = `${CoreWalker.CURRENT}/`;\n\tpublic static readonly PARENT_WITH_SLASH = `${CoreWalker.PARENT}/`;\n\tpublic static readonly NON_LETTER_PREFIXES = [CoreWalker.SEPARATOR, CoreWalker.DOT];\n\n\tstatic find_node(node_src: BaseNodeType, path: string, decomposed_path?: DecomposedPath): BaseNodeType | null {\n\t\tif (!node_src) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst elements: string[] = path.split(CoreWalker.SEPARATOR).filter((e) => e.length > 0);\n\t\tconst first_element = elements[0];\n\n\t\tlet next_node: BaseNodeType | null = null;\n\t\tif (path[0] === CoreWalker.SEPARATOR) {\n\t\t\tconst path_from_root = path.substr(1);\n\t\t\tnext_node = this.find_node(node_src.root, path_from_root, decomposed_path);\n\t\t} else {\n\t\t\tswitch (first_element) {\n\t\t\t\tcase CoreWalker.PARENT:\n\t\t\t\t\tdecomposed_path?.add_path_element(first_element);\n\t\t\t\t\tnext_node = node_src.parent;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CoreWalker.CURRENT:\n\t\t\t\t\tdecomposed_path?.add_path_element(first_element);\n\t\t\t\t\tnext_node = node_src;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// TODO: What does .node means?? in which case is this not a node? (it is for nodes which cannot have children - but I'd like to unify the api)\n\t\t\t\t\t// console.error(\"rethink this method Walker.find_node\")\n\t\t\t\t\t// if (node_src.node != null) {\n\t\t\t\t\tnext_node = node_src.node(first_element);\n\t\t\t\t\tif (next_node) {\n\t\t\t\t\t\tdecomposed_path?.add_node(first_element, next_node);\n\t\t\t\t\t}\n\n\t\t\t\t// if (next_node == null) { this.find_node_warning(node_src, first_element); }\n\t\t\t\t// return next_node;\n\t\t\t\t// break\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tif (next_node != null && elements.length > 1) {\n\t\t\t\tconst remainder = elements.slice(1).join(CoreWalker.SEPARATOR);\n\t\t\t\tnext_node = this.find_node(next_node, remainder, decomposed_path);\n\t\t\t}\n\t\t\treturn next_node;\n\t\t}\n\n\t\treturn next_node;\n\t}\n\n\tstatic find_param(node_src: BaseNodeType, path: string, decomposed_path?: DecomposedPath): BaseParamType | null {\n\t\tif (!node_src) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst elements = path.split(CoreWalker.SEPARATOR);\n\n\t\tif (elements.length === 1) {\n\t\t\treturn node_src.params.get(elements[0]);\n\t\t} else {\n\t\t\tconst node_path = elements.slice(0, +(elements.length - 2) + 1 || undefined).join(CoreWalker.SEPARATOR);\n\t\t\tconst node = this.find_node(node_src, node_path, decomposed_path);\n\t\t\tif (node != null) {\n\t\t\t\tconst param_name = elements[elements.length - 1];\n\t\t\t\tconst param = node.params.get(param_name);\n\t\t\t\tif (decomposed_path && param) {\n\t\t\t\t\tdecomposed_path.add_node(param_name, param);\n\t\t\t\t}\n\t\t\t\treturn param;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t\t// throw `no node found for path ${node_path}`;\n\t\t\t}\n\t\t}\n\t}\n\tstatic relative_path(src_graph_node: Readonly<NodeOrParam>, dest_graph_node: Readonly<NodeOrParam>): string {\n\t\tconst parent = this.closest_common_parent(src_graph_node, dest_graph_node);\n\t\tif (!parent) {\n\t\t\treturn dest_graph_node.full_path();\n\t\t} else {\n\t\t\tconst distance = this.distance_to_parent(src_graph_node, parent);\n\t\t\t// const up = lodash_padStart(\"\", (distance-1)*3, \"../\")\n\t\t\tlet up = '';\n\t\t\tif (distance - 1 > 0) {\n\t\t\t\tlet i = 0;\n\t\t\t\tconst ups = [];\n\t\t\t\twhile (i++ < distance - 1) {\n\t\t\t\t\tups.push(CoreWalker.PARENT);\n\t\t\t\t}\n\t\t\t\tup = ups.join(CoreWalker.SEPARATOR) + CoreWalker.SEPARATOR;\n\t\t\t}\n\n\t\t\tconst parent_path_elements = parent\n\t\t\t\t.full_path()\n\t\t\t\t.split(CoreWalker.SEPARATOR)\n\t\t\t\t.filter((e) => e.length > 0);\n\t\t\tconst dest_path_elements = dest_graph_node\n\t\t\t\t.full_path()\n\t\t\t\t.split(CoreWalker.SEPARATOR)\n\t\t\t\t.filter((e) => e.length > 0);\n\t\t\tconst remaining_elements = [];\n\t\t\tlet cmptr = 0;\n\t\t\tfor (let dest_path_element of dest_path_elements) {\n\t\t\t\tif (!parent_path_elements[cmptr]) {\n\t\t\t\t\tremaining_elements.push(dest_path_element);\n\t\t\t\t}\n\t\t\t\tcmptr++;\n\t\t\t}\n\t\t\tconst down = remaining_elements.join(CoreWalker.SEPARATOR);\n\t\t\treturn `${up}${down}`;\n\t\t}\n\t}\n\n\tstatic closest_common_parent(\n\t\tgraph_node1: Readonly<NodeOrParam>,\n\t\tgraph_node2: Readonly<NodeOrParam>\n\t): BaseNodeType | null {\n\t\tconst parents1 = this.parents(graph_node1).reverse();\n\t\tconst parents2 = this.parents(graph_node2).reverse();\n\n\t\tconst min_depth = Math.min(parents1.length, parents2.length);\n\t\tlet found_parent = null;\n\n\t\tfor (let i = 0; i < min_depth; i++) {\n\t\t\tif (parents1[i].graph_node_id == parents2[i].graph_node_id) {\n\t\t\t\tfound_parent = parents1[i];\n\t\t\t}\n\t\t}\n\t\treturn found_parent;\n\t}\n\tstatic parents(graph_node: Readonly<NodeOrParam>): BaseNodeType[] {\n\t\tconst parents = [];\n\t\tlet parent = graph_node.parent;\n\t\twhile (parent) {\n\t\t\tparents.push(parent);\n\t\t\tparent = parent.parent;\n\t\t}\n\t\treturn parents;\n\t}\n\tstatic distance_to_parent(graph_node: Readonly<NodeOrParam>, dest: Readonly<BaseNodeType>): number {\n\t\tlet distance = 0;\n\t\tlet current: Readonly<NodeOrParam | null> = graph_node;\n\t\tconst dest_id = dest.graph_node_id;\n\t\twhile (current && current.graph_node_id != dest_id) {\n\t\t\tdistance += 1;\n\t\t\tcurrent = current.parent;\n\t\t}\n\t\tif (current && current.graph_node_id == dest_id) {\n\t\t\treturn distance;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tstatic make_absolute_path(node_src: BaseNodeType | BaseParamType, path: string): string | null {\n\t\tconst path_elements = path.split(CoreWalker.SEPARATOR);\n\t\tconst first_element = path_elements.shift();\n\n\t\tif (first_element) {\n\t\t\tswitch (first_element) {\n\t\t\t\tcase '..': {\n\t\t\t\t\tif (node_src.parent) {\n\t\t\t\t\t\treturn this.make_absolute_path(node_src.parent, path_elements.join(CoreWalker.SEPARATOR));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcase '.': {\n\t\t\t\t\treturn this.make_absolute_path(node_src, path_elements.join(CoreWalker.SEPARATOR));\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\treturn [node_src.full_path(), path].join(CoreWalker.SEPARATOR);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn node_src.full_path();\n\t\t}\n\t}\n}\n","export enum ParamEvent {\n\tVISIBLE_UPDATED = 'param_visible_updated',\n\t// UPDATED = 'param_updated',\n\tRAW_INPUT_UPDATED = 'raw_input_updated',\n\tVALUE_UPDATED = 'param_value_updated',\n\tEXPRESSION_UPDATED = 'param_expression_update',\n\tERROR_UPDATED = 'param_error_updated',\n\tDELETED = 'param_deleted',\n}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Triangle} from 'three/src/math/Triangle';\nconst THREE = {Triangle, Vector3};\nimport lodash_isNumber from 'lodash/isNumber';\n// import {Octree} from './Octree'\n// import Interpolate from './Interpolate'\nimport {Easing} from './Easing';\n\nconst RAD_DEG_RATIO = Math.PI / 180;\n\nexport class CoreMath {\n\t// static Octree = Octree\n\t// static Interpolate = Interpolate\n\tstatic Easing = Easing; // used in expressins\n\n\tstatic clamp(val: number, min: number, max: number): number {\n\t\tif (val < min) {\n\t\t\treturn min;\n\t\t} else if (val > max) {\n\t\t\treturn max;\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t}\n\n\tstatic fit01(val: number, dest_min: number, dest_max: number): number {\n\t\t// const size = max - min;\n\t\t// return (val - min) / size;\n\t\treturn this.fit(val, 0, 1, dest_min, dest_max);\n\t}\n\n\tstatic fit(val: number, src_min: number, src_max: number, dest_min: number, dest_max: number): number {\n\t\tconst src_range = src_max - src_min;\n\t\tconst dest_range = dest_max - dest_min;\n\n\t\tconst r = (val - src_min) / src_range;\n\t\treturn r * dest_range + dest_min;\n\t}\n\n\tstatic degrees_to_radians(degrees: number): number {\n\t\treturn degrees * RAD_DEG_RATIO;\n\t}\n\tstatic radians_to_degrees(radians: number): number {\n\t\treturn radians / RAD_DEG_RATIO;\n\t}\n\tstatic deg2rad(deg: number): number {\n\t\treturn this.degrees_to_radians(deg);\n\t}\n\tstatic rad2deg(rad: number): number {\n\t\treturn this.radians_to_degrees(rad);\n\t}\n\n\tstatic fract = (number: number) => number - Math.floor(number);\n\n\t// from threejs glsl rand\n\tstatic rand(number: number): number {\n\t\tif (lodash_isNumber(number)) {\n\t\t\treturn this.rand_float(number);\n\t\t} else {\n\t\t\treturn this.rand_vec2(number);\n\t\t}\n\t}\n\n\tstatic round(number: number, step_size: number): number {\n\t\tconst steps_count = number / step_size;\n\t\tconst rounded_steps_count = number < 0 ? Math.ceil(steps_count) : Math.floor(steps_count);\n\t\tconsole.log('round', step_size, number, steps_count, rounded_steps_count, rounded_steps_count * step_size);\n\t\treturn rounded_steps_count * step_size;\n\t}\n\n\tstatic highest_even(number: number): number {\n\t\treturn 2 * Math.ceil(number * 0.5);\n\t}\n\n\tstatic rand_float(number: number): number {\n\t\tconst vec = {\n\t\t\tx: number,\n\t\t\ty: 136574,\n\t\t};\n\t\treturn this.rand_vec2(vec);\n\t}\n\n\tstatic rand_vec2(uv: Vector2Like) {\n\t\tconst a = 12.9898;\n\t\tconst b = 78.233;\n\t\tconst c = 43758.5453;\n\t\tconst dt = uv.x * a + uv.y * b; //dot( uv.xy, vec2( a,b ) )\n\t\tconst sn = dt % Math.PI;\n\t\treturn this.fract(Math.sin(sn) * c);\n\t}\n\n\t// https://www.movable-type.co.uk/scripts/latlong.html\n\tstatic geodesic_distance(lnglat1: LngLatLike, lnglat2: LngLatLike): number {\n\t\tvar R = 6371e3; // metres\n\t\tvar φ1 = this.deg2rad(lnglat1.lat);\n\t\tvar φ2 = this.deg2rad(lnglat2.lat);\n\t\tvar Δφ = this.deg2rad(lnglat2.lat - lnglat1.lat);\n\t\tvar Δλ = this.deg2rad(lnglat2.lng - lnglat1.lng);\n\n\t\tvar a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n\t\tvar d = R * c;\n\t\treturn d;\n\t}\n\n\tstatic expand_triangle(triangle: Triangle, margin: number): Triangle {\n\t\tconst mid_point = new THREE.Vector3();\n\t\ttriangle.getMidpoint(mid_point);\n\n\t\tenum TriangleProp {\n\t\t\ta = 'a',\n\t\t\tb = 'b',\n\t\t\tc = 'c',\n\t\t}\n\t\tfor (let prop of ['a', 'b', 'c']) {\n\t\t\tconst delta = triangle[prop as TriangleProp].clone().sub(mid_point);\n\t\t\tconst delta_n = delta.clone().normalize();\n\t\t\tconst length = delta.length() + margin;\n\n\t\t\ttriangle[prop as TriangleProp] = mid_point.clone().add(delta_n.multiplyScalar(length));\n\t\t}\n\t\treturn triangle;\n\t}\n\n\tstatic nearestPower2(num: number) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(num) / Math.log(2)));\n\t}\n}\n","import {BaseController} from './_BaseController';\n\nimport {FrontSide} from 'three/src/constants';\nimport {DoubleSide} from 'three/src/constants';\nimport {BackSide} from 'three/src/constants';\nimport {Material} from 'three/src/materials/Material';\nimport {TypedMatNode} from '../_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\nexport function SideParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tdouble_sided = ParamConfig.BOOLEAN(0);\n\t\tfront = ParamConfig.BOOLEAN(1, {visible_if: {double_sided: false}});\n\t};\n}\n\nclass SidedMaterial extends Material {\n\tside!: number;\n}\nclass SideParamsConfig extends SideParamConfig(NodeParamsConfig) {}\nclass SideMatNode extends TypedMatNode<SidedMaterial, SideParamsConfig> {\n\tcreate_material() {\n\t\treturn new SidedMaterial();\n\t}\n}\n\nexport class SideController extends BaseController {\n\tstatic update(node: SideMatNode) {\n\t\tconst single_side = node.pv.front ? FrontSide : BackSide;\n\t\tconst new_side = node.pv.double_sided ? DoubleSide : single_side;\n\t\tif (new_side != node.material.side) {\n\t\t\tnode.material.side = new_side;\n\t\t\tnode.material.needsUpdate = true;\n\t\t}\n\t}\n}\n","import {BaseGlShaderAssembler} from '../_Base';\n\nimport {ThreeToGl} from '../../../../../../core/ThreeToGl';\nimport {OutputGlNode} from '../../../Output';\nimport {AttributeGlNode} from '../../../Attribute';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\nimport {GlobalsGlNode} from '../../../Globals';\nimport {BaseGLDefinition, UniformGLDefinition} from '../../../utils/GLDefinition';\nimport {ConnectionPointType} from '../../../../utils/connections/ConnectionPointType';\nimport {MapUtils} from '../../../../../../core/MapUtils';\nimport {ShaderMaterialWithCustomMaterials} from '../../../../../../core/geometry/Material';\nimport {ShadersCollectionController} from '../../utils/ShadersCollectionController';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {GlNodeFinder} from '../../utils/NodeFinder';\nimport {IUniformsWithTime} from '../../../../../scene/utils/UniformsController';\n// import {BaseNodeType} from '../../_Base';\n// import {GlobalsGeometryHandler} from './Globals/Geometry'\n\nexport enum CustomMaterialName {\n\tDISTANCE = 'customDistanceMaterial',\n\tDEPTH = 'customDepthMaterial',\n\tDEPTH_DOF = 'customDepthDOFMaterial',\n}\n// export type ShaderAssemblerRenderDerivated = {new (node: BaseNodeType): ShaderAssemblerRender};\n// type ShaderAssemblerRenderDerivatedClass = new (...args: any[]) => ShaderAssemblerRender;\nexport type CustomAssemblerMap = Map<CustomMaterialName, typeof ShaderAssemblerMaterial>;\n\nexport class ShaderAssemblerMaterial extends BaseGlShaderAssembler {\n\tprivate _assemblers_by_custom_name: Map<CustomMaterialName, ShaderAssemblerMaterial> = new Map();\n\n\tcreate_material(): ShaderMaterial {\n\t\treturn new ShaderMaterial();\n\t}\n\n\tcustom_assembler_class_by_custom_name(): CustomAssemblerMap | undefined {\n\t\treturn undefined;\n\t}\n\n\tprotected _add_custom_materials(material: ShaderMaterial) {\n\t\tconst class_by_custom_name = this.custom_assembler_class_by_custom_name();\n\t\tif (class_by_custom_name) {\n\t\t\tclass_by_custom_name.forEach(\n\t\t\t\t(assembler_class: typeof ShaderAssemblerMaterial, custom_name: CustomMaterialName) => {\n\t\t\t\t\tthis._add_custom_material(\n\t\t\t\t\t\tmaterial as ShaderMaterialWithCustomMaterials,\n\t\t\t\t\t\tcustom_name,\n\t\t\t\t\t\tassembler_class\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\tprivate _add_custom_material(\n\t\tmaterial: ShaderMaterialWithCustomMaterials,\n\t\tcustom_name: CustomMaterialName,\n\t\tassembler_class: typeof ShaderAssemblerMaterial\n\t) {\n\t\tlet custom_assembler: ShaderAssemblerMaterial | undefined = this._assemblers_by_custom_name.get(custom_name);\n\t\tif (!custom_assembler) {\n\t\t\tcustom_assembler = new assembler_class(this._gl_parent_node);\n\t\t\tthis._assemblers_by_custom_name.set(custom_name, custom_assembler);\n\t\t}\n\t\tmaterial.custom_materials = material.custom_materials || {};\n\t\tmaterial.custom_materials[custom_name] = custom_assembler.create_material();\n\t}\n\n\tasync compile_custom_materials(material: ShaderMaterialWithCustomMaterials): Promise<void> {\n\t\t// const custom_materials_by_name: Map<CustomMaterialName, ShaderMaterial> = new Map();\n\t\t// this._assemblers_by_custom_name.clear();\n\n\t\tconst class_by_custom_name = this.custom_assembler_class_by_custom_name();\n\t\tif (class_by_custom_name) {\n\t\t\tclass_by_custom_name.forEach(\n\t\t\t\tasync (assembler_class: typeof ShaderAssemblerMaterial, custom_name: CustomMaterialName) => {\n\t\t\t\t\tif (this._code_builder) {\n\t\t\t\t\t\tlet assembler: ShaderAssemblerMaterial | undefined = this._assemblers_by_custom_name.get(\n\t\t\t\t\t\t\tcustom_name\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!assembler) {\n\t\t\t\t\t\t\tassembler = new assembler_class(this._gl_parent_node);\n\t\t\t\t\t\t\tthis._assemblers_by_custom_name.set(custom_name, assembler);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tassembler.set_root_nodes(this._root_nodes);\n\t\t\t\t\t\tassembler.set_param_configs_owner(this._code_builder);\n\t\t\t\t\t\tassembler.set_shader_configs(this.shader_configs);\n\t\t\t\t\t\tassembler.set_variable_configs(this.variable_configs());\n\n\t\t\t\t\t\tconst custom_material = material.custom_materials[custom_name];\n\t\t\t\t\t\tif (custom_material) {\n\t\t\t\t\t\t\tawait assembler.compile_material(custom_material);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if (material) {\n\t\t\t\t\t\t// \t// add needsUpdate = true, as we always get the same material\n\t\t\t\t\t\t// \t// material.needsUpdate = true;\n\t\t\t\t\t\t// \tcustom_materials_by_name.set(custom_name, material);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// for (let custom_name of Object.keys(class_by_custom_name)) {\n\t\t// \tconst assembler_class = class_by_custom_name[custom_name];\n\t\t// \t// const assembler = new assembler_class(this._gl_parent_node)\n\n\t\t// }\n\n\t\t// return custom_materials_by_name;\n\t}\n\tasync compile_material(material: ShaderMaterial) {\n\t\t// no need to compile if the globals handler has not been declared\n\t\tif (!this.compile_allowed()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst output_nodes = GlNodeFinder.find_output_nodes(this._gl_parent_node);\n\t\tif (output_nodes.length > 1) {\n\t\t\tthis._gl_parent_node.states.error.set('only one output node allowed');\n\t\t}\n\t\tthis.set_root_nodes(output_nodes);\n\t\tawait this._update_shaders();\n\n\t\tconst new_vertex_shader = this._shaders_by_name.get(ShaderName.VERTEX);\n\t\tconst new_fragment_shader = this._shaders_by_name.get(ShaderName.FRAGMENT);\n\t\tif (new_vertex_shader && new_fragment_shader) {\n\t\t\tmaterial.vertexShader = new_vertex_shader;\n\t\t\tmaterial.fragmentShader = new_fragment_shader;\n\t\t\t// if (this._template_shader && this._template_shader.uniforms) {\n\t\t\tthis.add_uniforms(material.uniforms);\n\t\t\t// }\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\n\t\tconst scene = this._gl_parent_node.scene;\n\t\tif (this.uniforms_time_dependent()) {\n\t\t\t// make sure not to use this._gl_parent_node.graph_node_id() as the id,\n\t\t\t// as we need several materials:\n\t\t\t// - the visible one\n\t\t\t// - the multiple shadow ones\n\t\t\t// - and possibly a depth one\n\t\t\tscene.uniforms_controller.add_time_dependent_uniform_owner(\n\t\t\t\tmaterial.uuid,\n\t\t\t\tmaterial.uniforms as IUniformsWithTime\n\t\t\t);\n\t\t} else {\n\t\t\tscene.uniforms_controller.remove_time_dependent_uniform_owner(material.uuid);\n\t\t}\n\n\t\t// const material = await this._assembler.get_material();\n\t\t// if (material) {\n\t\t// this._shaders_by_name.set(ShaderName.VERTEX, this._template_shader!.vertexShader!);\n\t\t// this._shaders_by_name.set(ShaderName.FRAGMENT, this._template_shader!.fragmentShader!);\n\n\t\t// assign custom materials\n\t\tif ((material as ShaderMaterialWithCustomMaterials).custom_materials) {\n\t\t\tawait this.compile_custom_materials(material as ShaderMaterialWithCustomMaterials);\n\t\t}\n\t\t// const custom_materials = await this.get_custom_materials();\n\t\t// const material_with_custom_materials = material as ShaderMaterialWithCustomMaterials;\n\t\t// material_with_custom_materials.custom_materials = {};\n\t\t// custom_materials.forEach((custom_material, shader_name) => {\n\t\t// \tmaterial_with_custom_materials.custom_materials[shader_name] = custom_material;\n\t\t// });\n\n\t\t// material.needsUpdate = true;\n\t\t// }\n\n\t\t// this.create_spare_parameters();\n\t}\n\tprivate async _update_shaders() {\n\t\tthis._shaders_by_name = new Map();\n\t\tthis._lines = new Map();\n\t\tfor (let shader_name of this.shader_names) {\n\t\t\tconst template = this._template_shader_for_shader_name(shader_name);\n\t\t\tif (template) {\n\t\t\t\tthis._lines.set(shader_name, template.split('\\n'));\n\t\t\t}\n\t\t}\n\t\tif (this._root_nodes.length > 0) {\n\t\t\t// this._output_node.set_assembler(this)\n\t\t\tawait this.build_code_from_nodes(this._root_nodes);\n\n\t\t\tthis._build_lines();\n\t\t}\n\t\t// this._material.uniforms = this.build_uniforms(template_shader)\n\t\tfor (let shader_name of this.shader_names) {\n\t\t\tconst lines = this._lines.get(shader_name);\n\t\t\tif (lines) {\n\t\t\t\tthis._shaders_by_name.set(shader_name, lines.join('\\n'));\n\t\t\t}\n\t\t}\n\t}\n\n\tshadow_assembler_class_by_custom_name() {\n\t\treturn {};\n\t}\n\n\tadd_output_body_line(\n\t\toutput_node: OutputGlNode,\n\t\tshaders_collection_controller: ShadersCollectionController,\n\t\tinput_name: string\n\t) {\n\t\tconst input = output_node.io.inputs.named_input(input_name);\n\t\tconst var_input = output_node.variable_for_input(input_name);\n\t\tconst variable_config = this.variable_config(input_name);\n\n\t\tlet new_var: string | null = null;\n\t\tif (input) {\n\t\t\tnew_var = ThreeToGl.vector3(var_input);\n\t\t} else {\n\t\t\tif (variable_config.default_from_attribute()) {\n\t\t\t\tconst connection_point = output_node.io.inputs.named_input_connection_points_by_name(input_name);\n\t\t\t\tif (connection_point) {\n\t\t\t\t\tconst gl_type = connection_point.type;\n\t\t\t\t\tconst attr_read = this.globals_handler?.read_attribute(\n\t\t\t\t\t\toutput_node,\n\t\t\t\t\t\tgl_type,\n\t\t\t\t\t\tinput_name,\n\t\t\t\t\t\tshaders_collection_controller\n\t\t\t\t\t);\n\t\t\t\t\tif (attr_read) {\n\t\t\t\t\t\tnew_var = attr_read;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst variable_config_default = variable_config.default();\n\t\t\t\tif (variable_config_default) {\n\t\t\t\t\tnew_var = variable_config_default;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// const default_value = variable_config.default()\n\t\t\t// new_var = default_value\n\t\t\t// const definition_configs = variable_config.required_definitions() || []\n\t\t\t// for(let definition_config of definition_configs){\n\t\t\t// \tconst definition = definition_config.create_definition(output_node)\n\t\t\t// \toutput_node.add_definitions([definition])\n\t\t\t// }\n\t\t}\n\t\tif (new_var) {\n\t\t\tconst prefix = variable_config.prefix();\n\t\t\tconst suffix = variable_config.suffix();\n\t\t\tconst if_condition = variable_config.if_condition();\n\t\t\tif (if_condition) {\n\t\t\t\tshaders_collection_controller.add_body_lines(output_node, [`#if ${if_condition}`]);\n\t\t\t}\n\t\t\tshaders_collection_controller.add_body_lines(output_node, [`${prefix}${new_var}${suffix}`]);\n\t\t\tif (if_condition) {\n\t\t\t\tshaders_collection_controller.add_body_lines(output_node, [`#endif`]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset_node_lines_output(output_node: OutputGlNode, shaders_collection_controller: ShadersCollectionController) {\n\t\t// const body_lines = [];\n\t\tconst shader_name = shaders_collection_controller.current_shader_name;\n\t\tconst input_names = this.shader_config(shader_name)?.input_names();\n\t\tif (input_names) {\n\t\t\t// shaders_collection_controller.set_body_lines([], shader_name);\n\t\t\tfor (let input_name of input_names) {\n\t\t\t\tthis.add_output_body_line(output_node, shaders_collection_controller, input_name);\n\t\t\t}\n\t\t}\n\t}\n\tset_node_lines_attribute(\n\t\tattribute_node: AttributeGlNode,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\t// const named_output = attribute_node.connected_output()\n\t\t// const named_connection = attribute_node.connected_input()\n\t\tconst gl_type = attribute_node.gl_type();\n\t\tconst new_var = this.globals_handler?.read_attribute(\n\t\t\tattribute_node,\n\t\t\tgl_type,\n\t\t\tattribute_node.attribute_name,\n\t\t\tshaders_collection_controller\n\t\t);\n\t\tconst var_name = attribute_node.gl_var_name(attribute_node.output_name);\n\t\tshaders_collection_controller.add_body_lines(attribute_node, [`${gl_type} ${var_name} = ${new_var}`]);\n\t\t// this.add_output_body_line(\n\t\t// \tattribute_node,\n\t\t// \tshader_name,\n\t\t// \tinput_name\n\t\t// \t)\n\n\t\t// const vertex_definitions = []\n\t\t// const vertex_body_lines = []\n\t\t// const fragment_definitions = []\n\n\t\t// const named_output = attribute_node.named_outputs()[0]\n\t\t// const gl_type = named_output.type()\n\t\t// const var_name = attribute_node.gl_var_name(named_output.name())\n\n\t\t// const attribute_name = attribute_node.attribute_name()\n\t\t// // TODO: I should probably raise an error in the node\n\t\t// // maybe when doint the initial eval of all nodes and check for errors?\n\t\t// if(!attribute_name){\n\t\t// \tconsole.error(attribute_node.full_path())\n\t\t// \tthrow new Error(\"empty attr name\")\n\t\t// }\n\t\t// if(GlobalsGeometryHandler.PRE_DEFINED_ATTRIBUTES.indexOf(attribute_name) < 0){\n\t\t// \tvertex_definitions.push(new Definition.Attribute(attribute_node, gl_type, attribute_name))\n\t\t// }\n\t\t// vertex_definitions.push(new Definition.Varying(attribute_node, gl_type, var_name))\n\t\t// vertex_body_lines.push( `${var_name} = ${attribute_name}` )\n\t\t// fragment_definitions.push(new Definition.Varying(attribute_node, gl_type, var_name))\n\n\t\t// attribute_node.set_definitions(vertex_definitions, 'vertex')\n\t\t// attribute_node.set_definitions(fragment_definitions, 'fragment')\n\t\t// attribute_node.add_body_lines(vertex_body_lines, 'vertex')\n\t}\n\n\thandle_gl_FragCoord(body_lines: string[], shader_name: ShaderName, var_name: string) {\n\t\tif (shader_name == ShaderName.FRAGMENT) {\n\t\t\tbody_lines.push(`vec4 ${var_name} = gl_FragCoord`);\n\t\t}\n\t}\n\thandle_resolution(body_lines: string[], shader_name: ShaderName, var_name: string) {\n\t\tif (shader_name == ShaderName.FRAGMENT) {\n\t\t\tbody_lines.push(`vec2 ${var_name} = resolution`);\n\t\t}\n\t}\n\n\tset_node_lines_globals(globals_node: GlobalsGlNode, shaders_collection_controller: ShadersCollectionController) {\n\t\t// const vertex_definitions = [];\n\t\t// const fragment_definitions = [];\n\t\t// const definitions = [];\n\t\t// const vertex_body_lines = []\n\t\t// const fragment_body_lines = [];\n\t\tconst body_lines = [];\n\t\tconst shader_name = shaders_collection_controller.current_shader_name;\n\t\tconst shader_config = this.shader_config(shader_name);\n\t\tif (!shader_config) {\n\t\t\treturn;\n\t\t}\n\t\tconst dependencies = shader_config.dependencies();\n\n\t\tconst definitions_by_shader_name: Map<ShaderName, BaseGLDefinition[]> = new Map();\n\t\t// definitions_by_shader_nameshader_name] = [];\n\t\t// for (let dependency of dependencies) {\n\t\t// \tdefinitions_by_shader_name[dependency] = [];\n\t\t// }\n\n\t\tconst body_lines_by_shader_name: Map<ShaderName, string[]> = new Map();\n\t\t// body_lines_by_shader_name[shader_name] = [];\n\t\t// for (let dependency of dependencies) {\n\t\t// \tbody_lines_by_shader_name[dependency] = [];\n\t\t// }\n\n\t\tlet definition;\n\t\tlet body_line;\n\t\tfor (let output_name of globals_node.io.outputs.used_output_names()) {\n\t\t\tconst var_name = globals_node.gl_var_name(output_name);\n\t\t\tconst globals_shader_name = shaders_collection_controller.current_shader_name;\n\n\t\t\tswitch (output_name) {\n\t\t\t\tcase 'time':\n\t\t\t\t\tdefinition = new UniformGLDefinition(globals_node, ConnectionPointType.FLOAT, output_name);\n\t\t\t\t\tif (globals_shader_name) {\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(definitions_by_shader_name, globals_shader_name, definition);\n\t\t\t\t\t}\n\n\t\t\t\t\tbody_line = `float ${var_name} = ${output_name}`;\n\t\t\t\t\tfor (let dependency of dependencies) {\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(definitions_by_shader_name, dependency, definition);\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(body_lines_by_shader_name, dependency, body_line);\n\t\t\t\t\t}\n\n\t\t\t\t\t// vertex_body_lines.push(`float ${var_name} = ${output_name}`)\n\t\t\t\t\tbody_lines.push(body_line);\n\t\t\t\t\tthis.set_uniforms_time_dependent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gl_FragCoord':\n\t\t\t\t\tthis.handle_gl_FragCoord(body_lines, shader_name, var_name);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'resolution':\n\t\t\t\t\tthis.handle_resolution(body_lines, shader_name, var_name);\n\t\t\t\t\tdefinition = new UniformGLDefinition(globals_node, ConnectionPointType.VEC2, output_name);\n\t\t\t\t\tif (globals_shader_name) {\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(definitions_by_shader_name, globals_shader_name, definition);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let dependency of dependencies) {\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(definitions_by_shader_name, dependency, definition);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.set_resolution_dependent();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'gl_PointCoord':\n\t\t\t\t\tif (shader_name == ShaderName.FRAGMENT) {\n\t\t\t\t\t\tbody_lines.push(`vec2 ${var_name} = gl_PointCoord`);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// const named_output = globals_node.named_output_by_name(output_name)\n\t\t\t\t\t// const gl_type = named_output.gl_type()\n\t\t\t\t\t// const new_var = this.globals_handler().read_attribute(\n\t\t\t\t\t// \tglobals_node,\n\t\t\t\t\t// \tgl_type,\n\t\t\t\t\t// \toutput_name\n\t\t\t\t\t// )\n\t\t\t\t\t// const body_line = `${var_name} = ${new_var}`\n\t\t\t\t\t// globals_node.add_body_lines([body_line])\n\t\t\t\t\tthis.globals_handler?.handle_globals_node(\n\t\t\t\t\t\tglobals_node,\n\t\t\t\t\t\toutput_name,\n\t\t\t\t\t\tshaders_collection_controller\n\t\t\t\t\t\t// definitions_by_shader_name,\n\t\t\t\t\t\t// body_lines_by_shader_name,\n\t\t\t\t\t\t// body_lines,\n\t\t\t\t\t\t// dependencies,\n\t\t\t\t\t\t// shader_name\n\t\t\t\t\t);\n\t\t\t\t// const named_output = globals_node.named_output_by_name(output_name)\n\t\t\t\t// const gl_type = named_output.gl_type()\n\t\t\t\t// definition = new Definition.Varying(globals_node, gl_type, var_name)\n\t\t\t\t// definitions_by_shader_name[shader_name].push(definition)\n\t\t\t\t// throw \"debug\"\n\n\t\t\t\t// body_line = `${var_name} = vec3(${output_name})`\n\t\t\t\t// for(let dependency of dependencies){\n\t\t\t\t// \tdefinitions_by_shader_name[dependency].push(definition)\n\t\t\t\t// \tbody_lines_by_shader_name[dependency].push(body_line)\n\t\t\t\t// }\n\t\t\t\t// if(dependencies.length == 0){\n\t\t\t\t// \tbody_lines.push(body_line)\n\t\t\t\t// }\n\t\t\t}\n\t\t}\n\t\t// this.set_vertex_definitions(vertex_definitions)\n\t\t// this.set_fragment_definitions(fragment_definitions)\n\t\tdefinitions_by_shader_name.forEach((definitions, shader_name) => {\n\t\t\tshaders_collection_controller.add_definitions(globals_node, definitions, shader_name);\n\t\t});\n\t\tbody_lines_by_shader_name.forEach((body_lines, shader_name) => {\n\t\t\tshaders_collection_controller.add_body_lines(globals_node, body_lines, shader_name);\n\t\t});\n\t\t// this.add_definitions(definitions)\n\t\t// this.set_vertex_body_lines(vertex_body_lines)\n\t\t// this.set_fragment_body_lines(fragment_body_lines)\n\n\t\tshaders_collection_controller.add_body_lines(globals_node, body_lines);\n\t}\n}\n","import {BaseContainer, TypedContainer} from '../../containers/_Base';\nimport {BaseNodeType} from '../_Base';\n\ntype Callback<T extends TypedContainer<any>> = (container: T | undefined) => void;\n\nexport class TypedContainerController<T extends TypedContainer<any>> {\n\tprivate _callbacks: Callback<T>[] = [];\n\tprotected _container: T;\n\n\tconstructor(protected node: BaseNodeType, container_class: typeof BaseContainer) {\n\t\tthis._container = new container_class(this.node) as T;\n\t}\n\n\tget container() {\n\t\treturn this._container;\n\t}\n\n\trequest_container(): Promise<T> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._callbacks.push(resolve);\n\t\t\tthis.node.scene.cook_controller.add_node(this.node);\n\n\t\t\t// const cooker = this.node.scene.cooker;\n\t\t\t// if (cooker.blocked()) {\n\t\t\t// \tcooker.enqueue(this.node);\n\t\t\t// } else {\n\t\t\tsetTimeout(this.process_container_request.bind(this), 0);\n\t\t\t// }\n\t\t});\n\t}\n\n\tprocess_container_request() {\n\t\tif (this.node.flags?.bypass?.active) {\n\t\t\tconst input_index = 0;\n\t\t\tthis.request_input_container(input_index).then((container) => {\n\t\t\t\tthis.node.remove_dirty_state();\n\t\t\t\tif (container) {\n\t\t\t\t\tthis.notify_requesters(container);\n\t\t\t\t} else {\n\t\t\t\t\tthis.node.states.error.set('input invalid');\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tif (this.node.is_dirty) {\n\t\t\t\tthis.node.container_controller.container.reset_caches();\n\t\t\t\tthis.node.cook_controller.cook_main();\n\t\t\t} else {\n\t\t\t\tthis.notify_requesters();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync request_input_container(input_index: number) {\n\t\tconst input_node = this.node.io.inputs.input(input_index);\n\t\tif (input_node) {\n\t\t\tinput_node.processing_context.copy(this.node.processing_context);\n\t\t\tconst container = await input_node.container_controller.request_container();\n\t\t\treturn container;\n\t\t} else {\n\t\t\tthis.node.states.error.set(`input ${input_index} required`);\n\t\t\tthis.notify_requesters();\n\t\t\treturn null;\n\t\t}\n\t}\n\tnotify_requesters(container?: T) {\n\t\t// make a copy of the callbacks first,\n\t\t// to ensure that new ones are not added to this list\n\t\t// in side effects from those callbacks\n\t\t// (the test suite for the File SOP is a good test for this)\n\t\tlet callback;\n\t\tconst callbacks = [];\n\t\twhile ((callback = this._callbacks.pop())) {\n\t\t\tcallbacks.push(callback);\n\t\t}\n\n\t\tif (!container) {\n\t\t\tcontainer = this.node.container_controller.container.clone();\n\t\t}\n\t\t// removing the clone, as this seems to defeat the no cloning of inputs\n\t\t// container = container || this._container\n\t\twhile ((callback = callbacks.pop())) {\n\t\t\tcallback(container);\n\t\t}\n\t\tthis.node.scene.cook_controller.remove_node(this.node);\n\t}\n}\n\nexport class BaseContainerController extends TypedContainerController<any> {}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nconst THREE = {Vector2, Vector3};\n\nconst ATTRIB_NAME_MAP: Dictionary<string> = {\n\tP: 'position',\n\tN: 'normal',\n\tCd: 'color',\n};\n\nexport class CoreAttribute {\n\t// constructor: (@_size, @_value)->\n\t// \t#\n\n\t// size: ->\n\t// \t@_size\n\n\t// value: ->\n\t// \t@_value\n\n\t// set_value: (value)->\n\t// \t@_value = value\n\n\tstatic remap_name(name: string): string {\n\t\treturn ATTRIB_NAME_MAP[name] || name;\n\t}\n\n\tstatic array_to_indexed_arrays(array: string[]) {\n\t\tconst index_by_value: Dictionary<number> = {};\n\t\tlet current_index = 0;\n\t\tconst indices = [];\n\t\tconst values = [];\n\n\t\tlet i = 0;\n\t\twhile (i < array.length) {\n\t\t\t//(value = array[i++])?\n\t\t\tconst value = array[i];\n\t\t\tconst index = index_by_value[value];\n\t\t\tif (index != null) {\n\t\t\t\tindices.push(index);\n\t\t\t} else {\n\t\t\t\tvalues.push(value);\n\t\t\t\tindices.push(current_index);\n\t\t\t\tindex_by_value[value] = current_index;\n\t\t\t\tcurrent_index += 1;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\treturn {\n\t\t\tindices,\n\t\t\tvalues,\n\t\t};\n\t}\n\n\tstatic default_value(size: number) {\n\t\tswitch (size) {\n\t\t\tcase 1:\n\t\t\t\treturn 0;\n\t\t\tcase 2:\n\t\t\t\treturn new THREE.Vector2(0, 0);\n\t\t\tcase 3:\n\t\t\t\treturn new THREE.Vector3(0, 0, 0);\n\t\t\tdefault:\n\t\t\t\tthrow `size ${size} not yet implemented`;\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../nodes/_Base';\n\n// interface ContentOption {\n// \tclone?: boolean\n// }\n\nimport {ContainableMap} from './utils/ContainableMap';\ntype K = keyof ContainableMap;\ntype Containable = ContainableMap[K];\n\nexport abstract class TypedContainer<T extends Containable> {\n\t// protected _node: BaseNode;\n\t// protected _eval_key: number\n\tprotected _content!: T;\n\n\tconstructor(protected _node: BaseNodeType) {\n\t\t// this.update_eval_key();\n\t\t// this.set_content(this._default_content());\n\t}\n\n\tset_node(node: BaseNodeType) {\n\t\tthis._node = node;\n\t}\n\tnode(): BaseNodeType {\n\t\treturn this._node;\n\t}\n\n\tclone() {\n\t\tlet content;\n\t\tconst cloned_container = new (<any>this.constructor)() as TypedContainer<T>;\n\t\tcloned_container.set_node(this.node());\n\t\tif ((content = this.content()) != null) {\n\t\t\tcloned_container.set_content(content); //, this.eval_key() );\n\t\t}\n\t\treturn cloned_container;\n\t}\n\treset_caches() {}\n\t// abstract _default_content(): T;\n\n\tset_content(content: T) {\n\t\t//, eval_key?: number){\n\t\tthis.reset_caches();\n\t\tthis._content = content; //|| this._default_content();\n\t\t// this.update_eval_key(eval_key);\n\t\tthis._post_set_content();\n\t}\n\thas_content(): boolean {\n\t\treturn this._content != null;\n\t}\n\t// content(options: ContentOption = {}) {\n\t// \tconst clone = options['clone'] || false\n\t// \tif (clone) {\n\t// \t\treturn this.clone_content()\n\t// \t} else {\n\t// \t\treturn this._content\n\t// \t}\n\t// }\n\tcontent() {\n\t\treturn this._content;\n\t}\n\tprotected _post_set_content() {}\n\tpublic core_content(): T | undefined {\n\t\treturn this._content;\n\t}\n\tpublic core_content_cloned(): T | undefined {\n\t\treturn this._content;\n\t}\n\t// abstract clone_content(): T\n\n\t// update_eval_key(eval_key?: number){\n\t// \tthis._eval_key = eval_key || performance.now();\n\t// }\n\t// eval_key(): number {\n\t// \treturn this._eval_key;\n\t// }\n\n\tinfos(): any {\n\t\treturn [];\n\t}\n}\n\nexport class BaseContainer extends TypedContainer<any> {}\n","import {BaseController} from './_BaseController';\nimport {Material} from 'three/src/materials/Material';\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\nimport {TypedMatNode} from '../_Base';\nexport function SkinningParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tskinning = ParamConfig.BOOLEAN(0);\n\t};\n}\n\nclass SkinnedMaterial extends Material {\n\tskinning!: boolean;\n}\nclass SkinningParamsConfig extends SkinningParamConfig(NodeParamsConfig) {}\nclass SkinningMatNode extends TypedMatNode<SkinnedMaterial, SkinningParamsConfig> {\n\tcreate_material() {\n\t\treturn new SkinnedMaterial();\n\t}\n}\n\nexport class SkinningController extends BaseController {\n\tstatic update(node: SkinningMatNode) {\n\t\tconst new_skinning = node.pv.skinning;\n\t\tif (new_skinning != node.material.skinning) {\n\t\t\tnode.material.skinning = new_skinning;\n\t\t\tnode.material.needsUpdate = true;\n\t\t}\n\t}\n}\n","import {Material} from 'three/src/materials/Material';\nimport {Texture} from 'three/src/textures/Texture';\nimport {FileCopNode} from '../../cop/File';\nimport {TypedMatNode} from '../_Base';\nimport {\n\tBaseTextureMapController,\n\tBooleanParamOptions,\n\tOperatorPathOptions,\n\tUpdateOptions,\n} from './_BaseTextureController';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\n\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\nexport function TextureMapParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tuse_map = ParamConfig.BOOLEAN(0, BooleanParamOptions(TextureMapController));\n\t\tmap = ParamConfig.OPERATOR_PATH(\n\t\t\tFileCopNode.DEFAULT_NODE_PATH.UV,\n\t\t\tOperatorPathOptions(TextureMapController, 'use_map')\n\t\t);\n\t};\n}\nclass TextureMapMaterial extends Material {\n\tmap!: Texture | null;\n}\ntype CurrentMaterial = TextureMapMaterial | ShaderMaterial;\nclass TextureMapParamsConfig extends TextureMapParamConfig(NodeParamsConfig) {}\nabstract class TextureMapMatNode extends TypedMatNode<CurrentMaterial, TextureMapParamsConfig> {\n\ttexture_map_controller!: TextureMapController;\n\tabstract create_material(): CurrentMaterial;\n}\n\nexport class TextureMapController extends BaseTextureMapController {\n\tconstructor(node: TextureMapMatNode, _update_options: UpdateOptions) {\n\t\tsuper(node, _update_options);\n\t}\n\tinitialize_node() {\n\t\tthis.add_hooks(this.node.p.use_map, this.node.p.map);\n\t}\n\tasync update() {\n\t\tthis._update(this.node.material, 'map', this.node.p.use_map, this.node.p.map);\n\t}\n\tstatic async update(node: TextureMapMatNode) {\n\t\tnode.texture_map_controller.update();\n\t}\n}\n","import {Material} from 'three/src/materials/Material';\nimport {Texture} from 'three/src/textures/Texture';\nimport {FileCopNode} from '../../cop/File';\nimport {TypedMatNode} from '../_Base';\nimport {\n\tBaseTextureMapController,\n\tBooleanParamOptions,\n\tOperatorPathOptions,\n\tUpdateOptions,\n} from './_BaseTextureController';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\n\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\n// import {NodeContext} from '../../../poly/NodeContext';\n// import {BaseCopNodeType} from '../../cop/_Base';\nexport function TextureAlphaMapParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tuse_alpha_map = ParamConfig.BOOLEAN(0, BooleanParamOptions(TextureAlphaMapController));\n\t\talpha_map = ParamConfig.OPERATOR_PATH(\n\t\t\tFileCopNode.DEFAULT_NODE_PATH.UV,\n\t\t\tOperatorPathOptions(TextureAlphaMapController, 'use_alpha_map')\n\t\t);\n\t};\n}\nclass TextureAlphaMaterial extends Material {\n\talphaMap!: Texture | null;\n}\ntype CurrentMaterial = TextureAlphaMaterial | ShaderMaterial;\nclass TextureAlphaMapParamsConfig extends TextureAlphaMapParamConfig(NodeParamsConfig) {}\nabstract class TextureAlphaMapMatNode extends TypedMatNode<CurrentMaterial, TextureAlphaMapParamsConfig> {\n\ttexture_alpha_map_controller!: TextureAlphaMapController;\n\tabstract create_material(): CurrentMaterial;\n}\n\nexport class TextureAlphaMapController extends BaseTextureMapController {\n\tconstructor(node: TextureAlphaMapMatNode, _update_options: UpdateOptions) {\n\t\tsuper(node, _update_options);\n\t}\n\tinitialize_node() {\n\t\tthis.add_hooks(this.node.p.use_alpha_map, this.node.p.alpha_map);\n\t}\n\tasync update() {\n\t\tthis._update(this.node.material, 'alphaMap', this.node.p.use_alpha_map, this.node.p.alpha_map);\n\t}\n\tstatic async update(node: TextureAlphaMapMatNode) {\n\t\tnode.texture_alpha_map_controller.update();\n\t}\n}\n","import lodash_sortBy from 'lodash/sortBy';\n// import lodash_isArray from 'lodash/isArray'\n// import lodash_isString from 'lodash/isString'\nimport {RGBFormat} from 'three/src/constants';\nimport {DataTexture} from 'three/src/textures/DataTexture';\nimport {CubicInterpolant} from 'three/src/math/interpolants/CubicInterpolant';\n// import {ClampToEdgeWrapping} from 'three/src/constants'\n// import {TypedParamVisitor} from './_Base';\nimport {TypedParam} from './_Base';\nimport {RampValue, RampPoint, RampValueJson, RampInterpolation} from './ramp/RampValue';\n\n// import {AsCodeRamp} from './concerns/visitors/Ramp';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamEvent} from '../poly/ParamEvent';\n\n// interface RampParamVisitor extends TypedParamVisitor {\n// \tvisit_ramp_param: (param: RampParam) => any;\n// }\n\nexport class RampParam extends TypedParam<ParamType.RAMP> {\n\tstatic type() {\n\t\treturn ParamType.RAMP;\n\t}\n\n\tprivate _ramp_interpolant: CubicInterpolant | undefined;\n\tprivate _ramp_texture: DataTexture | undefined;\n\n\tstatic DEFAULT_VALUE = new RampValue(RampInterpolation.LINEAR, [new RampPoint(0, 0), new RampPoint(1, 1)]);\n\tstatic DEFAULT_VALUE_JSON: RampValueJson = RampParam.DEFAULT_VALUE.to_json();\n\n\tget default_value_serialized() {\n\t\tif (this.default_value instanceof RampValue) {\n\t\t\treturn this.default_value.to_json();\n\t\t} else {\n\t\t\treturn this.default_value;\n\t\t}\n\t}\n\tprotected _clone_raw_input(raw_input: ParamInitValuesTypeMap[ParamType.RAMP]) {\n\t\tif (raw_input instanceof RampValue) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\treturn RampValue.from_json(raw_input).to_json();\n\t\t}\n\t}\n\tget raw_input_serialized() {\n\t\tif (this._raw_input instanceof RampValue) {\n\t\t\treturn this._raw_input.to_json();\n\t\t} else {\n\t\t\treturn RampValue.from_json(this._raw_input).to_json();\n\t\t}\n\t}\n\tget value_serialized() {\n\t\treturn this.value.to_json();\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.RAMP],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.RAMP]\n\t) {\n\t\tif (raw_input1 instanceof RampValue) {\n\t\t\tif (raw_input2 instanceof RampValue) {\n\t\t\t\treturn raw_input1.is_equal(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn raw_input1.is_equal_json(raw_input2);\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof RampValue) {\n\t\t\t\treturn raw_input2.is_equal_json(raw_input1);\n\t\t\t} else {\n\t\t\t\treturn RampValue.are_json_equal(raw_input1, raw_input2);\n\t\t\t}\n\t\t}\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.RAMP], val2: ParamValuesTypeMap[ParamType.RAMP]) {\n\t\treturn val1.is_equal(val2);\n\t}\n\tprivate _reset_ramp_interpolant_and_texture_bound = this._reset_ramp_interpolant_and_texture.bind(this);\n\tinitialize_param() {\n\t\tthis.add_post_dirty_hook('_reset_ramp_interpolant_and_texture', this._reset_ramp_interpolant_and_texture_bound);\n\t}\n\t// accepts_visitor(visitor: RampParamVisitor) {\n\t// \treturn visitor.visit_ramp_param(this);\n\t// }\n\tget is_default(): boolean {\n\t\tif (this.default_value instanceof RampValue) {\n\t\t\treturn this.value.is_equal(this.default_value);\n\t\t} else {\n\t\t\treturn this.value.is_equal_json(this.default_value);\n\t\t}\n\t}\n\tprotected process_raw_input() {\n\t\tif (this._raw_input instanceof RampValue) {\n\t\t\tif (!this._value) {\n\t\t\t\tthis._value = this._raw_input;\n\t\t\t} else {\n\t\t\t\tthis._value.copy(this._raw_input);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this._value) {\n\t\t\t\tthis._value = RampValue.from_json(this._raw_input);\n\t\t\t} else {\n\t\t\t\tthis._value.from_json(this._raw_input);\n\t\t\t}\n\t\t}\n\n\t\tthis.emit_controller.emit(ParamEvent.VALUE_UPDATED);\n\t}\n\n\t// convert_value(v) {\n\t// \tlet is_json = false\n\n\t// \tif (lodash_isString(v)) {\n\t// \t\tv = JSON.parse(v)\n\t// \t\tis_json = true\n\t// \t}\n\n\t// \tif (!is_json) {\n\t// \t\tif (v.interpolation && v.points) {\n\t// \t\t\tif (lodash_isArray(v.points)) {\n\t// \t\t\t\tis_json = true\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \tif (is_json) {\n\t// \t\tv = RampValue.from_json(v)\n\t// \t}\n\n\t// \treturn v\n\t// }\n\t// convert_default_value(v) {\n\t// \treturn this.convert_value(v)\n\t// }\n\n\thas_expression() {\n\t\treturn false;\n\t}\n\n\t_reset_ramp_interpolant_and_texture() {\n\t\tthis._ramp_interpolant = undefined;\n\t\tthis._ramp_texture = undefined;\n\t}\n\tramp_texture() {\n\t\treturn (this._ramp_texture = this._ramp_texture || this._create_ramp_texture());\n\t}\n\t_create_ramp_texture() {\n\t\tconst width = 1024;\n\t\tconst height = 1;\n\n\t\tconst size = width * height;\n\t\tconst data = new Uint8Array(3 * size);\n\n\t\tlet stride = 0;\n\t\tlet position = 0;\n\t\tlet value = 0;\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tstride = i * 3;\n\t\t\tposition = i / width;\n\t\t\tvalue = this.value_at_position(position);\n\t\t\tdata[stride] = value * 255; // if I set 256, a value of 1 will become 0\n\t\t\t// data[ stride+1 ] = 1\n\t\t\t// data[ stride+2 ] = 2\n\t\t}\n\n\t\tconst texture = new DataTexture(data, width, height, RGBFormat);\n\t\t// texture.wrapS = ClampToEdgeWrapping\n\t\t// texture.wrapT = ClampToEdgeWrapping\n\t\t// texture.wrapS = ClampToEdgeWrapping\n\t\t// texture.wrapT = ClampToEdgeWrapping\n\t\ttexture.needsUpdate = true;\n\t\treturn texture;\n\t}\n\n\tstatic create_interpolant(positions: Float32Array, values: Float32Array) {\n\t\tconst values_count = 1;\n\t\tconst interpolated_values = new Float32Array(values_count);\n\t\treturn new CubicInterpolant(positions, values, values_count, interpolated_values);\n\t}\n\tinterpolant() {\n\t\treturn (this._ramp_interpolant = this._ramp_interpolant || this._create_interpolant());\n\t}\n\t_create_interpolant() {\n\t\tconst points = this.value.points;\n\t\tconst sorted_points = lodash_sortBy(points, (point) => point.position);\n\t\tconst positions = new Float32Array(sorted_points.length);\n\t\tconst values = new Float32Array(sorted_points.length);\n\n\t\tlet i = 0;\n\t\tfor (let sorted_point of sorted_points) {\n\t\t\tpositions[i] = sorted_point.position;\n\t\t\tvalues[i] = sorted_point.value;\n\t\t\ti++;\n\t\t}\n\n\t\treturn RampParam.create_interpolant(positions, values);\n\t}\n\n\tvalue_at_position(position: number): number {\n\t\treturn (<unknown>this.interpolant().evaluate(position)[0]) as number;\n\t}\n}\n","export class MapUtils {\n\tstatic push_on_array_at_entry<K, V>(map: Map<K, V[]>, key: K, new_element: V) {\n\t\tlet has_entry = map.has(key);\n\t\tif (has_entry) {\n\t\t\tmap.get(key)!.push(new_element);\n\t\t} else {\n\t\t\tmap.set(key, [new_element]);\n\t\t}\n\t}\n\tstatic unshift_on_array_at_entry<K, V>(map: Map<K, V[]>, key: K, new_element: V) {\n\t\tlet has_entry = map.has(key);\n\t\tif (has_entry) {\n\t\t\tmap.get(key)!.unshift(new_element);\n\t\t} else {\n\t\t\tmap.set(key, [new_element]);\n\t\t}\n\t}\n\tstatic concat_on_array_at_entry<K, V>(map: Map<K, V[]>, key: K, new_elements: V[]) {\n\t\tlet has_entry = map.has(key);\n\t\tif (has_entry) {\n\t\t\tlet array: V[] = map.get(key)!;\n\t\t\tfor (let element of new_elements) {\n\t\t\t\tarray.push(element);\n\t\t\t}\n\t\t} else {\n\t\t\tmap.set(key, new_elements);\n\t\t}\n\t}\n}\n","export const CATEGORY_OBJ = {\n\tLIGHT: 'lights',\n\tMANAGER: 'managers',\n\tGEOMETRY: 'geometries',\n\tCAMERA: 'cameras',\n\tMISC: 'misc',\n};\nexport const CATEGORY_COP = {\n\tINPUT: 'inputs',\n\tADVANCED: 'advanced',\n\tMISC: 'misc',\n};\nexport const CATEGORY_EVENT = {\n\tCAMERA: 'cameras',\n\tMISC: 'misc',\n};\nexport const CATEGORY_GL = {\n\tCOLOR: 'color',\n\tCONVERSION: 'conversion',\n\tDYNAMICS: 'dynamics',\n\tGEOMETRY: 'geometry',\n\tGLOBALS: 'globals',\n\tLOGIC: 'logic',\n\tMATH: 'math',\n\tQUAT: 'quat',\n\tTRIGO: 'trigo',\n\tUTIL: 'util',\n\tINSTANCE: 'instance',\n};\nexport const CATEGORY_MAT = {\n\tADVANCED: 'advanced',\n\tMESH: 'meshes',\n\tPOINTS: 'points',\n\tLINE: 'lines',\n\tVOLUME: 'volumes',\n\tINSTANCE: 'instances',\n};\nexport const CATEGORY_SOP = {\n\tADVANCED: 'advanced',\n\tANIMATION: 'animation',\n\tATTRIBUTE: 'attributes',\n\tDYNAMICS: 'dynamics',\n\tINPUT: 'inputs',\n\tMISC: 'misc',\n\tMODIFIER: 'modifiers',\n\tPRIMITIVES: 'primitives',\n\tRENDER: 'render',\n};\nexport const CATEGORY_POST = {\n\tPASS: 'passes',\n};\n","import {TypedNode} from '../_Base';\nimport {TextureContainer} from '../../containers/Texture';\nimport {Texture} from 'three/src/textures/Texture';\nimport {TypedContainerController} from '../utils/ContainerController';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {PolyScene} from '../../scene/PolyScene';\nimport {FlagsControllerB} from '../utils/FlagsController';\nimport {DataTexture} from 'three/src/textures/DataTexture';\nimport {LuminanceFormat, HalfFloatType} from 'three/src/constants';\n\nconst INPUT_COP_NAME = 'input texture';\nconst DEFAULT_INPUT_NAMES = [INPUT_COP_NAME, INPUT_COP_NAME, INPUT_COP_NAME, INPUT_COP_NAME];\n\nvar size = 32;\nvar data = new Uint16Array(size);\nfor (var i = 0; i < size; i++) {\n\tdata[i] = 0x70e2; // Half float 10000\n}\nconst EMPTY_DATA_TEXTURE = new DataTexture(data, size, 1, LuminanceFormat, HalfFloatType);\n\nexport class TypedCopNode<K extends NodeParamsConfig> extends TypedNode<'TEXTURE', BaseCopNodeType, K> {\n\tcontainer_controller: TypedContainerController<TextureContainer> = new TypedContainerController<TextureContainer>(\n\t\tthis,\n\t\tTextureContainer\n\t);\n\tpublic readonly flags: FlagsControllerB = new FlagsControllerB(this);\n\t// private _typed_array = new Uint8ClampedArray(512 * 512 * 4);\n\t// protected _texture: Texture = new DataTexture(this._typed_array, 512, 512, RGBFormat);\n\t// get texture() {\n\t// \treturn this._data_texture;\n\t// }\n\n\tstatic node_context(): NodeContext {\n\t\treturn NodeContext.COP;\n\t}\n\tstatic displayed_input_names(): string[] {\n\t\treturn DEFAULT_INPUT_NAMES;\n\t}\n\n\tconstructor(scene: PolyScene) {\n\t\tsuper(scene, 'BaseCopNode');\n\t}\n\n\tinitialize_base_node() {\n\t\t// this.flags.add_bypass();\n\n\t\t// this.flags.add_display();\n\t\t// if (this.flags.display) {\n\t\t// \tthis.flags.display.set(false);\n\t\t// }\n\t\tthis.io.outputs.set_has_one_output();\n\t\t// this.container_controller.init(CONTAINER_CLASS);\n\t}\n\tnode_sibbling(name: string): BaseCopNodeType | null {\n\t\treturn super.node_sibbling(name) as BaseCopNodeType | null;\n\t}\n\n\tset_texture(texture: Texture) {\n\t\t// this._copy_texture(texture);\n\t\ttexture.name = this.full_path();\n\t\tthis.set_container(texture);\n\t}\n\tclear_texture() {\n\t\tthis.set_container(EMPTY_DATA_TEXTURE);\n\t}\n\n\t// private _copy_texture(texture: Texture) {\n\t// \tconsole.log('_copy_texture', texture);\n\t// \tif (texture instanceof DataTexture) {\n\t// \t\tthis._data_texture.image = texture.image;\n\t// \t} else {\n\t// \t\tconst canvas = document.createElement('canvas');\n\t// \t\t// document.body.appendChild(canvas);\n\t// \t\tconst width = texture.image.width;\n\t// \t\tconst height = texture.image.height;\n\t// \t\tcanvas.width = width;\n\t// \t\tcanvas.height = height;\n\t// \t\tconst context = canvas.getContext('2d') as CanvasRenderingContext2D;\n\t// \t\tcontext.drawImage(texture.image, 0, 0);\n\t// \t\tconst image_data = context.getImageData(0, 0, width, height);\n\t// \t\tconsole.log(this._typed_array.length, image_data.data.length, image_data);\n\t// \t\tthis._data_texture.image = image_data;\n\t// \t}\n\t// \tthis._data_texture.format = texture.format;\n\t// \t// this._data_texture.mapping = texture.mapping;\n\t// \t// this._data_texture.wrapS = texture.wrapS;\n\t// \t// this._data_texture.wrapT = texture.wrapT;\n\t// \t// this._data_texture.minFilter = texture.minFilter;\n\t// \t// this._data_texture.magFilter = texture.magFilter;\n\t// \tthis._data_texture.needsUpdate = true;\n\t// \tconsole.log('updated data tex', this._data_texture);\n\n\t// \t// if (!this._texture || this._texture.uuid != texture.uuid) {\n\t// \t// \tif (!this._texture) {\n\t// \t// \t\tconsole.log('assign');\n\t// \t// \t\tthis._texture = texture.clone();\n\t// \t// \t\t// this._texture.name = this.full_path();\n\t// \t// \t} else {\n\t// \t// \t\tconsole.log('copy');\n\t// \t// \t\tconst keys = Object.keys(texture) as Array<keyof Texture>;\n\t// \t// \t\tconst protected_keys = ['uuid', 'name', 'node'];\n\t// \t// \t\tfor (let key of keys) {\n\t// \t// \t\t\tif (!protected_keys.includes(key)) {\n\t// \t// \t\t\t\tthis._texture[key] = texture[key] as never; // but why is 'never' needed?!\n\t// \t// \t\t\t}\n\t// \t// \t\t}\n\t// \t// \t}\n\t// \t// }\n\t// }\n}\n\nexport type BaseCopNodeType = TypedCopNode<any>;\nexport class BaseCopNodeClass extends TypedCopNode<any> {}\n","import lodash_merge from 'lodash/merge';\nimport lodash_intersection from 'lodash/intersection';\nimport lodash_difference from 'lodash/difference';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {BaseNodeType, TypedNode} from '../../_Base';\n\nimport {BaseGlShaderAssembler} from './assemblers/_Base';\nimport {GlobalsBaseController} from './globals/_Base';\nimport {GlobalsGeometryHandler} from './globals/Geometry';\n\nimport {JsonExportDispatcher} from '../../../io/json/export/Dispatcher';\n// import {NodeEvent} from '../../../poly/NodeEvent';\nimport {OutputGlNode} from '../Output';\nimport {GlobalsGlNode} from '../Globals';\n// import {BaseParamType} from '../../../params/_Base';\nimport {ParamJsonExporterData} from '../../../io/json/export/Param';\nimport {GlNodeChildrenMap} from '../../../poly/registers/Gl';\nimport {BaseGlNodeType} from '../_Base';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamsUpdateOptions} from '../../utils/params/ParamsController';\n\n// interface BaseShaderAssemblerConstructor {\n// \tnew (): BaseGlShaderAssembler;\n// }\n// interface GlobalsBaseControllerConstructor {\n// \tnew (): GlobalsBaseController;\n// }\n\n// export function AssemblerOwner<TBase extends Constructor>(Base: TBase) {\n// \treturn class Mixin extends Base {\n// \t\tprotected self: BaseNode = (<unknown>this) as BaseNode;\n// \t\tchildren_context() {\n// \t\t\treturn NodeContext.GL;\n// \t\t}\n\nexport class AssemblerControllerNode extends TypedNode<any, BaseNodeType, any> {\n\tcreate_node<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as GlNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseGlNodeType[];\n\t}\n\tnodes_by_type<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as GlNodeChildrenMap[K][];\n\t}\n\n\tassembler_controller!: GlAssemblerController<BaseGlShaderAssembler>;\n\t// set_compilation_required_and_dirty() {\n\t// \tthis.assembler_controller.set_compilation_required_and_dirty();\n\t// }\n}\n\ntype BaseGlShaderAssemblerConstructor<A extends BaseGlShaderAssembler> = new (...args: any[]) => A;\nexport class GlAssemblerController<A extends BaseGlShaderAssembler> {\n\tprotected _assembler!: A;\n\tprivate _globals_handler: GlobalsBaseController | undefined = new GlobalsGeometryHandler();\n\tprivate _compile_required: boolean = true;\n\t// private _requester: BaseNodeSop;\n\t// private _recompiled: boolean = false;\n\t// private _shaders_by_name: Map<ShaderName, string> = new Map();\n\n\tprivate _deleted_params_data: Map<string, ParamJsonExporterData<ParamType>> = new Map();\n\t// private _new_params: BaseParamType[] = [];\n\n\tconstructor(private node: AssemblerControllerNode, assembler_class: BaseGlShaderAssemblerConstructor<A>) {\n\t\t// if (assembler_class) {\n\t\tthis._assembler = new assembler_class(this.node);\n\t\t// }\n\t\t// this._shadow_depth_assembler = new ShaderAssemblerDepth()\n\t\t// this._shadow_distance_assembler = new ShaderAssemblerDistance()\n\n\t\t// this.self._init_hierarchy_children_owner();\n\n\t\t// let has_display_flag = false;\n\t\t// if (options['has_display_flag']) {\n\t\t// \thas_display_flag = options['has_display_flag'];\n\t\t// }\n\n\t\t// this.self._init_display_flag({\n\t\t// \thas_display_flag: has_display_flag,\n\t\t// \tmultiple_display_flags_allowed: false,\n\t\t// \taffects_hierarchy: true,\n\t\t// });\n\n\t\t// this ensures that material re evaluate their uniforms\n\t\t// without having the SOP/Material recook\n\t\t// which can be a killer in an animation\n\t\t// But this should be tweaked so that it can recook all params of a node\n\t\t// this.self.add_post_dirty_hook(this.eval_params_and_assign_uniform_values.bind(this))\n\t\t// - UPDATE: this seems to work at the moment. The only issue is that\n\t\t// the particle system now updates 2x when recreating the shaders\n\t\t// but that's fixed with update_on_dirty\n\t\t// - UPDATE 2: now that the params have been refactored, let's try without this\n\t\t// if (options['update_on_dirty'] != false) {\n\t\t// \tthis.self.add_post_dirty_hook(this.cook_main_if_scene_loaded.bind(this));\n\t\t// }\n\t}\n\tset_assembler_globals_handler(globals_handler: GlobalsBaseController) {\n\t\tconst current_id = this._globals_handler ? this._globals_handler.id() : null;\n\t\tconst new_id = globals_handler ? globals_handler.id() : null;\n\n\t\tif (current_id != new_id) {\n\t\t\tthis._globals_handler = globals_handler;\n\t\t\tthis.set_compilation_required_and_dirty();\n\t\t\tthis._assembler.reset_configs();\n\t\t}\n\t}\n\tget assembler() {\n\t\treturn this._assembler;\n\t}\n\t// get shaders_by_name() {\n\t// \treturn this._shaders_by_name;\n\t// }\n\tget globals_handler() {\n\t\treturn this._globals_handler;\n\t}\n\n\t// gltf_supported_material() {\n\t// \treturn this._assembler.constructor.convert_material_to_gltf_supported(this._material);\n\t// }\n\n\tadd_output_params(output_child: OutputGlNode) {\n\t\tthis._assembler.add_output_params(output_child);\n\t}\n\tadd_globals_params(globals_node: GlobalsGlNode) {\n\t\tthis._assembler.add_globals_params(globals_node);\n\t}\n\tallow_attribute_exports() {\n\t\treturn this._assembler.allow_attribute_exports();\n\t}\n\n\ton_create() {\n\t\tconst globals = this.node.create_node('globals');\n\t\tconst output = this.node.create_node('output');\n\n\t\tglobals.ui_data.set_position(new Vector2(-200, 0));\n\t\toutput.ui_data.set_position(new Vector2(200, 0));\n\t}\n\n\t// async compile_if_required() {\n\t// \t// this._recompiled = false;\n\t// \tif (this.compile_required()) {\n\t// \t\t// && !this._param_locked){\n\t// \t\tconst new_material = await this.run_assembler();\n\t// \t\tif (new_material) {\n\t// \t\t\tawait this.node.params.eval_params(this._new_params);\n\t// \t\t\tthis._material = new_material;\n\t// \t\t\t// this._recompiled = true;\n\t// \t\t} else {\n\t// \t\t\tconsole.error(`${this.node.full_path()} failed to generate a material`);\n\t// \t\t}\n\t// \t}\n\t// \tawait this.assign_uniform_values();\n\t// }\n\tset_compilation_required(new_state = true) {\n\t\tthis._compile_required = new_state;\n\t}\n\tset_compilation_required_and_dirty(trigger_node?: BaseGlNodeType) {\n\t\tthis.set_compilation_required();\n\t\tthis.node.set_dirty(trigger_node);\n\t}\n\tcompile_required(): boolean {\n\t\treturn this._compile_required;\n\t}\n\n\t// set_root_nodes(nodes: BaseGlNodeType[]) {\n\t// \tthis.assembler.set_root_nodes(nodes);\n\t// }\n\t// set_node_lines_globals(globals_node: GlobalsGlNode, shader_name: ShaderName) {\n\t// \tthis.assembler.set_node_lines_globals(globals_node, shader_name);\n\t// }\n\t// set_node_lines_output(output_node: OutputGlNode, shader_name: ShaderName) {\n\t// \tthis.assembler.set_node_lines_output(output_node, shader_name);\n\t// }\n\t// set_node_lines_attribute(attribute_node: AttributeGlNode, shader_name: ShaderName) {\n\t// \tthis.assembler.set_node_lines_attribute(attribute_node, shader_name);\n\t// }\n\n\tasync post_compile() {\n\t\t// if (!this.compile_required()) {\n\t\t// \treturn;\n\t\t// }\n\t\t// this.assembler.compile_for_node(this._gl);\n\t\tthis.create_spare_parameters();\n\t\tthis.set_compilation_required(false);\n\t}\n\n\t// private async run_assembler() {\n\t// \tconst output_node = this.find_output_node();\n\t// \tif (output_node) {\n\t// \t\tthis._assembler.set_root_nodes([output_node]);\n\t// \t}\n\t// \tthis.assembler.compile();\n\t// \tconst material = await this._assembler.get_material();\n\t// \tif (material) {\n\t// \t\tthis._shaders_by_name.set(ShaderName.VERTEX, material.vertexShader);\n\t// \t\tthis._shaders_by_name.set(ShaderName.FRAGMENT, material.fragmentShader);\n\n\t// \t\t// assign custom materials\n\t// \t\tconst custom_materials = await this._assembler.get_custom_materials();\n\t// \t\tconst material_with_custom_materials = material as ShaderMaterialWithCustomMaterials;\n\t// \t\tmaterial_with_custom_materials.custom_materials = {};\n\t// \t\tcustom_materials.forEach((custom_material, shader_name) => {\n\t// \t\t\tmaterial_with_custom_materials.custom_materials[shader_name] = custom_material;\n\t// \t\t});\n\n\t// \t\tmaterial.needsUpdate = true;\n\t// \t}\n\n\t// \tthis.create_spare_parameters();\n\n\t// \tthis._compile_required = false;\n\t// \treturn material;\n\t// }\n\n\t// find_output_node() {\n\t// \tconst nodes = this.node.nodes_by_type('output');\n\t// \tif (nodes.length > 1) {\n\t// \t\tthis.node.states.error.set('only one output node allowed');\n\t// \t}\n\t// \treturn nodes[0];\n\t// }\n\t// find_attribute_export_nodes() {\n\t// \tconst nodes = this.node.nodes_by_type('attribute');\n\t// \treturn nodes.filter((node) => {\n\t// \t\t// do not use attributes that are used as an input, as export\n\t// \t\t// return (node.used_output_names().length == 0) &&\n\t// \t\treturn node.is_exporting;\n\t// \t});\n\t// }\n\t// add_output_body_line(output_node, shader_name: ShaderName, input_name: string){\n\t// \tconst input = output_node.named_input(input_name)\n\t// \tconst var_input = output_node.variable_for_input(input_name)\n\t// \tconst variable_config = this.variable_config(input_name)\n\t// \tconst default_value = variable_config.default()\n\t// \tconst prefix = variable_config.prefix()\n\t// \tconst suffix = variable_config.suffix()\n\t// \tconst new_var = input ? ThreeToGl.vector3(var_input) : default_value\n\t// \tif(new_var){\n\t// \t\toutput_node.add_body_lines([`${prefix}${new_var}${suffix}`], shader_name)\n\t// \t}\n\t// }\n\t// set_output_node_lines(output_node){\n\t// \tfor(let shader_name of this.shader_names()){\n\t// \t\tconst body_lines = []\n\t// \t\tconst input_names = this.shader_config(shader_name).input_names()\n\t// \t\toutput_node.set_body_lines([], shader_name)\n\t// \t\tif(input_names){\n\t// \t\t\tfor(let input_name of input_names){\n\t// \t\t\t\tthis.add_output_body_line(output_node, shader_name, input_name)\n\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\n\t// \t// const vertex_body_lines = []\n\t// \t// const fragment_body_lines = []\n\n\t// \t// const named_input_position = this.named_input('position')\n\t// \t// const named_input_point_size = this.named_input('gl_PointSize')\n\t// \t// const named_input_normal = this.named_input('normal')\n\n\t// \t// const var_position = this.variable_for_input('position')\n\t// \t// const var_normal = this.variable_for_input('normal')\n\t// \t// const color = this.variable_for_input('color')\n\t// \t// const alpha = this.variable_for_input('alpha')\n\t// \t// const var_point_size = this.variable_for_input('gl_PointSize')\n\n\t// \t// fragment_body_lines.push( `${this._color_declaration} = ${ThreeToGl.vector3_float(color, alpha)}` )\n\t// \t// this.set_fragment_body_lines(fragment_body_lines)\n\n\t// \t// const new_position_var = named_input_position ? ThreeToGl.vector3(var_position) : 'vec3( position )'\n\t// \t// vertex_body_lines.push( `vec3 transformed = ${new_position_var}` )\n\n\t// \t// if(this.parent().is_point_material()){\n\t// \t// \tconst new_point_size_var = named_input_point_size ? ThreeToGl.float(var_point_size) : '1.0'\n\t// \t// \tvertex_body_lines.push( `float size2 = size * ${new_point_size_var}` )\n\t// \t// }\n\n\t// \t// if(named_input_normal){\n\t// \t// \tconst new_normal_var = ThreeToGl.vector3(var_normal)\n\t// \t// \tvertex_body_lines.push(`objectNormal = ${new_normal_var}`)\n\t// \t// }\n\n\t// \t// this.set_vertex_body_lines(vertex_body_lines)\n\t// \t// this.set_fragment_body_lines(fragment_body_lines)\n\t// }\n\t// private async eval_params_and_assign_uniform_values() {\n\t// \tif (!this.self.scene().loaded()) {\n\t// \t\treturn;\n\t// \t}\n\n\t// \tif (this._assembler) {\n\t// \t\tawait this.self.eval_all_params();\n\t// \t\tawait this.assign_uniform_values();\n\t// \t}\n\t// }\n\t// private async cook_main_if_scene_loaded() {\n\t// \tif (!this.self.scene().loaded()) {\n\t// \t\treturn;\n\t// \t}\n\t// \tif (this.self.params_referree().length > 0) {\n\t// \t\tawait this.self.cook_main();\n\t// \t}\n\t// \t// this.cook_main_without_inputs()\n\t// }\n\tasync assign_uniform_values() {\n\t\tif (this._assembler) {\n\t\t\tfor (let param_config of this._assembler.param_configs()) {\n\t\t\t\tawait param_config.set_uniform_value(this.node);\n\t\t\t}\n\t\t}\n\t}\n\n\t// process_uniforms(renderer, display_scene, camera, geometry, material, group) {\n\t// \tconst scene_frame = this.scene().frame()\n\n\t// \tconst material_frame = material.uniforms.frame\n\t// \tif(material_frame){ // check needed in case this method is given a post process material\n\t// \t\tmaterial.uniforms.frame.value = scene_frame\n\t// \t}\n\n\t// \tconst custom_materials = material.custom_materials\n\t// \tif(custom_materials){\n\t// \t\tfor(let custom_material_name of Object.keys(custom_materials)){\n\t// \t\t\tconst custom_material = custom_materials[custom_material_name]\n\t// \t\t\tcustom_material.uniforms.frame.value = scene_frame\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t// create_material(){\n\t// \tconst template_shader = THREE.ShaderLib.basic\n\n\t// \tconst uniforms = THREE.UniformsUtils.clone( template_shader.uniforms )\n\t// \t// uniforms['frame'] = {\n\t// \t// \ttype: '1f',\n\t// \t// \tvalue: 1\n\t// \t// }\n\n\t// \tconst material = new THREE.ShaderMaterial({\n\t// \t\t// vertexColors: THREE.VertexColors,\n\t// \t\t// side: THREE.FrontSide,\n\t// \t\t// transparent: true,\n\t// \t\t// fog: true,\n\t// \t\t// lights: false,\n\t// \t\tuniforms: uniforms,\n\t// \t\tvertexShader: template_shader.vertexShader,\n\t// \t\tfragmentShader: template_shader.fragmentShader\n\t// \t})\n\t// \tthrow \"wtf\"\n\t// \treturn material\n\t// }\n\tcreate_spare_parameters() {\n\t\tconst current_spare_param_names: string[] = this.node.params.spare_names;\n\t\tconst param_configs = this._assembler.param_configs();\n\t\tconst assembler_param_names = param_configs.map((c) => c.name);\n\t\t// TODO: also remove the params that change type\n\t\tconst spare_param_names_to_add = lodash_difference(assembler_param_names, current_spare_param_names);\n\t\tconst spare_param_names_to_remove = lodash_difference(current_spare_param_names, assembler_param_names);\n\t\t// this._new_params = [];\n\t\tconst params_update_options: ParamsUpdateOptions = {};\n\n\t\t// check that param_names_to_add does not include any currently existing param names (that are not spare)\n\t\tconst current_param_names = this.node.params.names;\n\t\tconst spare_params_with_same_name_as_params = lodash_intersection(\n\t\t\tspare_param_names_to_add,\n\t\t\tcurrent_param_names\n\t\t);\n\t\tif (spare_params_with_same_name_as_params.length > 0) {\n\t\t\tconst error_message = `${this.node.full_path()} attempts to create spare params called '${spare_params_with_same_name_as_params.join(\n\t\t\t\t', '\n\t\t\t)}' with same name as params`;\n\t\t\tconsole.warn(error_message);\n\t\t\tthis.node.states.error.set(error_message);\n\t\t}\n\n\t\tspare_param_names_to_remove.forEach((param_name) => {\n\t\t\t// store the param data, in case it gets recreated later\n\t\t\t// this allows expressions to be kept in memory\n\t\t\tconst param = this.node.params.get(param_name);\n\t\t\tif (param) {\n\t\t\t\tconst param_exporter = JsonExportDispatcher.dispatch_param(param);\n\t\t\t\tif (param_exporter.required) {\n\t\t\t\t\tconst params_data = param_exporter.data();\n\t\t\t\t\tthis._deleted_params_data.set(param.name, params_data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparams_update_options.names_to_delete = params_update_options.names_to_delete || [];\n\t\t\tparams_update_options.names_to_delete.push(param_name);\n\t\t});\n\n\t\t// this.within_param_folder('spare_params', () => {\n\t\tfor (let param_config of param_configs) {\n\t\t\tif (spare_param_names_to_add.indexOf(param_config.name) >= 0) {\n\t\t\t\t// TODO: shouldn't it be cook: false ??\n\t\t\t\t// as there is no need to cook the node if I'm only changing the uniform\n\t\t\t\t// unless maybe for textures?\n\t\t\t\t// but if cook is false, there is no reason for it to be updated\n\t\t\t\tconst options = lodash_merge(param_config.param_options, {spare: true, cook: true});\n\n\t\t\t\t// const param = this.node.add_param(\n\t\t\t\t// \tparam_config.type,\n\t\t\t\t// \tparam_config.name,\n\t\t\t\t// \tparam_config.default_value,\n\t\t\t\t// \toptions\n\t\t\t\t// );\n\t\t\t\tparams_update_options.to_add = params_update_options.to_add || [];\n\t\t\t\tparams_update_options.to_add.push({\n\t\t\t\t\tname: param_config.name,\n\t\t\t\t\ttype: param_config.type,\n\t\t\t\t\tinit_value: param_config.default_value as any,\n\t\t\t\t\toptions: options,\n\t\t\t\t});\n\n\t\t\t\t// if (param) {\n\t\t\t\t// \t// restore saved state, like expressions\n\t\t\t\t// \tconst param_data = this._deleted_params_data.get(param.name);\n\t\t\t\t// \tif (param_data) {\n\t\t\t\t// \t\t// TODO: typescript\n\t\t\t\t// \t\t// JsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t\t\t// \t\t// looks like there are still some cases where the expression are not recreated\n\t\t\t\t// \t\t// so commenting this out now\n\t\t\t\t// \t\t// delete this._deleted_params_data[param.name()]\n\t\t\t\t// \t}\n\n\t\t\t\t// \tthis._new_params.push(param);\n\t\t\t\t// }\n\t\t\t}\n\t\t}\n\n\t\tthis.node.params.update_params(params_update_options);\n\t\t// if (spare_param_names_to_add.length > 0 || spare_param_names_to_remove.length > 0) {\n\t\t// \tthis.node.params.post_create_spare_params();\n\t\t// \tthis.node.emit(NodeEvent.PARAMS_UPDATED);\n\t\t// }\n\t}\n}\n","import {GlobalsBaseController} from './_Base';\nimport {GlobalsGlNode} from '../../Globals';\nimport {AttributeGlNode} from '../../Attribute';\n// import {Definition} from '../../Definition/_Module';\n// import {DefinitionBaseConfig} from '../Config/DefinitionBaseConfig';\n// import {BaseGlNodeType} from '../../_Base';\nimport {VaryingGLDefinition, AttributeGLDefinition} from '../../utils/GLDefinition';\nimport {ConnectionPointType} from '../../../utils/connections/ConnectionPointType';\n// import {TypeAssert} from '../../../../poly/Assert';\nimport {MapUtils} from '../../../../../core/MapUtils';\nimport {ShaderName} from '../../../utils/shaders/ShaderName';\nimport {BaseGlNodeType} from '../../_Base';\nimport {ShadersCollectionController} from '../utils/ShadersCollectionController';\n\nconst VARIABLE_CONFIG_DEFAULT_BY_NAME: Dictionary<string> = {\n\tposition: 'vec3( position )',\n};\n\nexport class GlobalsGeometryHandler extends GlobalsBaseController {\n\tstatic PRE_DEFINED_ATTRIBUTES = [\n\t\t'position',\n\t\t'color',\n\t\t'normal',\n\t\t'uv',\n\t\t'uv2',\n\t\t'morphTarget0',\n\t\t'morphTarget1',\n\t\t'morphTarget2',\n\t\t'morphTarget3',\n\t\t'skinIndex',\n\t\t'skinWeight',\n\t];\n\n\tstatic IF_RULE = {\n\t\tuv:\n\t\t\t'defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )',\n\t};\n\n\thandle_globals_node(\n\t\tglobals_node: GlobalsGlNode,\n\t\toutput_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t\t// definitions_by_shader_name: Map<ShaderName, BaseGLDefinition[]>,\n\t\t// body_lines_by_shader_name: Map<ShaderName, string[]>,\n\t\t// body_lines: string[],\n\t\t// dependencies: ShaderName[],\n\t\t// shader_name: ShaderName\n\t): void {\n\t\tconst connection_point = globals_node.io.outputs.named_output_connection_points_by_name(output_name);\n\t\tif (!connection_point) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst var_name = globals_node.gl_var_name(output_name);\n\t\tconst gl_type = connection_point.type;\n\t\tconst definition = new VaryingGLDefinition(globals_node, gl_type, var_name);\n\n\t\t// MapUtils.push_on_array_at_entry(definitions_by_shader_name, shader_name, definition);\n\t\tshaders_collection_controller.add_definitions(globals_node, [definition]);\n\t\t// definitions_by_shader_name.get(shader_name)!.push(definition);\n\t\tconst assembler = globals_node.material_node?.assembler_controller.assembler;\n\t\tif (!assembler) {\n\t\t\treturn;\n\t\t}\n\t\tconst shader_config = assembler.shader_config(shaders_collection_controller.current_shader_name);\n\t\tif (!shader_config) {\n\t\t\treturn;\n\t\t}\n\t\tconst dependencies = shader_config.dependencies();\n\n\t\tconst body_line = `${var_name} = ${gl_type}(${output_name})`;\n\t\tfor (let dependency of dependencies) {\n\t\t\t// MapUtils.push_on_array_at_entry(definitions_by_shader_name, dependency, definition);\n\t\t\t// MapUtils.push_on_array_at_entry(body_lines_by_shader_name, dependency, body_line);\n\t\t\tshaders_collection_controller.add_definitions(globals_node, [definition], dependency);\n\t\t\tshaders_collection_controller.add_body_lines(globals_node, [body_line], dependency);\n\t\t}\n\t\tif (dependencies.length == 0) {\n\t\t\t// body_lines.push(body_line);\n\t\t\tshaders_collection_controller.add_body_lines(globals_node, [body_line]);\n\t\t}\n\t}\n\n\tstatic variable_config_default(variable_name: string): string | undefined {\n\t\treturn VARIABLE_CONFIG_DEFAULT_BY_NAME[variable_name];\n\t}\n\tvariable_config_default(variable_name: string): string | undefined {\n\t\treturn GlobalsGeometryHandler.variable_config_default(variable_name);\n\t}\n\t// variable_config_required_definitions(variable_name:string):DefinitionBaseConfig[]{\n\t// \treturn null\n\t// }\n\tread_attribute(\n\t\tnode: BaseGlNodeType,\n\t\tgl_type: ConnectionPointType,\n\t\tattrib_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\treturn GlobalsGeometryHandler.read_attribute(node, gl_type, attrib_name, shaders_collection_controller);\n\t}\n\n\tstatic read_attribute(\n\t\tnode: BaseGlNodeType,\n\t\tgl_type: ConnectionPointType,\n\t\tattrib_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t): string | undefined {\n\t\tif (GlobalsGeometryHandler.PRE_DEFINED_ATTRIBUTES.indexOf(attrib_name) < 0) {\n\t\t\tshaders_collection_controller.add_definitions(\n\t\t\t\tnode,\n\t\t\t\t[new AttributeGLDefinition(node, gl_type, attrib_name)],\n\t\t\t\tShaderName.VERTEX\n\t\t\t);\n\t\t} else {\n\t\t\t// const if_rule = GlobalsGeometryHandler.IF_RULE[attrib_name]\n\t\t\t// if(if_rule){\n\t\t\t// \tconst definition = new Definition.Attribute(node, gl_type, attrib_name)\n\t\t\t// \tdefinition.set_if_rule(if_rule)\n\t\t\t// \tnode.add_definitions([definition])\n\t\t\t// }\n\t\t}\n\n\t\t// if (!shader_name) {\n\t\t// \tthrow 'no shader name';\n\t\t// }\n\t\tconst shader_name = shaders_collection_controller.current_shader_name;\n\t\tswitch (shader_name) {\n\t\t\tcase ShaderName.VERTEX: {\n\t\t\t\treturn attrib_name;\n\t\t\t}\n\t\t\tcase ShaderName.FRAGMENT: {\n\t\t\t\t// let's assume it can only be an attribute gl node\n\t\t\t\tif (!(node instanceof AttributeGlNode)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst var_name = 'varying_' + node.gl_var_name(node.output_name);\n\t\t\t\tconst varying_definition = new VaryingGLDefinition(node, gl_type, var_name);\n\n\t\t\t\tconst definitions_by_shader_name: Map<ShaderName, VaryingGLDefinition[]> = new Map();\n\t\t\t\t// definitions_by_shader_name.set(ShaderName.VERTEX, [])\n\t\t\t\tdefinitions_by_shader_name.set(ShaderName.FRAGMENT, []);\n\t\t\t\t// {\n\t\t\t\t// \t[ShaderName.VERTEX]: [],\n\t\t\t\t// \t[ShaderName.FRAGMENT]: [],\n\t\t\t\t// };\n\t\t\t\tconst body_lines_by_shader_name: Map<ShaderName, string[]> = new Map();\n\t\t\t\t// body_lines_by_shader_name.set(ShaderName.VERTEX, [])\n\t\t\t\tbody_lines_by_shader_name.set(ShaderName.FRAGMENT, []);\n\t\t\t\tMapUtils.push_on_array_at_entry(definitions_by_shader_name, shader_name, varying_definition);\n\n\t\t\t\tconst set_varying_body_line = `${var_name} = ${gl_type}(${attrib_name})`;\n\n\t\t\t\tconst shader_config = node.material_node?.assembler_controller.assembler.shader_config(shader_name);\n\t\t\t\tif (shader_config) {\n\t\t\t\t\tconst dependencies = shader_config.dependencies();\n\t\t\t\t\tfor (let dependency of dependencies) {\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(definitions_by_shader_name, dependency, varying_definition);\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(body_lines_by_shader_name, dependency, set_varying_body_line);\n\t\t\t\t\t}\n\t\t\t\t\tdefinitions_by_shader_name.forEach((definitions, shader_name) => {\n\t\t\t\t\t\tshaders_collection_controller.add_definitions(node, definitions, shader_name);\n\t\t\t\t\t});\n\t\t\t\t\tbody_lines_by_shader_name.forEach((body_lines, shader_name) => {\n\t\t\t\t\t\tshaders_collection_controller.add_body_lines(node, body_lines, shader_name);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn var_name;\n\t\t\t}\n\t\t}\n\t\t// TypeAssert.unreachable(shader_name);\n\n\t\t// const shader_name = node._shader_name // TODO: this is hack\n\t\t// const varying_definition = new Definition.Varying(node, gl_type, attrib_name)\n\t\t// const var_name = varying_definition.name()\n\t\t// definitions_by_shader_name[shader_name].push(varying_definition)\n\t\t// const shader_config = node.shader_config(shader_name)\n\t\t// const dependencies = shader_config.dependencies()\n\t\t// const body_line = `${var_name} = ${gl_type}(${attrib_name})`\n\t\t// for(let dependency of dependencies){\n\t\t// \tdefinitions_by_shader_name[dependency].push(varying_definition)\n\t\t// \tbody_lines_by_shader_name[dependency].push(body_line)\n\t\t// }\n\t\t// // if(dependencies.length == 0){\n\t\t// \t// body_lines.push(body_line)\n\t\t// \tnode.add_body_lines([body_line])\n\t\t// // }\n\t\t// for(let shader_name of Object.keys(definitions_by_shader_name)){\n\t\t// \tnode.add_definitions(definitions_by_shader_name[shader_name], shader_name)\n\t\t// }\n\t\t// for(let shader_name of Object.keys(body_lines_by_shader_name)){\n\t\t// \tnode.add_body_lines(body_lines_by_shader_name[shader_name], shader_name)\n\t\t// }\n\t\t// node.add_body_lines(body_lines)\n\t}\n\thandle_attribute_node(\n\t\tnode: AttributeGlNode,\n\t\tgl_type: ConnectionPointType,\n\t\tattrib_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\treturn GlobalsGeometryHandler.read_attribute(node, gl_type, attrib_name, shaders_collection_controller);\n\t}\n}\n","import {ConnectionPointType} from '../../utils/connections/ConnectionPointType';\nimport {BaseGlNodeType} from '../_Base';\nimport {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\nimport {TypedNamedConnectionPoint} from '../../utils/connections/NamedConnectionPoint';\nimport {NodeConnection} from '../../utils/connections/NodeConnection';\n\ntype IONameFunction = (index: number) => string;\ntype ExpectedConnectionTypesFunction = () => ConnectionPointType[];\n\nexport class GlConnectionsController {\n\tprivate _input_name_function: IONameFunction = (index: number) => {\n\t\treturn `in${index}`;\n\t};\n\tprivate _output_name_function: IONameFunction = (index: number) => {\n\t\treturn index == 0 ? 'val' : `val${index}`;\n\t};\n\t// private _default_input_type: ConnectionPointType = ConnectionPointType.FLOAT;\n\tprivate _expected_input_types_function: ExpectedConnectionTypesFunction = () => {\n\t\tconst type = this.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\treturn [type, type];\n\t};\n\tprivate _expected_output_types_function: ExpectedConnectionTypesFunction = () => {\n\t\treturn [this._expected_input_types_function()[0]];\n\t};\n\n\tconstructor(private node: BaseGlNodeType) {}\n\n\tset_input_name_function(func: IONameFunction) {\n\t\tthis._input_name_function = func;\n\t}\n\tset_output_name_function(func: IONameFunction) {\n\t\tthis._output_name_function = func;\n\t}\n\t// set_default_input_type(type: ConnectionPointType) {\n\t// \tthis._default_input_type = type;\n\t// }\n\tset_expected_input_types_function(func: ExpectedConnectionTypesFunction) {\n\t\tthis._expected_input_types_function = func;\n\t}\n\tset_expected_output_types_function(func: ExpectedConnectionTypesFunction) {\n\t\tthis._expected_output_types_function = func;\n\t}\n\n\toutput_name(index: number) {\n\t\treturn this._output_name_function(index);\n\t}\n\n\tprivate _update_signature_if_required_bound = this.update_signature_if_required.bind(this);\n\tprivate _initialized: boolean = false;\n\tinitialize_node() {\n\t\tif (this._initialized) {\n\t\t\tconsole.warn('already initialized', this.node);\n\t\t\treturn;\n\t\t}\n\t\tthis._initialized = true;\n\n\t\tthis.node.io.inputs.add_on_set_input_hook(\n\t\t\t'_update_signature_if_required',\n\t\t\tthis._update_signature_if_required_bound\n\t\t);\n\t\tthis.node.params.add_on_scene_load_hook(\n\t\t\t'_update_signature_if_required',\n\t\t\tthis._update_signature_if_required_bound\n\t\t);\n\t\tthis.node.params.set_post_create_params_hook(this._update_signature_if_required_bound);\n\t\tthis.node.add_post_dirty_hook('_update_signature_if_required', this._update_signature_if_required_bound);\n\t}\n\n\tupdate_signature_if_required(dirty_trigger?: CoreGraphNode) {\n\t\tif (!this.node.lifecycle.creation_completed || !this._connections_match_inputs()) {\n\t\t\tthis.update_connection_types();\n\t\t\tthis.node.remove_dirty_state();\n\t\t\tthis.make_successors_update_signatures();\n\t\t}\n\t}\n\t// used when a node changes its signature, adn the output nodes need to adapt their own signatures\n\tprivate make_successors_update_signatures() {\n\t\tfor (let successor of this.node.graph_all_successors()) {\n\t\t\tconst gl_node = successor as BaseGlNodeType;\n\t\t\tif (gl_node.gl_connections_controller) {\n\t\t\t\tgl_node.gl_connections_controller.update_signature_if_required(this.node);\n\t\t\t}\n\t\t}\n\t\t// this.node.io.connections\n\t\t// \t.output_connections()\n\t\t// \t.map((c) => c.node_dest)\n\t\t// \t.forEach((o) => {\n\t\t// \t\to.set_dirty(this.node);\n\t\t// \t});\n\t}\n\n\tupdate_connection_types() {\n\t\tconst set_dirty = false;\n\t\tconst expected_input_types = this._expected_input_types_function();\n\t\tconst expected_output_types = this._expected_output_types_function();\n\n\t\tconst named_input_connections = expected_input_types.map((type: ConnectionPointType, i: number) => {\n\t\t\treturn new TypedNamedConnectionPoint(this._input_name_function(i), type);\n\t\t});\n\t\tconst named_outputs = expected_output_types.map((type: ConnectionPointType, i: number) => {\n\t\t\treturn new TypedNamedConnectionPoint(this._output_name_function(i), type);\n\t\t});\n\n\t\tthis.node.io.inputs.set_named_input_connection_points(named_input_connections);\n\t\tthis.node.io.outputs.set_named_output_connection_points(named_outputs, set_dirty);\n\t\tthis.node.spare_params_controller.create_spare_parameters();\n\t}\n\n\tprotected _connections_match_inputs(): boolean {\n\t\tconst current_input_types = this.node.io.inputs.named_input_connection_points.map((c) => c.type);\n\t\tconst current_output_types = this.node.io.outputs.named_output_connection_points.map((c) => c.type);\n\t\tconst expected_input_types = this._expected_input_types_function();\n\t\tconst expected_output_types = this._expected_output_types_function();\n\n\t\tif (expected_input_types.length != current_input_types.length) {\n\t\t\treturn false;\n\t\t}\n\t\tif (expected_output_types.length != current_output_types.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < current_input_types.length; i++) {\n\t\t\tif (current_input_types[i] != expected_input_types[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < current_output_types.length; i++) {\n\t\t\tif (current_output_types[i] != expected_output_types[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// protected input_connection_type() {\n\t// \treturn this.first_input_connection_type();\n\t// }\n\t// protected output_connection_type() {\n\t// \treturn this.first_input_connection_type();\n\t// }\n\n\tfirst_input_connection_type(): ConnectionPointType | undefined {\n\t\tconst connections = this.node.io.connections.input_connections();\n\t\tif (connections) {\n\t\t\tconst first_connection = connections[0];\n\t\t\tif (first_connection) {\n\t\t\t\treturn this.connection_type_from_connection(first_connection);\n\t\t\t}\n\t\t}\n\t}\n\tconnection_type_from_connection(connection: NodeConnection): ConnectionPointType {\n\t\tconst node_src = connection.node_src;\n\t\tconst output_index = connection.output_index;\n\t\tconst node_src_output_connection = node_src.io.outputs.named_output_connection_points[output_index];\n\t\treturn node_src_output_connection.type;\n\t}\n}\n","import {VideoTexture} from 'three/src/textures/VideoTexture';\nimport {\n\tUVMapping,\n\tCubeReflectionMapping,\n\tCubeRefractionMapping,\n\tEquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping,\n\tSphericalReflectionMapping,\n\tCubeUVReflectionMapping,\n\tCubeUVRefractionMapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tMirroredRepeatWrapping,\n\tLinearFilter,\n\tNearestFilter,\n\tNearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter,\n\tLinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter,\n\t// UnsignedByteType,\n\t// ByteType,\n\t// ShortType,\n\t// UnsignedShortType,\n\t// IntType,\n\t// UnsignedIntType,\n\t// FloatType,\n\t// HalfFloatType,\n\t// UnsignedShort4444Type,\n\t// UnsignedShort5551Type,\n\t// UnsignedShort565Type,\n\t// UnsignedInt248Type,\n\t// AlphaFormat,\n\t// RGBFormat,\n\t// RGBAFormat,\n\t// LuminanceFormat,\n\t// LuminanceAlphaFormat,\n\t// RGBEFormat,\n\t// DepthFormat,\n\t// DepthStencilFormat,\n\t// LinearEncoding,\n\t// sRGBEncoding,\n\t// GammaEncoding,\n\t// RGBEEncoding,\n\t// LogLuvEncoding,\n\t// RGBM7Encoding,\n\t// RGBM16Encoding,\n\t// RGBDEncoding,\n\t// BasicDepthPacking,\n\t// RGBADepthPacking,\n} from 'three/src/constants';\nimport {Texture} from 'three/src/textures/Texture';\n// const THREE = {\n// \tTexture,\n// \tUVMapping,\n// \tVideoTexture,\n// \tCubeReflectionMapping,\n// \tCubeRefractionMapping,\n// \tEquirectangularReflectionMapping,\n// \tEquirectangularRefractionMapping,\n// \tSphericalReflectionMapping,\n// \tCubeUVReflectionMapping,\n// \tCubeUVRefractionMapping,\n// \tClampToEdgeWrapping,\n// \tRepeatWrapping,\n// \tMirroredRepeatWrapping,\n// \tLinearFilter,\n// \tNearestFilter,\n// \tNearestMipMapNearestFilter,\n// \tNearestMipMapLinearFilter,\n// \tLinearMipMapNearestFilter,\n// \tLinearMipMapLinearFilter,\n// \tUnsignedByteType,\n// \tByteType,\n// \tShortType,\n// \tUnsignedShortType,\n// \tIntType,\n// \tUnsignedIntType,\n// \tFloatType,\n// \tHalfFloatType,\n// \tUnsignedShort4444Type,\n// \tUnsignedShort5551Type,\n// \tUnsignedShort565Type,\n// \tUnsignedInt248Type,\n// \tAlphaFormat,\n// \tRGBFormat,\n// \tRGBAFormat,\n// \tLuminanceFormat,\n// \tLuminanceAlphaFormat,\n// \tRGBEFormat,\n// \tDepthFormat,\n// \tDepthStencilFormat,\n// \tLinearEncoding,\n// \tsRGBEncoding,\n// \tGammaEncoding,\n// \tRGBEEncoding,\n// \tLogLuvEncoding,\n// \tRGBM7Encoding,\n// \tRGBM16Encoding,\n// \tRGBDEncoding,\n// \tBasicDepthPacking,\n// \tRGBADepthPacking,\n// };\n// import lodash_last from 'lodash/last';\n// import NodeBase from '../_Base'\n\nimport {TypedCopNode} from './_Base';\n// import {BaseParam} from '../../../Engine/Param/_Base'\nimport {CoreTextureLoader} from '../../../core/loader/Texture';\nimport {ParamType} from '../../poly/ParamType';\nimport {NodeEvent} from '../../poly/NodeEvent';\n\n// this used to be named file_in, but I can't recall the decision of not calling it simply 'file'\n// so renaming it back to file for now\n\nconst MAPPINGS = [\n\t{UVMapping},\n\t{CubeReflectionMapping},\n\t{CubeRefractionMapping},\n\t{EquirectangularReflectionMapping},\n\t{EquirectangularRefractionMapping},\n\t{SphericalReflectionMapping},\n\t{CubeUVReflectionMapping},\n\t{CubeUVRefractionMapping},\n];\n\nconst WRAPPINGS: Dictionary<number>[] = [{ClampToEdgeWrapping}, {RepeatWrapping}, {MirroredRepeatWrapping}];\n\nconst MAG_FILTERS: Dictionary<number>[] = [{LinearFilter}, {NearestFilter}];\nconst MIN_FILTERS: Dictionary<number>[] = [\n\t{NearestFilter},\n\t{NearestMipMapNearestFilter},\n\t{NearestMipMapLinearFilter},\n\t{LinearFilter},\n\t{LinearMipMapNearestFilter},\n\t{LinearMipMapLinearFilter},\n];\n\n// const TYPES = [\n// \t\"UnsignedByteType\",\n// \t\"ByteType\",\n// \t\"ShortType\",\n// \t\"UnsignedShortType\",\n// \t\"IntType\",\n// \t\"UnsignedIntType\",\n// \t\"FloatType\",\n// \t\"HalfFloatType\",\n// \t\"UnsignedShort4444Type\",\n// \t\"UnsignedShort5551Type\",\n// \t\"UnsignedShort565Type\",\n// \t\"UnsignedInt248Type\"\n// ];\n\n// const FORMATS = [\n// \t\"AlphaFormat\",\n// \t\"RGBFormat\",\n// \t\"RGBAFormat\",\n// \t\"LuminanceFormat\",\n// \t\"LuminanceAlphaFormat\",\n// \t\"RGBEFormat\",\n// \t\"DepthFormat\",\n// \t\"DepthStencilFormat\"\n// ];\n\n// const ENCODINGS = [\n// \t\"LinearEncoding\",\n// \t\"sRGBEncoding\",\n// \t\"GammaEncoding\",\n// \t\"RGBEEncoding\",\n// \t\"LogLuvEncoding\",\n// \t\"RGBM7Encoding\",\n// \t\"RGBM16Encoding\",\n// \t\"RGBDEncoding\",\n// \t\"BasicDepthPacking\",\n// \t\"RGBADepthPacking\"\n// ];\n\ninterface AttribMapping {\n\tmapping: string;\n\twrapS: string;\n\twrapT: string;\n\tminFilter: string;\n\tmagFilter: string;\n}\nconst ATTRIB_MAPPING_KEYS: Array<keyof AttribMapping> = ['mapping', 'wrapS', 'wrapT', 'minFilter', 'magFilter'];\nconst ATTRIB_MAPPING: AttribMapping = {\n\tmapping: 'mapping',\n\twrapS: 'wrap_s',\n\twrapT: 'wrap_t',\n\tminFilter: 'min_filter',\n\tmagFilter: 'mag_filter',\n\t// type: 'type',\n\t// encoding: 'encoding'\n\t// format: 'format',\n};\n\nimport {BaseNodeType} from '../_Base';\nimport {BaseParamType} from '../../params/_Base';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass FileCopParamsConfig extends NodeParamsConfig {\n\t// video_time = ParamConfig.FLOAT(1);\n\turl = ParamConfig.STRING(CoreTextureLoader.PARAM_DEFAULT, {\n\t\tdesktop_browse: {file_type: 'texture'},\n\t});\n\treload = ParamConfig.BUTTON(null, {\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tFileCopNode.PARAM_CALLBACK_reload(node as FileCopNode, param);\n\t\t},\n\t});\n\tmapping = ParamConfig.INTEGER(UVMapping, {\n\t\tmenu: {\n\t\t\tentries: MAPPINGS.map((m) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: Object.keys(m)[0],\n\t\t\t\t\tvalue: Object.values(m)[0] as number,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\twrap_s = ParamConfig.INTEGER(Object.values(WRAPPINGS[0])[0], {\n\t\tmenu: {\n\t\t\t// type: 'radio',\n\t\t\tentries: WRAPPINGS.map((m) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: Object.keys(m)[0],\n\t\t\t\t\tvalue: Object.values(m)[0] as number,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\twrap_t = ParamConfig.INTEGER(Object.values(WRAPPINGS[0])[0], {\n\t\tmenu: {\n\t\t\t// type: 'radio',\n\t\t\tentries: WRAPPINGS.map((m) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: Object.keys(m)[0],\n\t\t\t\t\tvalue: Object.values(m)[0] as number,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\tmag_filter = ParamConfig.INTEGER(Object.values(MAG_FILTERS[0])[0], {\n\t\tmenu: {\n\t\t\t// type: 'radio',\n\t\t\tentries: MAG_FILTERS.map((m) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: Object.keys(m)[0],\n\t\t\t\t\tvalue: Object.values(m)[0] as number,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\tmin_filter = ParamConfig.INTEGER(Object.values(MIN_FILTERS[0])[0], {\n\t\tmenu: {\n\t\t\t// type: 'radio',\n\t\t\tentries: MIN_FILTERS.map((m) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: Object.keys(m)[0],\n\t\t\t\t\tvalue: Object.values(m)[0] as number,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n}\n\nconst ParamsConfig = new FileCopParamsConfig();\n\nexport class FileCopNode extends TypedCopNode<FileCopParamsConfig> {\n\tparams_config = ParamsConfig;\n\t// @ParamF('video_time') _param_video_time: number;\n\t// @ParamS('url') _param_url: string;\n\tprivate _previous_param_url: string | undefined;\n\tprivate _video: HTMLVideoElement | undefined;\n\n\tstatic type() {\n\t\treturn 'file';\n\t}\n\n\t// _param_video_time_param: BaseParam\n\tprivate _texture_loader: CoreTextureLoader | undefined;\n\n\tstatic readonly VIDEO_TIME_PARAM_NAME = 'video_time';\n\tstatic readonly DEFAULT_NODE_PATH = {\n\t\tUV: '/COP/file_uv',\n\t\tENV_MAP: '/COP/env_map',\n\t};\n\n\t// initialize_node() {\n\t// \t// this.io.inputs.set_count_to_zero();\n\t// }\n\n\t// create_params() {\n\t// \t// this.add_param(ParamType.STRING, 'url', CoreTextureLoader.PARAM_DEFAULT, {\n\t// \t// \tdesktop_browse: {file_type: 'texture'},\n\t// \t// });\n\t// \t// this.add_param(ParamType.BUTTON, 'reload', null, {\n\t// \t// \tcallback: this._reload.bind(this),\n\t// \t// });\n\t// \t// this.add_param(ParamType.FLOAT, 'video_time', 0, {range: [0, 10]})\n\t// \t// this.add_param(ParamType.INTEGER, 'mapping', UVMapping as number, {\n\t// \t// \tmenu: {\n\t// \t// \t\tentries: MAPPINGS.map((m) => {\n\t// \t// \t\t\treturn {\n\t// \t// \t\t\t\tname: Object.keys(m)[0],\n\t// \t// \t\t\t\tvalue: Object.values(m)[0] as number,\n\t// \t// \t\t\t};\n\t// \t// \t\t}),\n\t// \t// \t},\n\t// \t// });\n\t// \t// for (let wrap_name of ['wrap_s', 'wrap_t']) {\n\t// \t// \tconst wrap = Object.values(WRAPPINGS[0])[0] as number;\n\t// \t// \tthis.add_param(ParamType.INTEGER, wrap_name, wrap, {\n\t// \t// \t\tmenu: {\n\t// \t// \t\t\t// type: 'radio',\n\t// \t// \t\t\tentries: WRAPPINGS.map((m) => {\n\t// \t// \t\t\t\treturn {\n\t// \t// \t\t\t\t\tname: Object.keys(m)[0],\n\t// \t// \t\t\t\t\tvalue: Object.values(m)[0] as number,\n\t// \t// \t\t\t\t};\n\t// \t// \t\t\t}),\n\t// \t// \t\t},\n\t// \t// \t});\n\t// \t// }\n\t// \t// const mag_filter = Object.values(MAG_FILTERS[0])[0] as number;\n\t// \t// this.add_param(ParamType.INTEGER, 'mag_filter', mag_filter, {\n\t// \t// \tmenu: {\n\t// \t// \t\t// type: 'radio',\n\t// \t// \t\tentries: MAG_FILTERS.map((m) => {\n\t// \t// \t\t\treturn {\n\t// \t// \t\t\t\tname: Object.keys(m)[0],\n\t// \t// \t\t\t\tvalue: Object.values(m)[0] as number,\n\t// \t// \t\t\t};\n\t// \t// \t\t}),\n\t// \t// \t},\n\t// \t// });\n\t// \t// const min_filter: number = Object.values(MIN_FILTERS[0])[0] as number;\n\t// \t// this.add_param(ParamType.INTEGER, 'min_filter', min_filter, {\n\t// \t// \tmenu: {\n\t// \t// \t\t// type: 'radio',\n\t// \t// \t\tentries: MIN_FILTERS.map((m) => {\n\t// \t// \t\t\treturn {\n\t// \t// \t\t\t\tname: Object.keys(m)[0],\n\t// \t// \t\t\t\tvalue: Object.values(m)[0] as number,\n\t// \t// \t\t\t};\n\t// \t// \t\t}),\n\t// \t// \t},\n\t// \t// });\n\t// \t// TODO: to be added when I have some level of control\n\t// \t// for now, the type attribute overrides what piz_compressed.exr creates\n\t// \t// which in turns fucks up with the env_map\n\t// \t// advanced\n\t// \t// this.add_param(ParamType.TOGGLE, 'advanced', 0)\n\t// \t// this.add_param(ParamType.INTEGER, 'type', THREE[TYPES[0]], {\n\t// \t// \tmenu: { type: 'radio', entries: TYPES.map(m=>{ return { name: m, value: THREE[m] } })},\n\t// \t// \tvisible_if: {advanced: 1}\n\t// \t// })\n\t// \t// this.add_param(ParamType.INTEGER, 'format', THREE[FORMATS[0]], {\n\t// \t// \tmenu: { type: 'radio', entries: FORMATS.map(m=>{ return { name: m, value: THREE[m] } })},\n\t// \t// \tvisible_if: {advanced: 1}\n\t// \t// })\n\t// \t// this.add_param(ParamType.INTEGER, 'encoding', THREE[ENCODINGS[0]], {\n\t// \t// \tmenu: { type: 'radio', entries: ENCODINGS.map(m=>{ return { name: m, value: THREE[m] } })},\n\t// \t// \tvisible_if: {advanced: 1}\n\t// \t// })\n\t// }\n\n\tasync cook() {\n\t\tif (this._is_static_image_url(this.pv.url)) {\n\t\t\tawait this.cook_for_image();\n\t\t} else {\n\t\t\tawait this.cook_for_video();\n\t\t}\n\t}\n\n\tprivate _is_static_image_url(url: string) {\n\t\treturn true;\n\t}\n\n\tprivate async cook_for_image() {\n\t\tconst texture = await this._load_texture(this.pv.url);\n\n\t\tif (texture) {\n\t\t\tthis._update_texture_params(texture);\n\t\t\tthis.set_texture(texture);\n\t\t} else {\n\t\t\tthis.clear_texture();\n\t\t}\n\t}\n\n\tprivate async cook_for_video() {\n\t\tif (this._param_url_changed()) {\n\t\t\tconst texture = await this._load_texture(this.pv.url);\n\t\t\t// if (texture) {\n\t\t\t// \tthis._texture = texture;\n\t\t\t// }\n\n\t\t\tif (texture) {\n\t\t\t\tthis._add_video_spare_params_if_required(texture);\n\t\t\t}\n\t\t\tthis._previous_param_url = this.pv.url;\n\n\t\t\tthis._set_video_current_time();\n\n\t\t\tif (texture) {\n\t\t\t\tthis._update_texture_params(texture);\n\t\t\t\tthis.set_texture(texture);\n\t\t\t} else {\n\t\t\t\tthis.cook_controller.end_cook();\n\t\t\t}\n\t\t} else {\n\t\t\t// this._set_video_current_time();\n\t\t\t// this._update_texture_params();\n\t\t\t// if (texture?.needsUpdate) {\n\t\t\t// \tthis.set_texture(texture);\n\t\t\t// } else {\n\t\t\t// \tthis.cook_controller.end_cook();\n\t\t\t// }\n\t\t}\n\t}\n\n\tresolved_url() {\n\t\treturn this.pv.url;\n\t}\n\n\tprivate _update_texture_params(texture: Texture) {\n\t\t// const keys = Object.keys(ATTRIB_MAPPING) as keyof AttribMapping\n\t\tfor (let texture_attrib of ATTRIB_MAPPING_KEYS) {\n\t\t\tconst param_name = ATTRIB_MAPPING[texture_attrib];\n\t\t\tconst param_value = this.params.float(param_name);\n\t\t\t// const texture_attrib = ATTRIB_MAPPING[attrib];\n\n\t\t\tif (param_value != null && texture) {\n\t\t\t\tif (texture[texture_attrib] != param_value) {\n\t\t\t\t\ttexture[texture_attrib] = param_value;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic PARAM_CALLBACK_reload(node: FileCopNode, param: BaseParamType) {\n\t\tnode.param_callback_reload();\n\t}\n\tprivate param_callback_reload() {\n\t\tthis._previous_param_url = undefined;\n\n\t\t// set the param dirty is preferable, in case this is used to refresh a local asset\n\t\tthis.p.url.set_successors_dirty();\n\t\t// this.set_dirty()\n\t}\n\n\tprivate _set_video_current_time() {\n\t\tif (this._video) {\n\t\t\tif (this.params.has('video_time')) {\n\t\t\t\tthis._video.currentTime = this.params.float('video_time');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _add_video_spare_params_if_required(texture: Texture | VideoTexture | null) {\n\t\tif (texture) {\n\t\t\tconst is_video = texture.constructor == VideoTexture;\n\t\t\tif (is_video) {\n\t\t\t\tthis._video = texture.image;\n\t\t\t\tif (this._video) {\n\t\t\t\t\tif (!this.params.has_param(FileCopNode.VIDEO_TIME_PARAM_NAME)) {\n\t\t\t\t\t\tconst duration = this._video.duration;\n\n\t\t\t\t\t\tthis.add_param(ParamType.FLOAT, FileCopNode.VIDEO_TIME_PARAM_NAME, '$T', {\n\t\t\t\t\t\t\tspare: true,\n\t\t\t\t\t\t\tcook: true,\n\t\t\t\t\t\t\trange: [0, duration],\n\t\t\t\t\t\t\trange_locked: [true, true],\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.emit(NodeEvent.PARAMS_UPDATED);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._remove_spare_params();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._remove_spare_params();\n\t\t}\n\t}\n\n\tprivate _remove_spare_params() {\n\t\tif (this.params.has_param(FileCopNode.VIDEO_TIME_PARAM_NAME)) {\n\t\t\tthis.params.update_params({names_to_delete: [FileCopNode.VIDEO_TIME_PARAM_NAME]});\n\t\t\t// this.emit(NodeEvent.PARAMS_UPDATED);\n\t\t}\n\t}\n\n\tprivate _param_url_changed(): boolean {\n\t\treturn this._previous_param_url != this.pv.url;\n\t}\n\n\tprivate async _load_texture(url: string) {\n\t\tlet texture: Texture | VideoTexture | null = null;\n\t\tconst param = this.params.get('url');\n\t\tif (url && param) {\n\t\t\tthis._texture_loader = this._texture_loader || new CoreTextureLoader(this, param);\n\t\t\t// const ext = lodash_last(url.split('.')).toLowerCase()\n\t\t\ttry {\n\t\t\t\ttexture = await this._texture_loader.load_texture_from_url_or_op(url);\n\t\t\t} catch (e) {\n\t\t\t\t//console.log('FAIL');\n\t\t\t}\n\t\t\t// if(texture){\n\t\t\t// \tcallback(texture)\n\t\t\t// } else {\n\t\t\tif (!texture) {\n\t\t\t\tthis.states.error.set(`could not load texture '${url}'`);\n\t\t\t}\n\t\t\t// }).catch(error=>{\n\t\t\t// \tthis.self.set_error(`could not load texture ${url} (${error})`);\n\t\t\t// })\n\t\t} else {\n\t\t\tthis.states.error.set('not url given to Mat/Base._load_texture');\n\t\t}\n\t\treturn texture;\n\t}\n}\n","// import {Vector3} from 'three/src/math/Vector3';\n// import {Texture} from 'three/src/textures/Texture';\nimport {Raycaster} from 'three/src/core/Raycaster';\nimport {PlaneBufferGeometry} from 'three/src/geometries/PlaneGeometry';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {Color} from 'three/src/math/Color';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\n// const THREE = {Color, Mesh, MeshBasicMaterial, PlaneBufferGeometry, Raycaster, Texture, Vector3}\n// import lodash_isNaN from 'lodash/isNaN'\n// import lodash_sum from 'lodash/sum'\n// import {BaseParam} from '../../../../../../Engine/Param/_Base'\n// import {BaseNodePostProcess} from '../../../../../../Engine/Node/PostProcess/_Base'\nimport {BaseCameraObjNodeType} from '../../../_BaseCamera';\nimport {BaseMatNodeType} from '../../../../mat/_Base';\n// import {NodeContext} from '../../../../../poly/NodeContext';\n// import {ParamType} from '../../../../../poly/ParamType';\n// import {EffectComposer} from '../../../../../../../modules/three/examples/jsm/postprocessing/EffectComposer'\n// import {RenderPass} from '../../../../../../../modules/three/examples/jsm/postprocessing/RenderPass'\n\n// import {File} from '../../../../../../Engine/Node/Cop/File'\n\n// import {ScreenQuad} from '../Camera/ScreenQuad'\nimport {NodeContext} from '../../../../../poly/NodeContext';\n\nimport {ParamConfig} from '../../../../utils/params/ParamsConfig';\nexport function CameraBackgroundParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tbackground = ParamConfig.FOLDER();\n\t\tuse_background = ParamConfig.BOOLEAN(0);\n\t\tuse_material = ParamConfig.BOOLEAN(0, {\n\t\t\tvisible_if: {use_background: true},\n\t\t});\n\t\tbackground_color = ParamConfig.COLOR([0, 0, 0], {\n\t\t\tvisible_if: {use_background: true, use_material: false},\n\t\t});\n\t\tbackground_material = ParamConfig.OPERATOR_PATH('', {\n\t\t\tvisible_if: {use_background: true, use_material: true},\n\t\t\tnode_selection: {context: NodeContext.MAT},\n\t\t\tdependent_on_found_node: false,\n\t\t});\n\t\tbackground_ratio = ParamConfig.FLOAT(1, {\n\t\t\tvisible_if: {use_background: true, use_material: true},\n\t\t});\n\t};\n}\n\nexport class BaseBackgroundController {\n\t// private _param_use_background: boolean;\n\t// private _param_use_material: boolean;\n\t// private _param_background_color: Color;\n\t// private _param_background_material: string;\n\t// private _param_background_ratio: number;\n\n\tprivate _screen_quad: Mesh | undefined;\n\tprivate _screen_quad_flat_material: MeshBasicMaterial | undefined;\n\n\tprotected _bg_raycaster = new Raycaster();\n\n\tconstructor(protected node: BaseCameraObjNodeType) {}\n\n\tget screen_quad() {\n\t\treturn (this._screen_quad = this._screen_quad || this._create_screen_quad()); // new ScreenQuad()\n\t}\n\tprivate _create_screen_quad() {\n\t\tconst size = 2; // better than 1 for color, as the edges can be visible if canvas ratio extreme\n\t\tconst segments = 1;\n\t\tconst geometry = new PlaneBufferGeometry(size, size, segments, segments);\n\t\tconst quad = new Mesh(geometry);\n\t\tthis.node.object.add(quad);\n\t\treturn quad;\n\t}\n\tscreen_quad_flat_material() {\n\t\treturn (this._screen_quad_flat_material = this._screen_quad_flat_material || new MeshBasicMaterial());\n\t}\n\n\tadd_params() {\n\t\t// this.node.within_param_folder('background', () => {\n\t\t// this.node.add_param(ParamType.BOOLEAN, 'use_background', 0);\n\t\t// this.node.add_param(ParamType.BOOLEAN, 'use_material', 0, {\n\t\t// \tvisible_if: {use_background: true},\n\t\t// });\n\t\t// this.node.add_param(ParamType.COLOR, 'background_color', [0, 0, 0], {\n\t\t// \tvisible_if: {use_background: true, use_material: false},\n\t\t// });\n\t\t// this.node.add_param(ParamType.OPERATOR_PATH, 'background_material', '', {\n\t\t// \tvisible_if: {use_background: true, use_material: true},\n\t\t// \tnode_selection: {context: NodeContext.MAT},\n\t\t// \tdependent_on_found_node: false,\n\t\t// });\n\t\t// this.node.add_param(ParamType.FLOAT, 'background_ratio', 1, {\n\t\t// \tvisible_if: {use_background: true, use_material: true},\n\t\t// });\n\t\t// });\n\t\t// this.self.add_param( ParamType.TOGGLE, 'use_background_color', 1 )\n\t\t// this.self.add_param( ParamType.COLOR, 'background_color', [0,0,0], {\n\t\t// \tvisible_if: {use_background_color: 1}\n\t\t// })\n\t\t// this.self.add_param( ParamType.TOGGLE, 'use_background_image', 0 )\n\t\t// this.self.add_param( ParamType.OPERATOR_PATH, 'background_image', File.DEFAULT_NODE_PATH.UV, {\n\t\t// \tvisible_if: {use_background_image: true},\n\t\t// \tnode_selection: {context: NodeContext.COP}\n\t\t// } )\n\t}\n\n\tget use_background(): boolean {\n\t\treturn this.node.params.boolean('use_background');\n\t}\n\tget use_background_material(): boolean {\n\t\treturn this.use_background && this.node.params.boolean('use_material');\n\t}\n\tget use_background_color(): boolean {\n\t\treturn this.use_background && !this.node.params.boolean('use_material');\n\t}\n\tget background_color(): Color | null {\n\t\tif (this.use_background_color) {\n\t\t\treturn this.node.params.color('background_color');\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\t// background_image_url(){\n\t// \tif(this._param_use_background_image){\n\t// \t\t// this.param('background_image').mark_as_referencing_asset(this._param_background_image)\n\t// \t\t// return this._param_background_image\n\t// \t\treturn this._background_image_url\n\t// \t}\n\t// }\n\t// background_texture(){\n\t// \tif(this._param_use_background_image){\n\t// \t\treturn this._background_texture\n\t// \t}\n\t// }\n\tprotected update_screen_quad() {}\n\tasync update() {\n\t\tif (this.use_background) {\n\t\t\tthis.update_screen_quad();\n\n\t\t\tawait this.update_background_color();\n\t\t\tif (this.use_background_material) {\n\t\t\t\tawait this.update_background_material();\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._screen_quad) {\n\t\t\t\tthis.node.object.remove(this._screen_quad);\n\t\t\t}\n\t\t}\n\n\t\t// if(this._param_use_background_image){\n\t\t// \tconst bg_node = this.self.param('background_image').found_node();\n\t\t// \tif(bg_node){\n\t\t// \t\tconst container = await bg_node.request_container();\n\t\t// \t\tthis._background_texture = container.core_content()\n\t\t// \t\t// this._background_image_url = bg_node.resolved_url()\n\t\t// \t} else {\n\t\t// \t\tthis._background_texture = null\n\t\t// \t}\n\t\t// } else {\n\t\t// \tthis._background_texture = null\n\t\t// }\n\t}\n\tprivate async update_background_color() {\n\t\tconst material = this.screen_quad_flat_material();\n\t\tmaterial.color = this.node.pv.background_color;\n\t\tthis.screen_quad.material = material;\n\t}\n\n\tprivate async update_background_material() {\n\t\tconst bg_node = this.node.p.background_material.found_node() as BaseMatNodeType;\n\t\tif (bg_node) {\n\t\t\tawait bg_node.request_container();\n\t\t\tconst material = bg_node.material;\n\t\t\tthis.screen_quad.material = material;\n\t\t\t// this.screen_quad().material.uniforms.uTexture.value = texture\n\t\t} else {\n\t\t\tthis.node.states.error.set('bg node not found');\n\t\t}\n\t}\n}\n","import lodash_isArray from 'lodash/isArray';\nimport {TypedParam} from './_Base';\nimport {FloatParam} from './Float';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamEvent} from '../poly/ParamEvent';\nimport {ParamInitValueSerializedTypeMap} from './types/ParamInitValueSerializedTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport abstract class TypedMultipleParam<T extends ParamType> extends TypedParam<T> {\n\tprivate _components_contructor = FloatParam;\n\tprotected _components!: FloatParam[];\n\tget components() {\n\t\treturn this._components;\n\t}\n\tget is_numeric() {\n\t\treturn true;\n\t}\n\tget is_default() {\n\t\tfor (let c of this.components) {\n\t\t\tif (!c.is_default) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tget raw_input() {\n\t\treturn this._components.map((c) => c.raw_input) as ParamInitValueSerializedTypeMap[T];\n\t}\n\tget raw_input_serialized() {\n\t\treturn this.raw_input;\n\t}\n\n\tinit_components() {\n\t\tif (this._components != null) {\n\t\t\treturn;\n\t\t}\n\t\tlet index = 0;\n\t\tthis._components = new Array(this.component_names.length);\n\t\tfor (let component_name of this.component_names) {\n\t\t\tconst component = new this._components_contructor(this.scene); //, `${this.name}${name}`);\n\t\t\tlet default_val;\n\t\t\tif (lodash_isArray(this._default_value)) {\n\t\t\t\tdefault_val = this._default_value[index];\n\t\t\t} else {\n\t\t\t\tdefault_val = (this._default_value as any)[component_name];\n\t\t\t}\n\t\t\tcomponent.options.copy(this.options);\n\t\t\tcomponent.set_init_value(default_val);\n\n\t\t\t// component.set_scene(this.scene);\n\t\t\tcomponent.set_name(`${this.name}${component_name}`);\n\t\t\tcomponent.set_parent_param(this);\n\n\t\t\tthis.add_graph_input(component);\n\t\t\t// component.initialize();\n\t\t\tthis._components[index] = component;\n\t\t\tindex++;\n\t\t}\n\t\t// this.compute();\n\t}\n\n\tprotected async process_computation(): Promise<void> {\n\t\tawait this.compute_components();\n\t\tthis.set_value_from_components();\n\t}\n\tset_value_from_components() {}\n\t// set_raw_input_from_components() {}\n\n\thas_expression() {\n\t\tfor (let c of this.components) {\n\t\t\tif (c.expression_controller?.active) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async compute_components() {\n\t\tconst components = this.components;\n\t\t// const component_evaluation_states = lodash_map(components, ()=> false);\n\t\t// const expected_values_count = components.length;\n\t\t// const component_values = [];\n\t\t// let component;\n\t\t// return lodash_each(this.components(), (component, index)=> {\n\t\tconst promises = [];\n\t\tfor (let c of components) {\n\t\t\tif (c.is_dirty) {\n\t\t\t\tpromises.push(c.compute()); //component_value=> {\n\t\t\t}\n\t\t}\n\t\tawait Promise.all(promises);\n\t\t// component_values[index] = component_value;\n\t\t// component_evaluation_states[index] = true;\n\t\t// const evaluated_values_count = lodash_compact(component_evaluation_states).length;\n\t\t// check if all components have been evaluated succesfully\n\t\t// if (evaluated_values_count === expected_values_count) {\n\t\tthis.remove_dirty_state();\n\t\t// return component_values;\n\t\t// }\n\t\t// });\n\t\t// }\n\t}\n\tprotected _prefilter_invalid_raw_input(raw_input: any): ParamInitValuesTypeMap[T] {\n\t\tif (!lodash_isArray(raw_input)) {\n\t\t\tconst number_or_string = raw_input as number | string;\n\t\t\tconst raw_input_wrapped_in_array: StringOrNumber[] = this.components.map(() => number_or_string);\n\t\t\treturn raw_input_wrapped_in_array as ParamInitValuesTypeMap[T];\n\t\t} else {\n\t\t\treturn raw_input as ParamInitValuesTypeMap[T];\n\t\t}\n\t}\n\n\tprotected process_raw_input() {\n\t\tconst cooker = this.scene.cooker;\n\t\tcooker.block();\n\t\tconst components = this.components;\n\t\tfor (let c of components) {\n\t\t\tc.emit_controller.block_parent_emit();\n\t\t}\n\n\t\t// if (lodash_isArray(values)) {\n\t\tconst value = this._raw_input;\n\t\tif (lodash_isArray(value)) {\n\t\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\t\tcomponents[i].set((value as any)[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\t\tconst component_name = this.component_names[i];\n\t\t\t\tcomponents[i].set((value as any)[component_name]);\n\t\t\t}\n\t\t}\n\t\t// } else {\n\t\t// \tconst component_names = this.component_names()\n\t\t// \tfor (let i = 0; i < components.length; i++) {\n\t\t// \t\tcomponents[i].set(values[component_names[i]])\n\t\t// \t}\n\t\t// }\n\n\t\tcooker.unblock();\n\n\t\tfor (let i = 0; i < components.length; i++) {\n\t\t\tcomponents[i].emit_controller.unblock_parent_emit();\n\t\t}\n\t\t// this.emit(ParamEvent.UPDATED);\n\n\t\tthis.emit_controller.emit(ParamEvent.VALUE_UPDATED);\n\t}\n}\n\n// export class BaseMultipleParam extends TypedMultipleParam<Vector> {}\n","// import lodash_isArray from 'lodash/isArray'\n// import lodash_isString from 'lodash/isString'\nimport {BaseParamType} from '../../../params/_Base';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamInitValueSerializedTypeMap} from '../../../params/types/ParamInitValueSerializedTypeMap';\n\nimport {ParamOptions} from '../../../params/utils/OptionsController';\n\ntype OverridenOptions = Dictionary<string>;\n\nexport type SimpleParamJsonExporterData<T extends ParamType> = ParamInitValueSerializedTypeMap[T];\n\nexport interface ComplexParamJsonExporterData<T extends ParamType> {\n\ttype?: T;\n\tdefault_value?: ParamInitValueSerializedTypeMap[T];\n\traw_input?: ParamInitValueSerializedTypeMap[T];\n\toptions?: ParamOptions;\n\toverriden_options?: OverridenOptions;\n\t// components?: ParamJsonExporterDataByName;\n\t// expression?: string;\n}\nexport type ParamJsonExporterData<T extends ParamType> =\n\t| SimpleParamJsonExporterData<T>\n\t| ComplexParamJsonExporterData<T>;\nexport type ParamJsonExporterDataByName = Dictionary<ParamJsonExporterData<ParamType>>;\n\nexport class ParamJsonExporter<T extends BaseParamType> {\n\t// protected _simple_data: SimpleParamJsonExporterData<ParamType>=0;\n\tprotected _complex_data: ComplexParamJsonExporterData<ParamType> = {};\n\tconstructor(protected _param: T) {}\n\n\tget required(): boolean {\n\t\tconst is_spare_and_not_component = this._param.options.is_spare && !this._param.parent_param;\n\n\t\t// we should not need to check if it has an expression anymore,\n\t\t// as it could have an expression AND be of default value\n\t\tconst value_changed = !this._param.is_default; //|| this._param.has_expression();\n\t\t// const referencing_asset = this._param.is_referencing_asset()\n\t\treturn is_spare_and_not_component || value_changed; // || referencing_asset\n\t}\n\n\tdata() {\n\t\tif (this._param.parent_param) {\n\t\t\tconsole.warn('no component should be saved');\n\t\t\tthrow 'no component should be saved';\n\t\t}\n\n\t\tif (this._require_data_complex()) {\n\t\t\treturn this._data_complex();\n\t\t} else {\n\t\t\treturn this._data_simple();\n\t\t}\n\t}\n\n\tprivate _data_simple() {\n\t\treturn this._param.raw_input_serialized;\n\t}\n\n\tprivate _data_complex() {\n\t\tthis._complex_data = {};\n\n\t\tif (this._param.options.is_spare && !this._param.parent_param) {\n\t\t\tthis._complex_data['type'] = this._param.type;\n\t\t\tthis._complex_data['default_value'] = this._param.default_value_serialized;\n\t\t\tthis._complex_data['raw_input'] = this._param.raw_input_serialized;\n\t\t\tthis._complex_data['options'] = this._param.options.current;\n\t\t}\n\n\t\tif (!this._param.is_default) {\n\t\t\tthis.add_main();\n\t\t}\n\n\t\t// if(this._param.is_referencing_asset()){\n\t\t// \t// console.log(\"this._param.is_referencing_asset()\", this._param.is_referencing_asset())\n\t\t// \tthis._data['referenced_asset'] = this._param.referenced_asset()\n\t\t// }\n\n\t\tif (this._param.options.has_options_overridden) {\n\t\t\tconst overridden_options: OverridenOptions = {};\n\t\t\tconst options_overridden = this._param.options.overridden_options;\n\t\t\tfor (let option_name of Object.keys(options_overridden)) {\n\t\t\t\tconst option_value = options_overridden[option_name as keyof ParamOptions];\n\t\t\t\toverridden_options[option_name] = JSON.stringify(option_value);\n\t\t\t}\n\t\t\tthis._complex_data['overriden_options'] = overridden_options;\n\t\t}\n\t\treturn this._complex_data;\n\t}\n\n\tprotected _require_data_complex() {\n\t\tif (this._param.options.is_spare) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._param.options.has_options_overridden) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// default_value(): ParamValueSerialized {\n\t// \treturn this._param.default_value_serialized;\n\t// }\n\n\t// cannot remember why this is useful, but it messes up\n\t// with gl nodes like the noise node, as the default value\n\t// gets saved as a string '[1,1]' instead of an array [1,1] (should be without quotes)\n\t// protected default_value(){\n\t// \tlet default_value = this._param.default_value()\n\t// \tif(lodash_isString(default_value)){\n\t// \t\tdefault_value = `'${default_value}'`\n\t// \t}\n\t// \tif (lodash_isArray(default_value)){\n\t// \t\tdefault_value = `[${default_value}]`\n\t// \t}\n\t// \treturn default_value\n\t// }\n\n\tprotected add_main() {}\n}\n","// import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\n// import {ShaderChunk} from 'three/src/renderers/shaders/ShaderChunk';\n// import {Shader} from 'three/src/renderers/shaders/ShaderLib'\n// import {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\n// import {MeshPhysicalMaterial} from 'three/src/materials/MeshPhysicalMaterial';\n// import {Material} from 'three/src/materials/Material';\nimport {Vector2} from 'three/src/math/Vector2';\n\n// import {Connection} from '../../../../../Engine/Node/Gl/GlData';\nimport {LineType} from '../utils/LineType';\n// import {Output} from '../../../../../Engine/Node/Gl/Output'\n\nimport {ShaderConfig} from '../configs/ShaderConfig';\nimport {VariableConfig} from '../configs/VariableConfig';\n// import {ThreeToGl} from '../../../../../core/ThreeToGl';\n// const BODY_SPLIT_LINE = 'void main() {'\n// export const BODY_SEPARATOR_LINES = lodash_range(3).map(i=>'\t')\nimport {CodeBuilder} from '../utils/CodeBuilder';\n// import {BaseNode} from '../../../../../Engine/Node/_Base';\nimport {BaseGlNodeType} from '../../_Base';\nimport {GlobalsGeometryHandler} from '../globals/Geometry';\nimport {TypedAssembler} from '../../../utils/shaders/BaseAssembler';\nimport {ShaderName} from '../../../utils/shaders/ShaderName';\n// import {IUniformsWithFrame, IUniformsWithResolution} from '../../../../scene/utils/UniformsController';\nimport {OutputGlNode} from '../../Output';\nimport {ParamType} from '../../../../poly/ParamType';\nimport {TypedNamedConnectionPoint} from '../../../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../../../utils/connections/ConnectionPointType';\nimport {GlobalsGlNode} from '../../Globals';\nimport {AttributeGlNode} from '../../Attribute';\nimport {AssemblerControllerNode} from '../Controller';\nimport {GlobalsBaseController} from '../globals/_Base';\nimport {CustomMaterialName} from './materials/_BaseMaterial';\nimport {ShadersCollectionController} from '../utils/ShadersCollectionController';\nimport {IUniforms} from '../../../../../core/geometry/Material';\n\ntype StringArrayByShaderName = Map<ShaderName, string[]>;\n\ninterface ITemplateShader {\n\tvertexShader?: string;\n\tfragmentShader?: string;\n\tuniforms?: IUniforms;\n}\n\nconst INSERT_DEFINE_AFTER_MAP: Map<ShaderName, string> = new Map([\n\t[ShaderName.VERTEX, '#include <common>'],\n\t[ShaderName.FRAGMENT, '#include <common>'],\n]);\nconst INSERT_BODY_AFTER_MAP: Map<ShaderName, string> = new Map([\n\t[ShaderName.VERTEX, '#include <color_vertex>'],\n\t[ShaderName.FRAGMENT, 'vec4 diffuseColor = vec4( diffuse, opacity );'],\n]);\nconst LINES_TO_REMOVE_MAP: Map<ShaderName, string[]> = new Map([\n\t[ShaderName.VERTEX, ['#include <begin_vertex>', '#include <beginnormal_vertex>']],\n\t[ShaderName.FRAGMENT, []],\n]);\n\nconst SPACED_LINES = 3;\n\nexport class BaseGlShaderAssembler extends TypedAssembler<BaseGlNodeType> {\n\tprotected _shaders_by_name: Map<ShaderName, string> = new Map();\n\tprotected _lines: StringArrayByShaderName = new Map();\n\tprotected _code_builder: CodeBuilder | undefined;\n\tprivate _param_config_owner: CodeBuilder | undefined;\n\tprotected _root_nodes: BaseGlNodeType[] = [];\n\tprotected _leaf_nodes: BaseGlNodeType[] = [];\n\tprotected _material: ShaderMaterial | undefined;\n\n\tprivate _shader_configs: ShaderConfig[] | undefined;\n\tprivate _variable_configs: VariableConfig[] | undefined;\n\n\tprivate _uniforms_time_dependent: boolean = false;\n\tprivate _resolution_dependent: boolean = false;\n\n\tconstructor(protected _gl_parent_node: AssemblerControllerNode) {\n\t\tsuper();\n\t}\n\n\tasync compile() {}\n\n\t// private get material() {\n\t// \treturn (this._material = this._material || this._create_material());\n\t// }\n\t// async get_material(/*master_assembler?: BaseGlShaderAssembler*/) {\n\t// \tthis._material = this._material || this._create_material();\n\n\t// \tawait this._update_material(/*master_assembler*/);\n\t// \treturn this._material;\n\t// }\n\tprotected _template_shader_for_shader_name(shader_name: ShaderName): string | undefined {\n\t\tswitch (shader_name) {\n\t\t\tcase ShaderName.VERTEX:\n\t\t\t\treturn this._template_shader?.vertexShader;\n\t\t\tcase ShaderName.FRAGMENT:\n\t\t\t\treturn this._template_shader?.fragmentShader;\n\t\t}\n\t}\n\n\tget globals_handler(): GlobalsBaseController | undefined {\n\t\treturn this._gl_parent_node.assembler_controller.globals_handler;\n\t}\n\tcompile_allowed(): boolean {\n\t\treturn this._gl_parent_node.assembler_controller.globals_handler != null;\n\t}\n\tshaders_by_name() {\n\t\treturn this._shaders_by_name;\n\t}\n\n\t// protected create_material(): ShaderMaterial | undefined {\n\t// \treturn undefined;\n\t// }\n\tprotected _build_lines() {\n\t\tfor (let shader_name of this.shader_names) {\n\t\t\tconst template = this._template_shader_for_shader_name(shader_name);\n\t\t\tif (template) {\n\t\t\t\tthis._replace_template(template, shader_name);\n\t\t\t}\n\t\t}\n\t}\n\n\t// protected _build_lines_for_shader_name(shader_name: ShaderName){\n\t// \tconst template = this._template_shader()\n\t// \tthis._replace_template(template[`${shader_name}Shader`], shader_name)\n\t// }\n\n\tset_root_nodes(root_nodes: BaseGlNodeType[]) {\n\t\tthis._root_nodes = root_nodes;\n\t}\n\tprotected get _template_shader(): ITemplateShader | undefined {\n\t\treturn undefined;\n\t} //Shader - could not find the import?\n\t// abstract _color_declaration(): string\n\t// private async _update_material(/*master_assembler?: BaseGlShaderAssembler*/) {\n\t// \tif (!this.material || !this._material) {\n\t// \t\treturn;\n\t// \t}\n\t// \tconst template_shader = this._template_shader;\n\t// \tif (!template_shader) {\n\t// \t\treturn;\n\t// \t}\n\t// \tthis._lines = new Map();\n\t// \tfor (let shader_name of this.shader_names) {\n\t// \t\tconst template = this._template_shader_for_shader_name(shader_name);\n\t// \t\tif (template) {\n\t// \t\t\tthis._lines.set(shader_name, template.split('\\n'));\n\t// \t\t}\n\t// \t}\n\t// \tif (this._root_nodes.length > 0) {\n\t// \t\t// this._output_node.set_color_declaration(this._color_declaration())\n\t// \t\t// if(!master_assembler){\n\t// \t\t// this._output_node.set_assembler(this)\n\t// \t\tawait this.build_code_from_nodes(this._root_nodes);\n\t// \t\t// }\n\n\t// \t\t(this._material as any).extensions = {derivatives: true};\n\t// \t\t// this._material?.derivatives = true;\n\t// \t\tthis._build_lines();\n\t// \t\t// this._lines[ShaderName.FRAGMENT].unshift('#extension GL_OES_standard_derivatives : enable')\n\t// \t}\n\n\t// \t// TODO: typescript - not sure that is still useful\n\t// \t// for (let param_config of this.param_configs()) {\n\t// \t// \tparam_config.material = this._material;\n\t// \t// }\n\n\t// \t// instead of replacing fully the uniforms,\n\t// \t// I simply add to them the new ones or replace the existing ones\n\t// \t// otherwise this would break the particles_system_gpu\n\t// \t// which would not reset correctly when going back to first frame.\n\t// \t// Not entirely sure why, but this seems to be due to the texture uniforms\n\t// \t// which are removed and then readded. This seems to mess up somewhere with how\n\t// \t// the material updates itself...\n\t// \t// this._material.uniforms = this.build_uniforms(template_shader)\n\t// \tconst new_uniforms = this.build_uniforms(template_shader.uniforms);\n\t// \tthis.material.uniforms = this.material.uniforms || {};\n\t// \tfor (let uniform_name of Object.keys(new_uniforms)) {\n\t// \t\tthis.material.uniforms[uniform_name] = new_uniforms[uniform_name];\n\t// \t}\n\n\t// \tfor (let shader_name of this.shader_names) {\n\t// \t\tconst lines = this._lines.get(shader_name);\n\t// \t\tif (lines) {\n\t// \t\t\tconst shader = lines.join('\\n');\n\t// \t\t\tswitch (shader_name) {\n\t// \t\t\t\tcase ShaderName.VERTEX: {\n\t// \t\t\t\t\tthis._material.vertexShader = shader;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\t}\n\t// \t\t\t\tcase ShaderName.FRAGMENT: {\n\t// \t\t\t\t\tthis._material.fragmentShader = shader;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\n\t// \tconst scene = this._gl_parent_node.scene;\n\t// \t// const id = this._gl_parent_node.graph_node_id()\n\t// \tif (this.frame_dependent()) {\n\t// \t\t// make sure not to use this._gl_parent_node.graph_node_id() as the id,\n\t// \t\t// as we need several materials:\n\t// \t\t// - the visible one\n\t// \t\t// - the multiple shadow ones\n\t// \t\t// - and possibly a depth one\n\t// \t\tscene.uniforms_controller.add_frame_dependent_uniform_owner(\n\t// \t\t\tthis._material.uuid,\n\t// \t\t\tthis._material.uniforms as IUniformsWithFrame\n\t// \t\t);\n\t// \t} else {\n\t// \t\tscene.uniforms_controller.remove_frame_dependent_uniform_owner(this._material.uuid);\n\t// \t}\n\n\t// \tif (this.resolution_dependent()) {\n\t// \t\tscene.uniforms_controller.add_resolution_dependent_uniform_owner(\n\t// \t\t\tthis._material.uuid,\n\t// \t\t\tthis._material.uniforms as IUniformsWithResolution\n\t// \t\t);\n\t// \t} else {\n\t// \t\tscene.uniforms_controller.remove_resolution_dependent_uniform_owner(this._material.uuid);\n\t// \t}\n\t// }\n\n\tprotected add_uniforms(current_uniforms: IUniforms) {\n\t\t// const new_uniforms = UniformsUtils.clone(template_uniforms);\n\n\t\t// copy the new uniforms onto the old ones, only adding, not removing\n\t\t// for (let uniform_name of Object.keys(new_uniforms)) {\n\n\t\t// }\n\n\t\t// copy the values of the old uniform\n\t\t// for (let uniform_name of Object.keys(old_uniforms)) {\n\t\t// \tconst new_uniform = new_uniforms[uniform_name];\n\t\t// \tif (new_uniform) {\n\t\t// \t\tnew_uniform.value = old_uniforms[uniform_name].value;\n\t\t// \t}\n\t\t// }\n\n\t\tfor (let param_config of this.param_configs()) {\n\t\t\tcurrent_uniforms[param_config.uniform_name] = param_config.uniform;\n\t\t}\n\n\t\tif (this.uniforms_time_dependent()) {\n\t\t\tcurrent_uniforms['time'] = {\n\t\t\t\t// type: '1f',\n\t\t\t\tvalue: this._gl_parent_node.scene.time,\n\t\t\t};\n\t\t}\n\t\tif (this.resolution_dependent()) {\n\t\t\tcurrent_uniforms['resolution'] = {\n\t\t\t\tvalue: new Vector2(1000, 1000),\n\t\t\t};\n\t\t}\n\n\t\t// return new_uniforms;\n\t}\n\n\t//\n\t//\n\t// ROOT NODES AND SHADER NAMES\n\t//\n\t//\n\troot_nodes_by_shader_name(shader_name: ShaderName): BaseGlNodeType[] {\n\t\t// return this._root_nodes\n\t\tconst list = [];\n\t\tfor (let node of this._root_nodes) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'output': {\n\t\t\t\t\tlist.push(node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'attribute': {\n\t\t\t\t\t// TODO: typescript - gl - why is there a texture allocation controller in the base assembler?\n\t\t\t\t\t// const attrib_name = (node as AttributeGlNode).attribute_name;\n\t\t\t\t\t// const variable = this._texture_allocations_controller.variable(attrib_name);\n\t\t\t\t\t// if (variable) {\n\t\t\t\t\t// \tconst allocation_shader_name = variable.allocation().shader_name();\n\t\t\t\t\t// \tif (allocation_shader_name == shader_name) {\n\t\t\t\t\t// \t\tlist.push(node);\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t\t// break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tleaf_nodes_by_shader_name(shader_name: ShaderName): BaseGlNodeType[] {\n\t\tconst list = [];\n\t\tfor (let node of this._leaf_nodes) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase GlobalsGlNode.type(): {\n\t\t\t\t\tlist.push(node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase AttributeGlNode.type(): {\n\t\t\t\t\t// TODO: typescript - gl - why is there a texture allocation controller in the base assembler? AND especially since there is no way to assign it?\n\t\t\t\t\t// const attrib_name: string = (node as AttributeGlNode).attribute_name;\n\t\t\t\t\t// const variable = this._texture_allocations_controller.variable(attrib_name);\n\t\t\t\t\t// if (variable) {\n\t\t\t\t\t// \tconst allocation_shader_name = variable.allocation().shader_name();\n\t\t\t\t\t// \tif (allocation_shader_name == shader_name) {\n\t\t\t\t\t// \t\tlist.push(node);\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t\t// break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tset_node_lines_globals(globals_node: GlobalsGlNode, shaders_collection_controller: ShadersCollectionController) {}\n\tset_node_lines_output(output_node: OutputGlNode, shaders_collection_controller: ShadersCollectionController) {}\n\tset_node_lines_attribute(\n\t\tattribute_node: AttributeGlNode,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {}\n\n\t//\n\t//\n\t// CHILDREN NODES PARAMS\n\t//\n\t//\n\tget code_builder() {\n\t\treturn (this._code_builder = this._code_builder || new CodeBuilder(this, this._gl_parent_node));\n\t}\n\tasync build_code_from_nodes(root_nodes: BaseGlNodeType[]) {\n\t\tawait this.code_builder.build_from_nodes(root_nodes);\n\t}\n\tallow_new_param_configs() {\n\t\tthis.code_builder.allow_new_param_configs();\n\t}\n\tdisallow_new_param_configs() {\n\t\tthis.code_builder.disallow_new_param_configs();\n\t}\n\tbuilder_param_configs() {\n\t\treturn this.code_builder.param_configs();\n\t}\n\tbuilder_lines(shader_name: ShaderName, line_type: LineType) {\n\t\treturn this.code_builder.lines(shader_name, line_type);\n\t}\n\tall_builder_lines() {\n\t\treturn this.code_builder.all_lines();\n\t}\n\tparam_configs() {\n\t\tconst code_builder = this._param_config_owner || this.code_builder;\n\t\treturn code_builder.param_configs();\n\t}\n\tset_param_configs_owner(param_config_owner: CodeBuilder) {\n\t\tthis._param_config_owner = param_config_owner;\n\t\tif (this._param_config_owner) {\n\t\t\tthis.code_builder.disallow_new_param_configs();\n\t\t} else {\n\t\t\tthis.code_builder.allow_new_param_configs();\n\t\t}\n\t}\n\n\t//\n\t//\n\t// CHILDREN NODES PARAMS\n\t//\n\t//\n\tstatic add_output_params(output_child: OutputGlNode) {\n\t\toutput_child.params.add_param(ParamType.VECTOR3, 'position', [0, 0, 0], {hidden: true});\n\t\toutput_child.params.add_param(ParamType.VECTOR3, 'normal', [0, 0, 0], {hidden: true});\n\t\toutput_child.params.add_param(ParamType.COLOR, 'color', [1, 1, 1], {hidden: true});\n\t\toutput_child.params.add_param(ParamType.FLOAT, 'alpha', 1, {hidden: true});\n\t\toutput_child.params.add_param(ParamType.VECTOR2, 'uv', [0, 0], {hidden: true});\n\t}\n\tadd_output_params(output_child: OutputGlNode) {\n\t\tBaseGlShaderAssembler.add_output_params(output_child);\n\t}\n\tstatic create_globals_node_output_connections() {\n\t\treturn [\n\t\t\tnew TypedNamedConnectionPoint('position', ConnectionPointType.VEC3),\n\t\t\tnew TypedNamedConnectionPoint('normal', ConnectionPointType.VEC3),\n\t\t\tnew TypedNamedConnectionPoint('color', ConnectionPointType.VEC3),\n\t\t\tnew TypedNamedConnectionPoint('uv', ConnectionPointType.VEC2),\n\t\t\tnew TypedNamedConnectionPoint('gl_FragCoord', ConnectionPointType.VEC4),\n\t\t\tnew TypedNamedConnectionPoint('resolution', ConnectionPointType.VEC2),\n\t\t\t// new Connection.Vec2('gl_PointCoord'),\n\t\t\t// new TypedConnectionVec2('uv'),\n\t\t\tnew TypedNamedConnectionPoint('time', ConnectionPointType.FLOAT),\n\t\t];\n\t}\n\tcreate_globals_node_output_connections() {\n\t\treturn BaseGlShaderAssembler.create_globals_node_output_connections();\n\t}\n\tadd_globals_params(globals_node: GlobalsGlNode) {\n\t\tglobals_node.io.outputs.set_named_output_connection_points(this.create_globals_node_output_connections());\n\t}\n\tallow_attribute_exports() {\n\t\treturn false;\n\t}\n\n\t//\n\t//\n\t// CONFIGS\n\t//\n\t//\n\treset_configs() {\n\t\tthis._reset_shader_configs();\n\t\tthis._reset_variable_configs();\n\t\tthis._reset_uniforms_time_dependency();\n\t\tthis._reset_resolution_dependency();\n\t}\n\tget shader_configs() {\n\t\treturn (this._shader_configs = this._shader_configs || this.create_shader_configs());\n\t}\n\tset_shader_configs(shader_configs: ShaderConfig[]) {\n\t\tthis._shader_configs = shader_configs;\n\t}\n\tget shader_names(): ShaderName[] {\n\t\treturn this.shader_configs?.map((sc) => sc.name()) || [];\n\t}\n\tprotected _reset_shader_configs() {\n\t\tthis._shader_configs = undefined;\n\t\t// this.shader_configs; // TODO: typescript - why do I need to re-initialize here?\n\t}\n\tcreate_shader_configs(): ShaderConfig[] {\n\t\treturn [\n\t\t\tnew ShaderConfig(ShaderName.VERTEX, ['position', 'normal', 'uv'], []),\n\t\t\tnew ShaderConfig(ShaderName.FRAGMENT, ['color', 'alpha'], [ShaderName.VERTEX]),\n\t\t];\n\t}\n\tshader_config(name: string): ShaderConfig | undefined {\n\t\treturn this.shader_configs?.filter((sc) => {\n\t\t\treturn sc.name() == name;\n\t\t})[0];\n\t}\n\tvariable_configs() {\n\t\treturn (this._variable_configs = this._variable_configs || this.create_variable_configs());\n\t}\n\tset_variable_configs(variable_configs: VariableConfig[]) {\n\t\tthis._variable_configs = variable_configs;\n\t}\n\tvariable_config(name: string) {\n\t\treturn this.variable_configs().filter((vc) => {\n\t\t\treturn vc.name() == name;\n\t\t})[0];\n\t}\n\tstatic create_variable_configs() {\n\t\treturn [\n\t\t\tnew VariableConfig('position', {\n\t\t\t\tdefault_from_attribute: true,\n\t\t\t\t// default: this.globals_handler().variable_config_default('position'),\n\t\t\t\t// required_definitions: this.globals_handler().variable_config_required_definitions('position'),\n\t\t\t\tprefix: 'vec3 transformed = ',\n\t\t\t}),\n\t\t\tnew VariableConfig('normal', {\n\t\t\t\tdefault_from_attribute: true,\n\t\t\t\tprefix: 'vec3 objectNormal = ',\n\t\t\t\t// post_lines: ['#ifdef USE_TANGENT', 'vec3 objectTangent = vec3( tangent.xyz );', '#endif'],\n\t\t\t}),\n\t\t\tnew VariableConfig('color', {\n\t\t\t\tprefix: 'diffuseColor.xyz = ',\n\t\t\t}),\n\t\t\tnew VariableConfig('alpha', {\n\t\t\t\tprefix: 'diffuseColor.a = ',\n\t\t\t}),\n\t\t\tnew VariableConfig('uv', {\n\t\t\t\t// default_from_attribute: true,\n\t\t\t\tprefix: 'vUv = ',\n\t\t\t\tif: GlobalsGeometryHandler.IF_RULE.uv,\n\t\t\t}),\n\t\t];\n\t}\n\tcreate_variable_configs(): VariableConfig[] {\n\t\treturn BaseGlShaderAssembler.create_variable_configs();\n\t}\n\tprotected _reset_variable_configs() {\n\t\tthis._variable_configs = undefined;\n\t\tthis.variable_configs();\n\t}\n\tinput_names_for_shader_name(root_node: BaseGlNodeType, shader_name: ShaderName) {\n\t\treturn this.shader_config(shader_name)?.input_names() || [];\n\t}\n\n\t// time dependency\n\tprotected _reset_uniforms_time_dependency() {\n\t\tthis._uniforms_time_dependent = false;\n\t}\n\tset_uniforms_time_dependent() {\n\t\tthis._uniforms_time_dependent = true;\n\t}\n\tuniforms_time_dependent(): boolean {\n\t\treturn this._uniforms_time_dependent;\n\t}\n\t// resolution dependency\n\tprotected _reset_resolution_dependency() {\n\t\tthis._resolution_dependent = false;\n\t}\n\tset_resolution_dependent() {\n\t\tthis._resolution_dependent = true;\n\t}\n\tresolution_dependent(): boolean {\n\t\treturn this._resolution_dependent;\n\t}\n\n\t//\n\t//\n\t// TEMPLATE HOOKS\n\t//\n\t//\n\tprotected insert_define_after(shader_name: ShaderName): string | undefined {\n\t\treturn INSERT_DEFINE_AFTER_MAP.get(shader_name);\n\t}\n\tprotected insert_body_after(shader_name: ShaderName): string | undefined {\n\t\treturn INSERT_BODY_AFTER_MAP.get(shader_name);\n\t}\n\tprotected lines_to_remove(shader_name: ShaderName): string[] | undefined {\n\t\treturn LINES_TO_REMOVE_MAP.get(shader_name);\n\t}\n\n\t//\n\t//\n\t// TEMPLATE CODE REPLACEMENT\n\t//\n\t//\n\n\tprivate _replace_template(template: string, shader_name: ShaderName) {\n\t\tconst function_declaration = this.builder_lines(shader_name, LineType.FUNCTION_DECLARATION);\n\t\tconst define = this.builder_lines(shader_name, LineType.DEFINE);\n\t\t// let all_define = function_declaration.concat(define);\n\t\tconst body = this.builder_lines(shader_name, LineType.BODY);\n\n\t\tlet template_lines = template.split('\\n');\n\t\t// const scene = this._gl_parent_node.scene;\n\t\tconst new_lines = [\n\t\t\t// `#define FPS ${ThreeToGl.float(scene.time_controller.fps)}`,\n\t\t\t// `#define TIME_INCREMENT (1.0/${ThreeToGl.float(scene.time_controller.fps)})`,\n\t\t\t// `#define FRAME_RANGE_START ${ThreeToGl.float(scene.time_controller.frame_range[0])}`,\n\t\t\t// `#define FRAME_RANGE_END ${ThreeToGl.float(scene.time_controller.frame_range[1])}`,\n\t\t];\n\n\t\tconst line_before_define = this.insert_define_after(shader_name);\n\t\tconst line_before_body = this.insert_body_after(shader_name);\n\t\tconst lines_to_remove = this.lines_to_remove(shader_name);\n\t\tlet line_before_define_found = false;\n\t\tlet line_before_body_found = false;\n\n\t\tfor (let template_line of template_lines) {\n\t\t\tif (line_before_define_found == true) {\n\t\t\t\tif (function_declaration) {\n\t\t\t\t\tthis._insert_lines(new_lines, function_declaration);\n\t\t\t\t}\n\t\t\t\tif (define) {\n\t\t\t\t\tthis._insert_lines(new_lines, define);\n\t\t\t\t}\n\t\t\t\tline_before_define_found = false;\n\t\t\t}\n\t\t\tif (line_before_body_found == true) {\n\t\t\t\t// this._insert_default_body_declarations(new_lines, shader_name)\n\t\t\t\tif (body) {\n\t\t\t\t\tthis._insert_lines(new_lines, body);\n\t\t\t\t}\n\t\t\t\tline_before_body_found = false;\n\t\t\t}\n\n\t\t\tlet line_remove_required = false;\n\t\t\tif (lines_to_remove) {\n\t\t\t\tfor (let line_to_remove of lines_to_remove) {\n\t\t\t\t\tif (template_line.indexOf(line_to_remove) >= 0) {\n\t\t\t\t\t\tline_remove_required = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!line_remove_required) {\n\t\t\t\tnew_lines.push(template_line);\n\t\t\t} else {\n\t\t\t\tnew_lines.push('// removed:');\n\t\t\t\tnew_lines.push(`//${template_line}`);\n\t\t\t}\n\n\t\t\tif (line_before_define && template_line.indexOf(line_before_define) >= 0) {\n\t\t\t\tline_before_define_found = true;\n\t\t\t}\n\t\t\tif (line_before_body && template_line.indexOf(line_before_body) >= 0) {\n\t\t\t\tline_before_body_found = true;\n\t\t\t}\n\n\t\t\t// if(template_line.indexOf('// INSERT DEFINE') >= 0){\n\t\t\t// } else {\n\t\t\t// \tif(template_line.indexOf('// INSERT BODY') >= 0){\n\t\t\t// \t\tif(body.length > 0){\n\t\t\t// \t\t\tlodash_times(3, ()=>new_lines.push('\t'))\n\t\t\t// \t\t\tbody.forEach(body_line=>{\n\t\t\t// \t\t\t\tnew_lines.push(body_line)\n\t\t\t// \t\t\t})\n\t\t\t// \t\t\tlodash_times(3, ()=>new_lines.push('\t'))\n\t\t\t// \t\t}\n\t\t\t// \t} else {\n\t\t\t// \t\tif(template_line.indexOf('// TO REMOVE') < 0){\n\t\t\t// \t\t\tnew_lines.push(template_line)\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\t\tthis._lines.set(shader_name, new_lines);\n\t}\n\n\t// protected _insert_default_body_declarations(new_lines, shader_name){\n\t// \tnew_lines.push('float POLY_roughness = 1.0;')\n\t// }\n\n\tprivate _insert_lines(new_lines: string[], lines_to_add: string[]) {\n\t\tif (lines_to_add.length > 0) {\n\t\t\tfor (let i = 0; i < SPACED_LINES; i++) {\n\t\t\t\tnew_lines.push('');\n\t\t\t}\n\n\t\t\tfor (let line_to_add of lines_to_add) {\n\t\t\t\tnew_lines.push(line_to_add);\n\t\t\t}\n\t\t\tfor (let i = 0; i < SPACED_LINES; i++) {\n\t\t\t\tnew_lines.push('');\n\t\t\t}\n\t\t}\n\t}\n\n\tasync get_custom_materials(): Promise<Map<CustomMaterialName, ShaderMaterial>> {\n\t\treturn new Map<CustomMaterialName, ShaderMaterial>();\n\t}\n\n\t// protected expand_shader(shader_string: string) {\n\t// \tfunction parseIncludes(string: string) {\n\t// \t\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\t// \t\tfunction replace(match: string, include: string) {\n\t// \t\t\tvar replace = ShaderChunk[include];\n\n\t// \t\t\tif (replace === undefined) {\n\t// \t\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t// \t\t\t}\n\n\t// \t\t\treturn parseIncludes(replace);\n\t// \t\t}\n\n\t// \t\treturn string.replace(pattern, replace);\n\t// \t}\n\t// \treturn parseIncludes(shader_string);\n\t// }\n\n\t//\n\t//\n\t// GLTF EXPORT\n\t//\n\t//\n\t// static convert_material_to_gltf_supported(material: ShaderMaterial): Material{\n\t// \tconst gltf_constructor = this.is_physical() ? MeshPhysicalMaterial : MeshStandardMaterial\n\t// \tconst options = {}\n\t// \tthis._match_uniform('color', options, material, 'diffuse')\n\t// \tthis._match_uniform('map', options, material)\n\t// \tthis._match_uniform('envMap', options, material)\n\t// \tthis._match_uniform('envMapIntensity', options, material)\n\t// \tthis._match_uniform('metalness', options, material)\n\t// \tthis._match_uniform('roughness', options, material)\n\t// \tconst gltf_material = new gltf_constructor(options)\n\t// \treturn gltf_material\n\t// }\n\t// static _match_uniform(name: string, options: object, material: ShaderMaterial, uniform_name?: string) {\n\t// \tuniform_name = uniform_name || name;\n\t// \toptions[name] = material.uniforms[uniform_name].value;\n\t// }\n}\n","import {BaseMatNodeType} from '../_Base';\n\nexport class BaseController {\n\tconstructor(protected node: BaseMatNodeType) {}\n\tadd_params() {}\n\n\tupdate() {}\n\n\tget material() {\n\t\treturn this.node.material;\n\t}\n}\n","import lodash_isArray from 'lodash/isArray';\n\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {Material} from 'three/src/materials/Material';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {PolyScene} from '../../engine/scene/PolyScene';\nimport {IUniform} from 'three/src/renderers/shaders/UniformsLib';\n\nexport interface IUniforms {\n\t[uniform: string]: IUniform;\n}\nexport interface MaterialWithUniforms extends Material {\n\tuniforms: IUniforms;\n}\n\nenum CustomMaterialName {\n\tcustomDistanceMaterial = 'customDistanceMaterial',\n\tcustomDepthMaterial = 'customDepthMaterial',\n\tcustomDepthDOFMaterial = 'customDepthDOFMaterial',\n}\nexport interface ObjectWithCustomMaterials extends Mesh {\n\t// customDistanceMaterial?: Material;\n\t// customDepthMaterial?: Material;\n\tcustomDepthDOFMaterial?: Material;\n}\nexport interface ShaderMaterialWithCustomMaterials extends ShaderMaterial {\n\tcustom_materials: {\n\t\t[key in CustomMaterialName]?: ShaderMaterial;\n\t};\n}\nexport interface MaterialWithSkinning extends Material {\n\tskinning: boolean;\n\tmorphTargets: boolean;\n}\n\nexport class CoreMaterial {\n\tstatic node(scene: PolyScene, material: Material) {\n\t\treturn scene.node(material.name);\n\t}\n\n\tstatic clone(src_material: Material | Material[]) {\n\t\tif (lodash_isArray(src_material)) {\n\t\t\treturn src_material.map((material) => {\n\t\t\t\treturn this.clone_single(material);\n\t\t\t});\n\t\t} else {\n\t\t\treturn this.clone_single(src_material);\n\t\t}\n\t}\n\n\tstatic clone_single(src_material: Material) {\n\t\tconst material = src_material.clone();\n\t\t// linewidth doesn't seem cloned correctly for ShaderMaterial\n\t\t(material as LineBasicMaterial).linewidth = (src_material as LineBasicMaterial).linewidth;\n\n\t\treturn material;\n\t}\n\n\tstatic apply_custom_materials(object: Object3D, material: Material) {\n\t\tconst material_with_custom = material as ShaderMaterialWithCustomMaterials;\n\t\tif (material_with_custom.custom_materials) {\n\t\t\tfor (let name of Object.keys(material_with_custom.custom_materials)) {\n\t\t\t\tconst mat_name = name as CustomMaterialName;\n\t\t\t\t// http://blog.edankwan.com/post/three-js-advanced-tips-shadow\n\t\t\t\tconst custom_material = material_with_custom.custom_materials[mat_name];\n\t\t\t\tif (custom_material) {\n\t\t\t\t\t(object as ObjectWithCustomMaterials)[mat_name] = custom_material;\n\t\t\t\t\tcustom_material.needsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// object.material = material.custom_materials.customDepthDOFMaterial\n\t\t\t// object.material = material.custom_materials.customDepthMaterial\n\t\t\t// object.material = material.custom_materials.customDistanceMaterial\n\t\t}\n\t}\n\tstatic assign_custom_uniforms(mat: Material, uniform_name: string, uniform_value: any) {\n\t\tconst material = mat as ShaderMaterialWithCustomMaterials;\n\t\tif (material.custom_materials) {\n\t\t\tfor (let name of Object.keys(material.custom_materials)) {\n\t\t\t\tconst mat_name = name as CustomMaterialName;\n\t\t\t\tconst custom_material = material.custom_materials[mat_name];\n\t\t\t\tif (custom_material) {\n\t\t\t\t\tcustom_material.uniforms[uniform_name].value = uniform_value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tstatic init_custom_material_uniforms(mat: Material, uniform_name: string, uniform_value: any) {\n\t\tconst material = mat as ShaderMaterialWithCustomMaterials;\n\t\tif (material.custom_materials) {\n\t\t\tfor (let name of Object.keys(material.custom_materials)) {\n\t\t\t\tconst mat_name = name as CustomMaterialName;\n\t\t\t\tconst custom_material = material.custom_materials[mat_name];\n\t\t\t\tif (custom_material) {\n\t\t\t\t\tcustom_material.uniforms[uniform_name] = custom_material.uniforms[uniform_name] || uniform_value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {TypedNode} from '../_Base';\nimport {EventContainer} from '../../containers/Event';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {TypedContainerController} from '../utils/ContainerController';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {BaseCameraObjNodeType} from '../obj/_BaseCamera';\n\nexport class TypedEventNode<K extends NodeParamsConfig> extends TypedNode<'EVENT', BaseEventNodeType, K> {\n\tcontainer_controller: TypedContainerController<EventContainer> = new TypedContainerController<EventContainer>(\n\t\tthis,\n\t\tEventContainer\n\t);\n\tstatic node_context(): NodeContext {\n\t\treturn NodeContext.EVENT;\n\t}\n\n\tprivate _eval_all_params_on_dirty_bound = this._eval_all_params_on_dirty.bind(this);\n\tinitialize_base_node() {\n\t\t// this._init_display_flag({\n\t\t// \thas_display_flag: false\n\t\t// });\n\t\tthis.io.connections.init_inputs();\n\t\tthis.ui_data.set_layout_horizontal();\n\t\tthis.add_post_dirty_hook('_eval_all_params_on_dirty', this._eval_all_params_on_dirty_bound);\n\t}\n\tnode_sibbling(name: string): BaseEventNodeType | null {\n\t\treturn super.node_sibbling(name) as BaseEventNodeType | null;\n\t}\n\n\t// ensures that event nodes are cooked when scene is loaded\n\t_eval_all_params_on_dirty() {\n\t\tthis.params.eval_all();\n\t}\n\tprocess_event(event: Event, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {}\n}\n\nexport type BaseEventNodeType = TypedEventNode<any>;\nexport class BaseEventNodeClass extends TypedEventNode<any> {}\n","import lodash_isString from 'lodash/isString';\nimport lodash_isArray from 'lodash/isArray';\n// import lodash_isBoolean from 'lodash/isBoolean';\n// import {TypedParamVisitor} from './_Base';\nimport {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\n// import {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ExpressionController} from './utils/ExpressionController';\nimport {ParamEvent} from '../poly/ParamEvent';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\n// import {ParamEvent} from '../poly/ParamEvent';\n// import {ParamInitValuesTypeMap} from '../nodes/utils/params/ParamsController';\n\n// interface NumericParamVisitor extends TypedParamVisitor {\n// \tvisit_numeric_param: (param: TypedNumericParam<any>) => any;\n// }\n\nexport abstract class TypedNumericParam<T extends ParamType> extends TypedParam<T> {\n\t// private _raw_input: ParamInitValuesTypeMap[T] | undefined;\n\tget is_numeric() {\n\t\treturn true;\n\t}\n\tget is_default(): boolean {\n\t\treturn this._raw_input == this.default_value;\n\t}\n\n\t// accepts_visitor(visitor: NumericParamVisitor): any {\n\t// \treturn visitor.visit_numeric_param(this);\n\t// }\n\t// init_expression() {\n\t// \tif (this.is_value_expression(this._default_value)) {\n\t// \t\treturn this.set_expression(this._default_value)\n\t// \t}\n\t// }\n\tprotected _prefilter_invalid_raw_input(raw_input: any): ParamInitValuesTypeMap[T] {\n\t\tif (lodash_isArray(raw_input)) {\n\t\t\treturn raw_input[0] as ParamInitValuesTypeMap[T];\n\t\t} else {\n\t\t\treturn raw_input;\n\t\t}\n\t}\n\n\tprotected process_raw_input() {\n\t\tthis.states.error.clear();\n\n\t\tconst converted = this.convert(this._raw_input);\n\t\tif (converted != null) {\n\t\t\tif (this._expression_controller) {\n\t\t\t\tthis._expression_controller.set_expression(undefined, false);\n\t\t\t\tthis.emit_controller.emit(ParamEvent.EXPRESSION_UPDATED); // ensure expression is considered removed\n\t\t\t}\n\t\t\tif (converted != this._value) {\n\t\t\t\tthis._update_value(converted);\n\t\t\t\tthis.set_successors_dirty(this);\n\t\t\t}\n\t\t} else {\n\t\t\tif (lodash_isString(this._raw_input)) {\n\t\t\t\tthis._expression_controller = this._expression_controller || new ExpressionController(this);\n\t\t\t\tif (this._raw_input != this._expression_controller.expression) {\n\t\t\t\t\tthis._expression_controller.set_expression(this._raw_input);\n\t\t\t\t\tthis.emit_controller.emit(ParamEvent.EXPRESSION_UPDATED);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.states.error.set(`param input is invalid (${this.full_path()})`);\n\t\t\t}\n\t\t}\n\t}\n\tprotected async process_computation(): Promise<void> {\n\t\tif (this.expression_controller?.active && !this.expression_controller.requires_entities) {\n\t\t\tconst expression_result = await this.expression_controller.compute_expression();\n\t\t\tif (this.expression_controller.is_errored) {\n\t\t\t\tthis.states.error.set(\n\t\t\t\t\t`expression error: \"${this.expression_controller.expression}\" (${this.expression_controller.error_message})`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst converted = this.convert(expression_result);\n\t\t\t\tif (converted != null) {\n\t\t\t\t\tif (this.states.error.active) {\n\t\t\t\t\t\tthis.states.error.clear();\n\t\t\t\t\t}\n\t\t\t\t\tthis._update_value(converted);\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set(\n\t\t\t\t\t\t`expression returns an invalid type (${expression_result}) (${this.expression_controller.expression})`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _update_value(new_value: ParamValuesTypeMap[T]) {\n\t\tthis._value = new_value;\n\t\tif (this.parent_param) {\n\t\t\tthis.parent_param.set_value_from_components();\n\t\t}\n\t\tthis.options.execute_callback();\n\t\tthis.emit_controller.emit(ParamEvent.VALUE_UPDATED);\n\t\tthis.remove_dirty_state();\n\t}\n}\n","export class TypeAssert {\n\tstatic unreachable(x: never): never {\n\t\tthrow new Error(\"Didn't expect to get here\");\n\t}\n}\n","import {BaseParamType} from '../../../params/_Base';\nimport {ComplexParamJsonExporterData} from '../export/Param';\nimport {ParamType} from '../../../poly/ParamType';\n\nexport class ParamJsonImporter<T extends BaseParamType> {\n\tconstructor(protected _param: T) {}\n\n\tprocess_data(data: ComplexParamJsonExporterData<ParamType>) {\n\t\tconst raw_input = data['raw_input'];\n\t\t// const expression = data['expression'];\n\t\t// const components = data['components'];\n\t\t// if (expression !== undefined) {\n\t\t// \tthis._param.set(expression);\n\t\t// }\n\t\tif (raw_input !== undefined) {\n\t\t\tthis._param.set(raw_input);\n\t\t}\n\n\t\t// const referenced_asset = data['referenced_asset']\n\t\t// if(referenced_asset){\n\t\t// \tthis._param.mark_as_referencing_asset(referenced_asset)\n\t\t// }\n\n\t\tthis.add_main(data);\n\t}\n\n\tadd_main(data: ComplexParamJsonExporterData<ParamType>) {}\n}\n","import {ShaderName} from '../../../utils/shaders/ShaderName';\n\nexport class ShaderConfig {\n\tconstructor(private _name: ShaderName, private _input_names: string[], private _dependencies: ShaderName[]) {}\n\n\tname() {\n\t\treturn this._name;\n\t}\n\tinput_names() {\n\t\treturn this._input_names;\n\t}\n\tdependencies() {\n\t\treturn this._dependencies;\n\t}\n}\n","interface VariableConfigOptions {\n\t// asset refererences\n\tdefault_from_attribute?: boolean;\n\tdefault?: string;\n\tif?: string;\n\tprefix?: string;\n\tsuffix?: string;\n}\n\nexport class VariableConfig {\n\tconstructor(private _name: string, private _options: VariableConfigOptions = {}) {}\n\n\tname() {\n\t\treturn this._name;\n\t}\n\tdefault_from_attribute() {\n\t\treturn this._options['default_from_attribute'] || false;\n\t}\n\tdefault() {\n\t\treturn this._options['default'];\n\t}\n\tif_condition() {\n\t\treturn this._options['if'];\n\t}\n\t// required_definitions(){\n\t// \treturn this._options['required_definitions']\n\t// }\n\tprefix() {\n\t\treturn this._options['prefix'] || '';\n\t}\n\tsuffix() {\n\t\treturn this._options['suffix'] || '';\n\t}\n}\n","import {ParamConfig} from '../configs/ParamConfig';\nimport {ParamType} from '../../../../poly/ParamType';\nimport {ParamInitValuesTypeMap} from '../../../../params/types/ParamInitValuesTypeMap';\n\nexport class ParamConfigsController {\n\tprivate _param_configs: ParamConfig<ParamType>[] = [];\n\n\treset() {\n\t\tthis._param_configs = [];\n\t}\n\n\tpush(param_config: ParamConfig<ParamType>) {\n\t\tthis._param_configs.push(param_config);\n\t}\n\tcreate_and_push<T extends ParamType>(\n\t\ttype: T,\n\t\tname: string,\n\t\tdefault_value: ParamInitValuesTypeMap[T],\n\t\tuniform_name: string\n\t) {\n\t\tconst param_config = new ParamConfig(type, name, default_value, uniform_name);\n\t\tthis._param_configs.push(param_config);\n\t}\n\n\tget list(): Readonly<ParamConfig<ParamType>[]> {\n\t\treturn this._param_configs;\n\t}\n}\n","import {BaseController} from './_BaseController';\nimport {TypedMatNode} from '../_Base';\nimport {Material} from 'three/src/materials/Material';\nimport {Color} from 'three/src/math/Color';\n\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\n\nexport function ColorParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tcolor = ParamConfig.COLOR([1, 1, 1]);\n\t\tuse_vertex_colors = ParamConfig.BOOLEAN(0);\n\t\ttransparent = ParamConfig.BOOLEAN(0);\n\t\topacity = ParamConfig.FLOAT(1);\n\t\talpha_test = ParamConfig.FLOAT(0);\n\t\tuse_fog = ParamConfig.BOOLEAN(0);\n\t};\n}\n\nclass ColoredMaterial extends Material {\n\tpublic color!: Color;\n\tvertexColors!: boolean;\n\ttransparent!: boolean;\n\tdepthTest!: boolean;\n\talphaTest!: number;\n\tfog!: boolean;\n}\nclass ColorParamsConfig extends ColorParamConfig(NodeParamsConfig) {}\nclass ColoredMatNode extends TypedMatNode<ColoredMaterial, ColorParamsConfig> {\n\tcreate_material() {\n\t\treturn new ColoredMaterial();\n\t}\n}\n\nexport class ColorsController extends BaseController {\n\tstatic update(node: ColoredMatNode) {\n\t\tconst material = node.material;\n\t\tconst pv = node.pv;\n\t\tmaterial.color.copy(pv.color);\n\t\tconst new_vertex_color = pv.use_vertex_colors; // ? VertexColors : NoColors;\n\t\tif (new_vertex_color != material.vertexColors) {\n\t\t\tmaterial.vertexColors = new_vertex_color;\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\n\t\tmaterial.opacity = pv.opacity;\n\t\tmaterial.transparent = pv.transparent || pv.opacity < 1;\n\t\tmaterial.depthTest = true;\n\t\tmaterial.alphaTest = pv.alpha_test;\n\t\tmaterial.fog = pv.use_fog;\n\t}\n}\n","import {BaseController} from './_BaseController';\nimport {TypedMatNode} from '../_Base';\nimport {Material} from 'three/src/materials/Material';\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\nimport {IUniforms} from '../../../../core/geometry/Material';\n\nexport function ColorParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t// color = ParamConfig.COLOR([1, 1, 1]);\n\t\ttransparent = ParamConfig.BOOLEAN(0);\n\t\topacity = ParamConfig.FLOAT(1);\n\t\talpha_test = ParamConfig.FLOAT(0);\n\t\tuse_fog = ParamConfig.BOOLEAN(0);\n\t};\n}\n\nclass ColoredMaterial extends Material {\n\tvertexColors!: boolean;\n\ttransparent!: boolean;\n\tdepthTest!: boolean;\n\talphaTest!: number;\n\tfog!: boolean;\n\tuniforms!: IUniforms;\n}\nclass ColorParamsConfig extends ColorParamConfig(NodeParamsConfig) {}\n\nclass ColoredMatNode extends TypedMatNode<ColoredMaterial, ColorParamsConfig> {\n\tcreate_material() {\n\t\treturn new ColoredMaterial();\n\t}\n}\n\nexport class ColorsController extends BaseController {\n\tstatic update(node: ColoredMatNode) {\n\t\tconst material = node.material;\n\t\tconst pv = node.pv;\n\n\t\tif (material.uniforms.opacity) {\n\t\t\tmaterial.uniforms.opacity.value = pv.opacity;\n\t\t}\n\t\tmaterial.transparent = pv.transparent || pv.opacity < 1;\n\t\tmaterial.depthTest = true;\n\t\tmaterial.alphaTest = pv.alpha_test;\n\t\tmaterial.fog = pv.use_fog;\n\t}\n}\n","import {TypedMatNode} from './_Base';\nimport {GlAssemblerController} from '../gl/code/Controller';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ShaderAssemblerMaterial} from '../gl/code/assemblers/materials/_BaseMaterial';\nimport {GlNodeChildrenMap} from '../../poly/registers/Gl';\nimport {BaseGlNodeType} from '../gl/_Base';\nimport {ShaderMaterialWithCustomMaterials} from '../../../core/geometry/Material';\nimport {NodeContext} from '../../poly/NodeContext';\n\nexport abstract class TypedBuilderMatNode<\n\tA extends ShaderAssemblerMaterial,\n\tK extends NodeParamsConfig\n> extends TypedMatNode<ShaderMaterialWithCustomMaterials, K> {\n\tprotected _assembler_controller: GlAssemblerController<A> | undefined;\n\tprotected _children_controller_context = NodeContext.GL;\n\tinitialize_base_node() {\n\t\tsuper.initialize_base_node();\n\n\t\tthis.lifecycle.add_on_create_hook(this.assembler_controller.on_create.bind(this.assembler_controller));\n\t\tthis.children_controller?.init();\n\t}\n\n\t//\n\t//\n\t// MATERIAL\n\t//\n\t//\n\tcreate_material() {\n\t\treturn this.assembler_controller.assembler.create_material() as ShaderMaterialWithCustomMaterials;\n\t}\n\t//\n\t//\n\t// ASSEMBLER\n\t//\n\t//\n\tget assembler_controller() {\n\t\treturn (this._assembler_controller = this._assembler_controller || this._create_assembler_controller());\n\t}\n\tprotected abstract _create_assembler_controller(): GlAssemblerController<A>;\n\n\tcreate_node<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as GlNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseGlNodeType[];\n\t}\n\tnodes_by_type<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as GlNodeChildrenMap[K][];\n\t}\n\n\t//\n\t//\n\t// COMPILATION\n\t//\n\t//\n\tasync compile_if_required() {\n\t\tif (this.assembler_controller.compile_required()) {\n\t\t\tthis._compile();\n\t\t}\n\t}\n\tprotected async _compile() {\n\t\tif (this.material) {\n\t\t\tawait this.assembler_controller.assembler.compile_material(this.material);\n\t\t\tawait this.assembler_controller.post_compile();\n\t\t}\n\t}\n}\n\nexport type BaseBuilderMatNodeType = TypedBuilderMatNode<ShaderAssemblerMaterial, NodeParamsConfig>;\n","import {TypedLightObjNode} from './_BaseLight';\nimport {Light} from 'three/src/lights/Light';\n// import {CoreTransform} from '../../../core/Transform';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {TransformController, TransformedParamConfig} from './utils/TransformController';\nimport {FlagsControllerD} from '../utils/FlagsController';\n\n// import {Transformed} from './Concerns/Transformed';\nclass TransformedObjParamConfig extends TransformedParamConfig(NodeParamsConfig) {}\n\nexport abstract class BaseLightTransformedObjNode<\n\tL extends Light,\n\tK extends TransformedObjParamConfig\n> extends TypedLightObjNode<L, K> {\n\tpublic readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\treadonly transform_controller: TransformController = new TransformController(this);\n\n\tinitialize_base_node() {\n\t\tsuper.initialize_base_node();\n\t\tthis.transform_controller.initialize_node();\n\t}\n\n\tcook() {\n\t\tthis.transform_controller.update();\n\t\tthis.update_light_params();\n\t\tthis.update_shadow_params();\n\t\tthis.cook_controller.end_cook();\n\t}\n}\n","import {Mesh} from 'three/src/objects/Mesh';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\n\nimport {NodeParamsConfig, ParamConfig} from '../../../utils/params/ParamsConfig';\nimport {TypedObjNode} from '../../_Base';\nimport {Group} from 'three/src/objects/Group';\nimport {Light} from 'three/src/lights/Light';\nimport {FlagsControllerD} from '../../../utils/FlagsController';\nexport function BaseLightHelperParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tshow_helper = ParamConfig.BOOLEAN(1);\n\t\thelper_size = ParamConfig.FLOAT(1, {visible_if: {show_helper: 1}});\n\t};\n}\nclass BaseLightHelperParamsConfig extends BaseLightHelperParamConfig(NodeParamsConfig) {}\nexport abstract class BaseLightHelperObjNode<L extends Light> extends TypedObjNode<Group, BaseLightHelperParamsConfig> {\n\tpublic readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\n\t// public readonly helper: BaseLightHelper<L> | undefined;\n\tabstract get light(): L;\n}\n\nexport abstract class BaseLightHelper<L extends Light, N extends BaseLightHelperObjNode<L>> {\n\tprotected _object = new Mesh();\n\tprotected _material = new MeshBasicMaterial({wireframe: true, fog: false});\n\tconstructor(protected node: N, private _name: string) {}\n\n\tbuild() {\n\t\tthis._object.name = this._name;\n\t\tthis.build_helper();\n\t}\n\tprotected abstract build_helper(): void;\n\tget object() {\n\t\treturn this._object;\n\t}\n\n\tabstract update(): void;\n}\n","import {Light} from 'three/src/lights/Light';\nimport {BaseLightHelper, BaseLightHelperObjNode} from './helpers/_BaseLightHelper';\n\n// interface Helper<L extends Light> extends BaseLightHelper<L> {\n// \tdispose: () => void;\n// \tupdate: () => void;\n// }\nexport interface HelperConstructor<L extends Light> {\n\tnew (node: BaseLightHelperObjNode<L>, name: string): BaseLightHelper<L, BaseLightHelperObjNode<L>>;\n}\n\nexport class HelperController<L extends Light> {\n\tprivate _helper: BaseLightHelper<L, BaseLightHelperObjNode<L>> | undefined;\n\tconstructor(\n\t\tprivate node: BaseLightHelperObjNode<L>,\n\t\tprivate _helper_constructor: HelperConstructor<L>,\n\t\tprivate _name: string\n\t) {}\n\n\tinitialize_node() {\n\t\tthis.node.flags.display.add_hook(() => {\n\t\t\tthis.update_helper_attachment();\n\t\t});\n\t}\n\n\tprivate update_helper_attachment() {\n\t\tif (this.node.flags.display.active) {\n\t\t\tconst object = this.helper?.object; // use this.helper to create if needed\n\t\t\tif (object) {\n\t\t\t\tthis.node.object.add(object);\n\t\t\t\tthis._helper?.update();\n\t\t\t}\n\t\t} else {\n\t\t\tconst object = this._helper?.object; // use this._helper to NOT create if not already existing\n\t\t\tif (object) {\n\t\t\t\tthis.node.object.remove(object);\n\t\t\t}\n\t\t}\n\t}\n\tget helper() {\n\t\tif (this.node.flags.display.active) {\n\t\t\treturn (this._helper = this._helper || this._create_helper());\n\t\t}\n\t}\n\tget visible() {\n\t\treturn this.node.flags.display.active && this.node.pv.show_helper;\n\t}\n\n\tprivate _create_helper(): BaseLightHelper<L, BaseLightHelperObjNode<L>> {\n\t\tconst helper = new this._helper_constructor(this.node, this._name);\n\t\thelper.build();\n\t\tthis.node.light.add(helper.object);\n\t\treturn helper;\n\t}\n\n\tupdate() {\n\t\tif (this.visible) {\n\t\t\tif (!this._helper) {\n\t\t\t\tthis._helper = this._create_helper();\n\t\t\t}\n\t\t\tif (this._helper) {\n\t\t\t\tthis._helper.object.visible = true;\n\t\t\t\tthis._helper.update();\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._helper) {\n\t\t\t\tthis._helper.object.visible = false;\n\t\t\t}\n\t\t}\n\t}\n}\n","import {TypedObjNode} from './_Base';\nimport {Group} from 'three/src/objects/Group';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nclass BaseManagerObjParamsConfig extends NodeParamsConfig {}\nexport class BaseManagerObjNode extends TypedObjNode<Group, BaseManagerObjParamsConfig> {\n\t// public readonly add_to_hierarchy: boolean = false;\n\tprotected _attachable_to_hierarchy: boolean = false;\n\t// _init_manager(options = {}) {\n\t// \t// this._init_hierarchy_children_owner(options['children'] || {});\n\t// \t// this.flags.add_display({\n\t// \t// \thas_display_flag: false,\n\t// \t// \tmultiple_display_flags_allowed: true,\n\t// \t// });\n\t// \t// this.set_inputs_count_to_zero();\n\t// \t// this._init_outputs({has_outputs: false});\n\t// }\n\n\tcreate_object() {\n\t\treturn new Group();\n\t}\n\n\tcook() {\n\t\tthis.cook_controller.end_cook();\n\t}\n}\n","import {BaseObjNodeType} from '../_Base';\n// import {ParamType} from '../../../poly/ParamType';\n\nconst PARAM_NAME = 'layer';\n\nimport {ParamConfig} from '../../utils/params/ParamsConfig';\nexport function LayerParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tlayer = ParamConfig.INTEGER(0, {\n\t\t\trange: [0, 31],\n\t\t\trange_locked: [true, true],\n\t\t});\n\t};\n}\n\nexport class LayersController {\n\tconstructor(private node: BaseObjNodeType) {}\n\n\t// add_params() {\n\t// \tthis.node.add_param(ParamType.INTEGER, PARAM_NAME, 0, {\n\t// \t\trange: [0, 31],\n\t// \t\trange_locked: [true, true],\n\t// \t});\n\t// }\n\n\tupdate() {\n\t\tconst object = this.node.object;\n\t\t// const affected_objects = [object];\n\t\t// if (object.cloned_cameras != null) {\n\t\t// \tlodash_each(object.cloned_cameras, cloned_camera=> {\n\t\t// \t\taffected_objects.push(cloned_camera);\n\t\t// \t});\n\t\t// }\n\n\t\t// affected_objects.forEach((affected_object)=> {\n\t\tobject.layers.set(0);\n\t\tobject.layers.enable(this.node.params.integer(PARAM_NAME));\n\t\t// });\n\t}\n}\n","import {WebGLRenderer} from 'three/src/renderers/WebGLRenderer';\n// import {WebGLRenderTarget} from 'three/src/renderers/WebGLRenderTarget';\nimport {ACESFilmicToneMapping, sRGBEncoding} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\n\nimport lodash_range from 'lodash/range';\n// import {BaseParam} from '../../../../params/_Base';\nimport {BooleanParam} from '../../../../params/Boolean';\nimport {OperatorPathParam} from '../../../../params/OperatorPath';\nimport {BasePostProcessNodeType} from '../../../post/_Base';\nimport {BaseCameraObjNodeType} from '../../_BaseCamera';\nimport {EffectComposer} from '../../../../../../modules/three/examples/jsm/postprocessing/EffectComposer';\nimport {RenderPass} from '../../../../../../modules/three/examples/jsm/postprocessing/RenderPass';\nimport {Pass} from '../../../../../../modules/three/examples/jsm/postprocessing/Pass';\nimport {NodeContext} from '../../../../poly/NodeContext';\nimport {Poly} from '../../../../Poly';\n\ninterface DisposablePass extends Pass {\n\tdispose: () => void;\n}\n\nfunction boolean_param_options(index: number) {\n\treturn {\n\t\tvisible_if: {\n\t\t\tdo_post_process: 1,\n\t\t},\n\t};\n}\nfunction operator_path_param_options(index: number) {\n\treturn {\n\t\tnode_selection: {context: NodeContext.POST},\n\t\tvisible_if: {\n\t\t\tdo_post_process: 1,\n\t\t\t[`use_post_process_node${index}`]: 1,\n\t\t},\n\t};\n}\n\nimport {ParamConfig} from '../../../utils/params/ParamsConfig';\nexport function CameraPostProcessParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tpost_process = ParamConfig.FOLDER();\n\n\t\tdo_post_process = ParamConfig.BOOLEAN(0);\n\t\tuse_post_process_node0 = ParamConfig.BOOLEAN(0, boolean_param_options(0));\n\t\tpost_process_node0 = ParamConfig.OPERATOR_PATH('', operator_path_param_options(0));\n\t\tuse_post_process_node1 = ParamConfig.BOOLEAN(0, boolean_param_options(1));\n\t\tpost_process_node1 = ParamConfig.OPERATOR_PATH('', operator_path_param_options(1));\n\t\tuse_post_process_node2 = ParamConfig.BOOLEAN(0, boolean_param_options(2));\n\t\tpost_process_node2 = ParamConfig.OPERATOR_PATH('', operator_path_param_options(2));\n\t\tuse_post_process_node3 = ParamConfig.BOOLEAN(0, boolean_param_options(3));\n\t\tpost_process_node3 = ParamConfig.OPERATOR_PATH('', operator_path_param_options(3));\n\t};\n}\n\nexport class PostProcessController {\n\t// private _param_do_post_process: boolean;\n\t// private _param_do_sao: boolean;\n\tprivate _renderers_by_canvas_id: Dictionary<WebGLRenderer> = {};\n\tprivate _composers_by_canvas_id: Dictionary<EffectComposer> = {};\n\tprivate _resolution_by_canvas_id: Dictionary<Vector2> = {};\n\tprivate _composers_set_in_progress_by_canvas_id: Dictionary<boolean> = {};\n\tprivate _fetch_post_process_nodes_in_progress: boolean = false;\n\t// private _render_passes: any[] = []\n\tprivate _post_process_nodes: BasePostProcessNodeType[] = [];\n\n\tprivate _post_process_use_node_path_params: BooleanParam[] = [];\n\tprivate _post_process_node_path_params: OperatorPathParam[] = [];\n\n\tconstructor(private node: BaseCameraObjNodeType) {}\n\n\t// private _prev_t = 0;\n\trender(canvas: HTMLCanvasElement, size: Vector2, aspect: number) {\n\t\tconst renderer = this.renderer(canvas);\n\t\tif (renderer) {\n\t\t\tif (this.node.pv.do_post_process) {\n\t\t\t\tconst composer = this.composer(canvas);\n\t\t\t\tif (composer) {\n\t\t\t\t\tcomposer.setSize(size.x, size.y);\n\t\t\t\t\tcomposer.render();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.node.setup_for_aspect_ratio(aspect);\n\t\t\t\t// const cur_t = performance.now();\n\t\t\t\t// const delta = cur_t - this._prev_t;\n\t\t\t\t// this._prev_t = cur_t;\n\t\t\t\t// console.log(cur_t, delta);\n\t\t\t\trenderer.render(this.node.scene.default_scene, this.node.object);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderer(canvas: HTMLCanvasElement) {\n\t\treturn this._renderers_by_canvas_id[canvas.id];\n\t}\n\n\tcreate_renderer(canvas: HTMLCanvasElement, size: Vector2): WebGLRenderer {\n\t\tconst gl = Poly.instance().renderers_controller.rendering_context(canvas);\n\n\t\tconst renderer = new WebGLRenderer({\n\t\t\tcanvas: canvas,\n\t\t\tantialias: true,\n\t\t\talpha: true,\n\t\t\tcontext: gl,\n\t\t});\n\n\t\trenderer.shadowMap.enabled = true;\n\t\trenderer.physicallyCorrectLights = true; // https://discourse.threejs.org/t/three-js-white-is-too-bright/11873/3\n\n\t\t// TODO: find a way to have those accessible via params\n\t\trenderer.toneMapping = ACESFilmicToneMapping;\n\t\trenderer.toneMappingExposure = 1;\n\t\trenderer.outputEncoding = sRGBEncoding;\n\n\t\t// https://github.com/mrdoob/js/issues/15493\n\t\t// This below is an attempt to fix env map not being loaded in firefox, but that doesn't work.\n\t\t// Since the threejs example (https://threejs.org/examples/?q=exr#webgl_materials_envmaps_exr) also only works in chrome, not in firefox, I assume this is a firefox+linux bug\n\t\t// console.log(renderer.extensions)\n\t\t// renderer.extensions.get( 'EXT_color_buffer_float' );\n\n\t\t// attempt to have particle systems work in firefox on mobile\n\t\t// (current solution is to have the node SOP/particlesSystemGPU force webgl2 to be used)\n\t\t// renderer.extensions.get( 'WEBGL_color_buffer_float' );\n\t\t// renderer.extensions.get( 'WEBGL_draw_buffers' );\n\n\t\tPoly.instance().renderers_controller.register_renderer(renderer);\n\t\tthis._renderers_by_canvas_id[canvas.id] = renderer;\n\t\tthis.set_renderer_size(canvas, size);\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\n\n\t\treturn renderer;\n\t}\n\tdelete_renderer(canvas: HTMLCanvasElement) {\n\t\tconst renderer = this.renderer(canvas);\n\t\tif (renderer) {\n\t\t\tPoly.instance().renderers_controller.deregister_renderer(renderer);\n\t\t}\n\t}\n\tset_renderer_size(canvas: HTMLCanvasElement, size: Vector2) {\n\t\tthis._resolution_by_canvas_id[canvas.id] = this._resolution_by_canvas_id[canvas.id] || new Vector2();\n\t\tthis._resolution_by_canvas_id[canvas.id].copy(size);\n\n\t\tconst renderer = this.renderer(canvas);\n\t\tif (renderer) {\n\t\t\trenderer.setSize(size.x, size.y);\n\t\t}\n\t\tconst composer = this.composer(canvas);\n\t\tif (composer) {\n\t\t\tcomposer.setSize(size.x, size.y);\n\t\t}\n\t}\n\n\tprivate composer(canvas: HTMLCanvasElement): EffectComposer {\n\t\treturn (this._composers_by_canvas_id[canvas.id] =\n\t\t\tthis._composers_by_canvas_id[canvas.id] || this._create_composer(canvas));\n\t}\n\n\tprivate _create_composer(canvas: HTMLCanvasElement) {\n\t\tconst renderer = this.renderer(canvas);\n\t\tif (renderer) {\n\t\t\t// const parameters = {\n\t\t\t// \tminFilter: LinearFilter,\n\t\t\t// \tmagFilter: LinearFilter,\n\t\t\t// \tformat: RGBAFormat,\n\t\t\t// \tstencilBuffer: true\n\t\t\t// }\n\t\t\t// const renderTarget = new WebGLRenderTarget( window.innerWidth, window.innerHeight, parameters );\n\t\t\tconst composer = new EffectComposer(renderer); //, renderTarget );\n\t\t\t// to achieve better antialiasing\n\t\t\t// while using post:\n\t\t\t// composer.setPixelRatio( window.devicePixelRatio*2 )\n\t\t\tcomposer.setPixelRatio(window.devicePixelRatio * 2);\n\t\t\tthis.set_composer_passes(canvas.id, composer, renderer);\n\n\t\t\treturn composer;\n\t\t} /*else {\n\t\t\tconsole.warn(this._renderers_by_canvas_id)\n\t\t\tthrow \"failed to create composer, no renderer ready\"\n\t\t}*/\n\t}\n\n\tasync update_composer_passes() {\n\t\tif (this.node.pv.do_post_process) {\n\t\t\tthis._post_process_nodes = [];\n\t\t\tif (this._fetch_post_process_nodes_in_progress) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._fetch_post_process_nodes_in_progress = true;\n\n\t\t\tif (this.composer_passes_nodes_changed()) {\n\t\t\t\tthis._post_process_nodes = [];\n\n\t\t\t\tfor (let i of lodash_range(4)) {\n\t\t\t\t\tconst toggle_param = this._post_process_use_node_path_params[i];\n\t\t\t\t\t// const use_node = await toggle_param.eval_p()\n\t\t\t\t\tconst use_node = toggle_param.value;\n\t\t\t\t\tif (use_node) {\n\t\t\t\t\t\tconst param = this._post_process_node_path_params[i];\n\t\t\t\t\t\tconst post_process_node = param.found_node() as BasePostProcessNodeType;\n\t\t\t\t\t\tif (post_process_node) {\n\t\t\t\t\t\t\tawait post_process_node.request_container();\n\t\t\t\t\t\t\t// const render_pass = container.render_pass()\n\t\t\t\t\t\t\t// this._render_passes.push(render_pass)\n\t\t\t\t\t\t\tthis._post_process_nodes.push(post_process_node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set_composers_passes();\n\t\t\t\t// this._previous_post_process_nodes_paths = this.composer_passes_nodes_paths()\n\t\t\t}\n\t\t\tthis._fetch_post_process_nodes_in_progress = false;\n\t\t} else {\n\t\t\tthis._post_process_nodes = [];\n\t\t}\n\t}\n\n\tprivate set_composers_passes() {\n\t\tconst ids = Object.keys(this._composers_by_canvas_id);\n\n\t\tfor (let id of ids) {\n\t\t\tconst composer = this._composers_by_canvas_id[id];\n\t\t\tconst renderer = this._renderers_by_canvas_id[id];\n\t\t\tif (composer) {\n\t\t\t\tthis.set_composer_passes(id, composer, renderer);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate set_composer_passes(id: string, composer: EffectComposer, renderer: WebGLRenderer) {\n\t\tconst set_in_progress = this._composers_set_in_progress_by_canvas_id[id];\n\t\tif (set_in_progress) {\n\t\t\treturn;\n\t\t}\n\t\tthis._composers_set_in_progress_by_canvas_id[id] = true;\n\n\t\tthis.clear_render_passes(composer);\n\n\t\tconst render_scene_pass = new RenderPass(this.node.scene.default_scene, this.node.object);\n\t\trender_scene_pass.clearAlpha = 0;\n\t\tcomposer.addPass(render_scene_pass);\n\n\t\tfor (let post_process_node of this._post_process_nodes) {\n\t\t\tpost_process_node.apply_to_composer(\n\t\t\t\tcomposer,\n\t\t\t\tthis.node.object,\n\t\t\t\tthis._resolution_by_canvas_id[id],\n\t\t\t\tthis.node\n\t\t\t);\n\t\t}\n\t\tdelete this._composers_set_in_progress_by_canvas_id[id];\n\t}\n\n\tprivate clear_render_passes(composer: EffectComposer) {\n\t\tlet render_pass: Pass | undefined;\n\t\twhile ((render_pass = composer.passes.pop())) {\n\t\t\tif (render_pass) {\n\t\t\t\tconst disposable_pass: DisposablePass = render_pass as DisposablePass;\n\t\t\t\tif (typeof disposable_pass.dispose === 'function') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdisposable_pass.dispose();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// this._render_passes = []\n\t\tcomposer.passes = [];\n\t}\n\n\tprivate composer_passes_nodes_changed(): boolean {\n\t\treturn true;\n\t\t// I have to evaluate the nodes anyway, in case they changed\n\t\t// unless I can create a method that can store if one of those nodes are the ones that\n\t\t// made this current node dirty\n\t}\n\n\t// add_params() {\n\t// \t// this.node.within_param_folder('post_process', () => {\n\t// \tthis.node.add_param(ParamType.BOOLEAN, 'do_post_process', 0);\n\n\t// \tlodash_range(4).forEach((i) => {\n\t// \t\tconst toggle_param = this.node.add_param(ParamType.BOOLEAN, `use_post_process_node${i + 1}`, 0, {\n\t// \t\t\tvisible_if: {do_post_process: 1},\n\t// \t\t});\n\n\t// \t\tif (toggle_param) {\n\t// \t\t\tconst visible_options = {\n\t// \t\t\t\tdo_post_process: 1,\n\t// \t\t\t\t[toggle_param.name]: 1,\n\t// \t\t\t};\n\t// \t\t\tconst node_path_options = {\n\t// \t\t\t\tnode_selection: {context: NodeContext.POST},\n\t// \t\t\t\tvisible_if: visible_options,\n\t// \t\t\t};\n\t// \t\t\tconst param = this.node.add_param(\n\t// \t\t\t\tParamType.OPERATOR_PATH,\n\t// \t\t\t\t`post_process_node${i + 1}`,\n\t// \t\t\t\t'',\n\t// \t\t\t\tnode_path_options\n\t// \t\t\t);\n\t// \t\t\tif (param) {\n\t// \t\t\t\tthis._post_process_use_node_path_params.push(toggle_param);\n\t// \t\t\t\tthis._post_process_node_path_params.push(param);\n\t// \t\t\t}\n\t// \t\t}\n\t// \t});\n\t// \t// });\n\t// }\n}\n","import {BaseNodeType} from '../_Base';\nimport lodash_isNaN from 'lodash/isNaN';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {NodeEvent} from '../../poly/NodeEvent';\n\ntype Callback = () => void;\n\nexport class NameController {\n\tprivate _graph_node: CoreGraphNode;\n\tprivate _on_set_name_hooks: Callback[] | undefined;\n\tprivate _on_set_full_path_hooks: Callback[] | undefined;\n\n\tconstructor(protected node: BaseNodeType) {\n\t\tthis._graph_node = new CoreGraphNode(node.scene, 'node_name_controller');\n\t\t// this._graph_node.set_scene(this.node.scene);\n\t}\n\tget graph_node() {\n\t\treturn this._graph_node;\n\t}\n\n\tstatic base_name(node: BaseNodeType) {\n\t\tlet base = node.type; //CoreString.class_name_to_type(this.self.type())\n\t\tconst last_char = base[base.length - 1];\n\t\tif (!lodash_isNaN(parseInt(last_char))) {\n\t\t\tbase += '_';\n\t\t}\n\t\treturn `${base}1`;\n\t}\n\n\trequest_name_to_parent(new_name: string) {\n\t\tconst parent = this.node.parent;\n\t\tif (parent && parent.children_allowed() && parent.children_controller) {\n\t\t\tparent.children_controller.set_child_name(this.node, new_name);\n\t\t} else {\n\t\t\tconsole.warn('request_name_to_parent failed, no parent found');\n\t\t}\n\t}\n\tset_name(new_name: string) {\n\t\tif (new_name != this.node.name) {\n\t\t\tthis.request_name_to_parent(new_name);\n\t\t}\n\t}\n\tupdate_name_from_parent(new_name: string) {\n\t\tthis.node._set_core_name(new_name);\n\t\tthis.post_set_name();\n\t\tthis.post_set_full_path();\n\t\tif (this.node.children_allowed()) {\n\t\t\tthis.node.children_controller?.children().forEach((child_node) => {\n\t\t\t\tchild_node.name_controller.post_set_full_path(); // TODO: typescript: replace post_set_full_path with execute_on_update_full_path_hooks or on_update_full_path\n\t\t\t});\n\t\t}\n\n\t\tif (this.node.lifecycle.creation_completed) {\n\t\t\tthis.node.scene.missing_expression_references_controller.check_for_missing_references(this.node);\n\t\t\tthis.node.scene.expressions_controller.regenerate_referring_expressions(this.node);\n\t\t}\n\t\tthis.node.emit(NodeEvent.NAME_UPDATED);\n\t}\n\n\tadd_post_set_name_hook(hook: Callback) {\n\t\tthis._on_set_name_hooks = this._on_set_name_hooks || [];\n\t\tthis._on_set_name_hooks.push(hook);\n\t}\n\tadd_post_set_full_path_hook(hook: Callback) {\n\t\tthis._on_set_full_path_hooks = this._on_set_full_path_hooks || [];\n\t\tthis._on_set_full_path_hooks.push(hook);\n\t}\n\n\tpost_set_name() {\n\t\tif (this._on_set_name_hooks) {\n\t\t\tfor (let hook of this._on_set_name_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n\tpost_set_full_path() {\n\t\tif (this._on_set_full_path_hooks) {\n\t\t\tfor (let hook of this._on_set_full_path_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseParamType} from '../_Base';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport lodash_compact from 'lodash/compact';\nimport lodash_cloneDeep from 'lodash/cloneDeep';\nimport lodash_isEqual from 'lodash/isEqual';\nimport {ParamType} from '../../poly/ParamType';\nimport {ParamEvent} from '../../poly/ParamEvent';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n\nconst ALWAYS_REFERENCE_ASSET_OPTION = 'always_reference_asset';\nconst CALLBACK_OPTION = 'callback';\nconst CALLBACK_STRING_OPTION = 'callback_string';\n// const COLOR_OPTION = 'color';\nconst COOK_OPTION = 'cook';\nconst DESKTOP_BROWSE_OPTION = 'desktop_browse';\nconst FILE_TYPE_OPTION = 'file_type';\n// const EXPRESSION_ONLY_OPTION = 'expression_only';\nconst EXPRESSION = 'expression';\nconst FOR_ENTITIES = 'for_entities';\nconst LEVEL = 'level';\nconst MENU = 'menu';\nconst ENTRIES = 'entries';\n// const TYPE = 'type';\n// const RADIO = 'radio';\nconst MULTILINE_OPTION = 'multiline';\nconst LANGUAGE_OPTION = 'language';\nconst NODE_SELECTION = 'node_selection';\nconst NODE_SELECTION_CONTEXT = 'context';\nconst DEPENDENT_ON_FOUND_NODE = 'dependent_on_found_node';\nconst RANGE_OPTION = 'range';\nconst RANGE_LOCKED_OPTION = 'range_locked';\nconst STEP_OPTION = 'step';\nconst SPARE_OPTION = 'spare';\nconst TEXTURE_OPTION = 'texture';\nconst ENV_OPTION = 'env';\nconst HIDDEN_OPTION = 'hidden';\nconst LABEL_OPTION = 'label';\nconst FIELD_OPTION = 'field';\nconst VISIBLE_IF_OPTION = 'visible_if';\n\nexport interface ParamOptionsMenuEntry {\n\tname: string;\n\tvalue: number;\n}\nexport enum StringParamLanguage {\n\t// JAVASCRIPT = 'javascript',\n\tTYPESCRIPT = 'typescript',\n\t// GLSL = 'glsl',\n}\n\ninterface BaseParamOptions {\n\t// cook\n\tcook?: boolean;\n\t// spare\n\tspare?: boolean;\n\t// visible\n\thidden?: boolean;\n\tlabel?: boolean;\n\tfield?: boolean;\n\tvisible_if?: Dictionary<number | boolean>;\n}\ninterface MenuParamOptions {\n\tmenu?: {\n\t\t// type: 'radio';\n\t\tentries: ParamOptionsMenuEntry[];\n\t};\n}\ninterface ExpressionParamOptions {\n\texpression?: {\n\t\tfor_entities?: boolean;\n\t};\n}\n\ninterface NumberParamOptions extends BaseParamOptions {\n\trange?: Number2;\n\trange_locked?: Boolean2;\n\tstep?: number;\n}\ninterface AssetParamOptions {\n\talways_reference_asset?: boolean;\n}\ninterface DesktopParamOptions {\n\tdesktop_browse?: Dictionary<string>;\n}\ninterface CallbackParamOptions {\n\tcallback?: (node: BaseNodeType, param: BaseParamType) => any;\n\tcallback_string?: string;\n}\n\n// actual param options\nexport interface BooleanParamOptions\n\textends BaseParamOptions,\n\t\tMenuParamOptions,\n\t\tExpressionParamOptions,\n\t\tCallbackParamOptions {}\nexport interface ButtonParamOptions extends BaseParamOptions, CallbackParamOptions {}\nexport interface ColorParamOptions extends BaseParamOptions, ExpressionParamOptions {}\nexport interface FloatParamOptions\n\textends NumberParamOptions,\n\t\tMenuParamOptions,\n\t\tExpressionParamOptions,\n\t\tCallbackParamOptions {}\nexport interface FolderParamOptions extends BaseParamOptions {\n\tlevel?: number;\n}\nexport interface IntegerParamOptions extends NumberParamOptions, MenuParamOptions, CallbackParamOptions {}\nexport interface OperatorPathParamOptions extends BaseParamOptions, DesktopParamOptions, CallbackParamOptions {\n\tnode_selection?: {\n\t\tcontext?: NodeContext;\n\t};\n\tdependent_on_found_node?: boolean;\n}\nexport interface RampParamOptions extends BaseParamOptions {}\nexport interface SeparatorParamOptions extends BaseParamOptions {}\nexport interface StringParamOptions\n\textends BaseParamOptions,\n\t\tAssetParamOptions,\n\t\tDesktopParamOptions,\n\t\tExpressionParamOptions {\n\tmultiline?: boolean;\n\tlanguage?: StringParamLanguage;\n}\nexport interface Vector2ParamOptions extends BaseParamOptions, ExpressionParamOptions {}\nexport interface Vector3ParamOptions extends BaseParamOptions, ExpressionParamOptions {}\nexport interface Vector4ParamOptions extends BaseParamOptions, ExpressionParamOptions {}\n\nexport interface ParamOptions\n\textends NumberParamOptions,\n\t\tFolderParamOptions,\n\t\tExpressionParamOptions,\n\t\tButtonParamOptions,\n\t\tDesktopParamOptions,\n\t\tMenuParamOptions,\n\t\tStringParamOptions,\n\t\tOperatorPathParamOptions {\n\t// asset refererences\n\t// always_reference_asset?: boolean;\n\t// callback\n\t// callback?: (node: BaseNodeType, param: BaseParamType) => any;\n\t// callback_string?: string;\n\t// color\n\t// color?: [number, number, number] | string;\n\t// cook\n\t// cook?: boolean;\n\t// desktop\n\t// desktop_browse?: Dictionary<string>;\n\t// expression\n\t// expression_only?: boolean;\n\t// expression?: {\n\t// \tfor_entities?: boolean;\n\t// };\n\t// folder\n\t// level?:number\n\t// menu\n\t// menu?: {\n\t// \t// type: 'radio';\n\t// \tentries: ParamOptionsMenuEntry[];\n\t// };\n\t// multiline\n\t// multiline?: boolean;\n\t// node selection\n\t// node_selection?: {\n\t// \tcontext?: NodeContext;\n\t// };\n\t// dependent_on_found_node?: boolean;\n\t// spare\n\t// spare?: boolean;\n\t// texture\n\ttexture?: {\n\t\tenv?: boolean;\n\t};\n\t// visible\n\t// hidden?: boolean;\n\t// label?: boolean;\n\t// field?: boolean;\n\t// visible_if?: Dictionary<number | boolean>;\n}\n\nexport class OptionsController {\n\tprivate _programatic_visible_state: boolean = true;\n\tprivate _options!: ParamOptions;\n\tprivate _default_options!: ParamOptions;\n\tconstructor(private _param: BaseParamType) {\n\t\t// this._options = lodash_cloneDeep(this._default_options);\n\t}\n\n\tset(options: ParamOptions) {\n\t\tthis._default_options = options;\n\t\tthis._options = lodash_cloneDeep(this._default_options);\n\t}\n\tcopy(options_controller: OptionsController) {\n\t\tthis._default_options = lodash_cloneDeep(options_controller.default);\n\t\tthis._options = lodash_cloneDeep(options_controller.current);\n\t}\n\tset_option(name: keyof ParamOptions, value: any) {\n\t\treturn Object.assign(this._options, name, value);\n\t}\n\tget param() {\n\t\treturn this._param;\n\t}\n\tget node(): BaseNodeType {\n\t\treturn this._param.node;\n\t}\n\tget default() {\n\t\treturn this._default_options;\n\t}\n\tget current() {\n\t\treturn this._options;\n\t}\n\n\t// utils\n\tget has_options_overridden(): boolean {\n\t\treturn !lodash_isEqual(this._options, this._default_options);\n\t}\n\tget overridden_options(): ParamOptions {\n\t\tconst overriden: ParamOptions = {};\n\t\tconst option_names = Object.keys(this._options) as Array<keyof ParamOptions>;\n\t\tfor (let option_name of option_names) {\n\t\t\tif (!lodash_isEqual(this._options[option_name], this._default_options[option_name])) {\n\t\t\t\tObject.assign(overriden, option_name, lodash_cloneDeep(this._options[option_name]));\n\t\t\t}\n\t\t}\n\t\treturn overriden;\n\t}\n\tget overridden_option_names(): Array<keyof ParamOptions> {\n\t\treturn Object.keys(this.overridden_options) as Array<keyof ParamOptions>;\n\t}\n\n\t// referenced assets\n\tget always_reference_asset(): boolean {\n\t\treturn this._options[ALWAYS_REFERENCE_ASSET_OPTION] || false;\n\t}\n\n\t// callback\n\thas_callback() {\n\t\treturn this._options[CALLBACK_OPTION] != null || this._options[CALLBACK_STRING_OPTION] != null;\n\t}\n\n\texecute_callback() {\n\t\t// we only allow execution when scene is loaded\n\t\t// to avoid errors such as an operator_path param\n\t\t// executing its callback before the node it points to is created\n\t\tif (!(this.node && this.node.scene.loading_controller.loaded)) {\n\t\t\treturn;\n\t\t}\n\t\tconst callback = this.get_callback();\n\t\tif (callback != null) {\n\t\t\tif (this.node && !this.node.cook_controller.is_cooking) {\n\t\t\t\tcallback(this.node, this.param);\n\t\t\t}\n\t\t}\n\t}\n\tprivate get_callback() {\n\t\tif (this.has_callback()) {\n\t\t\treturn (this._options[CALLBACK_OPTION] =\n\t\t\t\tthis._options[CALLBACK_OPTION] || this.create_callback_from_string());\n\t\t}\n\t}\n\tprivate create_callback_from_string() {\n\t\tconst callback_string = this._options[CALLBACK_STRING_OPTION];\n\t\tif (callback_string) {\n\t\t\tconst callback_function = new Function('node', 'scene', 'window', 'location', callback_string);\n\t\t\treturn () => {\n\t\t\t\tcallback_function(this.node, this.node.scene, null, null);\n\t\t\t};\n\t\t}\n\t}\n\n\t// color\n\t// color() {\n\t// \treturn this._options[COLOR_OPTION];\n\t// }\n\n\t// cook\n\tmakes_node_dirty_when_dirty() {\n\t\tlet cook_options;\n\n\t\t// false as the dirty state will go through the parent param\n\t\tif (this.param.parent_param != null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet value = true;\n\t\tif ((cook_options = this._options[COOK_OPTION]) != null) {\n\t\t\tvalue = cook_options;\n\t\t}\n\t\treturn value;\n\t}\n\n\t// desktop\n\tget desktop_browse_option() {\n\t\treturn this._options[DESKTOP_BROWSE_OPTION];\n\t}\n\tget desktop_browse_allowed(): boolean {\n\t\treturn this.desktop_browse_option != null;\n\t}\n\tdesktop_browse_file_type(): string | null {\n\t\tif (this.desktop_browse_option) {\n\t\t\treturn this.desktop_browse_option[FILE_TYPE_OPTION];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// expression\n\t// get displays_expression_only() {\n\t// \treturn this._options[EXPRESSION_ONLY_OPTION] === true;\n\t// }\n\tget is_expression_for_entities(): boolean {\n\t\tconst expr_option = this._options[EXPRESSION];\n\t\tif (expr_option) {\n\t\t\treturn expr_option[FOR_ENTITIES] || false;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// folder\n\tget level() {\n\t\treturn this._options[LEVEL] || 0;\n\t}\n\n\t// menu\n\tget has_menu() {\n\t\treturn this.menu_options != null;\n\t}\n\n\tprivate get menu_options() {\n\t\treturn this._options[MENU];\n\t}\n\t// private get menu_type() {\n\t// \tif(this.menu_options){\n\t// \t\treturn this.menu_options[TYPE];\n\t// \t}\n\t// }\n\n\tget menu_entries() {\n\t\tif (this.menu_options) {\n\t\t\treturn this.menu_options[ENTRIES];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tget has_menu_radio() {\n\t\treturn this.has_menu; //&& this.menu_options[TYPE] === RADIO;\n\t}\n\n\t// multiline\n\tget is_multiline(): boolean {\n\t\treturn this._options[MULTILINE_OPTION] === true;\n\t}\n\tget language(): StringParamLanguage | undefined {\n\t\treturn this._options[LANGUAGE_OPTION];\n\t}\n\tget is_code(): boolean {\n\t\treturn this.language != null;\n\t}\n\n\t// node selection\n\tget node_selection_options() {\n\t\treturn this._options[NODE_SELECTION];\n\t}\n\tget node_selection_context() {\n\t\tif (this.node_selection_options) {\n\t\t\treturn this.node_selection_options[NODE_SELECTION_CONTEXT];\n\t\t}\n\t}\n\n\tdependent_on_found_node() {\n\t\tif (DEPENDENT_ON_FOUND_NODE in this._options) {\n\t\t\treturn this._options[DEPENDENT_ON_FOUND_NODE];\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// range\n\tget range(): Number2 {\n\t\t// cannot force range easily, as values are not necessarily from 0 to N\n\t\t// if(this.self.has_menu() && this.self.menu_entries()){\n\t\t// \treturn [0, this.self.menu_entries().length-1 ]\n\t\t// } else {\n\t\treturn this._options[RANGE_OPTION] || [0, 1];\n\t\t// }\n\t}\n\tget step(): number {\n\t\treturn this._options[STEP_OPTION] || 0.01;\n\t}\n\n\tprivate range_locked(): Boolean2 {\n\t\t// if(this.self.has_menu() && this.self.menu_entries()){\n\t\t// \treturn [true, true]\n\t\t// } else {\n\t\treturn this._options[RANGE_LOCKED_OPTION] || [false, false];\n\t\t// }\n\t}\n\n\tensure_in_range(value: number): number {\n\t\tconst range = this.range;\n\n\t\tif (value >= range[0] && value <= range[1]) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tif (value < range[0]) {\n\t\t\t\treturn this.range_locked()[0] === true ? range[0] : value;\n\t\t\t} else {\n\t\t\t\treturn this.range_locked()[1] === true ? range[1] : value;\n\t\t\t}\n\t\t}\n\t}\n\n\t// spare\n\tget is_spare(): boolean {\n\t\treturn this._options[SPARE_OPTION] || false;\n\t}\n\n\t// texture\n\tget texture_options() {\n\t\treturn this._options[TEXTURE_OPTION];\n\t}\n\ttexture_as_env(): boolean {\n\t\tconst texture_options = this.texture_options;\n\t\tif (texture_options != null) {\n\t\t\treturn texture_options[ENV_OPTION] === true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// visible\n\tget is_hidden(): boolean {\n\t\treturn this._options[HIDDEN_OPTION] === true || this._programatic_visible_state === false;\n\t}\n\tget is_visible(): boolean {\n\t\treturn !this.is_hidden;\n\t}\n\tset_visible_state(state: boolean) {\n\t\tthis._options[HIDDEN_OPTION] = !state;\n\t\tthis.param.emit(ParamEvent.VISIBLE_UPDATED);\n\t}\n\n\tget is_label_hidden(): boolean {\n\t\tconst type = this.param.type;\n\t\treturn (\n\t\t\tthis._options[LABEL_OPTION] === false ||\n\t\t\ttype === ParamType.BUTTON ||\n\t\t\ttype === ParamType.SEPARATOR ||\n\t\t\t(type === ParamType.BOOLEAN && this.is_field_hidden())\n\t\t);\n\t}\n\tis_field_hidden(): boolean {\n\t\treturn this._options[FIELD_OPTION] === false;\n\t}\n\n\t// programatic visibility\n\tui_data_depends_on_other_params(): boolean {\n\t\treturn VISIBLE_IF_OPTION in this._options;\n\t}\n\tvisibility_predecessors() {\n\t\tconst predecessor_names = Object.keys(this._options[VISIBLE_IF_OPTION] || {});\n\t\tconst node = this.param.node;\n\t\treturn lodash_compact(\n\t\t\tpredecessor_names.map((name) => {\n\t\t\t\tconst param = node.params.get(name);\n\t\t\t\tif (param) {\n\t\t\t\t\treturn param;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`param ${name} not found as visibility condition for ${this.param.name} in node ${this.param.node.type}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate _update_visibility_and_remove_dirty_bound = this.update_visibility_and_remove_dirty.bind(this);\n\tprivate _visibility_graph_node: CoreGraphNode | undefined;\n\tprivate _ui_data_dependency_set: boolean = false;\n\tset_ui_data_dependency() {\n\t\tif (this._ui_data_dependency_set) {\n\t\t\treturn;\n\t\t}\n\t\tthis._ui_data_dependency_set = true;\n\t\tconst predecessors = this.visibility_predecessors();\n\t\tif (predecessors.length > 0) {\n\t\t\tthis._visibility_graph_node = new CoreGraphNode(this.param.scene, 'param_visibility');\n\t\t\tfor (let predecessor of predecessors) {\n\t\t\t\tthis._visibility_graph_node.add_graph_input(predecessor);\n\t\t\t}\n\t\t\tthis._visibility_graph_node.add_post_dirty_hook(\n\t\t\t\t'_update_visibility_and_remove_dirty',\n\t\t\t\tthis._update_visibility_and_remove_dirty_bound\n\t\t\t);\n\t\t}\n\t}\n\tprivate update_visibility_and_remove_dirty() {\n\t\tthis.update_visibility();\n\t\tthis.param.remove_dirty_state();\n\t}\n\n\tasync update_visibility() {\n\t\tconst options = this._options[VISIBLE_IF_OPTION];\n\t\tif (options) {\n\t\t\tconst params = this.visibility_predecessors();\n\t\t\tconst promises = params.map((p) => p.compute());\n\t\t\tthis._programatic_visible_state = true;\n\t\t\tawait Promise.all(promises);\n\t\t\tfor (let param of params) {\n\t\t\t\tconst expected_val = options[param.name];\n\t\t\t\tconst val = param.value;\n\t\t\t\tif (expected_val != val) {\n\t\t\t\t\tthis._programatic_visible_state = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.param.emit(ParamEvent.VISIBLE_UPDATED);\n\t\t}\n\t}\n}\n","import {BaseParamType} from '../../params/_Base';\nimport lodash_isString from 'lodash/isString';\n// import {ParsedTree} from './ParsedTree'\n// import {LiteralConstructsController} from './LiteralConstructsController'\nimport jsep from 'jsep';\n// import {BaseMethod} from '../../../Engine/Expression/Method/_Base'\n// import {MissingReferencesController} from './MissingReferencesController'\nexport const VARIABLE_PREFIX = '$';\n\nexport abstract class BaseTraverser {\n\t// private _parsed_tree: ParsedTree\n\tpublic _error_message: string | undefined;\n\n\tconstructor(public param: BaseParamType) {}\n\n\tprotected clear_error() {\n\t\tthis._error_message = undefined;\n\t}\n\tprotected set_error(message: string) {\n\t\tthis._error_message = this._error_message || message;\n\t\t// throw this.error_message\n\t}\n\tprotected _set_error_from_error_bound = this._set_error_from_error.bind(this);\n\tprivate _set_error_from_error(error: Error | string) {\n\t\tif (lodash_isString(error)) {\n\t\t\tthis._error_message = error;\n\t\t} else {\n\t\t\tthis._error_message = error.message;\n\t\t}\n\t}\n\tget is_errored(): boolean {\n\t\treturn this._error_message != null;\n\t}\n\tget error_message() {\n\t\treturn this._error_message;\n\t}\n\treset() {\n\t\tthis._error_message = undefined;\n\t}\n\n\ttraverse_node(node: jsep.Expression): string | undefined {\n\t\tconst method_name = `traverse_${node.type}`;\n\t\tconst method = (this as any)[method_name];\n\t\tif (method) {\n\t\t\treturn (this as any)[method_name](node);\n\t\t} else {\n\t\t\tthis.set_error(`expression unknown node type: ${node.type}`);\n\t\t}\n\t}\n\n\tprotected abstract traverse_CallExpression(node: jsep.CallExpression): string | undefined; //{\n\n\t// const method_arguments = node.arguments.map((arg)=>{\n\t// \treturn this.traverse_node(arg)\n\t// })\n\t// const method_name = node.callee.name\n\n\t// // literal construct (if...)\n\t// const literal_contruct = this[`traverse_literal_construct_${node.type}`] //LITERAL_CONSTRUCT[method_name]\n\t// if(literal_contruct){\n\t// \treturn literal_contruct.bind(this)(method_arguments)\n\t// }\n\n\t// // direct expressions (Math.floor, Math.sin...)\n\t// const arguments_joined = `${method_arguments.join(ARGUMENTS_SEPARATOR)}`\n\t// const direct_function_name = DIRECT_EXPRESSION_FUNCTIONS[method_name]\n\t// if(direct_function_name){\n\t// \treturn `${direct_function_name}(${arguments_joined})`\n\t// }\n\n\t// // indirect methods (points_count, asset...)\n\t// const indirect_method = INDIRECT_EXPRESSION_METHODS[method_name]\n\t// if(indirect_method){\n\t// \tthis._create_method_and_dependencies(node, method_name, arguments_joined)\n\t// \treturn `await methods[${this.method_index}].process_arguments(${arguments_joined})`\n\t// }\n\n\t// this.set_error(`unknown method: ${method_name}`)\n\t//}\n\tprotected traverse_BinaryExpression(node: jsep.BinaryExpression): string {\n\t\treturn `${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)}`;\n\t}\n\tprotected traverse_LogicalExpression(node: jsep.LogicalExpression): string {\n\t\t// || or &&\n\t\treturn `${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)}`;\n\t}\n\tprotected traverse_MemberExpression(node: jsep.MemberExpression): string {\n\t\treturn `${this.traverse_node(node.object)}.${this.traverse_node(node.property)}`;\n\t}\n\tprotected traverse_ConditionalExpression(node: jsep.ConditionalExpression): string {\n\t\treturn `(${this.traverse_node(node.test)}) ? (${this.traverse_node(node.consequent)}) : (${this.traverse_node(\n\t\t\tnode.alternate\n\t\t)})`;\n\t}\n\n\t// currently only used for string expressions such as\n\t// pt_`@ptnum+1`\n\tprotected traverse_Compound(node: jsep.Compound): string {\n\t\tconst args = node.body;\n\t\tlet traversed_args = [];\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tconst arg_node = args[i];\n\t\t\tif (arg_node.type == 'Identifier') {\n\t\t\t\tif ((arg_node as jsep.Identifier).name[0] == VARIABLE_PREFIX) {\n\t\t\t\t\ttraversed_args.push('`${' + this.traverse_node(arg_node) + '}`');\n\t\t\t\t} else {\n\t\t\t\t\ttraversed_args.push(`'${(arg_node as jsep.Identifier).name}'`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttraversed_args.push('`${' + this.traverse_node(arg_node) + '}`');\n\t\t\t}\n\t\t}\n\t\treturn traversed_args.join(' + ');\n\t\t// this may work for things like  [1,-2,3][$F%2]\n\t\t// but can be confusing for more operators like [1,-2,3][$F%2][2]\n\n\t\t// console.log(node)\n\t\t// return `(${this.traverse_node(node.test)}) ? (${this.traverse_node(node.consequent)}) : (${this.traverse_node(node.alternate)})`\n\t\t// this.set_error(\"unrecognised expression Compound\")\n\t\t// return \"\"\n\t}\n\tprotected abstract traverse_UnaryExpression(node: jsep.UnaryExpression): string; //{\n\n\t// if (node.operator === ATTRIBUTE_PREFIX) {\n\t// \tconst attrib_name = this.traverse_node(node.argument);\n\t// \treturn `param.entity_attrib_value(${QUOTE}${attrib_name}${QUOTE})`\n\t// } else {\n\t// \treturn `${node.operator}${this.traverse_node(node.argument)}`; // -5\n\t// }\n\t//}\n\n\tprotected traverse_Literal(node: jsep.Literal): string {\n\t\treturn `${node.raw}`; // 5 or 'string' (raw will include quotes)\n\t}\n\n\tprotected abstract traverse_Identifier(node: jsep.Identifier): string | undefined; //{\n\t// const identifier_first_char = node.name[0]\n\t// if(identifier_first_char == VARIABLE_PREFIX){\n\t// \tconst identifier_name_without_dollar_sign = node.name.substr(1)\n\n\t// \t// globals constants: Math.PI or Math.E\n\t// \tconst direct_constant_name = GLOBAL_CONSTANTS[identifier_name_without_dollar_sign]\n\t// \tif(direct_constant_name){\n\t// \t\treturn direct_constant_name\n\t// \t}\n\n\t// \t// scene or node globals: $F, $CH, $OS\n\t// \tconst method_name = `Identifier_${identifier_name_without_dollar_sign}_body`\n\t// \tconst method = this[method_name]\n\t// \tif(method){\n\t// \t\treturn this[method_name]()\n\t// \t}else{\n\t// \t\tthis.set_error(`identifier unknown: ${node.name}`);\n\t// \t}\n\n\t// } else {\n\t// \treturn node.name // @ptnum will call this method and return \"ptnum\"\n\t// }\n\t//}\n\n\t//\n\t//\n\t// Identifier methods (called from Identifier_body)\n\t//\n\t//\n\t// abstract Identifier_F_body(): string //{\n\t// this.dependencies.push(this.param.scene().context())\n\t// return `param.scene().frame()`\n\t//}\n\t// abstract Identifier_CH_body(): string //{\n\t// return `${QUOTE}${this.param.name()}${QUOTE}`\n\t//}\n\t// TODO:\n\t// '$CEX': '_eval_identifier_as_expression_centroid_x',\n\t// '$CEY': '_eval_identifier_as_expression_centroid_y',\n\t// '$CEZ': '_eval_identifier_as_expression_centroid_z',\n\t// '$CH': '_eval_identifier_as_param_name',\n\t// '$OS': '_eval_identifier_as_node_name',\n\n\t//\n\t//\n\t// Methods dependencies\n\t//\n\t//\n\t// protected _create_method_and_dependencies(node: jsep.CallExpression, method_name: string, arguments_joined: string) {\n\t// \tconst method_constructor = Method[method_name]\n\t// \tconst method = new method_constructor(this.param)\n\t// \tthis.method_index += 1\n\t// \tthis.methods[this.method_index] = method\n\n\t// \tconst dependency_arguments_function = new Function(`return [${arguments_joined}]`)\n\t// \tconst dependency_arguments = dependency_arguments_function()\n\n\t// \tconst reference_search_result = method.find_dependencies(dependency_arguments)\n\t// \treference_search_result.found_graph_nodes.forEach((graph_node)=>{\n\t// \t\tthis.dependencies.push(graph_node)\n\t// \t})\n\t// \treference_search_result.missing_paths.forEach((path)=>{\n\t// \t\tthis.jsep_nodes_by_missing_paths[path] = this.jsep_nodes_by_missing_paths[path] || []\n\t// \t\tthis.jsep_nodes_by_missing_paths[path].push(node)\n\t// \t})\n\t// }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncFunction\nexport const AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n","// import lodash_each from 'lodash/each'\nimport lodash_isString from 'lodash/isString';\n// import lodash_isNumber from 'lodash/isNumber'\nimport {TypedParam} from './_Base';\n// import {TypedParamVisitor} from './_Base';\n// import {AsCodeString} from './concerns/visitors/String';\n// import {ExpressionController} from '../expressions/ExpressionController'\nimport {ParsedTree} from '../expressions/traversers/ParsedTree';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ExpressionController} from './utils/ExpressionController';\nimport {ParamEvent} from '../poly/ParamEvent';\n\nexport class StringParam extends TypedParam<ParamType.STRING> {\n\tstatic type() {\n\t\treturn ParamType.STRING;\n\t}\n\tget default_value_serialized() {\n\t\treturn this.default_value;\n\t}\n\tprotected _clone_raw_input(raw_input: ParamInitValuesTypeMap[ParamType.STRING]) {\n\t\treturn `${raw_input}`;\n\t}\n\tget raw_input_serialized() {\n\t\treturn `${this._raw_input}`;\n\t}\n\tget value_serialized() {\n\t\treturn `${this.value}`;\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.STRING],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.STRING]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.STRING], val2: ParamValuesTypeMap[ParamType.STRING]) {\n\t\treturn val1 == val2;\n\t}\n\tget is_default(): boolean {\n\t\treturn this._raw_input == this.default_value;\n\t}\n\n\tconvert(raw_val: any): string {\n\t\tif (lodash_isString(raw_val)) {\n\t\t\treturn raw_val;\n\t\t}\n\t\treturn `${raw_val}`;\n\t}\n\n\tget raw_input() {\n\t\treturn this._raw_input;\n\t}\n\tprotected process_raw_input() {\n\t\tthis.states.error.clear();\n\n\t\tif (this._value_elements(this._raw_input).length >= 3) {\n\t\t\tthis._expression_controller = this._expression_controller || new ExpressionController(this);\n\t\t\tif (this._raw_input != this._expression_controller.expression) {\n\t\t\t\tthis._expression_controller.set_expression(this._raw_input);\n\t\t\t\tthis.set_dirty();\n\t\t\t\tthis.emit_controller.emit(ParamEvent.EXPRESSION_UPDATED);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._raw_input != this._value) {\n\t\t\t\tthis._value = this._raw_input;\n\t\t\t\tthis.remove_dirty_state();\n\t\t\t\tthis.set_successors_dirty(this);\n\t\t\t\tthis.emit_controller.emit(ParamEvent.VALUE_UPDATED);\n\t\t\t\tif (this._expression_controller) {\n\t\t\t\t\tthis._expression_controller.set_expression(undefined, false);\n\t\t\t\t\tthis.emit_controller.emit(ParamEvent.EXPRESSION_UPDATED); // ensure expression is considered removed\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprotected async process_computation(): Promise<void> {\n\t\tif (this.expression_controller?.active && !this.expression_controller.requires_entities) {\n\t\t\tconst expression_result = await this.expression_controller.compute_expression();\n\t\t\tif (this.expression_controller.is_errored) {\n\t\t\t\tthis.states.error.set(`expression error: ${this.expression_controller.error_message}`);\n\t\t\t} else {\n\t\t\t\tconst converted = this.convert(expression_result);\n\t\t\t\t// we need to check if equal nulls explicitely\n\t\t\t\t// as the empty string '' evals to false...\n\t\t\t\tif (converted != null) {\n\t\t\t\t\tthis._value = converted;\n\t\t\t\t\tthis.emit_controller.emit(ParamEvent.VALUE_UPDATED);\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set(`expression returns an invalid type (${expression_result})`);\n\t\t\t\t}\n\t\t\t\tthis.remove_dirty_state();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _value_elements(v: string): string[] {\n\t\treturn ParsedTree.string_value_elements(v);\n\t}\n}\n","import lodash_trim from 'lodash/trim';\n\nimport {TypedGlNode, BaseGlNodeType} from './_Base';\n// import {BaseNodeGlMathFunctionArg1} from './_BaseMathFunctionArg1';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {BaseNamedConnectionPointType} from '../utils/connections/NamedConnectionPoint';\nimport {ParamType} from '../../poly/ParamType';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {GlConnectionsController} from './utils/ConnectionsController';\n\nexport const ConnectionPointTypesAvailableForAttribute = [\n\tConnectionPointType.FLOAT,\n\tConnectionPointType.VEC2,\n\tConnectionPointType.VEC3,\n\tConnectionPointType.VEC4,\n];\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AttributeGlParamsConfig extends NodeParamsConfig {\n\tname = ParamConfig.STRING('');\n\ttype = ParamConfig.INTEGER(0, {\n\t\tmenu: {\n\t\t\tentries: ConnectionPointTypesAvailableForAttribute.map((name, i) => {\n\t\t\t\treturn {name: name, value: i};\n\t\t\t}),\n\t\t},\n\t});\n}\nconst ParamsConfig = new AttributeGlParamsConfig();\n\nexport class AttributeGlNode extends TypedGlNode<AttributeGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attribute';\n\t}\n\tstatic readonly INPUT_NAME = 'export';\n\tstatic readonly OUTPUT_NAME = 'val';\n\n\tprivate _on_create_set_name_if_none_bound = this._on_create_set_name_if_none.bind(this);\n\t// private _update_signature_if_required_bound = this._update_signature_if_required.bind(this);\n\tpublic readonly gl_connections_controller: GlConnectionsController = new GlConnectionsController(this);\n\tinitialize_node() {\n\t\tthis.add_post_dirty_hook('_set_mat_to_recompile', this._set_mat_to_recompile_if_is_exporting.bind(this));\n\t\tthis.lifecycle.add_on_create_hook(this._on_create_set_name_if_none_bound);\n\t\tthis.gl_connections_controller.initialize_node();\n\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => []);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [\n\t\t\tConnectionPointTypesAvailableForAttribute[this.pv.type],\n\t\t]);\n\t\t// this.params.add_on_scene_load_hook('_update_signature_if_required', this._update_signature_if_required_bound);\n\t\t// this.params.set_post_create_params_hook(this._update_signature_if_required_bound);\n\t\t// this.add_post_dirty_hook('_update_signature_if_required', this._update_signature_if_required_bound);\n\t}\n\tcreate_params() {\n\t\tif (this.material_node?.assembler_controller.allow_attribute_exports()) {\n\t\t\tthis.add_param(ParamType.BOOLEAN, 'export_when_connected', 0);\n\t\t}\n\t}\n\t// inputless_params_names(): string[] {\n\t// \treturn ['type'];\n\t// }\n\n\tget input_name() {\n\t\treturn AttributeGlNode.INPUT_NAME;\n\t}\n\tget output_name() {\n\t\treturn AttributeGlNode.OUTPUT_NAME;\n\t}\n\n\t// private create_inputs_from_params() {\n\t// \tif (this.material_node.allow_attribute_exports) {\n\t// \t\t// this.set_named_inputs([new TypedConnectionFloat(AttributeGlNode.input_name())]);\n\t// \t\tthis.io.inputs.set_named_input_connection_points([\n\t// \t\t\tnew TypedNamedConnectionPoint(INPUT_NAME, ConnectionPointTypes[this.pv.type]),\n\t// \t\t]);\n\t// \t\t// this._init_graph_node_inputs();\n\t// \t}\n\t// }\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\t// if (lines_controller.shader_name) {\n\t\tthis.material_node?.assembler_controller.assembler.set_node_lines_attribute(\n\t\t\tthis,\n\t\t\tshaders_collection_controller\n\t\t);\n\t\t// }\n\t}\n\n\t// update_output_type(constructor) {\n\t// \tconst named_output = new constructor(Attribute.output_name());\n\t// \tthis.set_named_outputs([named_output]);\n\t// }\n\t// update_input_type(constructor) {\n\t// \tconst named_input = new constructor(Attribute.input_name());\n\t// \tthis.set_named_inputs([named_input]);\n\t// \tthis._init_graph_node_inputs();\n\t// }\n\n\tget attribute_name(): string {\n\t\treturn lodash_trim(this.pv.name);\n\t}\n\tgl_type(): ConnectionPointType {\n\t\treturn this.io.outputs.named_output_connection_points[0].type;\n\t}\n\t//\n\t//\n\t// Utility methods for SOP/ParticlesSystemGPU and Assembler/Particles\n\t//\n\t//\n\tconnected_input_node(): BaseGlNodeType | null {\n\t\t// if (this.io.inputs.has_named_inputs) {\n\t\treturn this.io.inputs.named_input(AttributeGlNode.INPUT_NAME);\n\t\t// }\n\t}\n\tconnected_input_connection_point(): BaseNamedConnectionPointType | undefined {\n\t\treturn this.io.inputs.named_input_connection_point(AttributeGlNode.INPUT_NAME);\n\t}\n\t// connected_input(): NamedConnection {\n\t// \tconst connection_point = this.connected_input_connection_point();\n\t// \tif (connection_point) {\n\t// \t\treturn this.io.inputs.named_inputs().filter((ni) => ni.name() == Attribute.input_name())[0];\n\t// \t}\n\t// }\n\toutput_connection_point(): BaseNamedConnectionPointType | undefined {\n\t\t// if (this.io.inputs.has_named_inputs) {\n\t\treturn this.io.outputs.named_output_connection_points_by_name(this.input_name);\n\t\t// }\n\t}\n\t// connected_output(): NamedConnection {\n\t// \tconst output = this.named_output(0);\n\t// \tif (output) {\n\t// \t\treturn output; //this.named_inputs().filter(ni=>ni.name() == Attribute.input_name())[0]\n\t// \t}\n\t// }\n\tget is_importing(): boolean {\n\t\treturn this.io.outputs.used_output_names().length > 0; // TODO: typescript - ensure that we can check that the connected outputs are part of the nodes retrived by the node traverser\n\t}\n\tget is_exporting(): boolean {\n\t\tif (this.pv.export_when_connected) {\n\t\t\tconst input_node = this.io.inputs.named_input(AttributeGlNode.INPUT_NAME);\n\t\t\treturn input_node != null;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tprivate _set_mat_to_recompile_if_is_exporting() {\n\t\tif (this.is_exporting) {\n\t\t\tthis._set_mat_to_recompile();\n\t\t}\n\t}\n\t//\n\t//\n\t// HOOKS\n\t//\n\t//\n\tprivate _on_create_set_name_if_none() {\n\t\tif (this.pv.name == '') {\n\t\t\tthis.p.name.set(this.name);\n\t\t}\n\t}\n\n\t//\n\t//\n\t// SIGNATURE\n\t//\n\t//\n\t// private _update_signature_if_required(dirty_trigger?: CoreGraphNode) {\n\t// \tif (!this.lifecycle.creation_completed || dirty_trigger == this.p.type) {\n\t// \t\tthis.update_input_and_output_types();\n\t// \t\tthis.remove_dirty_state();\n\t// \t\tthis.make_output_nodes_dirty();\n\t// \t}\n\t// \tthis.material_node?.assembler_controller.set_compilation_required_and_dirty(this);\n\t// }\n\t// private update_input_and_output_types() {\n\t// \tconst set_dirty = false;\n\t// \tthis.io.outputs.set_named_output_connection_points(\n\t// \t\t[new TypedNamedConnectionPoint(this.output_name, ConnectionPointTypesAvailableForAttribute[this.pv.type])],\n\t// \t\tset_dirty\n\t// \t);\n\t// \tif (this.material_node?.assembler_controller.allow_attribute_exports()) {\n\t// \t\tthis.io.inputs.set_named_input_connection_points([\n\t// \t\t\tnew TypedNamedConnectionPoint(this.input_name, ConnectionPointTypesAvailableForAttribute[this.pv.type]),\n\t// \t\t]);\n\t// \t}\n\t// }\n}\n","import {BaseNodeType} from '../../../nodes/_Base';\nimport {BaseParamType} from '../../../params/_Base';\n\nimport {NodeJsonExporter} from './Node';\n// import {BaseNodeObjJsonExporter} from './node/Obj';\n// import {BaseNodeSopSubnetworkJsonExporter} from './node/Subnetwork';\n\nimport {ParamJsonExporter} from './Param';\n// import {ParamMultipleJsonExporter} from './param/Multiple';\nimport {ParamNumericJsonExporter} from './param/Numeric';\nimport {ParamOperatorPathJsonExporter} from './param/OperatorPath';\nimport {ParamStringJsonExporter} from './param/String';\nimport {ParamRampJsonExporter} from './param/Ramp';\n// import {TypedObjNode} from '../../../nodes/obj/_Base';\n// import {TypedMultipleParam} from '../../../params/_Multiple';\nimport {TypedNumericParam} from '../../../params/_Numeric';\nimport {OperatorPathParam} from '../../../params/OperatorPath';\nimport {StringParam} from '../../../params/String';\nimport {RampParam} from '../../../params/Ramp';\n\nexport class JsonExportDispatcher {\n\tstatic dispatch_node(node: BaseNodeType) {\n\t\t// if (node instanceof TypedObjNode) {\n\t\t// \treturn new BaseNodeObjJsonExporter(node);\n\t\t// }\n\t\treturn new NodeJsonExporter(node);\n\t}\n\n\tstatic dispatch_param(param: BaseParamType) {\n\t\t// if (param instanceof TypedMultipleParam) {\n\t\t// \treturn new ParamMultipleJsonExporter(param);\n\t\t// }\n\t\tif (param instanceof TypedNumericParam) {\n\t\t\treturn new ParamNumericJsonExporter(param);\n\t\t}\n\t\tif (param instanceof OperatorPathParam) {\n\t\t\treturn new ParamOperatorPathJsonExporter(param);\n\t\t}\n\t\tif (param instanceof StringParam) {\n\t\t\treturn new ParamStringJsonExporter(param);\n\t\t}\n\t\tif (param instanceof RampParam) {\n\t\t\treturn new ParamRampJsonExporter(param);\n\t\t}\n\t\treturn new ParamJsonExporter(param);\n\t}\n}\n","import {PolyScene} from '../../../scene/PolyScene';\n// import {JsonExporterVisitor} from './Visitor';\nimport {CoreString} from '../../../../core/String';\nimport {NodeJsonExporterData, NodeJsonExporterUIData} from './Node';\nimport {JsonExportDispatcher} from './Dispatcher';\n\nexport interface SceneJsonExporterData {\n\tproperties?: {\n\t\tframe: number;\n\t\tframe_range: Number2;\n\t\tframe_range_locked: Boolean2;\n\t\t// fps: number;\n\t\tmaster_camera_node_path: string | null;\n\t};\n\troot?: NodeJsonExporterData;\n\tui?: NodeJsonExporterUIData;\n}\n\nexport class SceneJsonExporter {\n\tprivate _data: SceneJsonExporterData = {};\n\tconstructor(private _scene: PolyScene) {}\n\n\tdata(): SceneJsonExporterData {\n\t\tthis._scene.nodes_controller.reset_node_context_signatures();\n\t\tconst root_exporter = JsonExportDispatcher.dispatch_node(this._scene.root);\n\t\tconst nodes_data = root_exporter.data();\n\t\tconst ui_data = root_exporter.ui_data();\n\n\t\tthis._data = {\n\t\t\t// __js_version: this._scene.js_version(),\n\t\t\tproperties: {\n\t\t\t\t// name: this._scene.name(), // this conflicts with saving the name from the admin page\n\t\t\t\tframe: this._scene.frame || 1,\n\t\t\t\tframe_range: this._scene.frame_range,\n\t\t\t\tframe_range_locked: this._scene.time_controller.frame_range_locked,\n\t\t\t\t// fps: this._scene.time_controller.fps,\n\t\t\t\tmaster_camera_node_path: this._scene.cameras_controller.master_camera_node_path,\n\t\t\t},\n\t\t\troot: nodes_data,\n\t\t\tui: ui_data,\n\t\t};\n\n\t\treturn this._data;\n\t}\n\n\tstatic sanitize_string(word: string): string {\n\t\tword = word.replace(/'/g, \"'\"); // escapes ' (used to be with 2 /, but now only one to have Ian's Mediation saved and loaded correctly - but is actually 2 in Code Exporter)\n\t\tword = CoreString.escape_line_breaks(word);\n\t\treturn word;\n\t}\n}\n","export enum LineType {\n\tFUNCTION_DECLARATION = 'function_declaration',\n\tDEFINE = 'define',\n\tBODY = 'body',\n}\n","import {AssemblerControllerNode} from '../Controller';\n\nexport class GlNodeFinder {\n\tstatic find_output_nodes(node: AssemblerControllerNode) {\n\t\tconst nodes = node.nodes_by_type('output');\n\t\treturn nodes;\n\t\t// if (nodes.length > 1) {\n\t\t// \tnode.states.error.set('only one output node allowed');\n\t\t// }\n\t\t// return nodes[0];\n\t}\n\tstatic find_attribute_export_nodes(node: AssemblerControllerNode) {\n\t\tconst nodes = node.nodes_by_type('attribute');\n\t\treturn nodes.filter((node) => {\n\t\t\t// do not use attributes that are used as an input, as export\n\t\t\t// return (node.used_output_names().length == 0) &&\n\t\t\treturn node.is_exporting;\n\t\t});\n\t}\n}\n","import {Camera} from 'three/src/cameras/Camera';\n\nimport {TypedCameraControlsEventNode, CameraControls} from './_BaseCameraControls';\nimport {BaseCameraObjNodeType} from '../obj/_BaseCamera';\n\nimport {OrbitControls} from '../../../../modules/three/examples/jsm/controls/OrbitControls';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass CameraOrbitEventParamsConfig extends NodeParamsConfig {\n\tallow_pan = ParamConfig.BOOLEAN(1);\n\tallow_rotate = ParamConfig.BOOLEAN(1);\n\tallow_zoom = ParamConfig.BOOLEAN(1);\n\ttdamping = ParamConfig.BOOLEAN(1);\n\tdamping = ParamConfig.FLOAT(0.1, {\n\t\tvisible_if: {tdamping: true},\n\t});\n\tscreen_space_panning = ParamConfig.BOOLEAN(1);\n\trotate_speed = ParamConfig.FLOAT(0.5);\n\tmin_distance = ParamConfig.FLOAT(1, {\n\t\trange: [0, 100],\n\t\trange_locked: [true, false],\n\t});\n\tmax_distance = ParamConfig.FLOAT(50, {\n\t\trange: [0, 100],\n\t\trange_locked: [true, false],\n\t});\n\tpolar_angle_range = ParamConfig.VECTOR2([0, '$PI']);\n}\nconst ParamsConfig = new CameraOrbitEventParamsConfig();\n\nexport class CameraOrbitControlsEventNode extends TypedCameraControlsEventNode<CameraOrbitEventParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'camera_orbit_controls';\n\t}\n\t// static required_three_imports() {\n\t// \treturn ['controls/OrbitControls'];\n\t// }\n\n\tasync create_controls_instance(camera: Camera, element: HTMLElement) {\n\t\t// const c = this.constructor as typeof CameraOrbitControlsEventNode;\n\t\t// const {OrbitControls} = await CoreScriptLoader.module(c.required_imports()[0]);\n\n\t\tconst controls = new OrbitControls(camera, element);\n\t\treturn controls;\n\t}\n\n\tsetup_controls(controls: OrbitControls) {\n\t\tcontrols.enablePan = this.pv.allow_pan;\n\t\tcontrols.enableRotate = this.pv.allow_rotate;\n\t\tcontrols.enableZoom = this.pv.allow_zoom;\n\n\t\tcontrols.enableDamping = this.pv.tdamping;\n\t\tcontrols.dampingFactor = this.pv.damping;\n\n\t\tcontrols.rotateSpeed = this.pv.rotate_speed;\n\n\t\tcontrols.screenSpacePanning = this.pv.screen_space_panning;\n\n\t\tcontrols.minDistance = this.pv.min_distance;\n\t\tcontrols.maxDistance = this.pv.max_distance;\n\n\t\tcontrols.minPolarAngle = this.pv.polar_angle_range.x;\n\t\tcontrols.maxPolarAngle = this.pv.polar_angle_range.y;\n\n\t\t// to prevent moving the camera when using the arrows to change frame\n\t\tcontrols.enableKeys = false;\n\t}\n\n\tset_from_camera_node(controls: CameraControls, camera_node: BaseCameraObjNodeType): void {\n\t\tconst target = camera_node.params.vector3('target');\n\t\tcontrols.target.copy(target);\n\t}\n}\n","import {BaseController} from './_BaseController';\nimport {Material} from 'three/src/materials/Material';\nimport {Texture} from 'three/src/textures/Texture';\nimport {FileCopNode} from '../../cop/File';\nimport {BaseMatNodeType} from '../_Base';\n\nimport {ParamConfig} from '../../utils/params/ParamsConfig';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {BaseCopNodeType} from '../../cop/_Base';\nimport {OperatorPathParam} from '../../../params/OperatorPath';\nimport {BooleanParam} from '../../../params/Boolean';\nimport {BaseNodeType} from '../../_Base';\nimport {BaseParamType} from '../../../params/_Base';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {IUniform} from 'three/src/renderers/shaders/UniformsLib';\nimport {IUniforms} from '../../../../core/geometry/Material';\n\nexport function TextureMapParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tuse_map = ParamConfig.BOOLEAN(0);\n\t\tmap = ParamConfig.OPERATOR_PATH(FileCopNode.DEFAULT_NODE_PATH.UV, {visible_if: {use_map: 1}});\n\t};\n}\n// class TextureMapMaterial<T extends string> extends Material {\n// \t[T]!: Texture | null;\n// }\n// class TextureMapParamsConfig extends TextureMapParamConfig(NodeParamsConfig) {}\n// class TextureMapMatNode extends TypedMatNode<TextureMapMaterial, TextureMapParamsConfig> {\n// \tcreate_material() {\n// \t\treturn new TextureMapMaterial();\n// \t}\n// }\n\ntype FilterFlags<Base, Condition> = {\n\t[Key in keyof Base]: Base[Key] extends Condition ? Key : never;\n};\ntype AllowedNames<Base, Condition> = FilterFlags<Base, Condition>[keyof Base];\ntype SubType<Base, Condition> = Pick<Base, AllowedNames<Base, Condition>>;\n\n// type test = FilterFlags<MeshLambertMaterial, Texture|null>\n// type test2 = AllowedNames<MeshLambertMaterial, Texture|null>\n// type test3 = SubType<MeshLambertMaterial, Texture|null>\n\nexport function BooleanParamOptions(controller_class: typeof BaseTextureMapController) {\n\treturn {\n\t\tcook: false,\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tcontroller_class.update(node as BaseMatNodeType);\n\t\t},\n\t};\n}\nexport function OperatorPathOptions(controller: typeof BaseTextureMapController, use_map_name: string) {\n\treturn {\n\t\tvisible_if: {[use_map_name]: 1},\n\t\tnode_selection: {context: NodeContext.COP},\n\t\tcook: false,\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tcontroller.update(node as BaseMatNodeType);\n\t\t},\n\t};\n}\n\ntype TextureUpdateCallback<O extends Object> = (\n\tmaterial: Material,\n\tobject: O,\n\tmat_attrib_name: keyof SubType<O, Texture | null>,\n\ttexture: Texture\n) => void;\ntype TextureRemoveCallback<O extends Object> = (\n\tmaterial: Material,\n\tobject: O,\n\tmat_attrib_name: keyof SubType<O, Texture | null>\n) => void;\n\ntype CurrentMaterial = Material | ShaderMaterial;\n\nexport interface UpdateOptions {\n\tdirect_params?: boolean;\n\tuniforms?: boolean;\n\tdefine?: boolean;\n}\nexport class BaseTextureMapController extends BaseController {\n\tconstructor(protected node: BaseMatNodeType, protected _update_options: UpdateOptions) {\n\t\tsuper(node);\n\t\tif (this._update_options.define == null) {\n\t\t\tthis._update_options.define = true;\n\t\t}\n\t}\n\n\tprotected add_hooks(use_map_param: BooleanParam, path_param: OperatorPathParam) {\n\t\tuse_map_param.add_post_dirty_hook('TextureController', () => {\n\t\t\tthis.update();\n\t\t});\n\t\tpath_param.add_post_dirty_hook('TextureController', () => {\n\t\t\tthis.update();\n\t\t});\n\t}\n\tstatic update(node: BaseNodeType) {}\n\n\tasync _update<M extends CurrentMaterial>(\n\t\tmaterial: M,\n\t\tmat_attrib_name: string,\n\t\tuse_map_param: BooleanParam,\n\t\tpath_param: OperatorPathParam\n\t) {\n\t\tif (this._update_options.uniforms) {\n\t\t\tconst shader_material = material as ShaderMaterial;\n\t\t\tconst attr_name = mat_attrib_name as keyof SubType<IUniforms, Texture | null>;\n\t\t\tawait this._update_texture_on_uniforms(shader_material, attr_name, use_map_param, path_param);\n\t\t}\n\t\tif (this._update_options.direct_params) {\n\t\t\tconst mat = material as Material;\n\t\t\tconst attr_name = mat_attrib_name as keyof SubType<Material, Texture | null>;\n\t\t\tawait this._update_texture_on_material(mat, attr_name, use_map_param, path_param);\n\t\t}\n\t}\n\n\t//\n\t//\n\t// FOR CASES WHERE THE TEXTURE IS ON THE UNIFORMS\n\t//\n\t//\n\tasync _update_texture_on_uniforms<O extends IUniform>(\n\t\tmaterial: ShaderMaterial,\n\t\tmat_attrib_name: keyof SubType<O, Texture | null>,\n\t\tuse_map_param: BooleanParam,\n\t\tpath_param: OperatorPathParam\n\t) {\n\t\tthis._update_required_attribute(\n\t\t\tmaterial,\n\t\t\tmaterial.uniforms,\n\t\t\tmat_attrib_name as never,\n\t\t\tuse_map_param,\n\t\t\tpath_param,\n\t\t\tthis._apply_texture_on_uniforms.bind(this),\n\t\t\tthis._remove_texture_from_uniforms.bind(this)\n\t\t);\n\t}\n\tprivate _apply_texture_on_uniforms<O extends IUniforms>(\n\t\tmaterial: Material,\n\t\tuniforms: O,\n\t\tmat_attrib_name: keyof SubType<O, Texture | null>,\n\t\ttexture: Texture\n\t) {\n\t\tconst has_texture = uniforms[mat_attrib_name] != null && uniforms[mat_attrib_name].value != null;\n\t\tlet new_texture_is_different = false;\n\t\tif (has_texture) {\n\t\t\tconst current_texture: Texture = (<unknown>uniforms[mat_attrib_name].value) as Texture;\n\t\t\tif (current_texture.uuid != texture.uuid) {\n\t\t\t\tnew_texture_is_different = true;\n\t\t\t}\n\t\t}\n\t\tif (!has_texture || new_texture_is_different) {\n\t\t\tuniforms[mat_attrib_name].value = texture as any;\n\t\t\tif (this._do_update_define()) {\n\t\t\t\tconst define_name = this._define_name(`${mat_attrib_name}`);\n\t\t\t\tmaterial.defines[define_name] = 1;\n\t\t\t}\n\t\t\tmaterial.defines['USE_UV'] = 1;\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\t}\n\tprivate _remove_texture_from_uniforms<U extends IUniforms>(\n\t\tmaterial: Material,\n\t\tuniforms: U,\n\t\tmat_attrib_name: keyof SubType<U, Texture | null>\n\t) {\n\t\tif (uniforms[mat_attrib_name].value) {\n\t\t\tuniforms[mat_attrib_name].value = null;\n\t\t\tif (this._do_update_define()) {\n\t\t\t\tconst define_name = this._define_name(`${mat_attrib_name}`);\n\t\t\t\tdelete material.defines[define_name];\n\t\t\t}\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\t}\n\tprivate _define_name(mat_attrib_name: string): string {\n\t\treturn 'USE_' + mat_attrib_name.replace('_', '').toUpperCase();\n\t}\n\n\t//\n\t//\n\t// FOR CASES WHERE THE TEXTURE IS ON THE MATERIAL\n\t//\n\t//\n\tasync _update_texture_on_material<M extends Material>(\n\t\tmaterial: M,\n\t\tmat_attrib_name: keyof SubType<M, Texture | null>,\n\t\tuse_map_param: BooleanParam,\n\t\tpath_param: OperatorPathParam\n\t) {\n\t\tthis._update_required_attribute(\n\t\t\tmaterial,\n\t\t\tmaterial,\n\t\t\tmat_attrib_name,\n\t\t\tuse_map_param,\n\t\t\tpath_param,\n\t\t\tthis._apply_texture_on_material.bind(this),\n\t\t\tthis._remove_texture_from_material.bind(this)\n\t\t);\n\t}\n\tprivate _apply_texture_on_material<M extends Material>(\n\t\tmaterial: Material,\n\t\ttexture_owner: M,\n\t\tmat_attrib_name: keyof SubType<M, Texture | null>,\n\t\ttexture: Texture\n\t) {\n\t\tconst has_texture = texture_owner[mat_attrib_name] != null;\n\t\tlet new_texture_is_different = false;\n\t\tif (has_texture) {\n\t\t\tconst current_texture: Texture = (<unknown>texture_owner[mat_attrib_name]) as Texture;\n\t\t\tif (current_texture.uuid != texture.uuid) {\n\t\t\t\tnew_texture_is_different = true;\n\t\t\t}\n\t\t}\n\t\tif (!has_texture || new_texture_is_different) {\n\t\t\ttexture_owner[mat_attrib_name] = texture as any;\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\t}\n\tprivate _remove_texture_from_material<M extends Material>(\n\t\tmaterial: Material,\n\t\ttexture_owner: M,\n\t\tmat_attrib_name: keyof SubType<M, Texture | null>\n\t) {\n\t\tif (texture_owner[mat_attrib_name]) {\n\t\t\ttexture_owner[mat_attrib_name] = null as any;\n\t\t\tmaterial.needsUpdate = true;\n\t\t}\n\t}\n\n\t//\n\t//\n\t// MAIN ALGO to decide if texture should be updated\n\t//\n\t//\n\tprivate async _update_required_attribute<O extends Object>(\n\t\tmaterial: Material,\n\t\ttexture_owner: O,\n\t\tmat_attrib_name: keyof SubType<O, Texture | null>,\n\t\tuse_map_param: BooleanParam,\n\t\tpath_param: OperatorPathParam,\n\t\tupdate_callback: TextureUpdateCallback<O>,\n\t\tremove_callback: TextureRemoveCallback<O>\n\t) {\n\t\tif (use_map_param.is_dirty) {\n\t\t\tawait use_map_param.compute();\n\t\t}\n\t\tconst use_map: boolean = use_map_param.value;\n\n\t\tif (use_map) {\n\t\t\tif (path_param.is_dirty) {\n\t\t\t\tawait path_param.compute();\n\t\t\t}\n\n\t\t\tconst found_node = path_param.found_node();\n\t\t\tif (found_node) {\n\t\t\t\tif (found_node.node_context() == NodeContext.COP) {\n\t\t\t\t\tconst texture_node = found_node as BaseCopNodeType;\n\n\t\t\t\t\tconst container = await texture_node.request_container();\n\t\t\t\t\tconst texture = container.texture();\n\n\t\t\t\t\tif (texture) {\n\t\t\t\t\t\tupdate_callback(material, texture_owner, mat_attrib_name, texture);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.node.states.error.set(`found node has no texture`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.node.states.error.set(`found map node is not a COP node`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.node.states.error.set(`could not find map node ${path_param.name} with path ${path_param.value}`);\n\t\t\t}\n\t\t}\n\t\t// this is not wrapped in an else clause after the \"if (use_map) {\"\n\t\t// as we should come here after any of the errors above, if any is triggered\n\t\tremove_callback(material, texture_owner, mat_attrib_name);\n\t}\n\n\tprivate _do_update_define(): boolean {\n\t\tif (this._update_options.define == null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this._update_options.define;\n\t}\n}\n","import {ShaderAssemblerMaterial, CustomAssemblerMap, CustomMaterialName} from './_BaseMaterial';\n\nimport {ShaderAssemblerCustomMeshDistance} from './CustomMeshDistance';\nimport {ShaderAssemblerCustomMeshDepth} from './CustomMeshDepth';\nimport {ShaderAssemblerCustomMeshDepthDOF} from './CustomMeshDepthDOF';\n\nconst ASSEMBLER_MAP: CustomAssemblerMap = new Map([\n\t// [CustomMaterialName.DISTANCE, ShaderAssemblerCustomMeshDistance],\n\t// [CustomMaterialName.DEPTH, ShaderAssemblerCustomMeshDepth],\n\t// [CustomMaterialName.DEPTH_DOF, ShaderAssemblerCustomMeshDepthDOF],\n]);\nASSEMBLER_MAP.set(CustomMaterialName.DISTANCE, ShaderAssemblerCustomMeshDistance);\nASSEMBLER_MAP.set(CustomMaterialName.DEPTH, ShaderAssemblerCustomMeshDepth);\nASSEMBLER_MAP.set(CustomMaterialName.DEPTH_DOF, ShaderAssemblerCustomMeshDepthDOF);\n\nexport abstract class ShaderAssemblerMesh extends ShaderAssemblerMaterial {\n\t// TODO: I've noticed a case where instances would not display when those shadow shaders were exported\n\t// But the objects display fine if those are not assigned\n\t// so it could be a bug at render time (not sure if my code, threejs or hardware)\n\tcustom_assembler_class_by_custom_name(): CustomAssemblerMap {\n\t\treturn ASSEMBLER_MAP;\n\t}\n}\n","import {TypedObjNode, ObjNodeRenderOrder} from './_Base';\nimport {Light} from 'three/src/lights/Light';\nimport {Color} from 'three/src/math/Color';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {FlagsControllerD} from '../utils/FlagsController';\nimport {Group} from 'three/src/objects/Group';\n\nexport abstract class TypedLightObjNode<L extends Light, K extends NodeParamsConfig> extends TypedObjNode<Group, K> {\n\tpublic readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\tpublic readonly render_order: number = ObjNodeRenderOrder.LIGHT;\n\tprotected _color_with_intensity = new Color(0x00000);\n\tprotected _light!: L;\n\tget light() {\n\t\treturn this._light;\n\t}\n\tprotected abstract create_light(): L;\n\tprotected _used_in_scene: boolean = true;\n\tinitialize_base_node() {\n\t\tsuper.initialize_base_node();\n\n\t\tthis._light = this.create_light();\n\t\tthis.object.add(this._light);\n\t\tthis.flags.display.add_hook(() => {\n\t\t\tthis.update_light_attachment();\n\t\t});\n\t\tthis.dirty_controller.add_post_dirty_hook(\n\t\t\t'_cook_main_without_inputs_when_dirty',\n\t\t\tthis._cook_main_without_inputs_when_dirty_bound\n\t\t);\n\t}\n\tprivate _cook_main_without_inputs_when_dirty_bound = this._cook_main_without_inputs_when_dirty.bind(this);\n\tprivate async _cook_main_without_inputs_when_dirty() {\n\t\t// if (this.used_in_scene) {\n\t\tawait this.cook_controller.cook_main_without_inputs();\n\t\t// }\n\t}\n\tprivate update_light_attachment() {\n\t\tif (this.flags.display.active) {\n\t\t\tthis.object.add(this.light);\n\t\t\tthis._cook_main_without_inputs_when_dirty();\n\t\t} else {\n\t\t\tthis.object.remove(this.light);\n\t\t}\n\t}\n\n\t// create_params() {\n\t// \t// this.create_light_params();\n\t// \t// this.create_shadow_params_main();\n\t// }\n\n\tcreate_shadow_params_main() {\n\t\tif (this._light.shadow != null) {\n\t\t\treturn this.create_shadow_params();\n\t\t}\n\t}\n\n\tprotected create_light_params(): void {}\n\tprotected update_light_params(): void {}\n\n\tprotected create_shadow_params() {\n\t\treturn;\n\t\t// this.add_param('toggle', 'cast_shadows', 1);\n\t\t// shadow_options = {visible_if: {cast_shadows: 1}}\n\t\t// this.add_param( 'vector2', 'shadow_res', [1024, 1024], shadow_options );\n\t\t// this.add_param( 'float', 'shadow_near', 0.1, shadow_options );\n\t\t// this.add_param( 'float', 'shadow_far', 100, shadow_options );\n\t\t// // this.add_param( 'float', 'shadow_far', 500 ) # same as param distance\n\t\t// this.add_param( 'float', 'shadow_bias', -0.0001, shadow_options );\n\t\t// this.add_param( 'float', 'shadow_blur', 1, shadow_options );\n\t}\n\n\t// as_code_set_up_custom: ->\n\t// \tlines = []\n\t// \tlines.push \"#{this.code_var_name()}.set_display_flag(#{this.display_flag_state()})\"\n\t// \tlines\n\n\tcook() {\n\t\tthis.update_light_params();\n\t\tthis.update_shadow_params();\n\t\tthis.cook_controller.end_cook();\n\t}\n\n\tupdate_shadow_params() {\n\t\t// let object;\n\t\t// return;\n\t\t// if (((object = this.object()) != null) && (object.shadow != null)) {\n\t\t// \tobject.castShadow = this._param_cast_shadow;\n\t\t// \tobject.shadow.mapSize.width = this._param_shadow_res.x;\n\t\t// \tobject.shadow.mapSize.height = this._param_shadow_res.y;\n\t\t// \tobject.shadow.camera.near = this._param_shadow_near;\n\t\t// \tobject.shadow.camera.far = this._param_shadow_far;\n\t\t// \treturn object.shadow.bias = this._param_shadow_bias;\n\t\t// }\n\t}\n\n\tget color_with_intensity() {\n\t\tconst color = this.params.color('color');\n\t\tconst intensity = this.params.float('intensity');\n\t\tthis._color_with_intensity.copy(color).multiplyScalar(intensity);\n\t\treturn this._color_with_intensity;\n\t}\n\tget active(): boolean {\n\t\treturn this.flags.display.active;\n\t}\n}\n\nexport type BaseLightObjNodeType = TypedLightObjNode<Light, NodeParamsConfig>;\n// export class BaseLightObjNodeClass extends TypedLightObjNode<Light, NodeParamsConfig> {}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {Color} from 'three/src/math/Color';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Material} from 'three/src/materials/Material';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {Bone} from 'three/src/objects/Bone';\n\n// import {CoreConstant} from './Constant'\nimport {CoreGeometry} from './Geometry';\nimport {GroupString} from './Group';\nimport {CoreAttribute} from './Attribute';\nimport {CoreConstant} from './Constant';\nimport {CorePoint} from './Point';\nimport {CoreMaterial, ShaderMaterialWithCustomMaterials} from './Material';\nimport {CoreString} from '../String';\n\nimport lodash_cloneDeep from 'lodash/cloneDeep';\nimport lodash_isString from 'lodash/isString';\nimport lodash_isArray from 'lodash/isArray';\nimport lodash_isNumber from 'lodash/isNumber';\nimport {CoreEntity} from './Entity';\nconst PTNUM = 'ptnum';\nconst NAME_ATTR = 'name';\nconst ATTRIBUTES = 'attributes';\n\ninterface Object3DWithAnimations extends Object3D {\n\tanimations: AnimationClip[];\n}\ninterface MaterialWithColor extends Material {\n\tcolor: Color;\n}\n// interface SkinnedMeshWithisSkinnedMesh extends SkinnedMesh {\n// \treadonly isSkinnedMesh: boolean;\n// }\n\nexport class CoreObject extends CoreEntity {\n\tconstructor(private _object: Object3D, index: number) {\n\t\tsuper(index);\n\t\tif (this._object.userData[ATTRIBUTES] == null) {\n\t\t\tthis._object.userData[ATTRIBUTES] = {};\n\t\t}\n\t}\n\n\t// set_index(i: number) {\n\t// \tthis._index = i;\n\t// }\n\n\tobject() {\n\t\treturn this._object;\n\t}\n\tgeometry(): BufferGeometry | null {\n\t\treturn (this._object as Mesh).geometry as BufferGeometry | null;\n\t}\n\tcore_geometry(): CoreGeometry | null {\n\t\tconst geo = this.geometry();\n\t\tif (geo) {\n\t\t\treturn new CoreGeometry(geo);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\t// const geo = this.geometry()\n\t\t// if (geo) {\n\t\t// \treturn new CoreGeometry(geo)\n\t\t// } else {\n\t\t// \treturn null\n\t\t// }\n\t}\n\tpoints() {\n\t\treturn this.core_geometry()?.points() || [];\n\t}\n\tpoints_from_group(group: GroupString): CorePoint[] {\n\t\tif (group) {\n\t\t\tconst indices = CoreString.indices(group);\n\t\t\tif (indices) {\n\t\t\t\tconst points = this.points();\n\t\t\t\treturn indices.map((i) => points[i]);\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.points();\n\t\t}\n\t}\n\n\tcompute_vertex_normals() {\n\t\tthis.core_geometry()?.compute_vertex_normals();\n\t}\n\n\tadd_attribute(name: string, value: AttribValue) {\n\t\tlet data;\n\t\tif (!lodash_isNumber(value) && !lodash_isArray(value) && !lodash_isString(value)) {\n\t\t\tdata = (value as Vector3).toArray();\n\t\t} else {\n\t\t\tdata = value;\n\t\t}\n\t\tthis._object.userData[ATTRIBUTES][name] = data;\n\t}\n\tadd_numeric_attrib(name: string, value: NumericAttribValue) {\n\t\tthis.add_attribute(name, value);\n\t}\n\tset_attrib_value(name: string, value: AttribValue) {\n\t\tthis.add_attribute(name, value);\n\t}\n\tadd_numeric_vertex_attrib(name: string, size: number, default_value: NumericAttribValue) {\n\t\tif (default_value == null) {\n\t\t\tdefault_value = CoreAttribute.default_value(size);\n\t\t}\n\t\tthis.core_geometry()?.add_numeric_attrib(name, size, default_value);\n\t}\n\n\tattribute_names(): string[] {\n\t\t// TODO: to remove\n\t\treturn Object.keys(this._object.userData[ATTRIBUTES]);\n\t}\n\tattrib_names(): string[] {\n\t\treturn this.attribute_names();\n\t}\n\n\thas_attrib(name: string): boolean {\n\t\treturn this.attribute_names().includes(name);\n\t}\n\n\trename_attribute(old_name: string, new_name: string) {\n\t\tthis.add_attribute(new_name, this.attrib_value(old_name));\n\t\tthis.delete_attribute(old_name);\n\t}\n\n\tdelete_attribute(name: string) {\n\t\tdelete this._object.userData[ATTRIBUTES][name];\n\t}\n\n\tattrib_value(name: string): AttribValue {\n\t\tif (name === PTNUM) {\n\t\t\treturn this.index;\n\t\t} else {\n\t\t\tlet val = this._object.userData[ATTRIBUTES][name];\n\t\t\tif (val == null) {\n\t\t\t\tif (name == NAME_ATTR) {\n\t\t\t\t\tval = this._object.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn val;\n\t\t}\n\t}\n\tname(): string {\n\t\treturn this.attrib_value(NAME_ATTR) as string;\n\t}\n\thuman_type(): string {\n\t\treturn CoreConstant.CONSTRUCTOR_NAMES_BY_CONSTRUCTOR_NAME[this._object.constructor.name];\n\t}\n\n\tattrib_type(name: string) {\n\t\tconst val = this.attrib_value(name);\n\t\tif (lodash_isString(val)) {\n\t\t\treturn CoreConstant.ATTRIB_TYPE.STRING;\n\t\t} else {\n\t\t\treturn CoreConstant.ATTRIB_TYPE.NUMERIC;\n\t\t}\n\t}\n\n\tattrib_size(name: string) {\n\t\tconst val = this.attrib_value(name);\n\t\tif (val == null) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (lodash_isString(val) || lodash_isNumber(val)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\tswitch (val.constructor) {\n\t\t\t\tcase Vector2:\n\t\t\t\t\treturn 2;\n\t\t\t\tcase Vector3:\n\t\t\t\t\treturn 3;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tclone() {\n\t\treturn CoreObject.clone(this._object);\n\t}\n\n\tstatic clone(src_object: Object3D) {\n\t\tconst new_object = src_object.clone();\n\n\t\tvar sourceLookup = new Map<Object3D, Object3D>();\n\t\tvar cloneLookup = new Map<Object3D, Object3D>();\n\t\tCoreObject.parallelTraverse(src_object, new_object, function (sourceNode: Object3D, clonedNode: Object3D) {\n\t\t\tsourceLookup.set(clonedNode, sourceNode);\n\t\t\tcloneLookup.set(sourceNode, clonedNode);\n\t\t});\n\t\tnew_object.traverse(function (node) {\n\t\t\tconst src_node = sourceLookup.get(node) as SkinnedMesh;\n\t\t\tconst mesh_node = node as Mesh;\n\n\t\t\tif (mesh_node.geometry) {\n\t\t\t\tconst src_node_geometry = src_node.geometry as BufferGeometry;\n\t\t\t\tmesh_node.geometry = CoreGeometry.clone(src_node_geometry);\n\t\t\t\tconst mesh_node_geometry = mesh_node.geometry as BufferGeometry;\n\t\t\t\tif (mesh_node_geometry.userData) {\n\t\t\t\t\tmesh_node_geometry.userData = lodash_cloneDeep(src_node_geometry.userData);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (mesh_node.material) {\n\t\t\t\tmesh_node.material = src_node.material;\n\t\t\t\tCoreMaterial.apply_custom_materials(node, mesh_node.material as ShaderMaterialWithCustomMaterials);\n\n\t\t\t\t// prevents crashes for linesegments with shader material such as the line dashed instance\n\t\t\t\t// TODO: test\n\t\t\t\tconst material_with_color = mesh_node.material as MaterialWithColor;\n\t\t\t\tif (material_with_color.color == null) {\n\t\t\t\t\tmaterial_with_color.color = new Color(1, 1, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (src_object.userData) {\n\t\t\t\tnode.userData = lodash_cloneDeep(src_node.userData);\n\t\t\t}\n\n\t\t\tconst src_node_with_animations = (<unknown>src_node) as Object3DWithAnimations;\n\t\t\tif (src_node_with_animations.animations) {\n\t\t\t\t(node as Object3DWithAnimations).animations = src_node_with_animations.animations.map((animation) =>\n\t\t\t\t\tanimation.clone()\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst skinned_node = node as SkinnedMesh;\n\t\t\tif (skinned_node.isSkinnedMesh) {\n\t\t\t\tvar clonedMesh = skinned_node;\n\t\t\t\tvar sourceMesh = src_node;\n\t\t\t\tvar sourceBones = sourceMesh.skeleton.bones;\n\n\t\t\t\tclonedMesh.skeleton = sourceMesh.skeleton.clone();\n\t\t\t\tclonedMesh.bindMatrix.copy(sourceMesh.bindMatrix);\n\n\t\t\t\tconst new_bones = sourceBones.map(function (bone) {\n\t\t\t\t\treturn cloneLookup.get(bone);\n\t\t\t\t}) as Bone[];\n\n\t\t\t\tclonedMesh.skeleton.bones = new_bones;\n\n\t\t\t\tclonedMesh.bind(clonedMesh.skeleton, clonedMesh.bindMatrix);\n\t\t\t}\n\t\t});\n\n\t\treturn new_object;\n\t}\n\n\tstatic parallelTraverse(a: Object3D, b: Object3D, callback: (a: Object3D, b: Object3D) => void) {\n\t\tcallback(a, b);\n\t\tfor (var i = 0; i < a.children.length; i++) {\n\t\t\tthis.parallelTraverse(a.children[i], b.children[i], callback);\n\t\t}\n\t}\n}\n","import {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {InterleavedBuffer} from 'three/src/core/InterleavedBuffer';\nimport {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute';\nimport {TriangleFanDrawMode} from 'three/src/constants';\nimport {TriangleStripDrawMode} from 'three/src/constants';\nimport {TrianglesDrawMode} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nvar BufferGeometryUtils = {\n\n\tcomputeTangents: function ( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar attributes = geometry.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar indices = index.array;\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal.array;\n\t\tvar uvs = attributes.uv.array;\n\n\t\tvar nVertices = positions.length / 3;\n\n\t\tif ( attributes.tangent === undefined ) {\n\n\t\t\tgeometry.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tvar tangents = attributes.tangent.array;\n\n\t\tvar tan1 = [], tan2 = [];\n\n\t\tfor ( var i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tvar vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tvar r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( var i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tvar group = groups[ i ];\n\n\t\t\tvar start = group.start;\n\t\t\tvar count = group.count;\n\n\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmp = new Vector3(), tmp2 = new Vector3();\n\t\tvar n = new Vector3(), n2 = new Vector3();\n\t\tvar w, t, test;\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tt = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\ttest = tmp2.dot( tan2[ v ] );\n\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( var i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tvar group = groups[ i ];\n\n\t\t\tvar start = group.start;\n\t\t\tvar count = group.count;\n\n\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t/**\n\t * @param  {Array<BufferGeometry>} geometries\n\t * @param  {Boolean} useGroups\n\t * @return {BufferGeometry}\n\t */\n\tmergeBufferGeometries: function ( geometries, useGroups ) {\n\n\t\tvar isIndexed = geometries[ 0 ].index !== null;\n\n\t\tvar attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\t\tvar morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\t\tvar attributes = {};\n\t\tvar morphAttributes = {};\n\n\t\tvar morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\t\tvar mergedGeometry = new BufferGeometry();\n\n\t\tvar offset = 0;\n\n\t\tfor ( var i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tvar geometry = geometries[ i ];\n\n\t\t\t// ensure that all geometries are indexed, or none\n\n\t\t\tif ( isIndexed !== ( geometry.index !== null ) ) return null;\n\n\t\t\t// gather attributes, exit early if they're different\n\n\t\t\tfor ( var name in geometry.attributes ) {\n\n\t\t\t\tif ( ! attributesUsed.has( name ) ) return null;\n\n\t\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\t// gather morph attributes, exit early if they're different\n\n\t\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) return null;\n\n\t\t\tfor ( var name in geometry.morphAttributes ) {\n\n\t\t\t\tif ( ! morphAttributesUsed.has( name ) ) return null;\n\n\t\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t\t}\n\n\t\t\t// gather .userData\n\n\t\t\tmergedGeometry.userData.mergedUserData = mergedGeometry.userData.mergedUserData || [];\n\t\t\tmergedGeometry.userData.mergedUserData.push( geometry.userData );\n\n\t\t\tif ( useGroups ) {\n\n\t\t\t\tvar count;\n\n\t\t\t\tif ( isIndexed ) {\n\n\t\t\t\t\tcount = geometry.index.count;\n\n\t\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\t\toffset += count;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// merge indices\n\n\t\tif ( isIndexed ) {\n\n\t\t\tvar indexOffset = 0;\n\t\t\tvar mergedIndex = [];\n\n\t\t\tfor ( var i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tvar index = geometries[ i ].index;\n\n\t\t\t\tfor ( var j = 0; j < index.count; ++ j ) {\n\n\t\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t\t}\n\n\t\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t\t}\n\n\t\t// merge attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar mergedAttribute = this.mergeBufferAttributes( attributes[ name ] );\n\n\t\t\tif ( ! mergedAttribute ) return null;\n\n\t\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t\t}\n\n\t\t// merge morph attributes\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\t\tif ( numMorphTargets === 0 ) break;\n\n\t\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\t\tvar morphAttributesToMerge = [];\n\n\t\t\t\tfor ( var j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar mergedMorphAttribute = this.mergeBufferAttributes( morphAttributesToMerge );\n\n\t\t\t\tif ( ! mergedMorphAttribute ) return null;\n\n\t\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn mergedGeometry;\n\n\t},\n\n\t/**\n\t * @param {Array<BufferAttribute>} attributes\n\t * @return {BufferAttribute}\n\t */\n\tmergeBufferAttributes: function ( attributes ) {\n\n\t\tvar TypedArray;\n\t\tvar itemSize;\n\t\tvar normalized;\n\t\tvar arrayLength = 0;\n\n\t\tfor ( var i = 0; i < attributes.length; ++ i ) {\n\n\t\t\tvar attribute = attributes[ i ];\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) return null;\n\n\t\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\t\tif ( TypedArray !== attribute.array.constructor ) return null;\n\n\t\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\t\tif ( itemSize !== attribute.itemSize ) return null;\n\n\t\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\t\tif ( normalized !== attribute.normalized ) return null;\n\n\t\t\tarrayLength += attribute.array.length;\n\n\t\t}\n\n\t\tvar array = new TypedArray( arrayLength );\n\t\tvar offset = 0;\n\n\t\tfor ( var i = 0; i < attributes.length; ++ i ) {\n\n\t\t\tarray.set( attributes[ i ].array, offset );\n\n\t\t\toffset += attributes[ i ].array.length;\n\n\t\t}\n\n\t\treturn new BufferAttribute( array, itemSize, normalized );\n\n\t},\n\n\t/**\n\t * @param {Array<BufferAttribute>} attributes\n\t * @return {Array<InterleavedBufferAttribute>}\n\t */\n\tinterleaveAttributes: function ( attributes ) {\n\n\t\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t\t// a set of InterleavedBufferAttributes for each attribute\n\t\tvar TypedArray;\n\t\tvar arrayLength = 0;\n\t\tvar stride = 0;\n\n\t\t// calculate the the length and type of the interleavedBuffer\n\t\tfor ( var i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\t\tvar attribute = attributes[ i ];\n\n\t\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\t\tconsole.warn( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tarrayLength += attribute.array.length;\n\t\t\tstride += attribute.itemSize;\n\n\t\t}\n\n\t\t// Create the set of buffer attributes\n\t\tvar interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\t\tvar offset = 0;\n\t\tvar res = [];\n\t\tvar getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\t\tvar setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t\tfor ( var j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\t\tvar attribute = attributes[ j ];\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar count = attribute.count;\n\t\t\tvar iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\t\tres.push( iba );\n\n\t\t\toffset += itemSize;\n\n\t\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t\t// at the appropriate offset\n\t\t\tfor ( var c = 0; c < count; c ++ ) {\n\n\t\t\t\tfor ( var k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn res;\n\n\t},\n\n\t/**\n\t * @param {Array<BufferGeometry>} geometry\n\t * @return {number}\n\t */\n\testimateBytesUsed: function ( geometry ) {\n\n\t\t// Return the estimated memory used by this geometry in bytes\n\t\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t\t// for InterleavedBufferAttributes.\n\t\tvar mem = 0;\n\t\tfor ( var name in geometry.attributes ) {\n\n\t\t\tvar attr = geometry.getAttribute( name );\n\t\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t\t}\n\n\t\tvar indices = geometry.getIndex();\n\t\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\t\treturn mem;\n\n\t},\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {number} tolerance\n\t * @return {BufferGeometry>}\n\t */\n\tmergeVertices: function ( geometry, tolerance = 1e-4 ) {\n\n\t\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t\t// if it's already available.\n\t\tvar hashToIndex = {};\n\t\tvar indices = geometry.getIndex();\n\t\tvar positions = geometry.getAttribute( 'position' );\n\t\tvar vertexCount = indices ? indices.count : positions.count;\n\n\t\t// next value for triangle indices\n\t\tvar nextIndex = 0;\n\n\t\t// attributes and new attribute arrays\n\t\tvar attributeNames = Object.keys( geometry.attributes );\n\t\tvar attrArrays = {};\n\t\tvar morphAttrsArrays = {};\n\t\tvar newIndices = [];\n\t\tvar getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\n\t\t// initialize the arrays\n\t\tfor ( var i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\t\tvar name = attributeNames[ i ];\n\n\t\t\tattrArrays[ name ] = [];\n\n\t\t\tvar morphAttr = geometry.morphAttributes[ name ];\n\t\t\tif ( morphAttr ) {\n\n\t\t\t\tmorphAttrsArrays[ name ] = new Array( morphAttr.length ).fill().map( () => [] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// convert the error tolerance to an amount of decimal places to truncate to\n\t\tvar decimalShift = Math.log10( 1 / tolerance );\n\t\tvar shiftMultiplier = Math.pow( 10, decimalShift );\n\t\tfor ( var i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tvar index = indices ? indices.getX( i ) : i;\n\n\t\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\t\tvar hash = '';\n\t\t\tfor ( var j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tvar name = attributeNames[ j ];\n\t\t\t\tvar attribute = geometry.getAttribute( name );\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tfor ( var k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add another reference to the vertex if it's already\n\t\t\t// used by another index\n\t\t\tif ( hash in hashToIndex ) {\n\n\t\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t\t} else {\n\n\t\t\t\t// copy data to the new index in the attribute arrays\n\t\t\t\tfor ( var j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\t\tvar name = attributeNames[ j ];\n\t\t\t\t\tvar attribute = geometry.getAttribute( name );\n\t\t\t\t\tvar morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\t\tvar itemSize = attribute.itemSize;\n\t\t\t\t\tvar newarray = attrArrays[ name ];\n\t\t\t\t\tvar newMorphArrays = morphAttrsArrays[ name ];\n\n\t\t\t\t\tfor ( var k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\t\tvar getterFunc = getters[ k ];\n\t\t\t\t\t\tnewarray.push( attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\t\tnewMorphArrays[ m ].push( morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\t\tnewIndices.push( nextIndex );\n\t\t\t\tnextIndex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate typed arrays from new attribute arrays and update\n\t\t// the attributeBuffers\n\t\tconst result = geometry.clone();\n\t\tfor ( var i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\t\tvar name = attributeNames[ i ];\n\t\t\tvar oldAttribute = geometry.getAttribute( name );\n\n\t\t\tvar buffer = new oldAttribute.array.constructor( attrArrays[ name ] );\n\t\t\tvar attribute = new BufferAttribute( buffer, oldAttribute.itemSize, oldAttribute.normalized );\n\n\t\t\tresult.setAttribute( name, attribute );\n\n\t\t\t// Update the attribute arrays\n\t\t\tif ( name in morphAttrsArrays ) {\n\n\t\t\t\tfor ( var j = 0; j < morphAttrsArrays[ name ].length; j ++ ) {\n\n\t\t\t\t\tvar oldMorphAttribute = geometry.morphAttributes[ name ][ j ];\n\n\t\t\t\t\tvar buffer = new oldMorphAttribute.array.constructor( morphAttrsArrays[ name ][ j ] );\n\t\t\t\t\tvar morphAttribute = new BufferAttribute( buffer, oldMorphAttribute.itemSize, oldMorphAttribute.normalized );\n\t\t\t\t\tresult.morphAttributes[ name ][ j ] = morphAttribute;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tresult.setIndex( newIndices );\n\n\t\treturn result;\n\n\t},\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {number} drawMode\n\t * @return {BufferGeometry>}\n\t */\n\ttoTrianglesDrawMode: function ( geometry, drawMode ) {\n\n\t\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\t\tvar index = geometry.getIndex();\n\n\t\t\t// generate index if not present\n\n\t\t\tif ( index === null ) {\n\n\t\t\t\tvar indices = [];\n\n\t\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\t\tif ( position !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\t\tindices.push( i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\t\treturn geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar numberOfTriangles = index.count - 2;\n\t\t\tvar newIndices = [];\n\n\t\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t\t}\n\n\t\t\t// build final geometry\n\n\t\t\tvar newGeometry = geometry.clone();\n\t\t\tnewGeometry.setIndex( newIndices );\n\t\t\tnewGeometry.clearGroups();\n\n\t\t\treturn newGeometry;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t}\n\n};\n\nexport { BufferGeometryUtils };\n","import {GlobalsBaseController} from './_Base';\nimport {GlobalsGlNode} from '../../Globals';\nimport {BaseGlNodeType} from '../../_Base';\n// import {Definition} from '../../Definition/_Module'\n// import { VariableConfig } from '../Config/VariableConfig';\nimport {TextureAllocationsController} from '../utils/TextureAllocationsController';\nimport {GlobalsGeometryHandler} from './Geometry';\nimport {ShaderName} from '../../../utils/shaders/ShaderName';\nimport {UniformGLDefinition, AttributeGLDefinition, VaryingGLDefinition} from '../../utils/GLDefinition';\nimport {ConnectionPointType} from '../../../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from '../utils/ShadersCollectionController';\n\n// import {DefinitionBaseConfig} from '../Config/DefinitionBaseConfig'\n// import {UniformConfig} from '../Config/UniformConfig'\n// import {AttributeConfig} from '../Config/AttributeConfig'\n// import { Attribute } from '../../Attribute';\n\nexport class GlobalsTextureHandler extends GlobalsBaseController {\n\tprivate _texture_allocations_controller: TextureAllocationsController | undefined;\n\n\tstatic UV_ATTRIB = 'particles_sim_uv_attrib';\n\tstatic UV_VARYING = 'particles_sim_uv_varying';\n\tstatic PARTICLE_SIM_UV = 'particleUV';\n\n\tprivate globals_geometry_handler: GlobalsGeometryHandler | undefined;\n\n\tconstructor(private _uv_name: string) {\n\t\tsuper();\n\t}\n\n\tset_texture_allocations_controller(controller: TextureAllocationsController) {\n\t\tthis._texture_allocations_controller = controller;\n\t}\n\n\thandle_globals_node(\n\t\tglobals_node: GlobalsGlNode,\n\t\toutput_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t\t// definitions_by_shader_name: Map<ShaderName, BaseGLDefinition[]>,\n\t\t// body_lines_by_shader_name: Map<ShaderName, string[]>,\n\t\t// body_lines: string[],\n\t\t// dependencies: ShaderName[],\n\t\t// shader_name: ShaderName\n\t) {\n\t\tif (!this._texture_allocations_controller) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst connection_point = globals_node.io.outputs.named_output_connection_points_by_name(output_name);\n\t\tconst var_name = globals_node.gl_var_name(output_name);\n\n\t\tconst variable = this._texture_allocations_controller.variable(output_name);\n\n\t\tif (variable && connection_point) {\n\t\t\tconst gl_type = connection_point.type;\n\t\t\tconst new_value = this.read_attribute(globals_node, gl_type, output_name, shaders_collection_controller);\n\t\t\tconst body_line = `${gl_type} ${var_name} = ${new_value}`;\n\t\t\tshaders_collection_controller.add_body_lines(globals_node, [body_line]);\n\t\t} else {\n\t\t\tthis.globals_geometry_handler = this.globals_geometry_handler || new GlobalsGeometryHandler();\n\t\t\tthis.globals_geometry_handler.handle_globals_node(\n\t\t\t\tglobals_node,\n\t\t\t\toutput_name,\n\t\t\t\tshaders_collection_controller\n\t\t\t\t// definitions_by_shader_name,\n\t\t\t\t// body_lines_by_shader_name,\n\t\t\t\t// body_lines,\n\t\t\t\t// dependencies,\n\t\t\t\t// shader_name\n\t\t\t);\n\t\t}\n\n\t\t// definitions\n\t\t// const gl_type = named_output.gl_type()\n\t\t// const definition = new Definition.Varying(globals_node, gl_type, var_name)\n\t\t// definitions_by_shader_name[shader_name].push(definition)\n\n\t\t// const new_value = this.read_attribute(globals_node, gl_type, output_name)\n\t\t// const body_line = `${var_name} = ${new_value}`\n\t\t// if(allocation){\n\t\t// \tconst var_name_texture = allocation.texture_name()\n\t\t// \t// add another definition if a texture was allocated by ParticlesSystemGPU\n\t\t// \tconst texture_definition = new Definition.Uniform(globals_node, 'sampler2D', var_name_texture)\n\t\t// \tdefinitions_by_shader_name[shader_name].push(texture_definition)\n\n\t\t// \t// const particles_sim_uv_definition = new Definition.Attribute(globals_node, 'vec2', GlobalsTextureHandler.UV_ATTRIB)\n\t\t// \t// definitions_by_shader_name['vertex'].push(particles_sim_uv_definition)\n\t\t// \t// this.add_particles_sim_uv_attribute(globals_node)\n\n\t\t// \tconst new_value = this.read_attribute(globals_node, gl_type, output_name, shader_name)\n\t\t// \tbody_line = `${var_name} = ${new_value}`\n\n\t\t// } else {\n\t\t// \tbody_line = `${var_name} = vec3(${output_name})`\n\t\t// }\n\n\t\t// const new_body_lines = [\n\t\t// \t// `${var_name} = vec3(${output_name})`,\n\t\t// \t`vec3 ${var_name} = texture2D( ${var_name_texture}, uv ).xyz;`\n\t\t// ]\n\t\t// const body_line = `vec3 ${var_name} = texture2D( ${var_name_texture}, uv ).xyz`\n\n\t\t// for(let dependency of dependencies){\n\t\t// \tdefinitions_by_shader_name[dependency].push(definition)\n\t\t// \tbody_lines_by_shader_name[dependency].push(body_line)\n\t\t// }\n\t\t// if(dependencies.length == 0){\n\t\t// \tbody_lines.push(body_line)\n\t\t// }\n\t}\n\t// variable_config_default(variable_name: string): string {\n\t// \t// const allocation = this._texture_allocations_controller.allocation_for_variable(variable_name)\n\t// \t// if(allocation){\n\t// \t// \treturn `texture2D( texture_${allocation.name()}, ${GlobalsTextureHandler.UV_VARYING} ).xyz`\n\t// \t// } else {\n\t// \t// \tGlobalsGeometryHandler.variable_config_default(variable_name)\n\t// \t// }\n\t// \tthrow 'do I go through here?';\n\t// \treturn this.read_attribute(variable_name);\n\t// }\n\t// variable_config_required_definitions(variable_name:string):DefinitionBaseConfig[]{\n\t// \tconst allocation = this._texture_allocations_controller.allocation_for_variable(variable_name)\n\t// \tif(allocation){\n\t// \t\treturn [\n\t// \t\t\tnew AttributeConfig('vec2', GlobalsTextureHandler.UV_ATTRIB),\n\t// \t\t\tnew UniformConfig('sampler2D', `texture_${allocation.name()}`)\n\t// \t\t]\n\t// \t}\n\t// }\n\n\t// static remap_instance_attribute(name:string):string{\n\t// \tif(name == 'instancePosition'){\n\t// \t\treturn 'position'\n\t// \t}\n\t// \treturn name\n\t// }\n\t// static variable_name_to_instance_attrib(name:string):string{\n\t// \tif(name == 'position'){\n\t// \t\treturn 'instancePosition'\n\t// \t}\n\t// \treturn name\n\t// }\n\n\tread_attribute(\n\t\tnode: BaseGlNodeType,\n\t\tgl_type: ConnectionPointType,\n\t\tattrib_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\tif (!this._texture_allocations_controller) {\n\t\t\treturn;\n\t\t}\n\t\t// attrib_name = GlobalsTextureHandler.remap_instance_attribute(attrib_name)\n\n\t\tconst texture_variable = this._texture_allocations_controller.variable(attrib_name);\n\n\t\tif (texture_variable) {\n\t\t\tthis.add_particles_sim_uv_attribute(node, shaders_collection_controller);\n\t\t\t// const texture_variable = allocation.variable(attrib_name)\n\t\t\t// if(!texture_variable){\n\t\t\t// \tconsole.error(`no tex var found for ${attrib_name}`)\n\t\t\t// \tthis._texture_allocations_controller.print(node.scene())\n\t\t\t// }\n\t\t\tconst component = texture_variable.component;\n\t\t\tconst allocation = texture_variable.allocation;\n\t\t\tif (allocation) {\n\t\t\t\t// const definitions_by_shader_name = {}\n\t\t\t\t// definitions_by_shader_name[shader_name] = []\n\t\t\t\tconst var_name_texture = allocation.texture_name;\n\t\t\t\tconst texture_definition = new UniformGLDefinition(\n\t\t\t\t\tnode,\n\t\t\t\t\tConnectionPointType.SAMPLER_2D,\n\t\t\t\t\tvar_name_texture\n\t\t\t\t);\n\t\t\t\t// definitions_by_shader_name[shader_name].push(texture_definition)\n\n\t\t\t\tshaders_collection_controller.add_definitions(node, [texture_definition]);\n\n\t\t\t\t// const particles_sim_uv_definition = new Definition.Attribute(globals_node, 'vec2', 'particles_sim_uv')\n\t\t\t\t// definitions_by_shader_name['vertex'].push(particles_sim_uv_definition)\n\t\t\t\tconst body_line = `texture2D( ${var_name_texture}, ${this._uv_name} ).${component}`;\n\t\t\t\treturn body_line;\n\t\t\t}\n\t\t} else {\n\t\t\treturn GlobalsGeometryHandler.read_attribute(node, gl_type, attrib_name, shaders_collection_controller);\n\t\t}\n\t}\n\n\tadd_particles_sim_uv_attribute(node: BaseGlNodeType, shaders_collection_controller: ShadersCollectionController) {\n\t\t// const shader_names = ['vertex', 'fragment'];\n\t\t// const definitions_by_shader_name:Map<ShaderName, BaseGLDefinition[]> = new Map();\n\t\t// definitions_by_shader_name.set(ShaderName.VERTEX, [])\n\t\t// definitions_by_shader_name.set(ShaderName.FRAGMENT, [])\n\t\t// for (let shader_name of shader_names) {\n\t\t// \tdefinitions_by_shader_name[shader_name] = [];\n\t\t// }\n\n\t\tconst particles_sim_uv_attrib_definition = new AttributeGLDefinition(\n\t\t\tnode,\n\t\t\tConnectionPointType.VEC2,\n\t\t\tGlobalsTextureHandler.UV_ATTRIB\n\t\t);\n\t\tconst particles_sim_uv_varying_definition = new VaryingGLDefinition(\n\t\t\tnode,\n\t\t\tConnectionPointType.VEC2,\n\t\t\tGlobalsTextureHandler.UV_VARYING\n\t\t);\n\n\t\tshaders_collection_controller.add_definitions(\n\t\t\tnode,\n\t\t\t[particles_sim_uv_attrib_definition, particles_sim_uv_varying_definition],\n\t\t\tShaderName.VERTEX\n\t\t);\n\t\tshaders_collection_controller.add_definitions(node, [particles_sim_uv_varying_definition], ShaderName.FRAGMENT);\n\n\t\tshaders_collection_controller.add_body_lines(\n\t\t\tnode,\n\t\t\t[`${GlobalsTextureHandler.UV_VARYING} = ${GlobalsTextureHandler.UV_ATTRIB}`],\n\t\t\tShaderName.VERTEX\n\t\t);\n\t}\n}\n","// import lodash_flatten from 'lodash/flatten'\n// import lodash_map from 'lodash/map'\n\nimport {CoreGeometry} from '../Geometry';\nimport {CorePoint} from '../Point';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n\nexport class CoreGeometryUtilCurve {\n\tstatic accumulated_curve_point_indices(indices: number[]) {\n\t\tlet curve_point_indices: number[] = [];\n\t\tconst accumulated_curve_point_indices = [];\n\t\tlet last_index_added: number | null = null;\n\n\t\t// indices.forEach((index, i) => {\n\t\tlet index: number;\n\t\tfor (let i = 0; i < indices.length; i++) {\n\t\t\tif (i % 2 === 1) {\n\t\t\t\tindex = indices[i];\n\t\t\t\tconst previous_index = indices[i - 1];\n\n\t\t\t\t// if the last added index, from the previous segment\n\t\t\t\t// is the same as the start of the current segment (indices[i-1])\n\t\t\t\t// then this is part of the same curve\n\t\t\t\tif (last_index_added == null || previous_index === last_index_added) {\n\t\t\t\t\t// add the first point\n\t\t\t\t\tif (curve_point_indices.length === 0) {\n\t\t\t\t\t\tcurve_point_indices.push(previous_index);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve_point_indices.push(index);\n\t\t\t\t\tlast_index_added = index;\n\t\t\t\t} else {\n\t\t\t\t\t// otherwise we create a new curve\n\t\t\t\t\taccumulated_curve_point_indices.push(curve_point_indices);\n\t\t\t\t\t//current_points = lodash_map curve_point_indices, (index)->points[index]\n\t\t\t\t\t//curve_point_indices_groups.push(current_points)\n\t\t\t\t\t//this._create_curve_from_points(current_points)\n\n\t\t\t\t\t// and reset the array\n\t\t\t\t\tcurve_point_indices = [previous_index, index];\n\t\t\t\t\tlast_index_added = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// also create with the remaining ones\n\t\taccumulated_curve_point_indices.push(curve_point_indices);\n\n\t\treturn accumulated_curve_point_indices;\n\t}\n\n\tstatic create_line_segment_geometry(\n\t\tpoints: CorePoint[],\n\t\tindices: number[],\n\t\tattrib_names: string[],\n\t\tattrib_sizes_by_name: Dictionary<number>\n\t) {\n\t\t// let new_positions: number[] = []\n\t\tconst new_indices: number[] = [];\n\n\t\tconst new_attribute_values_by_name: Dictionary<number[]> = {};\n\t\tattrib_names.forEach((attrib_name) => {\n\t\t\tnew_attribute_values_by_name[attrib_name] = [];\n\t\t});\n\n\t\tindices.forEach((index, i) => {\n\t\t\tconst point = points[index];\n\t\t\t// const position = point.position();\n\t\t\t// new_positions.push(position.toArray());\n\t\t\tattrib_names.forEach((attrib_name) => {\n\t\t\t\tlet attrib_value = point.attrib_value(attrib_name);\n\t\t\t\tconst attrib_size = attrib_sizes_by_name[attrib_name];\n\t\t\t\tif (attrib_size > 1) {\n\t\t\t\t\tattrib_value = attrib_value.toArray();\n\t\t\t\t} else {\n\t\t\t\t\tattrib_value = [attrib_value];\n\t\t\t\t}\n\t\t\t\tattrib_value.forEach((v: number) => {\n\t\t\t\t\tnew_attribute_values_by_name[attrib_name].push(v);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (i > 0) {\n\t\t\t\tnew_indices.push(i - 1);\n\t\t\t\tnew_indices.push(i);\n\t\t\t}\n\t\t});\n\n\t\t// new_positions = lodash_flatten(new_positions)\n\t\tconst geometry = new BufferGeometry();\n\n\t\tattrib_names.forEach((attrib_name) => {\n\t\t\tconst attrib_size = attrib_sizes_by_name[attrib_name];\n\t\t\tconst values = new_attribute_values_by_name[attrib_name];\n\t\t\tgeometry.setAttribute(attrib_name, new Float32BufferAttribute(values, attrib_size));\n\t\t});\n\n\t\tgeometry.setIndex(new_indices);\n\t\treturn geometry;\n\t}\n\n\tstatic line_segment_to_geometries(geometry: BufferGeometry) {\n\t\tconst geometries: BufferGeometry[] = [];\n\t\tconst core_geometry = new CoreGeometry(geometry);\n\t\tconst attrib_names = core_geometry.attrib_names();\n\t\tconst points = core_geometry.points();\n\t\tconst indices = (geometry.getIndex()?.array as number[]) || [];\n\n\t\tconst accumulated_curve_point_indices = this.accumulated_curve_point_indices(indices);\n\t\tconsole.log(indices, accumulated_curve_point_indices);\n\n\t\tif (accumulated_curve_point_indices.length > 0) {\n\t\t\tconst attribute_sizes_by_name = core_geometry.attrib_sizes();\n\n\t\t\taccumulated_curve_point_indices.forEach((curve_point_indices, i) => {\n\t\t\t\tgeometry = this.create_line_segment_geometry(\n\t\t\t\t\tpoints,\n\t\t\t\t\tcurve_point_indices,\n\t\t\t\t\tattrib_names,\n\t\t\t\t\tattribute_sizes_by_name\n\t\t\t\t);\n\t\t\t\tgeometries.push(geometry);\n\t\t\t});\n\t\t}\n\n\t\treturn geometries;\n\t}\n}\n","// import {Scene} from 'three/src/scenes/Scene'\n// import {CoreGraph} from '../../core/graph/CoreGraph'\n// import {CorePerformance} from '../../core/performance/CorePerformance'\n// import {Cooker} from '../../core/graph/Cooker'\n// import {EmitPayload} from '../../core/graph/NodeScene'\n// import {BaseNode} from '../nodes/_Base'\n\n// import {CoreObject} from '../../core/Object';\n// import {Debug} from './concerns/Debug';\n// import {Env} from './concerns/Env'\n// import {ExpressionRegister} from './concerns/ExpressionRegister';\n// import {Frame} from './concerns/Frame';\n// import {GraphMixin} from './concerns/Graph';\n// import {Js} from './concerns/Js';\n// import {Json} from './concerns/Json';\n// import {LifeCycle} from './concerns/LifeCycle';\n// import {Loading} from './concerns/Loading';\n// import {Name} from './concerns/Name';\n// import {Nodes} from './concerns/Nodes';\n// import {ObjectMixin} from './concerns/Object';\n// import {PickerNodes} from './concerns/PickerNodes';\n// import {PerformanceMixin} from './concerns/Performance';\n// import {Renderer} from './concerns/Renderer';\n// import {Store} from './concerns/Store';\n// import {Uniforms} from './concerns/Uniforms';\n\n// import {CubeCamerasController} from './utils/CubeCamerasController';\nimport {CamerasController} from './utils/CamerasController';\nimport {Cooker} from './utils/Cooker';\nimport {CoreGraph} from '../../core/graph/CoreGraph';\nimport {CookController} from './utils/CookController';\nimport {DispatchController} from './utils/DispatchController';\nimport {SceneEventsController} from './utils/events/EventsController';\nimport {LifeCycleController} from './utils/LifeCycleController';\nimport {LoadingController} from './utils/LoadingController';\nimport {ExpressionsController} from './utils/ExpressionsController';\nimport {MissingReferencesController} from './utils/MissingReferencesController';\nimport {NodesController} from './utils/NodesController';\nimport {CorePerformance} from '../../core/performance/CorePerformance';\nimport {TimeController} from './utils/TimeController';\nimport {PolySceneSerializer} from './utils/Serializer';\nimport {UniformsController} from './utils/UniformsController';\nimport {WebGLController} from './utils/WebGLController';\n\nimport {Scene} from 'three/src/scenes/Scene';\n\nexport class PolyScene {\n\tprotected _default_scene = new Scene();\n\tget default_scene() {\n\t\treturn this._default_scene;\n\t}\n\t_uuid!: string;\n\tset_uuid(uuid: string) {\n\t\treturn (this._uuid = uuid);\n\t}\n\tget uuid() {\n\t\treturn this._uuid;\n\t}\n\t_name: string | undefined;\n\tset_name(name: string) {\n\t\treturn (this._name = name);\n\t}\n\tget name() {\n\t\treturn this._name;\n\t}\n\n\tprotected _cameras_controller = new CamerasController(this);\n\tget cameras_controller() {\n\t\treturn this._cameras_controller;\n\t}\n\n\tprivate _cooker = new Cooker(this);\n\tget cooker() {\n\t\treturn this._cooker;\n\t}\n\n\t// private _cube_cameras_controller: CubeCamerasController;\n\t// get cube_cameras_controller() {\n\t// \treturn (this._cube_cameras_controller = this._cube_cameras_controller || new CubeCamerasController(this));\n\t// }\n\tpublic readonly cook_controller = new CookController();\n\tasync wait_for_cooks_completed() {\n\t\treturn this.cook_controller.wait_for_cooks_completed();\n\t}\n\n\tprivate _dispatch_controller: DispatchController | undefined;\n\tget dispatch_controller() {\n\t\treturn (this._dispatch_controller = this._dispatch_controller || new DispatchController(this));\n\t}\n\tprivate _events_controller: SceneEventsController | undefined;\n\tget events_controller() {\n\t\treturn (this._events_controller = this._events_controller || new SceneEventsController(this));\n\t}\n\n\tprivate _graph = new CoreGraph();\n\tget graph() {\n\t\treturn this._graph;\n\t}\n\n\tprivate _lifecycle_controller: LifeCycleController | undefined;\n\tget lifecycle_controller() {\n\t\treturn (this._lifecycle_controller = this._lifecycle_controller || new LifeCycleController(this));\n\t}\n\tprivate _loading_controller: LoadingController | undefined;\n\tget loading_controller() {\n\t\treturn (this._loading_controller = this._loading_controller || new LoadingController(this));\n\t}\n\n\tprivate _missing_expression_references_controller: MissingReferencesController = new MissingReferencesController();\n\tget missing_expression_references_controller() {\n\t\treturn this._missing_expression_references_controller;\n\t}\n\tprivate _expressions_controller: ExpressionsController = new ExpressionsController();\n\tget expressions_controller() {\n\t\treturn this._expressions_controller;\n\t}\n\n\tprotected _nodes_controller = new NodesController(this);\n\tget nodes_controller() {\n\t\treturn this._nodes_controller;\n\t}\n\n\tprotected _performance: CorePerformance | undefined;\n\tget performance() {\n\t\treturn (this._performance = this._performance || new CorePerformance());\n\t}\n\n\t//\n\t//\n\t// time\n\t//\n\t//\n\tprotected _time_controller = new TimeController(this);\n\tget time_controller() {\n\t\treturn this._time_controller;\n\t}\n\tset_frame(frame: number) {\n\t\tthis.time_controller.set_frame(frame);\n\t}\n\tget frame() {\n\t\treturn this.time_controller.frame;\n\t}\n\tget time() {\n\t\treturn this.time_controller.time;\n\t}\n\tget frame_range() {\n\t\treturn this.time_controller.frame_range;\n\t}\n\tplay() {\n\t\tthis.time_controller.play();\n\t}\n\tpause() {\n\t\tthis.time_controller.pause();\n\t}\n\n\t//\n\t//\n\t// serializer\n\t//\n\t//\n\tprivate _serializer: PolySceneSerializer | undefined;\n\tprivate get serializer() {\n\t\treturn (this._serializer = this._serializer || new PolySceneSerializer(this));\n\t}\n\tto_json() {\n\t\treturn this.serializer.to_json();\n\t}\n\n\t//\n\t//\n\t// uniforms\n\t//\n\t//\n\tprivate _uniforms_controller: UniformsController | undefined;\n\tget uniforms_controller() {\n\t\treturn (this._uniforms_controller = this._uniforms_controller || new UniformsController(this));\n\t}\n\n\t//\n\t//\n\t// webgl\n\t//\n\t//\n\tprivate _webgl_controller: WebGLController | undefined;\n\tget webgl_controller() {\n\t\treturn (this._webgl_controller = this._webgl_controller || new WebGLController());\n\t}\n\n\t//\n\t//\n\t// constructor\n\t//\n\t//\n\tconstructor() {\n\t\t// this.mark_as_loaded()\n\t\tthis._graph.set_scene(this);\n\t\t// this.time_controller.init();\n\t\tthis.nodes_controller.init();\n\t}\n\n\t//\n\t//\n\t// cooker\n\t//\n\t//\n\tbatch_update(callback: () => void) {\n\t\tthis._cooker.block();\n\n\t\tcallback();\n\n\t\tthis._cooker.unblock();\n\t}\n\n\t//\n\t//\n\t// nodes\n\t//\n\t//\n\tnode(path: string) {\n\t\treturn this.nodes_controller.node(path);\n\t}\n\tget root() {\n\t\treturn this.nodes_controller.root;\n\t}\n}\n","import {TypedEventNode, BaseEventNodeType} from './_Base';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ACCEPTED_MOUSE_EVENT_TYPES} from '../../scene/utils/events/MouseEventsController';\nimport {BaseCameraObjNodeType} from '../obj/_BaseCamera';\nimport {BaseNodeType} from '../_Base';\nimport {BaseParamType} from '../../params/_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass MouseEventParamsConfig extends NodeParamsConfig {\n\tactive = ParamConfig.BOOLEAN(true, {\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tMouseEventNode.PARAM_CALLBACK_toggle_active(node as MouseEventNode);\n\t\t},\n\t});\n}\nconst ParamsConfig = new MouseEventParamsConfig();\n\nexport class MouseEventNode extends TypedEventNode<MouseEventParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'mouse_event';\n\t}\n\tinitialize_node() {\n\t\t// TODO: do not use GL connection Types here\n\t\tthis.io.outputs.set_named_output_connection_points(\n\t\t\tACCEPTED_MOUSE_EVENT_TYPES.map((event_type) => {\n\t\t\t\treturn new TypedNamedConnectionPoint(event_type, ConnectionPointType.BOOL);\n\t\t\t})\n\t\t);\n\n\t\tthis.lifecycle.add_on_add_hook(() => {\n\t\t\tthis.scene.events_controller.register_event_node(this);\n\t\t});\n\t\tthis.lifecycle.add_delete_hook(() => {\n\t\t\tthis.scene.events_controller.unregister_event_node(this);\n\t\t});\n\t}\n\n\tprocess_event(event: MouseEvent, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {\n\t\tif (!this.pv.active) {\n\t\t\treturn;\n\t\t}\n\t\tconst index = this.io.outputs.get_output_index(event.type);\n\t\tif (index >= 0) {\n\t\t\tconst connections = this.io.connections.output_connections();\n\t\t\tconst current_connections = connections.filter((connection) => connection.output_index == index);\n\t\t\tconst nodes: BaseEventNodeType[] = current_connections.map(\n\t\t\t\t(connection) => connection.node_dest\n\t\t\t) as BaseEventNodeType[];\n\t\t\tfor (let node of nodes) {\n\t\t\t\tnode.process_event(event, canvas, camera_node);\n\t\t\t}\n\t\t}\n\t}\n\n\t_update_register() {\n\t\tif (this.pv.active) {\n\t\t\tthis.scene.events_controller.register_event_node(this);\n\t\t} else {\n\t\t\tthis.scene.events_controller.unregister_event_node(this);\n\t\t}\n\t}\n\tstatic PARAM_CALLBACK_toggle_active(node: MouseEventNode) {\n\t\tnode._update_register();\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\n\nexport class BaseState {\n\tconstructor(protected node: BaseNodeType) {}\n}\n","import {BaseNodeType} from '../_Base';\nimport {NodeUIDataJson} from './UIData';\nimport {TypedNamedConnectionPointData} from './connections/NamedConnectionPoint';\nimport {ConnectionPointType} from './connections/ConnectionPointType';\n\nexport interface NodeSerializerData {\n\tname: string;\n\ttype: string;\n\tgraph_node_id: string;\n\tis_dirty: boolean;\n\tui_data_json: NodeUIDataJson;\n\terror_message: string | undefined;\n\tchildren: string[];\n\tinputs: Array<string | undefined>;\n\tinput_connection_output_indices: Array<number | undefined> | undefined;\n\tnamed_input_connections: TypedNamedConnectionPointData<ConnectionPointType>[];\n\tnamed_output_connections: TypedNamedConnectionPointData<ConnectionPointType>[];\n\tparam_ids: string[];\n\t// spare_params: Dictionary<string>;\n\toverride_clonable_state: boolean;\n\tinputs_clonable_state_with_override: boolean[];\n\tflags?: {\n\t\t//has_display: this.has_display_flag()\n\t\tdisplay?: boolean;\n\t\tbypass?: boolean;\n\t};\n\tselection?: string[];\n}\n\nexport class NodeSerializer {\n\tconstructor(private node: BaseNodeType) {}\n\n\t// serialize() {\n\t// \treturn this.to_json();\n\t// }\n\n\t// TODO: find a way to not re-create a json everytime\n\tto_json(include_param_components: boolean = false): NodeSerializerData {\n\t\t// const spare_params_json_by_name = {};\n\t\t// lodash_each(this.node.spare_param_names(), param_name=> {\n\t\t// \tconst param = this.node.spare_param(param_name);\n\t\t// \tspare_params_json_by_name[param_name] = param.graph_node_id;\n\t\t// });\n\n\t\tconst data = {\n\t\t\tname: this.node.name,\n\t\t\ttype: this.node.type,\n\t\t\tgraph_node_id: this.node.graph_node_id,\n\t\t\tis_dirty: this.node.is_dirty,\n\t\t\tui_data_json: this.node.ui_data.to_json(),\n\t\t\terror_message: this.node.states.error.message,\n\t\t\tchildren: this.children_ids(),\n\t\t\tinputs: this.input_ids(),\n\t\t\tinput_connection_output_indices: this.connection_input_indices(),\n\t\t\tnamed_input_connections: this.named_input_connections(),\n\t\t\tnamed_output_connections: this.named_output_connections(),\n\t\t\tparam_ids: this.to_json_params(include_param_components),\n\t\t\t// spare_params: this.to_json_spare_params(include_param_components),\n\t\t\toverride_clonable_state: this.node.io.inputs.override_clonable_state(),\n\t\t\tinputs_clonable_state_with_override: this.node.io.inputs.inputs_clonable_state_with_override(),\n\t\t\tflags: {\n\t\t\t\t//has_display: this.has_display_flag()\n\t\t\t\tdisplay: this.node.flags?.display?.active,\n\t\t\t\tbypass: this.node.flags?.bypass?.active,\n\t\t\t},\n\t\t\tselection: undefined as string[] | undefined,\n\t\t};\n\n\t\tif (this.node.children_allowed() && this.node.children_controller) {\n\t\t\tdata['selection'] = this.node.children_controller.selection.to_json();\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tchildren_ids(): string[] {\n\t\treturn this.node.children().map((node) => node.graph_node_id);\n\t}\n\n\tinput_ids(): (string | undefined)[] {\n\t\treturn this.node.io.inputs.inputs().map((node) => (node != null ? node.graph_node_id : undefined));\n\t}\n\n\tconnection_input_indices() {\n\t\treturn this.node.io.connections\n\t\t\t.input_connections()\n\t\t\t?.map((connection) => (connection != null ? connection.output_index : undefined));\n\t}\n\tnamed_input_connections() {\n\t\treturn this.node.io.inputs.named_input_connection_points.map((i) => i.to_json());\n\t}\n\tnamed_output_connections() {\n\t\treturn this.node.io.outputs.named_output_connection_points.map((o) => o.to_json());\n\t}\n\n\tto_json_params_from_names(param_names: string[], include_components: boolean = false) {\n\t\treturn param_names.map((param_name) => {\n\t\t\treturn this.node.params.get(param_name)!.graph_node_id;\n\t\t});\n\t\t// const params_json_by_name: Dictionary<string> = {};\n\t\t// for (let param_name of param_names) {\n\t\t// \tconst param = this.node.params.get(param_name);\n\t\t// \tif (param) {\n\t\t// \t\tparams_json_by_name[param_name] = param.graph_node_id;\n\n\t\t// \t\tif (include_components && param.is_multiple && param.components) {\n\t\t// \t\t\tfor (let component of param.components) {\n\t\t// \t\t\t\tparams_json_by_name[component.name] = component.graph_node_id;\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t\t// return params_json_by_name;\n\t}\n\tto_json_params(include_components: boolean = false) {\n\t\treturn this.to_json_params_from_names(this.node.params.names, include_components);\n\t}\n\t// to_json_params_without_components(){\n\t// \treturn this.to_json_params(false)\n\t// }\n\t// to_json_params_with_components(){\n\t// \treturn this.to_json_params(true)\n\t// }\n\t// to_json_spare_params(include_components: boolean = false) {\n\t// \treturn this.to_json_params_from_names(this.node.params.spare_names, include_components);\n\t// }\n}\n","import {BooleanParam} from '../Boolean';\nimport {ButtonParam} from '../Button';\nimport {ColorParam} from '../Color';\nimport {FloatParam} from '../Float';\nimport {FolderParam} from '../Folder';\nimport {IntegerParam} from '../Integer';\nimport {OperatorPathParam} from '../OperatorPath';\nimport {RampParam} from '../Ramp';\nimport {SeparatorParam} from '../Separator';\nimport {StringParam} from '../String';\nimport {Vector2Param} from '../Vector2';\nimport {Vector3Param} from '../Vector3';\nimport {Vector4Param} from '../Vector4';\n\nimport {ParamType} from '../../poly/ParamType';\n\ntype ParamClassMapType = {[key in ParamType]: any};\nexport const ParamConstructorByType: ParamClassMapType = {\n\t[ParamType.BOOLEAN]: BooleanParam,\n\t[ParamType.BUTTON]: ButtonParam,\n\t[ParamType.COLOR]: ColorParam,\n\t[ParamType.FLOAT]: FloatParam,\n\t[ParamType.FOLDER]: FolderParam,\n\t[ParamType.INTEGER]: IntegerParam,\n\t[ParamType.OPERATOR_PATH]: OperatorPathParam,\n\t[ParamType.RAMP]: RampParam,\n\t[ParamType.SEPARATOR]: SeparatorParam,\n\t[ParamType.STRING]: StringParam,\n\t[ParamType.VECTOR2]: Vector2Param,\n\t[ParamType.VECTOR3]: Vector3Param,\n\t[ParamType.VECTOR4]: Vector4Param,\n};\n","import {BaseParamType} from '../_Base';\nimport {ExpressionManager} from '../../expressions/ExpressionManager';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {CoreEntity} from '../../../core/geometry/Entity';\nimport {ParamType} from '../../poly/ParamType';\nimport {ParamValuesTypeMap} from '../types/ParamValuesTypeMap';\nimport {CoreObject} from '../../../core/geometry/Object';\n\n// type ParamTypeElem = ParamType;\ntype EntityCallback<T extends ParamType> = (\n\tentity: CoreEntity,\n\tvalue: ParamValuesTypeMap[T] | any /*TODO: typescript: any is used here mostly to compile*/\n) => void;\ntype PointEntityCallback<T extends ParamType> = (\n\tentity: CorePoint,\n\tvalue: ParamValuesTypeMap[T] | any /*TODO: typescript: any is used here mostly to compile*/\n) => void;\ntype ObjectEntityCallback<T extends ParamType> = (\n\tentity: CoreObject,\n\tvalue: ParamValuesTypeMap[T] | any /*TODO: typescript: any is used here mostly to compile*/\n) => void;\n\nexport class ExpressionController<T extends ParamType> {\n\tprotected _expression: string | undefined;\n\tprotected _entities: CoreEntity[] | undefined;\n\tprotected _entity_callback: EntityCallback<T> | undefined;\n\tprotected _manager: ExpressionManager | undefined;\n\t// private _reset_bound = this.reset.bind(this);\n\tconstructor(protected param: BaseParamType) {\n\t\t// this.param.dirty_controller.add_post_dirty_hook('expression_controller_reset', this._reset_bound);\n\t}\n\t// remove_dirty_hook() {\n\t// \t// this.param.dirty_controller.remove_post_dirty_hook('expression_controller_reset');\n\t// }\n\n\tget active() {\n\t\treturn this._expression != null;\n\t}\n\tget expression() {\n\t\treturn this._expression;\n\t}\n\tget is_errored() {\n\t\tif (this._manager) {\n\t\t\treturn this._manager.is_errored;\n\t\t}\n\t\treturn false;\n\t}\n\tget error_message() {\n\t\tif (this._manager) {\n\t\t\treturn this._manager.error_message;\n\t\t}\n\t\treturn null;\n\t}\n\tget requires_entities() {\n\t\treturn this.param.options.is_expression_for_entities;\n\t}\n\t// private reset() {\n\t// \tthis._manager?.clear_error();\n\t// }\n\n\tset_expression(expression: string | undefined, set_dirty: boolean = true) {\n\t\tthis.param.scene.missing_expression_references_controller.deregister_param(this.param);\n\t\tthis.param.scene.expressions_controller.deregister_param(this.param);\n\n\t\tif (this._expression != expression) {\n\t\t\tthis._expression = expression;\n\n\t\t\tif (this._expression) {\n\t\t\t\tthis._manager = this._manager || new ExpressionManager(this.param);\n\t\t\t\tthis._manager.parse_expression(this._expression);\n\t\t\t} else {\n\t\t\t\tthis._manager?.reset();\n\t\t\t}\n\n\t\t\tif (set_dirty) {\n\t\t\t\tthis.param.set_dirty();\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate_from_method_dependency_name_change() {\n\t\tif (this._manager && this.active) {\n\t\t\tthis._manager.update_from_method_dependency_name_change();\n\t\t}\n\t}\n\n\tasync compute_expression() {\n\t\tif (this._manager && this.active) {\n\t\t\tconst result = await this._manager.compute_function();\n\t\t\treturn result;\n\t\t}\n\t}\n\tprivate async compute_expression_for_entities(entities: CoreEntity[], callback: EntityCallback<T>) {\n\t\tthis.set_entities(entities, callback);\n\t\tawait this.compute_expression();\n\t\tif (this._manager?.error_message) {\n\t\t\tthis.param.node.states.error.set(`expression evalution error: ${this._manager?.error_message}`);\n\t\t}\n\n\t\tthis.reset_entities();\n\t}\n\tcompute_expression_for_points(entities: CorePoint[], callback: PointEntityCallback<T>) {\n\t\treturn this.compute_expression_for_entities(entities, callback as EntityCallback<T>);\n\t}\n\tcompute_expression_for_objects(entities: CoreObject[], callback: ObjectEntityCallback<T>) {\n\t\treturn this.compute_expression_for_entities(entities, callback as EntityCallback<T>);\n\t}\n\tget entities() {\n\t\treturn this._entities;\n\t}\n\tget entity_callback() {\n\t\treturn this._entity_callback;\n\t}\n\tset_entities(entities: CoreEntity[], callback: EntityCallback<T>) {\n\t\tthis._entities = entities;\n\t\tthis._entity_callback = callback;\n\t}\n\treset_entities() {\n\t\tthis._entities = undefined;\n\t\tthis._entity_callback = undefined;\n\t}\n}\n","import lodash_isString from 'lodash/isString';\n\nimport jsep from 'jsep';\njsep.addUnaryOp('@');\n// self.jsep = jsep\nlet precedence = 10;\njsep.addBinaryOp('**', precedence);\n// precedence = 1\n// jsep.addBinaryOp('`', precedence)\n// const HOUDINI_QUOTE_CODE = 96; // houdini quote\n// const JSEP_COMPOUND = 'Compound'\nconst JSEP_IDENTIFIER = 'Identifier';\nconst JSEP_LITERAL = 'Literal';\n// const JSEP_BINARY_EXPRESSION = 'BynaryExpression'\nconst JSEP_CALL_EXPRESSION = 'CallExpression';\nconst STRING_EXPRESSION_SEPARATOR = '`';\n\nexport class ParsedTree {\n\tpublic node: jsep.Expression | undefined;\n\tpublic error_message: string | undefined;\n\n\tconstructor() {}\n\n\tparse_expression(string: string) {\n\t\ttry {\n\t\t\tthis.reset();\n\t\t\tthis.node = jsep(string);\n\t\t} catch (e) {\n\t\t\tconst message = `could not parse the expression '${string}' (error: ${e})`;\n\t\t\tthis.error_message = message;\n\t\t}\n\t}\n\tparse_expression_for_string_param(string: string) {\n\t\ttry {\n\t\t\tthis.reset();\n\n\t\t\tconst elements = ParsedTree.string_value_elements(string);\n\t\t\tconst nodes = [];\n\t\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\t\tconst element = elements[i];\n\t\t\t\tlet node;\n\t\t\t\tif (i % 2 == 1) {\n\t\t\t\t\tnode = jsep(element);\n\t\t\t\t} else {\n\t\t\t\t\tnode = {\n\t\t\t\t\t\ttype: JSEP_LITERAL,\n\t\t\t\t\t\tvalue: `'${element}'`,\n\t\t\t\t\t\traw: `'${element}'`,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tnodes.push(node);\n\t\t\t\t// nodes.push({\n\t\t\t\t// \ttype: JSEP_CALL_EXPRESSION,\n\t\t\t\t// \targuments: [node],\n\t\t\t\t// \tcallee: {\n\t\t\t\t// \t\ttype: JSEP_IDENTIFIER,\n\t\t\t\t// \t\tname: 'toString',\n\t\t\t\t// \t}\n\t\t\t\t// })\n\t\t\t}\n\t\t\t// let last_plus_node;\n\t\t\t// for(let i=0; i<(nodes.length-1); i++){\n\t\t\t// \tconst plus_node = {\n\t\t\t// \t\ttype: JSEP_BINARY_EXPRESSION,\n\t\t\t// \t\toperator: '+',\n\t\t\t// \t\tleft: last_plus_node || nodes[i],\n\t\t\t// \t\tright: nodes[i+1],\n\t\t\t// \t}\n\t\t\t// \tlast_plus_node = plus_node;\n\t\t\t// }\n\t\t\t// this.node = last_plus_node\n\t\t\tthis.node = (<unknown>{\n\t\t\t\ttype: JSEP_CALL_EXPRESSION,\n\t\t\t\targuments: nodes,\n\t\t\t\tcallee: {\n\t\t\t\t\ttype: JSEP_IDENTIFIER,\n\t\t\t\t\tname: 'str_concat',\n\t\t\t\t},\n\t\t\t}) as jsep.Compound;\n\t\t} catch (e) {\n\t\t\tconst message = `could not parse the expression '${string}' (error: ${e})`;\n\t\t\tthis.error_message = message;\n\t\t}\n\t}\n\n\tstatic string_value_elements(v: string): string[] {\n\t\tif (v != null) {\n\t\t\tif (lodash_isString(v)) {\n\t\t\t\treturn v.split(STRING_EXPRESSION_SEPARATOR);\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\t// static string_value_contains_expression(v:string): boolean{\n\t// \treturn ((this.string_value_elements(v).length - 1) % 2) === 0;\n\t// }\n\n\t// deep_parse_for_string_expressions(){\n\t// \t// for string expressions which have more than a single `<expr>` element\n\t// \t// pt_`@ptnum`\n\t// \t// `@ptnum`_pt\n\t// \t// pt_`@ptnum`_`1+1`\n\t// \tif(this.node.type == JSEP_COMPOUND){\n\t// \t\tconst args = this.node.body\n\t// \t\tlet arg;\n\t// \t\tfor(let i=0; i<args.length; i++){\n\t// \t\t\targ = args[i]\n\t// \t\t\tif(arg.type == JSEP_LITERAL){\n\t// \t\t\t\tconst arg_node = jsep(arg.value)\n\t// \t\t\t\targs[i] = arg_node\n\t// \t\t\t}\n\t// \t\t}\n\t// \t} else {\n\t// \t\t// for string expressions which havea single `<expr>` element\n\t// \t\t// `@ptnum`\n\t// \t\tif(this.node.type == JSEP_LITERAL){\n\t// \t\t\tconst raw = this.node.raw\n\t// \t\t\tconst first_char_code = raw.charCodeAt(0)\n\t// \t\t\tconst last_char_code = raw.charCodeAt(raw.length-1)\n\t// \t\t\tif(first_char_code == HOUDINI_QUOTE_CODE && last_char_code == HOUDINI_QUOTE_CODE){\n\t// \t\t\t\tthis.node = jsep(\"''+\"+this.node.value) // add the prefix ''+ to ensure we have a string as a result, and not a number\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tprivate reset() {\n\t\tthis.node = undefined;\n\t\tthis.error_message = undefined;\n\t}\n}\n","import {BaseNodeType} from '../engine/nodes/_Base';\nimport {BaseParamType} from '../engine/params/_Base';\nimport {CoreWalker} from './Walker';\n// import {NodeSimple} from '/Graph/NodeSimple'\n\n// import {NamedGraphNodeClass} from './graph/NamedGraphNode'\ntype NodeOrParam = BaseNodeType | BaseParamType;\n\nexport class DecomposedPath {\n\tprivate index = -1;\n\tprivate path_elements: (string | null)[] = [];\n\tprivate _named_nodes: (NodeOrParam | null)[] = [];\n\tprivate graph_node_ids: string[] = [];\n\tprivate node_element_by_graph_node_id: Dictionary<string> = {};\n\n\tconstructor() {\n\t\t// console.warn('create decomposed path');\n\t}\n\tadd_node(name: string, node: NodeOrParam) {\n\t\tthis.index += 1;\n\t\tif (name == node.name) {\n\t\t\tthis.named_nodes[this.index] = node;\n\t\t}\n\n\t\tthis.graph_node_ids[this.index] = node.graph_node_id;\n\t\tthis.node_element_by_graph_node_id[node.graph_node_id] = name;\n\t}\n\tadd_path_element(path_element: string) {\n\t\tthis.index += 1;\n\t\tthis.path_elements[this.index] = path_element;\n\t}\n\n\tget named_nodes() {\n\t\treturn this._named_nodes;\n\t}\n\n\tupdate_from_name_change(node: NodeOrParam) {\n\t\tconst named_graph_node_ids = this.named_nodes.map((n) => n?.graph_node_id);\n\n\t\tif (named_graph_node_ids.includes(node.graph_node_id)) {\n\t\t\tthis.node_element_by_graph_node_id[node.graph_node_id] = node.name;\n\t\t}\n\t}\n\n\tto_path(): string {\n\t\tconst elements = new Array<string>(this.index);\n\t\tfor (let i = 0; i <= this.index; i++) {\n\t\t\tconst node = this.named_nodes[i];\n\t\t\tif (node) {\n\t\t\t\telements[i] = this.node_element_by_graph_node_id[node.graph_node_id];\n\t\t\t} else {\n\t\t\t\tconst path_element = this.path_elements[i];\n\t\t\t\tif (path_element) {\n\t\t\t\t\telements[i] = path_element;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet joined_path = elements.join(CoreWalker.SEPARATOR);\n\t\t// if the first character is a letter, we need to prefix with /\n\t\tconst first_char = joined_path[0];\n\t\tif (first_char) {\n\t\t\tif (!CoreWalker.NON_LETTER_PREFIXES.includes(first_char)) {\n\t\t\t\tjoined_path = `${CoreWalker.SEPARATOR}${joined_path}`;\n\t\t\t}\n\t\t}\n\n\t\treturn joined_path;\n\t}\n}\n","// https://gist.github.com/gre/1650294\n\n// const ease_in = function(t:number, power:number){return Math.pow(t, power)}\n// const ease_on = function(t:number, power:number){return 1 - Math.abs(Math.pow(t-1, power))}\n// const ease_ion = function(t:number, power:number){return t<.5 ? ease_i(power)(t*2)/2 : ease_o(power)(t*2 - 1)/2+0.5}\n\nconst ease_i = function(power:number){return function(t:number){return Math.pow(t, power)}};\nconst ease_o = function(power:number){return function(t:number){return 1 - Math.abs(Math.pow(t-1, power))}};\nconst ease_io = function(power:number){return function(t:number){return t<.5 ? ease_i(power)(t*2)/2 : ease_o(power)(t*2 - 1)/2+0.5}}\n\nexport const Easing = {\n  linear: ease_io(1),\n\n  ease_i: function(t:number, power:number){ return ease_i(power)(t) },\n  ease_o: function(t:number, power:number){ return ease_o(power)(t) },\n  ease_io: function(t:number, power:number){ return ease_io(power)(t) },\n\n  ease_i2: ease_i(2),\n  ease_o2: ease_o(2),\n  ease_io2: ease_io(2),\n\n  ease_i3: ease_io(3),\n  ease_o3: ease_io(3),\n  ease_io3: ease_io(3),\n\n  ease_i4: ease_io(4),\n  ease_o4: ease_io(4),\n  ease_io4: ease_io(4),\n  // easeInQuart: EaseIn(4),\n  // easeOutQuart: EaseOut(4),\n  // easeInOutQuart: EaseInOut(4),\n  // easeInQuint: EaseIn(5),\n  // easeOutQuint: EaseOut(5),\n  // easeInOutQuint: EaseInOut(5)\n\n  ease_i_sin: function(t:number){ return 1 + Math.sin(Math.PI / 2 * t - Math.PI / 2); },\n  ease_o_sin: function(t:number){ return Math.sin(Math.PI / 2 * t); },\n  ease_io_sin: function(t:number){ return (1 + Math.sin(Math.PI * t - Math.PI / 2)) / 2; },\n\n  ease_i_elastic: function (t:number) { return (.04 - .04 / t) * Math.sin(25 * t) + 1 },\n  ease_o_elastic: function (t:number) { return .04 * t / (--t) * Math.sin(25 * t) },\n  ease_io_elastic: function (t:number) { return (t -= .5) < 0 ? (.02 + .01 / t) * Math.sin(50 * t) : (.02 - .01 / t) * Math.sin(50 * t) + 1 }\n}\n\n// export class Easing {\n//   // no easing, no acceleration\n//   static linear(t:number):number{ return t }\n//   // accelerating from zero velocity\n//   static easeinquad (t:number):number{ return t*t }\n//   // decelerating to zero velocity\n//   static easeoutquad (t:number):number{ return t*(2-t) }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutquad (t:number):number{ return t<.5 ? 2*t*t : -1+(4-2*t)*t }\n//   // accelerating from zero velocity\n//   static easeincubic (t:number):number{ return t*t*t }\n//   // decelerating to zero velocity\n//   static easeoutcubic (t:number):number{ return (--t)*t*t+1 }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutcubic (t:number):number{ return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 }\n//   // accelerating from zero velocity\n//   static easeinquart (t:number):number{ return t*t*t*t }\n//   // decelerating to zero velocity\n//   static easeoutquart (t:number):number{ return 1-(--t)*t*t*t }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutquart (t:number):number{ return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t }\n//   // accelerating from zero velocity\n//   static easeinquint (t:number):number{ return t*t*t*t*t }\n//   // decelerating to zero velocity\n//   static easeoutquint (t:number):number{ return 1+(--t)*t*t*t*t }\n//   // acceleration until halfway, then deceleration\n//   static easeinoutquint (t:number):number{ return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\n// }","// import lodash_isArray from 'lodash/isArray'\n// import lodash_isString from 'lodash/isString'\n// import lodash_isBoolean from 'lodash/isBoolean';\nimport lodash_isNumber from 'lodash/isNumber';\nimport {TypedNumericParam} from './_Numeric';\nimport {ParamType} from '../poly/ParamType';\nimport {CoreString} from '../../core/String';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\n\nexport class FloatParam extends TypedNumericParam<ParamType.FLOAT> {\n\tstatic type() {\n\t\treturn ParamType.FLOAT;\n\t}\n\tget default_value_serialized() {\n\t\treturn this.default_value;\n\t}\n\tget raw_input_serialized() {\n\t\treturn this._raw_input;\n\t}\n\tget value_serialized() {\n\t\treturn this.value;\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.FLOAT],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.FLOAT]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.FLOAT], val2: ParamValuesTypeMap[ParamType.FLOAT]) {\n\t\treturn val1 == val2;\n\t}\n\tstatic convert(raw_val: ParamInitValuesTypeMap[ParamType.FLOAT]): number | null {\n\t\tif (lodash_isNumber(raw_val)) {\n\t\t\treturn raw_val;\n\t\t} else {\n\t\t\tif (CoreString.is_number(raw_val)) {\n\t\t\t\tconst parsed = parseFloat(raw_val);\n\t\t\t\tif (lodash_isNumber(parsed)) {\n\t\t\t\t\treturn parsed;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\tconvert(raw_val: ParamInitValuesTypeMap[ParamType.FLOAT]): number | null {\n\t\tconst result = FloatParam.convert(raw_val);\n\t\tif (result) {\n\t\t\treturn this.options.ensure_in_range(result);\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n}\n","// import {TypedParamVisitor} from './_Base';\nimport {TypedParam} from './_Base';\nimport {CoreWalker} from '../../core/Walker';\n\n// import {AsCodeOperatorPath} from './concerns/visitors/OperatorPath';\nimport {BaseNodeType} from '../nodes/_Base';\nimport {ParamType} from '../poly/ParamType';\n// import {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamEvent} from '../poly/ParamEvent';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport class OperatorPathParam extends TypedParam<ParamType.OPERATOR_PATH> {\n\tprivate _found_node: BaseNodeType | null = null;\n\n\tstatic type() {\n\t\treturn ParamType.OPERATOR_PATH;\n\t}\n\tget default_value_serialized() {\n\t\treturn this.default_value;\n\t}\n\tget raw_input_serialized() {\n\t\treturn `${this._raw_input}`;\n\t}\n\tget value_serialized() {\n\t\treturn `${this.value}`;\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.OPERATOR_PATH],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.OPERATOR_PATH]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic are_values_equal(\n\t\tval1: ParamValuesTypeMap[ParamType.OPERATOR_PATH],\n\t\tval2: ParamValuesTypeMap[ParamType.OPERATOR_PATH]\n\t) {\n\t\treturn val1 == val2;\n\t}\n\tget is_default(): boolean {\n\t\treturn this._value == this.default_value;\n\t}\n\tprotected process_raw_input() {\n\t\tthis._value = this._raw_input;\n\t\tthis.set_dirty();\n\t\tthis.emit_controller.emit(ParamEvent.VALUE_UPDATED);\n\t}\n\n\tprotected async process_computation() {\n\t\tconst path = this._value;\n\t\tlet node = null;\n\t\tconst path_non_empty = path != null && path !== '';\n\n\t\tif (path_non_empty) {\n\t\t\tnode = CoreWalker.find_node(this.node, path);\n\t\t\t// not sure I want the param to be errored,\n\t\t\t// as it may block the node, even if the param is not necessary\n\t\t\t// if (!node) {\n\t\t\t// \tthis.states.error.set('node not found');\n\t\t\t// }\n\t\t}\n\n\t\tif (this._found_node !== node) {\n\t\t\tconst dependent_on_found_node = this.options.dependent_on_found_node();\n\n\t\t\tif (this._found_node) {\n\t\t\t\tif (dependent_on_found_node) {\n\t\t\t\t\tthis.remove_graph_input(this._found_node);\n\t\t\t\t} else {\n\t\t\t\t\t// this._found_node.remove_param_referree(this) // TODO: typescript\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._found_node = node;\n\t\t\tif (node) {\n\t\t\t\tconst expected_context = this.options.node_selection_context;\n\t\t\t\tconst node_context = node.parent?.children_controller?.context;\n\t\t\t\tif (expected_context == node_context || expected_context == null) {\n\t\t\t\t\tif (dependent_on_found_node) {\n\t\t\t\t\t\tthis.add_graph_input(node);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// this._found_node.add_param_referree(this) // TODO: typescript\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set(\n\t\t\t\t\t\t`node context is ${expected_context} but the params expects a ${node_context}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} // else {\n\t\t\t// \tif (path_non_empty) {\n\t\t\t// \t\tthis.states.error.set('node not found');\n\t\t\t// \t}\n\t\t\t// }\n\t\t\tthis.options.execute_callback();\n\t\t}\n\t\tthis.remove_dirty_state();\n\t}\n\n\tfound_node() {\n\t\treturn this._found_node;\n\t}\n}\n","import {BaseEventsController} from './_BaseEventsController';\nimport {MouseEventNode} from '../../../nodes/event/MouseEvent';\n\n// https://developer.mozilla.org/en-US/docs/Web/Events\nenum MouseEventType {\n\tauxclick = 'auxclick',\n\tclick = 'click',\n\tcontextmenu = 'contextmenu',\n\tdblclick = 'dblclick',\n\tmousedown = 'mousedown',\n\tmouseenter = 'mouseenter',\n\tmouseleave = 'mouseleave',\n\tmousemove = 'mousemove',\n\tmouseover = 'mouseover',\n\tmouseout = 'mouseout',\n\tmouseup = 'mouseup',\n\tpointerlockchange = 'pointerlockchange',\n\tpointerlockerror = 'pointerlockerror',\n\tselect = 'select',\n\twheel = 'wheel',\n}\nexport const ACCEPTED_MOUSE_EVENT_TYPES: MouseEventType[] = [\n\tMouseEventType.auxclick,\n\tMouseEventType.click,\n\tMouseEventType.contextmenu,\n\tMouseEventType.dblclick,\n\tMouseEventType.mousedown,\n\tMouseEventType.mouseenter,\n\tMouseEventType.mouseleave,\n\tMouseEventType.mousemove,\n\tMouseEventType.mouseover,\n\tMouseEventType.mouseout,\n\tMouseEventType.mouseup,\n\tMouseEventType.pointerlockchange,\n\tMouseEventType.pointerlockerror,\n\tMouseEventType.select,\n\tMouseEventType.wheel,\n];\n\nexport class MouseEventsController extends BaseEventsController<MouseEvent, MouseEventNode> {\n\taccepts_event(event: MouseEvent) {\n\t\treturn ACCEPTED_MOUSE_EVENT_TYPES.includes(event.type as MouseEventType);\n\t}\n}\n","import {BaseNodeType} from '../../../nodes/_Base';\nimport {BaseParamType} from '../../../params/_Base';\n\nimport {NodeJsonImporter} from './Node';\n// import {BaseNodeObjJsonImporter} from './node/Obj';\n// import {BaseNodeSopSubnetworkJsonImporter} from './node/Subnetwork';\n\nimport {ParamJsonImporter} from './Param';\nimport {ParamMultipleJsonImporter} from './param/Multiple';\nimport {ParamStringJsonImporter} from './param/String';\nimport {ParamRampJsonImporter} from './param/Ramp';\n// import {TypedObjNode} from '../../../nodes/obj/_Base';\nimport {TypedMultipleParam} from '../../../params/_Multiple';\nimport {StringParam} from '../../../params/String';\nimport {RampParam} from '../../../params/Ramp';\n\nexport class JsonImportDispatcher {\n\tstatic dispatch_node(node: BaseNodeType) {\n\t\t// if (node instanceof TypedObjNode) {\n\t\t// \treturn new BaseNodeObjJsonImporter(node);\n\t\t// }\n\t\treturn new NodeJsonImporter(node);\n\t}\n\n\tstatic dispatch_param(param: BaseParamType) {\n\t\tif (param instanceof TypedMultipleParam) {\n\t\t\treturn new ParamMultipleJsonImporter(param);\n\t\t}\n\t\tif (param instanceof StringParam) {\n\t\t\treturn new ParamStringJsonImporter(param);\n\t\t}\n\t\tif (param instanceof RampParam) {\n\t\t\treturn new ParamRampJsonImporter(param);\n\t\t}\n\t\treturn new ParamJsonImporter(param);\n\t}\n}\n\n// export class CodeImporterVisitor {\n// \tstatic node(node: BaseNode): NodeCodeImporter {\n// \t\treturn new NodeCodeImporter(node);\n// \t}\n// \tstatic node_obj(node: BaseNode) {\n// \t\treturn new BaseNodeObjCodeImporter(node);\n// \t}\n// \tstatic node_sop_subnetwork(node: BaseNode) {\n// \t\treturn new BaseNodeSopSubnetworkCodeImporter(node);\n// \t}\n\n// \tstatic visit_param(param: BaseParam) {\n// \t\treturn new ParamCodeImporter(param);\n// \t}\n// \tstatic param_multiple(param: BaseParam) {\n// \t\treturn new ParamMultipleCodeImporter(param);\n// \t}\n// \tstatic param_numeric(param: BaseParam) {\n// \t\treturn new ParamNumericCodeImporter(param);\n// \t}\n// \tstatic param_operator_path(param: BaseParam) {\n// \t\treturn new ParamOperatorPathCodeImporter(param);\n// \t}\n// \tstatic param_string(param: BaseParam) {\n// \t\treturn new ParamStringCodeImporter(param);\n// \t}\n// \tstatic param_ramp(param: BaseParam) {\n// \t\treturn new ParamRampCodeImporter(param);\n// \t}\n// }\n","import {BaseNodeType} from '../../_Base';\n\ntype FlagHookCallback = () => void;\n\nexport class BaseFlag {\n\t// protected _available_states: [boolean, boolean] = [];\n\tprotected _state: boolean = true;\n\tprotected _hooks: FlagHookCallback[] | null = null;\n\tconstructor(protected node: BaseNodeType) {}\n\n\t// set_available_states(states: T[]) {}\n\tadd_hook(hook: FlagHookCallback) {\n\t\tthis._hooks = this._hooks || [];\n\t\tthis._hooks.push(hook);\n\t}\n\tprotected on_update() {}\n\tset(new_state: boolean) {\n\t\tif (this._state != new_state) {\n\t\t\tthis._state = new_state;\n\t\t\tthis.on_update();\n\t\t\tthis.run_hooks();\n\t\t}\n\t}\n\tget active() {\n\t\treturn this._state;\n\t}\n\ttoggle() {\n\t\tthis.set(!this._state);\n\t}\n\trun_hooks() {\n\t\tif (this._hooks) {\n\t\t\tfor (let hook of this._hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {GlobalsGlNode} from '../../Globals';\nimport {ConnectionPointType} from '../../../utils/connections/ConnectionPointType';\nimport {BaseGlNodeType} from '../../_Base';\nimport {ShadersCollectionController} from '../utils/ShadersCollectionController';\n\nexport abstract class GlobalsBaseController {\n\tprivate static __next_id: number = 0;\n\tprivate _id: number;\n\n\tconstructor() {\n\t\tthis._id = GlobalsBaseController.__next_id++;\n\t}\n\tid() {\n\t\treturn this._id;\n\t}\n\n\thandle_globals_node(\n\t\tglobals_node: GlobalsGlNode,\n\t\toutput_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t\t// definitions_by_shader_name: Map<ShaderName, BaseGLDefinition[]>,\n\t\t// body_lines_by_shader_name: Map<ShaderName, string[]>,\n\t\t// body_lines: string[],\n\t\t// dependencies: ShaderName[],\n\t\t// shader_name: ShaderName\n\t): void {}\n\n\tabstract read_attribute(\n\t\tnode: BaseGlNodeType,\n\t\tgl_type: ConnectionPointType,\n\t\tattrib_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t): string | undefined;\n}\n","import {TypedGLDefinition, GLDefinitionType} from './GLDefinition';\n\nexport class TypedGLDefinitionCollection<T extends GLDefinitionType> {\n\t_errored: boolean = false;\n\t_error_message: string | undefined;\n\n\tconstructor(private _definitions: TypedGLDefinition<T>[] = []) {}\n\n\tget errored() {\n\t\treturn this._errored;\n\t}\n\tget error_message() {\n\t\treturn this._error_message;\n\t}\n\n\tuniq(): TypedGLDefinition<T>[] {\n\t\tconst definitions_by_name: Map<string, TypedGLDefinition<T>> = new Map();\n\t\tconst names: string[] = [];\n\n\t\tfor (let definition of this._definitions) {\n\t\t\tif (!this._errored) {\n\t\t\t\tconst name = definition.name;\n\t\t\t\tconst existing = definitions_by_name.get(name);\n\t\t\t\tif (existing) {\n\t\t\t\t\tif (existing.data_type != definition.data_type) {\n\t\t\t\t\t\tthis._errored = true;\n\t\t\t\t\t\tthis._error_message = `attempt to create ${definition.name} with types ${definition.data_type}`;\n\t\t\t\t\t\tconsole.warn('emitting error message', this._error_message);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdefinitions_by_name.set(name, definition);\n\t\t\t\t\tnames.push(name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst uniq_definitions: TypedGLDefinition<T>[] = [];\n\t\tfor (let name of names) {\n\t\t\tconst definition = definitions_by_name.get(name);\n\t\t\tif (definition) {\n\t\t\t\tuniq_definitions.push(definition);\n\t\t\t}\n\t\t}\n\t\t// sorting may make dependencies be declared after the function calling them\n\t\t// const sorted_definitions = lodash_sortBy(uniq_definitions, (d)=>d.name())\n\t\treturn uniq_definitions;\n\t}\n}\n","import lodash_compact from 'lodash/compact';\nimport lodash_uniq from 'lodash/uniq';\n// import {BaseGlNodeType} from '../../gl/_Base';\n// import {OutputGlNode} from '../gl/Output';\nimport {CoreGraph} from '../../../../core/graph/CoreGraph';\nimport {BaseNodeType, TypedNode} from '../../_Base';\nimport {TypedAssembler} from './BaseAssembler';\nimport {MapUtils} from '../../../../core/MapUtils';\nimport {ShaderName} from './ShaderName';\n\ntype NumberByString = Map<string, number>;\ntype BooleanByString = Map<string, boolean>;\ntype BooleanByStringByShaderName = Map<ShaderName, BooleanByString>;\ntype StringArrayByString = Map<string, string[]>;\n\n// interface BaseNodeGlArrayByString {\n// \t[propName: string]: BaseNodeGl[]\n// }\n// interface StringArrayByString {\n// \t[propName: string]: string[]\n// }\n\n// import {LineType, LINE_TYPES} from './CodeBuilder'\n\n// const VERTEX_INPUT_NAMES = [\n// \t'position',\n// \t'normal',\n// \t'gl_PointSize'\n// ]\n// const FRAGMENT_INPUT_NAMES = [\n// \t'color',\n// \t'alpha'\n// ]\n\nexport class TypedNodeTraverser<T extends TypedNode<any, T, any>> {\n\tprivate _leaves_graph_id: BooleanByStringByShaderName = new Map();\n\tprivate _graph_ids_by_shader_name: BooleanByStringByShaderName = new Map();\n\tprivate _outputs_by_graph_id: StringArrayByString = new Map();\n\tprivate _depth_by_graph_id: NumberByString = new Map();\n\tprivate _graph_id_by_depth: Map<number, string[]> = new Map();\n\tprivate _graph: CoreGraph;\n\tprivate _shader_name!: ShaderName;\n\n\tconstructor(private _assembler: TypedAssembler<T>, private _gl_parent_node: BaseNodeType) {\n\t\tthis._graph = this._gl_parent_node.scene.graph;\n\t}\n\n\tprivate reset() {\n\t\tthis._leaves_graph_id.clear();\n\t\tthis._outputs_by_graph_id.clear();\n\t\tthis._depth_by_graph_id.clear();\n\t\tthis._graph_id_by_depth.clear();\n\n\t\tthis.shader_names().forEach((shader_name) => {\n\t\t\tthis._graph_ids_by_shader_name.set(shader_name, new Map());\n\t\t});\n\t}\n\n\tshader_names() {\n\t\treturn this._assembler.shader_names;\n\t}\n\tinput_names_for_shader_name(root_node: T, shader_name: ShaderName) {\n\t\treturn this._assembler.input_names_for_shader_name(root_node, shader_name);\n\t}\n\n\ttraverse(root_nodes: T[]) {\n\t\tthis.reset();\n\n\t\tfor (let shader_name of this.shader_names()) {\n\t\t\tthis._leaves_graph_id.set(shader_name, new Map());\n\t\t}\n\n\t\tfor (let shader_name of this.shader_names()) {\n\t\t\tthis._shader_name = shader_name;\n\t\t\tfor (let root_node of root_nodes) {\n\t\t\t\tthis.find_leaves_from_root_node(root_node);\n\t\t\t\tthis.set_nodes_depth();\n\t\t\t}\n\t\t}\n\n\t\t// graph_ids.forEach((graph_id) => {\n\t\tthis._depth_by_graph_id.forEach((depth: number, graph_id: string) => {\n\t\t\tif (depth != null) {\n\t\t\t\t// this._graph_id_by_depth.set(depth, this._graph_id_by_depth.get(depth) || []);\n\t\t\t\t// this._graph_id_by_depth.get(depth)?.push(graph_id);\n\t\t\t\tMapUtils.push_on_array_at_entry(this._graph_id_by_depth, depth, graph_id);\n\t\t\t}\n\t\t});\n\t}\n\n\tleaves_from_nodes(nodes: T[]) {\n\t\tthis._shader_name = ShaderName.LEAVES_FROM_NODES_SHADER;\n\t\tthis._graph_ids_by_shader_name.set(this._shader_name, new Map());\n\t\tthis._leaves_graph_id.set(this._shader_name, new Map());\n\t\tfor (let node of nodes) {\n\t\t\tthis.find_leaves(node);\n\t\t}\n\n\t\tconst node_ids: string[] = [];\n\t\tthis._leaves_graph_id.get(this._shader_name)?.forEach((value: boolean, key: string) => {\n\t\t\tnode_ids.push(key);\n\t\t});\n\t\treturn this._graph.nodes_from_ids(node_ids) as T[];\n\t}\n\n\tnodes_for_shader_name(shader_name: ShaderName) {\n\t\tconst depths: number[] = [];\n\t\tthis._graph_id_by_depth.forEach((value: string[], key: number) => {\n\t\t\tdepths.push(key);\n\t\t});\n\t\tdepths.sort((a, b) => a - b);\n\t\tconst nodes: T[] = [];\n\t\tdepths.forEach((depth) => {\n\t\t\tconst graph_ids_for_depth = this._graph_id_by_depth.get(depth);\n\t\t\tif (graph_ids_for_depth) {\n\t\t\t\tgraph_ids_for_depth.forEach((graph_id: string) => {\n\t\t\t\t\tconst is_present = this._graph_ids_by_shader_name.get(shader_name)?.get(graph_id);\n\t\t\t\t\tif (is_present) {\n\t\t\t\t\t\tconst node = this._graph.node_from_id(graph_id) as T;\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn nodes;\n\t}\n\tsorted_nodes() {\n\t\tconst depths: number[] = [];\n\t\tthis._graph_id_by_depth.forEach((ids: string[], depth: number) => {\n\t\t\tdepths.push(depth);\n\t\t});\n\t\tdepths.sort((a, b) => a - b);\n\t\tconst nodes: T[] = [];\n\t\tdepths.forEach((depth) => {\n\t\t\tconst graph_ids_for_depth = this._graph_id_by_depth.get(depth);\n\t\t\tif (graph_ids_for_depth) {\n\t\t\t\tfor (let graph_id of graph_ids_for_depth) {\n\t\t\t\t\tconst node = this._graph.node_from_id(graph_id) as T;\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tnodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn nodes;\n\t}\n\tprivate find_leaves_from_root_node(root_node: T) {\n\t\t// if(this._shader_name == ShaderName.VERTEX){\n\t\t// this._leaves_graph_id[this._shader_name] = {}\n\t\tthis._graph_ids_by_shader_name.get(this._shader_name)?.set(root_node.graph_node_id, true);\n\n\t\tconst input_names = this.input_names_for_shader_name(root_node, this._shader_name);\n\t\tif (input_names) {\n\t\t\tfor (let input_name of input_names) {\n\t\t\t\t// if (root_node.type == 'output') {\n\t\t\t\tconst input = root_node.io.inputs.named_input(input_name);\n\t\t\t\tif (input) {\n\t\t\t\t\tMapUtils.push_on_array_at_entry(\n\t\t\t\t\t\tthis._outputs_by_graph_id,\n\t\t\t\t\t\tinput.graph_node_id,\n\t\t\t\t\t\troot_node.graph_node_id\n\t\t\t\t\t);\n\t\t\t\t\tthis.find_leaves(input);\n\t\t\t\t}\n\t\t\t\t// TODO: typescript - GL - check that I dont need to consider the Attrib as a special case\n\t\t\t\t// } else {\n\t\t\t\t// \t// if attribute\n\t\t\t\t// \tconst input = root_node.io.inputs.connected_named_input();\n\t\t\t\t// \tif (input) {\n\t\t\t\t// \t\tthis.find_leaves(input);\n\t\t\t\t// \t}\n\t\t\t\t// }\n\t\t\t}\n\t\t}\n\t\t// const position_input = this._output.named_input('position')\n\t\t// const normal_input = this._output.named_input('normal')\n\t\t// const instancePosition_input = this._output.named_input('instancePosition')\n\t\t// if(position_input){ this.find_leaves(position_input) }\n\t\t// if(normal_input){ this.find_leaves(normal_input) }\n\t\t// if(instancePosition_input){ this.find_leaves(instancePosition_input) }\n\t\t// }\n\t\t// if(this._shader_name == ShaderName.FRAGMENT){\n\t\t// \tthis._leaves_graph_id[this._shader_name] = {}\n\t\t// \tFRAGMENT_INPUT_NAMES.forEach(name=>{\n\t\t// \t\tconst input = this._output.named_input(name)\n\t\t// \t\tif(input){\n\t\t// \t\t\tthis.find_leaves(input)\n\t\t// \t\t}\n\t\t// \t})\n\t\t// \t// const color_input = this._output.named_input('color')\n\t\t// \t// const alpha_input = this._output.named_input('alpha')\n\t\t// \t// if(color_input){ this.find_leaves(color_input) }\n\t\t// \t// if(alpha_input){ this.find_leaves(alpha_input) }\n\t\t// }\n\n\t\tthis._outputs_by_graph_id.forEach((outputs: string[], graph_id: string) => {\n\t\t\tthis._outputs_by_graph_id.set(graph_id, lodash_uniq(outputs));\n\t\t});\n\t}\n\n\tprivate find_leaves(node: T) {\n\t\tthis._graph_ids_by_shader_name.get(this._shader_name)?.set(node.graph_node_id, true);\n\n\t\tconst inputs = lodash_compact(node.io.inputs.inputs());\n\t\tconst input_graph_ids = lodash_uniq(inputs.map((n) => n.graph_node_id));\n\t\tconst unique_inputs = input_graph_ids.map((graph_id) => this._graph.node_from_id(graph_id)) as T[];\n\t\tif (unique_inputs.length > 0) {\n\t\t\t// const promises = unique_inputs.forEach((input)=>{\n\t\t\tfor (let input of unique_inputs) {\n\t\t\t\tMapUtils.push_on_array_at_entry(this._outputs_by_graph_id, input.graph_node_id, node.graph_node_id);\n\n\t\t\t\tthis.find_leaves(input);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._leaves_graph_id.get(this._shader_name)!.set(node.graph_node_id, true);\n\t\t}\n\t}\n\n\tprivate set_nodes_depth() {\n\t\tthis._leaves_graph_id.forEach((booleans_by_graph_id, shader_name) => {\n\t\t\tbooleans_by_graph_id.forEach((boolean, graph_id) => {\n\t\t\t\tthis.set_node_depth(graph_id);\n\t\t\t});\n\t\t});\n\t\t// const leave_ids = Object.keys(this._leaves_graph_id[this._shader_name]);\n\t\t// leave_ids.forEach((graph_id) => {\n\t\t// \tthis.set_node_depth(graph_id);\n\t\t// });\n\t}\n\n\tprivate set_node_depth(graph_id: string, depth: number = 0) {\n\t\tconst current_depth = this._depth_by_graph_id.get(graph_id);\n\t\tif (current_depth != null) {\n\t\t\tthis._depth_by_graph_id.set(graph_id, Math.max(current_depth, depth));\n\t\t} else {\n\t\t\tthis._depth_by_graph_id.set(graph_id, depth);\n\t\t}\n\n\t\t// const node = this._graph.node_from_id(graph_id);\n\n\t\tconst output_ids = this._outputs_by_graph_id.get(graph_id);\n\t\tif (output_ids) {\n\t\t\toutput_ids.forEach((output_id) => {\n\t\t\t\tthis.set_node_depth(output_id, depth + 1);\n\t\t\t});\n\t\t}\n\t}\n}\n","import {TypedGlNode} from './_Base';\n// import {ParamType} from '../../../Engine/Param/_Module';\n// import {Connection} from './GlData';\n// import {Definition} from './Definition/_Module';\n// import {ShaderName} from './Assembler/Util/CodeBuilder';\n\n// list of globals\n// https://www.khronos.org/opengl/wiki/Built-in_Variable_(GLSL)\n// gl_PointCoord\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nclass GlobalsGlParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new GlobalsGlParamsConfig();\n\nexport class GlobalsGlNode extends TypedGlNode<GlobalsGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'globals';\n\t}\n\n\tcreate_params() {\n\t\tthis.material_node?.assembler_controller.add_globals_params(this);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\t// if (lines_controller.shader_name) {\n\t\tthis.material_node?.assembler_controller?.assembler.set_node_lines_globals(this, shaders_collection_controller);\n\t\t// }\n\t\t// const vertex_definitions = []\n\t\t// const fragment_definitions = []\n\t\t// const definitions = []\n\t\t// // const vertex_body_lines = []\n\t\t// const fragment_body_lines = []\n\t\t// const body_lines = []\n\n\t\t// const shader_config = this.shader_config(this._shader_name)\n\t\t// const dependencies = shader_config.dependencies()\n\n\t\t// const definitions_by_shader_name = {}\n\t\t// definitions_by_shader_name[this._shader_name] = []\n\t\t// for(let dependency of dependencies){ definitions_by_shader_name[dependency] = [] }\n\n\t\t// const body_lines_by_shader_name = {}\n\t\t// body_lines_by_shader_name[this._shader_name] = []\n\t\t// for(let dependency of dependencies){ body_lines_by_shader_name[dependency] = [] }\n\n\t\t// let definition\n\t\t// let body_line\n\t\t// for(let output_name of this.used_output_names()){\n\t\t// \tconst var_name = this.gl_var_name(output_name)\n\n\t\t// \tswitch (output_name){\n\t\t// \t\tcase 'frame':\n\t\t// \t\t\tdefinition = new Definition.Uniform(this, 'float', output_name)\n\t\t// \t\t\t// vertex_definitions.push(definition)\n\t\t// \t\t\t// fragment_definitions.push(definition)\n\t\t// \t\t\tdefinitions_by_shader_name[this._shader_name].push(definition)\n\n\t\t// \t\t\tbody_line = `float ${var_name} = ${output_name}`\n\t\t// \t\t\tfor(let dependency of dependencies){\n\t\t// \t\t\t\tdefinitions_by_shader_name[dependency].push(definition)\n\t\t// \t\t\t\tbody_lines_by_shader_name[dependency].push(body_line)\n\t\t// \t\t\t}\n\n\t\t// \t\t\t// vertex_body_lines.push(`float ${var_name} = ${output_name}`)\n\t\t// \t\t\tbody_lines.push(body_line)\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase 'gl_FragCoord':\n\t\t// \t\t\tif( this._shader_name == ShaderName.FRAGMENT ){\n\t\t// \t\t\t\tfragment_body_lines.push(`vec4 ${var_name} = gl_FragCoord`)\n\t\t// \t\t\t}\n\t\t// \t\t\tbreak;\n\t\t// \t\tcase 'gl_PointCoord':\n\t\t// \t\t\tif( this._shader_name == ShaderName.FRAGMENT ){\n\t\t// \t\t\t\tif(this.parent().is_point_material()){\n\t\t// \t\t\t\t\tfragment_body_lines.push(`vec2 ${var_name} = gl_PointCoord`)\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\t\t// \t\t\tbreak;\n\t\t// \t\tdefault:\n\t\t// \t\t\tconst named_output = this.named_output_by_name(output_name)\n\t\t// \t\t\tconst gl_type = named_output.gl_type()\n\t\t// \t\t\tdefinition = new Definition.Varying(this, gl_type, var_name)\n\t\t// \t\t\tdefinitions_by_shader_name[this._shader_name].push(definition)\n\n\t\t// \t\t\tbody_line = `${var_name} = vec3(${output_name})`\n\t\t// \t\t\tfor(let dependency of dependencies){\n\t\t// \t\t\t\tdefinitions_by_shader_name[dependency].push(definition)\n\t\t// \t\t\t\tbody_lines_by_shader_name[dependency].push(body_line)\n\t\t// \t\t\t}\n\t\t// \t\t\tif(dependencies.length == 0){\n\t\t// \t\t\t\tbody_lines.push(body_line)\n\t\t// \t\t\t}\n\t\t// \t}\n\t\t// }\n\t\t// // this.set_vertex_definitions(vertex_definitions)\n\t\t// // this.set_fragment_definitions(fragment_definitions)\n\t\t// for(let shader_name of Object.keys(definitions_by_shader_name)){\n\t\t// \tthis.set_definitions(definitions_by_shader_name[shader_name], shader_name)\n\t\t// }\n\t\t// for(let shader_name of Object.keys(body_lines_by_shader_name)){\n\t\t// \tthis.add_body_lines(body_lines_by_shader_name[shader_name], shader_name)\n\t\t// }\n\t\t// // this.add_definitions(definitions)\n\t\t// // this.set_vertex_body_lines(vertex_body_lines)\n\t\t// // this.set_fragment_body_lines(fragment_body_lines)\n\n\t\t// this.add_body_lines(body_lines)\n\t}\n}\n","import {EventDispatcher} from 'three/src/core/EventDispatcher';\nimport {MOUSE} from 'three/src/constants';\nimport {Quaternion} from 'three/src/math/Quaternion';\nimport {Spherical} from 'three/src/math/Spherical';\nimport {TOUCH} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// make sure element can receive keys.\n\n\tif ( scope.domElement.tabIndex === - 1 ) {\n\n\t\tscope.domElement.tabIndex = 0;\n\n\t}\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","export class TranspiledFilter {\n\tstatic filter(transpiled_javascript: string) {\n\t\tconst lines = transpiled_javascript.split('\\n');\n\t\tconst filtered_lines: string[] = [];\n\t\tfor (let line of lines) {\n\t\t\tif (!line.match(/import {.*} from '.*'/)) {\n\t\t\t\tline = line.replace('export ', 'return ');\n\t\t\t\tfiltered_lines.push(line);\n\t\t\t}\n\t\t}\n\t\treturn filtered_lines.join('\\n');\n\t}\n}\n","import {TypedGlNode} from './_Base';\n// import {ParamType} from '../../../Engine/Param/_Module';\n// import {ThreeToGl} from '../../../Core/ThreeToGl'\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\n// import {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n// import {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {GlConnectionsController} from './utils/ConnectionsController';\n// import {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\n\nclass BaseAdaptiveParamsConfig extends NodeParamsConfig {}\n\nexport abstract class BaseAdaptiveGlNode<T extends BaseAdaptiveParamsConfig> extends TypedGlNode<T> {\n\t// protected abstract gl_output_name(): string;\n\t// protected abstract gl_input_name(index: number): string;\n\t// protected abstract expected_input_types(): ConnectionPointType[];\n\t// protected abstract expected_output_types(): ConnectionPointType[];\n\n\tpublic readonly gl_connections_controller: GlConnectionsController = new GlConnectionsController(this);\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.gl_connections_controller.initialize_node();\n\t}\n}\n","import {BaseNodeGlMathFunctionArg2GlNode} from './_BaseMathFunction';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\ninterface MathArg2Options {\n\tin?: [string, string];\n\tout?: string;\n\tdefault_in_type?: ConnectionPointType;\n\tallowed_in_types?: ConnectionPointType[];\n\tout_type?: ConnectionPointType;\n\tmethod?: string;\n\tfunctions?: string[];\n}\n\nexport function MathFunctionArg2Factory(type: string, options: MathArg2Options = {}) {\n\tconst gl_method_name = options.method || type;\n\tconst gl_output_name = options.out || 'val';\n\tconst gl_input_names = options.in || ['in0', 'in1'];\n\tconst default_in_type = options.default_in_type;\n\tconst allowed_in_types = options.allowed_in_types;\n\tconst out_type = options.out_type;\n\tconst functions = options.functions || [];\n\treturn class Node extends BaseNodeGlMathFunctionArg2GlNode {\n\t\tstatic type() {\n\t\t\treturn type;\n\t\t}\n\t\tinitialize_node() {\n\t\t\tsuper.initialize_node();\n\t\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t\t\tthis.gl_connections_controller.set_output_name_function(this._gl_output_name.bind(this));\n\n\t\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\n\t\t\tif (out_type) {\n\t\t\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [out_type]);\n\t\t\t}\n\t\t}\n\t\t_gl_input_name(index: number): string {\n\t\t\treturn gl_input_names[index];\n\t\t}\n\t\t_gl_output_name(index: number): string {\n\t\t\treturn gl_output_name;\n\t\t}\n\t\tgl_method_name(): string {\n\t\t\treturn gl_method_name;\n\t\t}\n\t\tgl_function_definitions(): FunctionGLDefinition[] {\n\t\t\tif (out_type) {\n\t\t\t\treturn functions.map((f) => new FunctionGLDefinition(this, out_type, f));\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\t\tprotected _expected_input_types() {\n\t\t\tlet first_input_type = this.gl_connections_controller.first_input_connection_type();\n\t\t\tif (first_input_type && allowed_in_types) {\n\t\t\t\tif (!allowed_in_types.includes(first_input_type)) {\n\t\t\t\t\t// if the first input type is not allowed, either leave the connection point as is,\n\t\t\t\t\t// or use the default if there is none\n\t\t\t\t\tconst first_connection = this.io.inputs.named_input_connection_points[0];\n\t\t\t\t\tif (first_connection) {\n\t\t\t\t\t\tfirst_input_type = first_connection.type;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst_input_type = default_in_type;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst type = first_input_type || default_in_type || ConnectionPointType.FLOAT;\n\t\t\treturn [type, type];\n\t\t}\n\t};\n}\nexport class DistanceGlNode extends MathFunctionArg2Factory('distance', {\n\tin: ['p0', 'p1'],\n\tdefault_in_type: ConnectionPointType.VEC3,\n\tallowed_in_types: [ConnectionPointType.VEC2, ConnectionPointType.VEC3, ConnectionPointType.VEC4],\n\tout_type: ConnectionPointType.FLOAT,\n}) {}\nexport class DotGlNode extends MathFunctionArg2Factory('dot', {\n\tin: ['vec0', 'vec1'],\n\tdefault_in_type: ConnectionPointType.VEC3,\n\tallowed_in_types: [ConnectionPointType.VEC2, ConnectionPointType.VEC3, ConnectionPointType.VEC4],\n\tout_type: ConnectionPointType.FLOAT,\n}) {}\nexport class MaxGlNode extends MathFunctionArg2Factory('max') {}\nexport class MinGlNode extends MathFunctionArg2Factory('min') {}\nexport class ModGlNode extends MathFunctionArg2Factory('mod') {}\nexport class PowGlNode extends MathFunctionArg2Factory('pow', {in: ['x', 'y']}) {}\nexport class ReflectGlNode extends MathFunctionArg2Factory('reflect', {\n\tin: ['I', 'N'],\n\tdefault_in_type: ConnectionPointType.VEC3,\n}) {}\nexport class StepGlNode extends MathFunctionArg2Factory('step', {in: ['edge', 'x']}) {}\n","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\n\nimport {ConnectionPointType, ConnectionPointTypes} from '../utils/connections/ConnectionPointType';\n\nfunction typed_visible_options(type: ConnectionPointType) {\n\tconst val = ConnectionPointTypes.indexOf(type);\n\treturn {visible_if: {type: val}};\n}\n\nimport {BaseParamType} from '../../params/_Base';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {GlConnectionsController} from './utils/ConnectionsController';\n\nclass ConstantGlParamsConfig extends NodeParamsConfig {\n\ttype = ParamConfig.INTEGER(ConnectionPointTypes.indexOf(ConnectionPointType.FLOAT), {\n\t\tmenu: {\n\t\t\tentries: ConnectionPointTypes.map((name, i) => {\n\t\t\t\treturn {name: name, value: i};\n\t\t\t}),\n\t\t},\n\t});\n\tbool = ParamConfig.BOOLEAN(0, typed_visible_options(ConnectionPointType.BOOL));\n\tint = ParamConfig.INTEGER(0, typed_visible_options(ConnectionPointType.INT));\n\tfloat = ParamConfig.FLOAT(0, typed_visible_options(ConnectionPointType.FLOAT));\n\tvec2 = ParamConfig.VECTOR2([0, 0], typed_visible_options(ConnectionPointType.VEC2));\n\tvec3 = ParamConfig.VECTOR3([0, 0, 0], typed_visible_options(ConnectionPointType.VEC3));\n\tvec4 = ParamConfig.VECTOR4([0, 0, 0, 0], typed_visible_options(ConnectionPointType.VEC4));\n}\nconst ParamsConfig = new ConstantGlParamsConfig();\nexport class ConstantGlNode extends TypedGlNode<ConstantGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'constant';\n\t}\n\tstatic readonly OUTPUT_NAME = 'val';\n\tprivate _params_by_type: Map<ConnectionPointType, BaseParamType> | undefined;\n\tpublic readonly gl_connections_controller: GlConnectionsController = new GlConnectionsController(this);\n\tprotected _allow_inputs_created_from_params: boolean = false;\n\t// private _update_signature_if_required_bound = this._update_signature_if_required.bind(this);\n\tinitialize_node() {\n\t\tthis.gl_connections_controller.initialize_node();\n\n\t\tthis.gl_connections_controller.set_output_name_function((index: number) => ConstantGlNode.OUTPUT_NAME);\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => []);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [this._current_connection_type]);\n\t\t// this.params.add_on_scene_load_hook('_update_signature_if_required', this._update_signature_if_required_bound);\n\t\t// this.params.set_post_create_params_hook(this._update_signature_if_required_bound);\n\t\t// this.add_post_dirty_hook('_update_signature_if_required', this._update_signature_if_required_bound);\n\t}\n\t// _update_signature_if_required(dirty_trigger?: CoreGraphNode) {\n\t// \tif (!this.lifecycle.creation_completed || dirty_trigger == this.p.type) {\n\t// \t\tthis.update_output_type();\n\t// \t\tthis.remove_dirty_state();\n\t// \t\tthis.make_output_nodes_dirty();\n\t// \t}\n\t// }\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst param = this._current_param;\n\t\tif (param) {\n\t\t\tconst connection_type = this._current_connection_type;\n\t\t\tconst value = ThreeToGl.any(param.value);\n\t\t\tconst var_value = this._current_var_name;\n\t\t\tconst body_line = `${connection_type} ${var_value} = ${value}`;\n\t\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t\t} else {\n\t\t\tconsole.warn(`no param found for constant node for type '${this.pv.type}'`);\n\t\t}\n\t}\n\n\tprivate get _current_connection_type() {\n\t\tif (this.pv.type == null) {\n\t\t\tconsole.warn('constant gl node type if not valid');\n\t\t}\n\t\tconst connection_type = ConnectionPointTypes[this.pv.type];\n\t\tif (connection_type == null) {\n\t\t\tconsole.warn('constant gl node type if not valid');\n\t\t}\n\t\treturn connection_type;\n\t}\n\n\tprivate get _current_param(): BaseParamType {\n\t\tthis._params_by_type =\n\t\t\tthis._params_by_type ||\n\t\t\tnew Map<ConnectionPointType, BaseParamType>([\n\t\t\t\t[ConnectionPointType.BOOL, this.p.bool],\n\t\t\t\t[ConnectionPointType.INT, this.p.int],\n\t\t\t\t[ConnectionPointType.FLOAT, this.p.float],\n\t\t\t\t[ConnectionPointType.VEC2, this.p.vec2],\n\t\t\t\t[ConnectionPointType.VEC3, this.p.vec3],\n\t\t\t\t[ConnectionPointType.VEC4, this.p.vec4],\n\t\t\t]);\n\t\tconst connection_type = ConnectionPointTypes[this.pv.type];\n\t\treturn this._params_by_type.get(connection_type)!;\n\t}\n\tprivate get _current_var_name(): string {\n\t\treturn this.gl_var_name(ConstantGlNode.OUTPUT_NAME);\n\t}\n\n\t// private update_output_type() {\n\t// \tconst set_dirty = false;\n\t// \tconst current_connection = this.io.outputs.named_output_connection_points[0];\n\t// \tif (current_connection && current_connection.type == this._current_connection_type) {\n\t// \t\treturn;\n\t// \t}\n\t// \tthis.io.outputs.set_named_output_connection_points(\n\t// \t\t[new TypedNamedConnectionPoint(this._current_connection_type, this._current_connection_type)],\n\t// \t\tset_dirty\n\t// \t);\n\t// }\n}\n","import {BaseNodeGlMathFunctionArg3GlNode} from './_BaseMathFunction';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\ninterface MathArg3Options {\n\tin?: [string, string, string];\n\tout?: string;\n\tout_type?: ConnectionPointType;\n\tmethod?: string;\n\tdefault?: Dictionary<any>;\n\tfunctions?: string[];\n}\n\nexport function MathFunctionArg3Factory(type: string, options: MathArg3Options = {}) {\n\tconst gl_method_name = options.method || type;\n\tconst gl_output_name = options.out || 'val';\n\tconst gl_input_names = options.in || ['in0', 'in1', 'in2'];\n\tconst gl_input_default_values = options.default || {};\n\tconst out_type = options.out_type || ConnectionPointType.FLOAT;\n\tconst functions = options.functions || [];\n\treturn class Node extends BaseNodeGlMathFunctionArg3GlNode {\n\t\tstatic type() {\n\t\t\treturn type;\n\t\t}\n\t\tinitialize_node() {\n\t\t\tsuper.initialize_node();\n\t\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t\t\tthis.gl_connections_controller.set_output_name_function(this._gl_output_name.bind(this));\n\t\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t\t}\n\t\tprotected _gl_input_name(index: number): string {\n\t\t\treturn gl_input_names[index];\n\t\t}\n\t\tprotected _gl_output_name(index: number): string {\n\t\t\treturn gl_output_name;\n\t\t}\n\t\tgl_method_name(): string {\n\t\t\treturn gl_method_name;\n\t\t}\n\t\tprotected _expected_output_types() {\n\t\t\treturn [out_type];\n\t\t}\n\t\tgl_input_default_value(name: string) {\n\t\t\treturn gl_input_default_values[name];\n\t\t}\n\t\tgl_function_definitions(): FunctionGLDefinition[] {\n\t\t\treturn functions.map((f) => new FunctionGLDefinition(this, out_type, f));\n\t\t}\n\t};\n}\nexport class ClampGlNode extends MathFunctionArg3Factory('clamp', {in: ['value', 'min', 'max'], default: {max: 1}}) {}\nexport class FaceforwardGlNode extends MathFunctionArg3Factory('face_forward', {in: ['N', 'I', 'Nref']}) {}\nexport class SmoothStepGlNode extends MathFunctionArg3Factory('smoothstep', {in: ['edge0', 'edge1', 'x']}) {}\n","export default \"\\nfloat fit01(float val, float src_min, float src_max){\\n\\tfloat size = src_max - src_min;\\n\\treturn (val - src_min) / size;\\n}\\nvec2 fit01(vec2 val, vec2 src_min, vec2 src_max){\\n\\treturn vec2(\\n\\t\\tfit01(val.x, src_min.x, src_max.x),\\n\\t\\tfit01(val.y, src_min.y, src_max.y)\\n\\t);\\n}\\nvec3 fit01(vec3 val, vec3 src_min, vec3 src_max){\\n\\treturn vec3(\\n\\t\\tfit01(val.x, src_min.x, src_max.x),\\n\\t\\tfit01(val.y, src_min.y, src_max.y),\\n\\t\\tfit01(val.z, src_min.z, src_max.z)\\n\\t);\\n}\\nvec4 fit01(vec4 val, vec4 src_min, vec4 src_max){\\n\\treturn vec4(\\n\\t\\tfit01(val.x, src_min.x, src_max.x),\\n\\t\\tfit01(val.y, src_min.y, src_max.y),\\n\\t\\tfit01(val.z, src_min.z, src_max.z),\\n\\t\\tfit01(val.w, src_min.w, src_max.w)\\n\\t);\\n}\\n\\nfloat fit(float val, float src_min, float src_max, float dest_min, float dest_max){\\n\\tfloat  src_range = src_max - src_min;\\n\\tfloat dest_range = dest_max - dest_min;\\n\\n\\tfloat r = (val - src_min) / src_range;\\n\\treturn (r * dest_range) + dest_min;\\n}\\nvec2 fit(vec2 val, vec2 src_min, vec2 src_max, vec2 dest_min, vec2 dest_max){\\n\\treturn vec2(\\n\\t\\tfit(val.x, src_min.x, src_max.x, dest_min.x, dest_max.x),\\n\\t\\tfit(val.y, src_min.y, src_max.y, dest_min.y, dest_max.y)\\n\\t);\\n}\\nvec3 fit(vec3 val, vec3 src_min, vec3 src_max, vec3 dest_min, vec3 dest_max){\\n\\treturn vec3(\\n\\t\\tfit(val.x, src_min.x, src_max.x, dest_min.x, dest_max.x),\\n\\t\\tfit(val.y, src_min.y, src_max.y, dest_min.y, dest_max.y),\\n\\t\\tfit(val.z, src_min.z, src_max.z, dest_min.z, dest_max.z)\\n\\t);\\n}\\nvec4 fit(vec4 val, vec4 src_min, vec4 src_max, vec4 dest_min, vec4 dest_max){\\n\\treturn vec4(\\n\\t\\tfit(val.x, src_min.x, src_max.x, dest_min.x, dest_max.x),\\n\\t\\tfit(val.y, src_min.y, src_max.y, dest_min.y, dest_max.y),\\n\\t\\tfit(val.z, src_min.z, src_max.z, dest_min.z, dest_max.z),\\n\\t\\tfit(val.w, src_min.w, src_max.w, dest_min.w, dest_max.w)\\n\\t);\\n}\\n\"","export default \"uniform float mNear;\\nuniform float mFar;\\n\\nvarying float vViewZDepth;\\n\\nvoid main() {\\n\\n\\tfloat color = 1.0 - smoothstep( mNear, mFar, vViewZDepth );\\n\\tgl_FragColor = vec4( vec3( color ), 1.0 );\\n\\n}\\n\"","import {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\nimport {FrontSide} from 'three/src/constants';\nimport {TypedMatNode} from './_Base';\n\nimport {ParamConfig, NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ColorsController, ColorParamConfig} from './utils/ColorsController';\nimport {SideController, SideParamConfig} from './utils/SideController';\nimport {SkinningController, SkinningParamConfig} from './utils/SkinningController';\nimport {TextureMapController, TextureMapParamConfig} from './utils/TextureMapController';\nimport {TextureAlphaMapController, TextureAlphaMapParamConfig} from './utils/TextureAlphaMapController';\nimport {TextureEnvMapController, TextureEnvMapParamConfig} from './utils/TextureEnvMapController';\n\nexport const SHADER_DEFAULTS = {\n\tmetalness: 1,\n\troughness: 0.5,\n};\n\nclass MeshStandardMatParamsConfig extends TextureEnvMapParamConfig(\n\tTextureAlphaMapParamConfig(\n\t\tTextureMapParamConfig(SkinningParamConfig(SideParamConfig(ColorParamConfig(NodeParamsConfig))))\n\t)\n) {\n\tmetalness = ParamConfig.FLOAT(SHADER_DEFAULTS.metalness);\n\troughness = ParamConfig.FLOAT(SHADER_DEFAULTS.roughness);\n}\n// TODO: add the following texture params:\n// - aoMap+aoMapIntensity\n// - bumpMap+bumpScale\n// - displacementMap+displaycementScale+displacementBias\n// - emissiveMap\n// - envMap\n// - lightMap\n// - metalnessMap\n// - normalMap\n// - roughnessMap,\nconst ParamsConfig = new MeshStandardMatParamsConfig();\n\nexport class MeshStandardMatNode extends TypedMatNode<MeshStandardMaterial, MeshStandardMatParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'mesh_standard';\n\t}\n\n\tcreate_material() {\n\t\treturn new MeshStandardMaterial({\n\t\t\tvertexColors: false,\n\t\t\tside: FrontSide,\n\t\t\tcolor: 0xffffff,\n\t\t\topacity: 1,\n\t\t\tmetalness: 1,\n\t\t\troughness: 0,\n\t\t});\n\t}\n\n\treadonly texture_map_controller: TextureMapController = new TextureMapController(this, {direct_params: true});\n\treadonly texture_alpha_map_controller: TextureAlphaMapController = new TextureAlphaMapController(this, {\n\t\tdirect_params: true,\n\t});\n\treadonly texture_env_map_controller: TextureEnvMapController = new TextureEnvMapController(this, {\n\t\tdirect_params: true,\n\t});\n\tinitialize_node() {\n\t\tthis.params.set_post_create_params_hook(() => {\n\t\t\tthis.texture_map_controller.initialize_node();\n\t\t\tthis.texture_alpha_map_controller.initialize_node();\n\t\t\tthis.texture_env_map_controller.initialize_node();\n\t\t});\n\t}\n\n\tasync cook() {\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\tSkinningController.update(this);\n\t\tthis.texture_map_controller.update();\n\t\tthis.texture_alpha_map_controller.update();\n\t\tthis.texture_env_map_controller.update();\n\n\t\tif (this._material) {\n\t\t\tthis._material.envMapIntensity = this.pv.env_map_intensity;\n\t\t\tthis._material.roughness = this.pv.roughness;\n\t\t\tthis._material.metalness = this.pv.metalness;\n\t\t}\n\n\t\tthis.set_material(this.material);\n\t}\n}\n","import {Material} from 'three/src/materials/Material';\nimport {Texture} from 'three/src/textures/Texture';\nimport {FileCopNode} from '../../cop/File';\nimport {TypedMatNode} from '../_Base';\nimport {\n\tBaseTextureMapController,\n\tBooleanParamOptions,\n\tOperatorPathOptions,\n\tUpdateOptions,\n} from './_BaseTextureController';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\n\nimport {NodeParamsConfig, ParamConfig} from '../../utils/params/ParamsConfig';\nexport function TextureEnvMapParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tuse_env_map = ParamConfig.BOOLEAN(0, BooleanParamOptions(TextureEnvMapController));\n\t\tenv_map = ParamConfig.OPERATOR_PATH(\n\t\t\tFileCopNode.DEFAULT_NODE_PATH.ENV_MAP,\n\t\t\tOperatorPathOptions(TextureEnvMapController, 'use_env_map')\n\t\t);\n\t\tenv_map_intensity = ParamConfig.FLOAT(1, {visible_if: {use_env_map: 1}});\n\t};\n}\nclass TextureEnvMaterial extends Material {\n\tenvMap!: Texture | null;\n}\ntype CurrentMaterial = TextureEnvMaterial | ShaderMaterial;\nclass TextureEnvMapParamsConfig extends TextureEnvMapParamConfig(NodeParamsConfig) {}\nabstract class TextureEnvMapMatNode extends TypedMatNode<CurrentMaterial, TextureEnvMapParamsConfig> {\n\ttexture_env_map_controller!: TextureEnvMapController;\n\tabstract create_material(): CurrentMaterial;\n}\n\nexport class TextureEnvMapController extends BaseTextureMapController {\n\tconstructor(node: TextureEnvMapMatNode, _update_options: UpdateOptions) {\n\t\tsuper(node, _update_options);\n\t}\n\tinitialize_node() {\n\t\tthis.add_hooks(this.node.p.use_env_map, this.node.p.env_map);\n\t}\n\tasync update() {\n\t\tthis._update(this.node.material, 'envMap', this.node.p.use_env_map, this.node.p.env_map);\n\t}\n\tstatic async update(node: TextureEnvMapMatNode) {\n\t\tnode.texture_env_map_controller.update();\n\t}\n}\n","import {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ColorParamConfig, ColorsController} from './utils/UniformsColorsController';\nimport {SideParamConfig, SideController} from './utils/SideController';\nimport {SkinningParamConfig, SkinningController} from './utils/SkinningController';\nimport {TextureMapParamConfig} from './utils/TextureMapController';\nimport {TextureAlphaMapParamConfig} from './utils/TextureAlphaMapController';\nimport {ShaderAssemblerPoints} from '../gl/code/assemblers/materials/Points';\nimport {TypedBuilderMatNode} from './_BaseBuilder';\nimport {GlAssemblerController} from '../gl/code/Controller';\nclass PointsMatParamsConfig extends TextureAlphaMapParamConfig(\n\tTextureMapParamConfig(SkinningParamConfig(SideParamConfig(ColorParamConfig(NodeParamsConfig))))\n) {}\nconst ParamsConfig = new PointsMatParamsConfig();\n\nexport class PointsBuilderMatNode extends TypedBuilderMatNode<ShaderAssemblerPoints, PointsMatParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'points_builder';\n\t}\n\n\tinitialize_node() {}\n\n\tprotected _create_assembler_controller() {\n\t\treturn new GlAssemblerController<ShaderAssemblerPoints>(this, ShaderAssemblerPoints);\n\t}\n\n\tasync cook() {\n\t\tawait this.compile_if_required();\n\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\tSkinningController.update(this);\n\n\t\tthis.set_material(this.material);\n\t}\n}\n","import lodash_isNaN from 'lodash/isNaN';\nimport {Camera} from 'three/src/cameras/Camera';\n\nimport {CoreTransform} from '../../../core/Transform';\nimport {ObjNodeRenderOrder} from './_Base';\nimport {ControlsController} from './utils/cameras/ControlsController';\nimport {LayersController} from './utils/LayersController';\nimport {PostProcessController} from './utils/cameras/PostProcessController';\n\n// import {Dirtyable} from './Concerns/Dirtyable';\n// import {Layers} from './Concerns/Layers';\n// import {PostProcess} from './Concerns/PostProcess';\n// import {Transformed} from './Concerns/Transformed';\n// import {Background} from './Concerns/Background';\n// import {CoreTextureLoader} from '../../../Core/Loader/Texture'\n// import {CameraControls} from './Concerns/CameraControls';\n// import {File} from '../../../Engine/Node/Cop/File'\nimport {ThreejsViewer} from '../../viewers/Threejs';\nimport {BaseBackgroundController} from './utils/cameras/background/_BaseController';\nimport {NodeContext} from '../../poly/NodeContext';\n\nexport interface OrthoOrPerspCamera extends Camera {\n\tnear: number;\n\tfar: number;\n\tupdateProjectionMatrix: () => void;\n\tgetFocalLength?: () => void;\n}\n\nconst EVENT_CHANGE = {type: 'change'};\n\nexport const BASE_CAMERA_DEFAULT = {\n\tnear: 1.0,\n\tfar: 100.0,\n};\n\nimport {FlagsControllerD} from '../utils/FlagsController';\nimport {CameraPostProcessParamConfig} from './utils/cameras/PostProcessController';\nimport {CameraBackgroundParamConfig} from './utils/cameras/background/_BaseController';\nimport {LayerParamConfig} from './utils/LayersController';\n\nimport {ParamConfig, NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {BaseParamType} from '../../params/_Base';\nimport {BaseNodeType} from '../_Base';\nimport {TransformedParamConfig, TransformController} from './utils/TransformController';\nimport {TypedObjNode} from './_Base';\n\nexport function CameraTransformParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tcamera = ParamConfig.FOLDER();\n\t\tcontrols = ParamConfig.OPERATOR_PATH('', {\n\t\t\tnode_selection: {\n\t\t\t\tcontext: NodeContext.EVENT,\n\t\t\t},\n\t\t});\n\t\t// add transform params\n\t\t// t = ParamConfig.VECTOR3([0, 0, 0]);\n\t\t// r = ParamConfig.VECTOR3([0, 0, 0]);\n\t\t// s = ParamConfig.VECTOR3([1, 1, 1]);\n\t\t// scale = ParamConfig.FLOAT(1);\n\t\ttarget = ParamConfig.VECTOR3([0, 0, 0], {cook: false});\n\t\tnear = ParamConfig.FLOAT(BASE_CAMERA_DEFAULT.near, {range: [0, 100]});\n\t\tfar = ParamConfig.FLOAT(BASE_CAMERA_DEFAULT.far, {range: [0, 100]});\n\t\t// aspect = ParamConfig.FLOAT(1);\n\t\t// lock_width = ParamConfig.BOOLEAN(1);\n\t\t// look_at = ParamConfig.OPERATOR_PATH('');\n\n\t\tset_master_camera = ParamConfig.BUTTON(null, {\n\t\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\t\tBaseCameraObjNodeClass.PARAM_CALLBACK_set_master_camera(node as BaseCameraObjNodeType);\n\t\t\t},\n\t\t});\n\t};\n}\n\nexport class BaseCameraObjParamsConfig extends CameraPostProcessParamConfig(\n\tCameraBackgroundParamConfig(TransformedParamConfig(LayerParamConfig(CameraTransformParamConfig(NodeParamsConfig))))\n) {}\n\nexport class TypedCameraObjNode<O extends OrthoOrPerspCamera, K extends BaseCameraObjParamsConfig> extends TypedObjNode<\n\tO,\n\tK\n> {\n\t// public readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\tpublic readonly render_order: number = ObjNodeRenderOrder.CAMERA;\n\tprotected _object!: O;\n\tprotected _aspect: number = -1;\n\tget object() {\n\t\treturn this._object;\n\t}\n\treadonly transform_controller: TransformController = new TransformController(this);\n\tpublic readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\n\tprotected _background_controller: BaseBackgroundController | undefined;\n\tget background_controller(): BaseBackgroundController {\n\t\treturn (this._background_controller =\n\t\t\tthis._background_controller || new this.background_controller_constructor(this));\n\t}\n\tprotected get background_controller_constructor() {\n\t\treturn BaseBackgroundController;\n\t}\n\tprotected _controls_controller: ControlsController | undefined;\n\tget controls_controller(): ControlsController {\n\t\treturn (this._controls_controller = this._controls_controller || new ControlsController(this));\n\t}\n\tprotected _layers_controller: LayersController | undefined;\n\tget layers_controller() {\n\t\treturn (this._layers_controller = this._layers_controller || new LayersController(this));\n\t}\n\tprotected _post_process_controller: PostProcessController | undefined;\n\tget post_process_controller(): PostProcessController {\n\t\treturn (this._post_process_controller = this._post_process_controller || new PostProcessController(this));\n\t}\n\n\t// protected _used_in_scene: boolean = true;\n\tinitialize_base_node() {\n\t\tsuper.initialize_base_node();\n\t\t// this.io.inputs.set_count(0, 1);\n\t\tthis.io.outputs.set_has_one_output();\n\t\t// this._init_dirtyable_hook();\n\n\t\t// this.flags.display.add_hook(() => {\n\t\t// \tthis.set_used_in_scene(this.flags.display.active || false);\n\t\t// });\n\t\tthis.transform_controller.initialize_node();\n\t}\n\n\t// create_common_params() {\n\t// \t// this.within_param_folder('transform', () => {\n\t// \t// \t// this.add_param(ParamType.OPERATOR_PATH, 'controls', '', {\n\t// \t// \t// \tnode_selection: {\n\t// \t// \t// \t\tcontext: NodeContext.EVENT,\n\t// \t// \t// \t},\n\t// \t// \t// });\n\t// \t// \t// CoreTransform.create_params(this); // removed since they are now added Persp Camera\n\t// \t// \t// this.add_param( ParamType.TOGGLE, 'is_updating', 0, {cook: false, hidden: true}); //, hidden: true} )\n\t// \t// \t// this.add_param(ParamType.VECTOR3, 'target', [0, 0, 0], {cook: false}); //, hidden: true} )\n\t// \t// });\n\t// \t// this.within_param_folder('render', () => {\n\t// \t// this.layers_controller.add_params();\n\t// \t// this.add_param(ParamType.FLOAT, 'near', BASE_CAMERA_DEFAULT.near, {range: [0, 100]});\n\t// \t// this.add_param(ParamType.FLOAT, 'far', BASE_CAMERA_DEFAULT.far, {range: [0, 100]});\n\t// \t// this.add_param(ParamType.BOOLEAN, 'lock_width', 1);\n\t// \t// });\n\t// \t// this.background_controller.add_params();\n\t// \t// this.post_process_controller.add_params();\n\t// }\n\n\t// create_player_camera_params() {\n\t// \tthis.add_param(ParamType.BUTTON, 'set_master_camera', null, {callback: this.set_as_master_camera.bind(this)});\n\t// }\n\t// is_updating():boolean{\n\t// \treturn this.param('is_updating').value()\n\t// }\n\n\t// as_code_set_up_custom: ->\n\t// \tlines = []\n\t// \tlines.push \"#{this.code_var_name()}.set_display_flag(#{this.display_flag_state()})\"\n\t// \tlines\n\n\tasync cook() {\n\t\tthis.transform_controller.update();\n\t\tthis.layers_controller.update();\n\t\tawait this.background_controller.update();\n\n\t\tif (this._object.near != this.pv.near || this._object.far != this.pv.far) {\n\t\t\tthis._object.near = this.pv.near;\n\t\t\tthis._object.far = this.pv.far;\n\t\t\tthis._object.updateProjectionMatrix();\n\t\t}\n\n\t\tawait this.post_process_controller.update_composer_passes();\n\t\tthis.update_camera();\n\t\tthis.controls_controller.update_controls();\n\n\t\t// TODO: ideally the update transform and update camera\n\t\t// can both return if the camera has changed\n\t\t// and we can run this here instead of inside the update_transform and update_camera\n\t\t// this._object.dispatchEvent( EVENT_CHANGE )\n\t\tthis._object.dispatchEvent(EVENT_CHANGE);\n\t\tthis.cook_controller.end_cook();\n\t}\n\n\ton_create() {}\n\t//\n\ton_delete() {}\n\t//\n\n\tcamera() {\n\t\treturn this._object;\n\t}\n\n\tupdate_camera() {}\n\n\t//\n\tstatic PARAM_CALLBACK_set_master_camera(node: BaseCameraObjNodeType) {\n\t\tnode.set_as_master_camera();\n\t}\n\tset_as_master_camera() {\n\t\tthis.scene.cameras_controller.set_master_camera_node_path(this.full_path());\n\t}\n\n\tsetup_for_aspect_ratio(aspect: number) {\n\t\tif (lodash_isNaN(aspect)) {\n\t\t\treturn;\n\t\t}\n\t\tif (aspect && this._aspect != aspect) {\n\t\t\tthis._aspect = aspect;\n\t\t\tthis._update_for_aspect_ratio();\n\t\t}\n\t}\n\tprotected _update_for_aspect_ratio(): void {}\n\n\tupdate_transform_params_from_object() {\n\t\t// CoreTransform.set_params_from_matrix(this._object.matrix, this, {scale: false})\n\t\tCoreTransform.set_params_from_object(this._object, this);\n\t}\n\tcreate_viewer(element: HTMLElement): ThreejsViewer {\n\t\treturn new ThreejsViewer(element, this.scene, this);\n\t}\n}\n// \tconsole.warn \"camera #{this.full_path()} has no controls assigned\"\n\n// controls_node: ->\n// \tif @_param_controls? && @_param_controls != ''\n// \t\tCore.Walker.find_node(this, @_param_controls)\n\nexport type BaseCameraObjNodeType = TypedCameraObjNode<OrthoOrPerspCamera, BaseCameraObjParamsConfig>;\nexport class BaseCameraObjNodeClass extends TypedCameraObjNode<OrthoOrPerspCamera, BaseCameraObjParamsConfig> {}\n","import lodash_uniq from 'lodash/uniq';\nimport lodash_compact from 'lodash/compact';\nimport lodash_isNaN from 'lodash/isNaN';\nimport lodash_trim from 'lodash/trim';\nimport lodash_flatten from 'lodash/flatten';\nimport lodash_sum from 'lodash/sum';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Points} from 'three/src/objects/Points';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {Group} from 'three/src/objects/Group';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Box3} from 'three/src/math/Box3';\n// const THREE = {Box3, BufferGeometry, Group, LineSegments, Mesh, Object3D, Points, Vector3}\nimport {CoreObject} from './Object';\nimport {CoreGeometry} from './Geometry';\nimport {CoreAttribute} from './Attribute';\n// import {Core} from '../_Module'\nimport {CoreString} from '../String';\nimport {CoreConstant, AttribClass} from './Constant';\n\n// import './MonkeyPatch'\n\nexport type GroupString = string;\n\nexport interface Object3DWithGeometry extends Object3D {\n\tgeometry: BufferGeometry;\n}\n\nexport class CoreGroup {\n\t// _group: Group\n\tprivate _timestamp: number | undefined;\n\t// _core_objects:\n\tprivate _objects: Object3D[] | undefined;\n\tprivate _core_objects: CoreObject[] | undefined;\n\n\t// _geometries: BufferGeometry[];\n\tprivate _core_geometries: CoreGeometry[] | undefined;\n\n\tprivate _bounding_box: Box3 | undefined;\n\t// private _bounding_sphere: Sphere | undefined;\n\n\tconstructor() {\n\t\t//_group: Group){\n\t\t// this._group = _group;\n\t\tthis.touch();\n\t}\n\n\t//\n\t//\n\t// TIMESTAMP\n\t//\n\t//\n\ttimestamp() {\n\t\treturn this._timestamp;\n\t}\n\ttouch() {\n\t\tthis._timestamp = performance.now();\n\t\tthis.reset();\n\t}\n\treset() {\n\t\tthis._bounding_box = undefined;\n\t\t// this._bounding_sphere = undefined;\n\t\tthis._core_geometries = undefined;\n\t\tthis._core_objects = undefined;\n\t}\n\n\t//\n\t//\n\t// CLONE\n\t//\n\t//\n\tclone() {\n\t\tconst core_group = new CoreGroup();\n\t\tif (this._objects) {\n\t\t\tconst objects = [];\n\t\t\tfor (let object of this._objects) {\n\t\t\t\tobjects.push(CoreObject.clone(object));\n\t\t\t}\n\t\t\tcore_group.set_objects(objects);\n\t\t}\n\t\treturn core_group;\n\t}\n\t//\n\t//\n\t// OBJECTS\n\t//\n\t//\n\tset_objects(objects: Object3D[]) {\n\t\tthis._objects = objects;\n\t\tthis.touch();\n\t}\n\tobjects() {\n\t\treturn this._objects as Object3DWithGeometry[];\n\t}\n\tcore_objects() {\n\t\treturn (this._core_objects = this._core_objects || this._create_core_objects());\n\t}\n\tprivate _create_core_objects(): CoreObject[] {\n\t\tconst list: CoreObject[] = [];\n\t\tif (this._objects) {\n\t\t\tfor (let i = 0; i < this._objects.length; i++) {\n\t\t\t\tthis._objects[i].traverse((object) => {\n\t\t\t\t\tconst core_object = new CoreObject(object, i);\n\t\t\t\t\tlist.push(core_object);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\n\t// group() {\n\t// \treturn this._group;\n\t// }\n\t// uuid() {\n\t// \treturn this._group.uuid;\n\t// }\n\n\tgeometries(): BufferGeometry[] {\n\t\t// this._geometries = [];\n\t\t// for (let object of this._objects) {\n\t\t// \tobject.traverse((object) => this.__geometry_from_object.bind(this)(this._geometries, object));\n\t\t// \t// \tconst geometry = this.geometry_from_object(object)\n\t\t// \t// \tif (geometry != null) {\n\t\t// \t// \t\treturn list.push(new CoreGeometry(geometry));\n\t\t// \t// \t}\n\t\t// \t// });\n\t\t// }\n\t\t// return this._geometries;\n\t\tconst list: BufferGeometry[] = [];\n\t\tfor (let core_object of this.core_objects()) {\n\t\t\tconst geometry = (core_object.object() as Mesh).geometry as BufferGeometry;\n\t\t\tif (geometry) {\n\t\t\t\tlist.push(geometry);\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tcore_geometries(): CoreGeometry[] {\n\t\treturn (this._core_geometries = this._core_geometries || this.create_core_geometries());\n\t}\n\tprivate create_core_geometries() {\n\t\tconst list: CoreGeometry[] = [];\n\t\tfor (let geometry of this.geometries()) {\n\t\t\tlist.push(new CoreGeometry(geometry));\n\t\t\t// object.traverse(object=> this.__core_geometry_from_object.bind(this)(this._core_geometries, object))\n\t\t\t// \tconst geometry = this.geometry_from_object(object)\n\t\t\t// \tif (geometry != null) {\n\t\t\t// \t\treturn list.push(new CoreGeometry(geometry));\n\t\t\t// \t}\n\t\t\t// });\n\t\t}\n\t\treturn list;\n\t}\n\t__geometry_from_object(list: BufferGeometry[], object: Mesh) {\n\t\tif (object.geometry) {\n\t\t\treturn list.push(object.geometry as BufferGeometry);\n\t\t}\n\t}\n\t// __core_geometry_from_object(list, object){\n\t// \tconst geometry = CoreGroup.geometry_from_object(object)\n\t// \tif (geometry != null) {\n\t// \t\treturn list.push(new CoreGeometry(geometry));\n\t// \t}\n\t// }\n\tstatic geometry_from_object(object: Object3D): BufferGeometry | null {\n\t\tif ((object as Mesh).isMesh || (object as LineSegments).isLine || (object as Points).isPoints) {\n\t\t\treturn (object as Mesh).geometry as BufferGeometry;\n\t\t}\n\t\treturn null;\n\t}\n\tfaces() {\n\t\treturn lodash_flatten(this.core_geometries().map((g) => g.faces()));\n\t}\n\tpoints() {\n\t\treturn lodash_flatten(this.core_geometries().map((g) => g.points()));\n\t}\n\tpoints_count() {\n\t\treturn lodash_sum(this.core_geometries().map((g) => g.points_count()));\n\t}\n\tpoints_from_group(group: GroupString) {\n\t\tif (group) {\n\t\t\tconst indices = CoreString.indices(group);\n\t\t\tconst points = this.points();\n\t\t\treturn lodash_compact(indices.map((i) => points[i]));\n\t\t} else {\n\t\t\treturn this.points();\n\t\t}\n\t}\n\n\tstatic from_objects(objects: Object3D[]): CoreGroup {\n\t\tconst core_group = new CoreGroup();\n\t\tcore_group.set_objects(objects);\n\t\treturn core_group;\n\t}\n\n\t// objects() {\n\t// \treturn this._objects = lodash_map(this._group.children, (object, i)=> {\n\t// \t\tconst object_wrapper = new CoreObject(object);\n\t// \t\tobject_wrapper.set_index(i);\n\t// \t\treturn object_wrapper;\n\t// \t});\n\t// }\n\tobjects_from_group(group_name: string): Object3D[] {\n\t\treturn this.core_objects_from_group(group_name).map((co) => co.object());\n\t}\n\tcore_objects_from_group(group_name: string): CoreObject[] {\n\t\tgroup_name = lodash_trim(group_name);\n\n\t\tif (group_name !== '') {\n\t\t\tconst index = parseInt(group_name);\n\t\t\tif (!lodash_isNaN(index)) {\n\t\t\t\treturn lodash_compact([this.core_objects()[index]]);\n\t\t\t} else {\n\t\t\t\treturn this.core_objects().filter((core_object) => {\n\t\t\t\t\treturn CoreString.match_mask(group_name, core_object.name());\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.core_objects();\n\t\t}\n\t}\n\n\t// reset: ->\n\t// \t@_geometries = []\n\t// \t@_points = []\n\n\t// _find_geometries: ->\n\t// \tlist = []\n\t// \t@_group.traverse (object)=>\n\t// \t\tif (geometry = object.geometry)?\n\t// \t\t\tlist.push new Geometry(geometry)\n\t// \tlist\n\n\t// _find_points: ->\n\t// \tlodash_flatten( lodash_map(this.objects(), (g)->g.points()) )\n\n\t// bounding_box() {\n\t// \treturn new Box3().setFromObject(this._group);\n\t// }\n\tbounding_box(): Box3 {\n\t\treturn (this._bounding_box = this._bounding_box || this._compute_bounding_box());\n\t}\n\t// bounding_sphere(): Sphere {\n\t// \treturn (this._bounding_sphere = this._bounding_sphere || this._compute_bounding_sphere());\n\t// }\n\tcenter(): Vector3 {\n\t\tconst center = new Vector3();\n\t\tthis.bounding_box().getCenter(center);\n\t\treturn center;\n\t}\n\tsize(): Vector3 {\n\t\tconst size = new Vector3();\n\t\tthis.bounding_box().getSize(size);\n\t\treturn size;\n\t}\n\n\tprivate _compute_bounding_box() {\n\t\tlet bbox: Box3 | undefined; // = new Box3();\n\t\tif (this._objects) {\n\t\t\tfor (let object of this._objects) {\n\t\t\t\tconst geometry = (object as Object3DWithGeometry).geometry;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t\tif (bbox) {\n\t\t\t\t\t\tbbox.expandByObject(object);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (geometry.boundingBox) {\n\t\t\t\t\t\t\tbbox = geometry.boundingBox.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbbox = bbox || new Box3(new Vector3(-1, -1, -1), new Vector3(+1, +1, +1));\n\t\treturn bbox;\n\t}\n\t// private _compute_bounding_sphere() {\n\t// \tlet sphere: Sphere | undefined; // = new Box3();\n\t// \tif (this._objects) {\n\t// \t\tfor (let object of this._objects) {\n\t// \t\t\tconst geometry = (object as Object3DWithGeometry).geometry;\n\t// \t\t\tgeometry.computeBoundingSphere();\n\t// \t\t\tif (sphere) {\n\t// \t\t\t\tsphere.expandByObject(object);\n\t// \t\t\t} else {\n\t// \t\t\t\tsphere = geometry.boundingBox.clone();\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \tsphere = sphere || new Sphere(new Vector3(0, 0, 0), 1);\n\t// \treturn sphere;\n\t// }\n\tcompute_vertex_normals() {\n\t\tfor (let object of this.core_objects()) {\n\t\t\tobject.compute_vertex_normals();\n\t\t}\n\t}\n\n\thas_attrib(name: string) {\n\t\tlet first_geometry;\n\t\tif ((first_geometry = this.core_geometries()[0]) != null) {\n\t\t\treturn first_geometry.has_attrib(name);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\tattrib_type(name: string) {\n\t\tconst first_geometry = this.core_geometries()[0];\n\t\tif (first_geometry != null) {\n\t\t\treturn first_geometry.attrib_type(name);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\trename_attrib(old_name: string, new_name: string, attrib_class: AttribClass) {\n\t\tswitch (attrib_class) {\n\t\t\tcase CoreConstant.ATTRIB_CLASS.VERTEX:\n\t\t\t\tif (this.has_attrib(old_name)) {\n\t\t\t\t\tif (this._objects) {\n\t\t\t\t\t\tfor (let object of this._objects) {\n\t\t\t\t\t\t\tobject.traverse((child) => {\n\t\t\t\t\t\t\t\tconst geometry = CoreGroup.geometry_from_object(child);\n\t\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\t\tconst core_geometry = new CoreGeometry(geometry);\n\t\t\t\t\t\t\t\t\tcore_geometry.rename_attribute(old_name, new_name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase CoreConstant.ATTRIB_CLASS.OBJECT:\n\t\t\t\tif (this.has_attrib(old_name)) {\n\t\t\t\t\tif (this._objects) {\n\t\t\t\t\t\tfor (let object of this._objects) {\n\t\t\t\t\t\t\tobject.traverse((child) => {\n\t\t\t\t\t\t\t\tconst core_object = new CoreObject(child, 0);\n\t\t\t\t\t\t\t\tcore_object.rename_attribute(old_name, new_name);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tattrib_names() {\n\t\tlet first_geometry;\n\t\tif ((first_geometry = this.core_geometries()[0]) != null) {\n\t\t\treturn first_geometry.attrib_names();\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tobject_attrib_names() {\n\t\tlet first_object;\n\t\tif ((first_object = this.core_objects()[0]) != null) {\n\t\t\treturn first_object.attrib_names();\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tattrib_names_matching_mask(masks_string: GroupString) {\n\t\tconst masks = CoreString.attrib_names(masks_string);\n\n\t\tconst matching_attrib_names = [];\n\t\tfor (let attrib_name of this.attrib_names()) {\n\t\t\tfor (let mask of masks) {\n\t\t\t\tif (CoreString.match_mask(attrib_name, mask)) {\n\t\t\t\t\tmatching_attrib_names.push(attrib_name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn lodash_uniq(matching_attrib_names);\n\t}\n\n\tattrib_sizes() {\n\t\tlet first_geometry;\n\t\tif ((first_geometry = this.core_geometries()[0]) != null) {\n\t\t\treturn first_geometry.attrib_sizes();\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\tattrib_size(attrib_name: string) {\n\t\tlet first_geometry;\n\t\tif ((first_geometry = this.core_geometries()[0]) != null) {\n\t\t\treturn first_geometry.attrib_size(attrib_name);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tadd_numeric_vertex_attrib(name: string, size: number, default_value: NumericAttribValue) {\n\t\tif (default_value == null) {\n\t\t\tdefault_value = CoreAttribute.default_value(size);\n\t\t}\n\n\t\tfor (let core_geometry of this.core_geometries()) {\n\t\t\tcore_geometry.add_numeric_attrib(name, size, default_value);\n\t\t}\n\t}\n\n\tadd_numeric_object_attrib(name: string, size: number, default_value: NumericAttribValue) {\n\t\tif (default_value == null) {\n\t\t\tdefault_value = CoreAttribute.default_value(size);\n\t\t}\n\n\t\tfor (let core_object of this.core_objects()) {\n\t\t\tcore_object.add_numeric_attrib(name, default_value);\n\t\t}\n\t}\n\n\tstatic clone(src_group: Group) {\n\t\tconst new_group = new Group();\n\n\t\tsrc_group.children.forEach((src_object) => {\n\t\t\tconst new_object = CoreObject.clone(src_object);\n\t\t\tnew_group.add(new_object);\n\t\t});\n\n\t\treturn new_group;\n\t}\n}\n","import {Vector4} from 'three/src/math/Vector4';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n// const THREE = {BufferGeometry, Vector2, Vector3, Vector4}\nimport {CoreAttribute} from './Attribute';\nimport {CoreGeometry} from './Geometry';\nimport {CoreEntity} from './Entity';\n// import Geometry from './Geometry';\n\nconst ATTRIB_NAMES = {\n\tPOSITION: 'position',\n\tNORMAL: 'normal',\n};\n\nenum ComponentName {\n\tx = 'x',\n\ty = 'y',\n\tz = 'z',\n\tw = 'w',\n\tr = 'r',\n\tg = 'g',\n\tb = 'b',\n}\nconst COMPONENT_INDICES = {\n\tx: 0,\n\ty: 1,\n\tz: 2,\n\tw: 3,\n\tr: 0,\n\tg: 1,\n\tb: 2,\n};\n\nconst PTNUM = 'ptnum';\nconst DOT = '.';\n\nexport class CorePoint extends CoreEntity {\n\t_geometry: BufferGeometry;\n\t_position: Vector3 | undefined;\n\t_normal: Vector3 | undefined;\n\n\tconstructor(private _core_geometry: CoreGeometry, index: number) {\n\t\tsuper(index);\n\t\tthis._geometry = this._core_geometry.geometry();\n\t}\n\n\tgeometry_wrapper() {\n\t\treturn this._core_geometry;\n\t}\n\tgeometry() {\n\t\treturn (this._geometry = this._geometry || this._core_geometry.geometry());\n\t}\n\n\t// add_attribute: (name, size, value)->\n\t// \t@_attributes[name] = new Attribute(size, value)\n\n\tattrib_size(name: string): number {\n\t\t//@_attributes[name].size()\n\t\tname = CoreAttribute.remap_name(name);\n\t\treturn this._geometry.getAttribute(name).itemSize;\n\t}\n\n\thas_attrib(name: string): boolean {\n\t\tconst remapped_name = CoreAttribute.remap_name(name);\n\t\treturn this._core_geometry.has_attrib(remapped_name);\n\t}\n\n\tattrib_value(name: string) {\n\t\t//, target){ // target could be used, but not entirely sure I am ready now\n\n\t\tif (name === PTNUM) {\n\t\t\treturn this.index;\n\t\t} else {\n\t\t\tlet component_name = null;\n\t\t\tlet component_index = null;\n\t\t\tif (name[name.length - 2] === DOT) {\n\t\t\t\tcomponent_name = name[name.length - 1] as ComponentName;\n\t\t\t\tcomponent_index = COMPONENT_INDICES[component_name];\n\t\t\t\tname = name.substring(0, name.length - 2);\n\t\t\t}\n\t\t\tconst remaped_name = CoreAttribute.remap_name(name);\n\n\t\t\t//if (attrib = @_attributes[name])?\n\t\t\tconst attrib = this._geometry.getAttribute(remaped_name);\n\t\t\tif (attrib) {\n\t\t\t\tconst {array} = attrib;\n\t\t\t\tif (this._core_geometry.is_attrib_indexed(remaped_name)) {\n\t\t\t\t\tconst value_index = this.attrib_value_index(remaped_name); //attrib.value()\n\t\t\t\t\treturn this._core_geometry.user_data_attrib(remaped_name)[value_index];\n\t\t\t\t} else {\n\t\t\t\t\tconst size = attrib.itemSize;\n\t\t\t\t\tconst start_index = this._index * size;\n\n\t\t\t\t\tif (component_index == null) {\n\t\t\t\t\t\tswitch (size) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\treturn array[start_index];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\treturn new Vector2(array[start_index + 0], array[start_index + 1]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\treturn new Vector3(\n\t\t\t\t\t\t\t\t\tarray[start_index + 0],\n\t\t\t\t\t\t\t\t\tarray[start_index + 1],\n\t\t\t\t\t\t\t\t\tarray[start_index + 2]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t// target.fromArray(array, start_index)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\treturn new Vector4(\n\t\t\t\t\t\t\t\t\tarray[start_index + 0],\n\t\t\t\t\t\t\t\t\tarray[start_index + 1],\n\t\t\t\t\t\t\t\t\tarray[start_index + 2],\n\t\t\t\t\t\t\t\t\tarray[start_index + 3]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow `size not valid (${size})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (size) {\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\treturn array[start_index];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn array[start_index + component_index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst message = `attrib ${name} not found. availables are: ${Object.keys(\n\t\t\t\t\tthis._geometry.attributes || {}\n\t\t\t\t).join(',')}`;\n\t\t\t\tconsole.warn(message);\n\t\t\t\tthrow message;\n\t\t\t}\n\t\t}\n\t}\n\n\tattrib_value_index(name: string) {\n\t\tif (this._core_geometry.is_attrib_indexed(name)) {\n\t\t\t//@_attributes[name].value()\n\t\t\treturn this._geometry.getAttribute(name).array[this._index];\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tposition(): Vector3 {\n\t\t//@_attributes['position'].value()\n\t\tconst {array} = this._geometry.getAttribute(ATTRIB_NAMES.POSITION);\n\t\tthis._position = this._position || new Vector3();\n\t\treturn this._position.fromArray(array, this._index * 3);\n\t}\n\tset_position(new_position: Vector3) {\n\t\tthis.set_attrib_value_vector3(ATTRIB_NAMES.POSITION, new_position);\n\t}\n\n\tnormal(): Vector3 {\n\t\tconst {array} = this._geometry.getAttribute(ATTRIB_NAMES.NORMAL);\n\t\tthis._normal = this._normal || new Vector3();\n\t\treturn this._normal.fromArray(array, this._index * 3);\n\t}\n\tset_normal(new_normal: Vector3) {\n\t\treturn this.set_attrib_value_vector3(ATTRIB_NAMES.NORMAL, new_normal);\n\t}\n\n\tset_attrib_value(name: string, value: NumericAttribValue | string) {\n\t\t// TODO: this fails if the value is null\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (name == null) {\n\t\t\tthrow 'Point.set_attrib_value requires a name';\n\t\t}\n\n\t\t// attrib = @_attributes[name]\n\t\t// attrib.set_value(value)\n\t\t//value = attrib.value()\n\t\t//value = this.attrib_value()\n\t\tconst attrib = this._geometry.getAttribute(name);\n\t\tconst array = attrib.array as number[];\n\t\tconst attrib_size = attrib.itemSize;\n\n\t\tswitch (attrib_size) {\n\t\t\tcase 1:\n\t\t\t\tarray[this._index] = value as number;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tconst v2 = value as Vector2Like;\n\t\t\t\tarray[this._index * 2 + 0] = v2.x;\n\t\t\t\tarray[this._index * 2 + 1] = v2.y;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tconst is_color = (value as ColorLike).r != null;\n\t\t\t\tif (is_color) {\n\t\t\t\t\tconst col = value as ColorLike;\n\t\t\t\t\tarray[this._index * 3 + 0] = col.r;\n\t\t\t\t\tarray[this._index * 3 + 1] = col.g;\n\t\t\t\t\tarray[this._index * 3 + 2] = col.b;\n\t\t\t\t} else {\n\t\t\t\t\tconst v3 = value as Vector3Like;\n\t\t\t\t\tarray[this._index * 3 + 0] = v3.x;\n\t\t\t\t\tarray[this._index * 3 + 1] = v3.y;\n\t\t\t\t\tarray[this._index * 3 + 2] = v3.z;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn(`Point.set_attrib_value does not yet allow attrib size ${attrib_size}`);\n\t\t\t\tthrow `attrib size ${attrib_size} not implemented`;\n\t\t}\n\t}\n\tset_attrib_value_vector3(name: string, value: Vector3) {\n\t\t// TODO: this fails if the value is null\n\t\tif (value == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (name == null) {\n\t\t\tthrow 'Point.set_attrib_value requires a name';\n\t\t}\n\n\t\tconst attrib = this._geometry.getAttribute(name);\n\t\tconst array = attrib.array as number[];\n\t\tconst i = this._index * 3;\n\n\t\tarray[i] = value.x;\n\t\tarray[i + 1] = value.y;\n\t\tarray[i + 2] = value.z;\n\t}\n\n\tset_attrib_index(name: string, new_value_index: number) {\n\t\t// attrib = @_attributes[name]\n\t\t// attrib.set_value(new_value_index)\n\t\t//value = attrib.value()\n\t\tconst array = this._geometry.getAttribute(name).array as number[];\n\t\treturn (array[this._index] = new_value_index);\n\t}\n}\n","export class CoreEntity {\n\tconstructor(protected _index: number) {}\n\tget index() {\n\t\treturn this._index;\n\t}\n}\n","type IterateeMethod = (element: any, index?: number) => void;\ntype IterateeMethodArray = IterateeMethod; // TODO: check this, as the element may be an array\ntype IterateeMethodCount = (index: number) => void;\n\ninterface CoreIteratorOptions {\n\tmax_time_per_chunk?: number;\n\tcheck_every_interations?: number;\n}\n\nexport class CoreIterator {\n\t// array\n\tprivate _array: any[] | undefined;\n\tprivate _iteratee_method_array: IterateeMethodArray | undefined;\n\tprivate _bound_next_with_array: (() => void) | undefined;\n\tprivate _current_array_element: any;\n\tprivate _array_index: number = 0;\n\n\t// count\n\tprivate _count: number = 0;\n\tprivate _iteratee_method_count: IterateeMethodCount | undefined;\n\tprivate _bound_next_with_count: (() => void) | undefined;\n\tprivate _current_count_index: number = 0;\n\n\tprivate _max_time_per_chunk: number;\n\tprivate _check_every_interations: number;\n\n\tprivate _resolve: null | (() => void) = null;\n\n\tconstructor(options: CoreIteratorOptions = {}) {\n\t\tthis._max_time_per_chunk = options.max_time_per_chunk || 10;\n\t\tthis._check_every_interations = options.check_every_interations || 100;\n\t}\n\n\tasync start_with_count(count: number, iteratee_method: IterateeMethodCount) {\n\t\tthis._count = count;\n\t\tthis._current_count_index = 0;\n\t\tthis._iteratee_method_count = iteratee_method;\n\t\tthis._bound_next_with_count = this.next_with_count.bind(this);\n\n\t\tif (this._resolve) {\n\t\t\tthrow 'an iterator cannot be started twice';\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis.next_with_count();\n\t\t});\n\t}\n\tnext_with_count() {\n\t\tconst start_time = performance.now();\n\n\t\tif (this._iteratee_method_count && this._bound_next_with_count) {\n\t\t\twhile (this._current_count_index < this._count) {\n\t\t\t\tthis._iteratee_method_count(this._current_count_index);\n\n\t\t\t\tthis._current_count_index++;\n\n\t\t\t\tif (this._current_count_index % this._check_every_interations == 0) {\n\t\t\t\t\tif (performance.now() - start_time > this._max_time_per_chunk) {\n\t\t\t\t\t\tsetTimeout(this._bound_next_with_count, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._current_count_index >= this._count) {\n\t\t\tif (this._resolve) {\n\t\t\t\tthis._resolve();\n\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t//\n\t// ARRAY\n\t//\n\t//\n\tasync start_with_array(array: any[], iteratee_method: IterateeMethod) {\n\t\tthis._array = array;\n\t\tthis._array_index = 0;\n\t\tthis._iteratee_method_array = iteratee_method;\n\t\tthis._bound_next_with_array = this.next_with_array.bind(this);\n\n\t\tif (this._resolve) {\n\t\t\tthrow 'an iterator cannot be started twice';\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis.next_with_array();\n\t\t});\n\t}\n\tnext_with_array() {\n\t\tconst start_time = performance.now();\n\n\t\tif (this._iteratee_method_array && this._bound_next_with_array && this._array) {\n\t\t\twhile ((this._current_array_element = this._array[this._array_index])) {\n\t\t\t\tthis._iteratee_method_array(this._current_array_element, this._array_index);\n\n\t\t\t\tthis._array_index++;\n\n\t\t\t\tif (this._array_index % this._check_every_interations == 0) {\n\t\t\t\t\tif (performance.now() - start_time > this._max_time_per_chunk) {\n\t\t\t\t\t\tsetTimeout(this._bound_next_with_array, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._current_array_element === undefined) {\n\t\t\tif (this._resolve) {\n\t\t\t\tthis._resolve();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {CoreMath} from '../../math/_Module'\nimport {Vector2} from 'three/src/math/Vector2'\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute'\nimport {BufferGeometry} from 'three/src/core/BufferGeometry'\n\nexport class CoreGeometryUtilCircle {\n\tstatic positions(\n\t\tradius: number,\n\t\tsegments_count: number,\n\t\tarc_angle: number = 360\n\t) {\n\t\tconst radian_per_segment =\n\t\t\tCoreMath.degrees_to_radians(arc_angle) / segments_count\n\n\t\tconst positions = []\n\t\tfor (let i = 0; i < segments_count; i++) {\n\t\t\tconst point_radian = radian_per_segment * i\n\t\t\tconst x = radius * Math.cos(point_radian)\n\t\t\tconst y = radius * Math.sin(point_radian)\n\n\t\t\tpositions.push(new Vector2(x, y))\n\t\t}\n\n\t\treturn positions\n\t}\n\n\tstatic create(\n\t\tradius: number,\n\t\tsegments_count: number,\n\t\tarc_angle: number = 360\n\t) {\n\t\tconst positions_2d = this.positions(radius, segments_count, arc_angle)\n\n\t\tconst positions = []\n\t\tconst indices = []\n\t\tlet position_2d\n\t\tfor (let i = 0; i < positions_2d.length; i++) {\n\t\t\tposition_2d = positions_2d[i]\n\n\t\t\tpositions.push(position_2d.x)\n\t\t\tpositions.push(position_2d.y)\n\t\t\tpositions.push(0)\n\n\t\t\tif (i > 0) {\n\t\t\t\tindices.push(i - 1)\n\t\t\t\tindices.push(i)\n\t\t\t}\n\t\t}\n\n\t\t// also add the last segment\n\t\tindices.push(segments_count - 1)\n\t\tindices.push(0)\n\n\t\tconst geometry = new BufferGeometry()\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew Float32BufferAttribute(positions, 3)\n\t\t)\n\t\tgeometry.setIndex(indices)\n\n\t\treturn geometry\n\t}\n}\n","import lodash_isNumber from 'lodash/isNumber';\n\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Quaternion} from 'three/src/math/Quaternion';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {InstancedBufferGeometry} from 'three/src/core/InstancedBufferGeometry';\nimport {InstancedBufferAttribute} from 'three/src/core/InstancedBufferAttribute';\n// import {BoxBufferGeometry} from 'three/src/geometries/BoxGeometry'\n// const THREE = {BoxBufferGeometry, InstancedBufferAttribute, InstancedBufferGeometry, Matrix4, Quaternion, Vector2, Vector3}\n\nimport {CorePoint} from './Point';\n// import {Core} from '../_Module';\nimport {CoreGroup} from './Group';\nimport {CoreGeometry} from './Geometry';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n\nconst DEFAULT = {\n\tSCALE: new Vector3(1, 1, 1),\n\tPSCALE: 1,\n\tEYE: new Vector3(0, 0, 0),\n\tUP: new Vector3(0, 1, 0),\n};\nconst SCALE_ATTRIB_NAME = 'scale';\nconst PSCALE_ATTRIB_NAME = 'pscale';\nconst NORMAL_ATTRIB_NAME = 'normal';\nconst UP_ATTRIB_NAME = 'up';\nconst MATRIX_T = 'translate';\nconst MATRIX_R = 'rotate';\nconst MATRIX_S = 'scale';\n\nconst DEFAULT_COLOR = new Vector3(1, 1, 1);\nconst DEFAULT_UV = new Vector2(0, 0);\nconst ATTRIB_NAME_UV = 'uv';\nconst ATTRIB_NAME_COLOR = 'color';\n\nexport class CoreInstancer {\n\tprivate _is_pscale_present: boolean;\n\tprivate _is_scale_present: boolean;\n\tprivate _is_normal_present: boolean;\n\tprivate _is_up_present: boolean;\n\tprivate _do_rotate_matrices: boolean;\n\tprivate _matrices: Dictionary<Matrix4> = {};\n\n\tconstructor(private _group_wrapper: CoreGroup) {\n\t\tthis._is_pscale_present = this._group_wrapper.has_attrib('pscale');\n\t\tthis._is_scale_present = this._group_wrapper.has_attrib('scale');\n\n\t\tthis._is_normal_present = this._group_wrapper.has_attrib('normal');\n\t\tthis._is_up_present = this._group_wrapper.has_attrib('up');\n\n\t\tthis._do_rotate_matrices = this._is_normal_present; //&& this._is_up_present;\n\t}\n\n\tmatrices(): Matrix4[] {\n\t\tthis._matrices = {};\n\t\tthis._matrices[MATRIX_T] = new Matrix4();\n\t\tthis._matrices[MATRIX_R] = new Matrix4();\n\t\tthis._matrices[MATRIX_S] = new Matrix4();\n\n\t\treturn this._group_wrapper.points().map((point) => {\n\t\t\treturn this._matrix_from_point(point);\n\t\t});\n\t}\n\n\t_matrix_from_point(point: CorePoint): Matrix4 {\n\t\tconst t = point.position();\n\t\t//r = new Vector3(0,0,0)\n\t\tlet scale = this._is_scale_present ? point.attrib_value(SCALE_ATTRIB_NAME) : DEFAULT.SCALE;\n\t\tconst pscale = this._is_pscale_present ? point.attrib_value(PSCALE_ATTRIB_NAME) : DEFAULT.PSCALE;\n\t\tscale = scale.clone().multiplyScalar(pscale);\n\n\t\t//matrix = #Core.Transform.matrix(t, r, s, scale)\n\t\tconst matrix = new Matrix4();\n\t\tmatrix.identity();\n\n\t\tconst scale_matrix = this._matrices[MATRIX_S];\n\t\tscale_matrix.makeScale(scale.x, scale.y, scale.z);\n\n\t\tconst translate_matrix = this._matrices[MATRIX_T];\n\t\ttranslate_matrix.makeTranslation(t.x, t.y, t.z);\n\n\t\tmatrix.multiply(translate_matrix);\n\n\t\tif (this._do_rotate_matrices) {\n\t\t\tconst rotate_matrix = this._matrices[MATRIX_R];\n\t\t\tconst eye = DEFAULT.EYE;\n\t\t\tconst center = point.attrib_value(NORMAL_ATTRIB_NAME).multiplyScalar(-1);\n\t\t\tconst up = this._is_up_present ? point.attrib_value(UP_ATTRIB_NAME) : DEFAULT.UP;\n\t\t\tup.normalize();\n\t\t\trotate_matrix.lookAt(eye, center, up);\n\n\t\t\tmatrix.multiply(rotate_matrix);\n\t\t}\n\n\t\tmatrix.multiply(scale_matrix);\n\n\t\treturn matrix;\n\t}\n\n\tstatic create_instance_buffer_geo(\n\t\tgeometry_to_instance: BufferGeometry,\n\t\ttemplate_core_group: CoreGroup,\n\t\tattributes_to_copy: string\n\t) {\n\t\tconst instance_pts = template_core_group.points();\n\t\t// geometry_to_instance = new BoxBufferGeometry( 2, 2, 2 )\n\t\t// geometry = new InstancedBufferGeometry()\n\t\t// geometry.index = geometry_to_instance.index\n\t\t// geometry.attributes.position = geometry_to_instance.attributes.position\n\t\t// geometry.attributes.uv = geometry_to_instance.attributes.uv\n\n\t\tconst geometry = new InstancedBufferGeometry();\n\t\tgeometry.copy(geometry_to_instance);\n\n\t\tconst instances_count = instance_pts.length;\n\t\tconst positions = new Float32Array(instances_count * 3);\n\t\tconst colors = new Float32Array(instances_count * 3);\n\t\tconst scales = new Float32Array(instances_count * 3);\n\t\tconst orients = new Float32Array(instances_count * 4);\n\n\t\tconst has_color = template_core_group.has_attrib(ATTRIB_NAME_COLOR);\n\n\t\tconst position = new Vector3(0, 0, 0);\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3(1, 1, 1);\n\n\t\tconst instancer = new CoreInstancer(template_core_group);\n\t\tconst instance_matrices = instancer.matrices();\n\n\t\tinstance_pts.forEach((instance_pt, i) => {\n\t\t\tconst index3 = i * 3;\n\t\t\tconst index4 = i * 4;\n\n\t\t\tconst matrix = instance_matrices[i];\n\t\t\tmatrix.decompose(position, quaternion, scale);\n\n\t\t\tposition.toArray(positions, index3);\n\t\t\tquaternion.toArray(orients, index4);\n\t\t\tscale.toArray(scales, index3);\n\n\t\t\tconst color = has_color ? instance_pt.attrib_value(ATTRIB_NAME_COLOR) : DEFAULT_COLOR;\n\t\t\tcolor.toArray(colors, index3);\n\t\t});\n\n\t\t// if(this._param_add_uv_offset){\n\t\tconst has_uv = template_core_group.has_attrib(ATTRIB_NAME_UV);\n\t\tif (has_uv) {\n\t\t\tconst uvs = new Float32Array(instances_count * 2);\n\t\t\tinstance_pts.forEach((instance_pt, i) => {\n\t\t\t\tconst index2 = i * 2;\n\t\t\t\tconst uv = has_uv ? instance_pt.attrib_value(ATTRIB_NAME_UV) : DEFAULT_UV;\n\t\t\t\tuv.toArray(uvs, index2);\n\t\t\t});\n\t\t\tgeometry.setAttribute('instanceUv', new InstancedBufferAttribute(uvs, 2));\n\t\t}\n\t\t// }\n\n\t\tgeometry.setAttribute('instancePosition', new InstancedBufferAttribute(positions, 3));\n\t\tgeometry.setAttribute('instanceScale', new InstancedBufferAttribute(scales, 3));\n\t\tgeometry.setAttribute('instanceOrientation', new InstancedBufferAttribute(orients, 4));\n\t\tgeometry.setAttribute('instanceColor', new InstancedBufferAttribute(colors, 3));\n\n\t\tconst attrib_names = template_core_group.attrib_names_matching_mask(attributes_to_copy);\n\n\t\tattrib_names.forEach((attrib_name) => {\n\t\t\tconst attrib_size = template_core_group.attrib_size(attrib_name);\n\t\t\tconst values = new Float32Array(instances_count * attrib_size);\n\t\t\tinstance_pts.forEach((pt, i) => {\n\t\t\t\tconst value = pt.attrib_value(attrib_name);\n\t\t\t\tif (lodash_isNumber(value)) {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t} else {\n\t\t\t\t\tvalue.toArray(values, i * attrib_size);\n\t\t\t\t}\n\t\t\t});\n\t\t\tgeometry.setAttribute(attrib_name, new InstancedBufferAttribute(values, attrib_size));\n\t\t});\n\n\t\tconst geometry_wrapper = new CoreGeometry(geometry);\n\t\tgeometry_wrapper.mark_as_instance();\n\n\t\treturn geometry;\n\t}\n}\n","// import {Core} from '../../_Module';\nimport lodash_isArray from 'lodash/isArray';\nimport lodash_isObject from 'lodash/isObject';\nimport lodash_isString from 'lodash/isString';\nimport lodash_flatten from 'lodash/flatten';\nimport {Points} from 'three/src/objects/Points';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nconst THREE = {BufferGeometry, Float32BufferAttribute, Points};\n\n// import UrlLoader from '../UrlLoader';\nimport {CoreString} from '../../String';\nimport {CoreGeometry} from '../../geometry/Geometry';\nimport {CoreConstant} from '../../geometry/Constant';\nimport {CoreAttributeData} from '../../geometry/AttributeData';\nimport {CoreAttribute} from '../../geometry/Attribute';\n// import {BaseNodeType} from '../../../engine/nodes/_Base';\nimport {Object3D} from 'three/src/core/Object3D';\n\nconst DEEP_ATTRIB_SEPARATOR = ':';\n\nexport interface JsonDataLoaderOptions {\n\tdata_keys_prefix?: string;\n\tskip_entries?: string;\n\tdo_convert?: boolean;\n\tconvert_to_numeric?: string;\n}\n\nexport class JsonDataLoader {\n\t_json: any[] | undefined;\n\t_attribute_datas_by_name: Dictionary<CoreAttributeData> = {};\n\tprivate _options: JsonDataLoaderOptions = {};\n\n\tconstructor(options: JsonDataLoaderOptions = {}) {\n\t\tthis._options.data_keys_prefix = options.data_keys_prefix;\n\t\tthis._options.skip_entries = options.skip_entries;\n\t\tthis._options.do_convert = options.do_convert || false;\n\t\tthis._options.convert_to_numeric = options.convert_to_numeric;\n\t}\n\t//\n\n\tload(\n\t\turl: string,\n\t\tsuccess_callback: (object: Object3D) => void,\n\t\tprogress_callback: (() => void) | undefined,\n\t\terror_callback: (error: ErrorEvent) => void | undefined\n\t) {\n\t\t// const url_loader = new UrlLoader();\n\t\t// const start_time = performance.now();\n\t\t// const config = {\n\t\t// \tcrossdomain: true\n\t\t// }\n\t\tfetch(url)\n\t\t\t.then(async (response) => {\n\t\t\t\t// const end_time = performance.now();\n\n\t\t\t\tthis._json = await response.json();\n\t\t\t\tif (this._options.data_keys_prefix != null && this._options.data_keys_prefix != '') {\n\t\t\t\t\tthis._json = this.get_prefixed_json(this._json, this._options.data_keys_prefix.split('.'));\n\t\t\t\t}\n\t\t\t\tconst object = this.create_object();\n\t\t\t\tsuccess_callback(object);\n\t\t\t})\n\t\t\t.catch((error: ErrorEvent) => {\n\t\t\t\tconsole.log('error', error);\n\t\t\t\terror_callback(error);\n\t\t\t});\n\t}\n\n\tget_prefixed_json(json: any, prefixes: string[]): any[] {\n\t\tif (prefixes.length == 0) {\n\t\t\treturn json;\n\t\t} else {\n\t\t\tconst first_prefix = prefixes.shift();\n\t\t\tif (first_prefix) {\n\t\t\t\treturn this.get_prefixed_json(json[first_prefix], prefixes);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tset_json(json: any) {\n\t\treturn (this._json = json);\n\t}\n\n\tcreate_object() {\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tconst core_geo = new CoreGeometry(geometry);\n\n\t\tif (this._json != null) {\n\t\t\tconst points_count = this._json.length;\n\t\t\tcore_geo.init_position_attribute(points_count);\n\n\t\t\tthis._find_attributes();\n\t\t\t// for(let attrib_name of Object.keys(this._attribute_names)){\n\t\t\t// \tconst attrib_data = this._attribute_datas_by_name[attrib_name];\n\t\t\t// \treturn core_geo.add_attribute(attrib_name, attrib_data);\n\t\t\t// }\n\n\t\t\tconst convert_to_numeric_masks = CoreString.attrib_names(this._options.convert_to_numeric || '');\n\n\t\t\t// set values\n\t\t\tfor (let attrib_name of Object.keys(this._attribute_datas_by_name)) {\n\t\t\t\tlet attrib_values = lodash_flatten(this._attribute_values_for_name(attrib_name));\n\n\t\t\t\tconst data = this._attribute_datas_by_name[attrib_name];\n\t\t\t\tconst size = data.size();\n\n\t\t\t\tif (data.type() === CoreConstant.ATTRIB_TYPE.STRING) {\n\t\t\t\t\t// const index_data = CoreAttribute.array_to_indexed_arrays(\n\t\t\t\t\t// \tattrib_values as string[]\n\t\t\t\t\t// )\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._options.do_convert &&\n\t\t\t\t\t\tCoreString.matches_one_mask(attrib_name, convert_to_numeric_masks)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst numerical_attrib_values: number[] = attrib_values.map((v) => {\n\t\t\t\t\t\t\tif (lodash_isString(v)) {\n\t\t\t\t\t\t\t\treturn parseFloat(v) || 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tgeometry.setAttribute(\n\t\t\t\t\t\t\tattrib_name,\n\t\t\t\t\t\t\tnew THREE.Float32BufferAttribute(numerical_attrib_values, size)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst index_data = CoreAttribute.array_to_indexed_arrays(attrib_values as string[]);\n\t\t\t\t\t\tcore_geo.set_indexed_attribute(attrib_name, index_data['values'], index_data['indices']);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst numerical_attrib_values = attrib_values as number[];\n\t\t\t\t\tgeometry.setAttribute(attrib_name, new THREE.Float32BufferAttribute(numerical_attrib_values, size));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new THREE.Points(geometry, CoreConstant.MATERIALS[THREE.Points.name]);\n\t}\n\n\tprivate _find_attributes() {\n\t\tlet first_pt;\n\n\t\tconst masks = CoreString.attrib_names(this._options.skip_entries || '');\n\n\t\tif (this._json) {\n\t\t\tif ((first_pt = this._json[0]) != null) {\n\t\t\t\tfor (let attrib_name of Object.keys(first_pt)) {\n\t\t\t\t\tconst attrib_value = first_pt[attrib_name];\n\n\t\t\t\t\tif (this._value_has_subentries(attrib_value)) {\n\t\t\t\t\t\tfor (let key of Object.keys(attrib_value)) {\n\t\t\t\t\t\t\tconst deep_attrib_name = [attrib_name, key].join(DEEP_ATTRIB_SEPARATOR);\n\t\t\t\t\t\t\tconst deep_attrib_value = attrib_value[attrib_name];\n\n\t\t\t\t\t\t\tif (!CoreString.matches_one_mask(deep_attrib_name, masks)) {\n\t\t\t\t\t\t\t\tthis._attribute_datas_by_name[deep_attrib_name] = CoreAttributeData.from_value(\n\t\t\t\t\t\t\t\t\tdeep_attrib_value\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!CoreString.matches_one_mask(attrib_name, masks)) {\n\t\t\t\t\t\t\tthis._attribute_datas_by_name[attrib_name] = CoreAttributeData.from_value(attrib_value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _attribute_values_for_name(attrib_name: string): StringOrNumber[] {\n\t\tif (this._json) {\n\t\t\treturn this._json.map((json_element: Dictionary<any>) => {\n\t\t\t\tconst prefix = attrib_name.split(DEEP_ATTRIB_SEPARATOR)[0];\n\t\t\t\tconst value = json_element[prefix];\n\t\t\t\tif (this._value_has_subentries(value)) {\n\t\t\t\t\tconst deep_attrib_name = attrib_name.substring(prefix.length + 1);\n\t\t\t\t\treturn value[deep_attrib_name] || 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn value || 0;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t_value_has_subentries(value: any): boolean {\n\t\treturn lodash_isObject(value) && !lodash_isArray(value);\n\t}\n}\n","import {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Bone} from 'three/src/objects/Bone';\nimport {Box3} from 'three/src/math/Box3';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Color} from 'three/src/math/Color';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {DoubleSide} from 'three/src/constants';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {FrontSide} from 'three/src/constants';\nimport {Group} from 'three/src/objects/Group';\nimport {InterleavedBuffer} from 'three/src/core/InterleavedBuffer';\nimport {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute';\nimport {Interpolant} from 'three/src/math/Interpolant';\nimport {InterpolateDiscrete} from 'three/src/constants';\nimport {InterpolateLinear} from 'three/src/constants';\nimport {Line} from 'three/src/objects/Line';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {LineLoop} from 'three/src/objects/LineLoop';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {LinearFilter} from 'three/src/constants';\nimport {LinearMipmapLinearFilter} from 'three/src/constants';\nimport {LinearMipmapNearestFilter} from 'three/src/constants';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {LoaderUtils} from 'three/src/loaders/LoaderUtils';\nimport {Material} from 'three/src/materials/Material';\nimport {MathUtils} from 'three/src/math/MathUtils';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {MeshPhysicalMaterial} from 'three/src/materials/MeshPhysicalMaterial';\nimport {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\nimport {MirroredRepeatWrapping} from 'three/src/constants';\nimport {NearestFilter} from 'three/src/constants';\nimport {NearestMipmapLinearFilter} from 'three/src/constants';\nimport {NearestMipmapNearestFilter} from 'three/src/constants';\nimport {NumberKeyframeTrack} from 'three/src/animation/tracks/NumberKeyframeTrack';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {PointLight} from 'three/src/lights/PointLight';\nimport {Points} from 'three/src/objects/Points';\nimport {PointsMaterial} from 'three/src/materials/PointsMaterial';\nimport {PropertyBinding} from 'three/src/animation/PropertyBinding';\nimport {QuaternionKeyframeTrack} from 'three/src/animation/tracks/QuaternionKeyframeTrack';\nimport {RGBAFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\nimport {RepeatWrapping} from 'three/src/constants';\nimport {Skeleton} from 'three/src/objects/Skeleton';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {Sphere} from 'three/src/math/Sphere';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {TangentSpaceNormalMap} from 'three/src/constants';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {TriangleFanDrawMode} from 'three/src/constants';\nimport {TriangleStripDrawMode} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {VectorKeyframeTrack} from 'three/src/animation/tracks/VectorKeyframeTrack';\nimport {sRGBEncoding} from 'three/src/constants';\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsClearcoatExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', new BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ] ) {\n\n\t\t\tvar clearcoatExtension = extensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ];\n\t\t\tmaterialType = clearcoatExtension.getMaterialType();\n\t\t\tpending.push( clearcoatExtension.extendParams( materialParams, { extensions: materialExtensions }, parser ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n","import {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Loader} from 'three/src/loaders/Loader';\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\nvar DRACOLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.decoderPath = '';\n\tthis.decoderConfig = {};\n\tthis.decoderBinary = null;\n\tthis.decoderPending = null;\n\n\tthis.workerLimit = 4;\n\tthis.workerPool = [];\n\tthis.workerNextTaskID = 1;\n\tthis.workerSourceURL = '';\n\n\tthis.defaultAttributeIDs = {\n\t\tposition: 'POSITION',\n\t\tnormal: 'NORMAL',\n\t\tcolor: 'COLOR',\n\t\tuv: 'TEX_COORD'\n\t};\n\tthis.defaultAttributeTypes = {\n\t\tposition: 'Float32Array',\n\t\tnormal: 'Float32Array',\n\t\tcolor: 'Float32Array',\n\t\tuv: 'Float32Array'\n\t};\n\n};\n\nDRACOLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DRACOLoader,\n\n\tsetDecoderPath: function ( path ) {\n\n\t\tthis.decoderPath = path;\n\n\t\treturn this;\n\n\t},\n\n\tsetDecoderConfig: function ( config ) {\n\n\t\tthis.decoderConfig = config;\n\n\t\treturn this;\n\n\t},\n\n\tsetWorkerLimit: function ( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t},\n\n\t/** @deprecated */\n\tsetVerbosity: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setVerbosity() method has been removed.' );\n\n\t},\n\n\t/** @deprecated */\n\tsetDrawMode: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setDrawMode() method has been removed.' );\n\n\t},\n\n\t/** @deprecated */\n\tsetSkipDequantization: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setSkipDequantization() method has been removed.' );\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.crossOrigin === 'use-credentials' ) {\n\n\t\t\tloader.setWithCredentials( true );\n\n\t\t}\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\tvar taskConfig = {\n\t\t\t\tattributeIDs: this.defaultAttributeIDs,\n\t\t\t\tattributeTypes: this.defaultAttributeTypes,\n\t\t\t\tuseUniqueIDs: false\n\t\t\t};\n\n\t\t\tthis.decodeGeometry( buffer, taskConfig )\n\t\t\t\t.then( onLoad )\n\t\t\t\t.catch( onError );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n\tdecodeDracoFile: function ( buffer, callback, attributeIDs, attributeTypes ) {\n\n\t\tvar taskConfig = {\n\t\t\tattributeIDs: attributeIDs || this.defaultAttributeIDs,\n\t\t\tattributeTypes: attributeTypes || this.defaultAttributeTypes,\n\t\t\tuseUniqueIDs: !! attributeIDs\n\t\t};\n\n\t\tthis.decodeGeometry( buffer, taskConfig ).then( callback );\n\n\t},\n\n\tdecodeGeometry: function ( buffer, taskConfig ) {\n\n\t\t// TODO: For backward-compatibility, support 'attributeTypes' objects containing\n\t\t// references (rather than names) to typed array constructors. These must be\n\t\t// serialized before sending them to the worker.\n\t\tfor ( var attribute in taskConfig.attributeTypes ) {\n\n\t\t\tvar type = taskConfig.attributeTypes[ attribute ];\n\n\t\t\tif ( type.BYTES_PER_ELEMENT !== undefined ) {\n\n\t\t\t\ttaskConfig.attributeTypes[ attribute ] = type.name;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar taskKey = JSON.stringify( taskConfig );\n\n\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t// again from this thread.\n\t\tif ( DRACOLoader.taskCache.has( buffer ) ) {\n\n\t\t\tvar cachedTask = DRACOLoader.taskCache.get( buffer );\n\n\t\t\tif ( cachedTask.key === taskKey ) {\n\n\t\t\t\treturn cachedTask.promise;\n\n\t\t\t} else if ( buffer.byteLength === 0 ) {\n\n\t\t\t\t// Technically, it would be possible to wait for the previous task to complete,\n\t\t\t\t// transfer the buffer back, and decode again with the second configuration. That\n\t\t\t\t// is complex, and I don't know of any reason to decode a Draco buffer twice in\n\t\t\t\t// different ways, so this is left unimplemented.\n\t\t\t\tthrow new Error(\n\n\t\t\t\t\t'THREE.DRACOLoader: Unable to re-decode a buffer with different ' +\n\t\t\t\t\t'settings. Buffer has already been transferred.'\n\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar worker;\n\t\tvar taskID = this.workerNextTaskID ++;\n\t\tvar taskCost = buffer.byteLength;\n\n\t\t// Obtain a worker and assign a task, and construct a geometry instance\n\t\t// when the task completes.\n\t\tvar geometryPending = this._getWorker( taskID, taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, taskConfig, buffer }, [ buffer ] );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => this._createGeometry( message.geometry ) );\n\n\t\t// Remove task from the task list.\n\t\tgeometryPending\n\t\t\t.finally( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tthis._releaseTask( worker, taskID );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\tDRACOLoader.taskCache.set( buffer, {\n\n\t\t\tkey: taskKey,\n\t\t\tpromise: geometryPending\n\n\t\t} );\n\n\t\treturn geometryPending;\n\n\t},\n\n\t_createGeometry: function ( geometryData ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tif ( geometryData.index ) {\n\n\t\t\tgeometry.setIndex( new BufferAttribute( geometryData.index.array, 1 ) );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < geometryData.attributes.length; i ++ ) {\n\n\t\t\tvar attribute = geometryData.attributes[ i ];\n\t\t\tvar name = attribute.name;\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tgeometry.setAttribute( name, new BufferAttribute( array, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\t_loadLibrary: function ( url, responseType ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.decoderPath );\n\t\tloader.setResponseType( responseType );\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tloader.load( url, resolve, undefined, reject );\n\n\t\t} );\n\n\t},\n\n\tpreload: function () {\n\n\t\tthis._initDecoder();\n\n\t\treturn this;\n\n\t},\n\n\t_initDecoder: function () {\n\n\t\tif ( this.decoderPending ) return this.decoderPending;\n\n\t\tvar useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n\t\tvar librariesPending = [];\n\n\t\tif ( useJS ) {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.js', 'text' ) );\n\n\t\t} else {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_wasm_wrapper.js', 'text' ) );\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.wasm', 'arraybuffer' ) );\n\n\t\t}\n\n\t\tthis.decoderPending = Promise.all( librariesPending )\n\t\t\t.then( ( libraries ) => {\n\n\t\t\t\tvar jsContent = libraries[ 0 ];\n\n\t\t\t\tif ( ! useJS ) {\n\n\t\t\t\t\tthis.decoderConfig.wasmBinary = libraries[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar fn = DRACOLoader.DRACOWorker.toString();\n\n\t\t\t\tvar body = [\n\t\t\t\t\t'/* draco decoder */',\n\t\t\t\t\tjsContent,\n\t\t\t\t\t'',\n\t\t\t\t\t'/* worker */',\n\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\n\t\t\t} );\n\n\t\treturn this.decoderPending;\n\n\t},\n\n\t_getWorker: function ( taskID, taskCost ) {\n\n\t\treturn this._initDecoder().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tvar worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskCosts = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( { type: 'init', decoderConfig: this.decoderConfig } );\n\n\t\t\t\tworker.onmessage = function ( e ) {\n\n\t\t\t\t\tvar message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'decode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvar worker = this.workerPool[ this.workerPool.length - 1 ];\n\t\t\tworker._taskCosts[ taskID ] = taskCost;\n\t\t\tworker._taskLoad += taskCost;\n\t\t\treturn worker;\n\n\t\t} );\n\n\t},\n\n\t_releaseTask: function ( worker, taskID ) {\n\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\n\t\tdelete worker._callbacks[ taskID ];\n\t\tdelete worker._taskCosts[ taskID ];\n\n\t},\n\n\tdebug: function () {\n\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\n\n\t},\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.workerPool.length; ++ i ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/* WEB WORKER */\n\nDRACOLoader.DRACOWorker = function () {\n\n\tvar decoderConfig;\n\tvar decoderPending;\n\n\tonmessage = function ( e ) {\n\n\t\tvar message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\t\t\t\tdecoderConfig = message.decoderConfig;\n\t\t\t\tdecoderPending = new Promise( function ( resolve/*, reject*/ ) {\n\n\t\t\t\t\tdecoderConfig.onModuleLoaded = function ( draco ) {\n\n\t\t\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\n\t\t\t\t\t\tresolve( { draco: draco } );\n\n\t\t\t\t\t};\n\n\t\t\t\t\tDracoDecoderModule( decoderConfig );\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t\tcase 'decode':\n\t\t\t\tvar buffer = message.buffer;\n\t\t\t\tvar taskConfig = message.taskConfig;\n\t\t\t\tdecoderPending.then( ( module ) => {\n\n\t\t\t\t\tvar draco = module.draco;\n\t\t\t\t\tvar decoder = new draco.Decoder();\n\t\t\t\t\tvar decoderBuffer = new draco.DecoderBuffer();\n\t\t\t\t\tdecoderBuffer.Init( new Int8Array( buffer ), buffer.byteLength );\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar geometry = decodeGeometry( draco, decoder, decoderBuffer, taskConfig );\n\n\t\t\t\t\t\tvar buffers = geometry.attributes.map( ( attr ) => attr.array.buffer );\n\n\t\t\t\t\t\tif ( geometry.index ) buffers.push( geometry.index.array.buffer );\n\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, geometry }, buffers );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.error( error );\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\n\n\t\t\t\t\t} finally {\n\n\t\t\t\t\t\tdraco.destroy( decoderBuffer );\n\t\t\t\t\t\tdraco.destroy( decoder );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction decodeGeometry( draco, decoder, decoderBuffer, taskConfig ) {\n\n\t\tvar attributeIDs = taskConfig.attributeIDs;\n\t\tvar attributeTypes = taskConfig.attributeTypes;\n\n\t\tvar dracoGeometry;\n\t\tvar decodingStatus;\n\n\t\tvar geometryType = decoder.GetEncodedGeometryType( decoderBuffer );\n\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tdracoGeometry = new draco.Mesh();\n\t\t\tdecodingStatus = decoder.DecodeBufferToMesh( decoderBuffer, dracoGeometry );\n\n\t\t} else if ( geometryType === draco.POINT_CLOUD ) {\n\n\t\t\tdracoGeometry = new draco.PointCloud();\n\t\t\tdecodingStatus = decoder.DecodeBufferToPointCloud( decoderBuffer, dracoGeometry );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected geometry type.' );\n\n\t\t}\n\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\n\n\t\t}\n\n\t\tvar geometry = { index: null, attributes: [] };\n\n\t\t// Gather all vertex attributes.\n\t\tfor ( var attributeName in attributeIDs ) {\n\n\t\t\tvar attributeType = self[ attributeTypes[ attributeName ] ];\n\n\t\t\tvar attribute;\n\t\t\tvar attributeID;\n\n\t\t\t// A Draco file may be created with default vertex attributes, whose attribute IDs\n\t\t\t// are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n\t\t\t// a Draco file may contain a custom set of attributes, identified by known unique\n\t\t\t// IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\t\t\tif ( taskConfig.useUniqueIDs ) {\n\n\t\t\t\tattributeID = attributeIDs[ attributeName ];\n\t\t\t\tattribute = decoder.GetAttributeByUniqueId( dracoGeometry, attributeID );\n\n\t\t\t} else {\n\n\t\t\t\tattributeID = decoder.GetAttributeId( dracoGeometry, draco[ attributeIDs[ attributeName ] ] );\n\n\t\t\t\tif ( attributeID === - 1 ) continue;\n\n\t\t\t\tattribute = decoder.GetAttribute( dracoGeometry, attributeID );\n\n\t\t\t}\n\n\t\t\tgeometry.attributes.push( decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) );\n\n\t\t}\n\n\t\t// Add index.\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\t// Generate mesh faces.\n\t\t\tvar numFaces = dracoGeometry.num_faces();\n\t\t\tvar numIndices = numFaces * 3;\n\t\t\tvar index = new Uint32Array( numIndices );\n\t\t\tvar indexArray = new draco.DracoInt32Array();\n\n\t\t\tfor ( var i = 0; i < numFaces; ++ i ) {\n\n\t\t\t\tdecoder.GetFaceFromMesh( dracoGeometry, i, indexArray );\n\n\t\t\t\tfor ( var j = 0; j < 3; ++ j ) {\n\n\t\t\t\t\tindex[ i * 3 + j ] = indexArray.GetValue( j );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.index = { array: index, itemSize: 1 };\n\n\t\t\tdraco.destroy( indexArray );\n\n\t\t}\n\n\t\tdraco.destroy( dracoGeometry );\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) {\n\n\t\tvar numComponents = attribute.num_components();\n\t\tvar numPoints = dracoGeometry.num_points();\n\t\tvar numValues = numPoints * numComponents;\n\t\tvar dracoArray;\n\n\t\tvar array;\n\n\t\tswitch ( attributeType ) {\n\n\t\t\tcase Float32Array:\n\t\t\t\tdracoArray = new draco.DracoFloat32Array();\n\t\t\t\tdecoder.GetAttributeFloatForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Float32Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Int8Array:\n\t\t\t\tdracoArray = new draco.DracoInt8Array();\n\t\t\t\tdecoder.GetAttributeInt8ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Int8Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Int16Array:\n\t\t\t\tdracoArray = new draco.DracoInt16Array();\n\t\t\t\tdecoder.GetAttributeInt16ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Int16Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Int32Array:\n\t\t\t\tdracoArray = new draco.DracoInt32Array();\n\t\t\t\tdecoder.GetAttributeInt32ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Int32Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Uint8Array:\n\t\t\t\tdracoArray = new draco.DracoUInt8Array();\n\t\t\t\tdecoder.GetAttributeUInt8ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Uint8Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Uint16Array:\n\t\t\t\tdracoArray = new draco.DracoUInt16Array();\n\t\t\t\tdecoder.GetAttributeUInt16ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Uint16Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Uint32Array:\n\t\t\t\tdracoArray = new draco.DracoUInt32Array();\n\t\t\t\tdecoder.GetAttributeUInt32ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Uint32Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected attribute type.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < numValues; i ++ ) {\n\n\t\t\tarray[ i ] = dracoArray.GetValue( i );\n\n\t\t}\n\n\t\tdraco.destroy( dracoArray );\n\n\t\treturn {\n\t\t\tname: attributeName,\n\t\t\tarray: array,\n\t\t\titemSize: numComponents\n\t\t};\n\n\t}\n\n};\n\nDRACOLoader.taskCache = new WeakMap();\n\n/** Deprecated static methods */\n\n/** @deprecated */\nDRACOLoader.setDecoderPath = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.setDecoderConfig = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.releaseDecoderModule = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.getDecoderModule = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.' );\n\n};\n\nexport { DRACOLoader };\n","import {Float32BufferAttribute} from 'three/src/core/BufferAttribute'\nimport {BufferGeometry} from 'three/src/core/BufferGeometry'\nimport {CoreGeometry} from '../Geometry'\n// import lodash_range from 'lodash/range'\nimport lodash_flatten from 'lodash/flatten'\nimport lodash_intersection from 'lodash/intersection'\nimport lodash_concat from 'lodash/concat'\n\nexport class CoreGeometryOperationSkin {\n\tconstructor(\n\t\tprivate geometry: BufferGeometry,\n\t\tprivate geometry1: BufferGeometry,\n\t\tprivate geometry0: BufferGeometry\n\t) {}\n\n\tprocess() {\n\t\tconst geometry_wrapper0 = new CoreGeometry(this.geometry0)\n\t\tconst geometry_wrapper1 = new CoreGeometry(this.geometry1)\n\t\tconst segments0 = geometry_wrapper0.segments()\n\t\tconst segments1 = geometry_wrapper1.segments()\n\n\t\tif (segments0.length === 0 || segments1.length === 0) {\n\t\t\treturn\n\t\t}\n\t\t// find smallest geo to iterate on its array\n\t\tconst geometries_by_segments_count =\n\t\t\tsegments0.length < segments1.length\n\t\t\t\t? [geometry_wrapper0, geometry_wrapper1]\n\t\t\t\t: [geometry_wrapper1, geometry_wrapper0]\n\n\t\tconst smallest_geometry = geometries_by_segments_count[0]\n\t\tconst largest_geometry = geometries_by_segments_count[1]\n\n\t\tconst smallest_segments = smallest_geometry.segments()\n\t\tconst largest_segments = largest_geometry.segments()\n\n\t\tconst smallest_points = smallest_geometry.points()\n\t\tconst largest_points = largest_geometry.points()\n\t\tconst smallest_points_count = smallest_points.length\n\t\t// const largest_points_count = largest_points.length;\n\t\tconst all_points = lodash_concat(smallest_points, largest_points)\n\n\t\t// const half_faces_count = smallest_segments.length;\n\t\tconst points_indices: number[] = []\n\t\tsmallest_segments.forEach((segment, i) => {\n\t\t\tconst matched_segment = largest_segments[i]\n\t\t\t// face 1\n\t\t\tpoints_indices.push(segment[0])\n\t\t\tpoints_indices.push(segment[1])\n\t\t\tpoints_indices.push(matched_segment[0] + smallest_points_count)\n\t\t\t// face 2\n\t\t\tpoints_indices.push(segment[1])\n\t\t\tpoints_indices.push(matched_segment[1] + smallest_points_count)\n\t\t\tpoints_indices.push(matched_segment[0] + smallest_points_count)\n\t\t})\n\n\t\tconst attributes_in_common = lodash_intersection(\n\t\t\tsmallest_geometry.attrib_names(),\n\t\t\tlargest_geometry.attrib_names()\n\t\t)\n\t\t// const points = all_points //points_indices.map(index=> all_points[index]);\n\t\tattributes_in_common.forEach((attrib_name) => {\n\t\t\tconst attrib_size = smallest_geometry.attrib_size(attrib_name)\n\t\t\tlet attrib_values = all_points.map((point) =>\n\t\t\t\tpoint.attrib_value(attrib_name)\n\t\t\t)\n\t\t\tif (attrib_size > 1) {\n\t\t\t\tattrib_values = lodash_flatten(\n\t\t\t\t\tattrib_values.map((v) => v.toArray())\n\t\t\t\t)\n\t\t\t}\n\t\t\tthis.geometry.setAttribute(\n\t\t\t\tattrib_name,\n\t\t\t\tnew Float32BufferAttribute(attrib_values, attrib_size)\n\t\t\t)\n\t\t})\n\n\t\t// const new_indices = lodash_range(points.length);\n\t\tthis.geometry.setIndex(points_indices)\n\t\tthis.geometry.computeVertexNormals()\n\t}\n}\n","import {SceneJsonImporter} from './io/json/import/Scene';\nimport {PolyScene} from './scene/PolyScene';\nimport {AllRegister} from './poly/registers/All';\nAllRegister.run();\n\nexport {PolyScene, SceneJsonImporter};\n\n// console.log('adding POLY to window', PolyScene);\n// (window as any).POLYGON = {PolyScene};\n// console.log((window as any).POLYGON);\n\n// import default_scene_data from '../../public/examples/scenes/default_simple.json';\n\n// export class Tester {\n// \tstatic async load_scene() {\n// \t\tconst scene = await SceneJsonImporter.load_data(default_scene_data as SceneJsonExporterData);\n\n// \t\treturn scene;\n// \t}\n// \tstatic create_scene() {\n// \t\tconst scene = new PolyScene();\n// \t\tscene.root.create_node('ambient_light');\n\n// \t\tscene.loading_controller.mark_as_loaded();\n\n// \t\tconst perspective_camera1 = scene.root.create_node('perspective_camera');\n// \t\tscene.cameras_controller.set_master_camera_node_path(perspective_camera1.full_path());\n// \t\tperspective_camera1.p.t.z.set(10);\n\n// \t\tconst geo1 = scene.root.create_node('geo');\n// \t\tgeo1.flags.display.set(true);\n// \t\tconst box1 = geo1.create_node('box');\n// \t\tbox1.flags.display.set(true);\n// \t\tgeo1.p.r.y.set('$F+20');\n\n// \t\treturn scene;\n// \t}\n\n// \tstatic async test_save_and_load(scene: PolyScene) {\n// \t\tconst data = new SceneJsonExporter(scene).data();\n// \t\tconsole.log(JSON.stringify(data));\n// \t\tconst scene2 = await SceneJsonImporter.load_data(data);\n// \t\tconst data2 = new SceneJsonExporter(scene2).data();\n// \t\tconsole.log(JSON.stringify(data2));\n// \t}\n// }\n\n// const stylesheet = document.createElement('style');\n// stylesheet.innerText = 'html, body, canvas, .canvas_container {height: 100%; margin: 0px;} canvas {display: block;}';\n// document.body.appendChild(stylesheet);\n// const container = document.createElement('div');\n// container.classList.add('canvas_container');\n// document.body.appendChild(container);\n\n// Tester.load_scene().then((scene) => {\n// \t(window as any).scene = scene;\n// \tscene.cameras_controller.master_camera_node?.create_viewer(container);\n// \tscene.play();\n// });\n\n// Tester.test_save_and_load(scene);\n","import {PolyScene} from '../../../scene/PolyScene';\n// import {JsonImporterVisitor} from './Visitor'\nimport {SceneJsonExporterData} from '../export/Scene';\nimport {JsonImportDispatcher} from './Dispatcher';\n\nexport class SceneJsonImporter {\n\tconstructor(private _data: SceneJsonExporterData) {}\n\n\tstatic load_data(data: SceneJsonExporterData) {\n\t\tconst importer = new SceneJsonImporter(data);\n\t\treturn importer.scene();\n\t}\n\n\tasync scene(): Promise<PolyScene> {\n\t\tconst scene = new PolyScene();\n\t\tscene.loading_controller.mark_as_loading();\n\n\t\t// scene.set_js_version(this._data['__js_version'])\n\t\tconst properties = this._data['properties'];\n\t\tif (properties) {\n\t\t\t// scene.set_name(properties['name'])\n\t\t\tscene.set_frame(properties['frame'] || 1);\n\t\t\tconst frame_range = properties['frame_range'] || [];\n\t\t\tscene.time_controller.set_frame_range(frame_range[0] || 1, frame_range[1] || 100);\n\t\t\tconst frame_range_locked = properties['frame_range_locked'];\n\t\t\tif (frame_range_locked) {\n\t\t\t\tscene.time_controller.set_frame_range_locked(frame_range_locked[0], frame_range_locked[1]);\n\t\t\t}\n\t\t\t// scene.time_controller.set_fps(properties['fps'] || 30);\n\t\t\tif (properties['master_camera_node_path']) {\n\t\t\t\tscene.cameras_controller.set_master_camera_node_path(properties['master_camera_node_path']);\n\t\t\t}\n\t\t}\n\n\t\t// we block to ensure that nodes will not run their dirty_hooks\n\t\t// which would trigger operator_path params to search for nodes that\n\t\t// may not exist yet\n\t\tscene.cooker.block();\n\n\t\tconst importer = JsonImportDispatcher.dispatch_node(scene.root);\n\t\tif (this._data['root']) {\n\t\t\timporter.process_data(this._data['root']);\n\t\t}\n\t\tif (this._data['ui']) {\n\t\t\timporter.process_ui_data(this._data['ui']);\n\t\t}\n\n\t\tawait scene.loading_controller.mark_as_loaded();\n\t\tscene.cooker.unblock();\n\t\t// DO NOT wait for cooks here,\n\t\t// as a viewer will only be created once everything has cooked\n\t\t// which would be a problem for env_map or other nodes relying on the renderer being created\n\t\t// await scene.wait_for_cooks_completed();\n\n\t\treturn scene;\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {BaseCameraObjNodeType} from '../../nodes/obj/_BaseCamera';\n\nexport class CamerasController {\n\tconstructor(private scene: PolyScene) {}\n\n\t_master_camera_node_path: string | null = null;\n\n\tset_master_camera_node_path(camera_node_path: string) {\n\t\tthis._master_camera_node_path = camera_node_path;\n\t}\n\tget master_camera_node_path() {\n\t\treturn this._master_camera_node_path;\n\t}\n\tget master_camera_node(): BaseCameraObjNodeType | null {\n\t\tif (this.master_camera_node_path) {\n\t\t\tconst camera_node = this.scene.node(this.master_camera_node_path) as BaseCameraObjNodeType | null;\n\t\t\treturn camera_node;\n\t\t} else {\n\t\t\tconsole.warn('master camera node not found');\n\t\t\treturn this._find_any_camera();\n\t\t}\n\t}\n\n\tprivate _find_any_camera(): BaseCameraObjNodeType | null {\n\t\tconst root = this.scene.root;\n\t\treturn root.nodes_by_type('perspective_camera')[0] || root.nodes_by_type('orthographic_camera')[0];\n\t}\n}\n","// import {CoreGraphNode} from './CoreGraphNode';\n// import { CoreGraphNodeScene } from './CoreGraphNodeScene';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {PolyScene} from '../PolyScene';\n\n// interface CookerQueue {\n// \t[propName: string]: CoreGraphNodeSceneNamed;\n// }\n\nexport class Cooker {\n\tprivate _queue: Map<string, CoreGraphNode | undefined> = new Map<string, CoreGraphNode | undefined>();\n\tprivate _block_level: number = 0;\n\tprivate _process_item_bound = this._process_item.bind(this);\n\n\tconstructor(private _scene: PolyScene) {\n\t\tthis._block_level = 0;\n\t}\n\n\tblock() {\n\t\tthis._block_level += 1;\n\t}\n\tunblock() {\n\t\tthis._block_level -= 1;\n\t\tif (this._block_level < 0) {\n\t\t\tthis._block_level = 0;\n\t\t}\n\n\t\tthis.process_queue();\n\t}\n\t// unblock_later: ->\n\t// \tsetTimeout( this.unblock.bind(this), 0 )\n\tget blocked() {\n\t\treturn this._block_level > 0;\n\t}\n\n\tenqueue(node: CoreGraphNode, original_trigger_graph_node?: CoreGraphNode) {\n\t\tthis._queue.set(node.graph_node_id, original_trigger_graph_node);\n\t}\n\n\tprocess_queue() {\n\t\tif (this.blocked) {\n\t\t\treturn;\n\t\t}\n\t\t// let node: CoreGraphNode;\n\t\t// console.warn('FLUSH', Object.keys(this._queue).length);\n\n\t\tthis._queue.forEach(this._process_item_bound);\n\t\t// for (let id of Object.keys(this._queue)) {\n\t\t// \tnode = this._queue[id];\n\t\t// \tif (node) {\n\t\t// \t\tdelete this._queue[id];\n\t\t// \t\tnode.dirty_controller.run_post_dirty_hooks();\n\t\t// \t}\n\t\t// }\n\t}\n\tprivate _process_item(original_trigger_graph_node: CoreGraphNode | undefined, id: string) {\n\t\tconst node = this._scene.graph.node_from_id(id);\n\t\tif (node) {\n\t\t\tthis._queue.delete(id);\n\t\t\tnode.dirty_controller.run_post_dirty_hooks(original_trigger_graph_node);\n\t\t}\n\t}\n}\n","/// <reference path=\"./dagre.d.ts\" />\nimport {Graph, alg} from '@dagrejs/graphlib';\n// import lodash_uniq from 'lodash/uniq';\n// import lodash_flatten from 'lodash/flatten';\nimport {PolyScene} from '../../engine/scene/PolyScene';\n// import {NodeSimple} from './NodeSimple'\n// import {GraphNode} from './concerns/GraphNode'\n// import {SceneNodeDirtyable} from './SceneNodeDirtyable';\n\n// class DummyClass {}\n// class GraphNodeDummy extends Dirtyable(DummyClass) {}\n\n// TODO: typescript, using ids with a specific type (https://basarat.gitbook.io/typescript/main-1/nominaltyping)\n// export interface CoreGraphNodeId extends String {\n// \t// _CoreGraphNodeIdBrand: string;\n// }\nexport type CoreGraphNodeId = string;\nimport {CoreGraphNode} from './CoreGraphNode';\n\nexport class CoreGraph {\n\t_graph: Graph;\n\t_next_id: number = 0;\n\t_scene: PolyScene | undefined;\n\n\tconstructor() {\n\t\tthis._graph = new Graph({\n\t\t\tdirected: true,\n\t\t\tcompound: false,\n\t\t\tmultigraph: true,\n\t\t});\n\t}\n\n\tgraph() {\n\t\treturn this._graph;\n\t}\n\tset_scene(scene: PolyScene) {\n\t\tthis._scene = scene;\n\t}\n\tscene() {\n\t\treturn this._scene;\n\t}\n\n\tnext_id(): CoreGraphNodeId {\n\t\treturn (<unknown>`${(this._next_id += 1)}`) as CoreGraphNodeId;\n\t}\n\n\tsetNode(node: CoreGraphNode) {\n\t\tthis._graph.setNode(node.graph_node_id, node);\n\t}\n\n\tremoveNode(node: CoreGraphNode) {\n\t\tthis._graph.removeNode(node.graph_node_id);\n\t}\n\n\tnodes_from_ids(ids: string[]) {\n\t\tconst nodes: CoreGraphNode[] = [];\n\t\tfor (let id of ids) {\n\t\t\tconst node = this.node_from_id(id);\n\t\t\tif (node) {\n\t\t\t\tnodes.push(node);\n\t\t\t}\n\t\t}\n\t\treturn nodes;\n\t\t// if (ids) {\n\t\t// \tlet node: any;\n\t\t// \treturn ids.map((id) => {\n\t\t// \t\tif ((node = this.node_from_id(id)) != null) {\n\t\t// \t\t\treturn node;\n\t\t// \t\t} else {\n\t\t// \t\t\treturn console.warn(`could not find node with id ${id}`);\n\t\t// \t\t}\n\t\t// \t});\n\t\t// } else {\n\t\t// \treturn [];\n\t\t// }\n\t}\n\t// TODO: typescript: this should return CoreGraphNodeId|null\n\tnode_from_id(id: string): CoreGraphNode {\n\t\treturn this._graph.node(id);\n\t}\n\n\tconnect(src: CoreGraphNode, dest: CoreGraphNode): boolean {\n\t\tconst src_id = src.graph_node_id;\n\t\tconst dest_id = dest.graph_node_id;\n\n\t\tif (this._graph.hasNode(src_id) && this._graph.hasNode(dest_id)) {\n\t\t\tthis._graph.setEdge(src_id, dest_id);\n\n\t\t\t// const scene_auto_updating = this.scene().auto_updating();\n\t\t\tconst scene_loading = this._scene ? this._scene.loading_controller.is_loading : true;\n\t\t\tconst check_if_graph_has_cycle = !scene_loading;\n\t\t\tlet graph_has_cycle = false;\n\t\t\tif (check_if_graph_has_cycle) {\n\t\t\t\tgraph_has_cycle = !alg.isAcyclic(this._graph);\n\t\t\t}\n\n\t\t\tif (graph_has_cycle) {\n\t\t\t\tthis._graph.removeEdge(src_id, dest_id);\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tsrc.dirty_controller.clear_successors_cache_with_predecessors();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(`attempt to connect non existing node ${src_id} or ${dest_id}`);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisconnect(src: CoreGraphNode, dest: CoreGraphNode) {\n\t\tif (src && dest) {\n\t\t\tconst src_id_s = src.graph_node_id;\n\t\t\tconst dest_id_s = dest.graph_node_id;\n\t\t\tthis._graph.removeEdge(src_id_s, dest_id_s);\n\n\t\t\tsrc.dirty_controller.clear_successors_cache_with_predecessors();\n\t\t}\n\t}\n\tdisconnect_predecessors(node: CoreGraphNode) {\n\t\tconst predecessors = this.predecessors(node);\n\t\tfor (let predecessor of predecessors) {\n\t\t\tthis.disconnect(predecessor, node);\n\t\t}\n\t}\n\tdisconnect_successors(node: CoreGraphNode) {\n\t\tconst successors = this.successors(node);\n\t\tfor (let successor of successors) {\n\t\t\tthis.disconnect(node, successor);\n\t\t}\n\t}\n\t// disconnect_predecessors(node){\n\t// \tconst node_id = node.graph_node_id;\n\t// \tconst predecessor_ids = this._graph.predecessors(node_id);\n\t// \tif( predecessor_ids ){\n\t// \t\tfor(let predecessor_id of predecessor_ids){\n\t// \t\t\tthis._graph.removeEdge(predecessor_id, node_id);\n\t// \t\t}\n\t// \t}\n\t// }\n\t// disconnect_successors(node){\n\t// \tconst node_id = node.graph_node_id;\n\t// \tconst successor_ids = this._graph.successors(node_id);\n\t// \tif (successor_ids) {\n\t// \t\tfor(let successor_id of successor_ids){\n\t// \t\t\tthis._graph.removeEdge(node_id, successor_id);\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tpredecessor_ids(id: CoreGraphNodeId) {\n\t\treturn this._graph.predecessors(id) || [];\n\t}\n\tpredecessors(node: CoreGraphNode) {\n\t\tconst ids = this.predecessor_ids(node.graph_node_id);\n\t\treturn this.nodes_from_ids(ids);\n\t}\n\tsuccessor_ids(id: string): CoreGraphNodeId[] {\n\t\treturn this._graph.successors(id) || [];\n\t}\n\tsuccessors(node: CoreGraphNode): CoreGraphNode[] {\n\t\tconst ids = this.successor_ids(node.graph_node_id) || [];\n\t\treturn this.nodes_from_ids(ids);\n\t}\n\n\tprivate all_next_ids(node: CoreGraphNode, method: 'successor_ids' | 'predecessor_ids'): CoreGraphNodeId[] {\n\t\tconst ids: CoreGraphNodeId[] = [];\n\t\tlet next_ids = this[method](node.graph_node_id);\n\n\t\twhile (next_ids.length > 0) {\n\t\t\tconst next_next_ids = [];\n\t\t\tfor (let next_id of next_ids) {\n\t\t\t\tfor (let next_next_id of this[method](next_id)) {\n\t\t\t\t\tnext_next_ids.push(next_next_id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let id of next_ids) {\n\t\t\t\tids.push(id);\n\t\t\t}\n\t\t\tfor (let id of next_next_ids) {\n\t\t\t\tnext_ids.push(id);\n\t\t\t}\n\t\t\tnext_ids = next_next_ids;\n\t\t}\n\t\treturn ids;\n\t}\n\tall_predecessor_ids(node: CoreGraphNode): CoreGraphNodeId[] {\n\t\treturn this.all_next_ids(node, 'predecessor_ids');\n\t}\n\tall_successor_ids(node: CoreGraphNode): CoreGraphNodeId[] {\n\t\treturn this.all_next_ids(node, 'successor_ids');\n\t}\n\tall_predecessors(node: CoreGraphNode): CoreGraphNode[] {\n\t\tconst ids = this.all_predecessor_ids(node);\n\t\treturn this.nodes_from_ids(ids);\n\t}\n\tall_successors(node: CoreGraphNode): CoreGraphNode[] {\n\t\tconst ids = this.all_successor_ids(node);\n\t\treturn this.nodes_from_ids(ids);\n\t}\n}\n","import {BaseNodeType} from '../../nodes/_Base';\n\ntype Callback = (value: void) => void;\n\nexport class CookController {\n\tprivate _cooking_nodes_by_id: Map<string, BaseNodeType> = new Map();\n\tprivate _resolves: Callback[] = [];\n\tconstructor() {}\n\n\tadd_node(node: BaseNodeType) {\n\t\tthis._cooking_nodes_by_id.set(node.graph_node_id, node);\n\t}\n\tremove_node(node: BaseNodeType) {\n\t\tthis._cooking_nodes_by_id.delete(node.graph_node_id);\n\n\t\tif (this._cooking_nodes_by_id.size == 0) {\n\t\t\tthis.flush();\n\t\t}\n\t}\n\n\tprivate flush() {\n\t\tlet callback: Callback | undefined;\n\t\twhile ((callback = this._resolves.pop())) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\tasync wait_for_cooks_completed(): Promise<void> {\n\t\tif (this._cooking_nodes_by_id.size == 0) {\n\t\t\treturn;\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis._resolves.push(resolve);\n\t\t\t});\n\t\t}\n\t}\n}\n","import {PolyScene} from '../PolyScene';\n\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport '../../Poly';\nimport {Poly} from '../../Poly';\nimport {SceneEvent} from '../../poly/SceneEvent';\nimport {NodeEvent} from '../../poly/NodeEvent';\nimport {ParamEvent} from '../../poly/ParamEvent';\n\n// type Callback = (emitter: CoreGraphNodeScene) => void; // TODO: typescript: maybe arg should be an event instead of the emitter\ninterface EventsListener {\n\tprocess_events: (emitter: CoreGraphNode, event_name: SceneEvent | NodeEvent | ParamEvent, data?: any) => void;\n}\n\nexport class DispatchController {\n\tconstructor(private scene: PolyScene) {}\n\n\tprivate _events_listener: EventsListener | undefined;\n\n\tset_listener(events_listener: EventsListener) {\n\t\tthis._events_listener = events_listener;\n\t\t// this._store.scene = this;\n\t}\n\tget events_listener() {\n\t\treturn this._events_listener;\n\t}\n\tdispatch(emitter: CoreGraphNode, event_name: SceneEvent | NodeEvent | ParamEvent, data?: any) {\n\t\tthis._events_listener?.process_events(emitter, event_name, data);\n\t}\n\tget emit_allowed(): boolean {\n\t\treturn (\n\t\t\tthis.scene.loading_controller.loaded &&\n\t\t\tthis._events_listener != null &&\n\t\t\tthis.scene.loading_controller.auto_updating &&\n\t\t\t!Poly.instance().player_mode() // TODO: typecript: maybe I should still be able to emit events in player mode? - check how the Event Sop works\n\t\t);\n\t}\n\t// store_commit(event_name: string, payload: any = this) {\n\t// \tif (this._store) {\n\t// \t\tthis._store.commit(`engine/${event_name}`, payload);\n\t// \t}\n\t// }\n}\n","import {WebGLRenderer} from 'three/src/renderers/WebGLRenderer';\nimport {Texture} from 'three/src/textures/Texture';\n// import {NearestFilter, LinearEncoding, HalfFloatType} from 'three/src/constants'\n// import EquirectangularToCubeGenerator from 'src/core/Utils/EquirectangularToCubeGenerator';\n// import PMREMGenerator from 'src/core/Utils/PMREMGenerator';\n// import PMREMCubeUVPacker from 'src/core/Utils/PMREMCubeUVPacker';\n\ninterface RendererByString {\n\t[propName: string]: WebGLRenderer;\n}\ninterface TextureByString {\n\t[propName: string]: Texture;\n}\n\ninterface POLYWebGLRenderer extends WebGLRenderer {\n\t_polygon_id: number;\n}\n\nconst CONTEXT_OPTIONS = {\n\tantialias: true,\n\t// preserveDrawingBuffer: true, // this could only be useful to capture static images\n};\n\ntype Callback = (value: WebGLRenderer) => void;\n\nexport class RenderersController {\n\t_next_renderer_id: number = 0;\n\t_next_env_map_id: number = 0;\n\t_renderers: RendererByString = {};\n\t_env_maps: TextureByString = {};\n\tprivate _require_webgl2: boolean = false;\n\tprivate _resolves: Callback[] = [];\n\n\tconstructor() {}\n\n\tset_require_webgl2() {\n\t\tif (!this._require_webgl2) {\n\t\t\tthis._require_webgl2 = true;\n\t\t}\n\t}\n\trendering_context(canvas: HTMLCanvasElement): WebGLRenderingContext {\n\t\tlet gl: WebGLRenderingContext | null = null;\n\t\tif (this._require_webgl2) {\n\t\t\tgl = this._rendering_context_webgl(canvas, true);\n\t\t}\n\t\tif (!gl) {\n\t\t\tgl = this._rendering_context_webgl(canvas, false);\n\t\t}\n\n\t\t// gl.getExtension('OES_standard_derivatives') // for derivative normals, but it cannot work at the moment (see node Gl/DerivativeNormals)\n\t\t// to test data texture\n\t\t// gl.getExtension('OES_texture_float')\n\t\t// gl.getExtension('OES_texture_float_linear')\n\n\t\treturn gl;\n\t}\n\tprivate _rendering_context_webgl(canvas: HTMLCanvasElement, webgl2: boolean): WebGLRenderingContext {\n\t\tlet context_name = webgl2 ? 'webgl2' : 'webgl';\n\t\tlet gl = canvas.getContext(context_name, CONTEXT_OPTIONS);\n\t\tif (!gl) {\n\t\t\tcontext_name = webgl2 ? 'experimental-webgl2' : 'experimental-webgl';\n\t\t\tgl = canvas.getContext(context_name, CONTEXT_OPTIONS);\n\t\t}\n\t\treturn gl as WebGLRenderingContext;\n\t}\n\t// private _rendering_context_webgl(\n\t// \tcanvas: HTMLCanvasElement\n\t// ): WebGLRenderingContext {\n\t// \tlet gl = canvas.getContext('webgl', CONTEXT_OPTIONS)\n\t// \tif (!gl) {\n\t// \t\tgl = canvas.getContext('experimental-webgl', CONTEXT_OPTIONS)\n\t// \t}\n\t// \treturn gl as WebGLRenderingContext\n\t// }\n\n\tregister_renderer(renderer: WebGLRenderer) {\n\t\tif ((renderer as POLYWebGLRenderer)._polygon_id) {\n\t\t\tthrow new Error('render already registered');\n\t\t}\n\t\t(renderer as POLYWebGLRenderer)._polygon_id = this._next_renderer_id += 1;\n\n\t\t// there is a bug where 2 renderers are created from the beginning\n\t\t// because the from_json of the viewer_component is called after\n\t\t// the camera being set for the first time\n\t\t// console.log(\"register renderer\", renderer, renderer._polygon_id)\n\n\t\t// this is being tested in PostProcess\n\t\t// const canvas = renderer.domElement\n\t\t// const gl = canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' )\n\t\t// const extension_exist = gl.getExtension('OES_standard_derivatives')\n\t\t// if(!extension_exist){\n\t\t// \tconsole.warn(\"renderers controller: gl extension not available\")\n\t\t// }\n\n\t\tthis._renderers[(renderer as POLYWebGLRenderer)._polygon_id] = renderer;\n\n\t\tif (Object.keys(this._renderers).length == 1) {\n\t\t\tthis.flush_callbacks_with_renderer(renderer);\n\t\t}\n\t}\n\tderegister_renderer(renderer: WebGLRenderer) {\n\t\tdelete this._renderers[(renderer as POLYWebGLRenderer)._polygon_id];\n\t\trenderer.dispose();\n\t}\n\tprivate first_renderer(): WebGLRenderer | null {\n\t\tconst first_id = Object.keys(this._renderers)[0];\n\t\tif (first_id) {\n\t\t\treturn this._renderers[first_id];\n\t\t}\n\t\treturn null;\n\t}\n\trenderers(): WebGLRenderer[] {\n\t\treturn Object.values(this._renderers);\n\t}\n\n\tprivate flush_callbacks_with_renderer(renderer: WebGLRenderer) {\n\t\tlet callback: Callback | undefined;\n\t\twhile ((callback = this._resolves.pop())) {\n\t\t\tcallback(renderer);\n\t\t}\n\t}\n\n\tasync wait_for_renderer(): Promise<WebGLRenderer> {\n\t\tconst renderer = this.first_renderer();\n\t\tif (renderer) {\n\t\t\treturn renderer;\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis._resolves.push(resolve);\n\t\t\t});\n\t\t}\n\t}\n\n\t// async register_env_map(env_map: Texture){\n\t// \tconsole.log(\"register_env_map\", env_map)\n\t// \tif(env_map._polygon_id){\n\t// \t\tthrow new Error('cube_map already registered')\n\t// \t}\n\t// \tconst texture = await this.prepare_env_map(env_map)\n\t// \ttexture._polygon_id = (this._next_env_map_id += 1)\n\t// \tthis._env_maps[texture._polygon_id] = texture\n\t// \treturn texture\n\t// }\n\t// deregister_env_map(env_map: Texture){\n\t// \tconsole.log(\"deregister_env_map\", env_map)\n\t// \tdelete this._env_maps[env_map._polygon_id]\n\t// \tenv_map.dispose()\n\t// }\n\n\t// private async prepare_env_map(texture: Texture): Texture{\n\t// \ttexture.minFilter = NearestFilter;\n\t// \ttexture.magFilter = NearestFilter;\n\t// \ttexture.encoding = LinearEncoding;\n\n\t// \tawait CoreScriptLoader.load_three('loaders/EXRLoader')\n\t// \tawait CoreScriptLoader.load_three('loaders/EquirectangularToCubeGenerator')\n\t// \tconst EquirectangularToCubeGenerator_name = 'EquirectangularToCubeGenerator'\n\t// \tconst PMREMGenerator_name = 'PMREMGenerator'\n\t// \tconst PMREMCubeUVPacker_name = 'PMREMCubeUVPacker'\n\n\t// \tconst cubemapGenerator = new THREE[EquirectangularToCubeGenerator_name]( texture, { resolution: 512, type: HalfFloatType } );\n\n\t// \tconst renderer = this.first_renderer()\n\t// \tif(renderer){\n\t// \t\tconst cubeMapTexture = cubemapGenerator.update( renderer );\n\n\t// \t\tconst pmremGenerator = new THREE[PMREMGenerator_name]( cubeMapTexture );\n\t// \t\tpmremGenerator.update( renderer );\n\n\t// \t\tconst pmremCubeUVPacker = new THREE[PMREMCubeUVPacker_name]( pmremGenerator.cubeLods );\n\t// \t\tpmremCubeUVPacker.update( renderer );\n\n\t// \t\trenderer.gammaInput = false;\n\t// \t\trenderer.gammaOutput = true;\n\n\t// \t\tconst exrCubeRenderTarget = pmremCubeUVPacker.CubeUVRenderTarget;\n\n\t// \t\ttexture.dispose();\n\t// \t\tcubemapGenerator.dispose();\n\t// \t\tpmremGenerator.dispose();\n\t// \t\tpmremCubeUVPacker.dispose();\n\n\t// \t\treturn exrCubeRenderTarget.texture;\n\t// \t}\n\t// }\n}\n","import {BaseNodeClass} from '../nodes/_Base';\nimport {NodeContext} from './NodeContext';\n\nexport interface RegisterOptions {\n\tonly?: string[];\n\texcept?: string[];\n}\n\n// export interface BaseNodeConstructor {\n// \tnew (): BaseNode;\n// }\n\nexport type BaseNodeConstructor = typeof BaseNodeClass;\ntype NodeConstructorByType = Dictionary<BaseNodeConstructor>;\ntype NodeConstructorByTypeByContext = Dictionary<NodeConstructorByType>;\ntype TabMenuByTypeByContext = Dictionary<Dictionary<string>>;\ntype RegisterOptionsByTypeByContext = Dictionary<Dictionary<RegisterOptions>>;\n\nexport class NodesRegister {\n\tprivate _node_register: NodeConstructorByTypeByContext = {};\n\tprivate _node_register_categories: TabMenuByTypeByContext = {};\n\tprivate _node_register_options: RegisterOptionsByTypeByContext = {};\n\n\tregister_node(node: BaseNodeConstructor, tab_menu_category?: string, options?: RegisterOptions) {\n\t\tconst context = node.node_context();\n\t\tconst node_type = node.type();\n\t\tthis._node_register[context] = this._node_register[context] || {};\n\n\t\tconst already_registered_node = this._node_register[context][node_type];\n\t\tif (already_registered_node) {\n\t\t\tthrow new Error(`node ${context}/${node_type} already registered`);\n\t\t}\n\t\tthis._node_register[context][node_type] = node;\n\n\t\tif (tab_menu_category) {\n\t\t\tthis._node_register_categories[context] = this._node_register_categories[context] || {};\n\t\t\tthis._node_register_categories[context][node_type] = tab_menu_category;\n\t\t}\n\t\tthis._node_register_options[context] = this._node_register_options[context] || {};\n\t\tif (options) {\n\t\t\tthis._node_register_options[context][node_type] = options;\n\t\t}\n\t}\n\tderegister_node(context: string, node_type: string) {\n\t\tdelete this._node_register[context][node_type];\n\t\tdelete this._node_register_categories[context][node_type];\n\t\tdelete this._node_register_options[context][node_type];\n\t}\n\tregistered_nodes_for_context_and_parent_type(context: NodeContext, parent_node_type: string) {\n\t\tconst map = this._node_register[context];\n\t\tif (map) {\n\t\t\tconst nodes_for_context = Object.values(this._node_register[context]);\n\t\t\treturn nodes_for_context.filter((node) => {\n\t\t\t\tconst options = this._node_register_options[context][node.type()];\n\t\t\t\tif (!options) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tconst option_only = options['only'];\n\t\t\t\t\tconst option_except = options['except'];\n\t\t\t\t\tconst context_and_type = `${context}/${parent_node_type}`;\n\t\t\t\t\tif (option_only) {\n\t\t\t\t\t\treturn option_only.includes(context_and_type);\n\t\t\t\t\t}\n\t\t\t\t\tif (option_except) {\n\t\t\t\t\t\treturn !option_except.includes(context_and_type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !options || options['only']?.includes(parent_node_type);\n\t\t\t});\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\tregistered_nodes(context: NodeContext, parent_node_type: string): Dictionary<BaseNodeConstructor> {\n\t\tconst nodes_by_type: Dictionary<BaseNodeConstructor> = {};\n\t\tconst nodes = this.registered_nodes_for_context_and_parent_type(context, parent_node_type);\n\t\tfor (let node of nodes) {\n\t\t\tconst type = node.type();\n\t\t\tnodes_by_type[type] = node;\n\t\t}\n\t\treturn nodes_by_type;\n\t}\n\tregistered_category(context: NodeContext, type: string) {\n\t\treturn this._node_register_categories[context][type];\n\t}\n}\n","import {PolyScene} from '../../PolyScene';\nimport {BaseEventNodeType} from '../../../nodes/event/_Base';\nimport {MouseEventNode} from '../../../nodes/event/MouseEvent';\nimport {MouseEventsController} from './MouseEventsController';\nimport {BaseEventsController} from './_BaseEventsController';\nimport {BaseCameraObjNodeType} from '../../../nodes/obj/_BaseCamera';\n\nexport class SceneEventsController {\n\tprivate _mouse_events_controller: BaseEventsController<MouseEvent, MouseEventNode> = new MouseEventsController();\n\tprivate _controllers: BaseEventsController<Event, BaseEventNodeType>[] = [this._mouse_events_controller];\n\tconstructor(scene: PolyScene) {}\n\n\tregister_event_node(node: BaseEventNodeType) {\n\t\tconst controller = this._get_controller_for_node(node);\n\t\tif (controller) {\n\t\t\tcontroller.register_node(node);\n\t\t}\n\t}\n\tunregister_event_node(node: BaseEventNodeType) {\n\t\tconst controller = this._get_controller_for_node(node);\n\t\tif (controller) {\n\t\t\tcontroller.unregister_node(node);\n\t\t}\n\t}\n\n\tprocess_event(event: Event, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {\n\t\tfor (let controller of this._controllers) {\n\t\t\tif (controller.accepts_event(event)) {\n\t\t\t\tcontroller.process(event, canvas, camera_node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _get_controller_for_node<T extends BaseEventNodeType>(\n\t\tnode: T\n\t): BaseEventsController<Event, BaseEventNodeType> | undefined {\n\t\tswitch (node.type) {\n\t\t\tcase MouseEventNode.type():\n\t\t\t\treturn this._mouse_events_controller;\n\t\t}\n\t}\n}\n","// import lodash_filter from 'lodash/filter';\n// import lodash_uniq from 'lodash/uniq';\n// import lodash_flatten from 'lodash/flatten';\n// import {Cooker} from './Cooker';\nimport {CoreGraphNode} from './CoreGraphNode';\n\n// not sure how I can have caller: DirtyableMixin if DirtyableMixin is not yet defined\nexport type PostDirtyHook = (caller?: CoreGraphNode) => void;\n\n// type Constructor<T = {}> = new (...args: any[]) => T;\nexport class DirtyController {\n\t_dirty_count: number = 0;\n\t_dirty: boolean = true;\n\t_dirty_timestamp: number | undefined;\n\t_cached_successors: CoreGraphNode[] | undefined;\n\t_forbidden_trigger_nodes: string[] | undefined;\n\n\t// hooks\n\t_post_dirty_hooks: PostDirtyHook[] | undefined;\n\t_post_dirty_hook_names: string[] | undefined;\n\n\tconstructor(private node: CoreGraphNode) {}\n\n\t// _init_dirtyable(): void {\n\t// \tthis._dirty_count = 0;\n\t// \tthis._dirty = true;\n\t// }\n\tget is_dirty(): boolean {\n\t\treturn this._dirty === true;\n\t}\n\tget dirty_timestamp() {\n\t\treturn this._dirty_timestamp;\n\t}\n\tget dirty_count(): number {\n\t\treturn this._dirty_count;\n\t}\n\tadd_post_dirty_hook(name: string, method: PostDirtyHook) {\n\t\tthis._post_dirty_hook_names = this._post_dirty_hook_names || [];\n\t\tthis._post_dirty_hooks = this._post_dirty_hooks || [];\n\n\t\tif (!this._post_dirty_hook_names.includes(name)) {\n\t\t\tthis._post_dirty_hook_names.push(name);\n\t\t\tthis._post_dirty_hooks.push(method);\n\t\t} else {\n\t\t\tconsole.warn(`hook with name ${name} already exists`, this.node);\n\t\t}\n\t}\n\tremove_post_dirty_hook(name: string) {\n\t\tif (this._post_dirty_hook_names && this._post_dirty_hooks) {\n\t\t\tconst index = this._post_dirty_hook_names.indexOf(name);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis._post_dirty_hook_names.splice(index, 1);\n\t\t\t\tthis._post_dirty_hooks.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\thas_hook(name: string): boolean {\n\t\tif (this._post_dirty_hook_names) {\n\t\t\treturn this._post_dirty_hook_names.includes(name);\n\t\t}\n\t\treturn false;\n\t}\n\t// using a dirty block doesn't quite work, as I would need to be able\n\t// to fetch the graph for all successors that haven't been blocked\n\t// block_dirty_propagation: ->\n\t// \t@_dirty_propagation_allowed = false\n\t// unblock_dirty_propagation: ->\n\t// \t@_dirty_propagation_allowed = true\n\tremove_dirty_state(): void {\n\t\tthis._dirty = false;\n\t}\n\tset_forbidden_trigger_nodes(nodes: CoreGraphNode[]) {\n\t\tthis._forbidden_trigger_nodes = nodes.map((n) => n.graph_node_id);\n\t}\n\t//@_clean_for_frame = this.context().frame()\n\t//this.post_remove_dirty_state(message)\n\n\tset_dirty(original_trigger_graph_node?: CoreGraphNode | null, propagate?: boolean): void {\n\t\tif (propagate == null) {\n\t\t\tpropagate = true;\n\t\t}\n\t\tif (\n\t\t\toriginal_trigger_graph_node &&\n\t\t\tthis._forbidden_trigger_nodes &&\n\t\t\tthis._forbidden_trigger_nodes.includes(original_trigger_graph_node.graph_node_id)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (original_trigger_graph_node == null) {\n\t\t\toriginal_trigger_graph_node = this.node;\n\t\t}\n\n\t\t//return if this.set_dirty_allowed? && !this.set_dirty_allowed(original_trigger_graph_node)\n\n\t\t// if (this.scene && this.scene() != null && this.scene().loaded()){\n\t\t// \tlet id = null\n\t\t// \tif (this.full_path){id = this.full_path()} else {id = this}\n\t\t// \tconsole.log(\"set dirty\", id)\n\t\t// }\n\n\t\t// TODO: why can't I not propagate if the node is already dirty?\n\t\t// one possible reason is that node might be cooking, and this would not update the dirty_timestamp correctly?\n\t\t//return if this.is_dirty()\n\t\t// if(!this.scene().is_loading()){\n\t\t// \tconsole.log(\"set dirty\", (this.full_path ? this.full_path() : this))\n\t\t// }\n\n\t\tthis._dirty = true;\n\t\tthis._dirty_timestamp = performance.now();\n\t\tthis._dirty_count += 1;\n\n\t\tthis.run_post_dirty_hooks(original_trigger_graph_node);\n\t\t// this.post_set_dirty(original_trigger_graph_node);\n\n\t\tif (propagate === true) {\n\t\t\t//&& @_dirty #&& window.scene.auto_updating()\n\t\t\tthis.set_successors_dirty(original_trigger_graph_node);\n\t\t}\n\t}\n\n\trun_post_dirty_hooks(original_trigger_graph_node?: CoreGraphNode) {\n\t\tif (this._post_dirty_hooks) {\n\t\t\tconst cooker = this.node.scene.cooker;\n\t\t\tif (cooker.blocked) {\n\t\t\t\tcooker.enqueue(this.node, original_trigger_graph_node);\n\t\t\t} else {\n\t\t\t\tfor (let hook of this._post_dirty_hooks) {\n\t\t\t\t\thook(original_trigger_graph_node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// cooker(): Cooker {\n\t// \tthrow 'Dirtyable.cooker requires implementation';\n\t// }\n\tset_successors_dirty(original_trigger_graph_node?: CoreGraphNode): void {\n\t\t// const cooker = this.node.scene.cooker;\n\t\t// cooker.block();\n\n\t\tconst propagate = false;\n\t\tthis._cached_successors = this._cached_successors || this.node.graph_all_successors(); //this._dirtyable_all_successors(original_trigger_graph_node);\n\t\t// successors = successors.filter(n=>!n.is_dirty())\n\t\tfor (let successor of this._cached_successors) {\n\t\t\tsuccessor.dirty_controller.set_dirty(original_trigger_graph_node, propagate);\n\t\t\t// console.log(successor);\n\t\t}\n\n\t\t// cooker.unblock();\n\t}\n\n\t// _dirtyable_all_successors(original_trigger_graph_node: CoreGraphNode): CoreGraphNode[] {\n\t// \treturn this.graph_all_predecessors()\n\t// \t// const successors = [];\n\t// \t// let newly_added_successors = this._dirtyable_direct_successors(original_trigger_graph_node);\n\t// \t// successors.push(newly_added_successors);\n\n\t// \t// while (newly_added_successors.length > 0) {\n\t// \t// \tnewly_added_successors = lodash_flatten(\n\t// \t// \t\tnewly_added_successors.map((newly_added_successor) => {\n\t// \t// \t\t\treturn newly_added_successor._dirtyable_direct_successors(original_trigger_graph_node);\n\t// \t// \t\t})\n\t// \t// \t);\n\t// \t// \tsuccessors.push(newly_added_successors);\n\t// \t// }\n\n\t// \t// return lodash_uniq(lodash_flatten(successors));\n\t// }\n\n\tclear_successors_cache() {\n\t\tthis._cached_successors = undefined;\n\t}\n\tclear_successors_cache_with_predecessors() {\n\t\tthis.clear_successors_cache();\n\t\tfor (let predecessor of this.node.graph_all_predecessors()) {\n\t\t\tpredecessor.dirty_controller.clear_successors_cache();\n\t\t}\n\t}\n\t// graph_all_predecessors(): CoreGraphNode[] {\n\t// \treturn this.node.graph_all_predecessors()\n\t// \t// console.log('dirtyable graph_all_predecessors should be overwritten');\n\t// \t// return [];\n\t// }\n\n\t// dirty_successors(): Array<CoreGraphNode> {\n\t// \tthrow 'Dirtyable.dirty_successors requires implementation';\n\t// }\n\t// set_dirty_allowed(original_trigger_graph_node: CoreGraphNode): boolean {\n\t// \tthrow 'Dirtyable.set_dirty_allowed requires implementation';\n\t// }\n\t// _dirtyable_direct_successors(original_trigger_graph_node: CoreGraphNode): Array<CoreGraphNode> {\n\t// \treturn this.dirty_successors().filter((successor) => {\n\t// \t\treturn successor.set_dirty_allowed == null || successor.set_dirty_allowed(original_trigger_graph_node);\n\t// \t});\n\t// }\n\n\t// set_graph_successors_dirty_via_graph: (original_trigger_graph_node)->\n\t// \tcooker = this.scene().cooker()\n\t// \tcooker.block()\n\n\t// \tmake_successors_dirty = false\n\t// \tlodash_each lodash_flatten(this.graph_all_successors()), (successor)=>\n\t// \t\tsuccessor.set_dirty(original_trigger_graph_node, this, false)\n\n\t// \tcooker.unblock()\n\n\t// post_set_dirty(original_trigger_graph_node?: Dirtyable, direct_trigger_graph_node?: Dirtyable): void{}\n}\n","import {Vector2} from 'three/src/math/Vector2';\nimport {Color} from 'three/src/math/Color';\nimport {BaseNodeType} from '../_Base';\nimport {NodeEvent} from '../../poly/NodeEvent';\n\nexport interface NodeUIDataJson {\n\tx: number;\n\ty: number;\n\tcomment?: string;\n}\n\nexport class UIData {\n\tprivate _position: Vector2 = new Vector2();\n\tprivate _width: number = 50;\n\tprivate _border_radius: number = 3;\n\tprivate _color: Color = new Color(0.75, 0.75, 0.75);\n\t// private _icon: string | null = null;\n\tprivate _layout_vertical: boolean = true;\n\tprivate _comment: string | undefined;\n\tprivate _json: NodeUIDataJson = {\n\t\tx: 0,\n\t\ty: 0,\n\t};\n\n\tconstructor(private node: BaseNodeType, x: number = 0, y: number = 0) {\n\t\tthis._position.x = x;\n\t\tthis._position.y = y;\n\t}\n\n\tset_border_radius(radius: number) {\n\t\tthis._border_radius = radius;\n\t}\n\tborder_radius() {\n\t\treturn this._border_radius;\n\t}\n\tset_width(width: number) {\n\t\tthis._width = width;\n\t}\n\twidth() {\n\t\treturn this._width;\n\t}\n\tset_comment(comment: string | undefined) {\n\t\tthis._comment = comment;\n\t\tthis.node.emit(NodeEvent.UI_DATA_COMMENT_UPDATED);\n\t}\n\tget comment(): string | undefined {\n\t\treturn this._comment;\n\t}\n\tset_color(color: Color) {\n\t\tthis._color = color;\n\t}\n\tcolor() {\n\t\treturn this._color;\n\t}\n\t// set_icon(icon: string) {\n\t// \tthis._icon = icon;\n\t// }\n\t// icon() {\n\t// \treturn this._icon;\n\t// }\n\tset_layout_horizontal() {\n\t\tthis._layout_vertical = false;\n\t}\n\tis_layout_vertical() {\n\t\treturn this._layout_vertical;\n\t}\n\n\tcopy(ui_data: UIData) {\n\t\tthis._position.copy(ui_data.position);\n\t\tthis._color.copy(ui_data.color());\n\t}\n\n\tget position() {\n\t\treturn this._position;\n\t}\n\n\tset_position(new_position: Vector2 | number, y: number = 0) {\n\t\tif (new_position instanceof Vector2) {\n\t\t\tthis._position.copy(new_position);\n\t\t} else {\n\t\t\tconst x = new_position;\n\t\t\tthis._position.set(x, y);\n\t\t}\n\t\tthis.node.emit(NodeEvent.UI_DATA_POSITION_UPDATED);\n\t}\n\n\ttranslate(offset: Vector2, snap: boolean = false) {\n\t\tthis._position.add(offset);\n\n\t\tif (snap) {\n\t\t\tthis._position.x = Math.round(this._position.x);\n\t\t\tthis._position.y = Math.round(this._position.y);\n\t\t}\n\n\t\tthis.node.emit(NodeEvent.UI_DATA_POSITION_UPDATED);\n\t}\n\t// arguments_to_vector(x: number,y: number){\n\t// \tif (arguments.length === 2) {\n\t// \t\tthis._position.x = arguments[0];\n\t// \t\tthis._position.y = arguments[1];\n\t// \t} else {\n\t// \t\tthis._position.x = new_position.x;\n\t// \t\tthis._position.y = new_position.y;\n\t// \t}\n\t// }\n\tto_json(): NodeUIDataJson {\n\t\tthis._json.x = this._position.x;\n\t\tthis._json.y = this._position.y;\n\t\tthis._json.comment = this._comment;\n\t\treturn this._json;\n\t}\n}\n","import {BaseNodeType} from '../_Base';\n\nimport {TimeDependentState} from './states/TimeDependent';\nimport {ErrorState} from './states/Error';\n\nexport class StatesController {\n\ttime_dependent = new TimeDependentState(this.node);\n\terror = new ErrorState(this.node);\n\tconstructor(protected node: BaseNodeType) {}\n}\n","import {BaseState} from './Base';\n\nexport class TimeDependentState extends BaseState {\n\tget active() {\n\t\treturn this.are_params_time_dependent() || this.are_inputs_time_dependent();\n\t}\n\n\tare_params_time_dependent(): boolean {\n\t\tconst param_names = this.node.params.names;\n\t\tfor (let param_name of param_names) {\n\t\t\tconst param = this.node.params.get(param_name);\n\t\t\tif (param && param.states.time_dependent.active) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tare_inputs_time_dependent(): boolean {\n\t\tconst inputs = this.node.io.inputs.inputs();\n\t\tfor (let input of inputs) {\n\t\t\tif (input && input.states.time_dependent.active) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tforce_time_dependent() {\n\t\tconst predecessor_ids = this.node.graph_predecessors().map((n) => n.graph_node_id);\n\t\tconst frame_node = this.node.scene.time_controller.graph_node; // context();\n\t\tif (!predecessor_ids.includes(frame_node.graph_node_id)) {\n\t\t\tthis.node.add_graph_input(frame_node);\n\t\t}\n\t}\n\tunforce_time_dependent() {\n\t\tconst frame_node = this.node.scene.time_controller.graph_node;\n\t\tthis.node.remove_graph_input(frame_node);\n\t}\n}\n","import {NodeEvent} from '../../../poly/NodeEvent';\nimport {BaseState} from './Base';\n\nexport class ErrorState extends BaseState {\n\tprivate _message: string | undefined;\n\n\tset(message: string | undefined) {\n\t\tif (this._message != message) {\n\t\t\tconsole.warn('error', message, this.node.full_path());\n\t\t\tthis._message = message;\n\t\t\tthis.on_update();\n\t\t}\n\t}\n\tget message() {\n\t\treturn this._message;\n\t}\n\tclear() {\n\t\tthis.set(undefined);\n\t}\n\tget active(): boolean {\n\t\treturn this._message != null;\n\t}\n\n\tprotected on_update() {\n\t\tif (this._message != null) {\n\t\t\t// console.warn(\"new error\", message, this.self.full_path())\n\t\t\tthis.node.set_container(null, `from error '${this._message}'`);\n\t\t}\n\n\t\tthis.node.emit(NodeEvent.ERROR_UPDATED);\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\nimport {NameController} from '../NameController';\n\ntype Callback = () => void;\nimport {CoreWalker} from '../../../../core/Walker';\n\nexport class HierarchyParentController {\n\tprivate _parent: BaseNodeType | null = null;\n\tprivate _on_set_parent_hooks: Callback[] | undefined;\n\n\tconstructor(protected node: BaseNodeType) {}\n\n\tget parent() {\n\t\treturn this._parent;\n\t}\n\n\tset_parent(parent: BaseNodeType | null) {\n\t\tif (parent != this.node.parent_controller.parent) {\n\t\t\tthis._parent = parent;\n\t\t\tif (this._parent) {\n\t\t\t\t// this.node.set_scene(this._parent.scene);\n\t\t\t\tthis.node.name_controller.request_name_to_parent(NameController.base_name(this.node));\n\t\t\t}\n\t\t\t// this.on_set_parent();\n\t\t}\n\t}\n\tis_selected(): boolean {\n\t\treturn this.parent?.children_controller?.selection?.contains(this.node) || false;\n\t}\n\tfull_path(): string {\n\t\tconst separator = CoreWalker.SEPARATOR;\n\t\tif (this._parent != null) {\n\t\t\tconst parent_full_path = this._parent.full_path();\n\t\t\tif (parent_full_path === separator) {\n\t\t\t\treturn parent_full_path + this.node.name;\n\t\t\t} else {\n\t\t\t\treturn parent_full_path + separator + this.node.name;\n\t\t\t}\n\t\t} else {\n\t\t\treturn separator;\n\t\t}\n\t}\n\n\ton_set_parent() {\n\t\tif (this._on_set_parent_hooks) {\n\t\t\tfor (let hook of this._on_set_parent_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n\tfind_node(path: string): BaseNodeType | null {\n\t\t// if (!this._children_allowed) {\n\t\t// \treturn null;\n\t\t// }\n\t\tif (path == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (path === CoreWalker.CURRENT || path === CoreWalker.CURRENT_WITH_SLASH) {\n\t\t\treturn this.node;\n\t\t}\n\t\tif (path === CoreWalker.PARENT || path === CoreWalker.PARENT_WITH_SLASH) {\n\t\t\treturn this.node.parent;\n\t\t}\n\n\t\tconst separator = CoreWalker.SEPARATOR;\n\t\tif (path[0] === separator) {\n\t\t\tpath = path.substring(1, path.length);\n\t\t}\n\n\t\tconst elements = path.split(separator);\n\t\tif (elements.length === 1) {\n\t\t\tconst name = elements[0];\n\t\t\tif (this.node.children_controller) {\n\t\t\t\treturn this.node.children_controller.child_by_name(name);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn CoreWalker.find_node(this.node, path);\n\t\t}\n\t}\n}\n","import {CoreString} from '../../../../core/String';\n\nimport {BaseNodeType} from '../../_Base';\nimport {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\n\nimport lodash_includes from 'lodash/includes';\nimport lodash_keys from 'lodash/keys';\nimport lodash_sortBy from 'lodash/sortBy';\nimport lodash_values from 'lodash/values';\nimport {NodeEvent} from '../../../poly/NodeEvent';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {NameController} from '../NameController';\nimport {CoreNodeSelection} from '../../../../core/NodeSelection';\n\nimport {Poly} from '../../../Poly';\n// import {NameController} from '../NameController';\n\n// interface HierarchyOptions {\n// \tcontext: NodeContext\n// \tdependent?: boolean;\n// }\nconst NODE_SIMPLE_NAME = 'children';\n\nexport class HierarchyChildrenController {\n\t// private _context: NodeContext | undefined;\n\t// private _children_allowed: boolean = false;\n\tprivate _children: Dictionary<BaseNodeType> = {};\n\tprivate _children_by_type: Dictionary<string[]> = {};\n\tprivate _children_and_grandchildren_by_context: Dictionary<string[]> = {};\n\n\tprivate _is_dependent_on_children: boolean = false;\n\tprivate _children_node: CoreGraphNode | undefined;\n\n\tprivate _selection: CoreNodeSelection | undefined;\n\tget selection(): CoreNodeSelection {\n\t\treturn (this._selection = this._selection || new CoreNodeSelection(this.node));\n\t}\n\tconstructor(protected node: BaseNodeType, private _context: NodeContext) {}\n\tget context() {\n\t\treturn this._context;\n\t}\n\tinit(dependent: boolean = false) {\n\t\t// const context = this.node.children_context();\n\t\t// if (context) {\n\t\t// this._available_children_classes = options['children'] || {};\n\t\t// this._available_children_classes = window.POLY.registered_nodes(context, this.self.type())\n\n\t\t// this._children_allowed = true;\n\t\tthis._children = {};\n\n\t\t// const is_dependent = options['dependent'];\n\t\tif (dependent) {\n\t\t\tthis._is_dependent_on_children = dependent;\n\t\t\tif (this._is_dependent_on_children) {\n\t\t\t\tthis._children_node = new CoreGraphNode(this.node.scene, NODE_SIMPLE_NAME);\n\t\t\t\t// this._children_node.set_scene(this.node.scene);\n\t\t\t\tthis.node.add_graph_input(this._children_node);\n\t\t\t}\n\t\t}\n\t\t// }\n\t}\n\n\t// TODO: when copy pasting a node called bla_11, the next one will be renamed bla_110 instead of 12\n\tset_child_name(node: BaseNodeType, new_name: string): void {\n\t\t//return if node.name() == new_name\n\t\tlet current_child_with_name;\n\t\tnew_name = new_name.replace(/[^A-Za-z0-9]/g, '_');\n\t\tnew_name = new_name.replace(/^[0-9]/, '_'); // replace first char if not a letter\n\n\t\tif ((current_child_with_name = this._children[new_name]) != null) {\n\t\t\t// only return if found node is same as argument node, and if new_name is same as current_name\n\t\t\tif (node.name === new_name && current_child_with_name.graph_node_id === node.graph_node_id) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// increment new_name\n\t\t\tnew_name = CoreString.increment(new_name);\n\n\t\t\treturn this.set_child_name(node, new_name);\n\t\t} else {\n\t\t\t// let current_child;\n\t\t\tconst current_name = node.name;\n\n\t\t\t// delete old entry if node was in _children with old name\n\t\t\tconst current_child = this._children[current_name];\n\t\t\tif (current_child) {\n\t\t\t\tdelete this._children[current_name];\n\t\t\t}\n\n\t\t\t// add to new name\n\t\t\tthis._children[new_name] = node;\n\t\t\tnode.name_controller.update_name_from_parent(new_name);\n\t\t\tthis._add_to_nodes_by_type(node);\n\t\t\tthis.node.scene.nodes_controller.add_to_instanciated_node(node);\n\t\t}\n\t}\n\n\tnode_context_signature() {\n\t\treturn `${this.node.node_context()}/${this.node.type}`;\n\t}\n\n\tavailable_children_classes() {\n\t\treturn Poly.instance().registered_nodes(this._context, this.node.type);\n\t}\n\t// children_allowed(): boolean {\n\t// \t// return (this.self.available_children_classes != null) &&\n\t// \t// (Object.keys(this.self.available_children_classes()).length > 0);\n\t// \tconst available_classes = this.available_children_classes();\n\t// \treturn available_classes && Object.keys(available_classes).length > 0;\n\t// }\n\n\tis_valid_child_type(node_type: string): boolean {\n\t\tconst node_class = this.available_children_classes()[node_type];\n\t\treturn node_class != null;\n\t}\n\n\tcreate_node(node_type: string): BaseNodeType {\n\t\tconst node_class = this.available_children_classes()[node_type];\n\n\t\tif (node_class == null) {\n\t\t\tconst message = `child node type '${node_type}' not found for node '${this.node.full_path()}'. Available types are: ${Object.keys(\n\t\t\t\tthis.available_children_classes()\n\t\t\t).join(', ')}, ${this._context}, ${this.node.type}`;\n\t\t\tconsole.error(message);\n\t\t\tthrow message;\n\t\t} else {\n\t\t\tconst child_node = new node_class(this.node.scene, `child_node_${node_type}`);\n\t\t\tchild_node.initialize_base_and_node();\n\t\t\t// child_node.set_scene(this.node.scene);\n\t\t\tthis.add_node(child_node);\n\t\t\tchild_node.lifecycle.set_creation_completed();\n\t\t\treturn child_node;\n\t\t}\n\t}\n\n\tadd_node(child_node: BaseNodeType) {\n\t\t// if (!this._children_allowed) {\n\t\t// \tthrow `node ${this.node.full_path()} cannot have children`;\n\t\t// }\n\n\t\tchild_node.set_parent(this.node);\n\t\tchild_node.params.init();\n\t\tchild_node.parent_controller.on_set_parent();\n\t\tchild_node.name_controller.post_set_full_path();\n\t\tif (child_node.children_allowed() && child_node.children_controller) {\n\t\t\tfor (let child of child_node.children_controller.children()) {\n\t\t\t\tchild.name_controller.post_set_full_path();\n\t\t\t}\n\t\t}\n\t\tthis.node.emit(NodeEvent.CREATED, {child_node_json: child_node.to_json()});\n\t\tif (this.node.scene.lifecycle_controller.on_create_hook_allowed()) {\n\t\t\tchild_node.lifecycle.run_on_create_hooks();\n\t\t}\n\t\tchild_node.lifecycle.run_on_add_hooks();\n\t\tthis.set_child_name(child_node, NameController.base_name(child_node));\n\t\tthis.node.lifecycle.run_on_child_add_hooks(child_node);\n\t\t// this.post_add_node(child_node);\n\n\t\tif (this._is_dependent_on_children && this._children_node) {\n\t\t\tthis._children_node.add_graph_input(child_node);\n\t\t}\n\t\tif (child_node.require_webgl2()) {\n\t\t\tthis.node.scene.webgl_controller.set_require_webgl2();\n\t\t}\n\n\t\tthis.node.scene.missing_expression_references_controller.check_for_missing_references(child_node);\n\n\t\treturn child_node;\n\t}\n\t// that's redondant with the lifecycle on_child_add and on_child_remove\n\t// post_add_node(node: BaseNode) {}\n\t// post_remove_node(node: BaseNode) {}\n\n\tremove_node(child_node: BaseNodeType): void {\n\t\tif (child_node.parent != this.node) {\n\t\t\treturn console.warn(`node ${child_node.name} not under parent ${this.node.full_path()}`);\n\t\t} else {\n\t\t\t// set other dependencies dirty\n\t\t\tchild_node.set_successors_dirty(this.node);\n\n\t\t\tif (this._is_dependent_on_children && this._children_node) {\n\t\t\t\tthis._children_node.remove_graph_input(child_node);\n\t\t\t}\n\n\t\t\tif (this.selection.contains(child_node)) {\n\t\t\t\tthis.selection.remove([child_node]);\n\t\t\t}\n\n\t\t\tconst first_connection = child_node.io.connections.first_input_connection();\n\t\t\tchild_node.io.connections.input_connections()?.forEach((input_connection) => {\n\t\t\t\tif (input_connection) {\n\t\t\t\t\tinput_connection.disconnect({set_input: true});\n\t\t\t\t}\n\t\t\t});\n\t\t\tchild_node.io.connections.output_connections()?.forEach((output_connection) => {\n\t\t\t\tif (output_connection) {\n\t\t\t\t\toutput_connection.disconnect({set_input: true});\n\t\t\t\t\tif (first_connection) {\n\t\t\t\t\t\tconst old_src = first_connection.node_src;\n\t\t\t\t\t\tconst old_output_index = output_connection.output_index;\n\t\t\t\t\t\tconst old_dest = output_connection.node_dest;\n\t\t\t\t\t\tconst old_input_index = output_connection.input_index;\n\t\t\t\t\t\told_dest.io.inputs.set_input(old_input_index, old_src, old_output_index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// disconnect successors\n\t\t\tchild_node.graph_disconnect_successors();\n\n\t\t\t// remove from children\n\t\t\tchild_node.set_parent(null);\n\t\t\tdelete this._children[child_node.name];\n\t\t\tthis._remove_from_nodes_by_type(child_node);\n\t\t\tthis.node.scene.nodes_controller.remove_from_instanciated_node(child_node);\n\n\t\t\tthis.node.lifecycle.run_on_child_remove_hooks(child_node);\n\t\t\tchild_node.lifecycle.run_on_delete_hooks();\n\t\t\tchild_node.emit(NodeEvent.DELETED, {parent_id: this.node.graph_node_id});\n\t\t}\n\t}\n\n\t_add_to_nodes_by_type(node: BaseNodeType) {\n\t\tconst node_id = node.graph_node_id;\n\t\tconst type = node.type;\n\t\tthis._children_by_type[type] = this._children_by_type[type] || [];\n\t\tif (!lodash_includes(this._children_by_type[type], node_id)) {\n\t\t\tthis._children_by_type[type].push(node_id);\n\t\t}\n\t\tthis.add_to_children_and_grandchildren_by_context(node);\n\t}\n\t_remove_from_nodes_by_type(node: BaseNodeType) {\n\t\tconst node_id = node.graph_node_id;\n\t\tconst type = node.type;\n\t\tif (this._children_by_type[type]) {\n\t\t\tconst index = this._children_by_type[type].indexOf(node_id);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis._children_by_type[type].splice(index, 1);\n\t\t\t\tif (this._children_by_type[type].length == 0) {\n\t\t\t\t\tdelete this._children_by_type[type];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.remove_from_children_and_grandchildren_by_context(node);\n\t}\n\tadd_to_children_and_grandchildren_by_context(node: BaseNodeType) {\n\t\tconst node_id = node.graph_node_id;\n\t\tconst type = node.node_context();\n\t\tthis._children_and_grandchildren_by_context[type] = this._children_and_grandchildren_by_context[type] || [];\n\t\tif (!lodash_includes(this._children_and_grandchildren_by_context[type], node_id)) {\n\t\t\tthis._children_and_grandchildren_by_context[type].push(node_id);\n\t\t}\n\t\tif (this.node.parent && this.node.parent.children_allowed()) {\n\t\t\tthis.node.parent.children_controller?.add_to_children_and_grandchildren_by_context(node);\n\t\t}\n\t}\n\tremove_from_children_and_grandchildren_by_context(node: BaseNodeType) {\n\t\tconst node_id = node.graph_node_id;\n\t\tconst type = node.node_context();\n\t\tif (this._children_and_grandchildren_by_context[type]) {\n\t\t\tconst index = this._children_and_grandchildren_by_context[type].indexOf(node_id);\n\t\t\tif (index >= 0) {\n\t\t\t\tthis._children_and_grandchildren_by_context[type].splice(index, 1);\n\t\t\t\tif (this._children_and_grandchildren_by_context[type].length == 0) {\n\t\t\t\t\tdelete this._children_and_grandchildren_by_context[type];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.node.parent && this.node.parent.children_allowed()) {\n\t\t\tthis.node.parent.children_controller?.remove_from_children_and_grandchildren_by_context(node);\n\t\t}\n\t}\n\n\tnodes_by_type(type: string): BaseNodeType[] {\n\t\tconst node_ids = this._children_by_type[type] || [];\n\t\tconst graph = this.node.scene.graph;\n\t\tconst nodes: BaseNodeType[] = [];\n\t\tnode_ids.forEach((node_id) => {\n\t\t\tconst node = graph.node_from_id(node_id) as BaseNodeType;\n\t\t\tif (node) {\n\t\t\t\tnodes.push(node);\n\t\t\t}\n\t\t});\n\t\treturn nodes;\n\t}\n\tchild_by_name(name: string) {\n\t\treturn this._children[name];\n\t}\n\t// children_and_grandchildren_by_context(context: NodeContext): BaseNode[]{\n\t// \tconst node_ids = this._children_and_grandchildren_by_context[context] || []\n\t// \tconst graph = this.self.scene().graph()\n\t// \treturn node_ids.map(node_id=>graph.node_from_id(node_id))\n\t// }\n\thas_children_and_grandchildren_with_context(context: NodeContext) {\n\t\treturn this._children_and_grandchildren_by_context[context] != null;\n\t}\n\t//lodash_filter this.children(), (child)=>\n\t//\tchild.type() == type\n\n\tchildren(): BaseNodeType[] {\n\t\treturn lodash_values(this._children);\n\t}\n\tchildren_names() {\n\t\treturn lodash_sortBy(lodash_keys(this._children));\n\t}\n\t// children_map: ->\n\t// \t@_children\n\n\ttraverse_children(callback: (arg0: BaseNodeType) => void) {\n\t\tfor (let child of this.children()) {\n\t\t\tcallback(child);\n\n\t\t\tchild.children_controller?.traverse_children(callback);\n\t\t}\n\t}\n}\n","// import UIData from './UIData';\nimport {BaseNodeType} from '../engine/nodes/_Base';\nimport lodash_difference from 'lodash/difference';\nimport lodash_union from 'lodash/union';\n// import lodash_isArray from 'lodash/isArray'\nimport lodash_isEqual from 'lodash/isEqual';\nimport {NodeEvent} from '../engine/poly/NodeEvent';\n\nexport class CoreNodeSelection {\n\t_node_ids: string[] = [];\n\tconstructor(private _node: BaseNodeType) {\n\t\t// super();\n\t\t// this._node_ids = [];\n\t}\n\n\tnode() {\n\t\treturn this._node;\n\t}\n\n\tnodes(): BaseNodeType[] {\n\t\treturn this._node.scene.graph.nodes_from_ids(this._node_ids) as BaseNodeType[];\n\t}\n\n\tcontains(node: BaseNodeType): boolean {\n\t\treturn this._node_ids.includes(node.graph_node_id);\n\t}\n\tequals(nodes: BaseNodeType[]): boolean {\n\t\tconst node_ids = nodes.map((node) => node.graph_node_id).sort();\n\t\treturn lodash_isEqual(node_ids, this._node_ids);\n\t}\n\n\tclear() {\n\t\tthis._node_ids = [];\n\t\tthis.send_update_event();\n\t}\n\tset(nodes: BaseNodeType[]) {\n\t\t// this.remove(this.nodes());\n\t\tthis._node_ids = [];\n\t\tthis.add(nodes);\n\t}\n\n\tadd(nodes_to_add: BaseNodeType[]) {\n\t\t// if (!lodash_isArray(nodes_to_add)) { nodes_to_add = [nodes_to_add]; }\n\n\t\tconst node_ids_to_add = nodes_to_add.map((node) => node.graph_node_id);\n\t\tthis._node_ids = lodash_union(this._node_ids, node_ids_to_add);\n\n\t\tthis.send_update_event();\n\t}\n\n\tremove(nodes_to_remove: BaseNodeType[]) {\n\t\t// if (!lodash_isArray(nodes_to_remove)) { nodes_to_remove = [nodes_to_remove]; }\n\n\t\tconst node_ids_to_remove = nodes_to_remove.map((node) => node.graph_node_id);\n\t\tthis._node_ids = lodash_difference(this._node_ids, node_ids_to_remove);\n\n\t\tthis.send_update_event();\n\t}\n\n\tprivate send_update_event() {\n\t\tthis._node.emit(NodeEvent.SELECTION_UPDATED);\n\t}\n\n\tprivate _json: string[] = [];\n\tto_json() {\n\t\tthis._json = this._json || [];\n\t\tthis._json = this._node_ids.map((id) => id);\n\t\treturn this._json;\n\t}\n}\n","import {BaseNodeType} from '../_Base';\n\ntype Callback = () => void;\ntype CallbackWithChildNode = (child_node: BaseNodeType) => void;\n\nexport class LifeCycleController {\n\tprotected _creation_completed = false;\n\tprotected _on_child_add_hooks: CallbackWithChildNode[] | undefined;\n\tprivate _on_child_remove_hooks: CallbackWithChildNode[] | undefined;\n\tprivate _on_create_hooks: Callback[] | undefined;\n\tprivate _on_add_hooks: Callback[] | undefined;\n\tprivate _on_delete_hooks: Callback[] | undefined;\n\tconstructor(protected node: BaseNodeType) {}\n\n\tset_creation_completed() {\n\t\tthis._creation_completed = true;\n\t}\n\tget creation_completed() {\n\t\treturn this.node.scene.loading_controller.loaded && this._creation_completed;\n\t}\n\t//\n\t//\n\t// ON CHILD ADD\n\t//\n\t//\n\tadd_on_child_add_hook(callback: CallbackWithChildNode) {\n\t\tthis._on_child_add_hooks = this._on_child_add_hooks || [];\n\t\tthis._on_child_add_hooks.push(callback);\n\t}\n\trun_on_child_add_hooks(node: BaseNodeType) {\n\t\tthis.execute_hooks_with_child_node(this._on_child_add_hooks, node);\n\t}\n\n\t//\n\t//\n\t// ON CHILD REMOVE\n\t//\n\t//\n\tadd_on_child_remove_hook(callback: CallbackWithChildNode) {\n\t\tthis._on_child_remove_hooks = this._on_child_remove_hooks || [];\n\t\tthis._on_child_remove_hooks.push(callback);\n\t}\n\trun_on_child_remove_hooks(node: BaseNodeType) {\n\t\tthis.execute_hooks_with_child_node(this._on_child_remove_hooks, node);\n\t}\n\n\t//\n\t//\n\t// ON CREATE\n\t//\n\t//\n\tadd_on_create_hook(callback: Callback) {\n\t\tthis._on_create_hooks = this._on_create_hooks || [];\n\t\tthis._on_create_hooks.push(callback);\n\t}\n\trun_on_create_hooks() {\n\t\tthis.execute_hooks(this._on_create_hooks);\n\t}\n\n\t//\n\t//\n\t// ON ADD\n\t//\n\t//\n\tadd_on_add_hook(callback: Callback) {\n\t\tthis._on_add_hooks = this._on_add_hooks || [];\n\t\tthis._on_add_hooks.push(callback);\n\t}\n\trun_on_add_hooks() {\n\t\tthis.execute_hooks(this._on_add_hooks);\n\t}\n\n\t//\n\t//\n\t// ON DELETE\n\t//\n\t//\n\tadd_delete_hook(callback: Callback) {\n\t\tthis._on_delete_hooks = this._on_delete_hooks || [];\n\t\tthis._on_delete_hooks.push(callback);\n\t}\n\trun_on_delete_hooks() {\n\t\tthis.execute_hooks(this._on_delete_hooks);\n\t}\n\n\t//\n\t//\n\t// UTILS\n\t//\n\t//\n\tprotected execute_hooks(hooks: Callback[] | undefined) {\n\t\tif (hooks) {\n\t\t\tfor (let hook of hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n\tprotected execute_hooks_with_child_node(hooks: CallbackWithChildNode[] | undefined, child_node: BaseNodeType) {\n\t\tif (hooks) {\n\t\t\tfor (let hook of hooks) {\n\t\t\t\thook(child_node);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../_Base';\nimport {BaseContainer} from '../../containers/_Base';\nimport {Poly} from '../../Poly';\n\nexport class CookController {\n\t_cooking: boolean = false;\n\t_cooks_count: number = 0;\n\t_max_cook_time: number = -1;\n\t_cooking_dirty_timestamp: number | undefined;\n\t_cook_time_with_inputs: number = 0;\n\t_cook_time_with_inputs_start: number | undefined;\n\t_cook_time_start: number | undefined;\n\t_cook_time: number = 0;\n\t_cook_time_params_start: number | undefined;\n\t_cook_time_params: number = 0;\n\t_last_eval_key: string | undefined;\n\n\t_inputs_evaluation_required: boolean = true; //currently only for switch SOP\n\n\tconstructor(private node: BaseNodeType) {}\n\n\tdisallow_inputs_evaluation() {\n\t\tthis._inputs_evaluation_required = false;\n\t}\n\n\tget is_cooking(): boolean {\n\t\treturn this._cooking === true;\n\t}\n\tget cooks_count(): number {\n\t\treturn this._cooks_count;\n\t}\n\tget cook_time(): number {\n\t\treturn this._cook_time;\n\t}\n\t// post_set_dirty: (original_trigger_graph_node, direct_trigger_graph_node)->\n\t//this.emit 'node_dirty_updated'\n\t// this.node_post_set_dirty()\n\t// post_remove_dirty_state: (message)->\n\t// \tif !message?\n\t// \t\tthrow \"remove dirty state without message\"\n\n\t// node_post_set_dirty: ->\n\t// \t#\n\tprivate _init_cooking_state() {\n\t\tthis._cooking = true;\n\t\tthis._cooking_dirty_timestamp = this.node.dirty_controller.dirty_timestamp;\n\t}\n\tprivate _init_cooking_start_time(perf_active?: boolean) {\n\t\tif (perf_active == null) {\n\t\t\tperf_active = this.node.scene.performance.started;\n\t\t}\n\t\tif (perf_active) {\n\t\t\tthis._cook_time_start = performance.now();\n\t\t}\n\t}\n\n\tprivate async _start_cook_if_no_errors(input_contents: any[]) {\n\t\tif (this.node.states.error.active) {\n\t\t\tthis.end_cook();\n\t\t} else {\n\t\t\t// this.self.cook(input_containers);\n\t\t\ttry {\n\t\t\t\tawait this.node.cook(input_contents);\n\t\t\t} catch (e) {\n\t\t\t\tthis.node.states.error.set(`node internal error: '${e}'.`);\n\t\t\t\tconsole.error(this.node.full_path(), e);\n\t\t\t\tthis.end_cook();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync cook_main() {\n\t\tif (this.is_cooking) {\n\t\t\treturn;\n\t\t}\n\t\tthis._init_cooking_state();\n\t\tconst perf_active = this.node.scene.performance.started;\n\t\tif (perf_active) {\n\t\t\tthis._cook_time_with_inputs_start = performance.now();\n\t\t}\n\t\tthis.node.states.error.clear();\n\n\t\t//this._block_params_dirty_propagation()\n\t\tconst input_containers = await this.evaluate_inputs_and_params();\n\n\t\tthis._init_cooking_start_time(perf_active);\n\n\t\tconst input_contents = [];\n\t\tif (input_containers) {\n\t\t\tlet input_container;\n\t\t\tfor (let i = 0; i < input_containers.length; i++) {\n\t\t\t\tinput_container = input_containers[i];\n\t\t\t\tif (input_container) {\n\t\t\t\t\tif (this.node.io.inputs.input_clonable_state_with_override(i)) {\n\t\t\t\t\t\tinput_contents.push(input_container.core_content_cloned());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinput_contents.push(input_container.core_content());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait this._start_cook_if_no_errors(input_contents);\n\t}\n\tasync cook_main_without_inputs() {\n\t\tthis.node.scene.cook_controller.add_node(this.node);\n\t\tif (this.is_cooking) {\n\t\t\t// TODO:\n\t\t\t// this seems to happen because when we flush the cooker queue,\n\t\t\t// some graph nodes will trigger more updates, which will then make dependent nodes\n\t\t\t// dirty again\n\t\t\tconsole.warn('cook_main_without_inputs already cooking', this.node.full_path());\n\t\t\treturn;\n\t\t}\n\t\tthis._init_cooking_state();\n\t\tthis._init_cooking_start_time();\n\t\tthis.node.states.error.clear();\n\n\t\tawait this.node.params.eval_all();\n\t\tawait this._start_cook_if_no_errors([]);\n\t}\n\t// catch e\n\t// \tthis.set_error(\"failed to cook: #{e}\")\n\n\tend_cook(message?: string | null) {\n\t\tthis._increment_cooks_count();\n\n\t\tconst dirty_timestamp = this.node.dirty_controller.dirty_timestamp;\n\t\tif (dirty_timestamp == null || dirty_timestamp === this._cooking_dirty_timestamp) {\n\t\t\tthis.node.remove_dirty_state();\n\t\t\tthis._terminate_cook_process();\n\t\t} else {\n\t\t\tPoly.instance().log('COOK AGAIN', dirty_timestamp, this._cooking_dirty_timestamp, this.node.full_path());\n\t\t\tthis._cooking = false;\n\t\t\tthis.cook_main();\n\t\t}\n\t}\n\n\t_terminate_cook_process() {\n\t\tif (this.is_cooking) {\n\t\t\t//this._unblock_params_dirty_propagation()\n\t\t\tthis._cooking = false;\n\n\t\t\t// this._cook_eval_key = `${this.graph_node_id}/${performance.now()}@${this.context().frame()}`;\n\n\t\t\tthis._record_cook_time();\n\t\t\t//console.log(\"END COOK: #{this.full_path()} #{this.cook_time()} (with inputs:#{this.cook_time_with_inputs()}) (cook count: #{@_cooks_count}): #{message}\")\n\t\t\t//this.notify_requesters()\n\t\t\tsetTimeout(this.node.container_controller.notify_requesters.bind(this.node.container_controller), 0);\n\t\t}\n\t}\n\tprivate _increment_cooks_count() {\n\t\tif (this.is_cooking) {\n\t\t\tif (this._cook_time_start != null) {\n\t\t\t\tthis._cooks_count += 1;\n\t\t\t}\n\t\t}\n\t}\n\n\t// cook_eval_key() {\n\t// \tif (!this.is_dirty()) {\n\t// \t\treturn this._cook_eval_key;\n\t// \t} else {\n\t// \t\treturn performance.now();\n\t// \t}\n\t// }\n\n\t_record_cook_time() {\n\t\tif (this.node.scene.performance.started) {\n\t\t\tconst cook_time_end = performance.now();\n\n\t\t\tif (this._cook_time_with_inputs_start != null) {\n\t\t\t\tthis._cook_time_with_inputs = cook_time_end - this._cook_time_with_inputs_start;\n\t\t\t\tthis._cook_time_with_inputs_start = undefined;\n\t\t\t}\n\n\t\t\tif (this._cook_time_params_start != null && this._cook_time_start != null) {\n\t\t\t\tthis._cook_time_params = this._cook_time_start - this._cook_time_params_start;\n\t\t\t}\n\n\t\t\tif (this._cook_time_start != null) {\n\t\t\t\tthis._cook_time = cook_time_end - this._cook_time_start;\n\t\t\t\tthis._cook_time_start = undefined;\n\t\t\t}\n\n\t\t\tthis._max_cook_time = Math.max(this._max_cook_time, this._cook_time);\n\t\t}\n\n\t\tif (this.node.scene.performance.started) {\n\t\t\tthis.node.scene.performance.record_node_cook_data(this.node);\n\t\t}\n\t}\n\n\t// allow_eval_key_check() {\n\t// \treturn false;\n\t// }\n\n\tasync evaluate_inputs_and_params() {\n\t\t//t0 = performance.now()\n\n\t\tlet input_containers: (BaseContainer | null)[] = [];\n\t\tif (this._inputs_evaluation_required) {\n\t\t\tinput_containers = await this.node.io.inputs.eval_required_inputs_p();\n\t\t}\n\t\t// const inputs_eval_key = input_containers.map( c => c.eval_key()).join('-');\n\n\t\tif (this.node.scene.performance.started) {\n\t\t\tthis._cook_time_params_start = performance.now();\n\t\t}\n\n\t\t/*const params_eval_key = */ await this.node.params.eval_all();\n\t\t// const full_eval_key = [inputs_eval_key, params_eval_key].join('+');\n\t\t// if (this.allow_eval_key_check() && (this._last_eval_key != null) && (this._last_eval_key === full_eval_key)) {\n\t\t// \tthis._terminate_cook_process('no need to cook');\n\t\t// } else {\n\t\t// \tthis._last_eval_key = full_eval_key;\n\t\t// }\n\t\treturn input_containers;\n\t}\n\n\t//this._time_with_precision(@_cook_time)\n\tget cook_time_with_inputs() {\n\t\treturn this._cook_time_with_inputs;\n\t}\n\t//this._time_with_precision(@_cook_time_with_inputs)\n\tget cook_time_params() {\n\t\treturn this._cook_time_params;\n\t}\n\t_time_with_precision(time: number) {\n\t\tconst precision = 1000;\n\t\treturn Math.round(time * precision) / precision;\n\t}\n}\n","/// <reference path=\"../../../../custom_typings/guards.d.ts\" />\n// finally, guard ALL the types!\nfunction typeGuard<T extends PrimitiveOrConstructor>(o: any, className: T): o is GuardedType<T> {\n\tconst localPrimitiveOrConstructor: PrimitiveOrConstructor = className;\n\tif (typeof localPrimitiveOrConstructor === 'string') {\n\t\treturn typeof o === localPrimitiveOrConstructor;\n\t}\n\treturn o instanceof localPrimitiveOrConstructor;\n}\n\nimport lodash_groupBy from 'lodash/groupBy';\nimport {BaseNodeType, BaseNodeClass} from '../_Base';\n\nimport {BaseParamType, BaseParamClass} from '../../params/_Base';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n\nenum METHODS {\n\tSUCCESSORS = 'graph_successors',\n\tPREDECESSORS = 'graph_predecessors',\n}\n\nexport class DependenciesController {\n\tprivate _params_referrees_by_graph_node_id: Dictionary<BaseParamType> | undefined;\n\n\tconstructor(protected node: BaseNodeType) {}\n\n\t// debug_dependencies() {\n\t// \tconst nodes = this.scene_successors();\n\t// \tconsole.log('--------------------');\n\t// \tnodes.forEach((n) => {\n\t// \t\tconsole.log(n.full_path());\n\t// \t});\n\t// }\n\n\tscene_successors() {\n\t\treturn this._find_scene_node_scene_nodes(METHODS.SUCCESSORS);\n\t}\n\n\tscene_predecessors() {\n\t\treturn this._find_scene_node_scene_nodes(METHODS.PREDECESSORS);\n\t}\n\tprivate _find_scene_node_scene_nodes(method: METHODS): BaseNodeType[] {\n\t\tconst params = this.node.params.all;\n\t\tconst graph_nodes: CoreGraphNode[] = [];\n\t\tfor (let param of params) {\n\t\t\tgraph_nodes.push(param);\n\t\t}\n\t\tgraph_nodes.push(this.node);\n\t\tconst start_nodes = graph_nodes;\n\t\tlet base_nodes: BaseNodeType[] = [];\n\t\tfor (let start_node of start_nodes) {\n\t\t\tthis._find_base_nodes_from_node(start_node, method, base_nodes);\n\t\t}\n\n\t\tif (method == METHODS.SUCCESSORS) {\n\t\t\tfor (let node of this.param_nodes_referree()) {\n\t\t\t\tbase_nodes.push(node);\n\t\t\t}\n\t\t}\n\n\t\t// ensure uniq and not current node\n\t\tbase_nodes = base_nodes.filter((scene_node) => {\n\t\t\treturn scene_node.graph_node_id != this.node.graph_node_id;\n\t\t});\n\t\tconst base_nodes_by_graph_node_id = lodash_groupBy(base_nodes, (n) => n.graph_node_id);\n\t\tconst uniq_base_nodes: BaseNodeType[] = [];\n\t\tObject.keys(base_nodes_by_graph_node_id).forEach((graph_node_id) => {\n\t\t\tuniq_base_nodes.push(base_nodes_by_graph_node_id[graph_node_id][0]);\n\t\t});\n\t\treturn uniq_base_nodes;\n\t}\n\n\tprivate _find_base_nodes_from_node(node: CoreGraphNode, method: METHODS, base_nodes: BaseNodeType[]) {\n\t\tconst next_nodes = node[method]();\n\t\tfor (let next_node of next_nodes) {\n\t\t\tif (next_node instanceof BaseParamClass) {\n\t\t\t\tbase_nodes.push(next_node.node);\n\t\t\t} else {\n\t\t\t\tif (typeGuard(next_node, BaseNodeClass)) {\n\t\t\t\t\tbase_nodes.push(next_node);\n\t\t\t\t} else {\n\t\t\t\t\tthis._find_base_nodes_from_node(next_node, method, base_nodes);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn base_nodes;\n\t}\n\n\t//\n\t//\n\t// REFERRED BY\n\t// which is used for operator path referring nodes without creating a graph edge\n\t//\n\t//\n\tadd_param_referree(param: BaseParamType) {\n\t\tthis._params_referrees_by_graph_node_id = this._params_referrees_by_graph_node_id || {};\n\t\tthis._params_referrees_by_graph_node_id[param.graph_node_id] = param;\n\t}\n\tremove_param_referree(param: BaseParamType) {\n\t\tif (this._params_referrees_by_graph_node_id) {\n\t\t\tdelete this._params_referrees_by_graph_node_id[param.graph_node_id];\n\t\t}\n\t}\n\tparams_referree(): BaseParamType[] {\n\t\tconst list = [];\n\t\tif (this._params_referrees_by_graph_node_id) {\n\t\t\tfor (let graph_node_id of Object.keys(this._params_referrees_by_graph_node_id)) {\n\t\t\t\tlist.push(this._params_referrees_by_graph_node_id[graph_node_id]);\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tparam_nodes_referree(): BaseNodeType[] {\n\t\tconst node_by_graph_node_id: Dictionary<BaseNodeType> = {};\n\t\tlet node;\n\t\tfor (let param of this.params_referree()) {\n\t\t\tnode = param.node;\n\t\t\tnode_by_graph_node_id[node.graph_node_id] = node;\n\t\t}\n\t\tconst list = [];\n\t\tfor (let graph_node_id of Object.keys(node_by_graph_node_id)) {\n\t\t\tlist.push(node_by_graph_node_id[graph_node_id]);\n\t\t}\n\t\treturn list;\n\t}\n}\n","import {BaseParamType} from '../_Base';\nimport {ParamEvent} from '../../poly/ParamEvent';\n\nexport class EmitController {\n\t_blocked_emit: boolean = false;\n\t_blocked_parent_emit: boolean = false;\n\t_count_by_event_name: Dictionary<number> = {};\n\tconstructor(protected param: BaseParamType) {}\n\n\tget emit_allowed(): boolean {\n\t\tif (this._blocked_emit === true) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.param.scene.loading_controller.is_loading) {\n\t\t\treturn false;\n\t\t}\n\t\t// TODO: should I also prevent nodes from updating\n\t\t// when they are being called in a loop such as from the Copy SOP?\n\t\t//node = this.node()\n\t\t//node? && !node.is_cooking() && this.scene().emit_allowed() # this prevents a camera from updating its param for instance\n\t\t// although maybe I should send a dirty to the store, and then that store queries the param?\n\t\treturn this.param.scene.dispatch_controller.emit_allowed;\n\t}\n\n\tblock_emit() {\n\t\tthis._blocked_emit = true;\n\t\tif (this.param.is_multiple && this.param.components) {\n\t\t\tthis.param.components.forEach((c) => c.emit_controller.block_emit());\n\t\t}\n\t\treturn true;\n\t}\n\tunblock_emit() {\n\t\tthis._blocked_emit = false;\n\t\tif (this.param.is_multiple && this.param.components) {\n\t\t\tthis.param.components.forEach((c) => c.emit_controller.unblock_emit());\n\t\t}\n\t\treturn true;\n\t}\n\tblock_parent_emit() {\n\t\tthis._blocked_parent_emit = true;\n\t\treturn true;\n\t}\n\tunblock_parent_emit() {\n\t\tthis._blocked_parent_emit = false;\n\t\treturn true;\n\t}\n\n\tincrement_count(event_name: ParamEvent) {\n\t\tthis._count_by_event_name[event_name] = this._count_by_event_name[event_name] || 0;\n\t\tthis._count_by_event_name[event_name] += 1;\n\t}\n\tevents_count(event_name: ParamEvent): number {\n\t\treturn this._count_by_event_name[event_name] || 0;\n\t}\n\n\temit(event: ParamEvent) {\n\t\tif (this.emit_allowed) {\n\t\t\tthis.param.emit(event);\n\n\t\t\tif (this.param.parent_param != null && this._blocked_parent_emit !== true) {\n\t\t\t\tthis.param.parent_param.emit(event);\n\t\t\t}\n\t\t}\n\t}\n\t// emit_param_updated() {\n\t// \tconsole.log('emit_param_updated', this.param.name, this.emit_allowed);\n\t// \tif (this.emit_allowed) {\n\t// \t\tthis.param.emit(ParamEvent.UPDATED);\n\n\t// \t\tif (this.param.parent_param != null && this._blocked_parent_emit !== true) {\n\t// \t\t\tthis.param.parent_param.emit(ParamEvent.UPDATED);\n\t// \t\t}\n\t// \t}\n\t// \t//else\n\t// \t//\tthis.emit('param_updated')\n\n\t// \t// return null\n\t// }\n}\n","import {BaseParamType} from '../_Base';\nimport {ParamValueSerializedTypeMap} from '../types/ParamValueSerializedTypeMap';\nimport {ParamType} from '../../poly/ParamType';\nimport {ParamInitValueSerializedTypeMap} from '../types/ParamInitValueSerializedTypeMap';\n\nexport interface ParamSerializerData {\n\tname: string;\n\ttype: string;\n\traw_input: ParamInitValueSerializedTypeMap[ParamType];\n\tvalue: ParamValueSerializedTypeMap[ParamType];\n\texpression?: string;\n\tgraph_node_id: string;\n\t// is_dirty: boolean;\n\terror_message?: string;\n\tis_visible: boolean;\n\tfolder_name?: string;\n\tcomponents?: string[];\n}\n\nexport class ParamSerializer {\n\tconstructor(protected param: BaseParamType) {}\n\n\tto_json(): ParamSerializerData {\n\t\tconst data: ParamSerializerData = {\n\t\t\tname: this.param.name,\n\t\t\ttype: this.param.type,\n\t\t\traw_input: this.raw_input(),\n\t\t\tvalue: this.value(),\n\t\t\texpression: this.expression(),\n\t\t\tgraph_node_id: this.param.graph_node_id,\n\t\t\t// is_dirty: this.param.is_dirty,\n\t\t\terror_message: this.error_message(),\n\t\t\tis_visible: this.is_visible(),\n\t\t\t// folder_name: this.param.ui_data.folder_name,\n\t\t\tcomponents: undefined,\n\t\t};\n\n\t\tif (this.param.is_multiple && this.param.components) {\n\t\t\tdata['components'] = this.param.components.map((component) => component.graph_node_id);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\traw_input() {\n\t\treturn this.param.raw_input_serialized;\n\t}\n\tvalue() {\n\t\treturn this.param.value_serialized;\n\t}\n\texpression() {\n\t\treturn this.param.has_expression() ? this.param.expression_controller?.expression : undefined;\n\t}\n\terror_message() {\n\t\treturn this.param.states.error.message;\n\t}\n\tis_visible() {\n\t\treturn this.param.options.is_visible;\n\t}\n}\n","import {BaseParamType} from '../_Base';\n\nimport {TimeDependentState} from './states/TimeDependent';\nimport {ErrorState} from './states/Error';\n\nexport class StatesController {\n\ttime_dependent = new TimeDependentState(this.param);\n\terror = new ErrorState(this.param);\n\tconstructor(protected param: BaseParamType) {}\n}\n","import {BaseParamType} from '../../_Base';\n\nexport class TimeDependentState {\n\tconstructor(protected param: BaseParamType) {}\n\n\tget active(): boolean {\n\t\tconst frame_graph_node_id = this.param.scene.time_controller.graph_node.graph_node_id;\n\n\t\treturn this.param.graph_predecessor_ids().includes(frame_graph_node_id);\n\t}\n}\n","import {BaseParamType} from '../../_Base';\nimport {ParamEvent} from '../../../poly/ParamEvent';\n// import lodash_includes from 'lodash/includes';\n// import lodash_values from 'lodash/values';\n\nexport class ErrorState {\n\tprivate _message: string | undefined;\n\tconstructor(private param: BaseParamType) {}\n\n\tset(message: string | undefined) {\n\t\tif (this._message != message) {\n\t\t\tthis._message = message;\n\t\t\tif (this._message) {\n\t\t\t\tconsole.log(this.param.full_path(), this._message);\n\t\t\t}\n\t\t\tthis.param.emit_controller.emit(ParamEvent.ERROR_UPDATED);\n\t\t}\n\t}\n\tget message() {\n\t\treturn this._message;\n\t}\n\tclear() {\n\t\tthis.set(undefined);\n\t}\n\tget active(): boolean {\n\t\treturn this._message != null;\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\nimport {BaseParamType} from '../../../params/_Base';\nimport {ParamOptions} from '../../../params/utils/OptionsController';\nimport {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\n\nimport {FloatParam} from '../../../params/Float';\nimport {OperatorPathParam} from '../../../params/OperatorPath';\n\nimport {ParamType} from '../../../poly/ParamType';\n// import {ParamEvent} from '../../../poly/ParamEvent';\nimport {NodeParamsConfig} from './ParamsConfig';\n\nimport {ParamConstructorMap} from '../../../params/types/ParamConstructorMap';\nimport {ParamConstructorByType} from '../../../params/types/ParamConstructorByType';\nimport {ParamInitValuesTypeMap} from '../../../params/types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from '../../../params/types/ParamValuesTypeMap';\nimport {NodeEvent} from '../../../poly/NodeEvent';\nimport {ParamInitValueSerializedTypeMap} from '../../../params/types/ParamInitValueSerializedTypeMap';\n\nconst NODE_SIMPLE_NAME = 'params';\n\nexport type OnSceneLoadHook = () => void;\ntype PostCreateParamsHook = () => void;\n\nexport interface ParamOptionToAdd<T extends ParamType> {\n\tname: string;\n\ttype: T;\n\tinit_value: ParamInitValueSerializedTypeMap[T];\n\toptions?: ParamOptions;\n}\nexport interface ParamsUpdateOptions {\n\tnames_to_delete?: string[];\n\tto_add?: ParamOptionToAdd<ParamType>[];\n}\n\nexport class ParamsController {\n\tprivate _param_create_mode: boolean = false;\n\tprivate _params_by_name: Dictionary<BaseParamType> = {};\n\t// caches\n\tprivate _params_list: BaseParamType[] = [];\n\tprivate _param_names: string[] = [];\n\tprivate _non_spare_params: BaseParamType[] = [];\n\tprivate _spare_params: BaseParamType[] = [];\n\tprivate _non_spare_param_names: string[] = [];\n\tprivate _spare_param_names: string[] = [];\n\n\tprivate _params_node: CoreGraphNode | undefined;\n\t// private _params_eval_key: string;\n\tprivate _params_added_since_last_params_eval: boolean = false;\n\t// private _current_param_folder_name: string | undefined;\n\n\t// hooks\n\tprivate _post_create_params_hook: PostCreateParamsHook | undefined;\n\tprivate _on_scene_load_hooks: OnSceneLoadHook[] | undefined;\n\tprivate _on_scene_load_hook_names: string[] | undefined;\n\n\tconstructor(protected node: BaseNodeType) {}\n\n\tprivate init_dependency_node() {\n\t\tif (!this._params_node) {\n\t\t\t// TODO: consider not having a params_node for nodes which have no parameters\n\t\t\tthis._params_node = new CoreGraphNode(this.node.scene, NODE_SIMPLE_NAME);\n\t\t\t// this._params_node.set_scene(this.node.scene);\n\t\t\tthis.node.add_graph_input(this._params_node);\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.init_dependency_node();\n\t\t// this.reset_params()\n\t\tthis._param_create_mode = true;\n\n\t\tthis.init_from_params_config();\n\t\tthis.node.create_params();\n\t\tthis._post_create_params();\n\t}\n\tprivate _post_create_params() {\n\t\tthis._update_caches();\n\t\t// this._create_params_ui_data_dependencies();\n\t\tthis.init_param_accessors();\n\t\tthis._param_create_mode = false;\n\n\t\tthis.run_post_create_params_hook();\n\n\t\t// This was to debug a weird bug where I was adding nodes to the list\n\t\t// of params, from the DependenciesController\n\t\t// this._params_list.push = (...items: BaseParamType[]) => {\n\t\t// \tif (items[0] && !items[0].compute) {\n\t\t// \t\tconsole.warn('adding params', items);\n\t\t// \t}\n\t\t// \tfor (let i of items) {\n\t\t// \t\tthis._params_list[this._params_list.length] = i;\n\t\t// \t}\n\t\t// \treturn 0;\n\t\t// };\n\t}\n\tupdate_params(options: ParamsUpdateOptions) {\n\t\tlet has_created_a_param = false;\n\t\tlet has_deleted_a_param = false;\n\t\tif (options.names_to_delete) {\n\t\t\tfor (let name of options.names_to_delete) {\n\t\t\t\tif (this.has(name)) {\n\t\t\t\t\tthis.delete_param(name);\n\t\t\t\t\thas_deleted_a_param = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (options.to_add) {\n\t\t\tfor (let param_data of options.to_add) {\n\t\t\t\tconst param = this.add_param(\n\t\t\t\t\tparam_data.type,\n\t\t\t\t\tparam_data.name,\n\t\t\t\t\tparam_data.init_value,\n\t\t\t\t\tparam_data.options\n\t\t\t\t);\n\t\t\t\tif (param) {\n\t\t\t\t\thas_created_a_param = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (has_deleted_a_param || has_created_a_param) {\n\t\t\tthis._update_caches();\n\t\t\tthis.init_param_accessors();\n\t\t\t// param.emit(ParamEvent.DELETED);\n\t\t\tthis.node.emit(NodeEvent.PARAMS_UPDATED);\n\t\t}\n\t}\n\tpost_create_spare_params() {\n\t\tthis._update_caches();\n\t\tthis.init_param_accessors();\n\t}\n\n\tprivate init_from_params_config() {\n\t\tconst params_config = this.node.params_config as NodeParamsConfig;\n\t\tif (params_config) {\n\t\t\tfor (let name of Object.keys(params_config)) {\n\t\t\t\tconst config = params_config[name];\n\t\t\t\tthis.add_param(config.type, name, config.init_value, config.options);\n\t\t\t}\n\t\t}\n\t}\n\tprivate init_param_accessors() {\n\t\tlet current_names_in_accessor = Object.getOwnPropertyNames(this.node.pv);\n\t\tthis._remove_unneeded_accessors(current_names_in_accessor);\n\t\t// update var after having removed accessors\n\t\tcurrent_names_in_accessor = Object.getOwnPropertyNames(this.node.pv);\n\n\t\tfor (let param of this.all) {\n\t\t\tconst is_spare: boolean = param.options.is_spare;\n\n\t\t\tconst param_not_yet_in_accessors = !current_names_in_accessor.includes(param.name);\n\n\t\t\tif (param_not_yet_in_accessors || is_spare) {\n\t\t\t\tObject.defineProperty(this.node.pv, param.name, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\treturn param.value;\n\t\t\t\t\t},\n\t\t\t\t\t// only spare parameters can be removed\n\t\t\t\t\tconfigurable: is_spare,\n\t\t\t\t});\n\t\t\t\tObject.defineProperty(this.node.p, param.name, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\treturn param;\n\t\t\t\t\t},\n\t\t\t\t\tconfigurable: is_spare,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\tprivate _remove_unneeded_accessors(current_names_in_accessor: string[]) {\n\t\tconst current_param_names = this._param_names;\n\t\tconst names_to_remove = [];\n\t\tfor (let current_name_in_accessor of current_names_in_accessor) {\n\t\t\tif (!current_param_names.includes(current_name_in_accessor)) {\n\t\t\t\tnames_to_remove.push(current_name_in_accessor);\n\t\t\t}\n\t\t}\n\n\t\tfor (let name_to_remove of names_to_remove) {\n\t\t\tObject.defineProperty(this.node.pv, name_to_remove, {\n\t\t\t\tget: () => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tconfigurable: true,\n\t\t\t});\n\t\t\tObject.defineProperty(this.node.p, name_to_remove, {\n\t\t\t\tget: () => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tconfigurable: true,\n\t\t\t});\n\t\t}\n\t}\n\n\tget params_node() {\n\t\treturn this._params_node;\n\t}\n\tget all() {\n\t\treturn this._params_list;\n\t}\n\tget non_spare() {\n\t\treturn this._non_spare_params;\n\t}\n\tget spare() {\n\t\treturn this._spare_params;\n\t}\n\tget names(): string[] {\n\t\treturn this._param_names;\n\t}\n\tget non_spare_names(): string[] {\n\t\treturn this._non_spare_param_names;\n\t}\n\tget spare_names(): string[] {\n\t\treturn this._spare_param_names;\n\t}\n\t// get params_by_name() {\n\t// \treturn this._params_by_name;\n\t// }\n\t// get all_params() {\n\t// \t// return lodash_concat(lodash_values(this._params), lodash_values(this._spare_params));\n\t// \treturn lodash_values(this._params);\n\t// }\n\n\tprivate set_with_type<T extends ParamType>(name: string, value: ParamInitValuesTypeMap[T], type: T) {\n\t\tconst param = this.param_with_type(name, type);\n\t\tif (param) {\n\t\t\tparam.set(value as never);\n\t\t} else {\n\t\t\tconsole.warn(`param ${name} not found with type ${type}`);\n\t\t}\n\t}\n\tset_float(name: string, value: ParamInitValuesTypeMap[ParamType.FLOAT]) {\n\t\tthis.set_with_type(name, value, ParamType.FLOAT);\n\t}\n\tset_vector3(name: string, value: ParamInitValuesTypeMap[ParamType.VECTOR3]) {\n\t\tthis.set_with_type(name, value, ParamType.VECTOR3);\n\t}\n\n\thas_param(name: string) {\n\t\treturn this._params_by_name[name] != null;\n\t}\n\thas(name: string) {\n\t\treturn this.has_param(name);\n\t}\n\tget(name: string) {\n\t\treturn this.param(name);\n\t}\n\tparam_with_type<T extends ParamType>(name: string, type: T): ParamConstructorMap[T] | undefined {\n\t\tconst param = this.param(name);\n\t\tif (param && param.type == type) {\n\t\t\treturn param as ParamConstructorMap[T];\n\t\t}\n\t}\n\tget_float(name: string): FloatParam {\n\t\treturn this.param_with_type(name, ParamType.FLOAT) as FloatParam;\n\t}\n\tget_operator_path(name: string): OperatorPathParam {\n\t\treturn this.param_with_type(name, ParamType.OPERATOR_PATH) as OperatorPathParam;\n\t}\n\tvalue(name: string) {\n\t\treturn this.param(name)?.value;\n\t}\n\tvalue_with_type<T extends ParamType>(name: string, type: T): ParamValuesTypeMap[T] {\n\t\treturn this.param_with_type(name, type)?.value as ParamValuesTypeMap[T];\n\t\t// const param = this.param(name);\n\t\t// if (param && param.type() == type) {\n\t\t// \treturn param.value();\n\t\t// }\n\t}\n\tboolean(name: string) {\n\t\treturn this.value_with_type(name, ParamType.BOOLEAN);\n\t}\n\tfloat(name: string) {\n\t\treturn this.value_with_type(name, ParamType.FLOAT);\n\t}\n\tinteger(name: string) {\n\t\treturn this.value_with_type(name, ParamType.INTEGER);\n\t}\n\tstring(name: string) {\n\t\treturn this.value_with_type(name, ParamType.STRING);\n\t}\n\tvector2(name: string) {\n\t\treturn this.value_with_type(name, ParamType.VECTOR2);\n\t}\n\tvector3(name: string) {\n\t\treturn this.value_with_type(name, ParamType.VECTOR3);\n\t}\n\tcolor(name: string) {\n\t\treturn this.value_with_type(name, ParamType.COLOR);\n\t}\n\n\tparam(name: string) {\n\t\tconst p = this._params_by_name[name];\n\t\tif (p != null) {\n\t\t\treturn p;\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t`tried to access param '${name}' in node ${this.node.full_path()}, but existing params are: ${\n\t\t\t\t\tthis.names\n\t\t\t\t} on node ${this.node.full_path()}`\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t}\n\t// param_cache_name(param_name: string) {\n\t// \treturn `_param_${param_name}`;\n\t// }\n\n\t// delete_params(param_names: string[]) {\n\t// \tfor (let param_name of param_names) {\n\t// \t\tthis.delete_param(param_name);\n\t// \t}\n\n\t// }\n\t// call update_params instead\n\tprivate delete_param(param_name: string) {\n\t\tconst param = this._params_by_name[param_name];\n\t\tif (param) {\n\t\t\tif (this._params_node) {\n\t\t\t\tthis._params_node.remove_graph_input(this._params_by_name[param_name]);\n\t\t\t}\n\t\t\tparam.set_node(null);\n\t\t\tdelete this._params_by_name[param_name];\n\t\t\tif (param.is_multiple && param.components) {\n\t\t\t\tfor (let component of param.components) {\n\t\t\t\t\tconst child_name = component.name;\n\t\t\t\t\tdelete this._params_by_name[child_name];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// const name_index = this._param_names.indexOf(param_name)\n\t\t\t// if(name_index >= 0){\n\t\t\t// \tthis._param_names.splice(name_index, 1)\n\t\t\t// }\n\t\t\t// param.emit(ParamEvent.DELETED);\n\t\t} else {\n\t\t\tthrow new Error(`param '${param_name}' does not exist on node ${this.node.full_path()}`);\n\t\t}\n\t}\n\n\tadd_param<T extends ParamType>(\n\t\ttype: T,\n\t\tname: string,\n\t\tinit_value: ParamInitValuesTypeMap[T],\n\t\toptions: ParamOptions = {}\n\t): ParamConstructorMap[T] | undefined {\n\t\tconst is_spare = options['spare'] || false;\n\t\tif (this._param_create_mode === false && !is_spare) {\n\t\t\tconsole.warn(\n\t\t\t\t`node ${this.node.full_path()} (${\n\t\t\t\t\tthis.node.type\n\t\t\t\t}) param '${name}' cannot be created outside of create_params`\n\t\t\t);\n\t\t}\n\t\tif (this.node.scene == null) {\n\t\t\tconsole.warn(`node ${this.node.full_path()} (${this.node.type}) has no scene assigned`);\n\t\t}\n\n\t\tconst constructor = ParamConstructorByType[type];\n\t\tif (constructor != null) {\n\t\t\tconst existing_param = this._params_by_name[name];\n\t\t\tif (existing_param) {\n\t\t\t\tif (is_spare) {\n\t\t\t\t\t// delete the old one, otherwise the gl nodes when saved will attempt to set the value\n\t\t\t\t\t// of a param with the potentially wrong type\n\t\t\t\t\tif (existing_param.type != type) {\n\t\t\t\t\t\tthis.delete_param(existing_param.name);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// check that the param is spare, so that the ones generated by gl nodes are not generating an exception\n\t\t\t\t\tconsole.warn(`a param named ${name} already exists`, this.node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst param: ParamConstructorMap[T] = new constructor(this.node.scene);\n\t\t\tparam.options.set(options);\n\n\t\t\tparam.set_name(name);\n\t\t\tparam.set_init_value(init_value as never);\n\t\t\tparam.init_components();\n\t\t\tparam.set(init_value as never);\n\t\t\tparam.set_node(this.node);\n\n\t\t\tthis._params_by_name[param.name] = param as BaseParamType;\n\n\t\t\t// we add the components, so that we can access them with expressions like ch('ty')\n\t\t\tif (param.is_multiple && param.components) {\n\t\t\t\tfor (let component of param.components) {\n\t\t\t\t\tthis._params_by_name[component.name] = component as BaseParamType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._params_added_since_last_params_eval = true;\n\n\t\t\treturn param;\n\t\t}\n\t}\n\n\tprivate _update_caches() {\n\t\tthis._params_list = Object.values(this._params_by_name);\n\t\tthis._param_names = Object.keys(this._params_by_name);\n\t\tthis._non_spare_params = Object.values(this._params_by_name).filter((p) => !p.options.is_spare);\n\t\tthis._spare_params = Object.values(this._params_by_name).filter((p) => p.options.is_spare);\n\t\tthis._non_spare_param_names = Object.values(this._params_by_name)\n\t\t\t.filter((p) => !p.options.is_spare)\n\t\t\t.map((p) => p.name);\n\t\tthis._spare_param_names = Object.values(this._params_by_name)\n\t\t\t.filter((p) => p.options.is_spare)\n\t\t\t.map((p) => p.name);\n\t}\n\n\tasync _eval_param(param: BaseParamType) {\n\t\t// return new Promise((resolve, reject)=> {\n\t\t// const param_cache_name = this.param_cache_name(param.name());\n\t\t// const cached_value = this[param_cache_name] || null;\n\t\tif (/*cached_value == null ||*/ param.is_dirty /* || param.is_errored()*/) {\n\t\t\t/*const param_value =*/ await param.compute(); //.then(param_value=>{\n\t\t\t// this[param_cache_name] = param_value;\n\t\t\tif (param.states.error.active) {\n\t\t\t\tthis.node.states.error.set(`param '${param.name}' error: ${param.states.error.message}`);\n\t\t\t}\n\t\t\t// return param_value;\n\t\t} else {\n\t\t\t// return param.value;\n\t\t}\n\t\t// });\n\t}\n\n\tasync eval_params(params: BaseParamType[]) {\n\t\tconst promises = [];\n\t\tfor (let i = 0; i < params.length; i++) {\n\t\t\tif (params[i].is_dirty) {\n\t\t\t\tpromises.push(this._eval_param(params[i]));\n\t\t\t}\n\t\t}\n\t\tawait Promise.all(promises);\n\n\t\tif (this.node.states.error.active) {\n\t\t\tthis.node.set_container(null);\n\t\t}\n\t}\n\n\tasync eval_all() {\n\t\tif (this._params_node) {\n\t\t\tif (this._params_node.is_dirty || this._params_added_since_last_params_eval) {\n\t\t\t\tawait this.eval_params(this._params_list);\n\n\t\t\t\tthis._params_node.remove_dirty_state();\n\t\t\t\tthis._params_added_since_last_params_eval = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t//\n\t// HOOKS\n\t//\n\t//\n\tset_post_create_params_hook(hook: PostCreateParamsHook) {\n\t\tthis._post_create_params_hook = hook;\n\t}\n\tadd_on_scene_load_hook(name: string, method: OnSceneLoadHook) {\n\t\tthis._on_scene_load_hook_names = this._on_scene_load_hook_names || [];\n\t\tthis._on_scene_load_hooks = this._on_scene_load_hooks || [];\n\n\t\tif (!this._on_scene_load_hook_names.includes(name)) {\n\t\t\tthis._on_scene_load_hook_names.push(name);\n\t\t\tthis._on_scene_load_hooks.push(method);\n\t\t} else {\n\t\t\tconsole.warn(`hook with name ${name} already exists`, this.node);\n\t\t}\n\t}\n\trun_post_create_params_hook() {\n\t\tif (this._post_create_params_hook) {\n\t\t\tthis._post_create_params_hook();\n\t\t}\n\t}\n\trun_on_scene_load_hooks() {\n\t\tif (this._on_scene_load_hooks) {\n\t\t\tfor (let hook of this._on_scene_load_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import lodash_isNumber from 'lodash/isNumber';\nimport lodash_isBoolean from 'lodash/isBoolean';\n// import lodash_includes from 'lodash/includes'\nimport lodash_isString from 'lodash/isString';\nimport {TypedNumericParam} from './_Numeric';\nimport {ParamType} from '../poly/ParamType';\nimport {CoreString} from '../../core/String';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport class BooleanParam extends TypedNumericParam<ParamType.BOOLEAN> {\n\tstatic type() {\n\t\treturn ParamType.BOOLEAN;\n\t}\n\t// TODO: be careful as this does not allow serialization of expressions as default value\n\tget default_value_serialized() {\n\t\tif (lodash_isString(this.default_value)) {\n\t\t\treturn this.default_value;\n\t\t} else {\n\t\t\treturn this.convert(this.default_value) || false;\n\t\t}\n\t}\n\tget raw_input_serialized() {\n\t\treturn this._raw_input;\n\t}\n\tget value_serialized() {\n\t\treturn this.value;\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.BOOLEAN],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.BOOLEAN]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.BOOLEAN], val2: ParamValuesTypeMap[ParamType.BOOLEAN]) {\n\t\treturn val1 == val2;\n\t}\n\tconvert(raw_val: ParamInitValuesTypeMap[ParamType.BOOLEAN]): boolean | null {\n\t\tif (lodash_isBoolean(raw_val)) {\n\t\t\treturn raw_val;\n\t\t} else {\n\t\t\tif (lodash_isNumber(raw_val)) {\n\t\t\t\treturn raw_val >= 1;\n\t\t\t} else {\n\t\t\t\tif (lodash_isString(raw_val)) {\n\t\t\t\t\tif (CoreString.is_boolean(raw_val)) {\n\t\t\t\t\t\treturn CoreString.to_boolean(raw_val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (CoreString.is_number(raw_val)) {\n\t\t\t\t\t\t\tconst parsed = parseFloat(raw_val);\n\t\t\t\t\t\t\treturn parsed >= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t// convert_value(v: ParamInputValue): boolean {\n\t// \treturn this.value_to_boolean(v)\n\t// }\n\t// convert_default_value(v: ParamInputValue): number {\n\t// \tif (lodash_isString(v)) {\n\t// \t\treturn v\n\t// \t} else {\n\t// \t\treturn this.value_to_boolean(v) // ? 1 : 0\n\t// \t}\n\t// }\n\t// is_value_expression(v: ParamInputValue): boolean {\n\t// \treturn !lodash_includes([true, false, 0, 1, '0', '1'], v)\n\t// }\n\n\t// value_to_boolean(v: ParamInputValue): boolean {\n\t// \tif (lodash_isBoolean(v)) {\n\t// \t\treturn v\n\t// \t} else {\n\t// \t\tif (lodash_isNumber(v)) {\n\t// \t\t\treturn v > 0\n\t// \t\t} else {\n\t// \t\t\treturn parseInt(v) > 0\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t// eval(callback) {\n\t// \treturn this.eval_raw((val) => {\n\t// \t\tconst boolean_result = this.value_to_boolean(val)\n\t// \t\treturn callback(boolean_result)\n\t// \t})\n\t// }\n}\n","import {BaseParamType} from '../params/_Base';\nimport {ParsedTree} from './traversers/ParsedTree';\n// import {MissingReferencesController} from './MissingReferencesController'\n// import CoreWalker from 'src/core/Walker'\n\nimport {FunctionGenerator} from './traversers/FunctionGenerator';\nimport {ExpressionStringGenerator} from './traversers/ExpressionStringGenerator';\nimport {DependenciesController} from './DependenciesController';\nimport {ParamType} from '../poly/ParamType';\n\nexport class ExpressionManager {\n\tpublic parse_completed: boolean = false;\n\tprivate parse_started: boolean = false;\n\tprivate function_generator: FunctionGenerator;\n\tprivate expression_string_generator: ExpressionStringGenerator | undefined;\n\tpublic dependencies_controller: DependenciesController;\n\t// private _error_message: string | undefined;\n\tprivate parsed_tree: ParsedTree = new ParsedTree();\n\n\tconstructor(\n\t\tpublic param: BaseParamType // public element_index: number=0\n\t) {\n\t\tthis.function_generator = new FunctionGenerator(this.param);\n\t\tthis.dependencies_controller = new DependenciesController(this.param);\n\t}\n\n\tparse_expression(expression: string) {\n\t\tif (this.parse_started) {\n\t\t\tthrow new Error(`parse in progress for param ${this.param.full_path()}`);\n\t\t}\n\t\tthis.parse_started = true;\n\t\tthis.parse_completed = false;\n\t\tthis.parsed_tree = this.parsed_tree || new ParsedTree();\n\n\t\tthis.reset();\n\t\tif (this.param.type == ParamType.STRING) {\n\t\t\tthis.parsed_tree.parse_expression_for_string_param(expression);\n\t\t} else {\n\t\t\tthis.parsed_tree.parse_expression(expression);\n\t\t}\n\t\tthis.function_generator.parse_tree(this.parsed_tree);\n\n\t\tif (this.function_generator.error_message == null) {\n\t\t\tthis.dependencies_controller.update(this.function_generator);\n\t\t\tif (this.dependencies_controller.error_message) {\n\t\t\t\tthis.param.states.error.set(this.dependencies_controller.error_message);\n\t\t\t} else {\n\t\t\t\tthis.parse_completed = true;\n\t\t\t\tthis.parse_started = false;\n\t\t\t}\n\t\t} //else {\n\t\t//this.set_error(this.function_generator.error_message);\n\t\t//}\n\t}\n\tasync compute_function(): Promise<any> {\n\t\t// this.parse_and_update_dependencies_if_not_done(expression);\n\t\tif (this.compute_allowed()) {\n\t\t\ttry {\n\t\t\t\tconst new_value = await this.function_generator.eval_function();\n\t\t\t\treturn new_value;\n\t\t\t} catch (e) {\n\t\t\t\t// if (this.function_generator.is_errored && this.function_generator.error_message) {\n\t\t\t\t// \tthis.set_error(this.function_generator.error_message);\n\t\t\t\t// }\n\t\t\t\treturn new Promise((resolve, reject) => resolve());\n\t\t\t}\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tresolve(null);\n\t\t\t});\n\t\t}\n\t}\n\n\treset() {\n\t\tthis.parse_completed = false;\n\t\tthis.parse_started = false;\n\t\t// this._error_message = undefined;\n\t\t// if(force){ // || this.element_index <= 1){\n\t\tthis.dependencies_controller.reset();\n\t\t// }\n\t\tthis.function_generator.reset();\n\t}\n\n\tget is_errored(): boolean {\n\t\treturn this.function_generator.is_errored;\n\t}\n\tget error_message() {\n\t\treturn this.function_generator.error_message;\n\t}\n\n\tprivate compute_allowed(): boolean {\n\t\treturn /*this._error_message == null &&*/ this.function_generator.eval_allowed();\n\t}\n\n\t// private parse_and_update_dependencies(expression: string) {\n\t// \tif (this.param.has_expression()) {\n\t// \t\tthis.parse_expression(expression);\n\n\t// \t\tif (this.error_message != null) {\n\t// \t\t\tthis.param.states.error.set(`expression error: \"${expression}\" (${this.error_message})`);\n\t// \t\t}\n\t// \t\t// this.parse_completed = true\n\t// \t}\n\t// }\n\t// private parse_and_update_dependencies_if_not_done(expression: string) {\n\t// \tif (!this.parse_completed) {\n\t// \t\tthis.parse_and_update_dependencies(expression);\n\t// \t}\n\t// }\n\n\tupdate_from_method_dependency_name_change() {\n\t\tthis.expression_string_generator =\n\t\t\tthis.expression_string_generator || new ExpressionStringGenerator(this.param);\n\n\t\tconst new_expression_string = this.expression_string_generator.parse_tree(this.parsed_tree);\n\n\t\tif (new_expression_string) {\n\t\t\tthis.param.set(new_expression_string);\n\t\t} else {\n\t\t\tconsole.warn('failed to regenerate expression');\n\t\t}\n\t\t// this.param.expression_controller?.set_expression(new_expression_string);\n\n\t\t// this.reset()\n\t\t// if (new_expression_string) {\n\t\t// this.parse_expression(new_expression_string);\n\t\t// }\n\t}\n}\n","import {BaseParamType} from '../../params/_Base';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {ParsedTree} from './ParsedTree';\nimport {LiteralConstructsController, LiteralConstructMethod} from '../LiteralConstructsController';\nimport {BaseMethod} from '../methods/_Base';\nimport {MethodModule} from '../methods/_Module';\nimport {CoreAttribute} from '../../../core/geometry/Attribute';\nimport lodash_isString from 'lodash/isString';\n\n// import {JsepsByString} from '../DependenciesController'\nimport jsep from 'jsep';\n\n// import {Vector3} from 'three/src/math/Vector3'\ntype LiteralConstructDictionary = Dictionary<LiteralConstructMethod>;\ntype AnyDictionary = Dictionary<any>;\n\nconst NATIVE_MATH_METHODS = [\n\t'abs',\n\t'acos',\n\t'acosh',\n\t'asin',\n\t'asinh',\n\t'atan',\n\t'atan2',\n\t'atanh',\n\t'ceil',\n\t'cos',\n\t'cosh',\n\t'exp',\n\t'expm1',\n\t'floor',\n\t'log',\n\t'log1p',\n\t'log2',\n\t'log10',\n\t'max',\n\t'min',\n\t'pow',\n\t'round',\n\t'sign',\n\t'sin',\n\t'sinh',\n\t'sqrt',\n\t'tan',\n\t'tanh',\n];\nconst NATIVE_ES6_MATH_METHODS = ['cbrt', 'hypot', 'log10', 'trunc'];\nconst NATIVE_MATH_METHODS_RENAMED: AnyDictionary = {\n\tmath_random: 'random',\n};\nconst CORE_MATH_METHODS = ['fit', 'fit01', 'fract', 'deg2rad', 'rad2deg', 'rand', 'clamp'];\nimport {Easing} from '../../../core/math/Easing';\nconst EASING_METHODS = Object.keys(Easing);\n\nconst CORE_STRING_METHODS = ['precision'];\nconst NATIVE_MATH_CONSTANTS = ['E', 'LN2', 'LN10', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\n\nconst DIRECT_EXPRESSION_FUNCTIONS: AnyDictionary = {};\nNATIVE_MATH_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Math.${name}`;\n});\nNATIVE_ES6_MATH_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Math.${name}`;\n});\nObject.keys(NATIVE_MATH_METHODS_RENAMED).forEach((name) => {\n\tconst remaped = NATIVE_MATH_METHODS_RENAMED[name];\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Math.${remaped}`;\n});\nCORE_MATH_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Core.Math.${name}`;\n});\nEASING_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Core.Math.Easing.${name}`;\n});\nCORE_STRING_METHODS.forEach((name) => {\n\tDIRECT_EXPRESSION_FUNCTIONS[name] = `Core.String.${name}`;\n});\n\nconst LITERAL_CONSTRUCT: LiteralConstructDictionary = {\n\tif: LiteralConstructsController.if,\n};\n\nconst GLOBAL_CONSTANTS: Dictionary<string> = {};\nNATIVE_MATH_CONSTANTS.forEach((name) => {\n\tGLOBAL_CONSTANTS[name] = `Math.${name}`;\n});\n\nconst INDIRECT_EXPRESSION_METHODS: AnyDictionary = MethodModule;\n\n// const NODE_TYPE_METHODS = {\n// \tCallExpression: 'setup_graph_call_expression',\n// \tMemberExpression: 'setup_graph_member_expression',\n// \tBinaryExpression: 'setup_graph_binary_expression',\n// \tUnaryExpression: 'setup_graph_unary_expression',\n// \tLogicalExpression: 'setup_graph_logical_expression',\n// \tLiteral: 'setup_graph_literal',\n// \tIdentifier: 'setup_graph_identifier'\n// };\n//\n\n// const IDENTIFIER_METHODS = {\n// \t'$F': '_setup_graph_identifier_as_global_frame'\n// }\nconst QUOTE = \"'\";\nconst ARGUMENTS_SEPARATOR = ', ';\nconst ATTRIBUTE_PREFIX = '@';\nimport {VARIABLE_PREFIX} from './_Base';\n\nconst PROPERTY_OFFSETS: AnyDictionary = {\n\tx: 0,\n\ty: 1,\n\tz: 2,\n\tw: 3,\n\tr: 0,\n\tg: 1,\n\tb: 2,\n};\n\n// export interface MethodsByName {\n// \t[propName: string]: BaseMethod;\n// }\n\nimport {BaseTraverser} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport {AttributeRequirementsController} from '../AttributeRequirementsController';\nimport {CoreMath} from '../../../core/math/_Module';\nimport {CoreString} from '../../../core/String';\n\nimport {AsyncFunction} from '../../../core/AsyncFunction';\n\nexport class FunctionGenerator extends BaseTraverser {\n\tprivate function: Function | undefined;\n\t// private function_pre_entities_loop_lines: string[] = [];\n\tprivate _attribute_requirements_controller = new AttributeRequirementsController();\n\t// private function_pre_body:string\n\tprivate function_main_string: string | undefined;\n\tprivate methods: BaseMethod[] = [];\n\tprivate method_index: number = -1;\n\n\tpublic method_dependencies: MethodDependency[] = [];\n\tpublic immutable_dependencies: CoreGraphNode[] = [];\n\t// public jsep_dependencies: JsepDependency[] = []\n\t// public jsep_nodes_by_missing_paths: JsepsByString = {}\n\n\t// private string_generator: ExpressionStringGenerator = new ExpressionStringGenerator()\n\n\tconstructor(public param: BaseParamType) {\n\t\tsuper(param);\n\t}\n\n\tpublic parse_tree(parsed_tree: ParsedTree) {\n\t\tthis.reset();\n\n\t\tif (parsed_tree.error_message == null) {\n\t\t\ttry {\n\t\t\t\t// this.function_pre_entities_loop_lines = [];\n\t\t\t\tthis._attribute_requirements_controller.reset();\n\t\t\t\t// this.function_pre_body = ''\n\t\t\t\tif (parsed_tree.node) {\n\t\t\t\t\tconst function_main_string = this.traverse_node(parsed_tree.node);\n\t\t\t\t\tif (function_main_string && !this.is_errored) {\n\t\t\t\t\t\tthis.function_main_string = function_main_string;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('no parsed_tree.node');\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(`error in expression for param ${this.param.full_path()}`);\n\t\t\t\tconsole.warn(e);\n\t\t\t}\n\n\t\t\tif (this.function_main_string) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.function = new AsyncFunction(\n\t\t\t\t\t\t'Core',\n\t\t\t\t\t\t'param',\n\t\t\t\t\t\t'methods',\n\t\t\t\t\t\t'_set_error_from_error',\n\t\t\t\t\t\t`\n\t\t\t\t\ttry {\n\t\t\t\t\t\t${this.function_body()}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t_set_error_from_error(e)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}`\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn(e);\n\t\t\t\t\tthis.set_error('cannot generate function');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.set_error('cannot generate function body');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.set_error('cannot parse expression');\n\t\t}\n\t}\n\n\treset() {\n\t\tsuper.reset();\n\t\tthis.function_main_string = undefined;\n\t\tthis.methods = [];\n\t\tthis.method_index = -1;\n\t\tthis.function = undefined;\n\t\tthis.method_dependencies = [];\n\t\tthis.immutable_dependencies = [];\n\t}\n\n\tfunction_body() {\n\t\tif (this.param.options.is_expression_for_entities) {\n\t\t\treturn `\n\t\t\tconst entities = param.expression_controller.entities;\n\t\t\tif(entities){\n\t\t\t\treturn new Promise( async (resolve, reject)=>{\n\t\t\t\t\tlet entity;\n\t\t\t\t\tconst entity_callback = param.expression_controller.entity_callback;\n\t\t\t\t\t${this._attribute_requirements_controller.assign_attributes_lines()}\n\t\t\t\t\tif( ${this._attribute_requirements_controller.attribute_presence_check_line()} ){\n\t\t\t\t\t\t${this._attribute_requirements_controller.assign_arrays_lines()}\n\t\t\t\t\t\tfor(let index=0; index < entities.length; index++){\n\t\t\t\t\t\t\tentity = entities[index];\n\t\t\t\t\t\t\tresult = ${this.function_main_string};\n\t\t\t\t\t\t\tentity_callback(entity, result);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst error = new Error('attribute not found')\n\t\t\t\t\t\t_set_error_from_error(error)\n\t\t\t\t\t\treject(error)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn []`;\n\t\t} else {\n\t\t\treturn `\n\t\t\treturn new Promise( async (resolve, reject)=>{\n\t\t\t\ttry {\n\t\t\t\t\tconst value = ${this.function_main_string}\n\t\t\t\t\tresolve(value)\n\t\t\t\t} catch(e) {\n\t\t\t\t\t_set_error_from_error(e)\n\t\t\t\t\treject()\n\t\t\t\t}\n\t\t\t})\n\t\t\t`;\n\t\t}\n\t}\n\n\teval_allowed(): boolean {\n\t\treturn this.function != null;\n\t}\n\teval_function() {\n\t\t// this.param.entity_attrib_values = this.param.entity_attrib_values || {}\n\t\t// this.param.entity_attrib_values.position =\n\t\t// \tthis.param.entity_attrib_values.position || new THREE.Vector3()\n\t\tif (this.function) {\n\t\t\tthis.clear_error();\n\n\t\t\tconst Core = {\n\t\t\t\tMath: CoreMath,\n\t\t\t\tString: CoreString,\n\t\t\t};\n\t\t\tconst result = this.function(Core, this.param, this.methods, this._set_error_from_error_bound);\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t//\n\t//\n\t// TRAVERSE METHODS\n\t//\n\t//\n\tprotected traverse_CallExpression(node: jsep.CallExpression): string | undefined {\n\t\tconst method_arguments = node.arguments.map((arg) => {\n\t\t\treturn this.traverse_node(arg);\n\t\t});\n\t\tconst callee = node.callee as jsep.Identifier;\n\t\tconst method_name = callee.name;\n\t\tif (method_name) {\n\t\t\t// literal construct (if...)\n\t\t\tconst literal_contruct = LITERAL_CONSTRUCT[method_name];\n\t\t\tif (literal_contruct) {\n\t\t\t\treturn literal_contruct(method_arguments);\n\t\t\t}\n\n\t\t\t// direct expressions (Math.floor, Math.sin...)\n\t\t\tconst arguments_joined = `${method_arguments.join(ARGUMENTS_SEPARATOR)}`;\n\t\t\tconst direct_function_name = DIRECT_EXPRESSION_FUNCTIONS[method_name];\n\t\t\tif (direct_function_name) {\n\t\t\t\treturn `${direct_function_name}(${arguments_joined})`;\n\t\t\t}\n\n\t\t\t// indirect methods (points_count, asset...)\n\t\t\tconst indirect_method = INDIRECT_EXPRESSION_METHODS[method_name];\n\t\t\tif (indirect_method) {\n\t\t\t\tconst path_node = node.arguments[0];\n\t\t\t\t// const path_argument = this.string_generator.traverse_node(path_node)\n\t\t\t\tconst function_string = `return ${method_arguments[0]}`;\n\t\t\t\tlet path_argument_function;\n\t\t\t\tlet path_argument = [];\n\t\t\t\ttry {\n\t\t\t\t\tpath_argument_function = new Function(function_string);\n\t\t\t\t\tpath_argument = path_argument_function();\n\t\t\t\t} catch {\n\t\t\t\t\t// path_argument_function = new AsyncFunction(function_string)\n\t\t\t\t\t// it looks like if the input contains an await,\n\t\t\t\t\t// it is because it has been generated by another indirect function.\n\t\t\t\t\t// This means that the dependencies have been generated already\n\t\t\t\t\t// so we may not need to do it now\n\t\t\t\t}\n\n\t\t\t\tthis._create_method_and_dependencies(method_name, path_argument, path_node);\n\t\t\t\treturn `(await methods[${this.method_index}].process_arguments([${arguments_joined}]))`;\n\t\t\t}\n\t\t}\n\n\t\tthis.set_error(`unknown method: ${method_name}`);\n\t}\n\tprotected traverse_BinaryExpression(node: jsep.BinaryExpression): string {\n\t\t// if(node.right.type == 'Identifier'){\n\t\t// \tthis.set_error(`cannot have identifier after ${node.operator}`)\n\t\t// \treturn \"\"\n\t\t// }\n\t\treturn `(${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)})`;\n\t}\n\tprotected traverse_LogicalExpression(node: jsep.LogicalExpression): string {\n\t\t// || or &&\n\t\t// if(node.right.type == 'Identifier'){\n\t\t// \tthis.set_error(`cannot have identifier after ${node.operator}`)\n\t\t// \treturn \"\"\n\t\t// }\n\t\treturn `(${this.traverse_node(node.left)} ${node.operator} ${this.traverse_node(node.right)})`;\n\t}\n\tprotected traverse_MemberExpression(node: jsep.MemberExpression): string {\n\t\treturn `${this.traverse_node(node.object)}.${this.traverse_node(node.property)}`;\n\t}\n\tprotected traverse_UnaryExpression(node: jsep.UnaryExpression): string {\n\t\tif (node.operator === ATTRIBUTE_PREFIX) {\n\t\t\tlet argument = node.argument;\n\t\t\tlet attribute_name;\n\t\t\tlet property;\n\t\t\tswitch (argument.type) {\n\t\t\t\tcase 'Identifier': {\n\t\t\t\t\tconst argument_identifier = (<unknown>argument) as jsep.Identifier;\n\t\t\t\t\tattribute_name = argument_identifier.name;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'MemberExpression': {\n\t\t\t\t\tconst argument_member_expression = (<unknown>argument) as jsep.MemberExpression;\n\t\t\t\t\tconst attrib_node = argument_member_expression.object as jsep.Identifier;\n\t\t\t\t\tconst property_node = argument_member_expression.property as jsep.Identifier;\n\t\t\t\t\tattribute_name = attrib_node.name;\n\t\t\t\t\tproperty = property_node.name;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// this.function_pre_body += `\n\t\t\t// param.entity_attrib_value(${QUOTE}${attrib_node.name}${QUOTE}, param.entity_attrib_values.position);\n\t\t\t// `\n\t\t\tif (attribute_name) {\n\t\t\t\tattribute_name = CoreAttribute.remap_name(attribute_name);\n\t\t\t\tif (attribute_name == 'ptnum') {\n\t\t\t\t\treturn '((entity != null) ? entity.index : 0)';\n\t\t\t\t} else {\n\t\t\t\t\tconst var_attribute_size = this._attribute_requirements_controller.var_attribute_size(\n\t\t\t\t\t\tattribute_name\n\t\t\t\t\t);\n\t\t\t\t\tconst var_array = this._attribute_requirements_controller.var_array(attribute_name);\n\t\t\t\t\tthis._attribute_requirements_controller.add(attribute_name);\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tconst property_offset = PROPERTY_OFFSETS[property];\n\t\t\t\t\t\treturn `${var_array}[entity.index*${var_attribute_size}+${property_offset}]`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn `${var_array}[entity.index*${var_attribute_size}]`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn('attribute not found');\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\treturn `${node.operator}${this.traverse_node(node.argument)}`; // -5\n\t\t}\n\t}\n\n\tprotected traverse_Literal(node: jsep.Literal): string {\n\t\treturn `${node.raw}`; // 5 or 'string' (raw will include quotes)\n\t}\n\n\tprotected traverse_Identifier(node: jsep.Identifier): string | undefined {\n\t\tconst identifier_first_char = node.name[0];\n\t\tif (identifier_first_char == VARIABLE_PREFIX) {\n\t\t\tconst identifier_name_without_dollar_sign = node.name.substr(1);\n\n\t\t\t// globals constants: Math.PI or Math.E\n\t\t\tconst direct_constant_name = GLOBAL_CONSTANTS[identifier_name_without_dollar_sign];\n\t\t\tif (direct_constant_name) {\n\t\t\t\treturn direct_constant_name;\n\t\t\t}\n\n\t\t\t// scene or node globals: $F, $FPS, $T, $CH, $OS\n\t\t\tconst method_name = `traverse_Identifier_${identifier_name_without_dollar_sign}`;\n\t\t\tconst method = (this as any)[method_name];\n\t\t\tif (method) {\n\t\t\t\treturn (this as any)[method_name]();\n\t\t\t} else {\n\t\t\t\tthis.set_error(`identifier unknown: ${node.name}`);\n\t\t\t}\n\t\t} else {\n\t\t\treturn node.name; // @ptnum will call this method and return \"ptnum\"\n\t\t}\n\t}\n\n\t//\n\t//\n\t// Identifier methods (called from Identifier_body)\n\t//\n\t//\n\tprotected traverse_Identifier_F(): string {\n\t\tthis.immutable_dependencies.push(this.param.scene.time_controller.graph_node);\n\t\treturn `param.scene.time_controller.frame`;\n\t}\n\tprotected traverse_Identifier_FPS(): string {\n\t\tthis.immutable_dependencies.push(this.param.scene.time_controller.graph_node);\n\t\treturn `param.scene.time_controller.fps`;\n\t}\n\tprotected traverse_Identifier_T(): string {\n\t\tthis.immutable_dependencies.push(this.param.scene.time_controller.graph_node);\n\t\treturn `param.scene.time_controller.time`;\n\t}\n\tprotected traverse_Identifier_CH(): string {\n\t\treturn `${QUOTE}${this.param.name}${QUOTE}`;\n\t}\n\tprotected traverse_Identifier_CEX(): string {\n\t\treturn this._method_centroid('x');\n\t}\n\tprotected traverse_Identifier_CEY(): string {\n\t\treturn this._method_centroid('y');\n\t}\n\tprotected traverse_Identifier_CEZ(): string {\n\t\treturn this._method_centroid('z');\n\t}\n\t// TODO:\n\t// '$OS': '_eval_identifier_as_node_name',\n\t// '$BBX': '_eval_identifier_as_bounding_box_relative',\n\n\tprivate _method_centroid(component: string): string {\n\t\tconst method_arguments = [0, `${QUOTE}${component}${QUOTE}`];\n\t\tconst arguments_joined = method_arguments.join(ARGUMENTS_SEPARATOR);\n\t\tthis._create_method_and_dependencies('centroid', 0);\n\t\treturn `(await methods[${this.method_index}].process_arguments([${arguments_joined}]))`;\n\t}\n\n\t//\n\t//\n\t// Methods dependencies\n\t//\n\t//\n\tprivate _create_method_and_dependencies(\n\t\tmethod_name: string,\n\t\tpath_argument: number | string,\n\t\tpath_node?: jsep.Expression\n\t) {\n\t\tconst method_constructor = INDIRECT_EXPRESSION_METHODS[method_name];\n\t\tconst method = new method_constructor(this.param) as BaseMethod;\n\t\tthis.method_index += 1;\n\t\tthis.methods[this.method_index] = method;\n\n\t\tconst method_dependency = method.find_dependency(path_argument);\n\t\tif (method_dependency) {\n\t\t\tif (path_node) {\n\t\t\t\tmethod_dependency.set_jsep_node(path_node);\n\t\t\t}\n\t\t\tthis.method_dependencies.push(method_dependency);\n\t\t} else {\n\t\t\tif (path_node && lodash_isString(path_argument)) {\n\t\t\t\tthis.param.scene.missing_expression_references_controller.register(\n\t\t\t\t\tthis.param,\n\t\t\t\t\tpath_node,\n\t\t\t\t\tpath_argument\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// method_dependencies.resolved_graph_nodes.forEach((graph_node)=>{\n\t\t// \tif(path_node){\n\t\t// \t\tconst jsep_dependency = new JsepDependency(graph_node, path_node)\n\t\t// \t\tthis.jsep_dependencies.push(jsep_dependency)\n\t\t// \t} else {\n\t\t// \t\tthis.immutable_dependencies.push(graph_node)\n\t\t// \t}\n\n\t\t// })\n\n\t\t// if(path_node){\n\t\t// \treference_search_result.missing_paths.forEach((path)=>{\n\t\t// \t\tthis.jsep_nodes_by_missing_paths[path] = this.jsep_nodes_by_missing_paths[path] || []\n\t\t// \t\tthis.jsep_nodes_by_missing_paths[path].push(path_node)\n\t\t// \t})\n\t\t// }\n\t}\n}\n","export type LiteralConstructMethod = (args: any[]) => string\n\nexport class LiteralConstructsController {\n\tstatic if(args: any[]): string {\n\t\tconst condition = args[0]\n\t\tconst val_true = args[1]\n\t\tconst val_false = args[2]\n\t\treturn `(${condition}) ? (${val_true}) : (${val_false})`\n\t}\n}\n","// TODO: create an expression object that knows how many args it can accept, their type\n// and can throw an error and give it to the param, and then to the node\n// TODO: the expression should know how to update the node dependencies\n\n// import abs from './abs'\n// import {Asset} from './asset'\nimport {Bbox} from './bbox';\n// import ceil from './ceil'\nimport {Centroid} from './centroid';\nimport {Ch} from './ch';\nimport {Copy} from './copy';\nimport {CopRes} from './cop_res';\n// import clamp from './clamp'\n// import {Easein} from './easein'\n// import {Easeinout} from './easeinout'\n// import floor from './floor'\n// import humanize from './humanize'\nimport {Local} from './local';\n// import if_ from './if'\n// import max from './max'\n// import min from './min'\nimport {Opdigits} from './opdigits';\n// import object from './object'\n// import objects_count from './objects_count'\n// import objects_visible_count from './objects_visible_count'\nimport {Point} from './point';\nimport {PointsCount} from './points_count';\n// import {Precision} from './precision'\n// import rand from './rand'\n// import round from './round'\n// import sign from './sign'\nimport {StrCharsCount} from './str_chars_count';\nimport {StrConcat} from './str_concat';\nimport {StrIndex} from './str_index';\nimport {StrSub} from './str_sub';\n\nexport const MethodModule = {\n\t// 'asset': Asset,\n\tbbox: Bbox,\n\tch: Ch,\n\tcentroid: Centroid,\n\tcop_res: CopRes,\n\tlocal: Local,\n\topdigits: Opdigits,\n\tpoint: Point,\n\tpoints_count: PointsCount,\n\t// 'precision': Precision,\n\tcopy: Copy,\n\tstr_chars_count: StrCharsCount,\n\tstr_concat: StrConcat,\n\tstr_index: StrIndex,\n\tstr_sub: StrSub,\n};\n\n// import cos from './cos'\n// import sin from './sin'\n","import {BaseMethod} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {GeometryContainer} from '../../containers/Geometry';\n\n// import Walker from 'src/core/Walker';\n\ninterface BoxComponents {\n\tmin: Vector3;\n\tmax: Vector3;\n\tsize: Vector3;\n\tcenter: Vector3;\n}\n\nconst VECTOR_NAMES: Array<keyof BoxComponents> = ['min', 'max', 'size', 'center'];\nconst COMPONENT_NAMES = ['x', 'y', 'z'];\n\nexport class Bbox extends BaseMethod {\n\t// bbox(0).min.x\n\t// bbox('../REF_bbox').min.x\n\tstatic required_arguments() {\n\t\treturn [\n\t\t\t['string', 'path to node'],\n\t\t\t['string', 'vector name, min, max, size or center'],\n\t\t\t['string', 'component_name, x,y or z'],\n\t\t];\n\t}\n\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\treturn this.create_dependency_from_index_or_path(index_or_path);\n\t}\n\n\tprocess_arguments(args: any[]): Promise<any> {\n\t\tlet value = 0;\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tif (args.length == 3) {\n\t\t\t\tconst index_or_path = args[0];\n\t\t\t\tconst vector_name = args[1];\n\t\t\t\tconst component_name = args[2];\n\n\t\t\t\tlet container: GeometryContainer | null = null;\n\t\t\t\ttry {\n\t\t\t\t\tcontainer = (await this.get_referenced_node_container(index_or_path)) as GeometryContainer;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t\tif (container) {\n\t\t\t\t\tvalue = this._get_value_from_container(container, vector_name, component_name);\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolve(0);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _get_value_from_container(\n\t\tcontainer: GeometryContainer,\n\t\tvector_name: keyof BoxComponents,\n\t\tcomponent_name: keyof Vector3Like\n\t) {\n\t\tif (VECTOR_NAMES.indexOf(vector_name) >= 0) {\n\t\t\tconst bbox = container.bounding_box();\n\n\t\t\tlet vector = new Vector3();\n\t\t\tswitch (vector_name) {\n\t\t\t\tcase 'size':\n\t\t\t\t\tbbox.getSize(vector);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'center':\n\t\t\t\t\tbbox.getCenter(vector);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvector = bbox[vector_name];\n\t\t\t}\n\n\t\t\tif (COMPONENT_NAMES.indexOf(component_name) >= 0) {\n\t\t\t\t//(value = vector[component_name])?\n\t\t\t\treturn vector[component_name];\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n}\n","import lodash_isNumber from 'lodash/isNumber';\n// import BaseNode from 'src/engine/nodes/_Base'\nimport {DecomposedPath} from '../../core/DecomposedPath';\nimport {CoreGraphNode} from '../../core/graph/CoreGraphNode';\nimport {BaseParamType} from '../params/_Base';\n// import {CoreObject} from '../../core/Object';\nimport {BaseNodeType} from '../nodes/_Base';\nimport jsep from 'jsep';\n\nexport class MethodDependency extends CoreGraphNode {\n\tpublic jsep_node: jsep.Expression | undefined;\n\tpublic resolved_graph_node: CoreGraphNode | undefined;\n\tpublic unresolved_path: string | undefined;\n\tprivate _update_from_name_change_bound = this._update_from_name_change.bind(this);\n\n\tconstructor(\n\t\tpublic param: BaseParamType,\n\t\tpublic path_argument: number | string,\n\t\tpublic decomposed_path?: DecomposedPath\n\t) {\n\t\tsuper(param.scene, 'MethodDependency');\n\n\t\t// this.set_scene(this.param.scene);\n\n\t\tthis.add_post_dirty_hook('_update_from_name_change', this._update_from_name_change_bound);\n\t}\n\t_update_from_name_change(trigger?: CoreGraphNode) {\n\t\tif (trigger && this.decomposed_path) {\n\t\t\tconst node = trigger as BaseNodeType;\n\t\t\tthis.decomposed_path.update_from_name_change(node);\n\t\t\tconst new_path = this.decomposed_path.to_path();\n\n\t\t\tconst literal = this.jsep_node as jsep.Literal;\n\t\t\tif (literal) {\n\t\t\t\tliteral.value = `${literal.value}`.replace(`${this.path_argument}`, new_path);\n\t\t\t\tliteral.raw = literal.raw.replace(`${this.path_argument}`, new_path);\n\t\t\t}\n\t\t\tif (this.param.expression_controller) {\n\t\t\t\tthis.param.expression_controller.update_from_method_dependency_name_change();\n\t\t\t}\n\t\t}\n\t}\n\treset() {\n\t\tthis.graph_disconnect_predecessors();\n\t}\n\n\tlisten_for_name_changes() {\n\t\tif (this.jsep_node && this.decomposed_path) {\n\t\t\tthis.decomposed_path.named_nodes.forEach((node_in_path) => {\n\t\t\t\tif (node_in_path) {\n\t\t\t\t\tconst node = node_in_path as BaseNodeType;\n\t\t\t\t\tif (node.name_controller) {\n\t\t\t\t\t\tthis.add_graph_input(node.name_controller.graph_node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tset_jsep_node(jsep_node: jsep.Expression) {\n\t\tthis.jsep_node = jsep_node;\n\t}\n\tset_resolved_graph_node(node: CoreGraphNode) {\n\t\tthis.resolved_graph_node = node;\n\t}\n\tset_unresolved_path(path: string) {\n\t\tthis.unresolved_path = path;\n\t}\n\n\tstatic create(\n\t\tparam: BaseParamType,\n\t\tindex_or_path: number | string,\n\t\tnode: CoreGraphNode,\n\t\tdecomposed_path?: DecomposedPath\n\t) {\n\t\tconst is_index = lodash_isNumber(index_or_path);\n\n\t\t// if(!decomposed_path){\n\t\t// \tconsole.log('nodes_in_path', decomposed_path.named_nodes);\n\t\t// \tfor (let node_in_path of decomposed_path.named_nodes) {\n\t\t// \t\tif (node_in_path) {\n\t\t// \t\t\tdecomposed_path.add_node(node_in_path.name, node_in_path);\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\tconst instance = new MethodDependency(param, index_or_path, decomposed_path);\n\t\tif (node) {\n\t\t\tinstance.set_resolved_graph_node(node);\n\t\t} else {\n\t\t\tif (!is_index) {\n\t\t\t\tconst path = index_or_path as string;\n\t\t\t\tinstance.set_unresolved_path(path);\n\t\t\t}\n\t\t}\n\t\treturn instance;\n\t}\n}\n","import {BaseMethod} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\n// import Walker from 'src/core/Walker';\nimport {GeometryContainer} from '../../containers/Geometry';\n\nexport class Centroid extends BaseMethod {\n\t// bbox(0).min.x\n\t// bbox('../REF_bbox').min.x\n\tstatic required_arguments() {\n\t\treturn [\n\t\t\t['string', 'path to node'],\n\t\t\t['string', 'component_name, x,y or z'],\n\t\t];\n\t}\n\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\treturn this.create_dependency_from_index_or_path(index_or_path);\n\t}\n\n\tprocess_arguments(args: any[]): Promise<any> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\t// const path = args\n\t\t\t// this.get_referenced_param(path).eval_p().then(val=>{\n\t\t\t// \tresolve(val)\n\t\t\t// })\n\t\t\tif (args.length == 2) {\n\t\t\t\tconst index_or_path = args[0];\n\t\t\t\tconst component_name = args[1] as keyof Vector3Like;\n\t\t\t\tlet container: GeometryContainer | null = null;\n\t\t\t\ttry {\n\t\t\t\t\tcontainer = (await this.get_referenced_node_container(index_or_path)) as GeometryContainer;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\n\t\t\t\tif (container) {\n\t\t\t\t\tconst bbox = container.bounding_box();\n\t\t\t\t\tconst center = bbox.min\n\t\t\t\t\t\t.clone()\n\t\t\t\t\t\t.add(bbox.max)\n\t\t\t\t\t\t.multiplyScalar(0.5);\n\n\t\t\t\t\tconst value = center[component_name];\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tresolve(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// throw \"only component names are x, y and z\";\n\t\t\t\t\t\tresolve(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolve(0);\n\t\t\t}\n\t\t});\n\t\t// return this._get_param_value(args[0], args[1], callback);\n\t}\n\n\t// _get_param_value(index_or_path, component_name, callback){\n\t// \treturn this.get_referenced_node_container(index_or_path, container=> {\n\t// \t\tlet value;\n\t// \t\tconst bbox = container.bounding_box();\n\t// \t\tconst size = bbox.min.clone().add(bbox.max).multiplyScalar(0.5);\n\n\t// \t\tif ((value = size[component_name]) != null) {\n\t// \t\t\treturn callback(value);\n\t// \t\t} else {\n\t// \t\t\tthrow \"only component names are x, y and z\";\n\t// \t\t}\n\t// \t});\n\t// }\n}\n","// import lodash_isNumber from 'lodash/isNumber';\n\nimport {BaseMethod} from './_Base';\nimport {DecomposedPath} from '../../../core/DecomposedPath';\nimport {MethodDependency} from '../MethodDependency';\n// import Walker from 'src/core/Walker';\n\nexport class Ch extends BaseMethod {\n\t// constructor() {\n\t// \tsuper();\n\t// }\n\n\tstatic required_arguments() {\n\t\treturn [['string', 'path to param']];\n\t}\n\n\t// dependencies(args: any[]): any[]{\n\t// \tconst path = args[0]\n\t// \treturn [this.get_referenced_param(path)]\n\t// }\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\tconst decomposed_path = new DecomposedPath();\n\t\tconst param = this.get_referenced_param(index_or_path as string, decomposed_path);\n\t\tif (param) {\n\t\t\treturn this.create_dependency(param, index_or_path, decomposed_path);\n\t\t} else {\n\t\t\tconsole.warn('could not find param');\n\t\t}\n\t\treturn null;\n\t\t// const reference_search_result = new ReferenceSearchResult()\n\t\t// const param = this.get_referenced_param(index_or_path)\n\t\t// if(param){\n\t\t// \treference_search_result.set_found_graph_nodes([param])\n\t\t// } else {\n\t\t// \treference_search_result.set_missing_paths([path])\n\t\t// }\n\n\t\t// return reference_search_result\n\t}\n\t// find_dependencies(index_or_path: number|string): MethodDependency{\n\t// }\n\n\tasync process_arguments(args: any[]): Promise<any> {\n\t\tlet val: any = 0;\n\t\tif (args.length == 1) {\n\t\t\tconst path = args[0];\n\t\t\tconst ref = this.get_referenced_param(path);\n\t\t\tif (ref) {\n\t\t\t\tawait ref.compute();\n\t\t\t\tconst result = ref.value;\n\t\t\t\tif (result != null) {\n\t\t\t\t\t// if (lodash_isNumber(result)) {\n\t\t\t\t\tval = result;\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn val;\n\t}\n\n\t// _get_param_value(path, callback){\n\t// \treturn this.get_referenced_param(path).eval(val=> {\n\t// \t\treturn callback(val);\n\t// \t});\n\t// }\n}\n","import {BaseMethod} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport {CoreWalker} from '../../../core/Walker';\nimport {CopySopNode} from '../../nodes/sop/Copy';\nimport {BaseNodeType} from '../../nodes/_Base';\n\nexport class Copy extends BaseMethod {\n\tstatic required_arguments() {\n\t\treturn [\n\t\t\t['string', 'path to copy'],\n\t\t\t['integer', 'default value'],\n\t\t];\n\t}\n\tstatic optional_arguments() {\n\t\treturn [['string', 'attribute name (optional)']];\n\t}\n\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\tconst node = this.find_referenced_graph_node(index_or_path) as BaseNodeType;\n\t\t// I'd prefer testing with if(node instanceof CopySopNode)\n\t\t// but tslib generates an error when doing so\n\t\tif (node && node.type == 'copy') {\n\t\t\tconst stamp_node = (node as CopySopNode).stamp_node;\n\t\t\treturn this.create_dependency(stamp_node, index_or_path);\n\t\t}\n\t\treturn null;\n\t}\n\t// find_dependencies(index_or_path: number|string): ReferenceSearchResult{\n\t// \t// return this.find_node_dependency_from_index_or_path(index_or_path)\n\t// \tconst node = this.find_dependency_from_index_or_path(index_or_path)\n\t// \treturn this.create_search_result(stamp_node, index_or_path)\n\t// }\n\n\tprocess_arguments(args: any[]): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (args.length == 2 || args.length == 3) {\n\t\t\t\tconst path = args[0];\n\t\t\t\tconst default_value = args[1];\n\t\t\t\tconst attribute_name = args[2];\n\n\t\t\t\tconst node = CoreWalker.find_node(this.node, path);\n\n\t\t\t\tlet value;\n\t\t\t\tif (node && node.type == 'copy') {\n\t\t\t\t\tvalue = (node as CopySopNode).stamp_value(attribute_name);\n\t\t\t\t}\n\t\t\t\t// if (node && node instanceof CopySopNode) {\n\t\t\t\t// \tvalue = node.stamp_value(attribute_name);\n\t\t\t\t// }\n\n\t\t\t\tif (value == null) {\n\t\t\t\t\tvalue = default_value;\n\t\t\t\t}\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\tresolve(0);\n\t\t\t}\n\t\t});\n\t}\n\t// update_dependencies() {\n\t// \treturn this.jsep_node()._graph_node.add_graph_input( this.copy_sop.stamp_node() );\n\t// }\n\n\t// process_arguments(args, callback){\n\t// \tconst path = args[0];\n\t// \tconst default_value = args[1];\n\t// \tconst attribute_name = args[2];\n\n\t// \tthis.copy_sop = Walker.find_node(this.node(), path);\n\t// \tlet value = (this.copy_sop != null) ?\n\t// \t\tthis.copy_sop.stamp_value(attribute_name) : undefined;\n\n\t// \tif (value == null) { value = default_value; }\n\n\t// \treturn callback(value);\n\t// }\n}\n","import {BaseMethod} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport {TextureContainer} from '../../containers/Texture';\n\nexport class CopRes extends BaseMethod {\n\t// cop_res(0, 'x')\n\t// cop_res('../REF_bbox', 'x')\n\tstatic required_arguments() {\n\t\treturn [\n\t\t\t['string', 'path to node'],\n\t\t\t['string', 'component_name: x or y'],\n\t\t];\n\t}\n\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\treturn this.create_dependency_from_index_or_path(index_or_path);\n\t}\n\n\tasync process_arguments(args: any[]): Promise<number> {\n\t\tlet value = 0;\n\t\tif (args.length == 2) {\n\t\t\tconst index_or_path = args[0];\n\t\t\tconst component_name = args[1];\n\t\t\tconst container = (await this.get_referenced_node_container(index_or_path)) as TextureContainer;\n\n\t\t\tif (container) {\n\t\t\t\tconst resolution = container.resolution();\n\t\t\t\tif ([0, '0', 'x'].includes(component_name)) {\n\t\t\t\t\tvalue = resolution[0];\n\t\t\t\t} else {\n\t\t\t\t\tif ([1, '1', 'y'].includes(component_name)) {\n\t\t\t\t\t\tvalue = resolution[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}\n","import {BaseMethod} from './_Base';\nimport {Poly} from '../../Poly';\n\nexport class Local extends BaseMethod {\n\t// constructor() {\n\t// \tsuper();\n\t// }\n\n\tstatic required_arguments() {\n\t\treturn [['string', 'path']];\n\t}\n\n\tprocess_arguments(args: any[]): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.request_asset_url(args[0]).then((url) => {\n\t\t\t\tresolve(url);\n\t\t\t});\n\t\t});\n\t}\n\t// find_dependency(index_or_path: number | string): MethodDependency {\n\t// \treturn null\n\t// }\n\n\t// TODO: add error management\n\trequest_asset_url(name: string): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// const scene = this.node.scene()\n\t\t\t// const scene_uuid = scene.uuid();\n\n\t\t\tlet url;\n\n\t\t\tconst desktop_controller = Poly.instance().desktop_controller();\n\t\t\tif (desktop_controller.active()) {\n\t\t\t\tdesktop_controller.add_local_path(name, this.param);\n\t\t\t\turl = desktop_controller.local_path_server_url(name);\n\t\t\t\tresolve(url);\n\t\t\t} else {\n\t\t\t\treturn resolve('');\n\t\t\t}\n\t\t});\n\t}\n}\n","import {BaseMethod} from './_Base';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {MethodDependency} from '../MethodDependency';\n// import Walker from 'src/core/Walker';\nimport {CoreString} from '../../../core/String';\n// import {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n\nexport class Opdigits extends BaseMethod {\n\tstatic required_arguments() {\n\t\treturn [['string', 'path to node']];\n\t}\n\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\tconst graph_node = this.find_referenced_graph_node(index_or_path);\n\t\tif (graph_node) {\n\t\t\tconst node = graph_node as BaseNodeType;\n\t\t\tif (node.name_controller) {\n\t\t\t\tconst name_node = node.name_controller.graph_node;\n\t\t\t\treturn this.create_dependency(name_node, index_or_path);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t\t// return [this.create_dependency_from_index_or_path(index_or_path)]\n\t}\n\t// find_dependencies(index_or_path: number|string): ReferenceSearchResult{\n\n\t// \t// TODO: ensure the dependency update works for space params when they get renamed\n\t// \tconsole.log(node)\n\t// \tconst name_node = node.name_graph_node()\n\t// \treturn this.create_search_result(name_node, index_or_path)\n\t// \t// return this.create_reference_search_result_from_index_or_path(index_or_path)\n\t// }\n\n\tprocess_arguments(args: any[]): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (args.length == 1) {\n\t\t\t\tconst index_or_path = args[0];\n\t\t\t\tconst node = this.get_referenced_node(index_or_path);\n\t\t\t\tif (node) {\n\t\t\t\t\tconst name = node.name;\n\t\t\t\t\tconst value = CoreString.tail_digits(name);\n\t\t\t\t\tresolve(value);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolve(0);\n\t\t\t}\n\t\t});\n\t}\n}\n","import {BaseMethod} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport {GeometryContainer} from '../../containers/Geometry';\n// import {CoreGroup} from '../../../core/Geometry/Group'\n\nexport class Point extends BaseMethod {\n\tstatic required_arguments() {\n\t\treturn [\n\t\t\t['string', 'path to node'],\n\t\t\t['index', 'point index'],\n\t\t\t['string', 'attribute name'],\n\t\t];\n\t}\n\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\treturn this.create_dependency_from_index_or_path(index_or_path);\n\t}\n\n\tprocess_arguments(args: any[]): Promise<any> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tif (args.length == 3) {\n\t\t\t\tconst index_or_path = args[0];\n\t\t\t\tconst attrib_name = args[1];\n\t\t\t\tconst point_index = args[2];\n\t\t\t\tlet container: GeometryContainer | null = null;\n\t\t\t\ttry {\n\t\t\t\t\tcontainer = (await this.get_referenced_node_container(index_or_path)) as GeometryContainer;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t\tif (container) {\n\t\t\t\t\tconst value = this._get_value_from_container(container, attrib_name, point_index);\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolve(0);\n\t\t\t}\n\t\t});\n\t}\n\n\t_get_value_from_container(container: GeometryContainer, attrib_name: string, point_index: number) {\n\t\tconst core_group = container.core_content();\n\t\t// TODO: optimise and store the group_wrapper in the json_node\n\t\tif (core_group) {\n\t\t\tconst point = core_group.points()[point_index];\n\n\t\t\tif (point) {\n\t\t\t\treturn point.attrib_value(attrib_name);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// _get_param_value(index_or_path, point_index, attrib_name, callback){\n\t// \treturn this.get_referenced_node_container(index_or_path, container=> {\n\t// \t\tconst group = container.group({clone: false});\n\t// \t\tconst group_wrapper = new Core.Geometry.Group(group);\n\t// \t\t// TODO: optimise and store the group_wrapper in the json_node\n\t// \t\tconst point = group_wrapper.points()[point_index];\n\n\t// \t\tif (point != null) {\n\t// \t\t\tconst value = point.attrib_value(attrib_name);\n\t// \t\t\tif (value != null) {\n\t// \t\t\t\treturn callback(value);\n\t// \t\t\t} else {\n\t// \t\t\t\t//throw \"no attribute #{attrib_name} found\"\n\t// \t\t\t\tconsole.error(`no attribute ${attrib_name} found`);\n\t// \t\t\t\treturn callback(0);\n\t// \t\t\t}\n\t// \t\t} else {\n\t// \t\t\tconsole.error(`no point found with index ${point_index}`);\n\t// \t\t\treturn callback(0);\n\t// \t\t}\n\t// \t});\n\t// }\n}\n","import {BaseMethod} from './_Base';\nimport {MethodDependency} from '../MethodDependency';\nimport {GeometryContainer} from '../../containers/Geometry';\n// import {CoreGroup} from '../../../core/Geometry/Group';\n\nexport class PointsCount extends BaseMethod {\n\t// npoints(0)\n\t// npoints('../REF_bbox')\n\tstatic required_arguments() {\n\t\treturn [['string', 'path to node']];\n\t}\n\n\tfind_dependency(index_or_path: number | string): MethodDependency | null {\n\t\treturn this.create_dependency_from_index_or_path(index_or_path);\n\t}\n\n\tprocess_arguments(args: any[]): Promise<any> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tif (args.length == 1) {\n\t\t\t\tconst index_or_path = args[0];\n\t\t\t\tlet container: GeometryContainer;\n\t\t\t\ttry {\n\t\t\t\t\tcontainer = (await this.get_referenced_node_container(index_or_path)) as GeometryContainer;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treject(e);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (container) {\n\t\t\t\t\tconst value = container.points_count();\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolve(0);\n\t\t\t}\n\t\t});\n\t}\n}\n","import {BaseMethod} from './_Base';\n// import {MethodDependency} from '../MethodDependency'\n\nexport class StrCharsCount extends BaseMethod {\n\t// str_chars_count('bla') => 3\n\tstatic required_arguments() {\n\t\treturn [['string', 'string to count characters of']];\n\t}\n\n\t// find_dependency(index_or_path: number | string): null {\n\t// \treturn null\n\t// \t// return this.create_dependency_from_index_or_path(index_or_path)\n\t// }\n\n\tasync process_arguments(args: any[]): Promise<number> {\n\t\tlet value = 0;\n\t\tif (args.length == 1) {\n\t\t\tconst string = args[0];\n\t\t\tvalue = string.length;\n\t\t}\n\t\treturn value;\n\t}\n}\n","import {BaseMethod} from './_Base';\n// import {MethodDependency} from '../MethodDependency'\n\nexport class StrConcat extends BaseMethod {\n\t// str_concat(1,2) => '12'\n\t// str_concat(1,\"a\") => '1a'\n\t// str_concat(\"a\",12, \"b\", \" \", 17) => 'a12b 17'\n\tstatic required_arguments(): any[] {\n\t\treturn [\n\t\t\t// ['string', 'string to get range from'],\n\t\t\t// ['integer', 'range start'],\n\t\t\t// ['integer', 'range size'],\n\t\t];\n\t}\n\n\t// find_dependency(index_or_path: number | string): null {\n\t// \treturn null\n\t// \t// return this.create_dependency_from_index_or_path(index_or_path)\n\t// }\n\n\tasync process_arguments(args: any[]): Promise<string> {\n\t\tlet value = '';\n\n\t\tfor (let arg of args) {\n\t\t\tif (arg == null) {\n\t\t\t\targ = '';\n\t\t\t}\n\t\t\tvalue += `${arg}`;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","import {BaseMethod} from './_Base';\n// import {MethodDependency} from '../MethodDependency'\n\nexport class StrIndex extends BaseMethod {\n\t// str_chars_count('bla') => 3\n\tstatic required_arguments() {\n\t\treturn [\n\t\t\t['string', 'string to get index from'],\n\t\t\t['string', 'char to find index of'],\n\t\t];\n\t}\n\n\t// find_dependency(index_or_path: number | string): null {\n\t// \treturn null\n\t// \t// return this.create_dependency_from_index_or_path(index_or_path)\n\t// }\n\n\tasync process_arguments(args: any[]): Promise<number> {\n\t\tlet value = -1;\n\t\tif (args.length == 2) {\n\t\t\tconst string = args[0];\n\t\t\tconst sub_string = args[1];\n\t\t\tvalue = string.indexOf(sub_string);\n\t\t}\n\t\treturn value;\n\t}\n}\n","import {BaseMethod} from './_Base';\n// import {MethodDependency} from '../MethodDependency'\n\nexport class StrSub extends BaseMethod {\n\t// str_chars_count('bla') => 3\n\tstatic required_arguments() {\n\t\treturn [\n\t\t\t['string', 'string to get range from'],\n\t\t\t['integer', 'range start'],\n\t\t\t['integer', 'range size'],\n\t\t];\n\t}\n\n\t// find_dependency(index_or_path: number | string): MethodDependency | null {\n\t// \treturn null;\n\t// \t// return this.create_dependency_from_index_or_path(index_or_path)\n\t// }\n\n\tasync process_arguments(args: any[]): Promise<string> {\n\t\tlet value = '';\n\t\tconst string = args[0];\n\t\tconst range_start = args[1] || 0;\n\t\tlet range_size = args[2] || 1;\n\t\tif (string) {\n\t\t\tvalue = string.substr(range_start, range_size);\n\t\t}\n\t\treturn value;\n\t}\n}\n","export class AttributeRequirementsController {\n\tprivate _attribute_names: Set<string> | undefined;\n\tconstructor() {}\n\n\treset() {\n\t\tif (this._attribute_names) {\n\t\t\tthis._attribute_names.clear();\n\t\t}\n\t}\n\tassign_attributes_lines(): string {\n\t\tif (this._attribute_names) {\n\t\t\tconst lines: string[] = [];\n\t\t\tthis._attribute_names?.forEach((attribute_name: string) => {\n\t\t\t\tlines.push(AttributeRequirementsController.assign_attribute_line(attribute_name));\n\t\t\t});\n\t\t\treturn lines.join(';\\n');\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\tassign_arrays_lines(): string {\n\t\tif (this._attribute_names) {\n\t\t\tconst lines: string[] = [];\n\t\t\tthis._attribute_names?.forEach((attribute_name: string) => {\n\t\t\t\tlines.push(AttributeRequirementsController.assign_item_size_line(attribute_name));\n\t\t\t\tlines.push(AttributeRequirementsController.assign_array_line(attribute_name));\n\t\t\t});\n\t\t\treturn lines.join(';\\n');\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\tattribute_presence_check_line(): string {\n\t\tif (this._attribute_names) {\n\t\t\tconst var_names: string[] = [];\n\t\t\tthis._attribute_names?.forEach((attribute_name: string) => {\n\t\t\t\tconst var_name = AttributeRequirementsController.var_attribute(attribute_name);\n\t\t\t\tvar_names.push(var_name);\n\t\t\t});\n\t\t\treturn var_names.join(' && ');\n\t\t} else {\n\t\t\treturn 'true';\n\t\t}\n\t}\n\n\tadd(attribute_name: string) {\n\t\tthis._attribute_names = this._attribute_names || new Set<string>();\n\t\tthis._attribute_names.add(attribute_name);\n\t}\n\n\tstatic assign_attribute_line(attribute_name: string) {\n\t\tconst var_attribute = this.var_attribute(attribute_name);\n\t\treturn `const ${var_attribute} = entities[0].geometry().attributes['${attribute_name}']`;\n\t}\n\tstatic assign_item_size_line(attribute_name: string) {\n\t\tconst var_attribute = this.var_attribute(attribute_name);\n\t\tconst var_attribute_size = this.var_attribute_size(attribute_name);\n\t\treturn `const ${var_attribute_size} = ${var_attribute}.itemSize`;\n\t}\n\tstatic assign_array_line(attribute_name: string) {\n\t\tconst var_attribute = this.var_attribute(attribute_name);\n\t\tconst var_array = this.var_array(attribute_name);\n\t\treturn `const ${var_array} = ${var_attribute}.array`;\n\t}\n\n\tstatic var_attribute(attribute_name: string) {\n\t\treturn `attrib_${attribute_name}`;\n\t}\n\tstatic var_attribute_size(attribute_name: string) {\n\t\treturn `attrib_size_${attribute_name}`;\n\t}\n\tstatic var_array(attribute_name: string) {\n\t\treturn `array_${attribute_name}`;\n\t}\n\tvar_attribute_size(attribute_name: string) {\n\t\treturn AttributeRequirementsController.var_attribute_size(attribute_name);\n\t}\n\tvar_array(attribute_name: string) {\n\t\treturn AttributeRequirementsController.var_array(attribute_name);\n\t}\n}\n","import {BaseParamType} from '../../params/_Base';\nimport {ParsedTree} from './ParsedTree';\n// import {LiteralConstructsController} from './LiteralConstructsController'\nimport jsep from 'jsep';\n// import {BaseMethod} from '../../../Engine/Expression/Method/_Base'\n// import {MissingReferencesControler} from './MissingReferencesController'\n\nconst ARGUMENTS_SEPARATOR = ', ';\n// const ATTRIBUTE_PREFIX = '@'\n// const VARIABLE_PREFIX = '$'\n\n// export interface MethodsByName {\n// \t[propName: string]: BaseMethod;\n// }\n// interface JsepsByString {\n// \t[propName: string]: jsep.Expression[];\n// }\nimport {BaseTraverser} from './_Base';\n\nexport class ExpressionStringGenerator extends BaseTraverser {\n\tconstructor(public param: BaseParamType) {\n\t\tsuper(param);\n\t}\n\n\tparse_tree(parsed_tree: ParsedTree) {\n\t\tif (parsed_tree.error_message == null && parsed_tree.node) {\n\t\t\ttry {\n\t\t\t\treturn this.traverse_node(parsed_tree.node);\n\t\t\t} catch (e) {\n\t\t\t\tthis.set_error('could not traverse tree');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.set_error('cannot parse tree');\n\t\t}\n\t}\n\n\tprotected traverse_CallExpression(node: jsep.CallExpression): string {\n\t\tconst method_arguments = node.arguments.map((arg) => {\n\t\t\treturn this.traverse_node(arg);\n\t\t});\n\t\tconst arguments_joined = `${method_arguments.join(ARGUMENTS_SEPARATOR)}`;\n\n\t\tconst method_name = (node.callee as jsep.Identifier).name;\n\t\treturn `${method_name}(${arguments_joined})`;\n\t}\n\tprotected traverse_UnaryExpression(node: jsep.UnaryExpression): string {\n\t\treturn `${node.operator}${this.traverse_node(node.argument)}`; // -5\n\t}\n\n\tprotected traverse_Identifier(node: jsep.Identifier): string {\n\t\treturn `${node.name}`;\n\t}\n}\n","import {BaseParamType} from '../params/_Base';\n// import {ParsedTree} from './Traverser/ParsedTree'\nimport {FunctionGenerator} from './traversers/FunctionGenerator';\n// import {NodeSimple} from '../../core/graph/NodeSimple'\n// import {MissingReferencesController} from './MissingReferencesController'\n// import {NamesListener} from './NamesListener'\nimport {MethodDependency} from './MethodDependency';\nimport jsep from 'jsep';\n\nexport interface JsepsByString {\n\t[propName: string]: jsep.Expression[];\n}\n\nexport class DependenciesController {\n\terror_message: string | undefined;\n\t// private references_controller: MissingReferencesController\n\tprivate cyclic_graph_detected: boolean = false;\n\t// private jsep_nodes_by_missing_paths: JsepsByString = {}\n\tprivate method_dependencies: MethodDependency[] = [];\n\n\t// private names_listeners: NamesListener[] = []\n\n\tconstructor(public param: BaseParamType) {\n\t\t// this.references_controller = this.param.scene().missing_expression_references_controller\n\t}\n\n\tprotected set_error(message: string) {\n\t\tthis.error_message = this.error_message || message;\n\t}\n\n\treset() {\n\t\tthis.param.graph_disconnect_predecessors();\n\n\t\tthis.method_dependencies.forEach((method_dependency) => {\n\t\t\tmethod_dependency.reset();\n\t\t});\n\t\tthis.method_dependencies = [];\n\n\t\t// this.jsep_nodes_by_missing_paths = {}\n\t\t// const ref_ids = Object.keys(this.missing_expression_references_by_id)\n\t\t// ref_ids.forEach(ref_id=>{\n\t\t// \tconst ref = this.missing_expression_references_by_id[ref_id]\n\t\t// \tthis.references_controller.unregister(ref)\n\t\t// })\n\t\t// this.missing_expression_references_by_id = {}\n\n\t\t// this.names_listeners.forEach(names_listener=>{names_listener.reset()})\n\t}\n\n\tupdate(function_generator: FunctionGenerator) {\n\t\t// const immutable_dependencies = function_generator.immutable_dependencies\n\t\t// const jsep_dependencies = function_generator.jsep_dependencies\n\t\t// const jsep_nodes_by_missing_paths = function_generator.jsep_nodes_by_missing_paths\n\n\t\t// if(jsep_dependencies.length > 0){\n\t\t// \tconsole.log(\"connect_param_to_dependencies\", this.param.full_path())\n\t\t// }\n\n\t\tthis.cyclic_graph_detected = false;\n\n\t\tthis.connect_immutable_dependencies(function_generator);\n\t\tthis.method_dependencies = function_generator.method_dependencies;\n\t\tthis.handle_method_dependencies();\n\t\t// this.connect_missing_paths(function_generator)\n\n\t\tthis.listen_for_name_changes();\n\t}\n\n\tprivate connect_immutable_dependencies(function_generator: FunctionGenerator) {\n\t\tfunction_generator.immutable_dependencies.forEach((dependency) => {\n\t\t\tif (this.cyclic_graph_detected == false) {\n\t\t\t\tif (this.param.add_graph_input(dependency) == false) {\n\t\t\t\t\tthis.cyclic_graph_detected = true;\n\t\t\t\t\tthis.set_error('cannot create expression, infinite graph detected');\n\t\t\t\t\tthis.reset();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\tprivate handle_method_dependencies() {\n\t\tthis.method_dependencies.forEach((method_dependency) => {\n\t\t\tif (this.cyclic_graph_detected == false) {\n\t\t\t\tthis.handle_method_dependency(method_dependency);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate handle_method_dependency(method_dependency: MethodDependency) {\n\t\tconst node_simple = method_dependency.resolved_graph_node;\n\n\t\tif (node_simple) {\n\t\t\t// this should update the jsep_node, and run the expression to string parser\n\t\t\t// when a name in the referenced nodes is updated\n\t\t\t// const names_listener = new NamesListener(this.param, node_simple, jsep_node)\n\t\t\t// TODO: test that it is no longer active if expression is updated\n\n\t\t\tif (!this.param.add_graph_input(node_simple)) {\n\t\t\t\tthis.cyclic_graph_detected = true;\n\t\t\t\tthis.set_error('cannot create expression, infinite graph detected');\n\t\t\t\tthis.reset();\n\t\t\t\treturn;\n\t\t\t}\n\t\t} // else {\n\t\t// const jsep_node = method_dependency.jsep_node\n\t\t//}\n\t}\n\n\tprivate listen_for_name_changes() {\n\t\tthis.method_dependencies.forEach((method_dependency) => {\n\t\t\tmethod_dependency.listen_for_name_changes();\n\t\t});\n\t}\n\n\t// private connect_missing_paths(function_generator: FunctionGenerator){\n\n\t// \tconst jsep_nodes_by_missing_paths = function_generator.jsep_nodes_by_missing_paths\n\t// \tconst missing_paths = Object.keys(jsep_nodes_by_missing_paths)\n\n\t// \tmissing_paths.forEach((missing_path)=>{\n\t// \t\tconst full_path = CoreWalker.make_absolute(this.param.node(), missing_path)\n\t// \t\tconst jsep_nodes = jsep_nodes_by_missing_paths[missing_path]\n\t// \t\tjsep_nodes.forEach(jsep_node=>{\n\t// \t\t\tconst missing_expression_reference = this.references_controller.register(this.param, jsep_node, full_path)\n\n\t// \t\t\tthis.missing_expression_references_by_id[missing_expression_reference.id] = missing_expression_reference\n\t// \t\t})\n\t// \t})\n\n\t// }\n}\n","import {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport class ButtonParam extends TypedParam<ParamType.BUTTON> {\n\tstatic type() {\n\t\treturn ParamType.BUTTON;\n\t}\n\tget default_value_serialized() {\n\t\treturn this.default_value;\n\t}\n\tget raw_input_serialized() {\n\t\treturn this._raw_input;\n\t}\n\tget value_serialized() {\n\t\treturn this.value;\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.BUTTON],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.BUTTON]\n\t) {\n\t\treturn true;\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.BUTTON], val2: ParamValuesTypeMap[ParamType.BUTTON]) {\n\t\treturn true;\n\t}\n\tpress_button() {\n\t\tthis.options.execute_callback();\n\t}\n}\n","import {TypedMultipleParam} from './_Multiple';\nimport lodash_isArray from 'lodash/isArray';\n// import lodash_isNumber from 'lodash/isNumber';\nimport {Color} from 'three/src/math/Color';\nimport {ParamType} from '../poly/ParamType';\nimport {FloatParam} from './Float';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\n// import {ParamInitValuesTypeMap} from '../nodes/utils/params/ParamsController';\n\nconst COMPONENT_NAMES_COLOR = ['r', 'g', 'b'];\nexport class ColorParam extends TypedMultipleParam<ParamType.COLOR> {\n\tprotected _value = new Color();\n\tr!: FloatParam;\n\tg!: FloatParam;\n\tb!: FloatParam;\n\tstatic type() {\n\t\treturn ParamType.COLOR;\n\t}\n\tstatic get component_names() {\n\t\treturn COMPONENT_NAMES_COLOR;\n\t}\n\tget default_value_serialized() {\n\t\tif (lodash_isArray(this.default_value)) {\n\t\t\treturn this.default_value;\n\t\t} else {\n\t\t\treturn this.default_value.toArray() as Number3;\n\t\t}\n\t}\n\t// get raw_input_serialized() {\n\t// \tif (this._raw_input instanceof Color) {\n\t// \t\treturn this._raw_input.toArray() as Number3;\n\t// \t} else {\n\t// \t\tconst new_array: StringOrNumber3 = [this._raw_input[0], this._raw_input[1], this._raw_input[2]];\n\t// \t\treturn new_array;\n\t// \t}\n\t// }\n\tget value_serialized() {\n\t\treturn this.value.toArray() as Number3;\n\t}\n\tprotected _clone_raw_input(raw_input: ParamInitValuesTypeMap[ParamType.COLOR]) {\n\t\tif (raw_input instanceof Color) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\tconst new_array: StringOrNumber3 = [raw_input[0], raw_input[1], raw_input[2]];\n\t\t\treturn new_array;\n\t\t}\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.COLOR],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.COLOR]\n\t) {\n\t\tif (raw_input1 instanceof Color) {\n\t\t\tif (raw_input2 instanceof Color) {\n\t\t\t\treturn raw_input1.equals(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn raw_input1.r == raw_input2[0] && raw_input1.g == raw_input2[1] && raw_input1.b == raw_input2[2];\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof Color) {\n\t\t\t\treturn raw_input1[0] == raw_input2.r && raw_input1[1] == raw_input2.g && raw_input1[2] == raw_input2.b;\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\traw_input1[0] == raw_input2[0] && raw_input1[1] == raw_input2[1] && raw_input1[2] == raw_input2[2]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.COLOR], val2: ParamValuesTypeMap[ParamType.COLOR]) {\n\t\treturn val1.equals(val2);\n\t}\n\tinit_components() {\n\t\tsuper.init_components();\n\t\tthis.r = this.components[0];\n\t\tthis.g = this.components[1];\n\t\tthis.b = this.components[2];\n\t}\n\t// set_raw_input_from_components() {\n\t// \tif (this._raw_input instanceof Color) {\n\t// \t\tif (\n\t// \t\t\tlodash_isNumber(this.r.raw_input) &&\n\t// \t\t\tlodash_isNumber(this.g.raw_input) &&\n\t// \t\t\tlodash_isNumber(this.b.raw_input)\n\t// \t\t) {\n\t// \t\t\tthis._raw_input.r = this.r.raw_input;\n\t// \t\t\tthis._raw_input.g = this.g.raw_input;\n\t// \t\t\tthis._raw_input.b = this.b.raw_input;\n\t// \t\t} else {\n\t// \t\t\tthis._raw_input = [this.r.raw_input, this.g.raw_input, this.b.raw_input];\n\t// \t\t}\n\t// \t} else {\n\t// \t\tthis._raw_input[0] = this.r.raw_input;\n\t// \t\tthis._raw_input[1] = this.g.raw_input;\n\t// \t\tthis._raw_input[2] = this.b.raw_input;\n\t// \t}\n\t// }\n\tset_value_from_components() {\n\t\tthis._value.r = this.r.value;\n\t\tthis._value.g = this.g.value;\n\t\tthis._value.b = this.b.value;\n\t}\n\t// convert(input: ParamInitValuesTypeMap[ParamType.COLOR]): Color | null {\n\t// \tif (lodash_isArray(input)) {\n\t// \t\tif(input.length == 3){\n\t// \t\t\tif( input.filter(lodash_isNumber).length > 0 ){\n\t// \t\t\t\treturn new Color().fromArray(input);\n\t// \t\t\t}\n\t// \t\t\tif(first){\n\t// \t\t\t\tif(lodash_isNumber(first)){\n\t// \t\t\t\t\treturn new Color().fromArray(input);\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \treturn new Color();\n\t// }\n}\n","import {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport class FolderParam extends TypedParam<ParamType.FOLDER> {\n\tstatic type() {\n\t\treturn ParamType.FOLDER;\n\t}\n\tget default_value_serialized() {\n\t\treturn this.default_value;\n\t}\n\tget raw_input_serialized() {\n\t\treturn this._raw_input;\n\t}\n\tget value_serialized() {\n\t\treturn this.value;\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.FOLDER],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.FOLDER]\n\t) {\n\t\treturn true;\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.FOLDER], val2: ParamValuesTypeMap[ParamType.FOLDER]) {\n\t\treturn true;\n\t}\n}\n","import lodash_isNumber from 'lodash/isNumber';\n// import lodash_isBoolean from 'lodash/isBoolean'\n\nimport {TypedNumericParam} from './_Numeric';\nimport {ParamType} from '../poly/ParamType';\nimport {CoreString} from '../../core/String';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\n\nexport class IntegerParam extends TypedNumericParam<ParamType.INTEGER> {\n\tstatic type() {\n\t\treturn ParamType.INTEGER;\n\t}\n\tget default_value_serialized() {\n\t\treturn this.default_value;\n\t}\n\tget raw_input_serialized() {\n\t\treturn this.raw_input;\n\t}\n\tget value_serialized() {\n\t\treturn this.value;\n\t}\n\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.INTEGER],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.INTEGER]\n\t) {\n\t\treturn raw_input1 == raw_input2;\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.INTEGER], val2: ParamValuesTypeMap[ParamType.INTEGER]) {\n\t\treturn val1 == val2;\n\t}\n\tstatic convert(raw_val: ParamInitValuesTypeMap[ParamType.INTEGER]): number | null {\n\t\tif (lodash_isNumber(raw_val)) {\n\t\t\treturn Math.round(raw_val);\n\t\t} else {\n\t\t\tif (CoreString.is_number(raw_val)) {\n\t\t\t\tconst parsed = parseInt(raw_val);\n\t\t\t\tif (lodash_isNumber(parsed)) {\n\t\t\t\t\treturn parsed;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n\tconvert(raw_val: ParamInitValuesTypeMap[ParamType.INTEGER]): number | null {\n\t\tconst result = IntegerParam.convert(raw_val);\n\t\tif (result) {\n\t\t\treturn this.options.ensure_in_range(result);\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n}\n","import {MathUtils} from 'three/src/math/MathUtils';\n\nexport interface RampPointJson {\n\tposition: number;\n\tvalue: number;\n}\nexport interface RampValueJson {\n\tpoints: RampPointJson[];\n\tinterpolation: string;\n}\n\nexport class RampPoint {\n\tconstructor(private _position: number = 0, private _value: number = 0) {}\n\n\tto_json(): RampPointJson {\n\t\treturn {\n\t\t\tposition: this._position,\n\t\t\tvalue: this._value,\n\t\t};\n\t}\n\tget position() {\n\t\treturn this._position;\n\t}\n\tget value() {\n\t\treturn this._value;\n\t}\n\tcopy(point: RampPoint) {\n\t\tthis._position = point.position;\n\t\tthis._value = point.value;\n\t}\n\tclone() {\n\t\tconst point = new RampPoint();\n\t\tpoint.copy(this);\n\t\treturn point;\n\t}\n\tis_equal(other_point: RampPoint) {\n\t\treturn this._position == other_point.position && this._value == other_point.value;\n\t}\n\tis_equal_json(json: RampPointJson) {\n\t\treturn this._position == json.position && this._value == json.value;\n\t}\n\tfrom_json(json: RampPointJson) {\n\t\tthis._position = json.position;\n\t\tthis._value = json.value;\n\t}\n\tstatic are_equal_json(json1: RampPointJson, json2: RampPointJson) {\n\t\treturn json1.position == json2.position && json1.value == json2.value;\n\t}\n\tstatic from_json(json: RampPointJson) {\n\t\treturn new RampPoint(json.position, json.value);\n\t}\n}\n\nexport enum RampInterpolation {\n\tLINEAR = 'linear',\n}\nexport class RampValue {\n\tprivate _uuid: string;\n\n\tconstructor(private _interpolation: string = RampInterpolation.LINEAR, private _points: RampPoint[] = []) {\n\t\tthis._uuid = MathUtils.generateUUID();\n\t}\n\n\tget uuid() {\n\t\treturn this._uuid;\n\t}\n\tget interpolation() {\n\t\treturn this._interpolation;\n\t}\n\tget points() {\n\t\treturn this._points;\n\t}\n\tstatic from_json(json: RampValueJson): RampValue {\n\t\tconst points = [];\n\t\tfor (let json_point of json.points) {\n\t\t\tpoints.push(RampPoint.from_json(json_point));\n\t\t}\n\t\treturn new RampValue(json.interpolation, points);\n\t}\n\tto_json(): RampValueJson {\n\t\treturn {\n\t\t\tinterpolation: this._interpolation,\n\t\t\tpoints: this._points.map((p) => p.to_json()),\n\t\t};\n\t}\n\tclone(): RampValue {\n\t\tconst ramp = new RampValue();\n\t\tramp.copy(this);\n\t\treturn ramp;\n\t}\n\tcopy(ramp: RampValue) {\n\t\tthis._interpolation = ramp.interpolation;\n\t\tlet index = 0;\n\t\tfor (let point of ramp.points) {\n\t\t\tconst current_point = this._points[index];\n\t\t\tif (current_point) {\n\t\t\t\tcurrent_point.copy(point);\n\t\t\t} else {\n\t\t\t\tthis._points.push(point.clone());\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t}\n\n\tis_equal(other_ramp_value: RampValue): boolean {\n\t\tif (this._interpolation != other_ramp_value.interpolation) {\n\t\t\treturn false;\n\t\t}\n\t\tconst other_points = other_ramp_value.points;\n\t\tif (this._points.length != other_points.length) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (let point of this._points) {\n\t\t\tconst other_point = other_points[index];\n\t\t\tif (!point.is_equal(other_point)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\n\t\treturn true;\n\t}\n\tis_equal_json(json: RampValueJson) {\n\t\tif (this._interpolation != json.interpolation) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._points.length != json.points.length) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (let point of this._points) {\n\t\t\tconst other_point = json.points[index];\n\t\t\tif (!point.is_equal_json(other_point)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t\treturn true;\n\t}\n\tstatic are_json_equal(json1: RampValueJson, json2: RampValueJson) {\n\t\tif (json1.interpolation != json2.interpolation) {\n\t\t\treturn false;\n\t\t}\n\t\tif (json1.points.length != json2.points.length) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index = 0;\n\t\tfor (let point1 of json1.points) {\n\t\t\tconst point2 = json2.points[index];\n\t\t\tif (!RampPoint.are_equal_json(point1, point2)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t\treturn true;\n\t}\n\tfrom_json(json: RampValueJson) {\n\t\tthis._interpolation = json.interpolation;\n\n\t\tlet index = 0;\n\t\tfor (let json_point of json.points) {\n\t\t\tconst current_point = this._points[index];\n\t\t\tif (current_point) {\n\t\t\t\tcurrent_point.from_json(json_point);\n\t\t\t} else {\n\t\t\t\tthis._points.push(RampPoint.from_json(json_point));\n\t\t\t}\n\t\t\tindex += 1;\n\t\t}\n\t}\n}\n","import {TypedParam} from './_Base';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nexport class SeparatorParam extends TypedParam<ParamType.SEPARATOR> {\n\tstatic type() {\n\t\treturn ParamType.SEPARATOR;\n\t}\n\tget default_value_serialized() {\n\t\treturn this.default_value;\n\t}\n\tget raw_input_serialized() {\n\t\treturn this._raw_input;\n\t}\n\tget value_serialized() {\n\t\treturn this.value;\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.SEPARATOR],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.SEPARATOR]\n\t) {\n\t\treturn true;\n\t}\n\tstatic are_values_equal(\n\t\tval1: ParamValuesTypeMap[ParamType.SEPARATOR],\n\t\tval2: ParamValuesTypeMap[ParamType.SEPARATOR]\n\t) {\n\t\treturn true;\n\t}\n}\n","import {TypedMultipleParam} from './_Multiple';\n\nimport lodash_isArray from 'lodash/isArray';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {ParamType} from '../poly/ParamType';\nimport {FloatParam} from './Float';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nconst COMPONENT_NAMES_VECTOR2 = ['x', 'y'];\nexport class Vector2Param extends TypedMultipleParam<ParamType.VECTOR2> {\n\tprotected _value = new Vector2();\n\tx!: FloatParam;\n\ty!: FloatParam;\n\tstatic type() {\n\t\treturn ParamType.VECTOR2;\n\t}\n\n\tstatic get component_names() {\n\t\treturn COMPONENT_NAMES_VECTOR2;\n\t}\n\tget default_value_serialized() {\n\t\tif (lodash_isArray(this.default_value)) {\n\t\t\treturn this.default_value;\n\t\t} else {\n\t\t\treturn this.default_value.toArray() as Number2;\n\t\t}\n\t}\n\t// get raw_input_serialized() {\n\t// \tif (this._raw_input instanceof Vector2) {\n\t// \t\treturn this._raw_input.toArray() as Number2;\n\t// \t} else {\n\t// \t\tconst new_array: StringOrNumber2 = [this._raw_input[0], this._raw_input[1]];\n\t// \t\treturn new_array;\n\t// \t}\n\t// }\n\tget value_serialized() {\n\t\treturn this.value.toArray() as Number2;\n\t}\n\tprotected _clone_raw_input(raw_input: ParamInitValuesTypeMap[ParamType.VECTOR2]) {\n\t\tif (raw_input instanceof Vector2) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\tconst new_array: StringOrNumber2 = [raw_input[0], raw_input[1]];\n\t\t\treturn new_array;\n\t\t}\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.VECTOR2],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.VECTOR2]\n\t) {\n\t\tif (raw_input1 instanceof Vector2) {\n\t\t\tif (raw_input2 instanceof Vector2) {\n\t\t\t\treturn raw_input1.equals(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn raw_input1.x == raw_input2[0] && raw_input1.y == raw_input2[1];\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof Vector2) {\n\t\t\t\treturn raw_input1[0] == raw_input2.x && raw_input1[1] == raw_input2.y;\n\t\t\t} else {\n\t\t\t\treturn raw_input1[0] == raw_input2[0] && raw_input1[1] == raw_input2[1];\n\t\t\t}\n\t\t}\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.VECTOR2], val2: ParamValuesTypeMap[ParamType.VECTOR2]) {\n\t\treturn val1.equals(val2);\n\t}\n\tinit_components() {\n\t\tsuper.init_components();\n\t\tthis.x = this.components[0];\n\t\tthis.y = this.components[1];\n\t}\n\n\tset_value_from_components() {\n\t\tthis._value.x = this.x.value;\n\t\tthis._value.y = this.y.value;\n\t}\n\t// convert(input: any) {\n\t// \tif (lodash_isArray(input)) {\n\t// \t\treturn new Vector2().fromArray(input);\n\t// \t}\n\t// \treturn new Vector2();\n\t// }\n}\n","import {TypedMultipleParam} from './_Multiple';\nimport lodash_isArray from 'lodash/isArray';\n// import lodash_isNumber from 'lodash/isNumber';\nimport {FloatParam} from './Float';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {ParamType} from '../poly/ParamType';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n// import {ParamInitValuesTypeMap} from '../nodes/utils/params/ParamsController';\n\nconst COMPONENT_NAMES_VECTOR3 = ['x', 'y', 'z'];\nexport class Vector3Param extends TypedMultipleParam<ParamType.VECTOR3> {\n\tprotected _value = new Vector3();\n\tx!: FloatParam;\n\ty!: FloatParam;\n\tz!: FloatParam;\n\tstatic type() {\n\t\treturn ParamType.VECTOR3;\n\t}\n\tstatic get component_names() {\n\t\treturn COMPONENT_NAMES_VECTOR3;\n\t}\n\tget default_value_serialized() {\n\t\tif (lodash_isArray(this.default_value)) {\n\t\t\treturn this.default_value;\n\t\t} else {\n\t\t\treturn this.default_value.toArray() as Number3;\n\t\t}\n\t}\n\t// get raw_input_serialized() {\n\t// \tif (this._raw_input instanceof Vector3) {\n\t// \t\treturn this._raw_input.toArray() as Number3;\n\t// \t} else {\n\t// \t\tconst new_array: StringOrNumber3 = [this._raw_input[0], this._raw_input[1], this._raw_input[2]];\n\t// \t\treturn new_array;\n\t// \t}\n\t// }\n\tget value_serialized() {\n\t\treturn this.value.toArray() as Number3;\n\t}\n\tprotected _clone_raw_input(raw_input: ParamInitValuesTypeMap[ParamType.VECTOR3]) {\n\t\tif (raw_input instanceof Vector3) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\tconst new_array: StringOrNumber3 = [raw_input[0], raw_input[1], raw_input[2]];\n\t\t\treturn new_array;\n\t\t}\n\t}\n\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.VECTOR3],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.VECTOR3]\n\t) {\n\t\tif (raw_input1 instanceof Vector3) {\n\t\t\tif (raw_input2 instanceof Vector3) {\n\t\t\t\treturn raw_input1.equals(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn raw_input1.x == raw_input2[0] && raw_input1.y == raw_input2[1] && raw_input1.z == raw_input2[2];\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof Vector3) {\n\t\t\t\treturn raw_input1[0] == raw_input2.x && raw_input1[1] == raw_input2.y && raw_input1[2] == raw_input2.z;\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\traw_input1[0] == raw_input2[0] && raw_input1[1] == raw_input2[1] && raw_input1[2] == raw_input2[2]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.VECTOR3], val2: ParamValuesTypeMap[ParamType.VECTOR3]) {\n\t\treturn val1.equals(val2);\n\t}\n\tinit_components() {\n\t\tsuper.init_components();\n\t\tthis.x = this.components[0];\n\t\tthis.y = this.components[1];\n\t\tthis.z = this.components[2];\n\t}\n\n\t// set_raw_input_from_components() {\n\t// \tif (this._raw_input instanceof Vector3) {\n\t// \t\tif (\n\t// \t\t\tlodash_isNumber(this.x.raw_input) &&\n\t// \t\t\tlodash_isNumber(this.y.raw_input) &&\n\t// \t\t\tlodash_isNumber(this.z.raw_input)\n\t// \t\t) {\n\t// \t\t\tthis._raw_input.x = this.x.raw_input;\n\t// \t\t\tthis._raw_input.y = this.y.raw_input;\n\t// \t\t\tthis._raw_input.z = this.z.raw_input;\n\t// \t\t} else {\n\t// \t\t\tthis._raw_input = [this.x.raw_input, this.y.raw_input, this.z.raw_input];\n\t// \t\t}\n\t// \t} else {\n\t// \t\tthis._raw_input[0] = this.x.raw_input;\n\t// \t\tthis._raw_input[1] = this.y.raw_input;\n\t// \t\tthis._raw_input[2] = this.z.raw_input;\n\t// \t}\n\t// }\n\tset_value_from_components() {\n\t\tthis._value.x = this.x.value;\n\t\tthis._value.y = this.y.value;\n\t\tthis._value.z = this.z.value;\n\t}\n\t// convert(input: ParamInitValuesTypeMap[ParamType.VECTOR3]) {\n\t// \tif (lodash_isArray(input)) {\n\t// \t\treturn new Vector3().fromArray(input);\n\t// \t}\n\t// \treturn new Vector3();\n\t// }\n}\n","import {TypedMultipleParam} from './_Multiple';\n\nimport lodash_isArray from 'lodash/isArray';\nimport {Vector4} from 'three/src/math/Vector4';\nimport {ParamType} from '../poly/ParamType';\nimport {FloatParam} from './Float';\nimport {ParamValuesTypeMap} from './types/ParamValuesTypeMap';\nimport {ParamInitValuesTypeMap} from './types/ParamInitValuesTypeMap';\n\nconst COMPONENT_NAMES_VECTOR4 = ['x', 'y', 'z', 'w'];\nexport class Vector4Param extends TypedMultipleParam<ParamType.VECTOR4> {\n\tprotected _value = new Vector4();\n\tx!: FloatParam;\n\ty!: FloatParam;\n\tz!: FloatParam;\n\tw!: FloatParam;\n\tstatic type() {\n\t\treturn ParamType.VECTOR4;\n\t}\n\tstatic get component_names() {\n\t\treturn COMPONENT_NAMES_VECTOR4;\n\t}\n\tget default_value_serialized() {\n\t\tif (lodash_isArray(this.default_value)) {\n\t\t\treturn this.default_value;\n\t\t} else {\n\t\t\treturn this.default_value.toArray() as Number4;\n\t\t}\n\t}\n\t// get raw_input_serialized() {\n\t// \tif (this._raw_input instanceof Vector4) {\n\t// \t\treturn this._raw_input.toArray() as Number4;\n\t// \t} else {\n\t// \t\tconst new_array: StringOrNumber4 = [\n\t// \t\t\tthis._raw_input[0],\n\t// \t\t\tthis._raw_input[1],\n\t// \t\t\tthis._raw_input[2],\n\t// \t\t\tthis._raw_input[3],\n\t// \t\t];\n\t// \t\treturn new_array;\n\t// \t}\n\t// }\n\tget value_serialized() {\n\t\treturn this.value.toArray() as Number4;\n\t}\n\n\tprotected _clone_raw_input(raw_input: ParamInitValuesTypeMap[ParamType.VECTOR4]) {\n\t\tif (raw_input instanceof Vector4) {\n\t\t\treturn raw_input.clone();\n\t\t} else {\n\t\t\tconst new_array: StringOrNumber4 = [raw_input[0], raw_input[1], raw_input[2], raw_input[3]];\n\t\t\treturn new_array;\n\t\t}\n\t}\n\tstatic are_raw_input_equal(\n\t\traw_input1: ParamInitValuesTypeMap[ParamType.VECTOR4],\n\t\traw_input2: ParamInitValuesTypeMap[ParamType.VECTOR4]\n\t) {\n\t\tif (raw_input1 instanceof Vector4) {\n\t\t\tif (raw_input2 instanceof Vector4) {\n\t\t\t\treturn raw_input1.equals(raw_input2);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\traw_input1.x == raw_input2[0] &&\n\t\t\t\t\traw_input1.y == raw_input2[1] &&\n\t\t\t\t\traw_input1.z == raw_input2[2] &&\n\t\t\t\t\traw_input1.w == raw_input2[3]\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (raw_input2 instanceof Vector4) {\n\t\t\t\treturn (\n\t\t\t\t\traw_input1[0] == raw_input2.x &&\n\t\t\t\t\traw_input1[1] == raw_input2.y &&\n\t\t\t\t\traw_input1[2] == raw_input2.z &&\n\t\t\t\t\traw_input1[3] == raw_input2.w\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\traw_input1[0] == raw_input2[0] &&\n\t\t\t\t\traw_input1[1] == raw_input2[1] &&\n\t\t\t\t\traw_input1[2] == raw_input2[2] &&\n\t\t\t\t\traw_input1[3] == raw_input2[3]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tstatic are_values_equal(val1: ParamValuesTypeMap[ParamType.VECTOR4], val2: ParamValuesTypeMap[ParamType.VECTOR4]) {\n\t\treturn val1.equals(val2);\n\t}\n\tinit_components() {\n\t\tsuper.init_components();\n\t\tthis.x = this.components[0];\n\t\tthis.y = this.components[1];\n\t\tthis.z = this.components[2];\n\t\tthis.w = this.components[3];\n\t}\n\n\tset_value_from_components() {\n\t\tthis._value.x = this.x.value;\n\t\tthis._value.y = this.y.value;\n\t\tthis._value.z = this.z.value;\n\t\tthis._value.w = this.w.value;\n\t}\n\t// convert(input: any) {\n\t// \tif (lodash_isArray(input)) {\n\t// \t\treturn new Vector4().fromArray(input);\n\t// \t}\n\t// \treturn new Vector4();\n\t// }\n}\n","import {NodeParamsConfig} from './ParamsConfig';\n// import {ParamValuesTypeMap} from './ParamsController';\n// import {ParamType} from '../../../poly/ParamType';\n\n// function getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n// \treturn o[propertyName]; // o[propertyName] is of type T[K]\n// }\n\n// let t: getProperty(ParamConfig, 'type')\n// function prop<T, K extends keyof T>(obj: T, key: K) {\n// \treturn typeof obj[key];\n// }\n// type test = Pick<ParamConfig<ParamType.FLOAT>, 'default_value'>;\n\nexport type ParamsValueAccessorType<T extends NodeParamsConfig> = {\n\treadonly [P in keyof T]: T[P]['value_type'];\n};\n\nexport class ParamsValueAccessor<T extends NodeParamsConfig> {\n\tconstructor() {\n\t\t// console.log('accessor', this);\n\t}\n}\n","import {BaseNodeType} from '../_Base';\n\nexport class ProcessingContext {\n\tprivate _frame: number = 0;\n\tconstructor(node: BaseNodeType) {}\n\tcopy(src_context: ProcessingContext) {\n\t\tthis._frame = src_context.frame;\n\t}\n\tget frame() {\n\t\treturn this._frame;\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\n\nimport {ConnectionsController} from './ConnectionsController';\nimport {InputsController} from './InputsController';\nimport {OutputsController} from './OutputsController';\n\nexport class IOController<T extends BaseNodeType> {\n\tprotected _connections: ConnectionsController = new ConnectionsController(this.node);\n\tprotected _inputs: InputsController<T> | undefined;\n\tprotected _outputs: OutputsController<T> | undefined;\n\n\tconstructor(protected node: T) {}\n\n\t// add_connections_controller() {\n\t// \tthis._connections =\n\t// }\n\tget connections() {\n\t\treturn this._connections;\n\t}\n\n\t// inputs\n\t// init_inputs(options: InputsControllerOptions) {\n\t// \tthis.inputs.set_options(options);\n\t// }\n\tget inputs(): InputsController<T> {\n\t\treturn (this._inputs = this._inputs || new InputsController<T>(this.node));\n\t}\n\thas_inputs() {\n\t\treturn this._inputs != null;\n\t}\n\n\t// outputs\n\t// init_outputs() {\n\t// \tthis._outputs = this._outputs || new OutputsController(this.node);\n\t// }\n\tget outputs(): OutputsController<T> {\n\t\treturn (this._outputs = this._outputs || new OutputsController<T>(this.node));\n\t}\n\thas_outputs() {\n\t\treturn this._outputs != null;\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\nimport lodash_compact from 'lodash/compact';\nimport {NodeConnection} from './NodeConnection';\n\n// interface NodeConnectionByString {\n// \t[propName: string]: NodeConnection;\n// }\n// interface NodeConnectionByStringByString {\n// \t[propName: string]: NodeConnectionByString;\n// }\n\nexport class ConnectionsController {\n\tprivate _input_connections: Array<NodeConnection | undefined> | undefined;\n\tprivate _output_connections: Map<number, Map<number, NodeConnection>> = new Map();\n\n\tconstructor(protected _node: BaseNodeType) {}\n\n\tinit_inputs() {\n\t\tconst count = this._node.io.inputs.max_inputs_count;\n\t\tthis._input_connections = new Array(count);\n\t}\n\n\t//\n\t//\n\t// INPUT CONNECTIONS\n\t//\n\t//\n\tadd_input_connection(connection: NodeConnection) {\n\t\tif (this._input_connections) {\n\t\t\t// if (connection.input_index < this._input_connections.length) {\n\t\t\tthis._input_connections[connection.input_index] = connection;\n\t\t\t// } else {\n\t\t\t// \tconsole.warn(`attempt to add an input connection at index ${connection.input_index}`);\n\t\t\t// }\n\t\t} else {\n\t\t\tconsole.warn(`input connections array not initialized`);\n\t\t}\n\t}\n\tremove_input_connection(connection: NodeConnection) {\n\t\tif (this._input_connections) {\n\t\t\tif (connection.input_index < this._input_connections.length) {\n\t\t\t\tthis._input_connections[connection.input_index] = undefined;\n\t\t\t\t// if all connections after are also undefined, we can safely shrink the array\n\t\t\t\tlet all_connections_after_are_undefined = true;\n\t\t\t\tfor (let i = connection.input_index; i < this._input_connections.length; i++) {\n\t\t\t\t\tif (this._input_connections[i]) {\n\t\t\t\t\t\tall_connections_after_are_undefined = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (all_connections_after_are_undefined) {\n\t\t\t\t\tthis._input_connections = this._input_connections.slice(0, connection.input_index);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn(`attempt to remove an input connection at index ${connection.input_index}`);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(`input connections array not initialized`);\n\t\t}\n\t}\n\tinput_connection(index: number): NodeConnection | undefined {\n\t\tif (this._input_connections) {\n\t\t\treturn this._input_connections[index];\n\t\t}\n\t}\n\tfirst_input_connection(): NodeConnection {\n\t\treturn lodash_compact(this._input_connections)[0];\n\t}\n\t// last_input_connection(): NodeConnection {\n\t// \tconst connections = lodash_compact(this._input_connections);\n\t// \treturn connections[connections.length - 1];\n\t// }\n\tinput_connections() {\n\t\treturn this._input_connections;\n\t}\n\n\t//\n\t//\n\t// OUTPUT CONNECTIONS\n\t//\n\t//\n\tadd_output_connection(connection: NodeConnection) {\n\t\tconst output_index = connection.output_index;\n\t\tconst id = connection.id;\n\t\tlet connections_by_id = this._output_connections.get(output_index);\n\t\tif (!connections_by_id) {\n\t\t\tconnections_by_id = new Map<number, NodeConnection>();\n\t\t\tthis._output_connections.set(output_index, connections_by_id);\n\t\t}\n\t\tconnections_by_id.set(id, connection);\n\t\t// this._output_connections[output_index] = this._output_connections[output_index] || {};\n\t\t// this._output_connections[output_index][id] = connection;\n\t}\n\tremove_output_connection(connection: NodeConnection) {\n\t\tconst output_index = connection.output_index;\n\t\tconst id = connection.id;\n\t\tlet connections_by_id = this._output_connections.get(output_index);\n\t\tif (connections_by_id) {\n\t\t\tconnections_by_id.delete(id);\n\t\t}\n\t\t// delete this._output_connections[output_index][id];\n\t}\n\n\toutput_connections() {\n\t\tlet list: NodeConnection[] = [];\n\n\t\tthis._output_connections.forEach((connections_by_id, output_index) => {\n\t\t\tconnections_by_id.forEach((connection, id) => {\n\t\t\t\tif (connection) {\n\t\t\t\t\tlist.push(connection);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t// Object.keys(this._output_connections).forEach((index) => {\n\t\t// \tconst connections_for_index = this._output_connections[index];\n\t\t// \tObject.keys(connections_for_index).forEach((id) => {\n\t\t// \t\tlist.push(connections_for_index[id]);\n\t\t// \t});\n\t\t// });\n\t\treturn list;\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\nimport {BaseContainer} from '../../../containers/_Base';\n// import lodash_includes from 'lodash/includes'\n// import lodash_filter from 'lodash/filter'\nimport lodash_each from 'lodash/each';\nimport lodash_isString from 'lodash/isString';\n// import lodash_compact from 'lodash/compact'\nimport {BaseNamedConnectionPointType} from './NamedConnectionPoint';\nimport {NodeConnection} from './NodeConnection';\n\nimport {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\nimport {NodeEvent} from '../../../poly/NodeEvent';\nimport {InputCloneMode} from '../../../poly/InputCloneMode';\nimport {TypeAssert} from '../../../poly/Assert';\n\n// export class InputGraphNode extends NodeSimple {\n// \tconstructor(name: string) {\n// \t\tsuper(name);\n// \t}\n// }\n\n// export interface InputsControllerOptions {\n// \tmin_inputs?: number;\n// \tmax_inputs?: number;\n// \tdepends_on_inputs?: boolean;\n// }\ntype OnUpdateHook = () => void;\n\n// TODO: remove the \"throw\" statements, which seem less necessary now with typescript\nexport class InputsController<T extends BaseNodeType> {\n\tprivate _graph_node_inputs: CoreGraphNode[] = [];\n\tprivate _inputs: Array<T | null> = [];\n\tprivate _has_named_inputs: boolean = false;\n\t// _input_connections: NodeConnection[] = []\n\tprivate _named_input_connection_points: BaseNamedConnectionPointType[] | undefined;\n\tprivate _min_inputs_count: number = 0;\n\tprivate _max_inputs_count: number = 0;\n\tprivate _depends_on_inputs: boolean = true;\n\n\t// hooks\n\tprivate _on_update_hooks: OnUpdateHook[] | undefined;\n\tprivate _on_update_hook_names: string[] | undefined;\n\n\t// clonable\n\tprivate _user_inputs_clonable_states: InputCloneMode[] | undefined;\n\tprivate _inputs_clonable_states: InputCloneMode[] | undefined;\n\tprivate _override_clonable_state: boolean = false;\n\n\tconstructor(protected node: T) {\n\t\t//, options: InputsControllerOptions = {}) {\n\t\t// this.set_options(options);\n\t}\n\n\t// set_options(options: InputsControllerOptions) {\n\t// \tif (options['min_inputs']) {\n\t// \t\tthis.set_min_inputs_count(options['min_inputs']);\n\t// \t}\n\t// \tif (options['max_inputs']) {\n\t// \t\tthis.set_max_inputs_count(options['max_inputs']);\n\t// \t}\n\t// \tif (options['depends_on_inputs']) {\n\t// \t\tthis.set_depends_on_inputs(options['depends_on_inputs']);\n\t// \t}\n\t// }\n\n\t// _init_inputs() {\n\t// \tthis._inputs = [];\n\t// }\n\tset_depends_on_inputs(depends_on_inputs: boolean) {\n\t\tthis._depends_on_inputs = depends_on_inputs;\n\t}\n\tprivate set_min_inputs_count(min_inputs_count: number) {\n\t\tthis._min_inputs_count = min_inputs_count;\n\t}\n\t// min_inputs_count() {\n\t// \treturn this._min_inputs_count || 0;\n\t// }\n\tprivate set_max_inputs_count(max_inputs_count: number) {\n\t\tthis._max_inputs_count = max_inputs_count;\n\t\tthis.init_graph_node_inputs();\n\t}\n\n\tnamed_input_connection_points_by_name(name: string): BaseNamedConnectionPointType | undefined {\n\t\tif (this._named_input_connection_points) {\n\t\t\tfor (let connection_point of this._named_input_connection_points) {\n\t\t\t\tif (connection_point.name == name) {\n\t\t\t\t\treturn connection_point;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tset_named_input_connection_points(connection_points: BaseNamedConnectionPointType[]) {\n\t\tthis._has_named_inputs = true;\n\t\tthis._named_input_connection_points = connection_points;\n\t\tthis.set_min_inputs_count(0);\n\t\tthis.set_max_inputs_count(connection_points.length);\n\t\tthis.init_graph_node_inputs();\n\t\tthis.node.emit(NodeEvent.NAMED_INPUTS_UPDATED);\n\t}\n\tget has_named_inputs() {\n\t\treturn this._has_named_inputs;\n\t}\n\tget named_input_connection_points(): BaseNamedConnectionPointType[] {\n\t\treturn this._named_input_connection_points || [];\n\t}\n\tprivate init_graph_node_inputs() {\n\t\tfor (let i = 0; i < this._max_inputs_count; i++) {\n\t\t\tthis._graph_node_inputs[i] = this._graph_node_inputs[i] || this._create_graph_node_input(i);\n\t\t}\n\t}\n\tprivate _create_graph_node_input(index: number): CoreGraphNode {\n\t\tconst graph_input_node = new CoreGraphNode(this.node.scene, `input_${index}`);\n\t\t// graph_input_node.set_scene(this.node.scene);\n\t\tthis.node.add_graph_input(graph_input_node);\n\t\treturn graph_input_node;\n\t}\n\n\tget max_inputs_count(): number {\n\t\treturn this._max_inputs_count || 0;\n\t}\n\tinput_graph_node(input_index: number): CoreGraphNode {\n\t\treturn this._graph_node_inputs[input_index];\n\t}\n\n\t// set_count_to_zero() {\n\t// \tthis.set_min_inputs_count(0);\n\t// \tthis.set_max_inputs_count(0);\n\n\t// \tthis.init_inputs_clonable_state();\n\t// }\n\t// set_count_to_one_max() {\n\t// \tthis.set_min_inputs_count(0);\n\t// \tthis.set_max_inputs_count(1);\n\n\t// \tthis.init_inputs_clonable_state();\n\t// }\n\tset_count(min: number, max?: number) {\n\t\tif (max == null) {\n\t\t\tmax = min;\n\t\t}\n\t\tthis.set_min_inputs_count(min);\n\t\tthis.set_max_inputs_count(max);\n\n\t\tthis.init_inputs_clonable_state();\n\t\tthis.init_connections_controller_inputs();\n\t}\n\tprivate init_connections_controller_inputs() {\n\t\tthis.node.io.connections.init_inputs();\n\t}\n\t// requires_two_inputs: ->\n\t// \tthis.set_min_inputs_count(2)\n\t// \tthis.set_max_inputs_count(2)\n\n\t// requires_one_input() {\n\t// \treturn this._min_inputs_count > 0;\n\t// }\n\n\t// eval_required_inputs(callback){\n\t// \tconst containers = [];\n\t// \tif (this._max_inputs_count === 0) {\n\t// \t\treturn callback(containers);\n\t// \t} else {\n\t// \t\tconst existing_inputs = lodash_compact(this.inputs());\n\t// \t\tif (existing_inputs.length < this._min_inputs_count) {\n\t// \t\t\treturn this.self.set_error(\"inputs are missing\");\n\t// \t\t} else {\n\t// \t\t\t// const frame = this.self.context().frame();\n\t// \t\t\t// const full_path = this.self.full_path();\n\n\t// \t\t\tswitch (existing_inputs.length) {\n\t// \t\t\t\tcase 0:\n\t// \t\t\t\t\treturn callback(containers);\n\t// \t\t\t\tcase 1:\n\t// \t\t\t\t\treturn this.eval_required_input(0, container=> {\n\t// \t\t\t\t\t\tcontainers.push(container);\n\t// \t\t\t\t\t\treturn callback(containers);\n\t// \t\t\t\t\t});\n\t// \t\t\t\tcase 2:\n\t// \t\t\t\t\treturn this.eval_required_input(0, container0=> {\n\t// \t\t\t\t\t\treturn this.eval_required_input(1, container1=> {\n\t// \t\t\t\t\t\t\tcontainers.push(container0);\n\t// \t\t\t\t\t\t\tcontainers.push(container1);\n\t// \t\t\t\t\t\t\treturn callback(containers);\n\t// \t\t\t\t\t\t});\n\t// \t\t\t\t\t});\n\t// \t\t\t\t\t// TODO: I could also here check if the inputs are dirty\n\t// \t\t\t\t\t// instead of going through the callback chain\n\t// \t\t\t\t\t// input_node0 = this.input(0)\n\t// \t\t\t\t\t// input_node0.context().set_frame(frame, full_path)\n\t// \t\t\t\t\t// input_node0.request_container (container0)=>\n\t// \t\t\t\t\t// \tinput_node1 = this.input(1)\n\t// \t\t\t\t\t// \tinput_node1.context().set_frame(frame, full_path)\n\t// \t\t\t\t\t// \tinput_node1.request_container (container1)=>\n\t// \t\t\t\t\t// \t\tcontainers.push(container0)\n\t// \t\t\t\t\t// \t\tcontainers.push(container1)\n\t// \t\t\t\t\t// \t\tcallback([container0, container1])\n\t// \t\t\t\tdefault:\n\t// \t\t\t\t\tconsole.warn(`${this.self.full_path()} inputs not evaluated`);\n\t// \t\t\t\t\treturn callback();\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\tasync eval_required_inputs_p() {\n\t\tlet containers: Array<BaseContainer | null> = [];\n\t\tif (this._max_inputs_count > 0) {\n\t\t\tconst existing_input_indices: number[] = [];\n\t\t\tthis.inputs().forEach((input, i) => {\n\t\t\t\tif (input) {\n\t\t\t\t\texisting_input_indices.push(i);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// const existing_inputs = lodash_compact(this.inputs());\n\t\t\tif (existing_input_indices.length < this._min_inputs_count) {\n\t\t\t\tthis.node.states.error.set('inputs are missing');\n\t\t\t} else {\n\t\t\t\tif (existing_input_indices.length > 0) {\n\t\t\t\t\tconst promises = existing_input_indices.map((input_index) => {\n\t\t\t\t\t\treturn this.node.io.inputs.eval_required_input(input_index);\n\t\t\t\t\t});\n\t\t\t\t\tcontainers = await Promise.all(promises);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn containers;\n\t}\n\t// eval_required_input(input_index: number, callback){\n\t// \treturn this.self.request_input_container(input_index, container=> {\n\t// \t\t// we do not clone here, as we just check if a group is present\n\t// \t\tlet group;\n\t// \t\tif ((container != null) && ((group = container.object({clone: false})) != null)) {\n\t// \t\t\treturn callback(container);\n\t// \t\t} else {\n\t// \t\t\tconst input_node = this.input(input_index);\n\t// \t\t\tif (input_node != null) {\n\t// \t\t\t\tconst input_error_message = input_node.error_message();\n\t// \t\t\t\treturn this.self.set_error(`input ${input_index} is invalid (error: ${input_error_message})`);\n\t// \t\t\t}\n\t// \t\t}\n\t// \t});\n\t// }\n\tasync eval_required_input(input_index: number) {\n\t\tconst container = await this.node.container_controller.request_input_container(input_index);\n\t\t// we do not clone here, as we just check if a group is present\n\t\tif (container && container.core_content()) {\n\t\t\t// return container;\n\t\t} else {\n\t\t\tconst input_node = this.input(input_index);\n\t\t\tif (input_node) {\n\t\t\t\tconst input_error_message = input_node.states.error.message;\n\t\t\t\tif (input_error_message) {\n\t\t\t\t\tthis.node.states.error.set(`input ${input_index} is invalid (error: ${input_error_message})`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn container;\n\t}\n\t// protected _get_named_input_index_without_error(name: string): number {\n\t// \tconst connections = this.named_input_connections;\n\t// \tlet index = -1;\n\t// \tfor (let i = 0; i < connections.length; i++) {\n\t// \t\tconst connection = connections[i];\n\t// \t\tif (connection.name == name) {\n\t// \t\t\treturn i;\n\t// \t\t}\n\t// \t}\n\t// \treturn index;\n\t// }\n\tget_named_input_index(name: string): number {\n\t\tif (this._named_input_connection_points) {\n\t\t\tfor (let i = 0; i < this._named_input_connection_points.length; i++) {\n\t\t\t\tif (this._named_input_connection_points[i].name == name) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t\t// const index = this._get_named_input_index_without_error(name);\n\t\t// if (index == null) {\n\t\t// \tconst connections = this.named_input_connections;\n\t\t// \tconst available_names = connections.map((o) => o.name).join(', ');\n\t\t// \tconsole.log('named_input_connections', connections);\n\t\t// \tthrow new Error(\n\t\t// \t\t`${this.node.full_path()}: no inputs named '${name}'. available names are '${available_names}' (${\n\t\t// \t\t\tconnections.length\n\t\t// \t\t} inputs)`\n\t\t// \t);\n\t\t// }\n\t\t// return index;\n\t}\n\tget_input_index(input_index_or_name: number | string): number {\n\t\tif (lodash_isString(input_index_or_name)) {\n\t\t\tif (this.has_named_inputs) {\n\t\t\t\treturn this.get_named_input_index(input_index_or_name);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`node ${this.node.full_path()} has no named inputs`);\n\t\t\t}\n\t\t} else {\n\t\t\treturn input_index_or_name;\n\t\t}\n\t}\n\n\tset_input(input_index_or_name: number | string, node: T | null, output_index_or_name: number | string = 0) {\n\t\tconst input_index = this.get_input_index(input_index_or_name) || 0;\n\t\tif (input_index < 0) {\n\t\t\tconst message = `invalid input (${input_index_or_name}) for node ${this.node.full_path()}`;\n\t\t\tconsole.warn(message);\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\tlet output_index = 0;\n\t\tif (node) {\n\t\t\tif (node.io.outputs.has_named_outputs) {\n\t\t\t\t// if(node.has_named_output(output_index_or_name)){\n\t\t\t\toutput_index = node.io.outputs.get_output_index(output_index_or_name);\n\t\t\t\tif (output_index == null || output_index < 0) {\n\t\t\t\t\tconsole.warn(`node ${node.full_path()} does not have an output named ${output_index_or_name}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// this seems to prevent connecting output 1 from a vec to float to something else\n\t\t\t\t// } else {\n\t\t\t\t// \tconsole.warn(`${node.full_path()} has no output '${output_index_or_name}'`)\n\t\t\t\t// }\n\t\t\t}\n\t\t}\n\n\t\tconst graph_input_node = this._graph_node_inputs[input_index];\n\t\tif (graph_input_node == null) {\n\t\t\tconst message = `graph_input_node not found at index ${input_index}`;\n\t\t\tconsole.warn(message);\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\tif (node && this.node.parent != node.parent) {\n\t\t\treturn;\n\t\t}\n\t\t// use the name if the node is either not defined or in another parent\n\t\t// const parent = this.self.parent()\n\t\t// if ((node == null) || (node.parent().graph_node_id !== parent.graph_node_id)) {\n\t\t// \tif (node_name != null) {\n\t\t// \t\tnode = parent.node(node_name);\n\t\t// \t}\n\t\t// }\n\n\t\tconst old_input_node = this._inputs[input_index];\n\t\tlet old_output_index: number | null = null;\n\t\tlet old_connection: NodeConnection | undefined = undefined;\n\t\tif (this.node.io.connections) {\n\t\t\told_connection = this.node.io.connections.input_connection(input_index);\n\t\t}\n\t\tif (old_connection) {\n\t\t\told_output_index = old_connection.output_index;\n\t\t}\n\n\t\tif (node !== old_input_node || output_index != old_output_index) {\n\t\t\t// TODO: test: add test to make sure this is necessary\n\t\t\tif (old_input_node != null) {\n\t\t\t\tif (this._depends_on_inputs) {\n\t\t\t\t\tgraph_input_node.remove_graph_input(old_input_node);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (node != null) {\n\t\t\t\tif (graph_input_node.add_graph_input(node)) {\n\t\t\t\t\t// we do test if we can create the graph connection\n\t\t\t\t\t// to ensure we are not in a cyclical graph,\n\t\t\t\t\t// but we delete it right after\n\t\t\t\t\tif (!this._depends_on_inputs) {\n\t\t\t\t\t\tgraph_input_node.remove_graph_input(node);\n\t\t\t\t\t}\n\n\t\t\t\t\t//this._input_connections[input_index] = new NodeConnection(node, this.self, output_index, input_index);\n\t\t\t\t\tif (old_connection) {\n\t\t\t\t\t\told_connection.disconnect({set_input: false});\n\t\t\t\t\t}\n\t\t\t\t\tthis._inputs[input_index] = node;\n\t\t\t\t\tnew NodeConnection(node, this.node, output_index, input_index);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(`cannot connect ${node.full_path()} to ${this.node.full_path()}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._inputs[input_index] = null;\n\t\t\t\tif (old_connection) {\n\t\t\t\t\told_connection.disconnect({set_input: false});\n\t\t\t\t}\n\t\t\t\t// this._input_connections[input_index] = null;\n\t\t\t}\n\n\t\t\tthis._run_on_set_input_hooks();\n\t\t\tgraph_input_node.set_successors_dirty();\n\t\t\t// this.node.set_dirty(node);\n\t\t\tthis.node.emit(NodeEvent.INPUTS_UPDATED);\n\t\t}\n\t}\n\n\tremove_input(node: T) {\n\t\tlodash_each(this.inputs(), (input, index) => {\n\t\t\tif (input != null && node != null) {\n\t\t\t\tif (input.graph_node_id === node.graph_node_id) {\n\t\t\t\t\tthis.set_input(index, null);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tinput(input_index: number): T | null {\n\t\treturn this._inputs[input_index];\n\t}\n\t// TODO: the named_input and named_output API really needs to change\n\tnamed_input(input_name: string): T | null {\n\t\tif (this.has_named_inputs) {\n\t\t\tconst input_index = this.get_input_index(input_name);\n\t\t\treturn this._inputs[input_index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tnamed_input_connection_point(input_name: string): BaseNamedConnectionPointType | undefined {\n\t\tif (this.has_named_inputs && this._named_input_connection_points) {\n\t\t\tconst input_index = this.get_input_index(input_name);\n\t\t\treturn this._named_input_connection_points[input_index];\n\t\t}\n\t}\n\thas_named_input(name: string): boolean {\n\t\treturn this.get_named_input_index(name) >= 0;\n\t}\n\thas_input(input_index: number): boolean {\n\t\treturn this._inputs[input_index] != null;\n\t}\n\tinputs() {\n\t\treturn this._inputs;\n\t}\n\n\t// outputs(): BaseNode[] {\n\t// \treturn lodash_filter(this.self.graph_successors(), successor=> {\n\t// \t\tif (successor.is_a(Node)) {\n\t// \t\t\treturn lodash_includes(successor.inputs(), this.self);\n\t// \t\t}\n\t// \t});\n\t// }\n\n\t// clonable states\n\toverride_clonable_state_allowed() {\n\t\tlet value = false;\n\t\tfor (let state of this.inputs_clonable_state()) {\n\t\t\tif (state == InputCloneMode.FROM_NODE) {\n\t\t\t\tvalue = true;\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tinputs_clonable_state(): InputCloneMode[] {\n\t\treturn (this._inputs_clonable_states = this._inputs_clonable_states || this.init_inputs_clonable_state());\n\t}\n\tinput_cloned(index: number): boolean {\n\t\treturn this.input_clonable_state_with_override(index);\n\t}\n\tinputs_clonable_state_with_override(): boolean[] {\n\t\tconst list = [];\n\t\tconst states = this.inputs_clonable_state();\n\t\tfor (let i = 0; i < states.length; i++) {\n\t\t\tlist.push(this.input_clonable_state_with_override(i));\n\t\t}\n\t\treturn list;\n\t}\n\tinput_clonable_state_with_override(index: number): boolean {\n\t\tconst states = this.inputs_clonable_state();\n\t\t// for (let i = 0; i < states.length; i++) {\n\t\t// TODO: typescript: not sure if this loop was justified\n\t\tconst state = states[index];\n\t\tswitch (state) {\n\t\t\tcase InputCloneMode.ALWAYS:\n\t\t\t\treturn true;\n\t\t\tcase InputCloneMode.NEVER:\n\t\t\t\treturn false;\n\t\t\tcase InputCloneMode.FROM_NODE:\n\t\t\t\treturn !this._override_clonable_state;\n\t\t\t// default:\n\t\t\t// \tthrow new Error('unsupported type');\n\t\t}\n\t\treturn TypeAssert.unreachable(state);\n\t\t// }\n\t}\n\n\tinit_inputs_clonable_state(values: InputCloneMode[] | null = null) {\n\t\tif (values) {\n\t\t\tthis._user_inputs_clonable_states = values;\n\t\t}\n\t\tthis._inputs_clonable_states = this._user_inputs_clonable_states || this._default_inputs_clonale_state_values();\n\n\t\treturn this._inputs_clonable_states;\n\t}\n\tprivate _default_inputs_clonale_state_values() {\n\t\tconst list = [];\n\t\tfor (let i = 0; i < this._max_inputs_count; i++) {\n\t\t\t// lodash_times(this.self._max_inputs_count, (i)=>{\n\t\t\tlist.push(InputCloneMode.ALWAYS);\n\t\t}\n\t\treturn list;\n\t}\n\n\tset_override_clonable_state(state: boolean) {\n\t\tthis._override_clonable_state = state;\n\t\tthis.node.emit(NodeEvent.OVERRIDE_CLONABLE_STATE_UPDATE);\n\t}\n\toverride_clonable_state() {\n\t\treturn this._override_clonable_state;\n\t}\n\n\t//\n\t//\n\t// HOOKS\n\t//\n\t//\n\tadd_on_set_input_hook(name: string, hook: OnUpdateHook) {\n\t\tthis._on_update_hooks = this._on_update_hooks || [];\n\t\tthis._on_update_hook_names = this._on_update_hook_names || [];\n\n\t\tif (!this._on_update_hook_names.includes(name)) {\n\t\t\tthis._on_update_hooks.push(hook);\n\t\t\tthis._on_update_hook_names.push(name);\n\t\t} else {\n\t\t\tconsole.warn(`hook with name ${name} already exists`, this.node);\n\t\t}\n\t}\n\tprivate _run_on_set_input_hooks() {\n\t\tif (this._on_update_hooks) {\n\t\t\tfor (let hook of this._on_update_hooks) {\n\t\t\t\thook();\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\n\ninterface DisconnectionOptions {\n\tset_input?: boolean;\n}\n\nexport class NodeConnection {\n\tprivate static _next_id: number = 0;\n\tprivate _id: number;\n\n\tconstructor(\n\t\tprivate _node_src: BaseNodeType,\n\t\tprivate _node_dest: BaseNodeType,\n\t\tprivate _output_index: number = 0,\n\t\tprivate _input_index: number = 0\n\t) {\n\t\tthis._id = NodeConnection._next_id++;\n\n\t\tif (this._node_src.io.connections && this._node_dest.io.connections) {\n\t\t\tthis._node_src.io.connections.add_output_connection(this);\n\t\t\tthis._node_dest.io.connections.add_input_connection(this);\n\t\t}\n\t}\n\tget id() {\n\t\treturn this._id;\n\t}\n\n\tget node_src() {\n\t\treturn this._node_src;\n\t}\n\tget node_dest() {\n\t\treturn this._node_dest;\n\t}\n\tget output_index() {\n\t\treturn this._output_index;\n\t}\n\tget input_index() {\n\t\treturn this._input_index;\n\t}\n\n\tdisconnect(options: DisconnectionOptions = {}) {\n\t\tif (this._node_src.io.connections && this._node_dest.io.connections) {\n\t\t\tthis._node_src.io.connections.remove_output_connection(this);\n\t\t\tthis._node_dest.io.connections.remove_input_connection(this);\n\t\t}\n\n\t\tif (options.set_input === true) {\n\t\t\tthis._node_dest.io.inputs.set_input(this._input_index, null);\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../../_Base';\nimport {BaseNamedConnectionPointType} from './NamedConnectionPoint';\nimport lodash_isNumber from 'lodash/isNumber';\nimport lodash_uniq from 'lodash/uniq';\nimport lodash_isString from 'lodash/isString';\nimport {NodeEvent} from '../../../poly/NodeEvent';\n\n// interface OutputsOptions {\n// \thas_outputs?: boolean;\n// }\n// TODO: remove the \"throw\" statements, which seem less necessary now with typescript\nexport class OutputsController<T extends BaseNodeType> {\n\tprivate _has_outputs: boolean = false;\n\tprivate _named_output_connection_points: BaseNamedConnectionPointType[] | undefined;\n\tprivate _has_named_outputs: boolean = false;\n\n\tconstructor(private node: T) {}\n\n\t// init(options?: OutputsOptions) {\n\t// \tif (options == null) {\n\t// \t\toptions = {};\n\t// \t}\n\t// \tif (options['has_outputs'] == null) {\n\t// \t\toptions['has_outputs'] = true;\n\t// \t}\n\t// \tthis._has_outputs = options['has_outputs'];\n\t// }\n\tset_has_one_output() {\n\t\tthis._has_outputs = true;\n\t}\n\tset_has_no_output() {\n\t\tthis._has_outputs = false;\n\t}\n\n\tget has_outputs() {\n\t\treturn this._has_outputs;\n\t}\n\tget has_named_outputs() {\n\t\treturn this._has_named_outputs;\n\t}\n\thas_named_output(name: string): boolean {\n\t\t// return this._get_named_output_index_without_error(name) != null;\n\t\treturn this.get_named_output_index(name) >= 0;\n\t}\n\tget named_output_connection_points(): BaseNamedConnectionPointType[] {\n\t\treturn this._named_output_connection_points || [];\n\t}\n\tnamed_output_connection(index: number): BaseNamedConnectionPointType | undefined {\n\t\tif (this._named_output_connection_points) {\n\t\t\treturn this._named_output_connection_points[index];\n\t\t}\n\t}\n\t// protected _get_named_output_index_without_error(name: string): number {\n\t// \tconst connections = this.named_output_connection_points;\n\t// \tfor (let i = 0; i < connections.length; i++) {\n\t// \t\tconst connection = connections[i];\n\t// \t\tif (connection.name == name) {\n\t// \t\t\treturn i;\n\t// \t\t}\n\t// \t}\n\t// \treturn -1;\n\t// }\n\tget_named_output_index(name: string): number {\n\t\tif (this._named_output_connection_points) {\n\t\t\tfor (let i = 0; i < this._named_output_connection_points.length; i++) {\n\t\t\t\tif (this._named_output_connection_points[i].name == name) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\n\t\t// const index = this._get_named_output_index_without_error(name);\n\t\t// if (index == null) {\n\t\t// \tconst connection_points = this.named_output_connection_points;\n\t\t// \tconst available_names = connection_points.map((o) => o.name).join(', ');\n\t\t// \tthrow new Error(`no outputs named '${name}'. available names are ${available_names}`);\n\t\t// }\n\t\t// return index;\n\t}\n\tget_output_index(output_index_or_name: number | string): number {\n\t\tif (output_index_or_name != null) {\n\t\t\tif (lodash_isString(output_index_or_name)) {\n\t\t\t\tif (this.has_named_outputs) {\n\t\t\t\t\treturn this.get_named_output_index(output_index_or_name);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn(`node ${this.node.full_path()} has no named outputs`);\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn output_index_or_name;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tnamed_output_connection_points_by_name(name: string): BaseNamedConnectionPointType | undefined {\n\t\tif (this._named_output_connection_points) {\n\t\t\tfor (let connection_point of this._named_output_connection_points) {\n\t\t\t\tif (connection_point.name == name) {\n\t\t\t\t\treturn connection_point;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_named_output_connection_points(connection_points: BaseNamedConnectionPointType[], set_dirty: boolean = true) {\n\t\tthis._has_named_outputs = true;\n\t\tthis._named_output_connection_points = connection_points;\n\t\tif (set_dirty && this.node.scene) {\n\t\t\t// why do I need this set dirty here?\n\t\t\t// I currently have to have a flag to optionally prevent this,\n\t\t\t// for instance from gl nodes which have their outputs updated in a post dirty hook\n\t\t\tthis.node.set_dirty(this.node);\n\t\t}\n\t\tthis.node.emit(NodeEvent.NAMED_OUTPUTS_UPDATED);\n\t}\n\tused_output_names(): string[] {\n\t\tif (this.node.io.connections) {\n\t\t\tconst output_indices = lodash_uniq(\n\t\t\t\tthis.node.io.connections\n\t\t\t\t\t.output_connections()\n\t\t\t\t\t.map((connection) => (connection ? connection.output_index : null))\n\t\t\t);\n\t\t\tconst used_output_indices: number[] = [];\n\t\t\toutput_indices.forEach((index) => {\n\t\t\t\tif (lodash_isNumber(index)) {\n\t\t\t\t\tused_output_indices.push(index);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst used_output_names: string[] = used_output_indices.map((index) => {\n\t\t\t\treturn this.named_output_connection_points[index].name;\n\t\t\t});\n\t\t\treturn used_output_names;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n}\n","import {NodeParamsConfig} from './ParamsConfig';\n// import {ParamValuesTypeMap} from './ParamsController';\n// import {ParamType} from '../../../poly/ParamType';\n\n// function getProperty<T, K extends keyof T>(o: T, propertyName: K): T[K] {\n// \treturn o[propertyName]; // o[propertyName] is of type T[K]\n// }\n\n// let t: getProperty(ParamConfig, 'type')\n// function prop<T, K extends keyof T>(obj: T, key: K) {\n// \treturn typeof obj[key];\n// }\n// type test = Pick<ParamConfig<ParamType.FLOAT>, 'default_value'>;\n\nexport type ParamsAccessorType<T extends NodeParamsConfig> = {\n\treadonly [P in keyof T]: T[P]['param_class'];\n};\n\nexport class ParamsAccessor<T extends NodeParamsConfig> {\n\tconstructor() {\n\t\t// console.log('accessor', this);\n\t}\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\n\nexport class EventContainer extends TypedContainer<ContainableMap['EVENT']> {\n\tset_content(content: ContainableMap['EVENT']) {\n\t\tsuper.set_content(content);\n\t}\n}\n","import {BaseEventNodeType} from '../../../nodes/event/_Base';\nimport {BaseCameraObjNodeType} from '../../../nodes/obj/_BaseCamera';\nexport abstract class BaseEventsController<E extends Event, T extends BaseEventNodeType> {\n\tprotected _nodes_by_graph_node_id: Map<string, T> = new Map();\n\tregister_node(node: T) {\n\t\tthis._nodes_by_graph_node_id.set(node.graph_node_id, node);\n\t}\n\tunregister_node(node: T) {\n\t\tthis._nodes_by_graph_node_id.delete(node.graph_node_id);\n\t}\n\tabstract accepts_event(event: Event): boolean;\n\tprocess(event: E, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {\n\t\tthis._nodes_by_graph_node_id.forEach((node) => node.process_event(event, canvas, camera_node));\n\t}\n}\n","import {PolyScene} from '../PolyScene';\n\nexport class LifeCycleController {\n\tconstructor(private scene: PolyScene) {}\n\n\tprivate _lifecycle_on_create_allowed: boolean = true;\n\n\ton_create_hook_allowed(): boolean {\n\t\treturn this.scene.loading_controller.loaded && this._lifecycle_on_create_allowed;\n\t}\n\n\ton_create_prevent(callback: () => void) {\n\t\tthis._lifecycle_on_create_allowed = false;\n\t\tcallback();\n\t\tthis._lifecycle_on_create_allowed = true;\n\t}\n}\n","import {PolyScene} from '../PolyScene';\n\nexport class LoadingController {\n\tconstructor(private scene: PolyScene) {}\n\n\t_loading_state: boolean = true;\n\t_auto_updating: boolean = true;\n\t_first_object_loaded: boolean = false;\n\n\tmark_as_loading() {\n\t\tthis._set_loading_state(true);\n\t}\n\tasync mark_as_loaded() {\n\t\tawait this._set_loading_state(false);\n\t\t// POLY.notify_scene_loaded(this.scene);\n\t\t// this.cooker().block()\n\t\t// this.root().set_children_dirty_without_propagation()\n\t\t// this.cooker().unblock()\n\t}\n\tprivate async _set_loading_state(state: boolean) {\n\t\tthis._loading_state = state;\n\t\tawait this.set_auto_update(!this._loading_state);\n\t}\n\tget is_loading() {\n\t\treturn this._loading_state;\n\t}\n\tget loaded() {\n\t\treturn !this._loading_state;\n\t}\n\tget auto_updating() {\n\t\treturn this._auto_updating;\n\t} // _init_auto_update: ->\n\t// \tthis.set_auto_update(true)\n\tasync set_auto_update(new_state: boolean) {\n\t\tif (this._auto_updating !== new_state) {\n\t\t\tthis._auto_updating = new_state;\n\t\t\tif (this._auto_updating) {\n\t\t\t\t// if this.env_is_development()\n\t\t\t\t// \tthis.performance().start()\n\n\t\t\t\tconst root = this.scene.root;\n\t\t\t\tif (root) {\n\t\t\t\t\tawait root.process_queue();\n\t\t\t\t\t// const c = async () => {\n\t\t\t\t\t// \tawait root.process_queue();\n\t\t\t\t\t// };\n\t\t\t\t\t// setTimeout(c, 50);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if (callback != null) { callback(); }\n\t\t\t}\n\t\t} else {\n\t\t\t// if (callback != null) { callback(); }\n\t\t}\n\t}\n\n\ton_first_object_loaded() {\n\t\tif (!this._first_object_loaded) {\n\t\t\tthis._first_object_loaded = true;\n\n\t\t\tconst loader = document.getElementById('scene_loading_container');\n\t\t\tif (loader) {\n\t\t\t\tloader.parentElement?.removeChild(loader);\n\t\t\t}\n\t\t}\n\t}\n\n\t// on_all_objects_loaded() {\n\t// \t// POLY.viewer_loaders_manager().dipose_loaders()\n\t// }\n}\n","import {BaseParamType} from '../../params/_Base';\nimport {BaseNodeType} from '../../nodes/_Base';\n\nexport class ExpressionsController {\n\tprivate _params_by_id: Map<string, BaseParamType> = new Map();\n\tconstructor() {}\n\n\tregister_param(param: BaseParamType) {\n\t\tthis._params_by_id.set(param.graph_node_id, param);\n\t}\n\tderegister_param(param: BaseParamType) {\n\t\tthis._params_by_id.delete(param.graph_node_id);\n\t}\n\n\t//\n\t//\n\t//\n\t//\n\tregenerate_referring_expressions(node: BaseNodeType) {\n\t\tnode.name_controller.graph_node.set_successors_dirty(node);\n\t}\n}\n","import {BaseNodeType} from '../../nodes/_Base';\nimport {BaseParamType} from '../../params/_Base';\nimport {MissingExpressionReference} from '../../expressions/MissingReference';\nimport jsep from 'jsep';\nimport {MapUtils} from '../../../core/MapUtils';\n\n// type MissingExpressionReferenceById = Map<number, MissingExpressionReference>;\n// type MissingExpressionReferenceByIdByPath = Map<string, MissingExpressionReferenceById>;\n\nexport class MissingReferencesController {\n\tprivate references: Map<string, MissingExpressionReference[]> = new Map<string, MissingExpressionReference[]>();\n\n\tregister(param: BaseParamType, jsep_node: jsep.Expression, path_argument: string): MissingExpressionReference {\n\t\tconst missing_expression_reference = new MissingExpressionReference(param, path_argument);\n\n\t\tMapUtils.push_on_array_at_entry(this.references, param.graph_node_id, missing_expression_reference);\n\n\t\treturn missing_expression_reference;\n\t}\n\tderegister_param(param: BaseParamType) {\n\t\tthis.references.delete(param.graph_node_id);\n\t}\n\n\t//\n\t//\n\t// MISSING REFERENCES\n\t//\n\t//\n\t// call this from node.create and node.rename\n\tcheck_for_missing_references(node: BaseNodeType) {\n\t\tthis._check_for_missing_references_for_node(node);\n\t\tfor (let param of node.params.all) {\n\t\t\tthis._check_for_missing_references_for_param(param);\n\t\t}\n\t}\n\tprivate _check_for_missing_references_for_node(node: BaseNodeType) {\n\t\tconst id = node.graph_node_id;\n\n\t\tthis.references.forEach((missing_references, node_id) => {\n\t\t\tlet match_found = false;\n\t\t\tfor (let ref of missing_references) {\n\t\t\t\tif (ref.matches_path(node.full_path())) {\n\t\t\t\t\tmatch_found = true;\n\t\t\t\t\tref.resolve_missing_dependencies();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (match_found) {\n\t\t\t\tthis.references.delete(id);\n\t\t\t}\n\t\t});\n\t}\n\tprivate _check_for_missing_references_for_param(param: BaseParamType) {\n\t\tconst id = param.graph_node_id;\n\n\t\tthis.references.forEach((missing_references, node_id) => {\n\t\t\tlet match_found = false;\n\t\t\tfor (let ref of missing_references) {\n\t\t\t\tif (ref.matches_path(param.full_path())) {\n\t\t\t\t\tmatch_found = true;\n\t\t\t\t\tref.resolve_missing_dependencies();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (match_found) {\n\t\t\t\tthis.references.delete(id);\n\t\t\t}\n\t\t});\n\t}\n}\n","import {BaseParamType} from '../params/_Base';\n// import jsep from 'jsep';\nimport {CoreWalker} from '../../core/Walker';\n\nexport class MissingExpressionReference {\n\tconstructor(private param: BaseParamType /*, private jsep_node: jsep.Expression*/, public path: string) {\n\t\t// console.log(this.jsep_node, this.param); // TODO: typescript, to not have the missing ref\n\t}\n\n\tmatches_path(path: string): boolean {\n\t\tconst absolute = CoreWalker.make_absolute_path(this.param.node, this.path);\n\t\treturn absolute == path;\n\t}\n\n\tupdate_from_method_dependency_name_change() {\n\t\tthis.param.expression_controller?.update_from_method_dependency_name_change();\n\t}\n\n\tresolve_missing_dependencies() {\n\t\tconst input = this.param.raw_input_serialized;\n\t\tthis.param.set(this.param.default_value);\n\t\tthis.param.set(input);\n\t\t// parse_expression_and_update_dependencies()\n\t}\n}\n\n// export class ReferenceSearchResult {\n// \tpublic found_graph_nodes: CoreGraphNode[] = [];\n// \tpublic missing_paths: string[] = [];\n\n// \tconstructor() {}\n// \tset_found_graph_nodes(graph_nodes: CoreGraphNode[]) {\n// \t\tthis.found_graph_nodes = graph_nodes;\n// \t}\n// \tset_missing_paths(paths: string[]) {\n// \t\tthis.missing_paths = paths;\n// \t}\n// }\n","import {PolyScene} from '../PolyScene';\n\nimport {Object3D} from 'three/src/core/Object3D';\nimport lodash_concat from 'lodash/concat';\nimport lodash_flatten from 'lodash/flatten';\nimport lodash_compact from 'lodash/compact';\nimport {ObjectsManagerNode} from '../../nodes/manager/ObjectsManager';\nimport {CoreString} from '../../../core/String';\nimport {BaseNodeType} from '../../nodes/_Base';\nimport {BaseObjNodeType} from '../../nodes/obj/_Base';\nimport {NodeContext} from '../../poly/NodeContext';\n\nexport class NodesController {\n\tconstructor(private scene: PolyScene) {}\n\n\t_root!: ObjectsManagerNode;\n\t_node_context_signatures: Dictionary<boolean> = {};\n\t_instanciated_nodes_by_context_and_type: Dictionary<Dictionary<Dictionary<BaseNodeType>>> = {};\n\n\tinit() {\n\t\tthis._root = new ObjectsManagerNode(this.scene);\n\t\tthis._root.initialize_base_and_node();\n\t\t// this._root.set_scene(this.scene);\n\t\tthis._root.init_default_scene();\n\t}\n\n\tget root() {\n\t\treturn this._root;\n\t}\n\tobjects_from_mask(mask: string): Object3D[] {\n\t\tconst masks = mask.split(' ');\n\t\t// let geos = this.root().nodes_by_type('geo') as BaseNodeObj[];\n\t\tlet nodes = this.root.children() as BaseObjNodeType[];\n\t\tnodes = nodes.filter((node) => CoreString.matches_one_mask(node.name, masks));\n\t\tconst objects = nodes.map((geo) => geo.object);\n\t\treturn lodash_compact(objects);\n\t}\n\tclear() {\n\t\tconst children = this.root.children();\n\t\tfor (let child of children) {\n\t\t\tthis.root.children_controller?.remove_node(child);\n\t\t}\n\t\t// return children.forEach(child=> {\n\t\t// \treturn this.root().remove_node(child);\n\t\t// });\n\t}\n\n\tnode(path: string) {\n\t\tif (path === '/') {\n\t\t\treturn this.root;\n\t\t} else {\n\t\t\treturn this.root.node(path);\n\t\t}\n\t}\n\tall_nodes() {\n\t\tlet nodes: BaseNodeType[] = [this.root];\n\t\tlet current_parents: BaseNodeType[] = [this.root];\n\t\tlet cmptr = 0;\n\t\twhile (current_parents.length > 0 && cmptr < 10) {\n\t\t\tconst children = lodash_flatten(\n\t\t\t\tcurrent_parents.map((current_parent) => {\n\t\t\t\t\tif (current_parent.children_allowed()) {\n\t\t\t\t\t\treturn current_parent.children();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t\tnodes = lodash_concat(nodes, children);\n\t\t\tcurrent_parents = children;\n\t\t\tcmptr += 1;\n\t\t}\n\t\treturn lodash_flatten(nodes);\n\t}\n\n\treset_node_context_signatures() {\n\t\tthis._node_context_signatures = {};\n\t}\n\tregister_node_context_signature(node: BaseNodeType) {\n\t\tif (node.children_allowed() && node.children_controller) {\n\t\t\tthis._node_context_signatures[node.children_controller.node_context_signature()] = true;\n\t\t}\n\t}\n\tnode_context_signatures() {\n\t\treturn Object.keys(this._node_context_signatures)\n\t\t\t.sort()\n\t\t\t.map((s) => s.toLowerCase());\n\t}\n\n\tadd_to_instanciated_node(node: BaseNodeType) {\n\t\tconst context = node.node_context();\n\t\tconst node_type = node.type;\n\t\tthis._instanciated_nodes_by_context_and_type[context] =\n\t\t\tthis._instanciated_nodes_by_context_and_type[context] || {};\n\t\tthis._instanciated_nodes_by_context_and_type[context][node_type] =\n\t\t\tthis._instanciated_nodes_by_context_and_type[context][node_type] || {};\n\t\tthis._instanciated_nodes_by_context_and_type[context][node_type][node.graph_node_id] = node;\n\t}\n\n\tremove_from_instanciated_node(node: BaseNodeType) {\n\t\tconst context = node.node_context();\n\t\tconst node_type = node.type;\n\t\tdelete this._instanciated_nodes_by_context_and_type[context][node_type][node.graph_node_id];\n\t}\n\n\tinstanciated_nodes(context: NodeContext, node_type: string) {\n\t\tconst nodes = [];\n\t\tif (this._instanciated_nodes_by_context_and_type[context]) {\n\t\t\tconst nodes_by_ids = this._instanciated_nodes_by_context_and_type[context][node_type];\n\t\t\tif (nodes_by_ids) {\n\t\t\t\tfor (let id of Object.keys(nodes_by_ids)) {\n\t\t\t\t\tnodes.push(nodes_by_ids[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn nodes;\n\t}\n}\n","import {Group} from 'three/src/objects/Group';\n// import lodash_isEqual from 'lodash/isEqual';\n// import lodash_map from 'lodash/map';\n\nimport {TypedBaseManagerNode} from './_Base';\n// import {CoreObject} from '../../../core/Object';\n// import {BaseNode} from '../_Base';\nimport {BaseObjNodeType} from '../obj/_Base';\n\n// import {BaseManagerObjNode} from '../obj/_BaseManager';\n// import {BaseCameraObjNodeClass} from '../obj/_BaseCamera';\n// import {BaseLightObjNodeClass} from '../obj/_BaseLight';\n\n// obj nodes\n// import {EventsObjNode} from '../obj/Events';\n// import {MaterialsObjNode} from '../obj/Materials';\n// import {FogObjNode} from '../obj/Fog';\nimport {GeoObjNode} from '../obj/Geo';\n\nimport {Poly} from '../../Poly';\nimport {NodeContext} from '../../poly/NodeContext';\n// import {PolyScene} from '../../scene/PolyScene';\n// TODO:\n// ensure removing a node removes its content from the scene (spotlight?)\n\nimport {ObjNodeChildrenMap} from '../../poly/registers/Obj';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {BaseNodeType} from '../_Base';\nclass ObjectsManagerParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new ObjectsManagerParamsConfig();\n\nexport class ObjectsManagerNode extends TypedBaseManagerNode<ObjectsManagerParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'obj';\n\t}\n\t// children_context() {\n\t// \treturn NodeContext.OBJ;\n\t// }\n\n\tprivate _object: Group = new Group();\n\tprivate _queued_nodes_by_id: Dictionary<BaseObjNodeType> = {};\n\tprivate _queued_nodes_by_path: Dictionary<BaseObjNodeType> = {};\n\tprivate _expected_geo_nodes: Dictionary<GeoObjNode> = {};\n\t// private _loaded_geo_node_by_id: Dictionary<boolean> = {};\n\tprivate _process_queue_start: number = -1;\n\n\tprotected _children_controller_context = NodeContext.OBJ;\n\tinitialize_node() {\n\t\tthis.children_controller?.init();\n\n\t\t// this.flags.add_display();\n\n\t\tthis.lifecycle.add_on_child_add_hook(this._on_child_add.bind(this));\n\t\tthis.lifecycle.add_on_child_remove_hook(this._on_child_remove.bind(this));\n\t\t// this.flags.add_bypass({has_bypass_flag: false});\n\n\t\t// this.set_min_inputs_count(0);\n\t\t// this.set_max_inputs_count(0);\n\t}\n\t//@_object_uuid_by_node_graph_id = {}\n\n\tinit_default_scene() {\n\t\tthis._object.name = '_WORLD_';\n\t\tthis._scene.default_scene.add(this._object);\n\t}\n\n\t// TODO: is this method still used?\n\t// available_children_classes() {\n\t// \treturn POLY.Engine.Node.Obj;\n\t// }\n\n\tobject() {\n\t\treturn this._object;\n\t}\n\tcreate_node<K extends keyof ObjNodeChildrenMap>(type: K): ObjNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as ObjNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseObjNodeType[];\n\t}\n\tnodes_by_type<K extends keyof ObjNodeChildrenMap>(type: K): ObjNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as ObjNodeChildrenMap[K][];\n\t}\n\n\tmultiple_display_flags_allowed() {\n\t\treturn true;\n\t}\n\n\tadd_to_queue(node: BaseObjNodeType) {\n\t\tconst id = node.graph_node_id;\n\t\tif (this._queued_nodes_by_id[id] == null) {\n\t\t\treturn (this._queued_nodes_by_id[id] = node);\n\t\t}\n\t}\n\n\tasync process_queue() {\n\t\tthis._queued_nodes_by_path = {};\n\t\tconst ids = Object.keys(this._queued_nodes_by_id);\n\t\tfor (let id of ids) {\n\t\t\tconst node = this._queued_nodes_by_id[id];\n\t\t\tdelete this._queued_nodes_by_id[id];\n\n\t\t\tconst full_path = `_____${node.render_order}__${node.full_path()}`;\n\t\t\t// we want to process managers, cameras, then lights, then everything else\n\t\t\t// so we add a prefix for those\n\t\t\t// if (this._is_node_manager(node)) {\n\t\t\t// \tfull_path = `/_____005_${full_path}`;\n\t\t\t// } else if (this._is_node_fog(node)) {\n\t\t\t// \tfull_path = `/_____002_${full_path}`;\n\t\t\t// } else if (this._is_node_camera(node)) {\n\t\t\t// \tfull_path = `/_____003_${full_path}`;\n\t\t\t// } else if (this._is_node_light(node)) {\n\t\t\t// \tfull_path = `/_____004_${full_path}`;\n\t\t\t// }\n\n\t\t\tthis._queued_nodes_by_path[full_path] = node;\n\t\t}\n\n\t\tconst promises = Object.keys(this._queued_nodes_by_path)\n\t\t\t.sort()\n\t\t\t.map((path_id) => {\n\t\t\t\tconst node = this._queued_nodes_by_path[path_id];\n\t\t\t\treturn this.update_object(node);\n\t\t\t});\n\n\t\tthis._expected_geo_nodes = this._expected_geo_nodes || (await this.expected_loading_geo_nodes_by_id());\n\n\t\tthis._process_queue_start = performance.now();\n\t\tPromise.all(promises).then(() => {\n\t\t\tPoly.instance().log(\n\t\t\t\t`SCENE LOADED '${this.scene.name}' in ${performance.now() - this._process_queue_start}`\n\t\t\t);\n\t\t\t// this.scene().performance().print()\n\n\t\t\t// do the update here if there are no objects to load\n\t\t\t// otherwise an empty scene will have a loader that never gets removed\n\t\t\t// if (Object.keys(this._expected_geo_nodes).length == 0) {\n\t\t\t// \tthis.update_on_all_objects_loaded();\n\t\t\t// }\n\t\t});\n\t}\n\n\tupdate_object(node: BaseObjNodeType) {\n\t\tif (!this.scene.loading_controller.auto_updating) {\n\t\t\tthis.add_to_queue(node);\n\t\t} else {\n\t\t\t// if (node.object) {\n\t\t\tthis.add_to_scene(node);\n\t\t\t// } else {\n\t\t\t// \t//if POLY.env != 'test'\n\t\t\t// \t// console.warn(`no object from ${node.full_path()} (error:${node.error_message()}) (${POLY.env})`);\n\t\t\t// }\n\t\t}\n\t}\n\n\t// _is_node_fog(node: BaseObjNodeType) {\n\t// \treturn CoreObject.is_a(node, FogObjNode);\n\t// }\n\t// _is_node_camera(node: BaseObjNodeType) {\n\t// \treturn CoreObject.is_a(node, BaseCameraObjNodeClass);\n\t// }\n\n\t// _is_node_event(node: BaseObjNodeType) {\n\t// \treturn CoreObject.is_a(node, EventsObjNode);\n\t// }\n\t// _is_node_mat(node: BaseObjNodeType) {\n\t// \treturn CoreObject.is_a(node, MaterialsObjNode);\n\t// }\n\n\t//\n\t//\n\t// OBJ PARENTING\n\t//\n\t//\n\n\t// TODO:\n\t// a OBJ node should be able to submit its group for transform\n\t// apart from the geometry. This would allow parenting to function\n\t// regardless if the underlying geo is valid or not\n\tget_parent_for_node(node: BaseObjNodeType) {\n\t\t// if (this._is_node_event(node) || this._is_node_mat(node)) {\n\t\t// \treturn null;\n\t\tif (node.attachable_to_hierarchy) {\n\t\t\t// if (this._is_node_camera(node)) {\n\t\t\t// \treturn this.scene.display_scene;\n\t\t\t// } else {\n\t\t\tconst node_input = node.io.inputs.input(0);\n\t\t\tif (node_input) {\n\t\t\t\t//node_input.request_container (container)=>\n\t\t\t\t//\tcallback(container.object() || @_object)\n\t\t\t\treturn node_input.children_group;\n\t\t\t} else {\n\t\t\t\treturn this._object;\n\t\t\t}\n\t\t\t// }\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tadd_to_scene(node: BaseObjNodeType): void {\n\t\t// if (this._is_node_fog(node)) {\n\t\t// console.log(\"fog\")\n\t\t// # TODO: ensure fog is removed if we set display or bypass flag\n\t\t// # TODO: ensure we get a warning if more than 1 fog\n\t\t// # TODO: why does it get added twice when its parameters are changed?\n\t\t// node.get_fog (fog)=>\n\t\t// \t@_scene.display_scene().fog = fog\n\t\t// #console.log(\"added fog\", node.object())\n\t\tif (node.attachable_to_hierarchy) {\n\t\t\tconst parent_object = this.get_parent_for_node(node);\n\t\t\tif (parent_object) {\n\t\t\t\t// await node.params.eval_all().then((params_eval_key) => {\n\t\t\t\t// \tnode.request_container();\n\t\t\t\t// });\n\n\t\t\t\tif (node.used_in_scene) {\n\t\t\t\t\t// parent_object.add(node.object);\n\t\t\t\t\tnode.add_object_to_parent(parent_object);\n\t\t\t\t\t// await node.cook_controller.cook_main_without_inputs();\n\t\t\t\t} else {\n\t\t\t\t\tnode.remove_object_from_parent();\n\t\t\t\t\t// parent_object.remove(node.object);\n\t\t\t\t}\n\n\t\t\t\t// node.request_display_node();\n\t\t\t} else {\n\t\t\t\t// node.request_container().then(() => {\n\t\t\t\t// \t// force events and mat to cook and remove the dirty state\n\t\t\t\t// \t// ensure that pickers are cooked\n\t\t\t\t// \t// TODO: although there has been cases with two picker and\n\t\t\t\t// \t// one referencing the other with an expression, and that\n\t\t\t\t// \t// expression be evaluated before the second was created\n\t\t\t\t// \t// which led to an error. This should not happen\n\t\t\t\t// \tnode.children_controller.traverse_children((child) => child.set_dirty());\n\t\t\t\t// });\n\t\t\t}\n\t\t}\n\t}\n\n\tremove_from_scene(node: BaseObjNodeType) {\n\t\tnode.remove_object_from_parent();\n\t}\n\tare_children_cooking(): boolean {\n\t\tconst children = this.children();\n\t\tfor (let child of children) {\n\t\t\tif (child.is_display_node_cooking()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync expected_loading_geo_nodes_by_id() {\n\t\tconst geo_nodes = this.nodes_by_type('geo');\n\t\tconst node_by_id: Dictionary<GeoObjNode> = {};\n\t\tfor (let geo_node of geo_nodes) {\n\t\t\tconst is_displayed = await geo_node.is_displayed();\n\t\t\tif (is_displayed) {\n\t\t\t\tnode_by_id[geo_node.graph_node_id] = geo_node;\n\t\t\t}\n\t\t}\n\t\treturn node_by_id;\n\t}\n\n\t// async notify_geo_loaded(geo_node: GeoObjNode) {\n\t// \tthis._loaded_geo_node_by_id = this._loaded_geo_node_by_id || {};\n\t// \tthis._loaded_geo_node_by_id[geo_node.graph_node_id] = true;\n\n\t// \tthis._expected_geo_nodes = this._expected_geo_nodes || (await this.expected_loading_geo_nodes_by_id());\n\n\t// \tif (this.scene) {\n\t// \t\tthis.scene.loading_controller.on_first_object_loaded();\n\n\t// \t\tif (lodash_isEqual(Object.keys(this._loaded_geo_node_by_id), Object.keys(this._expected_geo_nodes))) {\n\t// \t\t\tthis.update_on_all_objects_loaded();\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t// update_on_all_objects_loaded() {\n\t// \tthis.scene.loading_controller.on_all_objects_loaded();\n\t// \t// this.scene.cube_cameras_controller.on_all_objects_loaded(); // TODO: typescript\n\t// }\n\n\tadd_to_parent_transform(node: BaseObjNodeType) {\n\t\tthis.update_object(node);\n\t}\n\t// return if !this.scene().loaded()\n\n\t// transformed_node.request_container (input_container)->\n\t// \tobject = input_container.object()\n\n\t// \ttransformed_node.request_input_container 0, (parent_input_container)->\n\t// \t\tparent = parent_input_container.object()\n\t// \t\tparent.add(object)\n\n\tremove_from_parent_transform(node: BaseObjNodeType) {\n\t\tthis.update_object(node);\n\t}\n\t// return if !this.scene().loaded()\n\n\t// transformed_node.request_container (input_container)=>\n\t// \tobject = input_container.object()\n\n\t// \tthis.get_parent_for_node transformed_node, (parent_object)=>\n\t// \t\tparent_object.add(object)\n\n\tprivate _on_child_add(node?: BaseNodeType) {\n\t\tif (node) {\n\t\t\tthis.update_object(node as BaseObjNodeType);\n\t\t}\n\t}\n\tprivate _on_child_remove(node?: BaseNodeType) {\n\t\tif (node) {\n\t\t\tthis.remove_from_scene(node as BaseObjNodeType);\n\t\t}\n\t}\n}\n","import {TypedNode} from '../_Base';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {TypedContainerController} from '../utils/ContainerController';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ManagerContainer} from '../../containers/Manager';\n\nexport class TypedBaseManagerNode<K extends NodeParamsConfig> extends TypedNode<'MANAGER', BaseManagerNodeType, K> {\n\tcontainer_controller: TypedContainerController<ManagerContainer> = new TypedContainerController<ManagerContainer>(\n\t\tthis,\n\t\tManagerContainer\n\t);\n\n\tstatic node_context(): NodeContext {\n\t\treturn NodeContext.MANAGER;\n\t}\n\tnode_sibbling(name: string): BaseManagerNodeType | null {\n\t\treturn super.node_sibbling(name) as BaseManagerNodeType | null;\n\t}\n}\n\nexport type BaseManagerNodeType = TypedBaseManagerNode<any>;\nexport class BaseManagerNodeClass extends TypedBaseManagerNode<any> {}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\n\nexport class ManagerContainer extends TypedContainer<ContainableMap['MANAGER']> {\n\tset_content(content: ContainableMap['MANAGER']) {\n\t\tsuper.set_content(content);\n\t}\n}\n","import lodash_uniq from 'lodash/uniq';\nimport lodash_clone from 'lodash/clone';\nimport lodash_sortBy from 'lodash/sortBy';\nimport {PerformanceNode} from './PerformanceNode';\nimport {BaseNodeType} from '../../engine/nodes/_Base';\n\nexport class CorePerformance {\n\tprivate _started: boolean = false;\n\t_start_time: number | null = 0;\n\t_previous_timestamp: number = 0;\n\t_nodes_cook_data: Dictionary<PerformanceNode> = {};\n\t_durations_by_name: Dictionary<number> = {};\n\t_durations_count_by_name: Dictionary<number> = {};\n\t// _performance_id: number;\n\n\t// constructor(){\n\t// \tconsole.log(\"creating perf\")\n\t// \tthis._performance_id = Math.random()\n\t// }\n\n\tprofile(name: string, method: (args?: any) => any) {\n\t\tconst start_time = performance.now();\n\t\tmethod();\n\t\tconst total_time = performance.now() - start_time;\n\t\tconsole.log(`${name}: ${total_time}`);\n\t}\n\n\tstart() {\n\t\tif (!this._started) {\n\t\t\tthis.reset();\n\t\t\tthis._started = true;\n\t\t\tthis._start_time = performance.now();\n\t\t\tthis._nodes_cook_data = {};\n\t\t\tthis._previous_timestamp = this._start_time;\n\t\t}\n\t}\n\t// else\n\t// \tthrow \"performance already started\"\n\tstop() {\n\t\tthis.reset();\n\t}\n\treset() {\n\t\tthis._started = false;\n\t\tthis._start_time = null;\n\t\tthis._durations_by_name = {};\n\t\tthis._durations_count_by_name = {};\n\t\tthis._nodes_cook_data = {};\n\t}\n\n\tget started(): boolean {\n\t\treturn this._started;\n\t}\n\n\trecord_node_cook_data(node: BaseNodeType) {\n\t\tconst id = node.graph_node_id;\n\t\tif (this._nodes_cook_data[id] == null) {\n\t\t\tthis._nodes_cook_data[id] = new PerformanceNode(node);\n\t\t}\n\t\tthis._nodes_cook_data[id].update_cook_data();\n\t}\n\n\trecord(name: string) {\n\t\tif (!this.started) {\n\t\t\tthis.start();\n\t\t}\n\n\t\tconst current_timestamp = performance.now();\n\n\t\tif (this._durations_by_name[name] == null) {\n\t\t\tthis._durations_by_name[name] = 0;\n\t\t}\n\t\tthis._durations_by_name[name] += current_timestamp - this._previous_timestamp;\n\t\tif (this._durations_count_by_name[name] == null) {\n\t\t\tthis._durations_count_by_name[name] = 0;\n\t\t}\n\t\tthis._durations_count_by_name[name] += 1;\n\n\t\treturn (this._previous_timestamp = current_timestamp);\n\t}\n\n\tprint() {\n\t\tthis.print_node_cook_data();\n\t\tthis.print_recordings();\n\t}\n\n\tprint_node_cook_data() {\n\t\tlet performance_nodes = Object.values(this._nodes_cook_data);\n\t\tperformance_nodes = lodash_sortBy(performance_nodes, (performance_node) => -performance_node.cook_time_total);\n\n\t\tconst print_objects = performance_nodes.map((performance_node) => performance_node.print_object());\n\n\t\tconsole.log('--------------- NODES COOK TIME -----------');\n\n\t\tconst table_entries = [];\n\t\tconst sorted_print_objects = lodash_sortBy(print_objects, (print_object) => -print_object['cook_time_total']);\n\t\tfor (let print_object of sorted_print_objects) {\n\t\t\ttable_entries.push(print_object);\n\t\t}\n\n\t\tconsole.table(table_entries);\n\n\t\treturn print_objects;\n\t}\n\n\tprint_recordings() {\n\t\t// const start_time = this._start_time\n\t\tconst durations_by_name = lodash_clone(this._durations_by_name);\n\t\tconst durations_count_by_name = lodash_clone(this._durations_count_by_name);\n\t\t//this.reset()\n\n\t\tconst durations = [];\n\t\t//durations_by_name = {}\n\t\tconst names_by_duration: Dictionary<string[]> = {};\n\n\t\tfor (let name of Object.keys(durations_by_name)) {\n\t\t\tconst duration = durations_by_name[name];\n\n\t\t\t//durations_by_name[name] = duration\n\t\t\tdurations.push(duration);\n\t\t\tif (names_by_duration[duration] == null) {\n\t\t\t\tnames_by_duration[duration] = [];\n\t\t\t}\n\t\t\tnames_by_duration[duration].push(name);\n\t\t}\n\n\t\tdurations.sort((a, b) => a - b);\n\t\tconst sorted_durations = lodash_uniq(durations);\n\n\t\tconsole.log('--------------- PERF RECORDINGS -----------');\n\t\t//console.log(\"sorted_durations\", sorted_durations)\n\t\t// let previous_duration = start_time\n\t\tconst table_entries = [];\n\t\tfor (let duration of sorted_durations) {\n\t\t\tconst names = names_by_duration[duration];\n\t\t\tfor (let name of names) {\n\t\t\t\tconst count = durations_count_by_name[name];\n\t\t\t\tconst duration_per_iteration = duration / count;\n\n\t\t\t\tconst entry = {duration, name, count, duration_per_iteration};\n\t\t\t\ttable_entries.push(entry);\n\t\t\t}\n\n\t\t\t// previous_duration = duration\n\t\t}\n\n\t\tconsole.table(table_entries);\n\t\treturn table_entries;\n\t}\n}\n","import {BaseNodeType} from '../../engine/nodes/_Base';\n\nexport interface PerformancePrintObject {\n\tfull_path: string;\n\tcooks_count: number;\n\tcook_time_total: number;\n\tcook_time_per_iteration: number;\n\tcook_time_total_with_inputs: number;\n\tcook_time_total_with_inputs_per_iteration: number;\n\tcook_time_total_params: number;\n\tcook_time_total_params_per_iteration: number;\n}\n\nexport class PerformanceNode {\n\t_cooks_count: number = 0;\n\t_cook_time_total: number = 0;\n\t_cook_time_total_with_inputs: number = 0;\n\t_cook_time_total_params: number = 0;\n\tconstructor(private _node: BaseNodeType) {}\n\n\tupdate_cook_data(): void {\n\t\tthis._cooks_count += 1;\n\t\tthis._cook_time_total += this._node.cook_controller.cook_time;\n\t\tthis._cook_time_total_with_inputs += this._node.cook_controller.cook_time_with_inputs;\n\t\tthis._cook_time_total_params += this._node.cook_controller.cook_time_params;\n\t}\n\n\tget cook_time_total(): number {\n\t\treturn this._cook_time_total;\n\t}\n\tget cook_time_per_iteration(): number {\n\t\tif (this._cooks_count > 0) {\n\t\t\treturn this._cook_time_total / this._cooks_count;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\tget cook_time_total_with_inputs(): number {\n\t\treturn this._cook_time_total_with_inputs;\n\t}\n\tget cook_time_total_with_inputs_per_iteration(): number {\n\t\tif (this._cooks_count > 0) {\n\t\t\treturn this._cook_time_total_with_inputs / this._cooks_count;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tget cook_time_total_params(): number {\n\t\treturn this._cook_time_total_params;\n\t}\n\tget cook_time_total_params_per_iteration(): number {\n\t\tif (this._cooks_count > 0) {\n\t\t\treturn this._cook_time_total_params / this._cooks_count;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tget cooks_count(): number {\n\t\treturn this._cooks_count;\n\t}\n\n\tprint_object(): PerformancePrintObject {\n\t\treturn {\n\t\t\tfull_path: this._node.full_path(),\n\t\t\tcooks_count: this.cooks_count,\n\t\t\tcook_time_total: this.cook_time_total,\n\t\t\tcook_time_per_iteration: this.cook_time_per_iteration,\n\t\t\tcook_time_total_with_inputs: this.cook_time_total_with_inputs,\n\t\t\tcook_time_total_with_inputs_per_iteration: this.cook_time_total_with_inputs_per_iteration,\n\t\t\tcook_time_total_params: this.cook_time_total_params,\n\t\t\tcook_time_total_params_per_iteration: this.cook_time_total_params_per_iteration,\n\t\t};\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {SceneEvent} from '../../poly/SceneEvent';\n\ntype FrameRange = Number2;\n\n// ensure that FPS remains a float\n// to have divisions and multiplications also give a float\nconst FPS = 60.0;\n\nexport class TimeController {\n\tprotected self: PolyScene = (<unknown>this) as PolyScene;\n\tprivate _frame: number = 1;\n\tprivate _time: number = 0;\n\tprivate _prev_performance_now: number = 0;\n\tprivate _graph_node: CoreGraphNode;\n\tprivate _frame_range: FrameRange = [1, 600];\n\tprivate _frame_range_locked: [boolean, boolean] = [true, true];\n\tprivate _playing: boolean = false;\n\n\tconstructor(private scene: PolyScene) {\n\t\tthis._graph_node = new CoreGraphNode(scene, 'time controller');\n\t\t// this._graph_node.set_scene(this.scene);\n\t}\n\tget graph_node() {\n\t\treturn this._graph_node;\n\t}\n\n\tget frame(): number {\n\t\treturn this._frame;\n\t}\n\tget time(): number {\n\t\treturn this._time;\n\t}\n\tget frame_range(): FrameRange {\n\t\treturn this._frame_range;\n\t}\n\tget frame_range_locked(): [boolean, boolean] {\n\t\treturn this._frame_range_locked;\n\t}\n\tset_frame_range(start_frame: number, end_frame: number) {\n\t\tthis._frame_range[0] = Math.floor(start_frame);\n\t\tthis._frame_range[1] = Math.floor(end_frame);\n\t\tthis.scene.dispatch_controller.dispatch(this._graph_node, SceneEvent.FRAME_RANGE_UPDATED);\n\t}\n\tset_frame_range_locked(start_locked: boolean, end_locked: boolean) {\n\t\tthis._frame_range_locked[0] = start_locked;\n\t\tthis._frame_range_locked[1] = end_locked;\n\t\tthis.scene.dispatch_controller.dispatch(this._graph_node, SceneEvent.FRAME_RANGE_UPDATED);\n\t}\n\t// set_fps(fps: number) {\n\t// \tthis._fps = Math.floor(fps);\n\t// \tthis._frame_interval = 1000 / this._fps;\n\t// \tthis.scene.events_controller.dispatch(this._graph_node, SceneEvent.FRAME_RANGE_UPDATED);\n\t// }\n\tset_time(time: number, update_frame = true) {\n\t\tif (time != this._time) {\n\t\t\tthis._time = time;\n\n\t\t\tif (update_frame) {\n\t\t\t\tconst new_frame = Math.floor(this._time * FPS);\n\t\t\t\tthis._frame = new_frame;\n\t\t\t}\n\n\t\t\t// update time dependents\n\t\t\tthis.scene.dispatch_controller.dispatch(this._graph_node, SceneEvent.FRAME_UPDATED);\n\t\t\tthis.scene.uniforms_controller.update_time_dependent_uniform_owners();\n\n\t\t\t// we block updates here, so that dependent nodes only cook once\n\t\t\tthis.scene.cooker.block();\n\t\t\tthis.graph_node.set_successors_dirty();\n\t\t\tthis.scene.cooker.unblock();\n\t\t}\n\t}\n\n\tset_frame(frame: number, update_time = true) {\n\t\tif (frame != this._frame) {\n\t\t\tframe = this._ensure_frame_within_bounds(frame);\n\t\t\tif (frame != this._frame) {\n\t\t\t\tthis._frame = frame;\n\t\t\t\tif (update_time) {\n\t\t\t\t\tthis.set_time(this._frame / FPS, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tincrement_time_if_playing() {\n\t\tif (this._playing) {\n\t\t\tif (!this.scene.root.are_children_cooking()) {\n\t\t\t\tthis.increment_time();\n\t\t\t}\n\t\t}\n\t}\n\tincrement_time() {\n\t\tconst performance_now = performance.now();\n\t\tconst delta = (performance_now - this._prev_performance_now) / 1000.0;\n\t\tconst new_time = this._time + delta;\n\t\tthis._prev_performance_now = performance_now;\n\t\tthis.set_time(new_time);\n\t}\n\n\t_ensure_frame_within_bounds(frame: number): number {\n\t\tif (this._frame_range_locked[0] && frame < this._frame_range[0]) {\n\t\t\treturn this._frame_range[1];\n\t\t}\n\t\tif (this._frame_range_locked[1] && frame > this._frame_range[1]) {\n\t\t\treturn this._frame_range[0];\n\t\t}\n\t\treturn frame;\n\t}\n\tget playing() {\n\t\treturn this._playing === true;\n\t}\n\tpause() {\n\t\tif (this._playing == true) {\n\t\t\tthis._playing = false;\n\t\t\tthis.scene.dispatch_controller.dispatch(this._graph_node, SceneEvent.PLAY_STATE_UPDATED);\n\t\t}\n\t}\n\tplay() {\n\t\tif (this._playing !== true) {\n\t\t\tthis._playing = true;\n\t\t\tthis._prev_performance_now = performance.now();\n\t\t\tthis.scene.dispatch_controller.dispatch(this._graph_node, SceneEvent.PLAY_STATE_UPDATED);\n\t\t}\n\t}\n\ttoggle_play_pause() {\n\t\tif (this.playing) {\n\t\t\tthis.pause();\n\t\t} else {\n\t\t\tthis.play();\n\t\t}\n\t}\n}\n","export enum SceneEvent {\n\tFRAME_RANGE_UPDATED = 'scene_frame_range_updated',\n\tFRAME_UPDATED = 'scene_frame_updated',\n\tPLAY_STATE_UPDATED = 'scene_play_state_updated',\n}\n","import {PolyScene} from '../PolyScene';\nimport {NodeSerializer} from '../../../engine/nodes/utils/Serializer';\n\nexport class PolySceneSerializer {\n\tconstructor(private scene: PolyScene) {}\n\n\tto_json(include_node_param_components: boolean = false) {\n\t\tconst nodes_by_graph_node_id: Dictionary<object> = {};\n\t\tconst params_by_graph_node_id: Dictionary<object> = {};\n\n\t\tfor (let node of this.scene.nodes_controller.all_nodes()) {\n\t\t\tconst node_serializer = new NodeSerializer(node);\n\t\t\tnodes_by_graph_node_id[node.graph_node_id] = node_serializer.to_json(include_node_param_components);\n\n\t\t\tconst params = node.params.all; //lodash_compact(lodash_concat( lodash_values(node.params()), lodash_values(node.spare_params()) ));\n\t\t\tfor (let param of params) {\n\t\t\t\tparams_by_graph_node_id[param.graph_node_id] = param.to_json();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tnodes_by_graph_node_id,\n\t\t\tparams_by_graph_node_id,\n\t\t};\n\t}\n}\n","import {PolyScene} from '../PolyScene';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {IUniform} from 'three/src/renderers/shaders/UniformsLib';\n\ntype IUniforms = Dictionary<IUniform>;\nexport interface IUniformsWithTime extends IUniforms {\n\ttime: IUniform;\n}\nexport interface IUniformsWithResolution extends IUniforms {\n\tresolution: {\n\t\tvalue: Vector2Like;\n\t};\n}\n\nexport class UniformsController {\n\tconstructor(private scene: PolyScene) {}\n\n\tprivate _time_dependent_uniform_owners: Dictionary<IUniformsWithTime> = {}; //new Map()\n\tprivate _time_dependent_uniform_owners_ids: string[] | null = null;\n\n\tprivate _resolution: Vector2 = new Vector2(1, 1);\n\tprivate _resolution_dependent_uniform_owners: Dictionary<IUniformsWithResolution> = {};\n\tprivate _resolution_dependent_uniform_owners_ids: string[] = [];\n\n\t// time\n\tadd_time_dependent_uniform_owner(id: string, uniforms: IUniformsWithTime) {\n\t\tthis._time_dependent_uniform_owners[id] = uniforms;\n\t\tthis._update_time_dependent_uniform_owners_ids();\n\t}\n\tremove_time_dependent_uniform_owner(id: string) {\n\t\tdelete this._time_dependent_uniform_owners[id];\n\t\tthis._update_time_dependent_uniform_owners_ids();\n\t}\n\tprotected _update_time_dependent_uniform_owners_ids() {\n\t\tthis._time_dependent_uniform_owners_ids = Object.keys(this._time_dependent_uniform_owners);\n\t}\n\tpublic update_time_dependent_uniform_owners() {\n\t\tconst time = this.scene.time;\n\t\tif (this._time_dependent_uniform_owners_ids) {\n\t\t\tfor (let id of this._time_dependent_uniform_owners_ids) {\n\t\t\t\tconst uniforms = this._time_dependent_uniform_owners[id];\n\t\t\t\tuniforms.time.value = time;\n\t\t\t}\n\t\t}\n\t}\n\n\t// resolution\n\tadd_resolution_dependent_uniform_owner(id: string, uniforms: IUniformsWithResolution) {\n\t\tthis._resolution_dependent_uniform_owners[id] = uniforms;\n\t\tthis._update_resolution_dependent_uniform_owners_ids();\n\t\tif (this._resolution) {\n\t\t\tthis.update_resolution_dependent_uniforms(uniforms);\n\t\t}\n\t}\n\tremove_resolution_dependent_uniform_owner(id: string) {\n\t\tdelete this._resolution_dependent_uniform_owners[id];\n\t\tthis._update_resolution_dependent_uniform_owners_ids();\n\t}\n\tprotected _update_resolution_dependent_uniform_owners_ids() {\n\t\tthis._resolution_dependent_uniform_owners_ids = Object.keys(this._resolution_dependent_uniform_owners);\n\t}\n\tupdate_resolution_dependent_uniform_owners(resolution: Vector2) {\n\t\tthis._resolution.copy(resolution);\n\t\tfor (let id of this._resolution_dependent_uniform_owners_ids) {\n\t\t\tconst uniforms = this._resolution_dependent_uniform_owners[id];\n\t\t\tthis.update_resolution_dependent_uniforms(uniforms);\n\t\t}\n\t}\n\tupdate_resolution_dependent_uniforms(uniforms: IUniformsWithResolution) {\n\t\tuniforms.resolution.value.x = this._resolution.x * window.devicePixelRatio;\n\t\tuniforms.resolution.value.y = this._resolution.y * window.devicePixelRatio;\n\t}\n}\n","import {Poly} from '../../Poly';\n\n// import {PolyScene} from '../PolyScene';\n\nexport class WebGLController {\n\tconstructor() {}\n\n\t_require_webgl2: boolean = false;\n\n\trequire_webgl2() {\n\t\treturn this._require_webgl2;\n\t}\n\tset_require_webgl2() {\n\t\tif (!this._require_webgl2) {\n\t\t\tthis._require_webgl2 = true;\n\t\t\tPoly.instance().renderers_controller.set_require_webgl2();\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../../../nodes/_Base';\nimport lodash_isString from 'lodash/isString';\nimport lodash_isBoolean from 'lodash/isBoolean';\nimport lodash_isObject from 'lodash/isObject';\nimport lodash_isNumber from 'lodash/isNumber';\nimport lodash_isArray from 'lodash/isArray';\n\nimport {NodeJsonExporterData, NodeJsonExporterUIData, InputData} from '../export/Node';\nimport {ParamJsonExporterData, SimpleParamJsonExporterData, ComplexParamJsonExporterData} from '../export/Param';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {JsonImportDispatcher} from './Dispatcher';\nimport {ParamType} from '../../../poly/ParamType';\nimport {ParamsUpdateOptions} from '../../../nodes/utils/params/ParamsController';\n// import {ParamInitValueSerializedTypeMap} from '../../../params/types/ParamInitValueSerializedTypeMap';\n\nexport class NodeJsonImporter<T extends BaseNodeType> {\n\tconstructor(protected _node: T) {}\n\n\tprocess_data(data: NodeJsonExporterData) {\n\t\tthis.create_nodes(data['nodes']);\n\t\tthis.set_selection(data['selection']);\n\n\t\t// inputs clone\n\t\tif (this._node.io.inputs.override_clonable_state_allowed()) {\n\t\t\tconst override = data['override_clonable_state'];\n\t\t\tif (override) {\n\t\t\t\tthis._node.io.inputs.set_override_clonable_state(override);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_flags(data);\n\t\tthis.set_params(data['params']);\n\n\t\tthis.from_data_custom(data);\n\n\t\tthis._node.lifecycle.set_creation_completed();\n\t}\n\tprocess_inputs_data(data: NodeJsonExporterData) {\n\t\tthis.set_inputs(data['inputs']);\n\t}\n\n\tprocess_ui_data(data: NodeJsonExporterUIData) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tconst ui_data = this._node.ui_data;\n\t\tconst pos = data['pos'];\n\t\tif (pos) {\n\t\t\tconst vector = new Vector2().fromArray(pos);\n\t\t\tui_data.set_position(vector);\n\t\t}\n\t\tconst comment = data['comment'];\n\t\tif (comment) {\n\t\t\tui_data.set_comment(comment);\n\t\t}\n\t\tthis.process_nodes_ui_data(data['nodes']);\n\t}\n\n\tcreate_nodes(data?: Dictionary<NodeJsonExporterData>) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node_names = Object.keys(data);\n\t\tconst nodes: BaseNodeType[] = [];\n\t\tfor (let node_name of node_names) {\n\t\t\tconst node_data = data[node_name];\n\t\t\tconst node_type = node_data['type'];\n\t\t\tif (this._node.children_allowed() && this._node.children_controller) {\n\t\t\t\tconst node = this._node.create_node(node_type);\n\t\t\t\tif (node) {\n\t\t\t\t\tnode.set_name(node_name);\n\t\t\t\t\tnodes.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst importers = [];\n\t\tlet index = 0;\n\t\tfor (let node of nodes) {\n\t\t\tconst importer = JsonImportDispatcher.dispatch_node(node); //.visit(JsonImporterVisitor)\n\t\t\timporters.push(importer);\n\t\t\timporter.process_data(data[node.name]);\n\t\t\tindex++;\n\t\t}\n\t\tindex = 0;\n\t\tfor (let node of nodes) {\n\t\t\tconst importer = importers[index];\n\t\t\timporter.process_inputs_data(data[node.name]);\n\t\t\tindex++;\n\t\t}\n\t}\n\tset_selection(data?: string[]) {\n\t\tif (this._node.children_allowed() && this._node.children_controller) {\n\t\t\tif (data && data.length > 0) {\n\t\t\t\tconst selected_nodes: BaseNodeType[] = [];\n\t\t\t\tdata.forEach((node_name) => {\n\t\t\t\t\tconst node = this._node.node(node_name);\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tselected_nodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._node.children_controller.selection.set(selected_nodes);\n\t\t\t}\n\t\t}\n\t}\n\n\tset_flags(data: NodeJsonExporterData) {\n\t\tconst flags = data['flags'];\n\t\tif (flags) {\n\t\t\tconst bypass = flags['bypass'];\n\t\t\tif (bypass != null) {\n\t\t\t\tthis._node.flags?.bypass?.set(bypass);\n\t\t\t}\n\t\t\tconst display = flags['display'];\n\t\t\tif (display != null) {\n\t\t\t\tthis._node.flags?.display?.set(display);\n\t\t\t}\n\t\t}\n\t}\n\n\tset_inputs(inputs_data?: InputData[]) {\n\t\tif (!inputs_data) {\n\t\t\treturn;\n\t\t}\n\n\t\tinputs_data.forEach((input_data, i) => {\n\t\t\tif (input_data && this._node.parent) {\n\t\t\t\tif (lodash_isString(input_data)) {\n\t\t\t\t\tconst input_node_name = input_data;\n\t\t\t\t\tconst input_node = this._node.parent.node(input_node_name);\n\t\t\t\t\tthis._node.set_input(i, input_node);\n\t\t\t\t} else {\n\t\t\t\t\tconst input_node = this._node.parent.node(input_data['node']);\n\t\t\t\t\tconst input_name = input_data['name'];\n\t\t\t\t\tif (this._node.io.inputs.has_named_input(input_name)) {\n\t\t\t\t\t\tthis._node.set_input(input_data['name'], input_node, input_data['output']);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(`${this._node.full_path()} has no input named ${input_name}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprocess_nodes_ui_data(data: Dictionary<NodeJsonExporterUIData>) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node_names = Object.keys(data);\n\t\tnode_names.forEach((node_name) => {\n\t\t\tconst node = this._node.node(node_name);\n\t\t\tif (node) {\n\t\t\t\tconst node_data = data[node_name];\n\t\t\t\tJsonImportDispatcher.dispatch_node(node).process_ui_data(node_data);\n\t\t\t\t// node.visit(JsonImporterVisitor).process_ui_data(node_data);\n\t\t\t}\n\t\t});\n\t}\n\n\t//\n\t//\n\t// PARAMS\n\t//\n\t//\n\tset_params(data?: Dictionary<ParamJsonExporterData<ParamType>>) {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tconst param_names = Object.keys(data);\n\n\t\tconst params_update_options: ParamsUpdateOptions = {};\n\t\tfor (let param_name of param_names) {\n\t\t\tconst param_data = data[param_name] as ComplexParamJsonExporterData<ParamType>;\n\t\t\tconst options = param_data['options'];\n\t\t\t// const is_spare = options && options['spare'] === true;\n\n\t\t\tconst param_type = param_data['type']!;\n\t\t\tconst has_param = this._node.params.has_param(param_name);\n\t\t\tlet has_param_and_same_type = false;\n\t\t\tlet param;\n\t\t\tif (has_param) {\n\t\t\t\tparam = this._node.params.get(param_name);\n\t\t\t\t// we can safely consider same type if param_type is not mentioned\n\t\t\t\tif ((param && param.type == param_type) || param_type == null) {\n\t\t\t\t\thas_param_and_same_type = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (has_param_and_same_type) {\n\t\t\t\tif (this._is_param_data_complex(param_data)) {\n\t\t\t\t\tthis._process_param_data_complex(param_name, param_data);\n\t\t\t\t} else {\n\t\t\t\t\tthis._process_param_data_simple(param_name, param_data as SimpleParamJsonExporterData<ParamType>);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// it the param is a spare one,\n\t\t\t\t// we check if it is currently exists with same type first.\n\t\t\t\t// - if it is, we only update the value\n\t\t\t\t// - if it's not, we delete it and add it again\n\t\t\t\tparams_update_options.names_to_delete = params_update_options.names_to_delete || [];\n\t\t\t\tparams_update_options.names_to_delete.push(param_name);\n\t\t\t\tparams_update_options.to_add = params_update_options.to_add || [];\n\t\t\t\tparams_update_options.to_add.push({\n\t\t\t\t\tname: param_name,\n\t\t\t\t\ttype: param_type,\n\t\t\t\t\tinit_value: param_data['default_value'] as any,\n\t\t\t\t\toptions: options,\n\t\t\t\t});\n\n\t\t\t\t// if (options && param_type) {\n\t\t\t\t// \tif (param_data['default_value']) {\n\t\t\t\t// \t\tif (has_param) {\n\t\t\t\t// \t\t\tthis._node.params.delete_param(param_name);\n\t\t\t\t// \t\t}\n\t\t\t\t// \t\tparam = this._node.add_param(param_type, param_name, param_data['default_value'], options);\n\t\t\t\t// \t\tif (param) {\n\t\t\t\t// \t\t\tJsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// }\n\t\t\t}\n\t\t}\n\n\t\t// delete and create the spare params we need to\n\t\tconst params_delete_required =\n\t\t\tparams_update_options.names_to_delete && params_update_options.names_to_delete.length > 0;\n\t\tconst params_add_required = params_update_options.to_add && params_update_options.to_add.length > 0;\n\n\t\tif (params_delete_required || params_add_required) {\n\t\t\tthis._node.params.update_params(params_update_options);\n\t\t\t// update them based on the imported data\n\t\t\tfor (let spare_param of this._node.params.spare) {\n\t\t\t\tconst param_data = data[spare_param.name] as ComplexParamJsonExporterData<ParamType>;\n\t\t\t\t// JsonImportDispatcher.dispatch_param(spare_param).process_data(param_data);\n\t\t\t\tif (!spare_param.parent_param && param_data) {\n\t\t\t\t\tif (this._is_param_data_complex(param_data)) {\n\t\t\t\t\t\tthis._process_param_data_complex(spare_param.name, param_data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._process_param_data_simple(\n\t\t\t\t\t\t\tspare_param.name,\n\t\t\t\t\t\t\tparam_data as SimpleParamJsonExporterData<ParamType>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// those hooks are useful for some gl nodes,\n\t\t// such as the constant, which needs to update its connections\n\t\t// based on another parameter, which will be set just before\n\t\tthis._node.params.run_on_scene_load_hooks();\n\t}\n\n\tprivate _process_param_data_simple(param_name: string, param_data: SimpleParamJsonExporterData<ParamType>) {\n\t\tthis._node.params.get(param_name)?.set(param_data);\n\t}\n\n\tprivate _process_param_data_complex(param_name: string, param_data: ComplexParamJsonExporterData<ParamType>) {\n\t\tconst param = this._node.params.get(param_name);\n\t\tif (param) {\n\t\t\tJsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t}\n\t\t// return\n\t\t// const has_param = this._node.params.has_param(param_name);\n\t\t// const param_type = param_data['type']!;\n\n\t\t// let has_param_and_same_type = false;\n\t\t// let param;\n\t\t// if (has_param) {\n\t\t// \tparam = this._node.params.get(param_name);\n\t\t// \t// we can safely consider same type if param_type is not mentioned\n\t\t// \tif ((param && param.type == param_type) || param_type == null) {\n\t\t// \t\thas_param_and_same_type = true;\n\t\t// \t}\n\t\t// }\n\t\t// if (has_param_and_same_type) {\n\t\t// \tparam = this._node.params.get(param_name);\n\t\t// \tif (param) {\n\t\t// \t\tJsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t// \t\t// param.visit(JsonImporterVisitor).process_data(param_data);\n\t\t// \t}\n\t\t// } else {\n\t\t// \tconst options = param_data['options'];\n\t\t// \tif (options && param_type) {\n\t\t// \t\tconst is_spare = options['spare'] === true;\n\t\t// \t\tif (is_spare && param_data['default_value']) {\n\t\t// \t\t\tif (has_param) {\n\t\t// \t\t\t\tthis._node.params.delete_param(param_name);\n\t\t// \t\t\t}\n\t\t// \t\t\tparam = this._node.add_param(param_type, param_name, param_data['default_value'], options);\n\t\t// \t\t\tif (param) {\n\t\t// \t\t\t\tJsonImportDispatcher.dispatch_param(param).process_data(param_data);\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t}\n\n\tprivate _is_param_data_complex(param_data: ParamJsonExporterData<ParamType>): boolean {\n\t\t// we can test here most param value serialized, except for ramp\n\t\tif (\n\t\t\tlodash_isString(param_data) ||\n\t\t\tlodash_isNumber(param_data) ||\n\t\t\tlodash_isArray(param_data) ||\n\t\t\tlodash_isBoolean(param_data)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (lodash_isObject(param_data)) {\n\t\t\tif (Object.keys(param_data).includes('type')) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfrom_data_custom(data: NodeJsonExporterData) {}\n}\n","import {ParamJsonImporter} from '../Param';\nimport {ComplexParamJsonExporterData} from '../../export/Param';\nimport {TypedMultipleParam} from '../../../../params/_Multiple';\nimport {ParamType} from '../../../../poly/ParamType';\n\nexport class ParamMultipleJsonImporter extends ParamJsonImporter<TypedMultipleParam<ParamType>> {\n\tadd_main(data: ComplexParamJsonExporterData<ParamType>) {\n\t\t// const components = data['components'];\n\t\t// if (components) {\n\t\t// \tObject.keys(components).forEach((component_name) => {\n\t\t// \t\tconst param_name = `${this._param.name}${component_name}`;\n\t\t// \t\tconst component_param = this._param.node.params\n\t\t// \t\t\t.get(this._param.name)\n\t\t// \t\t\t?.components?.filter((c) => c.name == param_name)[0];\n\t\t// \t\tif (component_param) {\n\t\t// \t\t\tconst component_data = components[component_name];\n\t\t// \t\t\tJsonImportDispatcher.dispatch_param(component_param as FloatParam).process_data(component_data);\n\t\t// \t\t}\n\t\t// \t});\n\t\t// }\n\t}\n}\n","// import lodash_isString from 'lodash/isString';\nimport {ParamJsonImporter} from '../Param';\nimport {ComplexParamJsonExporterData} from '../../export/Param';\nimport {StringParam} from '../../../../params/String';\nimport {ParamType} from '../../../../poly/ParamType';\n\nconst LINE_BREAK_REGEXP = /\\\\n+/g;\n\nexport class ParamStringJsonImporter extends ParamJsonImporter<StringParam> {\n\tadd_main(data: ComplexParamJsonExporterData<ParamType.STRING>) {\n\t\tlet raw_input = data['raw_input'];\n\t\tif (raw_input !== undefined) {\n\t\t\t// if (lodash_isString(value)) {\n\t\t\traw_input = raw_input.replace(LINE_BREAK_REGEXP, '\\n');\n\t\t\tthis._param.set(raw_input);\n\t\t\t// }\n\t\t}\n\t}\n}\n","import {ParamJsonImporter} from '../Param';\n// import {RampValueJson} from '../../../../params/ramp/RampValue';\nimport {ComplexParamJsonExporterData} from '../../export/Param';\nimport {RampParam} from '../../../../params/Ramp';\nimport {ParamType} from '../../../../poly/ParamType';\n\nexport class ParamRampJsonImporter extends ParamJsonImporter<RampParam> {\n\tadd_main(data: ComplexParamJsonExporterData<ParamType.RAMP>) {\n\t\tconst raw_input = data['raw_input']; // as RampValueJson;\n\t\tif (raw_input) {\n\t\t\t// const ramp_value = RampValue.from_json(value);\n\t\t\tthis._param.set(raw_input);\n\t\t}\n\t}\n}\n","import {CopRegister} from './Cop';\nimport {EventRegister} from './Event';\nimport {GlRegister} from './Gl';\nimport {MatRegister} from './Mat';\nimport {ObjRegister} from './Obj';\nimport {SopRegister} from './Sop';\n\nimport {Poly} from '../../Poly';\n\nexport class AllRegister {\n\tstatic run() {\n\t\tCopRegister.run(Poly.instance());\n\t\tEventRegister.run(Poly.instance());\n\t\tGlRegister.run(Poly.instance());\n\t\tMatRegister.run(Poly.instance());\n\t\tObjRegister.run(Poly.instance());\n\t\tSopRegister.run(Poly.instance());\n\t}\n}\n","import {CATEGORY_COP} from './Category';\n\nimport {BuilderCopNode} from '../../nodes/cop/Builder';\nimport {EnvMapCopNode} from '../../nodes/cop/EnvMap';\nimport {FileCopNode} from '../../nodes/cop/File';\nimport {NullCopNode} from '../../nodes/cop/Null';\nimport {SwitchCopNode} from '../../nodes/cop/Switch';\n\nexport interface CopNodeChildrenMap {\n\tbuilder: BuilderCopNode;\n\tenv_map: EnvMapCopNode;\n\tfile: FileCopNode;\n\tnull: NullCopNode;\n\tswitch: SwitchCopNode;\n}\n\nimport {Poly} from '../../Poly';\nexport class CopRegister {\n\tstatic run(poly: Poly) {\n\t\tpoly.register_node(BuilderCopNode, CATEGORY_COP.ADVANCED);\n\t\tpoly.register_node(EnvMapCopNode, CATEGORY_COP.INPUT);\n\t\tpoly.register_node(FileCopNode, CATEGORY_COP.INPUT);\n\t\tpoly.register_node(NullCopNode, CATEGORY_COP.MISC);\n\t\tpoly.register_node(SwitchCopNode, CATEGORY_COP.MISC);\n\t}\n}\n","import {WebGLRenderer} from 'three/src/renderers/WebGLRenderer';\nimport {WebGLRenderTarget} from 'three/src/renderers/WebGLRenderTarget';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {Scene} from 'three/src/scenes/Scene';\nimport {RGBAFormat} from 'three/src/constants';\nimport {PlaneBufferGeometry} from 'three/src/geometries/PlaneGeometry';\nimport {NearestFilter} from 'three/src/constants';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {HalfFloatType} from 'three/src/constants';\nimport {FloatType} from 'three/src/constants';\nimport {DataTexture} from 'three/src/textures/DataTexture';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Camera} from 'three/src/cameras/Camera';\n\n// import NodeBase from '../_Base'\n\n// import Container from '../../Container/Texture'\n// import {CoreImage} from '../../../Core/Image'\n\nimport {TypedCopNode} from './_Base';\n\n// import { GlobalsGeometryHandler } from \"src/Engine/Node/Gl/Assembler/Globals/Geometry\";\nimport {GlAssemblerController} from '../gl/code/Controller';\nimport {ShaderAssemblerTexture} from '../gl/code/assemblers/textures/Texture';\n\nimport {IUniform} from 'three/src/renderers/shaders/UniformsLib';\nexport interface IUniforms {\n\t[uniform: string]: IUniform;\n}\n\nconst PASS_THROUGH_SHADER = `\nvoid main()\t{\n\tgl_Position = vec4( position, 1.0 );\n}\n`;\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\nimport {GlobalsGeometryHandler} from '../gl/code/globals/Geometry';\nimport {GlNodeChildrenMap} from '../../poly/registers/Gl';\nimport {BaseGlNodeType} from '../gl/_Base';\nimport {GlNodeFinder} from '../gl/code/utils/NodeFinder';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {CoreSleep} from '../../../core/Sleep';\nclass BuilderCopParamsConfig extends NodeParamsConfig {\n\tresolution = ParamConfig.VECTOR2([256, 256]);\n}\n\nconst ParamsConfig = new BuilderCopParamsConfig();\n\nexport class BuilderCopNode extends TypedCopNode<BuilderCopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'builder';\n\t}\n\tprotected _assembler_controller: GlAssemblerController<\n\t\tShaderAssemblerTexture\n\t> = this._create_assembler_controller();\n\n\tprivate _create_assembler_controller() {\n\t\tconst globals_handler = new GlobalsGeometryHandler();\n\t\tconst assembler_controller = new GlAssemblerController<ShaderAssemblerTexture>(this, ShaderAssemblerTexture);\n\t\tassembler_controller.set_assembler_globals_handler(globals_handler);\n\t\treturn assembler_controller;\n\t}\n\n\tget assembler_controller() {\n\t\treturn this._assembler_controller;\n\t}\n\n\tprivate _texture_mesh: Mesh = new Mesh(new PlaneBufferGeometry(2, 2));\n\tprivate _fragment_shader: string | undefined;\n\tprivate _uniforms: IUniforms | undefined;\n\tprivate _texture_material: ShaderMaterial = new ShaderMaterial({\n\t\tuniforms: {},\n\t\tvertexShader: PASS_THROUGH_SHADER,\n\t\tfragmentShader: '',\n\t});\n\tprivate _texture_scene: Scene = new Scene();\n\tprivate _texture_camera: Camera = new Camera();\n\tprivate _render_target: WebGLRenderTarget | undefined;\n\tprivate _renderer: WebGLRenderer | undefined;\n\tprivate _pixelBuffer: Float32Array | undefined;\n\t// private _assembler: ShaderAssemblerTexture;\n\n\tprotected _children_controller_context = NodeContext.GL;\n\tinitialize_node() {\n\t\tthis.lifecycle.add_on_create_hook(this.assembler_controller.on_create.bind(this.assembler_controller));\n\t\tthis.children_controller?.init();\n\t\tthis._texture_mesh.material = this._texture_material;\n\t\tthis._texture_scene.add(this._texture_mesh);\n\t\tthis._texture_camera.position.z = 1;\n\n\t\t// this._init_common_shader_builder(ShaderAssemblerTexture, {\n\t\t// \thas_display_flag: true\n\t\t// });\n\t\t// this.set_inputs_count_to_zero();\n\n\t\tthis.dirty_controller.add_post_dirty_hook(\n\t\t\t'_reset_if_resolution_changed',\n\t\t\tthis._reset_if_resolution_changed.bind(this)\n\t\t);\n\t\tthis.params.set_post_create_params_hook(() => {\n\t\t\tthis._render_target = this._create_render_target();\n\t\t\tthis._renderer = this._create_renderer(this._render_target);\n\t\t});\n\t}\n\n\tcreate_node<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as GlNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseGlNodeType[];\n\t}\n\tnodes_by_type<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as GlNodeChildrenMap[K][];\n\t}\n\n\tprivate _reset_if_resolution_changed(trigger?: CoreGraphNode) {\n\t\tif (trigger && trigger.graph_node_id == this.p.resolution.graph_node_id) {\n\t\t\tthis._reset();\n\t\t}\n\t}\n\tprivate _reset() {\n\t\tthis._render_target = this._create_render_target();\n\t\tthis._renderer = this._create_renderer(this._render_target);\n\t\tthis._pixelBuffer = this._create_pixel_buffer();\n\t}\n\tprivate _create_pixel_buffer() {\n\t\tconst width = this.pv.resolution.x;\n\t\tconst height = this.pv.resolution.y;\n\t\treturn new Float32Array(width * height * 4);\n\t}\n\n\tasync cook() {\n\t\tawait this.compile_if_required();\n\t\t// await this.assembler_controller.assign_uniform_values();\n\n\t\tthis.render_on_target();\n\t}\n\n\tshaders_by_name() {\n\t\treturn {\n\t\t\tfragment: this._fragment_shader,\n\t\t};\n\t}\n\n\tasync compile_if_required() {\n\t\tif (this.assembler_controller.compile_required()) {\n\t\t\t// && !this.pv.locked){\n\t\t\t// this._texture_material = undefined;\n\t\t\tawait this.run_assembler();\n\t\t\t// const fragment_shader = this.assembler_controller.assembler.fragment_shader();\n\t\t\t// const uniforms = this.assembler_controller.assembler.uniforms();\n\t\t\t// if (fragment_shader && uniforms) {\n\t\t\t// \t// await this.eval_params(this._new_params);\n\t\t\t// \tthis._fragment_shader = fragment_shader;\n\t\t\t// \tthis._uniforms = uniforms;\n\t\t\t// } else {\n\t\t\t// \tthrow 'STOP';\n\t\t\t// }\n\t\t\tthis.assembler_controller.post_compile();\n\t\t}\n\t}\n\tprivate async run_assembler() {\n\t\tconst output_nodes = GlNodeFinder.find_output_nodes(this);\n\t\tif (output_nodes.length > 1) {\n\t\t\tthis.states.error.set('only one output node allowed');\n\t\t\treturn;\n\t\t}\n\t\tconst output_node = output_nodes[0];\n\t\tif (output_node) {\n\t\t\tthis.assembler_controller.assembler.set_root_nodes([output_node]);\n\n\t\t\t// main compilation\n\t\t\tawait this.assembler_controller.assembler.update_fragment_shader();\n\n\t\t\t// receives fragment and uniforms\n\t\t\tconst fragment_shader = this.assembler_controller.assembler.fragment_shader();\n\t\t\tconst uniforms = this.assembler_controller.assembler.uniforms();\n\t\t\tif (fragment_shader && uniforms) {\n\t\t\t\tthis._fragment_shader = fragment_shader;\n\t\t\t\tthis._uniforms = uniforms;\n\t\t\t}\n\n\t\t\t// TODO: remove this once the scene knows how to re-render\n\t\t\t// the render target if it is .uniforms_time_dependent()\n\t\t\tif (this.assembler_controller.assembler.uniforms_time_dependent()) {\n\t\t\t\tthis.states.time_dependent.force_time_dependent();\n\t\t\t} else {\n\t\t\t\tthis.states.time_dependent.unforce_time_dependent();\n\t\t\t}\n\t\t}\n\n\t\tif (this._fragment_shader && this._uniforms) {\n\t\t\tthis._texture_material.fragmentShader = this._fragment_shader;\n\t\t\tthis._texture_material.uniforms = this._uniforms;\n\t\t\tthis._texture_material.needsUpdate = true;\n\t\t\tthis._texture_material.uniforms.resolution = {\n\t\t\t\tvalue: this.pv.resolution,\n\t\t\t};\n\t\t}\n\n\t\t// this._compile_required = false;\n\t}\n\n\tprivate _create_renderer(render_target: WebGLRenderTarget) {\n\t\tconst renderer = new WebGLRenderer({antialias: true});\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\n\t\t// document.body.appendChild( renderer.domElement )\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setRenderTarget(render_target);\n\n\t\treturn renderer;\n\t}\n\n\tasync render_on_target() {\n\t\tconst width = this.pv.resolution.x;\n\t\tconst height = this.pv.resolution.y;\n\n\t\t// var passThruUniforms = {\n\t\t// \tpassThruTexture: { value: null }\n\t\t// };\n\n\t\tif (!(this._renderer && this._render_target)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._renderer.clear();\n\t\tthis._renderer.render(this._texture_scene, this._texture_camera);\n\t\t// renderer.setClearColor( 0x000000 ) // cancels the bg color\n\n\t\t//read the pixel\n\t\tthis._pixelBuffer = this._pixelBuffer || this._create_pixel_buffer();\n\t\tthis._renderer.readRenderTargetPixels(this._render_target, 0, 0, width, height, this._pixelBuffer);\n\n\t\t// renderer.setRenderTarget( null );\n\n\t\t// var pixelBuffer2 = new Uint8Array( width * height * 4 );\n\t\t// var pixelBuffer2 = Uint8Array.from(pixelBuffer)\n\n\t\t// be careful about the type FloatType\n\t\t// as this may require webgl extensions\n\t\t// see https://threejs.org/docs/#api/en/textures/DataTexture\n\t\tconst texture = new DataTexture(this._pixelBuffer, width, height, RGBAFormat, FloatType);\n\t\t// // texture.wrapS = ClampToEdgeWrapping\n\t\t// // texture.wrapT = ClampToEdgeWrapping\n\t\t// // texture.wrapS = ClampToEdgeWrapping\n\t\t// // texture.wrapT = ClampToEdgeWrapping\n\t\t// this._texture.needsUpdate = true;\n\n\t\tawait CoreSleep.sleep(2000);\n\n\t\tif (texture) {\n\t\t\tthis.set_texture(texture);\n\t\t} else {\n\t\t\tthis.cook_controller.end_cook();\n\t\t}\n\n\t\t// this.set_texture(this._texture);\n\t\t// this.cook_controller.end_cook();\n\t}\n\n\tprivate _create_render_target() {\n\t\tconst wrapS = ClampToEdgeWrapping;\n\t\tconst wrapT = ClampToEdgeWrapping;\n\n\t\tconst minFilter = NearestFilter;\n\t\tconst magFilter = NearestFilter;\n\n\t\tvar renderTarget = new WebGLRenderTarget(this.pv.resolution.x, this.pv.resolution.y, {\n\t\t\twrapS: wrapS,\n\t\t\twrapT: wrapT,\n\t\t\tminFilter: minFilter,\n\t\t\tmagFilter: magFilter,\n\t\t\tformat: RGBAFormat,\n\t\t\ttype: /(iPad|iPhone|iPod)/g.test(navigator.userAgent) ? HalfFloatType : FloatType,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthBuffer: false,\n\t\t});\n\t\treturn renderTarget;\n\t}\n\n\t// create_material(fragment_shader:string, uniforms:IUniforms) {\n\t// \tvar material = new ShaderMaterial({\n\t// \t\tuniforms: uniforms,\n\t// \t\tvertexShader: PASS_THROUGH_SHADER,\n\t// \t\tfragmentShader: fragment_shader\n\t// \t});\n\n\t// \t// addResolutionDefine( material );\n\n\t// \treturn material;\n\t// }\n}\n","import {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\n\nexport class TextureContainer extends TypedContainer<ContainableMap['TEXTURE']> {\n\t// _content: Texture;\n\tset_content(content: ContainableMap['TEXTURE']) {\n\t\tsuper.set_content(content);\n\t}\n\n\t// set_texture(texture: Texture){\n\t// \tif (this._content != null) {\n\t// \t\tthis._content.dispose();\n\t// \t}\n\t// \tthis.set_content(texture);\n\t// }\n\ttexture(): ContainableMap['TEXTURE'] {\n\t\treturn this._content;\n\t}\n\tcore_content(): ContainableMap['TEXTURE'] {\n\t\treturn this._content;\n\t}\n\tcore_content_cloned(): ContainableMap['TEXTURE'] | undefined {\n\t\tconsole.log('clone', this._content);\n\t\tconst texture = this._content?.clone();\n\t\tif (texture) {\n\t\t\ttexture.needsUpdate = true;\n\t\t}\n\t\treturn texture;\n\t}\n\n\tobject() {\n\t\treturn this.texture();\n\t}\n\n\tinfos() {\n\t\tif (this._content != null) {\n\t\t\treturn [this._content];\n\t\t}\n\t}\n\tresolution(): [number, number] {\n\t\tif (this._content) {\n\t\t\tif (this._content.image) {\n\t\t\t\treturn [this._content.image.width, this._content.image.height];\n\t\t\t}\n\t\t}\n\t\treturn [-1, -1];\n\t}\n}\n","import {BaseFlag} from './Base';\nimport {NodeEvent} from '../../../poly/NodeEvent';\n\n// export interface BypassOptions {\n// \thas_bypass_flag?: boolean;\n// }\n\nexport class BypassFlag extends BaseFlag {\n\tprotected _state: boolean = false;\n\ton_update() {\n\t\tthis.node.emit(NodeEvent.FLAG_BYPASS_UPDATED);\n\t\tthis.node.set_dirty();\n\t}\n}\n\n// export function Bypass<TBase extends Constructor>(Base: TBase) {\n// \treturn class Mixin extends Base {\n// \t\tprotected self: BaseNode = (<unknown>this) as BaseNode;\n// \t\t_has_bypass_flag: boolean = true;\n// \t\t_bypass_flag: boolean = false;\n\n// \t\t_init_bypass_flag(options: BypassOptions = {}) {\n// \t\t\tif (options['has_bypass_flag'] == null) {\n// \t\t\t\toptions['has_bypass_flag'] = true;\n// \t\t\t}\n\n// \t\t\tthis._has_bypass_flag = options['has_bypass_flag'];\n// \t\t\tthis._bypass_flag = false;\n// \t\t}\n\n// \t\thas_bypass_flag(): boolean {\n// \t\t\treturn this._has_bypass_flag;\n// \t\t}\n\n// \t\tis_bypassed(): boolean {\n// \t\t\treturn this._bypass_flag;\n// \t\t}\n\n// \t\tset_bypass_flag(state: boolean) {\n// \t\t\tif (state == null) {\n// \t\t\t\tstate = true;\n// \t\t\t}\n// \t\t\tif (state !== this._bypass_flag) {\n// \t\t\t\tthis._bypass_flag = state;\n// \t\t\t\tthis.self.emit('bypass_flag_update');\n// \t\t\t\tthis.self.set_dirty();\n// \t\t\t\t// this.post_set_bypass_flag()\n// \t\t\t}\n// \t\t}\n\n// \t\t// post_process_container_request_as_bypassed(input_node: BaseNode){}\n// \t\t// post_set_bypass_flag(){}\n\n// \t\ttoggle_bypass_flag() {\n// \t\t\tthis.set_bypass_flag(!this.is_bypassed());\n// \t\t}\n// \t};\n// }\n","import {BaseFlag} from './Base';\nimport {NodeEvent} from '../../../poly/NodeEvent';\n\nexport class DisplayFlag extends BaseFlag {\n\ton_update() {\n\t\tthis.node.emit(NodeEvent.FLAG_DISPLAY_UPDATED);\n\t\t// this.node.set_dirty();\n\t}\n}\n","import {ParamTypeToConnectionPointTypeMap} from '../../utils/connections/ConnectionPointType';\nimport {BaseGlNodeType} from '../_Base';\nimport {BaseNamedConnectionPointType, TypedNamedConnectionPoint} from '../../utils/connections/NamedConnectionPoint';\n// import {ParamValue} from '../../../params/types/ParamValue';\nimport {ParamType} from '../../../poly/ParamType';\n// import {ParamValueToDefaultConverter} from '../../utils/params/ParamValueToDefaultConverter';\n// import {NodeEvent} from '../../../poly/NodeEvent';\nimport {ParamsUpdateOptions} from '../../utils/params/ParamsController';\n// import {ParamInitValueSerializedTypeMap} from '../../../params/types/ParamInitValueSerializedTypeMap';\nimport {ParamInitValueSerialized} from '../../../params/types/ParamInitValueSerialized';\nimport lodash_clone from 'lodash/clone';\nimport lodash_isArray from 'lodash/isArray';\nimport lodash_isNumber from 'lodash/isNumber';\n\nexport class GlNodeSpareParamsController {\n\tprivate _allow_inputs_created_from_params: boolean = true;\n\tprivate _inputless_param_names: string[] | undefined;\n\tconstructor(private node: BaseGlNodeType) {}\n\n\tdisallow_inputs_created_from_params() {\n\t\tthis._allow_inputs_created_from_params = false;\n\t}\n\n\tinitialize_node() {\n\t\tthis.node.params.set_post_create_params_hook(this.create_inputs_from_params.bind(this));\n\t}\n\n\tcreate_inputs_from_params() {\n\t\tif (!this._allow_inputs_created_from_params) {\n\t\t\treturn;\n\t\t}\n\t\tconst connections: BaseNamedConnectionPointType[] = [];\n\t\tfor (let param_name of this.node.params.names) {\n\t\t\tlet add_input = true;\n\t\t\tif (\n\t\t\t\tthis._inputless_param_names &&\n\t\t\t\tthis._inputless_param_names.length > 0 &&\n\t\t\t\tthis._inputless_param_names.includes(param_name)\n\t\t\t) {\n\t\t\t\tadd_input = false;\n\t\t\t}\n\t\t\tif (add_input) {\n\t\t\t\tif (this.node.params.has(param_name)) {\n\t\t\t\t\tconst param = this.node.params.get(param_name);\n\t\t\t\t\tif (param && !param.parent_param) {\n\t\t\t\t\t\tconst connection_type = ParamTypeToConnectionPointTypeMap[param.type];\n\t\t\t\t\t\tif (connection_type) {\n\t\t\t\t\t\t\tconst connection = new TypedNamedConnectionPoint(param.name, connection_type);\n\t\t\t\t\t\t\tconnections.push(connection);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.node.io.inputs.set_named_input_connection_points(connections);\n\t}\n\n\tset_inputless_param_names(names: string[]) {\n\t\treturn (this._inputless_param_names = names);\n\t}\n\n\tcreate_spare_parameters() {\n\t\tconst raw_input_serialized_by_param_name: Map<string, ParamInitValueSerialized> = new Map();\n\t\tconst default_value_serialized_by_param_name: Map<string, ParamInitValueSerialized> = new Map();\n\t\tconst current_param_names: string[] = this.node.params.spare_names;\n\t\tconst params_update_options: ParamsUpdateOptions = {};\n\n\t\tfor (let param_name of current_param_names) {\n\t\t\tif (this.node.params.has(param_name)) {\n\t\t\t\tconst param = this.node.params.get(param_name);\n\t\t\t\tif (param) {\n\t\t\t\t\traw_input_serialized_by_param_name.set(param_name, param.raw_input_serialized);\n\t\t\t\t\tdefault_value_serialized_by_param_name.set(param_name, param.default_value_serialized);\n\t\t\t\t\tparams_update_options.names_to_delete = params_update_options.names_to_delete || [];\n\t\t\t\t\tparams_update_options.names_to_delete.push(param_name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let connection_point of this.node.io.inputs.named_input_connection_points) {\n\t\t\tconst param_name = connection_point.name;\n\t\t\tconst param_type: ParamType = connection_point.param_type;\n\t\t\tlet init_value = connection_point.init_value;\n\t\t\t// let raw_input: ParamInitValueSerialized= null\n\n\t\t\t// const raw_input = raw_input_serialized_by_param_name.get(param_name);\n\t\t\tconst last_param_init_value = default_value_serialized_by_param_name.get(param_name);\n\t\t\t// if (last_param_raw_input != null && last_param_init_value != null) {\n\t\t\t// init_value = ParamValueToDefaultConverter.from_value(param_type, last_param_raw_input);\n\t\t\t// if (init_value == null) {\n\t\t\tconst default_value_from_name = this.node.gl_input_default_value(param_name);\n\n\t\t\t// TODO: this should really store the largest set value\n\t\t\t// (as in the ones with the most components)\n\t\t\t// so that for an Add Gl Node, if I set a vec4 to [1,2,3,4]\n\t\t\t// and then set an input type, which will transform the param to a float\n\t\t\t// it will have a value of 1.\n\t\t\t// But if I then set it to a vec4 again, it will remember [1,2,3,4]\n\t\t\tif (default_value_from_name != null) {\n\t\t\t\tinit_value = default_value_from_name;\n\t\t\t} else {\n\t\t\t\tif (last_param_init_value != null) {\n\t\t\t\t\tinit_value = last_param_init_value;\n\t\t\t\t} else {\n\t\t\t\t\tinit_value = connection_point.init_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lodash_isArray(connection_point.init_value) && lodash_isNumber(init_value)) {\n\t\t\t\tconst array = new Array(connection_point.init_value.length) as Number2;\n\t\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\t\tarray[i] = init_value;\n\t\t\t\t}\n\t\t\t\tinit_value = array;\n\t\t\t}\n\n\t\t\tif (init_value != null) {\n\t\t\t\tparams_update_options.to_add = params_update_options.to_add || [];\n\t\t\t\tparams_update_options.to_add.push({\n\t\t\t\t\tname: param_name,\n\t\t\t\t\ttype: param_type,\n\t\t\t\t\tinit_value: lodash_clone(init_value as any),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tspare: true,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!this.node.scene.loading_controller.is_loading) {\n\t\t\tthis.node.params.update_params(params_update_options);\n\n\t\t\tfor (let spare_param of this.node.params.spare) {\n\t\t\t\tif (!spare_param.parent_param) {\n\t\t\t\t\tconst raw_input = raw_input_serialized_by_param_name.get(spare_param.name);\n\t\t\t\t\tif (raw_input) {\n\t\t\t\t\t\tspare_param.set(raw_input as any);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseNodeType} from '../../../nodes/_Base';\nimport {SceneJsonExporter} from './Scene';\n// import {JsonExporterVisitor} from './Visitor';\nimport {NodeContext} from '../../../poly/NodeContext';\nimport {JsonExportDispatcher} from './Dispatcher';\nimport {ParamJsonExporterData} from './Param';\nimport {ParamType} from '../../../poly/ParamType';\n\ninterface NamedInputData {\n\tname: string;\n\tnode: string;\n\toutput: string;\n}\ntype IndexedInputData = string | null;\nexport type InputData = NamedInputData | IndexedInputData;\n\ninterface FlagsData {\n\tbypass?: boolean;\n\tdisplay?: boolean;\n}\n\nexport interface NodeJsonExporterData {\n\ttype: string;\n\tnodes: Dictionary<NodeJsonExporterData>;\n\tchildren_context: NodeContext;\n\tparams?: Dictionary<ParamJsonExporterData<ParamType>>;\n\tinputs?: InputData[];\n\tselection?: string[];\n\tflags?: FlagsData;\n\toverride_clonable_state: boolean;\n}\n\nexport interface NodeJsonExporterUIData {\n\tpos?: Number2;\n\tcomment?: string;\n\tnodes: Dictionary<NodeJsonExporterUIData>;\n}\n\nexport class NodeJsonExporter<T extends BaseNodeType> {\n\tprivate _data: NodeJsonExporterData | undefined; // = {} as NodeJsonExporterData;\n\tconstructor(protected _node: T) {}\n\n\tdata(): NodeJsonExporterData {\n\t\tif (!this.is_root()) {\n\t\t\tthis._node.scene.nodes_controller.register_node_context_signature(this._node);\n\t\t}\n\t\tthis._data = {\n\t\t\ttype: this._node.type,\n\t\t} as NodeJsonExporterData;\n\n\t\t// const required_imports = this._node.required_imports()\n\t\t// if(required_imports){\n\t\t// \tthis._data['required_imports'] = required_imports\n\t\t// }\n\n\t\tconst nodes_data = this.nodes_data();\n\t\tif (Object.keys(nodes_data).length > 0) {\n\t\t\tthis._data['nodes'] = nodes_data;\n\n\t\t\t// required by the Store::Scene::Exporter.rb\n\t\t\tconst context = this._node.children_controller?.context;\n\t\t\tif (context) {\n\t\t\t\tthis._data['children_context'] = context;\n\t\t\t}\n\t\t}\n\n\t\tif (!this.is_root()) {\n\t\t\tthis._data['params'] = this.params_data();\n\t\t\t//data['custom'] = []\n\t\t\tthis._data['inputs'] = this.inputs_data();\n\t\t}\n\n\t\t// TODO: does that create flags automatically? it should not\n\t\tif (this._node.flags) {\n\t\t\tthis._data['flags'] = {};\n\t\t\tif (this._node.flags.has_bypass()) {\n\t\t\t\tif (this._node.flags.bypass?.active) {\n\t\t\t\t\tthis._data['flags']['bypass'] = this._node.flags.bypass.active;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._node.flags.has_display()) {\n\t\t\t\tthis._data['flags']['display'] = this._node.flags.display?.active;\n\t\t\t}\n\t\t}\n\n\t\tif (this._node.children_allowed()) {\n\t\t\tconst selection = this._node.children_controller?.selection;\n\t\t\tif (selection && this._node.children().length > 0) {\n\t\t\t\t// only save the nodes that are still present, in case the selection just got deleted\n\t\t\t\tconst selected_children: BaseNodeType[] = [];\n\t\t\t\tconst selected_ids: Dictionary<boolean> = {};\n\t\t\t\tfor (let selected_node of selection.nodes()) {\n\t\t\t\t\tselected_ids[selected_node.graph_node_id] = true;\n\t\t\t\t}\n\t\t\t\tfor (let child of this._node.children()) {\n\t\t\t\t\tif (child.graph_node_id in selected_ids) {\n\t\t\t\t\t\tselected_children.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._data['selection'] = selected_children.map((n) => n.name);\n\t\t\t}\n\t\t}\n\n\t\t// inputs clone\n\t\tif (this._node.io.inputs.override_clonable_state_allowed()) {\n\t\t\tconst override = this._node.io.inputs.override_clonable_state();\n\t\t\tif (override) {\n\t\t\t\tthis._data['override_clonable_state'] = override;\n\t\t\t}\n\t\t}\n\n\t\t// custom\n\t\tthis.add_custom();\n\n\t\treturn this._data;\n\t}\n\n\tui_data(): NodeJsonExporterUIData {\n\t\tconst data: NodeJsonExporterUIData = {} as NodeJsonExporterUIData;\n\t\tif (!this.is_root()) {\n\t\t\tconst ui_data = this._node.ui_data;\n\t\t\tdata['pos'] = ui_data.position.toArray() as Number2;\n\t\t\tconst comment = ui_data.comment;\n\t\t\tif (comment) {\n\t\t\t\tdata['comment'] = SceneJsonExporter.sanitize_string(comment);\n\t\t\t}\n\t\t}\n\t\tconst children = this._node.children();\n\t\tif (children.length > 0) {\n\t\t\tdata['nodes'] = {};\n\t\t\tchildren.forEach((child) => {\n\t\t\t\tconst node_exporter = JsonExportDispatcher.dispatch_node(child); //.visit(JsonExporterVisitor); //.json_exporter()\n\t\t\t\tdata['nodes'][child.name] = node_exporter.ui_data();\n\t\t\t});\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate is_root() {\n\t\treturn this._node.parent === null && this._node.graph_node_id == this._node.root.graph_node_id;\n\t}\n\n\tprotected inputs_data() {\n\t\tconst data: InputData[] = [];\n\t\t// Object.keys(this._node.io.inputs.inputs()).forEach((input_index) => {\n\t\tthis._node.io.inputs.inputs().forEach((input, input_index) => {\n\t\t\t// const input = this._node.io.inputs.input(input_index);\n\t\t\tif (input) {\n\t\t\t\t// const connection_point = this._node.io.inputs.named_input_connection_points;\n\t\t\t\tconst connection = this._node.io.connections.input_connection(input_index)!;\n\t\t\t\tif (this._node.io.inputs.has_named_inputs) {\n\t\t\t\t\tconst input_name = this._node.io.inputs.named_input_connection_points[input_index].name;\n\t\t\t\t\t// const output_index = input_connections[input_index].output_index();\n\t\t\t\t\tconst output_index = connection.output_index;\n\t\t\t\t\tconst output_name = input.io.outputs.named_output_connection_points[output_index].name;\n\t\t\t\t\tdata.push({name: input_name, node: input.name, output: output_name});\n\t\t\t\t} else {\n\t\t\t\t\tdata.push(input.name);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tprotected params_data() {\n\t\tconst data: Dictionary<ParamJsonExporterData<ParamType>> = {};\n\n\t\tfor (let param_name of this._node.params.names) {\n\t\t\tconst param = this._node.params.get(param_name);\n\t\t\tif (param && !param.parent_param) {\n\t\t\t\tconst param_exporter = JsonExportDispatcher.dispatch_param(param); //.visit(JsonExporterVisitor); //.json_exporter()\n\t\t\t\tif (param_exporter.required) {\n\t\t\t\t\tconst params_data = param_exporter.data();\n\t\t\t\t\tdata[param.name] = params_data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprotected nodes_data() {\n\t\tconst data: Dictionary<NodeJsonExporterData> = {};\n\t\tfor (let child of this._node.children()) {\n\t\t\tconst node_exporter = JsonExportDispatcher.dispatch_node(child); //.json_exporter()\n\t\t\tdata[child.name] = node_exporter.data();\n\t\t}\n\t\treturn data;\n\t}\n\n\tprotected add_custom() {}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {TypedNumericParam} from '../../../../params/_Numeric';\nimport {ParamType} from '../../../../poly/ParamType';\n\nexport class ParamNumericJsonExporter extends ParamJsonExporter<TypedNumericParam<ParamType>> {\n\tadd_main() {\n\t\t// if (this._param.has_expression() && this._param.expression_controller?.expression) {\n\t\t// \t// const escaped_expression = this._param.expression().replace(/'/g, \"\\\\'\");\n\t\t// \tthis._data['expression'] = this._param.expression_controller?.expression;\n\t\t// } else {\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = this._param.raw_input_serialized;\n\t\t} else {\n\t\t\treturn this._param.raw_input_serialized;\n\t\t}\n\t\t// }\n\t}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {OperatorPathParam} from '../../../../params/OperatorPath';\nimport {SceneJsonExporter} from '../Scene';\n\nexport class ParamOperatorPathJsonExporter extends ParamJsonExporter<OperatorPathParam> {\n\tadd_main() {\n\t\tlet val = this._param.raw_input;\n\t\t// val = val.replace(/'/g, \"\\\\'\");\n\t\tval = SceneJsonExporter.sanitize_string(val);\n\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = val;\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t}\n}\n","// import lodash_isString from 'lodash/isString'\nimport {ParamJsonExporter} from '../Param';\nimport {SceneJsonExporter} from '../Scene';\nimport {StringParam} from '../../../../params/String';\n\nexport class ParamStringJsonExporter extends ParamJsonExporter<StringParam> {\n\tadd_main() {\n\t\t// let val = this._param.input_value();\n\t\tlet val = this._param.raw_input;\n\t\t// if (lodash_isString(val)){\n\t\tval = SceneJsonExporter.sanitize_string(val);\n\t\t// }\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = val;\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t}\n}\n","import {ParamJsonExporter} from '../Param';\nimport {RampParam} from '../../../../params/Ramp';\n\nexport class ParamRampJsonExporter extends ParamJsonExporter<RampParam> {\n\tadd_main() {\n\t\tif (this._require_data_complex()) {\n\t\t\tthis._complex_data['raw_input'] = this._param.raw_input_serialized;\n\t\t} else {\n\t\t\treturn this._param.raw_input_serialized;\n\t\t}\n\t}\n}\n","import {BaseGlShaderAssembler} from '../_Base';\nimport {IUniforms} from '../../../../../../core/geometry/Material';\n// import {GlobalsTextureHandler} from '../../../../../Engine/Node/Gl/Assembler/Globals/Texture'\nimport {ThreeToGl} from '../../../../../../core/ThreeToGl';\nimport TemplateDefault from '../../templates/textures/Default.frag.glsl';\n\nimport {ShaderConfig} from '../../configs/ShaderConfig';\nimport {VariableConfig} from '../../configs/VariableConfig';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\nimport {IUniformsWithTime} from '../../../../../scene/utils/UniformsController';\nimport {OutputGlNode} from '../../../Output';\nimport {ParamType} from '../../../../../poly/ParamType';\nimport {GlobalsGlNode} from '../../../Globals';\nimport {TypedNamedConnectionPoint} from '../../../../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../../../../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from '../../utils/ShadersCollectionController';\nimport {UniformGLDefinition} from '../../../utils/GLDefinition';\n// import {BaseGlNodeType} from '../../../_Base';\n\nexport class ShaderAssemblerTexture extends BaseGlShaderAssembler {\n\tprivate _uniforms: IUniforms | undefined;\n\n\tget _template_shader() {\n\t\treturn {\n\t\t\tfragmentShader: TemplateDefault,\n\t\t\tvertexShader: undefined,\n\t\t\tuniforms: undefined,\n\t\t};\n\t}\n\n\t// async compile() {\n\t// \tawait this.update_fragment_shader();\n\t// }\n\n\tfragment_shader() {\n\t\treturn this._shaders_by_name.get(ShaderName.FRAGMENT);\n\t}\n\t// async get_shaders(){\n\t// \tawait this.update_shaders()\n\t// \treturn this._shaders_by_name\n\t// }\n\n\tuniforms() {\n\t\treturn this._uniforms;\n\t}\n\t// _create_material() {\n\t// \treturn undefined;\n\t// }\n\n\tasync update_fragment_shader() {\n\t\tthis._lines = new Map();\n\t\tthis._shaders_by_name = new Map();\n\t\tfor (let shader_name of this.shader_names) {\n\t\t\tif (shader_name == ShaderName.FRAGMENT) {\n\t\t\t\tconst template = this._template_shader.fragmentShader;\n\t\t\t\tthis._lines.set(shader_name, template.split('\\n'));\n\t\t\t}\n\t\t}\n\t\tif (this._root_nodes.length > 0) {\n\t\t\t// this._output_node.set_assembler(this)\n\t\t\tawait this.build_code_from_nodes(this._root_nodes);\n\n\t\t\tthis._build_lines();\n\t\t}\n\n\t\tthis._uniforms = this._uniforms || {};\n\t\tthis.add_uniforms(this._uniforms);\n\t\t// const new_uniforms = this.build_uniforms({}, this._uniforms || {});\n\t\t// this._uniforms = new_uniforms;\n\t\t// this._uniforms = this._uniforms || {};\n\t\t// for (let uniform_name of Object.keys(new_uniforms)) {\n\t\t// \tthis._uniforms[uniform_name] = new_uniforms[uniform_name];\n\t\t// }\n\t\t// this._material.uniforms = this.build_uniforms(template_shader)\n\t\tfor (let shader_name of this.shader_names) {\n\t\t\tconst lines = this._lines.get(shader_name);\n\t\t\tif (lines) {\n\t\t\t\tthis._shaders_by_name.set(shader_name, lines.join('\\n'));\n\t\t\t}\n\t\t}\n\n\t\t// That's actually useless, since this doesn't make the texture recook\n\t\tconst scene = this._gl_parent_node.scene;\n\t\tconst id = this._gl_parent_node.graph_node_id;\n\t\tif (this.uniforms_time_dependent()) {\n\t\t\tif (this._uniforms) {\n\t\t\t\tscene.uniforms_controller.add_time_dependent_uniform_owner(id, this._uniforms as IUniformsWithTime);\n\t\t\t}\n\t\t} else {\n\t\t\tscene.uniforms_controller.remove_time_dependent_uniform_owner(id);\n\t\t}\n\t}\n\n\t//\n\t//\n\t// CHILDREN NODES PARAMS\n\t//\n\t//\n\tadd_output_params(output_child: OutputGlNode) {\n\t\toutput_child.add_param(ParamType.COLOR, 'color', [1, 1, 1], {hidden: true});\n\t\toutput_child.add_param(ParamType.FLOAT, 'alpha', 1, {hidden: true});\n\t}\n\tadd_globals_params(globals_node: GlobalsGlNode) {\n\t\tglobals_node.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint('gl_FragCoord', ConnectionPointType.VEC2),\n\t\t\tnew TypedNamedConnectionPoint('time', ConnectionPointType.FLOAT),\n\t\t\t// new Connection.Vec2('resolution'),\n\t\t]);\n\t}\n\n\t//\n\t//\n\t// CONFIGS\n\t//\n\t//\n\tcreate_shader_configs() {\n\t\treturn [new ShaderConfig(ShaderName.FRAGMENT, ['color', 'alpha'], [])];\n\t}\n\tcreate_variable_configs() {\n\t\treturn [\n\t\t\tnew VariableConfig('color', {\n\t\t\t\tprefix: 'diffuseColor.xyz = ',\n\t\t\t}),\n\t\t\tnew VariableConfig('alpha', {\n\t\t\t\tprefix: 'diffuseColor.a = ',\n\t\t\t\tdefault: '1.0',\n\t\t\t}),\n\t\t];\n\t}\n\n\t//\n\t//\n\t// TEMPLATE HOOKS\n\t//\n\t//\n\tprotected insert_define_after(shader_name: ShaderName) {\n\t\treturn '// INSERT DEFINE';\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn '// INSERT BODY';\n\t}\n\tprotected lines_to_remove(shader_name: ShaderName) {\n\t\treturn ['// INSERT DEFINE', '// INSERT BODY'];\n\t}\n\n\thandle_gl_FragCoord(body_lines: string[], shader_name: ShaderName, var_name: string) {\n\t\tif (shader_name == 'fragment') {\n\t\t\tbody_lines.push(`vec2 ${var_name} = vec2(gl_FragCoord.x / resolution.x, gl_FragCoord.y / resolution.y)`);\n\t\t}\n\t}\n\n\t//\n\t//\n\t// TEMPLATE CODE REPLACEMENT\n\t//\n\t//\n\t// add_export_body_line(\n\t// \texport_node: BaseGlNodeType,\n\t// \tshader_name: ShaderName,\n\t// \tinput_name: string,\n\t// \tinput: BaseGlNodeType,\n\t// \tvariable_name: string\n\t// ) {\n\t// \t// let input\n\t// \t// let variable_name\n\t// \t// if(export_node.type() == 'output'){\n\t// \t// \tinput = export_node.named_input(input_name)\n\t// \t// \tvariable_name = input_name\n\t// \t// } else {\n\t// \t// \t// if attribute\n\t// \t// \tinput = export_node.connected_named_input()\n\t// \t// \tvariable_name = export_node.attribute_name()\n\t// \t// }\n\n\t// \tif (input) {\n\t// \t\tconst var_input = export_node.variable_for_input(input_name);\n\t// \t\tconst new_var = ThreeToGl.vector3(var_input);\n\t// \t\tif (new_var) {\n\t// \t\t\t// const texture_variable = this._texture_allocations_controller.find_variable(\n\t// \t\t\t// \texport_node,\n\t// \t\t\t// \tshader_name,\n\t// \t\t\t// \tvariable_name\n\t// \t\t\t// )\n\t// \t\t\tconst texture_variable = this._texture_allocations_controller.variable(variable_name);\n\t// \t\t\t// if we are in the texture this variable is allocated to, we write it back\n\t// \t\t\tif (texture_variable.allocation().shader_name() == shader_name) {\n\t// \t\t\t\tconst component = texture_variable.component();\n\n\t// \t\t\t\tconst line = `gl_FragColor.${component} = ${new_var}`;\n\t// \t\t\t\texport_node.add_body_lines([line], shader_name);\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\t// add_import_body_line(\n\t// \timport_node: BaseNodeGl,\n\t// \tshader_name: ShaderName,\n\t// \toutput_name: string,\n\t// \tvariable_name: string\n\t// \t){\n\t// \t\tthrow \"not sure I want to use this method anymore\"\n\t// \tconst named_output = import_node.named_output_by_name(output_name)\n\t// \tconst gl_type = named_output.gl_type()\n\n\t// \tconst map_name = `texture_${shader_name}`\n\t// \tconst definition = new Definition.Uniform(import_node, 'sampler2D', map_name)\n\t// \t// definitions_by_shader_name[import_node._shader_name].push(definition)\n\t// \timport_node.add_definitions([definition])\n\n\t// \tconst var_name = import_node.gl_var_name(output_name)\n\n\t// \tconst texture_variable = this._texture_allocations_controller.find_variable(\n\t// \t\timport_node,\n\t// \t\tshader_name,\n\t// \t\tvariable_name\n\t// \t)\n\t// \tif(!texture_variable){\n\t// \t\tthis._texture_allocations_controller.print(this._gl_parent_node.scene())\n\t// \t}\n\t// \tconst component = texture_variable.component()\n\t// \tconst lines = [\n\t// \t\t`${gl_type} ${var_name} = texture2D( ${map_name}, particleUV ).${component}`,\n\t// \t\t`gl_FragColor.${component} = ${var_name}`\n\t// \t]\n\t// \timport_node.add_body_lines(lines, shader_name)\n\t// }\n\n\tset_node_lines_output(output_node: OutputGlNode, shaders_collection_controller: ShadersCollectionController) {\n\t\tconst input_names = this.input_names_for_shader_name(\n\t\t\toutput_node,\n\t\t\tshaders_collection_controller.current_shader_name\n\t\t);\n\t\tif (input_names) {\n\t\t\tfor (let input_name of input_names) {\n\t\t\t\tconst input = output_node.io.inputs.named_input(input_name);\n\n\t\t\t\tif (input) {\n\t\t\t\t\tconst gl_var = output_node.variable_for_input(input_name);\n\n\t\t\t\t\tlet body_line: string | undefined;\n\t\t\t\t\tif (input_name == 'color') {\n\t\t\t\t\t\tbody_line = `diffuseColor.xyz = ${ThreeToGl.any(gl_var)}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (input_name == 'alpha') {\n\t\t\t\t\t\tbody_line = `diffuseColor.a = ${ThreeToGl.any(gl_var)}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (body_line) {\n\t\t\t\t\t\tshaders_collection_controller.add_body_lines(output_node, [body_line]);\n\t\t\t\t\t}\n\t\t\t\t\t// this.add_export_body_line(\n\t\t\t\t\t// \toutput_node,\n\t\t\t\t\t// \tshaders_collection_controller.current_shader_name,\n\t\t\t\t\t// \tinput_name,\n\t\t\t\t\t// \tinput,\n\t\t\t\t\t// \tvariable_name\n\t\t\t\t\t// \t)\n\t\t\t\t} else {\n\t\t\t\t\t// position reads the default attribute position\n\t\t\t\t\t// or maybe there is no need?\n\t\t\t\t\t// if(input_name == 'position'){\n\t\t\t\t\t// \tthis.globals_handler().read_attribute(output_node, 'vec3', 'position')\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// set_node_lines_attribute(attribute_node: Attribute, shader_name: ShaderName){\n\n\t// \tif(attribute_node.is_importing()){\n\t// \t\tconst gl_type = attribute_node.gl_type()\n\t// \t\tconst attribute_name = attribute_node.attribute_name()\n\t// \t\tconst new_value = this.globals_handler().read_attribute(\n\t// \t\t\tattribute_node,\n\t// \t\t\tgl_type,\n\t// \t\t\tattribute_name,\n\t// \t\t\tshader_name\n\t// \t\t\t)\n\t// \t\tconst var_name = attribute_node.gl_var_name(Attribute.output_name())\n\t// \t\tconst body_line = `${gl_type} ${var_name} = ${new_value}`\n\t// \t\tattribute_node.add_body_lines([body_line])\n\n\t// \t\t// re-export to ensure it is available on next frame\n\t// \t\tconst texture_variable = this._texture_allocations_controller.variable(attribute_name)\n\t// \t\tif(texture_variable.allocation().shader_name() == shader_name){\n\n\t// \t\t\tconst variable = this._texture_allocations_controller.variable(attribute_name)\n\t// \t\t\tconst component = variable.component()\n\t// \t\t\tattribute_node.add_body_lines([\n\t// \t\t\t\t`gl_FragColor.${component} = ${var_name}`\n\t// \t\t\t])\n\t// \t\t}\n\n\t// \t\t// this.add_import_body_line(\n\t// \t\t// \tattribute_node,\n\t// \t\t// \tshader_name,\n\t// \t\t// \tAttribute.output_name(),\n\t// \t\t// \tattribute_node.attribute_name()\n\t// \t\t// \t)\n\t// \t}\n\t// \tif(attribute_node.is_exporting()){\n\t// \t\tconst input = attribute_node.connected_named_input()\n\t// \t\tconst variable_name = attribute_node.attribute_name()\n\n\t// \t\tthis.add_export_body_line(\n\t// \t\t\tattribute_node,\n\t// \t\t\tshader_name,\n\t// \t\t\tAttribute.input_name(),\n\t// \t\t\tinput,\n\t// \t\t\tvariable_name\n\t// \t\t\t)\n\t// \t}\n\t// }\n\tset_node_lines_globals(globals_node: GlobalsGlNode, shaders_collection_controller: ShadersCollectionController) {\n\t\t// const vertex_definitions = []\n\t\t// const fragment_definitions = []\n\t\t// const definitions = []\n\t\t// const vertex_body_lines = []\n\t\t// const fragment_body_lines = []\n\t\tconst shader_name = shaders_collection_controller.current_shader_name;\n\t\tconst shader_config = this.shader_config(shader_name);\n\t\tif (!shader_config) {\n\t\t\treturn;\n\t\t}\n\t\tconst body_lines: string[] = [];\n\t\tconst definitions: UniformGLDefinition[] = [];\n\n\t\t// const shader_config = this.shader_config(shader_name)\n\t\t// const dependencies = shader_config.dependencies()\n\n\t\t// const definitions_by_shader_name = {}\n\t\t// definitions_by_shader_name[shader_name] = []\n\t\t// for(let dependency of dependencies){ definitions_by_shader_name[dependency] = [] }\n\n\t\t// const body_lines_by_shader_name = {}\n\t\t// body_lines_by_shader_name[shader_name] = []\n\t\t// for(let dependency of dependencies){ body_lines_by_shader_name[dependency] = [] }\n\n\t\tfor (let output_name of globals_node.io.outputs.used_output_names()) {\n\t\t\tconst var_name = globals_node.gl_var_name(output_name);\n\t\t\t// const globals_shader_name = shaders_collection_controller.current_shader_name;\n\n\t\t\tswitch (output_name) {\n\t\t\t\tcase 'time':\n\t\t\t\t\tdefinitions.push(new UniformGLDefinition(globals_node, ConnectionPointType.FLOAT, output_name));\n\t\t\t\t\t// vertex_definitions.push(definition)\n\t\t\t\t\t// fragment_definitions.push(definition)\n\t\t\t\t\t// definitions_by_shader_name[globals_node._shader_name].push(definition)\n\n\t\t\t\t\tbody_lines.push(`float ${var_name} = ${output_name}`);\n\t\t\t\t\t// for(let dependency of dependencies){\n\t\t\t\t\t// \tdefinitions_by_shader_name[dependency].push(definition)\n\t\t\t\t\t// \tbody_lines_by_shader_name[dependency].push(body_line)\n\t\t\t\t\t// }\n\n\t\t\t\t\t// vertex_body_lines.push(`float ${var_name} = ${output_name}`)\n\t\t\t\t\t// body_lines.push(body_line)\n\t\t\t\t\tthis.set_uniforms_time_dependent();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'gl_FragCoord':\n\t\t\t\t\tthis.handle_gl_FragCoord(body_lines, shader_name, var_name);\n\t\t\t\t\tbreak;\n\t\t\t\t// default:\n\t\t\t\t// \t// this.add_import_body_line(globals_node, shader_name, output_name, output_name)\n\t\t\t\t// \tconst named_output = globals_node.named_output_by_name(output_name)\n\t\t\t\t// \tconst gl_type = named_output.gl_type()\n\n\t\t\t\t// \tconst attrib_read = this.globals_handler().read_attribute(\n\t\t\t\t// \t\tglobals_node,\n\t\t\t\t// \t\tgl_type,\n\t\t\t\t// \t\toutput_name,\n\t\t\t\t// \t\tshader_name\n\t\t\t\t// \t)\n\t\t\t\t// \tbody_line = `${gl_type} ${var_name} = ${attrib_read}`\n\t\t\t\t// \tbody_lines.push(body_line)\n\t\t\t\t// \t//\n\n\t\t\t\t// \t// const map_name = `texture_${output_name}`\n\t\t\t\t// \t// definition = new Definition.Uniform(globals_node, 'sampler2D', map_name)\n\t\t\t\t// \t// definitions_by_shader_name[globals_node._shader_name].push(definition)\n\n\t\t\t\t// \t// body_line = `${gl_type} ${var_name} = texture2D( ${map_name}, particleUV ).xyz`\n\n\t\t\t\t// \t// // // if(dependencies.length == 0){\n\t\t\t\t// \t// body_lines.push(body_line)\n\t\t\t\t// \t// }\n\t\t\t}\n\t\t}\n\n\t\tshaders_collection_controller.add_definitions(globals_node, definitions, shader_name);\n\t\tshaders_collection_controller.add_body_lines(globals_node, body_lines);\n\t\t// this.set_vertex_definitions(vertex_definitions)\n\t\t// this.set_fragment_definitions(fragment_definitions)\n\t\t// for(let shader_name of Object.keys(definitions_by_shader_name)){\n\t\t// \tglobals_node.add_definitions(definitions_by_shader_name[shader_name], shader_name)\n\t\t// }\n\t\t// for(let shader_name of Object.keys(body_lines_by_shader_name)){\n\t\t// \tglobals_node.add_body_lines(body_lines_by_shader_name[shader_name], shader_name)\n\t\t// }\n\t\t// this.add_definitions(definitions)\n\t\t// this.set_vertex_body_lines(vertex_body_lines)\n\t\t// this.set_fragment_body_lines(fragment_body_lines)\n\n\t\t// globals_node.add_body_lines(body_lines)\n\t}\n}\n","import lodash_uniq from 'lodash/uniq';\nimport {BaseGlNodeType} from '../../_Base';\nimport {TypedNodeTraverser} from '../../../utils/shaders/NodeTraverser';\nimport {BaseNodeType} from '../../../_Base';\nimport {BaseGlShaderAssembler} from '../assemblers/_Base';\nimport {MapUtils} from '../../../../../core/MapUtils';\nimport {ShaderName} from '../../../utils/shaders/ShaderName';\nimport {GLDefinitionType, BaseGLDefinition} from '../../utils/GLDefinition';\nimport {TypedGLDefinitionCollection} from '../../utils/GLDefinitionCollection';\nimport {ParamConfigsController} from '../../../../nodes/utils/code/controllers/ParamConfigsController';\nimport {ShadersCollectionController} from './ShadersCollectionController';\nimport {CodeFormatter} from './CodeFormatter';\n\nimport {LineType} from './LineType';\n\nexport class CodeBuilder {\n\t_param_configs_controller: ParamConfigsController = new ParamConfigsController();\n\t_param_configs_set_allowed: boolean = true;\n\n\tprivate _shaders_collection_controller: ShadersCollectionController | undefined;\n\t_lines: Map<ShaderName, Map<LineType, string[]>> = new Map();\n\t_function_declared: Map<ShaderName, Map<string, boolean>> = new Map();\n\n\tconstructor(private _assembler: BaseGlShaderAssembler, private _gl_parent_node: BaseNodeType) {}\n\n\tasync build_from_nodes(root_nodes: BaseGlNodeType[]) {\n\t\tconst node_traverser = new TypedNodeTraverser<BaseGlNodeType>(this._assembler, this._gl_parent_node);\n\t\tnode_traverser.traverse(root_nodes);\n\n\t\tconst nodes_by_shader_name: Map<ShaderName, BaseGlNodeType[]> = new Map();\n\t\tfor (let shader_name of this.shader_names()) {\n\t\t\tnodes_by_shader_name.set(shader_name, node_traverser.nodes_for_shader_name(shader_name));\n\t\t}\n\t\tconst sorted_nodes = node_traverser.sorted_nodes();\n\t\tfor (let shader_name of this.shader_names()) {\n\t\t\tconst root_nodes_for_shader = this._assembler.root_nodes_by_shader_name(shader_name);\n\t\t\t// const leaf_nodes_for_shader = this._assembler.leaf_nodes_by_shader_name(shader_name);\n\n\t\t\t// keep track of which nodes are both leaf and root, and do not use their code twice\n\t\t\t// as this may happen with an attribute node, when used as both import and export\n\t\t\t// TODO: that seems useless, as I surely should be able to filter duplicates if needed\n\n\t\t\t// ensure nodes are unique\n\t\t\t// const node_ids: Map<string, boolean> = new Map();\n\t\t\t// nodes_by_shader_name.forEach((nodes, shader_name) => {\n\t\t\t// \tfor (let node of nodes) {\n\t\t\t// \t\tnode_ids.set(node.graph_node_id, true);\n\t\t\t// \t}\n\t\t\t// });\n\n\t\t\tfor (let root_node of root_nodes_for_shader) {\n\t\t\t\t// if(!both_leaf_and_root_nodes_by_id[root_node.graph_node_id()]){\n\t\t\t\t// if (!node_ids.get(root_node.graph_node_id)) {\n\t\t\t\tMapUtils.push_on_array_at_entry(nodes_by_shader_name, shader_name, root_node);\n\t\t\t\t// node_ids.set(root_node.graph_node_id, true);\n\t\t\t\t// }\n\t\t\t\t// }\n\t\t\t}\n\t\t\t// for (let leaf_node of leaf_nodes_for_shader) {\n\t\t\t// if(!both_leaf_and_root_nodes_by_id[leaf_node.graph_node_id()]){\n\t\t\t// if (!node_ids.get(leaf_node.graph_node_id)) {\n\t\t\t// MapUtils.unshift_on_array_at_entry(nodes_by_shader_name, shader_name, leaf_node);\n\t\t\t// }\n\t\t\t// }\n\t\t\t// }\n\t\t}\n\n\t\t// ensure nodes are not added if already present\n\t\tconst sorted_node_ids: Map<string, boolean> = new Map();\n\t\tfor (let node of sorted_nodes) {\n\t\t\tsorted_node_ids.set(node.graph_node_id, true);\n\t\t}\n\n\t\tfor (let root_node of root_nodes) {\n\t\t\tif (!sorted_node_ids.get(root_node.graph_node_id)) {\n\t\t\t\tsorted_nodes.push(root_node);\n\t\t\t\tsorted_node_ids.set(root_node.graph_node_id, true);\n\t\t\t}\n\t\t}\n\t\tfor (let node of sorted_nodes) {\n\t\t\t// node.set_assembler(this._assembler);\n\t\t\tnode.reset_code();\n\t\t}\n\t\tfor (let node of sorted_nodes) {\n\t\t\tawait node.params.eval_all();\n\t\t}\n\n\t\t// const param_promises = sorted_nodes.map(node=>{\n\t\t// \treturn node.eval_all_params()\n\t\t// })\n\t\t// await Promise.all(param_promises)\n\n\t\tthis._shaders_collection_controller = new ShadersCollectionController(\n\t\t\tthis.shader_names(),\n\t\t\tthis.shader_names()[0]\n\t\t);\n\t\tthis.reset();\n\t\tfor (let shader_name of this.shader_names()) {\n\t\t\tconst nodes = lodash_uniq(nodes_by_shader_name.get(shader_name));\n\t\t\tthis._shaders_collection_controller.set_current_shader_name(shader_name);\n\t\t\tif (nodes) {\n\t\t\t\tfor (let node of nodes) {\n\t\t\t\t\t// node.set_shader_name(shader_name);\n\t\t\t\t\tif (this._param_configs_set_allowed) {\n\t\t\t\t\t\tnode.set_param_configs();\n\t\t\t\t\t}\n\t\t\t\t\tnode.set_lines(this._shaders_collection_controller);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// fragment_nodes.forEach(node=>{\n\t\t// \tnode.set_shader_name(ShaderName.FRAGMENT)\n\t\t// \tnode.set_param_configs()\n\t\t// \tnode.set_lines()\n\t\t// })\n\t\tif (this._param_configs_set_allowed) {\n\t\t\tthis.set_param_configs(sorted_nodes);\n\t\t}\n\t\tthis.set_code_lines(sorted_nodes);\n\t}\n\n\tdisallow_new_param_configs() {\n\t\tthis._param_configs_set_allowed = false;\n\t}\n\tallow_new_param_configs() {\n\t\tthis._param_configs_set_allowed = true;\n\t}\n\n\tshader_names() {\n\t\treturn this._assembler.shader_names;\n\t}\n\n\tprivate reset() {\n\t\tfor (let shader_name of this.shader_names()) {\n\t\t\tconst lines_map = new Map();\n\t\t\t// for (let line_type of LINE_TYPES) {\n\t\t\t// \tlines_map.set(line_type, []);\n\t\t\t// }\n\t\t\tthis._lines.set(shader_name, lines_map);\n\t\t\tthis._function_declared.set(shader_name, new Map());\n\t\t}\n\t}\n\n\tparam_configs() {\n\t\treturn this._param_configs_controller.list || [];\n\t}\n\tlines(shader_name: ShaderName, line_type: LineType) {\n\t\treturn this._lines.get(shader_name)!.get(line_type);\n\t}\n\tall_lines() {\n\t\treturn this._lines;\n\t}\n\n\tset_param_configs(nodes: BaseGlNodeType[]) {\n\t\tthis._param_configs_controller.reset();\n\t\tfor (let node of nodes) {\n\t\t\tconst param_configs = node.param_configs();\n\t\t\tif (param_configs) {\n\t\t\t\tfor (let param_config of param_configs) {\n\t\t\t\t\tthis._param_configs_controller.push(param_config);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_code_lines(nodes: BaseGlNodeType[]) {\n\t\tfor (let shader_name of this.shader_names()) {\n\t\t\t// nodes.forEach((node, i)=>{\n\t\t\tthis.add_code_lines(nodes, shader_name);\n\t\t\t// })\n\t\t}\n\t}\n\n\tadd_code_lines(nodes: BaseGlNodeType[], shader_name: ShaderName) {\n\t\tthis.add_definitions(nodes, shader_name, GLDefinitionType.FUNCTION, LineType.FUNCTION_DECLARATION);\n\t\tthis.add_definitions(nodes, shader_name, GLDefinitionType.UNIFORM, LineType.DEFINE);\n\t\tthis.add_definitions(nodes, shader_name, GLDefinitionType.VARYING, LineType.DEFINE);\n\t\tthis.add_definitions(nodes, shader_name, GLDefinitionType.ATTRIBUTE, LineType.DEFINE);\n\n\t\tthis.add_code_line_for_nodes_and_line_type(nodes, shader_name, LineType.BODY);\n\t}\n\n\tprivate add_definitions(\n\t\tnodes: BaseGlNodeType[],\n\t\tshader_name: ShaderName,\n\t\tdefinition_type: GLDefinitionType,\n\t\tline_type: LineType\n\t) {\n\t\tif (!this._shaders_collection_controller) {\n\t\t\treturn;\n\t\t}\n\t\tconst definitions = [];\n\t\tfor (let node of nodes) {\n\t\t\tlet node_definitions = this._shaders_collection_controller.definitions(shader_name, node);\n\t\t\tif (node_definitions) {\n\t\t\t\tnode_definitions = node_definitions.filter((d) => d.definition_type == definition_type);\n\t\t\t\tfor (let definition of node_definitions) {\n\t\t\t\t\tdefinitions.push(definition);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (definitions.length > 0) {\n\t\t\tconst collection = new TypedGLDefinitionCollection<GLDefinitionType>(definitions);\n\t\t\tconst uniq_definitions = collection.uniq();\n\t\t\tif (collection.errored) {\n\t\t\t\t// TODO: handle error\n\t\t\t\tthrow `code builder error: ${collection.error_message}`;\n\t\t\t}\n\n\t\t\tconst definitions_by_node_id: Map<string, BaseGLDefinition[]> = new Map();\n\t\t\tconst node_ids: Map<string, boolean> = new Map();\n\t\t\tfor (let definition of uniq_definitions) {\n\t\t\t\tconst node_id = definition.node.graph_node_id;\n\t\t\t\tif (!node_ids.has(node_id)) {\n\t\t\t\t\tnode_ids.set(node_id, true);\n\t\t\t\t}\n\t\t\t\tMapUtils.push_on_array_at_entry(definitions_by_node_id, node_id, definition);\n\t\t\t}\n\t\t\tconst lines_for_shader = this._lines.get(shader_name)!;\n\t\t\tnode_ids.forEach((boolean: boolean, node_id: string) => {\n\t\t\t\tconst definitions = definitions_by_node_id.get(node_id);\n\t\t\t\tif (definitions) {\n\t\t\t\t\tconst first_definition = definitions[0];\n\n\t\t\t\t\tif (first_definition) {\n\t\t\t\t\t\tconst comment = CodeFormatter.node_comment(first_definition.node, line_type);\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(lines_for_shader, line_type, comment);\n\n\t\t\t\t\t\tfor (let definition of definitions) {\n\t\t\t\t\t\t\tconst line = CodeFormatter.line_wrap(definition.line, line_type);\n\t\t\t\t\t\t\tMapUtils.push_on_array_at_entry(lines_for_shader, line_type, line);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst separator = CodeFormatter.post_line_separator(line_type);\n\t\t\t\t\t\tMapUtils.push_on_array_at_entry(lines_for_shader, line_type, separator);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tadd_code_line_for_nodes_and_line_type(nodes: BaseGlNodeType[], shader_name: ShaderName, line_type: LineType) {\n\t\tnodes = nodes.filter((node) => {\n\t\t\tif (this._shaders_collection_controller) {\n\t\t\t\tconst lines = this._shaders_collection_controller.body_lines(shader_name, node);\n\t\t\t\treturn lines && lines.length > 0;\n\t\t\t}\n\t\t});\n\n\t\tvar nodes_count = nodes.length;\n\t\tfor (let i = 0; i < nodes_count; i++) {\n\t\t\tconst is_last = i == nodes.length - 1;\n\t\t\tthis.add_code_line_for_node_and_line_type(nodes[i], shader_name, line_type, is_last);\n\t\t}\n\t}\n\tadd_code_line_for_node_and_line_type(\n\t\tnode: BaseGlNodeType,\n\t\tshader_name: ShaderName,\n\t\tline_type: LineType,\n\t\tis_last: boolean\n\t): void {\n\t\tif (!this._shaders_collection_controller) {\n\t\t\treturn;\n\t\t}\n\t\tconst lines = this._shaders_collection_controller.body_lines(shader_name, node);\n\n\t\tif (lines && lines.length > 0) {\n\t\t\tconst lines_for_shader = this._lines.get(shader_name)!;\n\t\t\tconst comment = CodeFormatter.node_comment(node, line_type);\n\t\t\tMapUtils.push_on_array_at_entry(lines_for_shader, line_type, comment);\n\t\t\tlodash_uniq(lines).forEach((line) => {\n\t\t\t\tline = CodeFormatter.line_wrap(line, line_type);\n\t\t\t\tMapUtils.push_on_array_at_entry(lines_for_shader, line_type, line);\n\t\t\t});\n\t\t\tif (!(line_type == LineType.BODY && is_last)) {\n\t\t\t\tconst separator = CodeFormatter.post_line_separator(line_type);\n\t\t\t\tMapUtils.push_on_array_at_entry(lines_for_shader, line_type, separator);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {VideoTexture} from 'three/src/textures/VideoTexture';\nimport {Vector4} from 'three/src/math/Vector4';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\n\nimport {ParamType} from '../../../../poly/ParamType';\nimport {ParamInitValuesTypeMap} from '../../../../params/types/ParamInitValuesTypeMap';\nimport {ParamValuesTypeMap} from '../../../../params/types/ParamValuesTypeMap';\nimport {ParamConstructorByType} from '../../../../params/types/ParamConstructorByType';\n\nimport {BaseNodeType} from '../../../_Base';\nimport {TypedParam, BaseParamType} from '../../../../params/_Base';\nimport {NodeContext} from '../../../../poly/NodeContext';\nimport {TypeAssert} from '../../../../poly/Assert';\nimport {IUniform} from 'three/src/renderers/shaders/UniformsLib';\n// import { RampValue } from '../../../../params/ramp/RampValue';\nimport {RampParam} from '../../../../params/Ramp';\nimport {OperatorPathParam} from '../../../../params/OperatorPath';\n// import {ParamValueComparer} from '../../params/ParamValueComparer';\n// import {ParamValueCloner} from '../../params/ParamValueCloner';\n// import {CoreTextureLoader} from '../../../../../Core/Loader/Texture'\n\nexport class ParamConfig<T extends ParamType> {\n\tprivate _uniform: IUniform | undefined;\n\tprivate _cached_param_value: ParamValuesTypeMap[T] | undefined;\n\t// private _texture_loader: CoreTextureLoader\n\n\tconstructor(\n\t\tprivate _type: T,\n\t\tprivate _name: string,\n\t\tprivate _default_value: ParamInitValuesTypeMap[T],\n\t\tprivate _uniform_name: string\n\t) {}\n\n\tstatic from_param<K extends ParamType>(param: TypedParam<K>, uniform_name: string): ParamConfig<K> {\n\t\treturn new ParamConfig<K>(param.type, param.name, param.default_value, uniform_name);\n\t}\n\n\tget type() {\n\t\treturn this._type;\n\t}\n\tget name() {\n\t\treturn this._name;\n\t}\n\tget default_value() {\n\t\treturn this._default_value;\n\t}\n\tget uniform_name() {\n\t\treturn this._uniform_name;\n\t}\n\n\tget uniform() {\n\t\treturn (this._uniform = this._uniform || this._create_uniform());\n\t}\n\n\tprivate _create_uniform() {\n\t\treturn ParamConfig.uniform_by_type(this._type);\n\t}\n\n\tget param_options() {\n\t\tconst callback_bound = this._callback.bind(this);\n\t\tswitch (this._type) {\n\t\t\tcase ParamType.OPERATOR_PATH:\n\t\t\t\treturn {callback: callback_bound, node_selection: {context: NodeContext.COP}};\n\t\t\tdefault:\n\t\t\t\treturn {callback: callback_bound};\n\t\t}\n\t}\n\n\tprivate _callback(node: BaseNodeType, param: BaseParamType) {\n\t\tthis.uniform.value = param.value;\n\t}\n\n\t// TODO: refactor that to use the default values map?\n\tstatic uniform_by_type(type: ParamType): IUniform {\n\t\tswitch (type) {\n\t\t\tcase ParamType.BOOLEAN:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.BUTTON:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.COLOR:\n\t\t\t\treturn {value: new Vector3(0, 0, 0)};\n\t\t\tcase ParamType.FLOAT:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.FOLDER:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.INTEGER:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.OPERATOR_PATH:\n\t\t\t\treturn {value: 0};\n\t\t\t// case ParamType.STRING: return {type: 't', value: null} // new Texture()}\n\t\t\tcase ParamType.RAMP:\n\t\t\t\treturn {value: null}; // new Texture()}\n\t\t\tcase ParamType.SEPARATOR:\n\t\t\t\treturn {value: 0};\n\t\t\tcase ParamType.STRING:\n\t\t\t\treturn {value: null};\n\t\t\tcase ParamType.VECTOR2:\n\t\t\t\treturn {value: new Vector2(0, 0)};\n\t\t\tcase ParamType.VECTOR3:\n\t\t\t\treturn {value: new Vector3(0, 0, 0)};\n\t\t\tcase ParamType.VECTOR4:\n\t\t\t\treturn {value: new Vector4(0, 0, 0, 0)};\n\t\t}\n\t\tTypeAssert.unreachable(type);\n\t}\n\n\tasync set_uniform_value(node: BaseNodeType) {\n\t\t// return new Promise( async (resolve, reject)=>{\n\t\tconst uniform = this.uniform;\n\t\t// the cache cannot be trusted...\n\t\tconst param = node.params.get(this._name) as TypedParam<T>;\n\t\tif (param) {\n\t\t\tawait param.compute(); //node[node.param_cache_name(this._name)]\n\t\t\tconst value = param.value;\n\n\t\t\tif ((value != null && this.has_value_changed(value)) || this.is_video_texture()) {\n\t\t\t\t// this._update_cached_value(value);\n\t\t\t\t// console.log(this._name, value)\n\n\t\t\t\tswitch (this._type) {\n\t\t\t\t\tcase ParamType.OPERATOR_PATH: {\n\t\t\t\t\t\tawait this.set_uniform_value_from_texture((<unknown>param) as OperatorPathParam, uniform);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase ParamType.RAMP: {\n\t\t\t\t\t\tthis.set_uniform_value_from_ramp((<unknown>param) as RampParam, uniform);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tuniform.value = param.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// resolve()\n\t\t\t} // else {\n\t\t\t//\tresolve()\n\t\t\t//}\n\t\t\t// })\n\t\t}\n\t}\n\n\tasync set_uniform_value_from_texture(param: OperatorPathParam, uniform: IUniform) {\n\t\t// this._texture_loader = this._texture_loader || new CoreTextureLoader(node, node.param(this.name()))\n\n\t\t// // param.graph_disconnect_predecessors()\n\t\t// const texture = await this._texture_loader.load_texture_from_url_or_op( url );\n\t\t// uniform.value = texture\n\t\tconst found_node = param.found_node();\n\t\tif (found_node) {\n\t\t\tconst container = await found_node.request_container();\n\t\t\tconst texture = container.texture();\n\t\t\tuniform.value = texture;\n\t\t} else {\n\t\t\tuniform.value = null;\n\t\t}\n\t}\n\n\tset_uniform_value_from_ramp(param: RampParam, uniform: IUniform) {\n\t\tuniform.value = param.ramp_texture();\n\t}\n\n\thas_value_changed(new_value: ParamValuesTypeMap[T]): boolean {\n\t\tconst param_constructor = ParamConstructorByType[this._type];\n\t\tif (this._cached_param_value) {\n\t\t\tconst has_changed = !param_constructor.are_values_equal(new_value, this._cached_param_value);\n\t\t\tif (has_changed) {\n\t\t\t\tthis._cached_param_value = param_constructor.clone_value(new_value);\n\t\t\t}\n\t\t\treturn has_changed;\n\t\t} else {\n\t\t\tthis._cached_param_value = param_constructor.clone_value(new_value);\n\t\t\treturn false;\n\t\t}\n\n\t\t// let has_changed = false;\n\t\t// if (this._type == ParamType.RAMP) {\n\t\t// \thas_changed = new_value.uuid() != this._cached_param_value;\n\t\t// \t// if(has_changed){ this._cached_param_value = new_value.uuid() }\n\t\t// } else {\n\t\t// \tif (this._cached_param_value != null) {\n\t\t// \t\tif (lodash_isString(new_value) || lodash_isNumber(new_value)) {\n\t\t// \t\t\t// console.log(\"new f\", new_value, this._cached_param_value)\n\t\t// \t\t\thas_changed = this._cached_param_value != new_value;\n\t\t// \t\t} else {\n\t\t// \t\t\tif (new_value != null) {\n\t\t// \t\t\t\t// console.log(\"new v\", new_value, this._cached_param_value)\n\t\t// \t\t\t\thas_changed = new_value.toArray().join('.') != this._cached_param_value.toArray().join('.');\n\t\t// \t\t\t} else {\n\t\t// \t\t\t\thas_changed = this._cached_param_value != new_value;\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t} else {\n\t\t// \t\thas_changed = true;\n\t\t// \t}\n\t\t// \t// this._cached_param_value = new_value\n\t\t// }\n\t\t// return has_changed;\n\t}\n\t// private _update_cached_value(new_value) {\n\t// \t// console.log(\"_update_cached_value\", this._name, new_value)\n\t// \tif (this._type == 'ramp') {\n\t// \t\tthis._cached_param_value = new_value.uuid();\n\t// \t} else {\n\t// \t\tif (lodash_isString(new_value) || lodash_isNumber(new_value)) {\n\t// \t\t\tthis._cached_param_value = new_value;\n\t// \t\t} else {\n\t// \t\t\t// make sure to copy the value, not assign to it\n\t// \t\t\t// otherwise we won't detect changes (since the objects would be the same)\n\t// \t\t\tthis._cached_param_value = this._cached_param_value || new_value.clone();\n\t// \t\t\tthis._cached_param_value.copy(new_value);\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tis_video_texture(): boolean {\n\t\tlet result = false;\n\t\tconst uniform = this.uniform;\n\t\tif (uniform) {\n\t\t\tconst value = uniform.value;\n\t\t\tif (value) {\n\t\t\t\tresult = value.constructor == VideoTexture;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","import {ShaderName} from '../../../utils/shaders/ShaderName';\nimport {BaseGLDefinition} from '../../utils/GLDefinition';\nimport {LinesController} from './LinesController';\nimport {BaseGlNodeType} from '../../_Base';\n\nexport class ShadersCollectionController {\n\tprivate _lines_controller_by_shader_name: Map<ShaderName, LinesController> = new Map();\n\tconstructor(private _shader_names: ShaderName[], private _current_shader_name: ShaderName) {\n\t\tfor (let shader_name of this._shader_names) {\n\t\t\tthis._lines_controller_by_shader_name.set(shader_name, new LinesController(shader_name));\n\t\t}\n\t}\n\n\tget shader_names() {\n\t\treturn this._shader_names;\n\t}\n\n\tset_current_shader_name(shader_name: ShaderName) {\n\t\tthis._current_shader_name = shader_name;\n\t}\n\tget current_shader_name() {\n\t\treturn this._current_shader_name;\n\t}\n\n\tadd_definitions(node: BaseGlNodeType, definitions: BaseGLDefinition[], shader_name?: ShaderName) {\n\t\tif (definitions.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tshader_name = shader_name || this._current_shader_name;\n\t\tconst lines_controller = this._lines_controller_by_shader_name.get(shader_name);\n\t\tif (lines_controller) {\n\t\t\tlines_controller.add_definitions(node, definitions);\n\t\t}\n\t}\n\tdefinitions(shader_name: ShaderName, node: BaseGlNodeType) {\n\t\tconst lines_controller = this._lines_controller_by_shader_name.get(shader_name);\n\t\tif (lines_controller) {\n\t\t\treturn lines_controller.definitions(node);\n\t\t}\n\t}\n\n\tadd_body_lines(node: BaseGlNodeType, lines: string[], shader_name?: ShaderName) {\n\t\tif (lines.length == 0) {\n\t\t\treturn;\n\t\t}\n\t\tshader_name = shader_name || this._current_shader_name;\n\t\tconst lines_controller = this._lines_controller_by_shader_name.get(shader_name);\n\t\tif (lines_controller) {\n\t\t\tlines_controller.add_body_lines(node, lines);\n\t\t}\n\t}\n\tbody_lines(shader_name: ShaderName, node: BaseGlNodeType) {\n\t\tconst lines_controller = this._lines_controller_by_shader_name.get(shader_name);\n\t\tif (lines_controller) {\n\t\t\treturn lines_controller.body_lines(node);\n\t\t}\n\t}\n}\n","import {ShaderName} from '../../../utils/shaders/ShaderName';\nimport {BaseGLDefinition} from '../../utils/GLDefinition';\nimport {BaseGlNodeType} from '../../_Base';\nimport {MapUtils} from '../../../../../core/MapUtils';\n\nexport class LinesController {\n\tprivate _definitions_by_node_id: Map<string, BaseGLDefinition[]> = new Map();\n\tprivate _body_lines_by_node_id: Map<string, string[]> = new Map();\n\n\tconstructor(private _shader_name: ShaderName) {}\n\n\tget shader_name() {\n\t\treturn this._shader_name;\n\t}\n\n\tadd_definitions(node: BaseGlNodeType, definitions: BaseGLDefinition[]) {\n\t\tfor (let definition of definitions) {\n\t\t\tMapUtils.push_on_array_at_entry(this._definitions_by_node_id, node.graph_node_id, definition);\n\t\t}\n\t}\n\tdefinitions(node: BaseGlNodeType): BaseGLDefinition[] | undefined {\n\t\treturn this._definitions_by_node_id.get(node.graph_node_id);\n\t}\n\n\tadd_body_lines(node: BaseGlNodeType, lines: string[]) {\n\t\tfor (let line of lines) {\n\t\t\tMapUtils.push_on_array_at_entry(this._body_lines_by_node_id, node.graph_node_id, line);\n\t\t}\n\t}\n\tbody_lines(node: BaseGlNodeType): string[] | undefined {\n\t\treturn this._body_lines_by_node_id.get(node.graph_node_id);\n\t}\n}\n","import {BaseGlNodeType} from '../../_Base';\nimport {LineType} from './LineType';\n\nconst LINE_SUFFIXES = {\n\t[LineType.FUNCTION_DECLARATION]: '',\n\t[LineType.DEFINE]: ';',\n\t[LineType.BODY]: ';',\n};\n\nconst LINE_PREFIXES = {\n\t[LineType.FUNCTION_DECLARATION]: '',\n\t[LineType.DEFINE]: '',\n\t[LineType.BODY]: '\t',\n};\n\nexport class CodeFormatter {\n\tstatic node_comment(node: BaseGlNodeType, line_type: LineType): string {\n\t\tlet line = `// ${node.full_path()}`;\n\t\tif (line_type == LineType.BODY) {\n\t\t\tline = `\t${line}`;\n\t\t}\n\t\treturn line;\n\t}\n\tstatic line_wrap(line: string, line_type: LineType) {\n\t\tlet add_suffix = true;\n\t\tif (line.indexOf('#if') == 0 || line.indexOf('#endif') == 0) {\n\t\t\tadd_suffix = false;\n\t\t}\n\t\tif (add_suffix) {\n\t\t\treturn `${LINE_PREFIXES[line_type]}${line}${LINE_SUFFIXES[line_type]}`;\n\t\t} else {\n\t\t\treturn `${LINE_PREFIXES[line_type]}${line}`;\n\t\t}\n\t}\n\tstatic post_line_separator(line_type: LineType) {\n\t\treturn line_type == LineType.BODY ? '\t' : '';\n\t}\n}\n","import {TypedNode} from '../../_Base';\nimport {ShaderName} from './ShaderName';\n\nexport abstract class TypedAssembler<T extends TypedNode<any, any, any>> {\n\tabstract get shader_names(): ShaderName[];\n\tabstract input_names_for_shader_name(node: T, shader_name: ShaderName): string[];\n}\n","export default \"#include <common>\\n\\nuniform vec2 resolution;\\n\\n// INSERT DEFINE\\n\\nvoid main() {\\n\\n\\tvec4 diffuseColor = vec4(1.0,0.0,1.0,1.0);\\n\\n\\n\\t// INSERT BODY\\n\\n\\tgl_FragColor = vec4( diffuseColor );\\n}\"","export class CoreSleep {\n\tstatic sleep(time: number): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve();\n\t\t\t}, time);\n\t\t});\n\t}\n}\n","import {Texture} from 'three/src/textures/Texture';\n// import {NearestFilter} from 'three/src/constants';\n// import {LinearEncoding} from 'three/src/constants';\n// import {HalfFloatType} from 'three/src/constants';\n// import {WebGLRenderTargetCube} from 'three/src/renderers/WebGLRenderTargetCube';\nimport {PMREMGenerator} from 'three/src/extras/PMREMGenerator';\n\n// import NodeBase from '../_Base'\n\nimport {TypedCopNode} from './_Base';\n// import {BaseParam} from '../../../Engine/Param/_Base'\n// import {CoreTextureLoader} from '../../../core/loader/Texture';\n// import { CoreScriptLoader } from \"src/Core/Loader/Script\";\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {Poly} from '../../Poly';\nclass EnvMapCopParamsConfig extends NodeParamsConfig {\n\t// url = ParamConfig.STRING(CoreTextureLoader.PARAM_DEFAULT, {\n\t// \tdesktop_browse: {file_type: 'texture'},\n\t// });\n}\nconst ParamsConfig = new EnvMapCopParamsConfig();\nexport class EnvMapCopNode extends TypedCopNode<EnvMapCopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'env_map';\n\t}\n\t// static required_three_imports() {\n\t// \treturn [\n\t// \t\t'loaders/EXRLoader',\n\t// \t\t// 'pmrem/PMREMGenerator',\n\t// \t\t// 'pmrem/PMREMCubeUVPacker',\n\t// \t];\n\t// }\n\n\t// private _texture_loader: CoreTextureLoader\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\n\t\t// for now, if I clone the input, it gets messed up\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\t}\n\n\t// create_params() {\n\t// \t// this.add_param(ParamType.STRING, 'url', CoreTextureLoader.PARAM_DEFAULT)\n\t// }\n\n\tasync cook(input_contents: Texture[]) {\n\t\tconst texture = input_contents[0];\n\t\tconst env_map = await this.convert_texture_to_env_map(texture);\n\t\tif (env_map) {\n\t\t\tthis.set_texture(env_map);\n\t\t} else {\n\t\t\tthis.cook_controller.end_cook();\n\t\t}\n\t}\n\n\tprivate async convert_texture_to_env_map(texture: Texture): Promise<Texture | undefined> {\n\t\t// texture.minFilter = NearestFilter;\n\t\t// texture.encoding = LinearEncoding;\n\n\t\tconst renderer = await Poly.instance().renderers_controller.wait_for_renderer();\n\t\t// if (!renderer) {\n\t\t// \tawait CoreSleep.sleep(1000);\n\t\t// \tconsole.log('waited 1s');\n\t\t// \trenderer = POLY.renderers_controller.first_renderer();\n\t\t// \tconsole.log('renderer', renderer, texture);\n\t\t// }\n\n\t\tif (renderer) {\n\t\t\tconst pmremGenerator = new PMREMGenerator(renderer);\n\t\t\t// console.log('env inout', texture);\n\t\t\tconst exrCubeRenderTarget = pmremGenerator.fromEquirectangular(texture);\n\n\t\t\t// pmremGenerator.dispose();\n\t\t\t// texture.dispose();\n\t\t\t// console.log('exrCubeRenderTarget.texture', exrCubeRenderTarget.texture);\n\t\t\tconst env_map_texture = exrCubeRenderTarget.texture;\n\t\t\t// (window.scene as any).background = env_map_texture;\n\t\t\t// (window.scene as any).environment = env_map_texture;\n\t\t\treturn env_map_texture;\n\t\t} else {\n\t\t\tthis.states.error.set('no renderer found to convert the texture to an env map');\n\t\t}\n\t}\n}\n","import {VideoTexture} from 'three/src/textures/VideoTexture';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {Texture} from 'three/src/textures/Texture';\n// import {RepeatWrapping} from 'three/src/constants';\n// import {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\n// import lodash_isArray from 'lodash/isArray';\n// import {CoreScriptLoader} from '/Script';\n// import {CoreGeometry} from '../geometry/Geometry';\nimport {UnsignedByteType} from 'three/src/constants';\nimport {CoreWalker} from '../Walker';\n\nimport {BaseNodeType} from '../../engine/nodes/_Base';\nimport {BaseParamType} from '../../engine/params/_Base';\nimport {BaseCopNodeClass} from '../../engine/nodes/cop/_Base';\nimport {TextureContainer} from '../../engine/containers/Texture';\nimport {Poly} from '../../engine/Poly';\n// import {BufferGeometry} from 'three/src/core/BufferGeometry';\n\ninterface VideoSourceTypeByExt {\n\togg: string;\n\togv: string;\n\tmp4: string;\n}\n// interface ImageScriptUrlByExt {\n// \texr: string;\n// \tbasis: string;\n// }\ninterface ThreeLoaderByExt {\n\texr: string;\n\tbasis: string;\n\thdr: string;\n}\n\nenum Extension {\n\tEXR = 'exr',\n\tBASIS = 'basis',\n\tHDR = 'hdr',\n}\n\nexport class CoreTextureLoader {\n\tstatic PARAM_DEFAULT = '/examples/textures/uv.jpg';\n\tstatic PARAM_ENV_DEFAULT = '/examples/textures/piz_compressed.exr';\n\n\tstatic VIDEO_EXTENSIONS = ['mp4', 'webm', 'ogv'];\n\tstatic VIDEO_SOURCE_TYPE_BY_EXT: VideoSourceTypeByExt = {\n\t\togg: 'video/ogg; codecs=\"theora, vorbis\"',\n\t\togv: 'video/ogg; codecs=\"theora, vorbis\"',\n\t\tmp4: 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"',\n\t};\n\t// static SCRIPT_URL_BY_EXT: ImageScriptUrlByExt = {\n\t// \texr: 'EXRLoader',\n\t// \tbasis: 'BasisTextureLoader',\n\t// };\n\t// static THREE_LOADER_BY_EXT: ThreeLoaderByExt = {\n\t// \texr: 'EXRLoader',\n\t// \tbasis: 'BasisTextureLoader',\n\t// };\n\t// @load_texture: (url, callback)->\n\t// \tif url\n\t// \t\tloader = this._texture_loader(url)\n\n\t// \t\tloader.load(\n\t// \t\t\turl,\n\t// \t\t\tcallback,\n\t// \t\t\tnull,\n\t// \t\t\t(error)=>\n\t// \t\t\t\tthis.set_error(\"could not load texture #{url}\")\n\t// \t\t\t\t#this._on_error(error)\n\t// \t\t\t)\n\t// \telse\n\t// \t\tthis.set_error(\"not url given to Mat/Base._load_texture\")\n\t// _on_error: (error)->\n\t// \tconsole.log(\"ERROR\")\n\t// \tconsole.log(error)\n\t// \tthis.set_error_message()\n\n\tconstructor(private _node: BaseNodeType, private _param: BaseParamType) {}\n\n\tasync load_texture_from_url_or_op(url: string): Promise<Texture | VideoTexture | null> {\n\t\tlet texture: Texture | null = null;\n\t\tlet found_node;\n\n\t\tif (url.substring(0, 3) == 'op:') {\n\t\t\tconst node_path = url.substring(3);\n\t\t\tfound_node = CoreWalker.find_node(this._node, node_path);\n\t\t\tif (found_node) {\n\t\t\t\tif (found_node instanceof BaseCopNodeClass) {\n\t\t\t\t\tconst container: TextureContainer = await found_node.request_container();\n\t\t\t\t\ttexture = container.texture();\n\t\t\t\t} else {\n\t\t\t\t\tthis._node.states.error.set(`found node is not a texture node`);\n\t\t\t\t}\n\n\t\t\t\t// this._assign_texture(attrib, texture)\n\t\t\t} else {\n\t\t\t\tthis._node.states.error.set(`no node found in path '${node_path}'`);\n\t\t\t}\n\t\t} else {\n\t\t\ttexture = await this.load_url(url);\n\t\t\tif (texture) {\n\t\t\t\t// param.mark_as_referencing_asset(url)\n\t\t\t\tif (this._param.options.texture_as_env()) {\n\t\t\t\t\t// texture = await CoreTextureLoader.set_texture_for_env(texture, this._node);\n\t\t\t\t} else {\n\t\t\t\t\ttexture = CoreTextureLoader.set_texture_for_mapping(texture);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._node.states.error.set(`could not load texture ${url}`);\n\t\t\t}\n\t\t}\n\n\t\t// NOTE: if this._param gets its value from an expression like `ch('/CONTROL/photo_url')`\n\t\t// then found_node will be null, so the graph should not be changed\n\t\tif (found_node && this._param.graph_predecessors()[0] != found_node) {\n\t\t\tthis._param.graph_disconnect_predecessors();\n\t\t\tthis._param.add_graph_input(found_node);\n\t\t}\n\n\t\t// this._assign_texture(attrib, texture)\n\t\treturn texture;\n\t}\n\n\tasync load_url(url: string): Promise<Texture> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\t// url = this._resolve_url(url)\n\t\t\tconst ext = CoreTextureLoader._ext(url);\n\n\t\t\tif (CoreTextureLoader.VIDEO_EXTENSIONS.includes(ext)) {\n\t\t\t\tconst texture: VideoTexture = await this._load_as_video(url);\n\t\t\t\treturn texture;\n\t\t\t} else {\n\t\t\t\tthis.loader_for_ext(ext).then((loader) => {\n\t\t\t\t\tloader.load(url, resolve, undefined, (error: any) => {\n\t\t\t\t\t\tconsole.warn('error', error);\n\t\t\t\t\t\treject();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tasync loader_for_ext(ext: string) {\n\t\tconst ext_lowercase = ext.toLowerCase() as keyof ThreeLoaderByExt;\n\t\t// const script_name = CoreTextureLoader.SCRIPT_URL_BY_EXT[ext_lowercase];\n\t\t// var loader;\n\n\t\tswitch (ext_lowercase) {\n\t\t\tcase Extension.EXR: {\n\t\t\t\tconst {EXRLoader} = await import('../../../modules/three/examples/jsm/loaders/EXRLoader');\n\t\t\t\treturn new EXRLoader();\n\t\t\t}\n\t\t\tcase Extension.HDR: {\n\t\t\t\tconst {RGBELoader} = await import('../../../modules/three/examples/jsm/loaders/RGBELoader');\n\t\t\t\tconst loader = new RGBELoader();\n\t\t\t\tloader.setDataType(UnsignedByteType); // FloatType,HalfFloatType\n\t\t\t\t// loader.setPath('/examples/textures/equirectangular/');\n\t\t\t\treturn loader;\n\t\t\t}\n\t\t\tcase Extension.BASIS: {\n\t\t\t\tconst {BasisTextureLoader} = await import(\n\t\t\t\t\t'../../../modules/three/examples/jsm/loaders/BasisTextureLoader'\n\t\t\t\t);\n\t\t\t\tconst loader = new BasisTextureLoader();\n\t\t\t\tloader.setTranscoderPath('/three/js/libs/basis/');\n\t\t\t\tconst renderer = await Poly.instance().renderers_controller.wait_for_renderer();\n\t\t\t\tif (renderer) {\n\t\t\t\t\tloader.detectSupport(renderer);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('texture loader found no renderer for basis texture loader');\n\t\t\t\t}\n\t\t\t\treturn loader;\n\t\t\t}\n\t\t}\n\n\t\t// if (script_name) {\n\t\t// const imported_classes = await CoreScriptLoader.load_module_three_loader(script_name)\n\t\t// const imported_classes = await CoreScriptLoader.three_module(`loaders/${script_name}`);\n\t\t// const imported_classes = await import(`modules/three/examples/jsm/loaders/${script_name}`);\n\t\t// const loader_class_name = CoreTextureLoader.THREE_LOADER_BY_EXT[ext_lowercase];\n\t\t// const loader_class = imported_classes[loader_class_name];\n\t\t// if (loader_class) {\n\t\t// \tloader = new loader_class();\n\t\t// \tif (ext == 'basis') {\n\t\t// \t\tloader.setTranscoderPath('/three/js/libs/basis/');\n\t\t// \t\tconst renderer = POLY.renderers_controller.first_renderer();\n\t\t// \t\tloader.detectSupport(renderer);\n\t\t// \t}\n\t\t// }\n\t\t// }\n\t\treturn new TextureLoader();\n\n\t\t// const constructor = (() => { switch (ext) {\n\t\t// \tcase 'exr': return EXRLoader;\n\t\t// \tdefault: return TextureLoader;\n\t\t// } })();\n\t\t// return new constructor();\n\t}\n\n\t_load_as_video(url: string): Promise<VideoTexture> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst video = document.createElement('video');\n\t\t\t// document.body.appendChild(video)\n\t\t\t// video.id = 'video'\n\t\t\t// console.log(\"video\", video)\n\t\t\tvideo.setAttribute('crossOrigin', 'anonymous');\n\t\t\tvideo.setAttribute('autoplay', `${true}`); // to ensure it loads\n\t\t\tvideo.setAttribute('loop', `${true}`);\n\n\t\t\t// wait for onloadedmetadata to ensure that we have a duration\n\t\t\tvideo.onloadedmetadata = function () {\n\t\t\t\tvideo.pause();\n\t\t\t\tconst texture = new VideoTexture(video);\n\t\t\t\tresolve(texture);\n\t\t\t};\n\t\t\t// video.setAttribute('controls', true)\n\t\t\t// video.style=\"display:none\"\n\t\t\tconst source = document.createElement('source');\n\t\t\tconst ext = CoreTextureLoader._ext(url) as keyof VideoSourceTypeByExt;\n\t\t\tlet type: string = CoreTextureLoader.VIDEO_SOURCE_TYPE_BY_EXT[ext];\n\t\t\ttype = type || CoreTextureLoader._default_video_source_type(url);\n\t\t\tsource.setAttribute('type', type);\n\t\t\tsource.setAttribute('src', url);\n\n\t\t\tvideo.appendChild(source);\n\t\t});\n\t}\n\tstatic _default_video_source_type(url: string) {\n\t\tconst ext = this._ext(url);\n\t\treturn `video/${ext}`;\n\t}\n\n\tstatic pixel_data(texture: Texture) {\n\t\tconst img = texture.image;\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = img.width;\n\t\tcanvas.height = img.height;\n\t\tconst context = canvas.getContext('2d');\n\t\tif (context) {\n\t\t\tcontext.drawImage(img, 0, 0, img.width, img.height);\n\t\t\treturn context.getImageData(0, 0, img.width, img.height);\n\t\t}\n\t}\n\n\t// TODO: typescript: check what type the pixel_data is\n\t// static pixel_data_to_attribute(pixel_data: Pixel, geometry: BufferGeometry, attrib_name_with_component:string, convert_method: (x:number, y:number, z:number, w:number)=>number) {\n\t// \tconst {data} = pixel_data;\n\t// \tconst geometry_wrapper = new CoreGeometry(geometry);\n\t// \t// TODO: add error if no uvs\n\t// \tconst values = [];\n\t// \tconst points = geometry_wrapper.points();\n\t// \tfor (let point of points) {\n\t// \t\tconst uv = point.attrib_value('uv');\n\t// \t\tconst x = Math.floor((pixel_data.width - 1) * uv.x);\n\t// \t\tconst y = Math.floor((pixel_data.height - 1) * (1 - uv.y));\n\t// \t\tconst i = y * pixel_data.width + x;\n\t// \t\t// const val = data[4*i] / 255.0;\n\t// \t\tif (convert_method) {\n\t// \t\t\tconst val = convert_method(data[4 * i + 0], data[4 * i + 1], data[4 * i + 2], data[4 * i + 3]);\n\t// \t\t\tvalues.push(val);\n\t// \t\t} else {\n\t// \t\t\tvalues.push([data[4 * i + 0], data[4 * i + 1], data[4 * i + 2]]);\n\t// \t\t}\n\t// \t}\n\n\t// \tconst attrib_name_elements = attrib_name_with_component.split('.');\n\t// \tlet attrib_name = attrib_name_elements[0];\n\t// \tlet component_offset = null;\n\t// \tif (attrib_name_elements.length > 1) {\n\t// \t\tconst component = attrib_name_elements[1] as keyof Vector4Like\n\t// \t\tcomponent_offset = {x: 0, y: 1, z: 2, w: 3}[component];\n\t// \t}\n\n\t// \tlet attrib = geometry.attributes[attrib_name];\n\t// \tif (attrib) {\n\t// \t\tconst array = attrib.array;\n\t// \t\tlet index = 0;\n\t// \t\tlet is_array = null;\n\t// \t\tfor (let value of values) {\n\t// \t\t\tif (is_array || lodash_isArray(value)) {\n\t// \t\t\t\tis_array = true;\n\t// \t\t\t\tlet component_index = 0;\n\t// \t\t\t\tfor (let value_c of value) {\n\t// \t\t\t\t\tarray[attrib.itemSize * index + component_index] = value_c;\n\t// \t\t\t\t\tcomponent_index++;\n\t// \t\t\t\t}\n\t// \t\t\t} else {\n\t// \t\t\t\tarray[attrib.itemSize * index + component_offset] = value;\n\t// \t\t\t}\n\t// \t\t\tindex++;\n\t// \t\t}\n\t// \t} else {\n\t// \t\tattrib = geometry.setAttribute(attrib_name, new Float32BufferAttribute(values, 1));\n\t// \t}\n\t// \tattrib.needsUpdate = true;\n\t// }\n\n\tstatic _ext(url: string) {\n\t\tconst elements = url.split('.');\n\t\treturn elements[elements.length - 1].toLowerCase();\n\t}\n\t// static private _resolve_url(url: string):string{\n\t// \tif(url[0] == '/'){\n\t// \t\tconst root_url = POLY.env_is_production() ? 'https://polygonjs.com' : 'http://localhost:5000'\n\t// \t\turl = `${root_url}${url}`\n\t// \t}\n\t// \treturn url\n\t// }\n\n\tstatic set_texture_for_mapping(texture: Texture) {\n\t\t// let val = texture['wrapS']\n\t\t// Object.defineProperty(texture, 'wrapS', {\n\t\t// \tget () {\n\t\t// \t\treturn val // Simply return the cached value\n\t\t// \t},\n\t\t// \tset (newVal) {\n\t\t// \t\tval = newVal // Save the newVal\n\t\t// \t\tconsole.warn(\"set\", newVal)\n\t\t// \t}\n\t\t// })\n\n\t\t// texture.wrapS = RepeatWrapping\n\t\t// texture.wrapT = RepeatWrapping\n\t\t// console.log(\"set_texture_for_mapping\", RepeatWrapping, texture, texture.wrapS)\n\t\treturn texture;\n\t}\n\n\t// static async set_texture_for_env(texture: Texture, registerer: BaseNode) {\n\t// \tif (registerer._registered_env_map) {\n\t// \t\tPOLY.renderers_controller.deregister_env_map(registerer._registered_env_map);\n\t// \t}\n\t// \tregisterer._registered_env_map = await POLY.renderers_controller.register_env_map(texture);\n\t// \treturn registerer._registered_env_map;\n\t// }\n}\n","import {DataTextureLoader} from 'three/src/loaders/DataTextureLoader';\nimport {FloatType} from 'three/src/constants';\nimport {HalfFloatType} from 'three/src/constants';\nimport {LinearEncoding} from 'three/src/constants';\nimport {LinearFilter} from 'three/src/constants';\nimport {NearestFilter} from 'three/src/constants';\nimport {RGBEEncoding} from 'three/src/constants';\nimport {RGBEFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\nimport {UnsignedByteType} from 'three/src/constants';\n/**\n * @author Nikos M. / https://github.com/foo123/\n */\n\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nvar RGBELoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = UnsignedByteType;\n\n};\n\nRGBELoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: RGBELoader,\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse: function ( buffer ) {\n\n\t\tvar\n\t\t\t/* return codes for rgbe routines */\n\t\t\t//RGBE_RETURN_SUCCESS = 0,\n\t\t\tRGBE_RETURN_FAILURE = - 1,\n\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: console.error( \"RGBELoader Read Error: \" + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_write_error: console.error( \"RGBELoader Write Error: \" + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase rgbe_format_error: console.error( \"RGBELoader Bad File Format: \" + ( msg || '' ) );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: console.error( \"RGBELoader: Error: \" + ( msg || '' ) );\n\n\t\t\t\t}\n\t\t\t\treturn RGBE_RETURN_FAILURE;\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = \"\\n\",\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tvar p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '', chunkSize = 128,\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) )\n\t\t\t\t;\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\t\t\t\tvar line, match,\n\n\t\t\t\t\t// regexes to parse header info fields\n\t\t\t\t\tmagic_token_re = /^#\\?(\\S+)$/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_read_error, \"no header found\" );\n\n\t\t\t\t}\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"bad initial token\" );\n\n\t\t\t\t}\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + \"\\n\";\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + \"\\n\";\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + \"\\n\";\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ], 10 );\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"missing format specifier\" );\n\n\t\t\t\t}\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"missing image size specifier\" );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tvar data_rgba, offset, pos, count, byteValue,\n\t\t\t\t\tscanline_buffer, ptr, ptr_end, i, l, off, isEncodedRun,\n\t\t\t\t\tscanline_width = w, num_scanlines = h, rgbeStart\n\t\t\t\t;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"wrong scanline width\" );\n\n\t\t\t\t}\n\n\t\t\t\tdata_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba || ! data_rgba.length ) {\n\n\t\t\t\t\treturn rgbe_error( rgbe_memory_error, \"unable to allocate buffer space\" );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0; pos = 0; ptr_end = 4 * scanline_width;\n\t\t\t\trgbeStart = new Uint8Array( 4 );\n\t\t\t\tscanline_buffer = new Uint8Array( ptr_end );\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"bad rgbe scanline format\" );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tptr = 0;\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tisEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\treturn rgbe_error( rgbe_format_error, \"bad scanline data\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tbyteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tl = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\toff = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tvar RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\n\t\t};\n\n\t\tvar RGBEByteToRGBHalf = ( function () {\n\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\tvar floatView = new Float32Array( 1 );\n\t\t\tvar int32View = new Int32Array( floatView.buffer );\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t * by James Tursa?s half-precision code. */\n\t\t\tfunction toHalf( val ) {\n\n\t\t\t\tfloatView[ 0 ] = val;\n\t\t\t\tvar x = int32View[ 0 ];\n\n\t\t\t\tvar bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\t\t\tvar m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\t\t\tvar e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t * half, return signed zero. */\n\t\t\t\tif ( e < 103 ) return bits;\n\n\t\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\t\t\tif ( e > 142 ) {\n\n\t\t\t\t\tbits |= 0x7c00;\n\t\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\t/* If exponent underflows but not too much, return a denormal */\n\t\t\t\tif ( e < 113 ) {\n\n\t\t\t\t\tm |= 0x0800;\n\t\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t * to 1, which is OK. */\n\t\t\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t * the exponent, which is OK. */\n\t\t\t\tbits += m & 1;\n\t\t\t\treturn bits;\n\n\t\t\t}\n\n\t\t\treturn function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\t\tvar e = sourceArray[ sourceOffset + 3 ];\n\t\t\t\tvar scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t\tdestArray[ destOffset + 0 ] = toHalf( sourceArray[ sourceOffset + 0 ] * scale );\n\t\t\t\tdestArray[ destOffset + 1 ] = toHalf( sourceArray[ sourceOffset + 1 ] * scale );\n\t\t\t\tdestArray[ destOffset + 2 ] = toHalf( sourceArray[ sourceOffset + 2 ] * scale );\n\n\t\t\t};\n\n\t\t} )();\n\n\t\tvar byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tvar rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tif ( RGBE_RETURN_FAILURE !== rgbe_header_info ) {\n\n\t\t\tvar w = rgbe_header_info.width,\n\t\t\t\th = rgbe_header_info.height,\n\t\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\t\t\tif ( RGBE_RETURN_FAILURE !== image_rgba_data ) {\n\n\t\t\t\tswitch ( this.type ) {\n\n\t\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\t\tvar data = image_rgba_data;\n\t\t\t\t\t\tvar format = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\t\t\t\t\t\tvar type = UnsignedByteType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase FloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar floatArray = new Float32Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = floatArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = FloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\t\tvar numElements = ( image_rgba_data.length / 4 ) * 3;\n\t\t\t\t\t\tvar halfArray = new Uint16Array( numElements );\n\n\t\t\t\t\t\tfor ( var j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar data = halfArray;\n\t\t\t\t\t\tvar format = RGBFormat;\n\t\t\t\t\t\tvar type = HalfFloatType;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.error( 'THREE.RGBELoader: unsupported type: ', this.type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\twidth: w, height: h,\n\t\t\t\t\tdata: data,\n\t\t\t\t\theader: rgbe_header_info.string,\n\t\t\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\t\t\texposure: rgbe_header_info.exposure,\n\t\t\t\t\tformat: format,\n\t\t\t\t\ttype: type\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase UnsignedByteType:\n\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\n\t\t\t\t\ttexture.minFilter = NearestFilter;\n\t\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { RGBELoader };\n","import {CompressedTexture} from 'three/src/textures/CompressedTexture';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {LinearFilter} from 'three/src/constants';\nimport {LinearMipmapLinearFilter} from 'three/src/constants';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {RGBA_ASTC_4x4_Format} from 'three/src/constants';\nimport {RGBA_BPTC_Format} from 'three/src/constants';\nimport {RGBA_PVRTC_4BPPV1_Format} from 'three/src/constants';\nimport {RGB_ETC1_Format} from 'three/src/constants';\nimport {RGB_PVRTC_4BPPV1_Format} from 'three/src/constants';\nimport {UnsignedByteType} from 'three/src/constants';\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n * @author Austin Eng / https://github.com/austinEng\n * @author Shrek Shao / https://github.com/shrekshao\n */\n\n\n/**\n * Loader for Basis Universal GPU Texture Codec.\n *\n * Basis Universal is a \"supercompressed\" GPU texture and texture video\n * compression system that outputs a highly compressed intermediate file format\n * (.basis) that can be quickly transcoded to a wide variety of GPU texture\n * compression formats.\n *\n * This loader parallelizes the transcoding process across a configurable number\n * of web workers, before transferring the transcoded compressed texture back\n * to the main thread.\n */\nvar BasisTextureLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.transcoderPath = '';\n\tthis.transcoderBinary = null;\n\tthis.transcoderPending = null;\n\n\tthis.workerLimit = 4;\n\tthis.workerPool = [];\n\tthis.workerNextTaskID = 1;\n\tthis.workerSourceURL = '';\n\tthis.workerConfig = {\n\t\tformat: null,\n\t\tastcSupported: false,\n\t\tbptcSupported: false,\n\t\tetcSupported: false,\n\t\tdxtSupported: false,\n\t\tpvrtcSupported: false,\n\t};\n\n};\n\nBasisTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: BasisTextureLoader,\n\n\tsetTranscoderPath: function ( path ) {\n\n\t\tthis.transcoderPath = path;\n\n\t\treturn this;\n\n\t},\n\n\tsetWorkerLimit: function ( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t},\n\n\tdetectSupport: function ( renderer ) {\n\n\t\tvar config = this.workerConfig;\n\n\t\tconfig.astcSupported = !! renderer.extensions.get( 'WEBGL_compressed_texture_astc' );\n\t\tconfig.bptcSupported = !! renderer.extensions.get( 'EXT_texture_compression_bptc' );\n\t\tconfig.etcSupported = !! renderer.extensions.get( 'WEBGL_compressed_texture_etc1' );\n\t\tconfig.dxtSupported = !! renderer.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\t\tconfig.pvrtcSupported = !! renderer.extensions.get( 'WEBGL_compressed_texture_pvrtc' )\n\t\t\t|| !! renderer.extensions.get( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\n\t\tif ( config.astcSupported ) {\n\n\t\t\tconfig.format = BasisTextureLoader.BASIS_FORMAT.cTFASTC_4x4;\n\n\t\t} else if ( config.bptcSupported ) {\n\n\t\t\tconfig.format = BasisTextureLoader.BASIS_FORMAT.cTFBC7_M5;\n\n\t\t} else if ( config.dxtSupported ) {\n\n\t\t\tconfig.format = BasisTextureLoader.BASIS_FORMAT.cTFBC3;\n\n\t\t} else if ( config.pvrtcSupported ) {\n\n\t\t\tconfig.format = BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA;\n\n\t\t} else if ( config.etcSupported ) {\n\n\t\t\tconfig.format = BasisTextureLoader.BASIS_FORMAT.cTFETC1;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.BasisTextureLoader: No suitable compressed texture format found.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\tthis._createTexture( buffer )\n\t\t\t\t.then( onLoad )\n\t\t\t\t.catch( onError );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/**\n\t * @param  {ArrayBuffer} buffer\n\t * @return {Promise<CompressedTexture>}\n\t */\n\t_createTexture: function ( buffer ) {\n\n\t\tvar worker;\n\t\tvar taskID;\n\n\t\tvar taskCost = buffer.byteLength;\n\n\t\tvar texturePending = this._allocateWorker( taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\t\t\t\ttaskID = this.workerNextTaskID ++;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'transcode', id: taskID, buffer }, [ buffer ] );\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => {\n\n\t\t\t\tvar config = this.workerConfig;\n\n\t\t\t\tvar { width, height, mipmaps, format } = message;\n\n\t\t\t\tvar texture;\n\n\t\t\t\tswitch ( format ) {\n\n\t\t\t\t\tcase BasisTextureLoader.BASIS_FORMAT.cTFASTC_4x4:\n\t\t\t\t\t\ttexture = new CompressedTexture( mipmaps, width, height, RGBA_ASTC_4x4_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BasisTextureLoader.BASIS_FORMAT.cTFBC7_M5:\n\t\t\t\t\t\ttexture = new CompressedTexture( mipmaps, width, height, RGBA_BPTC_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BasisTextureLoader.BASIS_FORMAT.cTFBC1:\n\t\t\t\t\tcase BasisTextureLoader.BASIS_FORMAT.cTFBC3:\n\t\t\t\t\t\ttexture = new CompressedTexture( mipmaps, width, height, BasisTextureLoader.DXT_FORMAT_MAP[ config.format ], UnsignedByteType );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BasisTextureLoader.BASIS_FORMAT.cTFETC1:\n\t\t\t\t\t\ttexture = new CompressedTexture( mipmaps, width, height, RGB_ETC1_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGB:\n\t\t\t\t\t\ttexture = new CompressedTexture( mipmaps, width, height, RGB_PVRTC_4BPPV1_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA:\n\t\t\t\t\t\ttexture = new CompressedTexture( mipmaps, width, height, RGBA_PVRTC_4BPPV1_Format );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error( 'THREE.BasisTextureLoader: No supported format available.' );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.minFilter = mipmaps.length === 1 ? LinearFilter : LinearMipmapLinearFilter;\n\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\treturn texture;\n\n\t\t\t} );\n\n\t\ttexturePending\n\t\t\t.finally( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tworker._taskLoad -= taskCost;\n\t\t\t\t\tdelete worker._callbacks[ taskID ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\treturn texturePending;\n\n\t},\n\n\t_initTranscoder: function () {\n\n\t\tif ( ! this.transcoderPending ) {\n\n\t\t\t// Load transcoder wrapper.\n\t\t\tvar jsLoader = new FileLoader( this.manager );\n\t\t\tjsLoader.setPath( this.transcoderPath );\n\t\t\tvar jsContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tjsLoader.load( 'basis_transcoder.js', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\t// Load transcoder WASM binary.\n\t\t\tvar binaryLoader = new FileLoader( this.manager );\n\t\t\tbinaryLoader.setPath( this.transcoderPath );\n\t\t\tbinaryLoader.setResponseType( 'arraybuffer' );\n\t\t\tvar binaryContent = new Promise( ( resolve, reject ) => {\n\n\t\t\t\tbinaryLoader.load( 'basis_transcoder.wasm', resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t\tthis.transcoderPending = Promise.all( [ jsContent, binaryContent ] )\n\t\t\t\t.then( ( [ jsContent, binaryContent ] ) => {\n\n\t\t\t\t\tvar fn = BasisTextureLoader.BasisWorker.toString();\n\n\t\t\t\t\tvar body = [\n\t\t\t\t\t\t'/* basis_transcoder.js */',\n\t\t\t\t\t\tjsContent,\n\t\t\t\t\t\t'/* worker */',\n\t\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t\t].join( '\\n' );\n\n\t\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\t\t\t\t\tthis.transcoderBinary = binaryContent;\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\treturn this.transcoderPending;\n\n\t},\n\n\t_allocateWorker: function ( taskCost ) {\n\n\t\treturn this._initTranscoder().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tvar worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( {\n\t\t\t\t\ttype: 'init',\n\t\t\t\t\tconfig: this.workerConfig,\n\t\t\t\t\ttranscoderBinary: this.transcoderBinary,\n\t\t\t\t} );\n\n\t\t\t\tworker.onmessage = function ( e ) {\n\n\t\t\t\t\tvar message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'transcode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.BasisTextureLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvar worker = this.workerPool[ this.workerPool.length - 1 ];\n\n\t\t\tworker._taskLoad += taskCost;\n\n\t\t\treturn worker;\n\n\t\t} );\n\n\t},\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.workerPool.length; i ++ ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/* CONSTANTS */\n\nBasisTextureLoader.BASIS_FORMAT = {\n\tcTFETC1: 0,\n\tcTFETC2: 1,\n\tcTFBC1: 2,\n\tcTFBC3: 3,\n\tcTFBC4: 4,\n\tcTFBC5: 5,\n\tcTFBC7_M6_OPAQUE_ONLY: 6,\n\tcTFBC7_M5: 7,\n\tcTFPVRTC1_4_RGB: 8,\n\tcTFPVRTC1_4_RGBA: 9,\n\tcTFASTC_4x4: 10,\n\tcTFATC_RGB: 11,\n\tcTFATC_RGBA_INTERPOLATED_ALPHA: 12,\n\tcTFRGBA32: 13,\n\tcTFRGB565: 14,\n\tcTFBGR565: 15,\n\tcTFRGBA4444: 16,\n};\n\n// DXT formats, from:\n// http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/\nBasisTextureLoader.DXT_FORMAT = {\n\tCOMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0,\n\tCOMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1,\n\tCOMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2,\n\tCOMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3,\n};\nBasisTextureLoader.DXT_FORMAT_MAP = {};\nBasisTextureLoader.DXT_FORMAT_MAP[ BasisTextureLoader.BASIS_FORMAT.cTFBC1 ] =\n\tBasisTextureLoader.DXT_FORMAT.COMPRESSED_RGB_S3TC_DXT1_EXT;\nBasisTextureLoader.DXT_FORMAT_MAP[ BasisTextureLoader.BASIS_FORMAT.cTFBC3 ] =\n\tBasisTextureLoader.DXT_FORMAT.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n/* WEB WORKER */\n\nBasisTextureLoader.BasisWorker = function () {\n\n\tvar config;\n\tvar transcoderPending;\n\tvar _BasisFile;\n\n\tonmessage = function ( e ) {\n\n\t\tvar message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\t\t\t\tconfig = message.config;\n\t\t\t\tinit( message.transcoderBinary );\n\t\t\t\tbreak;\n\n\t\t\tcase 'transcode':\n\t\t\t\ttranscoderPending.then( () => {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar { width, height, hasAlpha, mipmaps, format } = transcode( message.buffer );\n\n\t\t\t\t\t\tvar buffers = [];\n\n\t\t\t\t\t\tfor ( var i = 0; i < mipmaps.length; ++ i ) {\n\n\t\t\t\t\t\t\tbuffers.push( mipmaps[ i ].data.buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tself.postMessage( { type: 'transcode', id: message.id, width, height, hasAlpha, mipmaps, format }, buffers );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.error( error );\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction init( wasmBinary ) {\n\n\t\tvar BasisModule;\n\t\ttranscoderPending = new Promise( ( resolve ) => {\n\n\t\t\tBasisModule = { wasmBinary, onRuntimeInitialized: resolve };\n\t\t\tBASIS( BasisModule );\n\n\t\t} ).then( () => {\n\n\t\t\tvar { BasisFile, initializeBasis } = BasisModule;\n\n\t\t\t_BasisFile = BasisFile;\n\n\t\t\tinitializeBasis();\n\n\t\t} );\n\n\t}\n\n\tfunction transcode( buffer ) {\n\n\t\tvar basisFile = new _BasisFile( new Uint8Array( buffer ) );\n\n\t\tvar width = basisFile.getImageWidth( 0, 0 );\n\t\tvar height = basisFile.getImageHeight( 0, 0 );\n\t\tvar levels = basisFile.getNumLevels( 0 );\n\t\tvar hasAlpha = basisFile.getHasAlpha();\n\n\t\tfunction cleanup() {\n\n\t\t\tbasisFile.close();\n\t\t\tbasisFile.delete();\n\n\t\t}\n\n\t\tif ( ! hasAlpha ) {\n\n\t\t\tswitch ( config.format ) {\n\n\t\t\t\tcase 9: // Hardcoded: BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGBA\n\t\t\t\t\tconfig.format = 8; // Hardcoded: BasisTextureLoader.BASIS_FORMAT.cTFPVRTC1_4_RGB;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ! width || ! height || ! levels ) {\n\n\t\t\tcleanup();\n\t\t\tthrow new Error( 'THREE.BasisTextureLoader:  Invalid .basis file' );\n\n\t\t}\n\n\t\tif ( ! basisFile.startTranscoding() ) {\n\n\t\t\tcleanup();\n\t\t\tthrow new Error( 'THREE.BasisTextureLoader: .startTranscoding failed' );\n\n\t\t}\n\n\t\tvar mipmaps = [];\n\n\t\tfor ( var mip = 0; mip < levels; mip ++ ) {\n\n\t\t\tvar mipWidth = basisFile.getImageWidth( 0, mip );\n\t\t\tvar mipHeight = basisFile.getImageHeight( 0, mip );\n\t\t\tvar dst = new Uint8Array( basisFile.getImageTranscodedSizeInBytes( 0, mip, config.format ) );\n\n\t\t\tvar status = basisFile.transcodeImage(\n\t\t\t\tdst,\n\t\t\t\t0,\n\t\t\t\tmip,\n\t\t\t\tconfig.format,\n\t\t\t\t0,\n\t\t\t\thasAlpha\n\t\t\t);\n\n\t\t\tif ( ! status ) {\n\n\t\t\t\tcleanup();\n\t\t\t\tthrow new Error( 'THREE.BasisTextureLoader: .transcodeImage failed.' );\n\n\t\t\t}\n\n\t\t\tmipmaps.push( { data: dst, width: mipWidth, height: mipHeight } );\n\n\t\t}\n\n\t\tcleanup();\n\n\t\treturn { width, height, hasAlpha, mipmaps, format: config.format };\n\n\t}\n\n};\n\nexport { BasisTextureLoader };\n","import {Texture} from 'three/src/textures/Texture';\nimport {TypedCopNode} from './_Base';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nconst ParamsConfig = new NodeParamsConfig();\nexport class NullCopNode extends TypedCopNode<NodeParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'null';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\t}\n\n\tasync cook(input_contents: Texture[]) {\n\t\tconst texture = input_contents[0];\n\t\tthis.set_texture(texture);\n\t}\n}\n","import {TypedCopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nclass SwitchCopParamsConfig extends NodeParamsConfig {\n\tinput = ParamConfig.INTEGER(0, {\n\t\trange: [0, 3],\n\t\trange_locked: [true, true],\n\t});\n}\nconst ParamsConfig = new SwitchCopParamsConfig();\n\nexport class SwitchCopNode extends TypedCopNode<SwitchCopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'switch';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 4);\n\t\tthis.io.inputs.init_inputs_clonable_state([\n\t\t\tInputCloneMode.NEVER,\n\t\t\tInputCloneMode.NEVER,\n\t\t\tInputCloneMode.NEVER,\n\t\t\tInputCloneMode.NEVER,\n\t\t]);\n\t\tthis.ui_data.set_width(100);\n\t\t// this.ui_data.set_icon('code-branch');\n\n\t\tthis.cook_controller.disallow_inputs_evaluation();\n\t}\n\n\tasync cook() {\n\t\tconst input_index = this.pv.input;\n\t\tif (this.io.inputs.has_input(input_index)) {\n\t\t\tconst container = await this.container_controller.request_input_container(input_index);\n\t\t\tthis.set_texture(container.texture());\n\t\t} else {\n\t\t\tthis.states.error.set(`no input ${input_index}`);\n\t\t}\n\t}\n}\n","import {CATEGORY_EVENT} from './Category';\n\nimport {CameraMapControlsEventNode} from '../../nodes/event/CameraMapControls';\nimport {CameraOrbitControlsEventNode} from '../../nodes/event/CameraOrbitControls';\nimport {CodeEventNode} from '../../nodes/event/Code';\nimport {MouseEventNode} from '../../nodes/event/MouseEvent';\nimport {PassEventNode} from '../../nodes/event/PassEvent';\n\nexport interface EventNodeChildrenMap {\n\tcamera_orbit_controls: CameraMapControlsEventNode;\n\tcamera_map_controls: CameraOrbitControlsEventNode;\n\tcode: CodeEventNode;\n\tmouse_event: MouseEventNode;\n\tpass_event: PassEventNode;\n}\n\nimport {Poly} from '../../Poly';\nexport class EventRegister {\n\tstatic run(poly: Poly) {\n\t\tpoly.register_node(CameraMapControlsEventNode, CATEGORY_EVENT.CAMERA);\n\t\tpoly.register_node(CameraOrbitControlsEventNode, CATEGORY_EVENT.CAMERA);\n\t\tpoly.register_node(CodeEventNode, CATEGORY_EVENT.MISC);\n\t\tpoly.register_node(MouseEventNode, CATEGORY_EVENT.MISC);\n\t\tpoly.register_node(PassEventNode, CATEGORY_EVENT.MISC);\n\t}\n}\n","import {Camera} from 'three/src/cameras/Camera';\nimport {MapControls} from '../../../../modules/three/examples/jsm/controls/OrbitControls';\nimport {CameraOrbitControlsEventNode} from './CameraOrbitControls';\n\nexport class CameraMapControlsEventNode extends CameraOrbitControlsEventNode {\n\tstatic type() {\n\t\treturn 'camera_map_controls';\n\t}\n\n\tasync create_controls_instance(camera: Camera, element: HTMLElement) {\n\t\t// await CoreScriptLoader.load_module_three_example('controls/OrbitControls')\n\t\t// const constructor_name = 'MapControls'\n\t\t// const constructor = THREE[constructor_name]\n\t\t// const c = this.constructor as typeof CameraMapControlsEventNode;\n\t\t// const {MapControls} = await CoreScriptLoader.module(c.required_imports()[0]);\n\n\t\treturn new MapControls(camera, element);\n\t}\n}\n","import {Camera} from 'three/src/cameras/Camera';\n\nimport {TypedEventNode} from './_Base';\nimport {BaseCameraObjNodeType} from '../obj/_BaseCamera';\n\nimport {OrbitControls} from '../../../../modules/three/examples/jsm/controls/OrbitControls';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\n\nexport interface CameraControls extends OrbitControls {\n\tname?: string;\n\t// this_is_a_control: any;\n\t// name: string;\n}\n\nexport abstract class TypedCameraControlsEventNode<K extends NodeParamsConfig> extends TypedEventNode<K> {\n\t// controls() {\n\t// \treturn this._controls;\n\t// }\n\n\tasync apply_controls(camera: Camera, html_element: HTMLElement) {\n\t\t// I don't think I can just assign the camera at the moment\n\t\t// so the controls may need to be re-created everytime\n\t\t// TODO: the controls should be created (and disposed?) by the viewer\n\t\t//this.dispose_controls()\n\n\t\tconst controls = await this.create_controls_instance(camera, html_element);\n\t\tconst timestamp = performance.now();\n\t\tcontrols.name = `${this.full_path()}:${camera.name}:${timestamp}:${this.controls_id()}`;\n\t\t// console.log(this._controls)\n\t\tawait this.params.eval_all();\n\t\tthis.setup_controls(controls);\n\t\treturn controls;\n\t\t// })\n\t\t// });\n\t}\n\tcontrols_id() {\n\t\treturn JSON.stringify(this.params.all.map((p) => p.value_serialized));\n\t}\n\t//this.cook()\n\n\t// dispose_controls: (controls_instance)->\n\t// \tif controls_instance?\n\t// \t\tcontrols_instance.dispose()\n\n\tabstract setup_controls(controls: CameraControls): void;\n\t//\n\n\tabstract async create_controls_instance(camera: Camera, element: HTMLElement): Promise<CameraControls>;\n\tabstract set_from_camera_node(controls: CameraControls, camera_node: BaseCameraObjNodeType): void;\n}\n\nexport type BaseCameraControlsEventNodeType = TypedCameraControlsEventNode<any>;\n","import {TypedEventNode} from './_Base';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {AsyncFunction} from '../../../core/AsyncFunction';\nconst DEFAULT_FUNCTION_CODE = `\nimport {BaseMouseEventProcessor, BaseCameraObjNodeType} from 'polygonjs-engine'\nexport class EventProcessor extends BaseMouseEventProcessor {\n\tinitialize_processor(){\n\t}\n\tprocess_mouse_event(event: MouseEvent, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType){\n\t\tthis._set_mouse_from_event_and_canvas(event, canvas);\n\t\tconsole.log(this.node.scene.time);\n\t\tconsole.log(\"processing event\", this.mouse.x, this.mouse.y);\n\t}\n}\n\n\n\n\n`;\nimport {StringParamLanguage} from '../../params/utils/OptionsController';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {BaseCameraObjNodeType} from '../obj/_BaseCamera';\nimport {TranspiledFilter} from '../utils/code/controllers/TranspiledFilter';\n\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Raycaster} from 'three/src/core/Raycaster';\nimport * as THREE from 'three';\nexport class BaseMouseEventProcessor {\n\t// it looks like I still need to import raycaster and vector2 without the three namespace\n\t// otherwise they are seen as 'any' in the editor\n\tprotected raycaster = new Raycaster();\n\tprotected mouse = new Vector2();\n\tconstructor(protected node: CodeEventNode) {\n\t\tthis.initialize_processor();\n\t}\n\tprocess_event(event: Event, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {\n\t\tif (event instanceof MouseEvent) {\n\t\t\tthis.process_mouse_event(event, canvas, camera_node);\n\t\t} else if (event instanceof KeyboardEvent) {\n\t\t\tthis.process_keyboard_event(event, canvas, camera_node);\n\t\t}\n\t}\n\tprocess_mouse_event(event: MouseEvent, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {}\n\tprocess_keyboard_event(event: KeyboardEvent, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {}\n\tset_node(node: CodeEventNode) {\n\t\tthis.node = node;\n\t}\n\tinitialize_processor() {}\n\tprotected _set_mouse_from_event_and_canvas(event: MouseEvent, canvas: HTMLCanvasElement) {\n\t\tthis.mouse.x = (event.offsetX / canvas.offsetWidth) * 2 - 1;\n\t\tthis.mouse.y = -(event.offsetY / canvas.offsetHeight) * 2 + 1;\n\t}\n}\n\ntype EvaluatedFunction = (\n\tbase_event_processor_class: typeof BaseMouseEventProcessor,\n\tTHREE: any\n) => typeof BaseMouseEventProcessor | undefined;\n\nclass CodeEventParamsConfig extends NodeParamsConfig {\n\tcode_typescript = ParamConfig.STRING(DEFAULT_FUNCTION_CODE, {\n\t\tlabel: false,\n\t\tlanguage: StringParamLanguage.TYPESCRIPT,\n\t});\n\tcode_javascript = ParamConfig.STRING('', {hidden: true});\n}\nconst ParamsConfig = new CodeEventParamsConfig();\n\nexport class CodeEventNode extends TypedEventNode<CodeEventParamsConfig> {\n\tparams_config = ParamsConfig;\n\n\tprivate _last_compiled_code: string | undefined;\n\tprivate _processor: BaseMouseEventProcessor | undefined;\n\n\tstatic type() {\n\t\treturn 'code';\n\t}\n\tinitialize_node() {\n\t\t// TODO: do not use GL connection Types here\n\t\tthis.io.inputs.set_named_input_connection_points([\n\t\t\tnew TypedNamedConnectionPoint('trigger', ConnectionPointType.BOOL),\n\t\t]);\n\t}\n\n\tprocess_event(event: Event, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {\n\t\tthis._compile_if_required();\n\n\t\tif (this._processor) {\n\t\t\tthis._processor.process_event(event, canvas, camera_node);\n\t\t}\n\t}\n\tprivate _compile_if_required() {\n\t\tif (!this._processor || this._last_compiled_code != this.pv.code_javascript) {\n\t\t\tthis._compile();\n\t\t}\n\t}\n\tprivate _compile() {\n\t\ttry {\n\t\t\tconst function_body = `try {\n\t\t\t\t${TranspiledFilter.filter(this.pv.code_javascript)}\n\t\t\t} catch(e) {\n\t\t\t\tthis.states.error.set(e)\n\t\t\t}`;\n\t\t\tconsole.log('function_body');\n\t\t\tconsole.log(function_body);\n\t\t\tconst processor_creator_function: EvaluatedFunction = new AsyncFunction(\n\t\t\t\t'BaseMouseEventProcessor',\n\t\t\t\t'THREE',\n\t\t\t\tfunction_body\n\t\t\t);\n\t\t\tconst processor_class = processor_creator_function(BaseMouseEventProcessor, THREE);\n\t\t\tif (processor_class) {\n\t\t\t\tthis._processor = new processor_class(this);\n\t\t\t\tthis._last_compiled_code = this.pv.code_javascript;\n\t\t\t} else {\n\t\t\t\tthis.states.error.set(`cannot generate function`);\n\t\t\t\tthis._processor = undefined;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.warn(e);\n\t\t\tthis.states.error.set(`cannot generate function (${e})`);\n\t\t\tthis._processor = undefined;\n\t\t}\n\t}\n}\n","import {TypedEventNode, BaseEventNodeType} from './_Base';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {BaseCameraObjNodeType} from '../obj/_BaseCamera';\n\nclass PassEventParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new PassEventParamsConfig();\n\nexport class PassEventNode extends TypedEventNode<PassEventParamsConfig> {\n\tparams_config = ParamsConfig;\n\n\tstatic type() {\n\t\treturn 'pass';\n\t}\n\tinitialize_node() {\n\t\t// TODO: do not use GL connection Types here\n\t\tthis.io.inputs.set_named_input_connection_points(\n\t\t\t[0, 1, 2, 3].map((i) => new TypedNamedConnectionPoint(`trigger${i}`, ConnectionPointType.BOOL))\n\t\t);\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint('event', ConnectionPointType.BOOL),\n\t\t]);\n\t}\n\n\tprocess_event(event: Event, canvas: HTMLCanvasElement, camera_node: BaseCameraObjNodeType) {\n\t\tconst connections = this.io.connections.output_connections();\n\t\tconst nodes: BaseEventNodeType[] = connections.map((connection) => connection.node_dest) as BaseEventNodeType[];\n\t\tfor (let node of nodes) {\n\t\t\tnode.process_event(event, canvas, camera_node);\n\t\t}\n\t}\n}\n","import {CATEGORY_GL} from './Category';\n\nimport {FloatToIntGlNode, IntToFloatGlNode} from '../../nodes/gl/_ConversionMisc';\nimport {FloatToVec2GlNode, FloatToVec3GlNode, FloatToVec4GlNode} from '../../nodes/gl/_ConversionToVec';\n\nimport {\n\tVec2ToFloatGlNode,\n\tVec3ToFloatGlNode,\n\tVec4ToFloatGlNode,\n\tVec4ToVectorGlNode,\n} from '../../nodes/gl/_ConversionVecTo';\n\nimport {\n\tAbsGlNode,\n\tAcosGlNode,\n\tAsinGlNode,\n\tAtanGlNode,\n\tCeilGlNode,\n\tCosGlNode,\n\tDegreesGlNode,\n\tExpGlNode,\n\tExp2GlNode,\n\tFloorGlNode,\n\tFractGlNode,\n\tInverseSqrtGlNode,\n\tLogGlNode,\n\tLog2GlNode,\n\tNormalizeGlNode,\n\tRadiansGlNode,\n\tSignGlNode,\n\tSinGlNode,\n\tSqrtGlNode,\n\tTanGlNode,\n} from '../../nodes/gl/_Math_Arg1';\n\nimport {\n\tDistanceGlNode,\n\tDotGlNode,\n\tMaxGlNode,\n\tMinGlNode,\n\tModGlNode,\n\tPowGlNode,\n\tReflectGlNode,\n\tStepGlNode,\n} from '../../nodes/gl/_Math_Arg2';\n\nimport {AddGlNode, DivideGlNode, MultGlNode, SubstractGlNode} from '../../nodes/gl/_Math_Arg2Operation';\n\nimport {AndGlNode, OrGlNode} from '../../nodes/gl/_Math_Arg2Boolean';\nimport {AlignGlNode} from '../../nodes/gl/Align';\nimport {AttributeGlNode} from '../../nodes/gl/Attribute';\nimport {ConstantGlNode} from '../../nodes/gl/Constant';\nimport {ComplementGlNode} from '../../nodes/gl/Complement';\nimport {CrossGlNode} from '../../nodes/gl/Cross';\nimport {CycleGlNode} from '../../nodes/gl/Cycle';\nimport {DiskGlNode} from '../../nodes/gl/Disk';\nimport {EasingGlNode} from '../../nodes/gl/Easing';\nimport {FitGlNode} from '../../nodes/gl/Fit';\nimport {Fit01GlNode} from '../../nodes/gl/Fit01';\nimport {GlobalsGlNode} from '../../nodes/gl/Globals';\nimport {HsvToRgbGlNode} from '../../nodes/gl/HsvToRgb';\nimport {InstanceTransformGlNode} from '../../nodes/gl/InstanceTransform';\nimport {LengthGlNode} from '../../nodes/gl/Length';\nimport {LuminanceGlNode} from '../../nodes/gl/Luminance';\nimport {MixGlNode} from '../../nodes/gl/Mix';\nimport {MultAddGlNode} from '../../nodes/gl/MultAdd';\nimport {NegateGlNode} from '../../nodes/gl/Negate';\nimport {NoiseGlNode} from '../../nodes/gl/Noise';\nimport {NullGlNode} from '../../nodes/gl/Null';\nimport {OutputGlNode} from '../../nodes/gl/Output';\nimport {ParamGlNode} from '../../nodes/gl/Param';\nimport {RefractGlNode} from '../../nodes/gl/Refract';\nimport {QuatMultGlNode} from '../../nodes/gl/QuatMult';\nimport {QuatFromAxisAngleGlNode} from '../../nodes/gl/QuatFromAxisAngle';\nimport {QuatToAngleGlNode} from '../../nodes/gl/QuatToAngle';\nimport {QuatToAxisGlNode} from '../../nodes/gl/QuatToAxis';\nimport {RampGlNode} from '../../nodes/gl/Ramp';\nimport {RandomGlNode} from '../../nodes/gl/Random';\nimport {RgbToHsvGlNode} from '../../nodes/gl/RgbToHsv';\nimport {RotateGlNode} from '../../nodes/gl/Rotate';\nimport {RoundGlNode} from '../../nodes/gl/Round';\nimport {TextureGlNode} from '../../nodes/gl/Texture';\nimport {TwoWaySwitchGlNode} from '../../nodes/gl/TwoWaySwitch';\nimport {VectorAlignGlNode} from '../../nodes/gl/VectorAlign';\nimport {VectorAngleGlNode} from '../../nodes/gl/VectorAngle';\n\nexport interface GlNodeChildrenMap {\n\tabs: AbsGlNode;\n\tacos: AcosGlNode;\n\tadd: AddGlNode;\n\talign: AlignGlNode;\n\tand: AndGlNode;\n\tasin: AsinGlNode;\n\tatan: AtanGlNode;\n\tattribute: AttributeGlNode;\n\tceil: CeilGlNode;\n\tconstant: ConstantGlNode;\n\tcos: CosGlNode;\n\tcomplement: ComplementGlNode;\n\tcross: CrossGlNode;\n\tcycle: CycleGlNode;\n\tdegrees: DegreesGlNode;\n\tdisk: DiskGlNode;\n\tdistance: DistanceGlNode;\n\tdivide: DivideGlNode;\n\tdot: DotGlNode;\n\teasing: EasingGlNode;\n\texp: ExpGlNode;\n\texp2: Exp2GlNode;\n\tfit: FitGlNode;\n\tfit01: Fit01GlNode;\n\tfloat_to_int: FloatToIntGlNode;\n\tfloat_to_vec2: FloatToVec2GlNode;\n\tfloat_to_vec3: FloatToVec3GlNode;\n\tfloat_to_vec4: FloatToVec4GlNode;\n\tfloor: FloorGlNode;\n\tfract: FractGlNode;\n\thsv_to_rgb: HsvToRgbGlNode;\n\tint_to_float: FloatToIntGlNode;\n\tinverse_sqrt: InverseSqrtGlNode;\n\tinstance_transform: InstanceTransformGlNode;\n\tlength: LengthGlNode;\n\tlog: LogGlNode;\n\tlog2: Log2GlNode;\n\tluminance: LuminanceGlNode;\n\tglobals: GlobalsGlNode;\n\tmax: MaxGlNode;\n\tmin: MinGlNode;\n\tmix: MixGlNode;\n\tmod: ModGlNode;\n\tmult: MultGlNode;\n\tmult_add: MultAddGlNode;\n\tnegate: NegateGlNode;\n\tnoise: NoiseGlNode;\n\tnormalize: NormalizeGlNode;\n\tnull: NullGlNode;\n\tor: OrGlNode;\n\toutput: OutputGlNode;\n\tparam: ParamGlNode;\n\tpow: PowGlNode;\n\tquat_mult: QuatMultGlNode;\n\tquat_from_axis_angle: QuatFromAxisAngleGlNode;\n\tquat_to_angle: QuatToAngleGlNode;\n\tquat_to_axis: QuatToAxisGlNode;\n\tradians: RadiansGlNode;\n\tramp: RampGlNode;\n\trandom: RandomGlNode;\n\treflect: ReflectGlNode;\n\trefract: RefractGlNode;\n\trgb_to_hsv: RgbToHsvGlNode;\n\trotate: RotateGlNode;\n\tround: RoundGlNode;\n\tsign: SignGlNode;\n\tsin: SinGlNode;\n\tsqrt: SqrtGlNode;\n\tstep: StepGlNode;\n\tsubstract: SubstractGlNode;\n\ttan: TanGlNode;\n\ttexture: TextureGlNode;\n\ttwo_way_switch: TwoWaySwitchGlNode;\n\tvec2_to_float: Vec2ToFloatGlNode;\n\tvec3_to_float: Vec3ToFloatGlNode;\n\tvec4_to_float: Vec4ToFloatGlNode;\n\tvec4_to_vector: Vec4ToVectorGlNode;\n\tvector_align: VectorAlignGlNode;\n\tvector_angle: VectorAngleGlNode;\n}\n\nimport {NodeContext} from '../NodeContext';\nimport {Poly} from '../../Poly';\nexport class GlRegister {\n\tstatic run(poly: Poly) {\n\t\tpoly.register_node(AbsGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(AcosGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(AddGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(AlignGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(AndGlNode, CATEGORY_GL.LOGIC);\n\t\tpoly.register_node(AsinGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(AtanGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(AttributeGlNode, CATEGORY_GL.GLOBALS, {except: [`${NodeContext.COP}/builder`]});\n\t\tpoly.register_node(CeilGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(CosGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(ConstantGlNode, CATEGORY_GL.GLOBALS);\n\t\tpoly.register_node(ComplementGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(CrossGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(CycleGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(DegreesGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(DiskGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(DistanceGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(DivideGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(DotGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(EasingGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(ExpGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(Exp2GlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(FitGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(Fit01GlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(FloatToIntGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(FloatToVec2GlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(FloatToVec3GlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(FloatToVec4GlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(FloorGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(FractGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(GlobalsGlNode, CATEGORY_GL.GLOBALS);\n\t\tpoly.register_node(HsvToRgbGlNode, CATEGORY_GL.COLOR);\n\t\tpoly.register_node(IntToFloatGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(InverseSqrtGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(InstanceTransformGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(LengthGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(LuminanceGlNode, CATEGORY_GL.COLOR);\n\t\tpoly.register_node(NegateGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(LogGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(Log2GlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(MaxGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(MinGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(ModGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(MixGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(MultGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(MultAddGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(NullGlNode, CATEGORY_GL.UTIL);\n\t\tpoly.register_node(NoiseGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(NormalizeGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(OrGlNode, CATEGORY_GL.LOGIC);\n\t\tpoly.register_node(OutputGlNode, CATEGORY_GL.GLOBALS);\n\t\tpoly.register_node(ParamGlNode, CATEGORY_GL.GLOBALS);\n\t\tpoly.register_node(PowGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(QuatMultGlNode, CATEGORY_GL.QUAT);\n\t\tpoly.register_node(QuatFromAxisAngleGlNode, CATEGORY_GL.QUAT);\n\t\tpoly.register_node(QuatToAngleGlNode, CATEGORY_GL.QUAT);\n\t\tpoly.register_node(QuatToAxisGlNode, CATEGORY_GL.QUAT);\n\t\tpoly.register_node(RampGlNode, CATEGORY_GL.GLOBALS);\n\t\tpoly.register_node(RandomGlNode, CATEGORY_GL.GLOBALS);\n\t\tpoly.register_node(RadiansGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(ReflectGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(RefractGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(RgbToHsvGlNode, CATEGORY_GL.COLOR);\n\t\tpoly.register_node(RotateGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(RoundGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(SignGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(SinGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(SqrtGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(StepGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(SubstractGlNode, CATEGORY_GL.MATH);\n\t\tpoly.register_node(TanGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(TextureGlNode, CATEGORY_GL.COLOR);\n\t\tpoly.register_node(TwoWaySwitchGlNode, CATEGORY_GL.TRIGO);\n\t\tpoly.register_node(Vec2ToFloatGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(Vec3ToFloatGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(Vec4ToFloatGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(Vec4ToVectorGlNode, CATEGORY_GL.CONVERSION);\n\t\tpoly.register_node(VectorAlignGlNode, CATEGORY_GL.GEOMETRY);\n\t\tpoly.register_node(VectorAngleGlNode, CATEGORY_GL.GEOMETRY);\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\n//\n//\n// FLOAT TO INT\n//\n//\nconst OUTPUT_NAME_INT = 'int';\nclass FloatToIntGlParamsConfig extends NodeParamsConfig {\n\tfloat = ParamConfig.FLOAT(0);\n}\nconst ParamsConfigFloatToInt = new FloatToIntGlParamsConfig();\nexport class FloatToIntGlNode extends TypedGlNode<FloatToIntGlParamsConfig> {\n\tparams_config = ParamsConfigFloatToInt;\n\tstatic type() {\n\t\treturn 'float_to_int';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME_INT, ConnectionPointType.INT),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst float = this.variable_for_input('float');\n\n\t\tconst int = this.gl_var_name('int');\n\t\tconst body_line = `int ${int} = int(${ThreeToGl.float(float)})`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n\n//\n//\n// INT TO FLOAT\n//\n//\nconst OUTPUT_NAME_FLOAT = 'float';\nclass IntToFloatGlParamsConfig extends NodeParamsConfig {\n\tint = ParamConfig.INTEGER(0);\n}\nconst ParamsConfigIntToFloat = new IntToFloatGlParamsConfig();\nexport class IntToFloatGlNode extends TypedGlNode<IntToFloatGlParamsConfig> {\n\tparams_config = ParamsConfigIntToFloat;\n\tstatic type() {\n\t\treturn 'int_to_float';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME_FLOAT, ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst int = this.variable_for_input('int');\n\n\t\tconst float = this.gl_var_name('float');\n\t\tconst body_line = `float ${float} = float(${ThreeToGl.int(int)})`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\n//\n//\n// FLOAT TO VEC2\n//\n//\nclass FloatToVec2GlParamsConfig extends NodeParamsConfig {\n\tx = ParamConfig.FLOAT(0);\n\ty = ParamConfig.FLOAT(0);\n}\nconst ParamsConfig2 = new FloatToVec2GlParamsConfig();\nexport class FloatToVec2GlNode extends TypedGlNode<FloatToVec2GlParamsConfig> {\n\tparams_config = ParamsConfig2;\n\tstatic type() {\n\t\treturn 'float_to_vec2';\n\t}\n\tstatic readonly OUTPUT_NAME = 'vec2';\n\n\tinitialize_node() {\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(FloatToVec2GlNode.OUTPUT_NAME, ConnectionPointType.VEC2),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst x = this.variable_for_input('x');\n\t\tconst y = this.variable_for_input('y');\n\n\t\tconst vec = this.gl_var_name(FloatToVec2GlNode.OUTPUT_NAME);\n\t\tconst body_line = `vec2 ${vec} = ${ThreeToGl.float2(x, y)}`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n\n//\n//\n// FLOAT TO VEC3\n//\n//\nclass FloatToVec3GlParamsConfig extends NodeParamsConfig {\n\tx = ParamConfig.FLOAT(0);\n\ty = ParamConfig.FLOAT(0);\n\tz = ParamConfig.FLOAT(0);\n}\nconst ParamsConfig3 = new FloatToVec3GlParamsConfig();\nexport class FloatToVec3GlNode extends TypedGlNode<FloatToVec3GlParamsConfig> {\n\tparams_config = ParamsConfig3;\n\tstatic type() {\n\t\treturn 'float_to_vec3';\n\t}\n\tstatic readonly OUTPUT_NAME = 'vec3';\n\n\tinitialize_node() {\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(FloatToVec3GlNode.OUTPUT_NAME, ConnectionPointType.VEC3),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst x = this.variable_for_input('x');\n\t\tconst y = this.variable_for_input('y');\n\t\tconst z = this.variable_for_input('z');\n\n\t\tconst vec = this.gl_var_name(FloatToVec3GlNode.OUTPUT_NAME);\n\t\tconst body_line = `vec3 ${vec} = ${ThreeToGl.float3(x, y, z)}`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n\n//\n//\n// FLOAT TO VEC4\n//\n//\nclass FloatToVec4GlParamsConfig extends NodeParamsConfig {\n\tx = ParamConfig.FLOAT(0);\n\ty = ParamConfig.FLOAT(0);\n\tz = ParamConfig.FLOAT(0);\n\tw = ParamConfig.FLOAT(0);\n}\nconst ParamsConfig4 = new FloatToVec4GlParamsConfig();\nexport class FloatToVec4GlNode extends TypedGlNode<FloatToVec4GlParamsConfig> {\n\tparams_config = ParamsConfig4;\n\tstatic type() {\n\t\treturn 'float_to_vec4';\n\t}\n\tstatic readonly OUTPUT_NAME = 'vec4';\n\n\tinitialize_node() {\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(FloatToVec4GlNode.OUTPUT_NAME, ConnectionPointType.VEC4),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst x = this.variable_for_input('x');\n\t\tconst y = this.variable_for_input('y');\n\t\tconst z = this.variable_for_input('z');\n\t\tconst w = this.variable_for_input('w');\n\n\t\tconst vec = this.gl_var_name(FloatToVec4GlNode.OUTPUT_NAME);\n\t\tconst body_line = `vec4 ${vec} = ${ThreeToGl.float4(x, y, z, w)}`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ParamType} from '../../poly/ParamType';\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nclass VecToParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new VecToParamsConfig();\nclass BaseVecToGlNode extends TypedGlNode<VecToParamsConfig> {\n\tparams_config = ParamsConfig;\n}\n\ninterface VecToGlOptions {\n\tcomponents: string[];\n\tparam_type: ParamType;\n}\n\nfunction VecToGlFactory(type: string, options: VecToGlOptions) {\n\tconst components = options.components;\n\tconst param_type = options.param_type;\n\treturn class VecToGlNode extends BaseVecToGlNode {\n\t\tstatic type() {\n\t\t\treturn type;\n\t\t}\n\n\t\tinitialize_node() {\n\t\t\tthis.io.outputs.set_named_output_connection_points(\n\t\t\t\tcomponents.map((c) => {\n\t\t\t\t\treturn new TypedNamedConnectionPoint(c, ConnectionPointType.FLOAT);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tcreate_params() {\n\t\t\tthis.add_param(param_type, 'vec', components.map((c) => 0) as Number2);\n\t\t}\n\n\t\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\t\tconst body_lines: string[] = [];\n\n\t\t\tconst vec = this.variable_for_input('vec');\n\n\t\t\tthis.io.outputs.used_output_names().forEach((c) => {\n\t\t\t\tconst var_name = this.gl_var_name(c);\n\t\t\t\tbody_lines.push(`float ${var_name} = ${vec}.${c}`);\n\t\t\t});\n\t\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t\t}\n\t};\n}\n\nconst components_v4 = ['x', 'y', 'z', 'w'];\n\nexport class Vec2ToFloatGlNode extends VecToGlFactory('vec2_to_float', {\n\tcomponents: ['x', 'y'],\n\tparam_type: ParamType.VECTOR2,\n}) {}\nexport class Vec3ToFloatGlNode extends VecToGlFactory('vec3_to_float', {\n\tcomponents: ['x', 'y', 'z'],\n\tparam_type: ParamType.VECTOR3,\n}) {}\nexport class Vec4ToFloatGlNode extends VecToGlFactory('vec4_to_float', {\n\tcomponents: components_v4,\n\tparam_type: ParamType.VECTOR4,\n}) {}\n\nexport class Vec4ToVectorGlNode extends BaseVecToGlNode {\n\tstatic type() {\n\t\treturn 'vec4_to_vector';\n\t}\n\tstatic readonly INPUT_NAME_VEC4 = 'vec4';\n\tstatic readonly OUTPUT_NAME_VEC3 = 'vec3';\n\tstatic readonly OUTPUT_NAME_W = 'w';\n\n\tinitialize_node() {\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(Vec4ToVectorGlNode.OUTPUT_NAME_VEC3, ConnectionPointType.VEC3),\n\t\t\tnew TypedNamedConnectionPoint(Vec4ToVectorGlNode.OUTPUT_NAME_W, ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\tcreate_params() {\n\t\tthis.add_param(ParamType.VECTOR4, Vec4ToVectorGlNode.INPUT_NAME_VEC4, components_v4.map((c) => 0) as Number4);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst body_lines = [];\n\n\t\tconst in_vec4 = Vec4ToVectorGlNode.INPUT_NAME_VEC4;\n\t\tconst out_vec3 = Vec4ToVectorGlNode.OUTPUT_NAME_VEC3;\n\t\tconst out_w = Vec4ToVectorGlNode.OUTPUT_NAME_W;\n\t\tconst vec = this.variable_for_input(in_vec4);\n\n\t\tconst used_output_names = this.io.outputs.used_output_names();\n\n\t\tif (used_output_names.indexOf(out_vec3) >= 0) {\n\t\t\tconst var_name = this.gl_var_name(out_vec3);\n\t\t\tbody_lines.push(`vec3 ${var_name} = ${vec}.xyz`);\n\t\t}\n\t\tif (used_output_names.indexOf(out_w) >= 0) {\n\t\t\tconst var_name = this.gl_var_name(out_w);\n\t\t\tbody_lines.push(`float ${var_name} = ${vec}.w`);\n\t\t}\n\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\n\ninterface MathArg1Options {\n\tin?: string;\n\tout?: string;\n\tmethod?: string;\n}\n\nfunction MathFunctionArg1Factory(type: string, options: MathArg1Options = {}) {\n\tconst gl_method_name = options.method || type;\n\tconst gl_output_name = options.out || 'val';\n\tconst gl_input_name = options.in || 'in';\n\treturn class Node extends BaseNodeGlMathFunctionArg1GlNode {\n\t\tstatic type() {\n\t\t\treturn type;\n\t\t}\n\t\tinitialize_node() {\n\t\t\tsuper.initialize_node();\n\t\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t\t\tthis.gl_connections_controller.set_output_name_function(this._gl_output_name.bind(this));\n\t\t}\n\t\tprotected _gl_input_name(index: number): string {\n\t\t\treturn gl_input_name;\n\t\t}\n\t\tprotected _gl_output_name(index: number): string {\n\t\t\treturn gl_output_name;\n\t\t}\n\t\tgl_method_name(): string {\n\t\t\treturn gl_method_name;\n\t\t}\n\t};\n}\nexport class AbsGlNode extends MathFunctionArg1Factory('abs') {}\nexport class AcosGlNode extends MathFunctionArg1Factory('acos', {out: 'radians'}) {}\nexport class AsinGlNode extends MathFunctionArg1Factory('asin', {out: 'radians'}) {}\nexport class AtanGlNode extends MathFunctionArg1Factory('atan', {out: 'radians'}) {}\nexport class CeilGlNode extends MathFunctionArg1Factory('ceil') {}\nexport class CosGlNode extends MathFunctionArg1Factory('cos', {in: 'radians'}) {}\nexport class DegreesGlNode extends MathFunctionArg1Factory('degrees', {in: 'radians', out: 'degrees'}) {}\n\nexport class ExpGlNode extends MathFunctionArg1Factory('exp') {}\nexport class Exp2GlNode extends MathFunctionArg1Factory('exp2') {}\nexport class FloorGlNode extends MathFunctionArg1Factory('floor') {}\nexport class FractGlNode extends MathFunctionArg1Factory('fract') {}\nexport class InverseSqrtGlNode extends MathFunctionArg1Factory('inverse_sqrt', {method: 'inversesqrt'}) {}\nexport class LogGlNode extends MathFunctionArg1Factory('log') {}\nexport class Log2GlNode extends MathFunctionArg1Factory('log2') {}\nexport class NormalizeGlNode extends MathFunctionArg1Factory('normalize', {out: 'normalized'}) {}\nexport class RadiansGlNode extends MathFunctionArg1Factory('radians', {in: 'degrees', out: 'radians'}) {}\nexport class SignGlNode extends MathFunctionArg1Factory('sign') {}\nexport class SinGlNode extends MathFunctionArg1Factory('sin', {in: 'radians'}) {}\nexport class SqrtGlNode extends MathFunctionArg1Factory('sqrt') {}\nexport class TanGlNode extends MathFunctionArg1Factory('tan') {}\n","import {BaseNodeGlMathFunctionArg2GlNode} from './_BaseMathFunction';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\n\ninterface MathArg2OperationOptions {\n\tin_prefix: string;\n\tout: string;\n\toperation: string;\n\tallowed_in_types?: ConnectionPointType[];\n}\n\nfunction MathFunctionArg2OperationFactory(type: string, options: MathArg2OperationOptions) {\n\tconst in_prefix = options.in_prefix || type;\n\tconst output_name = options.out || 'val';\n\tconst operation = options.operation;\n\tconst allowed_in_types = options.allowed_in_types;\n\treturn class Node extends BaseNodeGlMathFunctionArg2GlNode {\n\t\tstatic type() {\n\t\t\treturn type;\n\t\t}\n\t\tinitialize_node() {\n\t\t\tsuper.initialize_node();\n\t\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t\t\tthis.gl_connections_controller.set_output_name_function(this._gl_output_name.bind(this));\n\n\t\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t\t}\n\t\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\t\tconst var_type: ConnectionPointType = this.io.outputs.named_output_connection_points[0].type;\n\t\t\tconst args = this.io.inputs.named_input_connection_points.map((connection, i) => {\n\t\t\t\tconst name = connection.name;\n\t\t\t\tconst variable = this.variable_for_input(name);\n\t\t\t\tif (variable) {\n\t\t\t\t\treturn ThreeToGl.any(variable);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst joined_args = args.join(` ${this.gl_operation()} `);\n\n\t\t\tconst sum = this.gl_var_name(this.gl_connections_controller.output_name(0));\n\t\t\tconst body_line = `${var_type} ${sum} = ${this.gl_method_name()}(${joined_args})`;\n\t\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t\t}\n\t\t_gl_input_name(index: number): string {\n\t\t\treturn `${in_prefix}${index}`;\n\t\t}\n\t\t_gl_output_name(index: number): string {\n\t\t\treturn output_name;\n\t\t}\n\t\tgl_operation(): string {\n\t\t\treturn operation;\n\t\t}\n\t\tprotected _expected_input_types() {\n\t\t\tlet first_input_type = this.gl_connections_controller.first_input_connection_type();\n\t\t\tif (first_input_type && allowed_in_types) {\n\t\t\t\tif (!allowed_in_types.includes(first_input_type)) {\n\t\t\t\t\t// if the first input type is not allowed, either leave the connection point as is,\n\t\t\t\t\t// or use the default if there is none\n\t\t\t\t\tconst first_connection = this.io.inputs.named_input_connection_points[0];\n\t\t\t\t\tif (first_connection) {\n\t\t\t\t\t\tfirst_input_type = first_connection.type;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst type = first_input_type || ConnectionPointType.FLOAT;\n\n\t\t\tconst current_connections = this.io.connections.input_connections();\n\t\t\tconst expected_count = current_connections ? Math.max(current_connections.length + 1, 2) : 2;\n\t\t\tconst expected_input_types = [];\n\t\t\tfor (let i = 0; i < expected_count; i++) {\n\t\t\t\texpected_input_types.push(type);\n\t\t\t}\n\t\t\treturn expected_input_types;\n\t\t}\n\t\tprotected _expected_output_types() {\n\t\t\tconst type = this._expected_input_types()[0];\n\t\t\treturn [type];\n\t\t}\n\t};\n}\nexport class AddGlNode extends MathFunctionArg2OperationFactory('add', {\n\tin_prefix: 'add',\n\tout: 'sum',\n\toperation: '+',\n}) {}\nexport class DivideGlNode extends MathFunctionArg2OperationFactory('divide', {\n\tin_prefix: 'div',\n\tout: 'divide',\n\toperation: '/',\n}) {}\nexport class SubstractGlNode extends MathFunctionArg2OperationFactory('substract', {\n\tin_prefix: 'sub',\n\tout: 'substract',\n\toperation: '-',\n}) {}\n\nexport class MultGlNode extends MathFunctionArg2OperationFactory('mult', {\n\tin_prefix: 'mult',\n\tout: 'product',\n\toperation: '*',\n}) {\n\tstatic type() {\n\t\treturn 'mult';\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn 1;\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t}\n\tprotected _expected_output_type() {\n\t\tconst input_types = this._expected_input_types();\n\t\tconst type = input_types[input_types.length - 1];\n\t\treturn [type];\n\t}\n\n\tprotected _expected_input_types() {\n\t\tconst input_connections = this.io.connections.input_connections();\n\t\tif (input_connections) {\n\t\t\tconst first_connection = input_connections[0];\n\n\t\t\tif (first_connection) {\n\t\t\t\tconst connection_point_for_first_connection = this.io.inputs.named_input_connection_points[\n\t\t\t\t\tfirst_connection.input_index\n\t\t\t\t];\n\t\t\t\tconst type = connection_point_for_first_connection.type;\n\t\t\t\tconst expected_count = input_connections ? input_connections.length + 1 : 2;\n\t\t\t\tconst empty_array = new Array(expected_count);\n\n\t\t\t\tif (type == ConnectionPointType.FLOAT) {\n\t\t\t\t\tconst second_connection = input_connections ? input_connections[1] : null;\n\t\t\t\t\tif (second_connection) {\n\t\t\t\t\t\tconst connection_point_for_second_connection = this.io.inputs.named_input_connection_points[\n\t\t\t\t\t\t\tsecond_connection.input_index\n\t\t\t\t\t\t];\n\t\t\t\t\t\tconst second_type = connection_point_for_second_connection.type;\n\t\t\t\t\t\tif (second_type == ConnectionPointType.FLOAT) {\n\t\t\t\t\t\t\t// if first 2 inputs are float: n+1 float inputs\n\t\t\t\t\t\t\treturn empty_array.map((i) => type);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// if first input is float and 2nd is different: 1 float, 1 like second, and no other input\n\t\t\t\t\t\t\treturn [type, second_type];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if only 1 input: 2 with same type\n\t\t\t\t\t\treturn [type, type];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// if first input is not a float: n+1 inputs with same type\n\t\t\t\t\treturn empty_array.map(() => type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn [ConnectionPointType.FLOAT, ConnectionPointType.FLOAT];\n\t}\n}\n","import {BaseNodeGlMathFunctionArgBoolean2GlNode} from './_BaseMathFunctionArgBoolean2';\n\ninterface MathArg2BooleanOptions {\n\top: string;\n}\n\nfunction MathFunctionArg2BooleanFactory(type: string, options: MathArg2BooleanOptions) {\n\treturn class Node extends BaseNodeGlMathFunctionArgBoolean2GlNode {\n\t\tstatic type() {\n\t\t\treturn type;\n\t\t}\n\t\tinitialize_node() {\n\t\t\tsuper.initialize_node();\n\t\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t\t\tthis.gl_connections_controller.set_output_name_function(this._gl_output_name.bind(this));\n\t\t}\n\n\t\tboolean_operation(): string {\n\t\t\treturn options.op;\n\t\t}\n\t\tprotected _gl_output_name(index: number) {\n\t\t\treturn type;\n\t\t}\n\t\tprotected _gl_input_name(index = 0) {\n\t\t\treturn `${type}${index}`;\n\t\t}\n\t};\n}\nexport class AndGlNode extends MathFunctionArg2BooleanFactory('and', {op: '&&'}) {}\nexport class OrGlNode extends MathFunctionArg2BooleanFactory('or', {op: '||'}) {}\n","import {BaseNodeGlMathFunctionArg2GlNode} from './_BaseMathFunction';\n\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nexport abstract class BaseNodeGlMathFunctionArgBoolean2GlNode extends BaseNodeGlMathFunctionArg2GlNode {\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t}\n\tprotected _expected_input_types() {\n\t\treturn [ConnectionPointType.BOOL, ConnectionPointType.BOOL];\n\t}\n\n\tprotected _expected_output_types() {\n\t\treturn [ConnectionPointType.BOOL];\n\t}\n\n\tabstract boolean_operation(): string;\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst args = this.io.inputs.named_input_connection_points.map((named_input, i) => {\n\t\t\tconst name = named_input.name;\n\t\t\treturn ThreeToGl.any(this.variable_for_input(name));\n\t\t});\n\t\tconst joined_args = args.join(` ${this.boolean_operation()} `);\n\n\t\tconst sum = this.gl_var_name(this.gl_connections_controller.output_name(0));\n\t\tconst body_line = `bool ${sum} = ${joined_args}`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import {BaseNodeGlMathFunctionArg2GlNode} from './_BaseMathFunction';\nimport Quaternion from './gl/quaternion.glsl';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nenum InputName {\n\tDIR = 'dir',\n\tUP = 'up',\n}\nconst InputNames: Array<InputName> = [InputName.DIR, InputName.UP];\ninterface IDefaultValues {\n\t[InputName.DIR]: Number3;\n\t[InputName.UP]: Number3;\n}\nconst DEFAULT_DIR: Number3 = [0, 0, 1];\nconst DEFAULT_UP: Number3 = [0, 1, 0];\nconst DefaultValues: IDefaultValues = {\n\t[InputName.DIR]: DEFAULT_DIR,\n\t[InputName.UP]: DEFAULT_UP,\n};\n\nexport class AlignGlNode extends BaseNodeGlMathFunctionArg2GlNode {\n\tstatic type() {\n\t\treturn 'align';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => InputNames[index]);\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => [\n\t\t\tConnectionPointType.VEC3,\n\t\t\tConnectionPointType.VEC3,\n\t\t]);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [ConnectionPointType.VEC4]);\n\t}\n\n\t// gl_input_name(index: number) {\n\t// \treturn InputNames[index];\n\t// }\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name as InputName];\n\t}\n\tgl_method_name(): string {\n\t\treturn 'align';\n\t}\n\n\t// protected expected_input_types() {\n\t// \treturn [ConnectionPointType.VEC3, ConnectionPointType.VEC3];\n\t// }\n\t// protected expected_output_types() {\n\t// \treturn [ConnectionPointType.VEC4];\n\t// }\n\tgl_function_definitions() {\n\t\treturn [new FunctionGLDefinition(this, ConnectionPointType.VEC4, Quaternion)];\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\nimport ComplementMethods from './gl/complement.glsl';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nexport class ComplementGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'complement';\n\t}\n\n\tgl_method_name(): string {\n\t\treturn 'complement';\n\t}\n\n\tgl_function_definitions() {\n\t\treturn [\n\t\t\tnew FunctionGLDefinition(\n\t\t\t\tthis,\n\t\t\t\tthis.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT,\n\t\t\t\tComplementMethods\n\t\t\t),\n\t\t];\n\t}\n}\n","export default \"float complement(float x){return 1.0-x;}\\nvec2 complement(vec2 x){return vec2(1.0-x.x, 1.0-x.y);}\\nvec3 complement(vec3 x){return vec3(1.0-x.x, 1.0-x.y, 1.0-x.z);}\\nvec4 complement(vec4 x){return vec4(1.0-x.x, 1.0-x.y, 1.0-x.z, 1.0-x.w);}\\n\"","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../../src/core/ThreeToGl';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nconst OUTPUT_NAME = 'cross';\n\nclass CrossGlParamsConfig extends NodeParamsConfig {\n\tx = ParamConfig.VECTOR3([0, 0, 1]);\n\ty = ParamConfig.VECTOR3([0, 1, 0]);\n}\nconst ParamsConfig = new CrossGlParamsConfig();\nexport class CrossGlNode extends TypedGlNode<CrossGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'cross';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.VEC3),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst x = ThreeToGl.float(this.variable_for_input('x'));\n\t\tconst y = ThreeToGl.float(this.variable_for_input('y'));\n\n\t\tconst result = this.gl_var_name(OUTPUT_NAME);\n\t\tconst body_line = `vec3 ${result} = cross(${x}, ${y})`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import CycleMethods from './gl/cycle.glsl';\nimport {MathFunctionArg3Factory} from './_Math_Arg3';\n\nexport class CycleGlNode extends MathFunctionArg3Factory('cycle', {\n\tin: ['in', 'min', 'max'],\n\tdefault: {max: 1},\n\tfunctions: [CycleMethods],\n}) {}\n","export default \"float cycle(float val, float val_min, float val_max){\\n\\tif(val >= val_min && val < val_max){\\n\\t\\treturn val;\\n\\t} else {\\n\\t\\tfloat range = val_max - val_min;\\n\\t\\tif(val >= val_max){\\n\\t\\t\\tfloat delta = (val - val_max);\\n\\t\\t\\treturn val_min + mod(delta, range);\\n\\t\\t} else {\\n\\t\\t\\tfloat delta = (val_min - val);\\n\\t\\t\\treturn val_max - mod(delta, range);\\n\\t\\t}\\n\\t}\\n}\"","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../../src/core/ThreeToGl';\nimport DiskMethods from './gl/disk.glsl';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\n\nconst OUTPUT_NAME = 'float';\nclass DiskGlParamsConfig extends NodeParamsConfig {\n\tposition = ParamConfig.VECTOR2([0, 0]);\n\tcenter = ParamConfig.VECTOR2([0, 0]);\n\tradius = ParamConfig.FLOAT(1);\n\tfeather = ParamConfig.FLOAT(0.1);\n}\nconst ParamsConfig = new DiskGlParamsConfig();\nexport class DiskGlNode extends TypedGlNode<DiskGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'disk';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst position = ThreeToGl.vector2(this.variable_for_input('position'));\n\t\tconst center = ThreeToGl.vector2(this.variable_for_input('center'));\n\t\tconst radius = ThreeToGl.float(this.variable_for_input('radius'));\n\t\tconst feather = ThreeToGl.float(this.variable_for_input('feather'));\n\n\t\tconst float = this.gl_var_name('float');\n\t\tconst body_line = `float ${float} = disk(${position}, ${center}, ${radius}, ${feather})`;\n\t\t// this.set_function_declaration_lines(function_declaration_lines)\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\n\t\tshaders_collection_controller.add_definitions(this, [\n\t\t\tnew FunctionGLDefinition(this, ConnectionPointType.FLOAT, DiskMethods),\n\t\t]);\n\t}\n}\n","export default \"float disk(vec2 pos, vec2 center, float radius, float feather){\\n\\tfloat dist = distance(pos, center);\\n\\tif(feather <= 0.0){\\n\\t\\tif(dist < radius){return 1.0;}else{return 0.0;}\\n\\t} else {\\n\\t\\tfloat half_feather = feather * 0.5;\\n\\t\\tif(dist < (radius - half_feather)){\\n\\t\\t\\treturn 1.0;\\n\\t\\t} else {\\n\\t\\t\\tif(dist > (radius + half_feather)){\\n\\t\\t\\t\\treturn 0.0;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfloat feather_start = (radius - half_feather);\\n\\t\\t\\t\\tfloat blend = 1.0 - (dist - feather_start) / feather;\\n\\t\\t\\t\\treturn blend;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\"","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../../src/core/ThreeToGl';\n\n// https://github.com/glslify/glsl-easings\nimport CircularInOut from './gl/easing/circular-in-out.glsl';\nimport ExponentialInOut from './gl/easing/exponential-in-out.glsl';\nimport CircularIn from './gl/easing/circular-in.glsl';\nimport ElasticOut from './gl/easing/elastic-out.glsl';\nimport CubicIn from './gl/easing/cubic-in.glsl';\nimport ExponentialOut from './gl/easing/exponential-out.glsl';\nimport QuinticOut from './gl/easing/quintic-out.glsl';\nimport ElasticInOut from './gl/easing/elastic-in-out.glsl';\nimport Linear from './gl/easing/linear.glsl';\nimport CircularOut from './gl/easing/circular-out.glsl';\nimport BackInOut from './gl/easing/back-in-out.glsl';\nimport BackIn from './gl/easing/back-in.glsl';\nimport SineIn from './gl/easing/sine-in.glsl';\nimport BackOut from './gl/easing/back-out.glsl';\nimport QuarticInOut from './gl/easing/quartic-in-out.glsl';\nimport QuadraticIn from './gl/easing/quadratic-in.glsl';\nimport CubicInOut from './gl/easing/cubic-in-out.glsl';\nimport ElasticIn from './gl/easing/elastic-in.glsl';\nimport BounceOut from './gl/easing/bounce-out.glsl';\nimport QuadraticInOut from './gl/easing/quadratic-in-out.glsl';\nimport ExponentialIn from './gl/easing/exponential-in.glsl';\nimport QuinticInOut from './gl/easing/quintic-in-out.glsl';\nimport SineInOut from './gl/easing/sine-in-out.glsl';\nimport CubicOut from './gl/easing/cubic-out.glsl';\nimport QuadraticOut from './gl/easing/quadratic-out.glsl';\nimport BounceInOut from './gl/easing/bounce-in-out.glsl';\nimport QuinticIn from './gl/easing/quintic-in.glsl';\nimport QuarticIn from './gl/easing/quartic-in.glsl';\nimport QuarticOut from './gl/easing/quartic-out.glsl';\nimport BounceIn from './gl/easing/bounce-in.glsl';\nimport SineOut from './gl/easing/sine-out.glsl';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nconst EASE_NAMES = [\n\t'back-in-out',\n\t'back-in',\n\t'back-out',\n\t'bounce-in-out',\n\t'bounce-in',\n\t'bounce-out',\n\t'circular-in-out',\n\t'circular-in',\n\t'circular-out',\n\t'cubic-in-out',\n\t'cubic-in',\n\t'cubic-out',\n\t'elastic-in-out',\n\t'elastic-in',\n\t'elastic-out',\n\t'exponential-in-out',\n\t'exponential-in',\n\t'exponential-out',\n\t'linear',\n\t'quadratic-in-out',\n\t'quadratic-in',\n\t'quadratic-out',\n\t// \"quartic-in-out\",\n\t// \"quartic-in\",\n\t// \"quartic-out\",\n\t// \"quintic-in-out\",\n\t// \"quintic-in\",\n\t// \"quintic-out\",\n\t'sine-in-out',\n\t'sine-in',\n\t'sine-out',\n];\n\nconst IMPORT_BY_EASE_NAME: Dictionary<string> = {\n\t'circular-in-out': CircularInOut,\n\t'exponential-in-out': ExponentialInOut,\n\t'circular-in': CircularIn,\n\t'elastic-out': ElasticOut,\n\t'cubic-in': CubicIn,\n\t'exponential-out': ExponentialOut,\n\t'quintic-out': QuinticOut,\n\t'elastic-in-out': ElasticInOut,\n\tlinear: Linear,\n\t'circular-out': CircularOut,\n\t'back-in-out': BackInOut,\n\t'back-in': BackIn,\n\t'sine-in': SineIn,\n\t'back-out': BackOut,\n\t'quartic-in-out': QuarticInOut,\n\t'quadratic-in': QuadraticIn,\n\t'cubic-in-out': CubicInOut,\n\t'elastic-in': ElasticIn,\n\t'bounce-out': BounceOut,\n\t'quadratic-in-out': QuadraticInOut,\n\t'exponential-in': ExponentialIn,\n\t'quintic-in-out': QuinticInOut,\n\t'sine-in-out': SineInOut,\n\t'cubic-out': CubicOut,\n\t'quadratic-out': QuadraticOut,\n\t'bounce-in-out': BounceInOut,\n\t'quintic-in': QuinticIn,\n\t'quartic-in': QuarticIn,\n\t'quartic-out': QuarticOut,\n\t'bounce-in': BounceIn,\n\t'sine-out': SineOut,\n};\nconst IMPORT_DEPENDENCIES_BY_EASE_NAME: Dictionary<string[]> = {\n\t'bounce-in': [BounceOut],\n\t'bounce-in-out': [BounceOut],\n};\n\nconst METHOD_NAMES_BY_EASE_NAME: Dictionary<string> = {\n\t'circular-in-out': 'circularInOut',\n\t'exponential-in-out': 'exponentialInOut',\n\t'circular-in': 'circularIn',\n\t'elastic-out': 'elasticOut',\n\t'cubic-in': 'cubicIn',\n\t'exponential-out': 'exponentialOut',\n\t'quintic-out': 'quinticOut',\n\t'elastic-in-out': 'elasticInOut',\n\tlinear: 'linear',\n\t'circular-out': 'circularOut',\n\t'back-in-out': 'backInOut',\n\t'back-in': 'backIn',\n\t'sine-in': 'sineIn',\n\t'back-out': 'backOut',\n\t'quartic-in-out': 'quarticInOut',\n\t'quadratic-in': 'quadraticIn',\n\t'cubic-in-out': 'cubicInOut',\n\t'elastic-in': 'elasticIn',\n\t'bounce-out': 'bounceOut',\n\t'quadratic-in-out': 'quadraticInOut',\n\t'exponential-in': 'exponentialIn',\n\t'quintic-in-out': 'quinticInOut',\n\t'sine-in-out': 'sineInOut',\n\t'cubic-out': 'cubicOut',\n\t'quadratic-out': 'quadraticOut',\n\t'bounce-in-out': 'bounceInOut',\n\t'quintic-in': 'quinticIn',\n\t'quartic-in': 'quarticIn',\n\t'quartic-out': 'quarticOut',\n\t'bounce-in': 'bounceIn',\n\t'sine-out': 'sineOut',\n};\n\nconst OUTPUT_NAME = 'out';\nconst default_ease_type = EASE_NAMES.indexOf('sine-in-out');\nclass EasingGlParamsConfig extends NodeParamsConfig {\n\ttype = ParamConfig.INTEGER(default_ease_type, {\n\t\tmenu: {\n\t\t\tentries: EASE_NAMES.map((name, i) => {\n\t\t\t\treturn {name: name, value: i};\n\t\t\t}),\n\t\t},\n\t});\n\tinput = ParamConfig.FLOAT(0);\n}\nconst ParamsConfig = new EasingGlParamsConfig();\nexport class EasingGlNode extends TypedGlNode<EasingGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'easing';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.spare_params_controller.set_inputless_param_names(['type']);\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst ease_name = EASE_NAMES[this.pv.type];\n\t\tconst method_name = METHOD_NAMES_BY_EASE_NAME[ease_name];\n\t\tconst glsl_function_code = IMPORT_BY_EASE_NAME[ease_name];\n\n\t\tlet ease_functions = [new FunctionGLDefinition(this, ConnectionPointType.FLOAT, glsl_function_code)];\n\t\tconst function_dependencies = (IMPORT_DEPENDENCIES_BY_EASE_NAME[ease_name] || []).map(\n\t\t\t(f) => new FunctionGLDefinition(this, ConnectionPointType.FLOAT, f)\n\t\t);\n\t\tif (function_dependencies) {\n\t\t\tease_functions = function_dependencies.concat(ease_functions);\n\t\t}\n\t\t// ease_functions.forEach(ease_function=>{\n\t\t// \tfunction_declaration_lines.push(ease_function)\n\t\t// })\n\n\t\tconst in_value = ThreeToGl.float(this.variable_for_input('input'));\n\t\tconst out_value = this.gl_var_name(OUTPUT_NAME);\n\n\t\tconst body_line = `float ${out_value} = ${method_name}(${in_value})`;\n\t\tshaders_collection_controller.add_definitions(this, ease_functions);\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","export default \"float circularInOut(float t) {\\n  return t < 0.5\\n    ? 0.5 * (1.0 - sqrt(1.0 - 4.0 * t * t))\\n    : 0.5 * (sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\\n}\\n\\n\"","export default \"float exponentialInOut(float t) {\\n  return t == 0.0 || t == 1.0\\n    ? t\\n    : t < 0.5\\n      ? +0.5 * pow(2.0, (20.0 * t) - 10.0)\\n      : -0.5 * pow(2.0, 10.0 - (t * 20.0)) + 1.0;\\n}\\n\\n\"","export default \"float circularIn(float t) {\\n  return 1.0 - sqrt(1.0 - t * t);\\n}\\n\\n\"","export default \"#ifndef HALF_PI\\n#define HALF_PI 1.5707963267948966\\n#endif\\n\\nfloat elasticOut(float t) {\\n  return sin(-13.0 * (t + 1.0) * HALF_PI) * pow(2.0, -10.0 * t) + 1.0;\\n}\\n\\n\"","export default \"float cubicIn(float t) {\\n  return t * t * t;\\n}\\n\\n\"","export default \"float exponentialOut(float t) {\\n  return t == 1.0 ? t : 1.0 - pow(2.0, -10.0 * t);\\n}\\n\\n\"","export default \"float quinticOut(float t) {\\n  return 1.0 - (pow(t - 1.0, 5.0));\\n}\\n\\n\"","export default \"#ifndef HALF_PI\\n#define HALF_PI 1.5707963267948966\\n#endif\\n\\nfloat elasticInOut(float t) {\\n  return t < 0.5\\n    ? 0.5 * sin(+13.0 * HALF_PI * 2.0 * t) * pow(2.0, 10.0 * (2.0 * t - 1.0))\\n    : 0.5 * sin(-13.0 * HALF_PI * ((2.0 * t - 1.0) + 1.0)) * pow(2.0, -10.0 * (2.0 * t - 1.0)) + 1.0;\\n}\\n\\n\"","export default \"float linear(float t) {\\n  return t;\\n}\\n\\n\"","export default \"float circularOut(float t) {\\n  return sqrt((2.0 - t) * t);\\n}\\n\\n\"","export default \"\\nfloat backInOut(float t) {\\n  float f = t < 0.5\\n    ? 2.0 * t\\n    : 1.0 - (2.0 * t - 1.0);\\n\\n  float g = pow(f, 3.0) - f * sin(f * PI);\\n\\n  return t < 0.5\\n    ? 0.5 * g\\n    : 0.5 * (1.0 - g) + 0.5;\\n}\\n\\n\"","export default \"\\nfloat backIn(float t) {\\n  return pow(t, 3.0) - t * sin(t * PI);\\n}\\n\\n\"","export default \"#ifndef HALF_PI\\n#define HALF_PI 1.5707963267948966\\n#endif\\n\\nfloat sineIn(float t) {\\n  return sin((t - 1.0) * HALF_PI) + 1.0;\\n}\\n\\n\"","export default \"\\nfloat backOut(float t) {\\n  float f = 1.0 - t;\\n  return 1.0 - (pow(f, 3.0) - f * sin(f * PI));\\n}\\n\\n\"","export default \"float quarticInOut(float t) {\\n  return t < 0.5\\n    ? +8.0 * pow(t, 4.0)\\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\\n}\\n\\n\"","export default \"float quadraticIn(float t) {\\n  return t * t;\\n}\\n\\n\"","export default \"float cubicInOut(float t) {\\n  return t < 0.5\\n    ? 4.0 * t * t * t\\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\\n}\\n\\n\"","export default \"#ifndef HALF_PI\\n#define HALF_PI 1.5707963267948966\\n#endif\\n\\nfloat elasticIn(float t) {\\n  return sin(13.0 * t * HALF_PI) * pow(2.0, 10.0 * (t - 1.0));\\n}\\n\\n\"","export default \"\\nfloat bounceOut(float t) {\\n  const float a = 4.0 / 11.0;\\n  const float b = 8.0 / 11.0;\\n  const float c = 9.0 / 10.0;\\n\\n  const float ca = 4356.0 / 361.0;\\n  const float cb = 35442.0 / 1805.0;\\n  const float cc = 16061.0 / 1805.0;\\n\\n  float t2 = t * t;\\n\\n  return t < a\\n    ? 7.5625 * t2\\n    : t < b\\n      ? 9.075 * t2 - 9.9 * t + 3.4\\n      : t < c\\n        ? ca * t2 - cb * t + cc\\n        : 10.8 * t * t - 20.52 * t + 10.72;\\n}\\n\\n\"","export default \"float quadraticInOut(float t) {\\n  float p = 2.0 * t * t;\\n  return t < 0.5 ? p : -p + (4.0 * t) - 1.0;\\n}\\n\\n\"","export default \"float exponentialIn(float t) {\\n  return t == 0.0 ? t : pow(2.0, 10.0 * (t - 1.0));\\n}\\n\\n\"","export default \"float quinticInOut(float t) {\\n  return t < 0.5\\n    ? +16.0 * pow(t, 5.0)\\n    : -0.5 * pow(2.0 * t - 2.0, 5.0) + 1.0;\\n}\\n\\n\"","export default \"\\nfloat sineInOut(float t) {\\n  return -0.5 * (cos(PI * t) - 1.0);\\n}\\n\\n\"","export default \"float cubicOut(float t) {\\n  float f = t - 1.0;\\n  return f * f * f + 1.0;\\n}\\n\\n\"","export default \"float quadraticOut(float t) {\\n  return -t * (t - 2.0);\\n}\\n\\n\"","export default \"\\nfloat bounceInOut(float t) {\\n  return t < 0.5\\n    ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\\n    : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\\n}\\n\\n\\n\\n\"","export default \"float quinticIn(float t) {\\n  return pow(t, 5.0);\\n}\\n\\n\"","export default \"float quarticIn(float t) {\\n  return pow(t, 4.0);\\n}\\n\\n\"","export default \"float quarticOut(float t) {\\n  return pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\\n}\\n\\n\"","export default \"\\nfloat bounceIn(float t) {\\n  return 1.0 - bounceOut(1.0 - t);\\n}\\n\\n\"","export default \"#ifndef HALF_PI\\n#define HALF_PI 1.5707963267948966\\n#endif\\n\\nfloat sineOut(float t) {\\n  return sin(t * HALF_PI);\\n}\\n\\n\"","import {BaseNodeGlMathFunctionArg5GlNode} from './_BaseMathFunction';\nimport FitMethods from './gl/fit.glsl';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nconst DefaultValues: Dictionary<number> = {\n\tsrc_min: 0,\n\tsrc_max: 1,\n};\n\nexport class FitGlNode extends BaseNodeGlMathFunctionArg5GlNode {\n\tstatic type() {\n\t\treturn 'fit';\n\t}\n\n\tprotected _gl_input_name(index: number): string {\n\t\treturn ['val', 'src_min', 'src_max', 'dest_min', 'dest_max'][index];\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name];\n\t}\n\tprotected gl_method_name(): string {\n\t\treturn 'fit';\n\t}\n\n\tgl_function_definitions() {\n\t\treturn [new FunctionGLDefinition(this, ConnectionPointType.FLOAT, FitMethods)];\n\t}\n}\n","import {BaseNodeGlMathFunctionArg3GlNode} from './_BaseMathFunction';\nimport FitMethods from './gl/fit.glsl';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nconst DefaultValues: Dictionary<number> = {\n\tsrc_min: 0,\n\tsrc_max: 1,\n};\n\nexport class Fit01GlNode extends BaseNodeGlMathFunctionArg3GlNode {\n\tstatic type() {\n\t\treturn 'fit01';\n\t}\n\n\tgl_input_name(index: number): string {\n\t\treturn ['val', 'src_min', 'src_max'][index];\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name];\n\t}\n\tgl_method_name(): string {\n\t\treturn 'fit01';\n\t}\n\n\tgl_function_definitions() {\n\t\treturn [new FunctionGLDefinition(this, ConnectionPointType.FLOAT, FitMethods)];\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../../src/core/ThreeToGl';\n\nimport Hsv2Rgb from './gl/hsv2rgb.glsl';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nconst OUTPUT_NAME = 'rgb';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass HsvToRgbGlParamsConfig extends NodeParamsConfig {\n\thsv = ParamConfig.VECTOR3([1, 1, 1]);\n}\nconst ParamsConfig = new HsvToRgbGlParamsConfig();\nexport class HsvToRgbGlNode extends TypedGlNode<HsvToRgbGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'hsv_to_rgb';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.VEC3),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst function_declaration_lines = [];\n\t\tconst body_lines = [];\n\n\t\tfunction_declaration_lines.push(new FunctionGLDefinition(this, ConnectionPointType.VEC3, Hsv2Rgb));\n\n\t\tconst value = ThreeToGl.vector3(this.variable_for_input(this.p.hsv.name));\n\n\t\tconst rgb = this.gl_var_name(OUTPUT_NAME);\n\t\tbody_lines.push(`vec3 ${rgb} = hsv2rgb(${value})`);\n\t\tshaders_collection_controller.add_definitions(this, function_declaration_lines);\n\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t}\n}\n","export default \"// https://github.com/hughsk/glsl-hsv2rgb\\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\\nvec3 hsv2rgb(vec3 c) {\\n\\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n\\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n\\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\"","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\n\nimport QuaternionMethods from './gl/quaternion.glsl';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nconst VARS = {\n\tposition: 'position',\n\tnormal: 'normal',\n\tinstance_position: 'instancePosition',\n\tinstance_orientation: 'instanceOrientation',\n\tinstance_scale: 'instanceScale',\n};\n\nclass InstanceTransformGlParamsConfig extends NodeParamsConfig {\n\tposition = ParamConfig.VECTOR3([0, 0, 0]);\n\tnormal = ParamConfig.VECTOR3([0, 0, 1]);\n\tinstance_position = ParamConfig.VECTOR3([0, 0, 0]);\n\tinstance_orientation = ParamConfig.VECTOR4([0, 0, 0, 0]);\n\tinstance_scale = ParamConfig.VECTOR3([1, 1, 1]);\n}\nconst ParamsConfig = new InstanceTransformGlParamsConfig();\nexport class InstanceTransformGlNode extends TypedGlNode<InstanceTransformGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'instance_transform';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(this.gl_output_name_position(), ConnectionPointType.VEC3),\n\t\t\tnew TypedNamedConnectionPoint(this.gl_output_name_normal(), ConnectionPointType.VEC3),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst body_lines = [];\n\t\tconst function_declaration_lines = [];\n\n\t\tfunction_declaration_lines.push(new FunctionGLDefinition(this, ConnectionPointType.VEC4, QuaternionMethods));\n\n\t\tconst input_position = this.io.inputs.named_input(this.p.position.name);\n\t\tconst position = input_position\n\t\t\t? ThreeToGl.float(this.variable_for_input(this.p.position.name))\n\t\t\t: this._default_position();\n\n\t\tconst input_normal = this.io.inputs.named_input(this.p.normal.name);\n\t\tconst normal = input_normal\n\t\t\t? ThreeToGl.float(this.variable_for_input(this.p.normal.name))\n\t\t\t: this._default_normal();\n\n\t\tconst input_instancePosition = this.io.inputs.named_input(this.p.instance_position.name);\n\t\tconst instancePosition = input_instancePosition\n\t\t\t? ThreeToGl.float(this.variable_for_input(this.p.instance_position.name))\n\t\t\t: this._default_instance_position(shaders_collection_controller);\n\t\t// const instancePosition = ThreeToGl.float(this.variable_for_input('instancePosition'))\n\n\t\tconst input_instanceOrientation = this.io.inputs.named_input(this.p.instance_orientation.name);\n\t\tconst instanceOrientation = input_instanceOrientation\n\t\t\t? ThreeToGl.float(this.variable_for_input(this.p.instance_orientation.name))\n\t\t\t: this._default_input_instance_orientation(shaders_collection_controller);\n\n\t\tconst input_instanceScale = this.io.inputs.named_input(this.p.instance_scale.name);\n\t\tconst instanceScale = input_instanceScale\n\t\t\t? ThreeToGl.float(this.variable_for_input(this.p.instance_scale.name))\n\t\t\t: this._default_input_instance_scale(shaders_collection_controller);\n\n\t\tconst result_position = this.gl_var_name(this.gl_output_name_position());\n\t\tconst result_normal = this.gl_var_name(this.gl_output_name_normal());\n\t\tbody_lines.push(`vec3 ${result_position} = vec3(${position})`);\n\t\tbody_lines.push(`${result_position} *= ${instanceScale}`);\n\t\tbody_lines.push(`${result_position} = rotate_with_quat( ${result_position}, ${instanceOrientation} )`);\n\t\tbody_lines.push(`${result_position} += ${instancePosition}`);\n\t\tbody_lines.push(`vec3 ${result_normal} = vec3(${normal})`);\n\t\tbody_lines.push(`${result_normal} = rotate_with_quat( ${result_normal}, ${instanceOrientation} )`);\n\n\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t\tshaders_collection_controller.add_definitions(this, function_declaration_lines);\n\t}\n\tgl_output_name_position() {\n\t\treturn 'position';\n\t}\n\tgl_output_name_normal() {\n\t\treturn 'normal';\n\t}\n\n\tprivate _default_position(): string {\n\t\treturn VARS.position;\n\t}\n\tprivate _default_normal(): string {\n\t\treturn VARS.normal;\n\t}\n\tprivate _default_instance_position(shaders_collection_controller: ShadersCollectionController): string | undefined {\n\t\treturn this.material_node?.assembler_controller.assembler.globals_handler?.read_attribute(\n\t\t\tthis,\n\t\t\tConnectionPointType.VEC3,\n\t\t\tVARS.instance_position,\n\t\t\tshaders_collection_controller\n\t\t);\n\t\t// return this.assembler()\n\t\t// \t.globals_handler()\n\t\t// \t.read_attribute(this, 'vec3', VARS.instance_position, this._shader_name);\n\t}\n\tprivate _default_input_instance_orientation(shaders_collection_controller: ShadersCollectionController) {\n\t\treturn this.material_node?.assembler_controller.assembler.globals_handler?.read_attribute(\n\t\t\tthis,\n\t\t\tConnectionPointType.VEC4,\n\t\t\tVARS.instance_orientation,\n\t\t\tshaders_collection_controller\n\t\t);\n\t\t// return this.assembler()\n\t\t// \t.globals_handler()\n\t\t// \t.read_attribute(this, 'vec4', VARS.instance_orientation, this._shader_name);\n\t}\n\tprivate _default_input_instance_scale(shaders_collection_controller: ShadersCollectionController) {\n\t\treturn this.material_node?.assembler_controller.assembler.globals_handler?.read_attribute(\n\t\t\tthis,\n\t\t\tConnectionPointType.VEC3,\n\t\t\tVARS.instance_scale,\n\t\t\tshaders_collection_controller\n\t\t);\n\t\t// return this.assembler()\n\t\t// \t.globals_handler()\n\t\t// \t.read_attribute(this, 'vec3', VARS.instance_scale, this._shader_name);\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nexport class LengthGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'length';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t}\n\n\tprotected _gl_input_name(index: number) {\n\t\treturn ['x'][index];\n\t}\n\tgl_method_name(): string {\n\t\treturn 'length';\n\t}\n\n\tprotected _expected_output_types() {\n\t\treturn [ConnectionPointType.FLOAT];\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nconst OUTPUT_NAME = 'lum';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass LuminanceGlParamsConfig extends NodeParamsConfig {\n\thsv = ParamConfig.VECTOR3([1, 1, 1]);\n}\nconst ParamsConfig = new LuminanceGlParamsConfig();\nexport class LuminanceGlNode extends TypedGlNode<LuminanceGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'luminance';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst value = ThreeToGl.vector3(this.variable_for_input('color'));\n\n\t\tconst lum = this.gl_var_name('lum');\n\t\t// linearToRelativeLuminance is declared in threejs common.glsl.js\n\t\tconst body_line = `float ${lum} = linearToRelativeLuminance(${value})`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import {BaseGlMathFunctionGlNode} from './_BaseMathFunction';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nexport class MixGlNode extends BaseGlMathFunctionGlNode {\n\tstatic type() {\n\t\treturn 'mix';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => ['value0', 'value1', 'blend'][index]);\n\t\tthis.gl_connections_controller.set_output_name_function(this._gl_output_name.bind(this));\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t}\n\n\tprotected _gl_output_name() {\n\t\treturn 'mix';\n\t}\n\n\tprotected _expected_input_types() {\n\t\tconst type = this.gl_connections_controller.first_input_connection_type() || ConnectionPointType.FLOAT;\n\t\treturn [type, type, ConnectionPointType.FLOAT];\n\t}\n\n\tprotected _expected_output_types() {\n\t\tconst type = this._expected_input_types()[0];\n\t\treturn [type];\n\t}\n}\n","import {BaseNodeGlMathFunctionArg4GlNode} from './_BaseMathFunction';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nconst DefaultValues: Dictionary<number> = {\n\tmult: 1,\n};\n\nenum InputName {\n\tVALUE = 'value',\n\tPRE_ADD = 'pre_add',\n\tMULT = 'mult',\n\tPOST_ADD = 'post_add',\n}\n\nexport class MultAddGlNode extends BaseNodeGlMathFunctionArg4GlNode {\n\tstatic type() {\n\t\treturn 'mult_add';\n\t}\n\n\tprotected _gl_input_name(index: number) {\n\t\treturn [InputName.VALUE, InputName.PRE_ADD, InputName.MULT, InputName.POST_ADD][index];\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name];\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst value = ThreeToGl.any(this.variable_for_input(InputName.VALUE));\n\t\tconst pre_add = ThreeToGl.any(this.variable_for_input(InputName.PRE_ADD));\n\t\tconst mult = ThreeToGl.any(this.variable_for_input(InputName.MULT));\n\t\tconst post_add = ThreeToGl.any(this.variable_for_input(InputName.POST_ADD));\n\n\t\tconst gl_type = this._expected_output_types()[0];\n\t\tconst out_name = this.io.outputs.named_output_connection_points[0].name;\n\t\tconst out = this.gl_var_name(out_name);\n\t\tconst body_line = `${gl_type} ${out} = (${mult}*(${value} + ${pre_add})) + ${post_add}`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nexport class NegateGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'negate';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => ['in'][index]);\n\t}\n\n\tprotected _gl_input_name(index: number) {\n\t\treturn ['in'][index];\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst in_value = ThreeToGl.any(this.variable_for_input(this._gl_input_name(0)));\n\n\t\tconst gl_type = this.io.inputs.named_input_connection_points[0].type;\n\t\tconst out = this.gl_var_name(this.gl_connections_controller.output_name(0));\n\t\tconst body_line = `${gl_type} ${out} = -1.0 * ${in_value}`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import lodash_range from 'lodash/range';\nimport {TypedGlNode} from './_Base';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {GlConnectionsController} from './utils/ConnectionsController';\n\n// https://github.com/stegu/webgl-noise/\nimport NoiseCommon from './gl/noise/common.glsl';\n// import cellular2D from './Gl/noise/cellular2D.glsl'\n// import cellular2x2 from './Gl/noise/cellular2x2.glsl'\n// import cellular2x2x2 from './Gl/noise/cellular2x2x2.glsl'\n// import cellular3D from './Gl/noise/cellular3D.glsl'\nimport classicnoise2D from './gl/noise/classicnoise2D.glsl';\nimport classicnoise3D from './gl/noise/classicnoise3D.glsl';\nimport classicnoise4D from './gl/noise/classicnoise4D.glsl';\nimport noise2D from './gl/noise/noise2D.glsl';\nimport noise3D from './gl/noise/noise3D.glsl';\n// import noise3Dgrad from './Gl/noise/noise3Dgrad.glsl'\nimport noise4D from './gl/noise/noise4D.glsl';\nimport {ConnectionPointType, ConnectionPointComponentsCountMap} from '../utils/connections/ConnectionPointType';\n// import psrdnoise2D from './Gl/noise/psrdnoise2D.glsl'\n\nenum NOISE_NAME {\n\t// 'cellular2D',\n\t// 'cellular2x2',\n\t// 'cellular2x2x2',\n\t// 'cellular3D',\n\tCLASSIC_PERLIN_2D = 'Classic Perlin 2D',\n\t// 'Classic Perlin 2D with periodic variant',\n\tCLASSIC_PERLIN_3D = 'Classic Perlin 3D',\n\t// 'Classic Perlin 3D with periodic variant',\n\tCLASSIC_PERLIN_4D = 'Classic Perlin 4D',\n\t// 'Classic Perlin 4D with periodic variant',\n\tNOISE_2D = 'noise2D',\n\tNOISE_3D = 'noise3D',\n\t// 'noise3Dgrad',\n\tNOISE_4D = 'noise4D',\n\t// 'Periodic Simplex Rotating Derivative', // psrdnoise\n\t// 'Periodic Simplex Derivative', // psdnoise\n\t// 'Periodic Simplex Rotating', // psrnoise\n\t// 'Periodic Simplex', // psnoise\n\t// 'Simplex Rotating Derivating', // srdnoise\n\t// 'Simplex Derivating', // sdnoise\n\t// 'Simplex Rotating', // srnoise\n\t// 'Simplex', // snoise\n}\nconst NOISE_NAMES: Array<NOISE_NAME> = [\n\tNOISE_NAME.CLASSIC_PERLIN_2D,\n\tNOISE_NAME.CLASSIC_PERLIN_3D,\n\tNOISE_NAME.CLASSIC_PERLIN_4D,\n\tNOISE_NAME.NOISE_2D,\n\tNOISE_NAME.NOISE_3D,\n\tNOISE_NAME.NOISE_4D,\n];\n\ntype StringByNoise = {[key in NOISE_NAME]: string};\nconst IMPORT_BY_NOISE_NAME: StringByNoise = {\n\t[NOISE_NAME.CLASSIC_PERLIN_2D]: classicnoise2D,\n\t[NOISE_NAME.CLASSIC_PERLIN_3D]: classicnoise3D,\n\t[NOISE_NAME.CLASSIC_PERLIN_4D]: classicnoise4D,\n\t[NOISE_NAME.NOISE_2D]: noise2D,\n\t[NOISE_NAME.NOISE_3D]: noise3D,\n\t[NOISE_NAME.NOISE_4D]: noise4D,\n};\ntype ConnectionTypeByNoise = {[key in NOISE_NAME]: ConnectionPointType};\nconst INPUT_TYPES_BY_NOISE_NAME: ConnectionTypeByNoise = {\n\t[NOISE_NAME.CLASSIC_PERLIN_2D]: ConnectionPointType.VEC2,\n\t[NOISE_NAME.CLASSIC_PERLIN_3D]: ConnectionPointType.VEC3,\n\t[NOISE_NAME.CLASSIC_PERLIN_4D]: ConnectionPointType.VEC4,\n\t[NOISE_NAME.NOISE_2D]: ConnectionPointType.VEC2,\n\t[NOISE_NAME.NOISE_3D]: ConnectionPointType.VEC3,\n\t[NOISE_NAME.NOISE_4D]: ConnectionPointType.VEC4,\n};\n\nconst OUTPUT_TYPE_BY_NOISE_NAME: ConnectionTypeByNoise = {\n\t[NOISE_NAME.CLASSIC_PERLIN_2D]: ConnectionPointType.FLOAT,\n\t[NOISE_NAME.CLASSIC_PERLIN_3D]: ConnectionPointType.FLOAT,\n\t[NOISE_NAME.CLASSIC_PERLIN_4D]: ConnectionPointType.FLOAT,\n\t[NOISE_NAME.NOISE_2D]: ConnectionPointType.FLOAT,\n\t[NOISE_NAME.NOISE_3D]: ConnectionPointType.FLOAT,\n\t[NOISE_NAME.NOISE_4D]: ConnectionPointType.FLOAT,\n};\nconst METHOD_NAMES_BY_NOISE_NAME: StringByNoise = {\n\t[NOISE_NAME.CLASSIC_PERLIN_2D]: 'cnoise',\n\t[NOISE_NAME.CLASSIC_PERLIN_3D]: 'cnoise',\n\t[NOISE_NAME.CLASSIC_PERLIN_4D]: 'cnoise',\n\t[NOISE_NAME.NOISE_2D]: 'snoise',\n\t[NOISE_NAME.NOISE_3D]: 'snoise',\n\t[NOISE_NAME.NOISE_4D]: 'snoise',\n};\n\nenum OUTPUT_TYPE {\n\tNoChange = 0,\n\tFloat = 1,\n\tVec2 = 2,\n\tVec3 = 3,\n\tVec4 = 4,\n}\nconst OUTPUT_TYPES: Array<OUTPUT_TYPE> = [\n\tOUTPUT_TYPE.NoChange,\n\tOUTPUT_TYPE.Float,\n\tOUTPUT_TYPE.Vec2,\n\tOUTPUT_TYPE.Vec3,\n\tOUTPUT_TYPE.Vec4,\n];\ntype StringByOutputType = {[key in OUTPUT_TYPE]: string};\nconst OUTPUT_TYPE_LABEL: StringByOutputType = {\n\t[OUTPUT_TYPE.NoChange]: 'Same as noise',\n\t[OUTPUT_TYPE.Float]: 'Float',\n\t[OUTPUT_TYPE.Vec2]: 'Vec2',\n\t[OUTPUT_TYPE.Vec3]: 'Vec3',\n\t[OUTPUT_TYPE.Vec4]: 'Vec4',\n};\ntype ConnectionTypeByOutputType = {[key in OUTPUT_TYPE]: ConnectionPointType};\nconst CONNECTION_TYPE_BY_OUTPUT_TYPE: ConnectionTypeByOutputType = {\n\t[OUTPUT_TYPE.NoChange]: ConnectionPointType.FLOAT,\n\t[OUTPUT_TYPE.Float]: ConnectionPointType.FLOAT,\n\t[OUTPUT_TYPE.Vec2]: ConnectionPointType.VEC2,\n\t[OUTPUT_TYPE.Vec3]: ConnectionPointType.VEC3,\n\t[OUTPUT_TYPE.Vec4]: ConnectionPointType.VEC4,\n};\n\nconst ALL_COMPONENTS = ['x', 'y', 'z', 'w'];\nconst OUTPUT_NAME = 'noise';\nconst default_noise_type = NOISE_NAMES.indexOf(NOISE_NAME.NOISE_3D);\nconst default_output_type = OUTPUT_TYPE.NoChange;\n\nconst DefaultValues: Dictionary<number> = {\n\tamp: 1,\n\tfreq: 1,\n};\n\nenum InputName {\n\tAMP = 'amp',\n\tPOSITION = 'position',\n\tFREQ = 'freq',\n\tOFFSET = 'offset',\n}\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\nclass NoiseGlParamsConfig extends NodeParamsConfig {\n\ttype = ParamConfig.INTEGER(default_noise_type, {\n\t\tmenu: {\n\t\t\tentries: NOISE_NAMES.map((noise_name, i) => {\n\t\t\t\tconst noise_output_type = OUTPUT_TYPE_BY_NOISE_NAME[noise_name];\n\t\t\t\tconst name = `${noise_name} (output: ${noise_output_type})`;\n\t\t\t\treturn {name: name, value: i};\n\t\t\t}),\n\t\t},\n\t});\n\toutput_type = ParamConfig.INTEGER(default_output_type, {\n\t\tmenu: {\n\t\t\tentries: OUTPUT_TYPES.map((output_type) => {\n\t\t\t\tconst val = OUTPUT_TYPES[output_type];\n\t\t\t\tconst name = OUTPUT_TYPE_LABEL[val];\n\t\t\t\treturn {name: name, value: val};\n\t\t\t}),\n\t\t},\n\t});\n\toctaves = ParamConfig.INTEGER(3, {range: [1, 10], range_locked: [true, false]});\n\tamp_attenuation = ParamConfig.FLOAT(0.5, {range: [0, 1]});\n\tfreq_increase = ParamConfig.FLOAT(2, {range: [0, 10]});\n\tseparator = ParamConfig.SEPARATOR();\n}\nconst ParamsConfig = new NoiseGlParamsConfig();\nexport class NoiseGlNode extends TypedGlNode<NoiseGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\n\tstatic type() {\n\t\treturn 'noise';\n\t}\n\n\tpublic readonly gl_connections_controller: GlConnectionsController = new GlConnectionsController(this);\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.gl_connections_controller.initialize_node();\n\t\tthis.spare_params_controller.set_inputless_param_names(['octaves', 'amp_attenuation', 'freq_increase']);\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.FLOAT),\n\t\t]);\n\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t}\n\n\tprotected _gl_input_name(index: number) {\n\t\treturn [InputName.AMP, InputName.POSITION, InputName.FREQ, InputName.OFFSET][index];\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name];\n\t}\n\n\tprivate _expected_input_types(): ConnectionPointType[] {\n\t\tconst noise_name = NOISE_NAMES[this.pv.type];\n\t\tconst type = INPUT_TYPES_BY_NOISE_NAME[noise_name];\n\t\treturn [type, type, type, type];\n\t}\n\tprivate _expected_output_types(): ConnectionPointType[] {\n\t\tconst noise_name = NOISE_NAMES[this.pv.type];\n\t\tconst output_type = OUTPUT_TYPES[this.pv.output_type];\n\t\tif (output_type == OUTPUT_TYPE.NoChange) {\n\t\t\treturn [OUTPUT_TYPE_BY_NOISE_NAME[noise_name]];\n\t\t} else {\n\t\t\treturn [CONNECTION_TYPE_BY_OUTPUT_TYPE[output_type]];\n\t\t}\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst function_declaration_lines = [];\n\t\tconst body_lines = [];\n\n\t\tconst noise_name = NOISE_NAMES[this.pv.type];\n\t\tconst noise_function = IMPORT_BY_NOISE_NAME[noise_name];\n\t\tconst noise_output_gl_type = OUTPUT_TYPE_BY_NOISE_NAME[noise_name];\n\t\tfunction_declaration_lines.push(new FunctionGLDefinition(this, noise_output_gl_type, NoiseCommon));\n\t\tfunction_declaration_lines.push(new FunctionGLDefinition(this, noise_output_gl_type, noise_function));\n\t\tfunction_declaration_lines.push(new FunctionGLDefinition(this, noise_output_gl_type, this.fbm_function()));\n\n\t\tconst output_gl_type = this._expected_output_types()[0];\n\n\t\t// if the requested output type matches the noise signature\n\t\tif (output_gl_type == noise_output_gl_type) {\n\t\t\tconst line = this.single_noise_line();\n\t\t\t// body_lines.push( `${output_gl_type} ${noise} = ${amp}*${method_name}(${joined_args})` )\n\t\t\tbody_lines.push(line);\n\t\t} else {\n\t\t\t// if the requested output type does not match the noise signature\n\t\t\tconst requested_components_count = ConnectionPointComponentsCountMap[output_gl_type];\n\t\t\t// const noise_output_components_count = OUTPUT_TYPE_BY_NOISE_NAME[output_gl_type]\n\n\t\t\t// console.log(\"compare\", output_gl_type, requested_components_count, noise_output_components_count)\n\t\t\t// if(requested_components_count < noise_output_components_count){\n\t\t\t// \t// not sure we ever go through here with the current noise set\n\t\t\t// \tlet component = lodash_range(requested_components_count).map(i=>ALL_COMPONENTS[i]).join('')\n\t\t\t// \tconst line = this.single_noise_line('', component)\n\t\t\t// \tbody_lines.push(line)\n\t\t\t// } else {\n\t\t\tconst lines_count_required = requested_components_count;\n\t\t\tconst assembly_args: string[] = [];\n\t\t\tconst noise = this.gl_var_name('noise');\n\t\t\tfor (let i = 0; i < lines_count_required; i++) {\n\t\t\t\tconst component = ALL_COMPONENTS[i];\n\t\t\t\tassembly_args.push(`${noise}${component}`);\n\t\t\t\tconst input_type = INPUT_TYPES_BY_NOISE_NAME[noise_name];\n\t\t\t\t// if (lodash_isArray(input_constructor)) {\n\t\t\t\t// TODO: for noise3Dgrad and other noises with 2 inputs\n\t\t\t\t// } else {\n\t\t\t\t// console.log(INPUT_TYPES_BY_NOISE_NAME, noise_name)\n\t\t\t\tconst offset_gl_type = input_type;\n\t\t\t\tconst offset_components_count = ConnectionPointComponentsCountMap[offset_gl_type];\n\t\t\t\tconst offset_values = lodash_range(offset_components_count)\n\t\t\t\t\t.map((j) => ThreeToGl.float(1000 * i))\n\t\t\t\t\t.join(', ');\n\t\t\t\tconst offset2 = `${offset_gl_type}(${offset_values})`;\n\t\t\t\tconst line = this.single_noise_line(component, component, offset2);\n\t\t\t\tbody_lines.push(line);\n\t\t\t\t// }\n\t\t\t}\n\t\t\tconst joined_args = assembly_args.join(', ');\n\t\t\tconst assembly_line = `vec${lines_count_required} ${noise} = vec${lines_count_required}(${joined_args})`;\n\t\t\tbody_lines.push(assembly_line);\n\t\t\t// }\n\t\t}\n\n\t\tshaders_collection_controller.add_definitions(this, function_declaration_lines);\n\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t}\n\n\tprivate fbm_method_name() {\n\t\tconst noise_name = NOISE_NAMES[this.pv.type];\n\t\tconst method_name = METHOD_NAMES_BY_NOISE_NAME[noise_name];\n\t\treturn `fbm_${method_name}_${this.name}`;\n\t}\n\n\tprivate fbm_function() {\n\t\tconst noise_name = NOISE_NAMES[this.pv.type];\n\t\tconst method_name = METHOD_NAMES_BY_NOISE_NAME[noise_name];\n\n\t\tconst input_type = INPUT_TYPES_BY_NOISE_NAME[noise_name];\n\n\t\treturn `\nfloat ${this.fbm_method_name()} (in ${input_type} st) {\n\tfloat value = 0.0;\n\tfloat amplitude = 1.0;\n\tfor (int i = 0; i < ${ThreeToGl.int(this.pv.octaves)}; i++) {\n\t\tvalue += amplitude * ${method_name}(st);\n\t\tst *= ${ThreeToGl.float(this.pv.freq_increase)};\n\t\tamplitude *= ${ThreeToGl.float(this.pv.amp_attenuation)};\n\t}\n\treturn value;\n}\n`;\n\t}\n\n\tprivate single_noise_line(output_name_suffix?: string, component?: string, offset2?: string) {\n\t\tconst noise_name = NOISE_NAMES[this.pv.type];\n\t\t// const method_name = METHOD_NAMES_BY_NOISE_NAME[noise_name]\n\t\tconst method_name = this.fbm_method_name();\n\n\t\tconst amp = ThreeToGl.any(this.variable_for_input(InputName.AMP));\n\t\tconst position = ThreeToGl.any(this.variable_for_input(InputName.POSITION));\n\t\tconst freq = ThreeToGl.any(this.variable_for_input(InputName.FREQ));\n\t\tlet offset = ThreeToGl.any(this.variable_for_input(InputName.OFFSET));\n\t\tif (offset2) {\n\t\t\toffset = `(${offset}+${offset2})`;\n\t\t}\n\t\tconst args = [`(${position}*${freq})+${offset}`];\n\n\t\t// we cannot use amp as is in all cases\n\t\t// if the noise outputs a vec2 and the amp is vec3, we cannot simply do vec3*vec2\n\t\t// therefore, in such a case, we must only take the required component of vec3\n\t\t// examples:\n\t\t// - noise is cellular 2D (outputs vec2) and requested output is float:\n\t\t//\t\tnothing to do\n\t\t// - noise is cellular 2D (outputs vec2) and requested output is vec2:\n\t\t//\t\tnothing to do\n\t\t// - noise is cellular 2D (outputs vec3) and requested output is vec2:\n\t\t//\t\twe have:\n\t\t//\t\t\tx = amp.x * vec2.x\n\t\t//\t\t\ty = amp.y * vec2.y\n\t\t//\t\t\tz = amp.z * 0\n\t\t//\t\t\toutput = vec3(x,y,z)\n\n\t\t// add other args if required\n\t\t// const input_type = INPUT_TYPES_BY_NOISE_NAME[noise_name];\n\t\t// if (lodash_isArray(input_constructor)) {\n\t\t// \tconst properties = lodash_clone(input_constructor);\n\t\t// \tproperties.shift(); // remove position\n\t\t// \tproperties.forEach((property) => {\n\t\t// \t\tconst arg_name = Object.keys(property)[0];\n\t\t// \t\tconst arg = ThreeToGl.any(this.variable_for_input(arg_name));\n\t\t// \t\targs.push(arg);\n\t\t// \t});\n\t\t// }\n\t\tconst joined_args = args.join(', ');\n\n\t\t// let output_type = OUTPUT_TYPE_BY_NOISE_NAME[noise_name]\n\n\t\tconst noise = this.gl_var_name(OUTPUT_NAME);\n\t\tconst right_hand = `${amp}*${method_name}(${joined_args})`;\n\t\tif (component) {\n\t\t\treturn `float ${noise}${output_name_suffix} = (${right_hand}).${component}`;\n\t\t} else {\n\t\t\t// it looks like we never go here with the current set of noises\n\t\t\tconst output_type = OUTPUT_TYPE_BY_NOISE_NAME[noise_name];\n\t\t\treturn `${output_type} ${noise} = ${right_hand}`;\n\t\t}\n\t}\n}\n","export default \"// Modulo 289 without a division (only multiplications)\\nfloat mod289(float x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec2 mod289(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n// Modulo 7 without a division\\nvec3 mod7(vec3 x) {\\n  return x - floor(x * (1.0 / 7.0)) * 7.0;\\n}\\n\\n// Permutation polynomial: (34x^2 + x) mod 289\\nfloat permute(float x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\nvec3 permute(vec3 x) {\\n  return mod289((34.0 * x + 1.0) * x);\\n}\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat taylorInvSqrt(float r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec2 fade(vec2 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\nvec3 fade(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\nvec4 fade(vec4 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\"","export default \"//\\n// GLSL textureless classic 2D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-08-22\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/stegu/webgl-noise\\n//\\n\\n\\n// Classic Perlin noise\\nfloat cnoise(vec2 P)\\n{\\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n  Pi = mod289(Pi); // To avoid truncation effects in permutation\\n  vec4 ix = Pi.xzxz;\\n  vec4 iy = Pi.yyww;\\n  vec4 fx = Pf.xzxz;\\n  vec4 fy = Pf.yyww;\\n\\n  vec4 i = permute(permute(ix) + iy);\\n\\n  vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\\n  vec4 gy = abs(gx) - 0.5 ;\\n  vec4 tx = floor(gx + 0.5);\\n  gx = gx - tx;\\n\\n  vec2 g00 = vec2(gx.x,gy.x);\\n  vec2 g10 = vec2(gx.y,gy.y);\\n  vec2 g01 = vec2(gx.z,gy.z);\\n  vec2 g11 = vec2(gx.w,gy.w);\\n\\n  vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\\n  g00 *= norm.x;  \\n  g01 *= norm.y;  \\n  g10 *= norm.z;  \\n  g11 *= norm.w;  \\n\\n  float n00 = dot(g00, vec2(fx.x, fy.x));\\n  float n10 = dot(g10, vec2(fx.y, fy.y));\\n  float n01 = dot(g01, vec2(fx.z, fy.z));\\n  float n11 = dot(g11, vec2(fx.w, fy.w));\\n\\n  vec2 fade_xy = fade(Pf.xy);\\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n  return 2.3 * n_xy;\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec2 P, vec2 rep)\\n{\\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n  Pi = mod(Pi, rep.xyxy); // To create noise with explicit period\\n  Pi = mod289(Pi);        // To avoid truncation effects in permutation\\n  vec4 ix = Pi.xzxz;\\n  vec4 iy = Pi.yyww;\\n  vec4 fx = Pf.xzxz;\\n  vec4 fy = Pf.yyww;\\n\\n  vec4 i = permute(permute(ix) + iy);\\n\\n  vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\\n  vec4 gy = abs(gx) - 0.5 ;\\n  vec4 tx = floor(gx + 0.5);\\n  gx = gx - tx;\\n\\n  vec2 g00 = vec2(gx.x,gy.x);\\n  vec2 g10 = vec2(gx.y,gy.y);\\n  vec2 g01 = vec2(gx.z,gy.z);\\n  vec2 g11 = vec2(gx.w,gy.w);\\n\\n  vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\\n  g00 *= norm.x;  \\n  g01 *= norm.y;  \\n  g10 *= norm.z;  \\n  g11 *= norm.w;  \\n\\n  float n00 = dot(g00, vec2(fx.x, fy.x));\\n  float n10 = dot(g10, vec2(fx.y, fy.y));\\n  float n01 = dot(g01, vec2(fx.z, fy.z));\\n  float n11 = dot(g11, vec2(fx.w, fy.w));\\n\\n  vec2 fade_xy = fade(Pf.xy);\\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n  return 2.3 * n_xy;\\n}\\n\"","export default \"//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/stegu/webgl-noise\\n//\\n\\n// Classic Perlin noise\\nfloat cnoise(vec3 P)\\n{\\n  vec3 Pi0 = floor(P); // Integer part for indexing\\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n  Pi0 = mod289(Pi0);\\n  Pi1 = mod289(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n  return 2.2 * n_xyz;\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289(Pi0);\\n  Pi1 = mod289(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n  return 2.2 * n_xyz;\\n}\\n\"","export default \"//\\n// GLSL textureless classic 4D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-08-22\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/stegu/webgl-noise\\n//\\n\\n\\n\\n// Classic Perlin noise\\nfloat cnoise(vec4 P)\\n{\\n  vec4 Pi0 = floor(P); // Integer part for indexing\\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\\n  Pi0 = mod289(Pi0);\\n  Pi1 = mod289(Pi1);\\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = vec4(Pi0.zzzz);\\n  vec4 iz1 = vec4(Pi1.zzzz);\\n  vec4 iw0 = vec4(Pi0.wwww);\\n  vec4 iw1 = vec4(Pi1.wwww);\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n  vec4 ixy00 = permute(ixy0 + iw0);\\n  vec4 ixy01 = permute(ixy0 + iw1);\\n  vec4 ixy10 = permute(ixy1 + iw0);\\n  vec4 ixy11 = permute(ixy1 + iw1);\\n\\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\\n  gx00 = fract(gx00) - 0.5;\\n  gy00 = fract(gy00) - 0.5;\\n  gz00 = fract(gz00) - 0.5;\\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\\n  vec4 sw00 = step(gw00, vec4(0.0));\\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\\n\\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\\n  gx01 = fract(gx01) - 0.5;\\n  gy01 = fract(gy01) - 0.5;\\n  gz01 = fract(gz01) - 0.5;\\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\\n  vec4 sw01 = step(gw01, vec4(0.0));\\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\\n\\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\\n  gx10 = fract(gx10) - 0.5;\\n  gy10 = fract(gy10) - 0.5;\\n  gz10 = fract(gz10) - 0.5;\\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\\n  vec4 sw10 = step(gw10, vec4(0.0));\\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\\n\\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\\n  gx11 = fract(gx11) - 0.5;\\n  gy11 = fract(gy11) - 0.5;\\n  gz11 = fract(gz11) - 0.5;\\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\\n  vec4 sw11 = step(gw11, vec4(0.0));\\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\\n\\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\\n\\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\\n  g0000 *= norm00.x;\\n  g0100 *= norm00.y;\\n  g1000 *= norm00.z;\\n  g1100 *= norm00.w;\\n\\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\\n  g0001 *= norm01.x;\\n  g0101 *= norm01.y;\\n  g1001 *= norm01.z;\\n  g1101 *= norm01.w;\\n\\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\\n  g0010 *= norm10.x;\\n  g0110 *= norm10.y;\\n  g1010 *= norm10.z;\\n  g1110 *= norm10.w;\\n\\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\\n  g0011 *= norm11.x;\\n  g0111 *= norm11.y;\\n  g1011 *= norm11.z;\\n  g1111 *= norm11.w;\\n\\n  float n0000 = dot(g0000, Pf0);\\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\\n  float n1111 = dot(g1111, Pf1);\\n\\n  vec4 fade_xyzw = fade(Pf0);\\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\\n  return 2.2 * n_xyzw;\\n}\\n\\n// Classic Perlin noise, periodic version\\nfloat pnoise(vec4 P, vec4 rep)\\n{\\n  vec4 Pi0 = mod(floor(P), rep); // Integer part modulo rep\\n  vec4 Pi1 = mod(Pi0 + 1.0, rep); // Integer part + 1 mod rep\\n  Pi0 = mod289(Pi0);\\n  Pi1 = mod289(Pi1);\\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = vec4(Pi0.zzzz);\\n  vec4 iz1 = vec4(Pi1.zzzz);\\n  vec4 iw0 = vec4(Pi0.wwww);\\n  vec4 iw1 = vec4(Pi1.wwww);\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n  vec4 ixy00 = permute(ixy0 + iw0);\\n  vec4 ixy01 = permute(ixy0 + iw1);\\n  vec4 ixy10 = permute(ixy1 + iw0);\\n  vec4 ixy11 = permute(ixy1 + iw1);\\n\\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\\n  gx00 = fract(gx00) - 0.5;\\n  gy00 = fract(gy00) - 0.5;\\n  gz00 = fract(gz00) - 0.5;\\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\\n  vec4 sw00 = step(gw00, vec4(0.0));\\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\\n\\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\\n  gx01 = fract(gx01) - 0.5;\\n  gy01 = fract(gy01) - 0.5;\\n  gz01 = fract(gz01) - 0.5;\\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\\n  vec4 sw01 = step(gw01, vec4(0.0));\\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\\n\\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\\n  gx10 = fract(gx10) - 0.5;\\n  gy10 = fract(gy10) - 0.5;\\n  gz10 = fract(gz10) - 0.5;\\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\\n  vec4 sw10 = step(gw10, vec4(0.0));\\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\\n\\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\\n  gx11 = fract(gx11) - 0.5;\\n  gy11 = fract(gy11) - 0.5;\\n  gz11 = fract(gz11) - 0.5;\\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\\n  vec4 sw11 = step(gw11, vec4(0.0));\\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\\n\\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\\n\\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\\n  g0000 *= norm00.x;\\n  g0100 *= norm00.y;\\n  g1000 *= norm00.z;\\n  g1100 *= norm00.w;\\n\\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\\n  g0001 *= norm01.x;\\n  g0101 *= norm01.y;\\n  g1001 *= norm01.z;\\n  g1101 *= norm01.w;\\n\\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\\n  g0010 *= norm10.x;\\n  g0110 *= norm10.y;\\n  g1010 *= norm10.z;\\n  g1110 *= norm10.w;\\n\\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\\n  g0011 *= norm11.x;\\n  g0111 *= norm11.y;\\n  g1011 *= norm11.z;\\n  g1111 *= norm11.w;\\n\\n  float n0000 = dot(g0000, Pf0);\\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\\n  float n1111 = dot(g1111, Pf1);\\n\\n  vec4 fade_xyzw = fade(Pf0);\\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\\n  return 2.2 * n_xyzw;\\n}\\n\"","export default \"//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n// \\n\\n\\nfloat snoise(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289(i); // Avoid truncation effects in permutation\\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\\n\\t\\t+ i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\"","export default \"//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex \\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n// \\n\\n\\n\\nfloat snoise(vec3 v)\\n  { \\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i); \\n  vec4 p = permute( permute( permute( \\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\"","export default \"//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex \\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//               https://github.com/stegu/webgl-noise\\n// \\n\\n\\n\\n\\n\\n\\n\\nvec4 grad4(float j, vec4 ip)\\n  {\\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\\n  vec4 p,s;\\n\\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\\n  s = vec4(lessThan(p, vec4(0.0)));\\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; \\n\\n  return p;\\n  }\\n\\t\\t\\t\\t\\t\\t\\n// (sqrt(5) - 1)/4 = F4, used once below\\n#define F4 0.309016994374947451\\n\\nfloat snoise(vec4 v)\\n  {\\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\\n                        0.276393202250021,  // 2 * G4\\n                        0.414589803375032,  // 3 * G4\\n                       -0.447213595499958); // -1 + 4 * G4\\n\\n// First corner\\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\\n  vec4 x0 = v -   i + dot(i, C.xxxx);\\n\\n// Other corners\\n\\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\\n  vec4 i0;\\n  vec3 isX = step( x0.yzw, x0.xxx );\\n  vec3 isYZ = step( x0.zww, x0.yyz );\\n//  i0.x = dot( isX, vec3( 1.0 ) );\\n  i0.x = isX.x + isX.y + isX.z;\\n  i0.yzw = 1.0 - isX;\\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\\n  i0.y += isYZ.x + isYZ.y;\\n  i0.zw += 1.0 - isYZ.xy;\\n  i0.z += isYZ.z;\\n  i0.w += 1.0 - isYZ.z;\\n\\n  // i0 now contains the unique values 0,1,2,3 in each channel\\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\\n\\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\\n  vec4 x1 = x0 - i1 + C.xxxx;\\n  vec4 x2 = x0 - i2 + C.yyyy;\\n  vec4 x3 = x0 - i3 + C.zzzz;\\n  vec4 x4 = x0 + C.wwww;\\n\\n// Permutations\\n  i = mod289(i); \\n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\\n  vec4 j1 = permute( permute( permute( permute (\\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\\n\\n// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\\n\\n  vec4 p0 = grad4(j0,   ip);\\n  vec4 p1 = grad4(j1.x, ip);\\n  vec4 p2 = grad4(j1.y, ip);\\n  vec4 p3 = grad4(j1.z, ip);\\n  vec4 p4 = grad4(j1.w, ip);\\n\\n// Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n  p4 *= taylorInvSqrt(dot(p4,p4));\\n\\n// Mix contributions from the five corners\\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\\n  m0 = m0 * m0;\\n  m1 = m1 * m1;\\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\\n\\n  }\\n\"","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\n// import {ParamType} from '../../../Engine/Param/_Module';\n// import {TypedConnectionFloat} from './GlData'\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nexport class NullGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'null';\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst in_value = ThreeToGl.any(this.variable_for_input('in'));\n\n\t\tconst gl_type = this.io.inputs.named_input_connection_points[0].type;\n\t\tconst out = this.gl_var_name('value');\n\t\tconst body_line = `${gl_type} ${out} = ${in_value}`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import {TypedGlNode} from './_Base';\n// import {ThreeToGl} from '../../../Core/ThreeToGl';\n// import {CodeBuilder} from './Util/CodeBuilder'\n// import {Definition} from './Definition/_Module';\n// import {ShaderName, LineType, LINE_TYPES} from './Assembler/Util/CodeBuilder';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nclass OutputGlParamsConfig extends NodeParamsConfig {\n\t// type = ParamConfig.INTEGER(0, {\n\t// \tmenu: {\n\t// \t\tentries: ConnectionPointTypes.map((name, i) => {\n\t// \t\t\treturn {name: name, value: i};\n\t// \t\t}),\n\t// \t},\n\t// });\n\t// value_float = ParamConfig.FLOAT(0, ConstantGlNode.typed_visible_options(ConnectionPointType.FLOAT));\n\t// value_vec2 = ParamConfig.VECTOR2([0, 0], ConstantGlNode.typed_visible_options(ConnectionPointType.VEC2));\n\t// value_vec3 = ParamConfig.VECTOR3([0, 0, 0], ConstantGlNode.typed_visible_options(ConnectionPointType.VEC3));\n\t// value_vec4 = ParamConfig.VECTOR4([0, 0, 0, 0], ConstantGlNode.typed_visible_options(ConnectionPointType.VEC4));\n}\nconst ParamsConfig = new OutputGlParamsConfig();\n\nexport class OutputGlNode extends TypedGlNode<OutputGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'output';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.add_post_dirty_hook('_set_mat_to_recompile', this._set_mat_to_recompile.bind(this));\n\t}\n\n\tcreate_params() {\n\t\tthis.material_node?.assembler_controller.add_output_params(this);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\t// if (shaders_collection_controller.shader_name) {\n\t\tthis.material_node?.assembler_controller.assembler.set_node_lines_output(this, shaders_collection_controller);\n\t\t// }\n\t}\n\n\t// set_color_declaration(color_declaration: string){\n\t// \tthis._color_declaration = color_declaration\n\t// }\n}\n","import {TypedGlNode} from './_Base';\nimport {\n\tConnectionPointTypes,\n\tConnectionPointType,\n\tConnectionPointInitValueMap,\n\tConnectionPointTypeToParamTypeMap,\n} from '../utils/connections/ConnectionPointType';\nimport lodash_isArray from 'lodash/isArray';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ParamType} from '../../poly/ParamType';\nimport {UniformGLDefinition} from './utils/GLDefinition';\nimport {ParamConfigsController} from '../utils/code/controllers/ParamConfigsController';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {GlConnectionsController} from './utils/ConnectionsController';\nclass ParamGlParamsConfig extends NodeParamsConfig {\n\tname = ParamConfig.STRING('');\n\ttype = ParamConfig.INTEGER(ConnectionPointTypes.indexOf(ConnectionPointType.FLOAT), {\n\t\tmenu: {\n\t\t\tentries: ConnectionPointTypes.map((name, i) => {\n\t\t\t\treturn {name: name, value: i};\n\t\t\t}),\n\t\t},\n\t});\n\tas_color = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {type: ConnectionPointTypes.indexOf(ConnectionPointType.VEC3)},\n\t});\n}\nconst ParamsConfig = new ParamGlParamsConfig();\n\nexport class ParamGlNode extends TypedGlNode<ParamGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'param';\n\t}\n\tprotected _allow_inputs_created_from_params: boolean = false;\n\tprivate _on_create_set_name_if_none_bound = this._on_create_set_name_if_none.bind(this);\n\tpublic readonly gl_connections_controller: GlConnectionsController = new GlConnectionsController(this);\n\t// private _update_signature_if_required_bound = this._update_signature_if_required.bind(this);\n\tinitialize_node() {\n\t\tthis.add_post_dirty_hook('_set_mat_to_recompile', this._set_mat_to_recompile.bind(this));\n\t\tthis.lifecycle.add_on_create_hook(this._on_create_set_name_if_none_bound);\n\t\tthis.gl_connections_controller.initialize_node();\n\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => []);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [ConnectionPointTypes[this.pv.type]]);\n\t\t// this.params.add_on_scene_load_hook('_update_signature_if_required', this._update_signature_if_required_bound);\n\t\t// this.params.set_post_create_params_hook(this._update_signature_if_required_bound);\n\t\t// this.add_post_dirty_hook('_update_if_type_changed', this._update_signature_if_required_bound);\n\t}\n\t// private _update_signature_if_required(dirty_trigger?: CoreGraphNode) {\n\t// \tif (!this.lifecycle.creation_completed || dirty_trigger == this.p.type) {\n\t// \t\tthis.update_output_type();\n\t// \t\tthis.remove_dirty_state();\n\t// \t\tthis.make_output_nodes_dirty();\n\t// \t}\n\t// }\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst definitions = [];\n\n\t\tconst gl_type = ConnectionPointTypes[this.pv.type];\n\t\tconst var_name = this.uniform_name();\n\n\t\tdefinitions.push(new UniformGLDefinition(this, gl_type, var_name));\n\t\tshaders_collection_controller.add_definitions(this, definitions);\n\t}\n\tset_param_configs() {\n\t\tconst gl_type = ConnectionPointTypes[this.pv.type];\n\t\tconst default_value = ConnectionPointInitValueMap[gl_type];\n\t\tlet param_type = ConnectionPointTypeToParamTypeMap[gl_type];\n\n\t\tthis._param_configs_controller = this._param_configs_controller || new ParamConfigsController();\n\t\tthis._param_configs_controller.reset();\n\n\t\tif (\n\t\t\tparam_type == ParamType.VECTOR3 &&\n\t\t\tthis.p.as_color.value &&\n\t\t\tlodash_isArray(default_value) &&\n\t\t\tdefault_value.length == 3\n\t\t) {\n\t\t\tthis._param_configs_controller.create_and_push(\n\t\t\t\tParamType.COLOR,\n\t\t\t\tthis.pv.name,\n\t\t\t\tdefault_value,\n\t\t\t\tthis.uniform_name()\n\t\t\t);\n\t\t} else {\n\t\t\tthis._param_configs_controller.create_and_push(\n\t\t\t\tparam_type,\n\t\t\t\tthis.pv.name,\n\t\t\t\tdefault_value,\n\t\t\t\tthis.uniform_name()\n\t\t\t);\n\t\t}\n\t}\n\tuniform_name() {\n\t\tconst output_connection_point = this.io.outputs.named_output_connection_points[0];\n\t\tconst var_name = this.gl_var_name(output_connection_point.name);\n\t\treturn var_name;\n\t}\n\n\t// update_output_type() {\n\t// \tconst set_dirty = false;\n\t// \tthis.io.outputs.set_named_output_connection_points(\n\t// \t\t[new TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointTypes[this.pv.type])],\n\t// \t\tset_dirty\n\t// \t);\n\t// }\n\t//\n\t//\n\t// HOOKS\n\t//\n\t//\n\tprivate _on_create_set_name_if_none() {\n\t\tif (this.pv.name == '') {\n\t\t\tthis.p.name.set(this.name);\n\t\t}\n\t}\n}\n","import {BaseGlMathFunctionGlNode} from './_BaseMathFunction';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nexport class RefractGlNode extends BaseGlMathFunctionGlNode {\n\tstatic type() {\n\t\treturn 'refract';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => ['I', 'N', 'eta'][index]);\n\t\tthis.gl_connections_controller.set_output_name_function((index: number) => 'refract');\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t}\n\n\tgl_method_name(): string {\n\t\treturn 'refract';\n\t}\n\n\tprotected _expected_input_types() {\n\t\tconst type = this.gl_connections_controller.first_input_connection_type() || ConnectionPointType.VEC3;\n\t\treturn [type, type, ConnectionPointType.FLOAT];\n\t}\n\n\tprotected _expected_output_types() {\n\t\tconst type = this._expected_input_types()[0];\n\t\treturn [type];\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\nimport Quaternion from './gl/quaternion.glsl';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nexport class QuatMultGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'quat_mult';\n\t}\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => ['quat0', 'quat1'][index]);\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => [\n\t\t\tConnectionPointType.VEC4,\n\t\t\tConnectionPointType.VEC4,\n\t\t]);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [ConnectionPointType.VEC4]);\n\t}\n\n\t// protected _gl_input_name(index: number) {\n\t// \treturn ['quat0', 'quat1'][index];\n\t// }\n\tgl_method_name(): string {\n\t\treturn 'quat_mult';\n\t}\n\n\t// protected _expected_input_types() {\n\t// \treturn [ConnectionPointType.VEC4, ConnectionPointType.VEC4];\n\t// }\n\t// protected _expected_output_types() {\n\t// \treturn [ConnectionPointType.VEC4];\n\t// }\n\tgl_function_definitions() {\n\t\treturn [new FunctionGLDefinition(this, ConnectionPointType.VEC4, Quaternion)];\n\t}\n}\n","import {BaseNodeGlMathFunctionArg2GlNode} from './_BaseMathFunction';\nimport Quaternion from './gl/quaternion.glsl';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nenum InputName {\n\tAXIS = 'axis',\n\tANGLE = 'angle',\n}\nconst InputNames: Array<InputName> = [InputName.AXIS, InputName.ANGLE];\ninterface IDefaultValues {\n\t[InputName.AXIS]: Number3;\n\t[InputName.ANGLE]: number;\n}\nconst DEFAULT_AXIS: Number3 = [0, 0, 1];\nconst DEFAULT_ANGLE: number = 0;\nconst DefaultValues: IDefaultValues = {\n\t[InputName.AXIS]: DEFAULT_AXIS,\n\t[InputName.ANGLE]: DEFAULT_ANGLE,\n};\n\nexport class QuatFromAxisAngleGlNode extends BaseNodeGlMathFunctionArg2GlNode {\n\tstatic type() {\n\t\treturn 'quat_from_axis_angle';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => InputNames[index]);\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => [\n\t\t\tConnectionPointType.VEC3,\n\t\t\tConnectionPointType.FLOAT,\n\t\t]);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [ConnectionPointType.VEC4]);\n\t}\n\n\t// protected _gl_input_name(index: number) {\n\t// \treturn InputNames[index];\n\t// }\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name as InputName];\n\t}\n\tgl_method_name(): string {\n\t\treturn 'quat_from_axis_angle';\n\t}\n\n\t// protected _expected_input_types() {\n\t// \treturn [ConnectionPointType.VEC3, ConnectionPointType.FLOAT];\n\t// }\n\t// protected expected_output_types() {\n\t// \treturn [ConnectionPointType.VEC4];\n\t// }\n\tgl_function_definitions() {\n\t\treturn [new FunctionGLDefinition(this, ConnectionPointType.VEC4, Quaternion)];\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\nimport Quaternion from './gl/quaternion.glsl';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nexport class QuatToAngleGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'quat_to_angle';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => ['quat'][index]);\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => [ConnectionPointType.VEC4]);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [ConnectionPointType.FLOAT]);\n\t}\n\n\t// protected _gl_input_name(index: number) {\n\t// \treturn ['quat'][index];\n\t// }\n\tgl_method_name(): string {\n\t\treturn 'quat_to_angle';\n\t}\n\n\t// protected _expected_input_types() {\n\t// \treturn [ConnectionPointType.VEC4];\n\t// }\n\t// protected _expected_output_types() {\n\t// \treturn [ConnectionPointType.FLOAT];\n\t// }\n\tgl_function_definitions() {\n\t\treturn [new FunctionGLDefinition(this, ConnectionPointType.FLOAT, Quaternion)];\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\nimport Quaternion from './gl/quaternion.glsl';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\n\nexport class QuatToAxisGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'quat_to_axis';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.gl_connections_controller.set_input_name_function((index: number) => ['quat'][index]);\n\t\tthis.gl_connections_controller.set_expected_input_types_function(() => [ConnectionPointType.VEC4]);\n\t\tthis.gl_connections_controller.set_expected_output_types_function(() => [ConnectionPointType.VEC3]);\n\t}\n\n\t// protected _gl_input_name(index: number) {\n\t// \treturn ['quat'][index];\n\t// }\n\tgl_method_name(): string {\n\t\treturn 'quat_to_axis';\n\t}\n\n\t// protected _expected_input_types() {\n\t// \treturn [ConnectionPointType.VEC4];\n\t// }\n\t// protected _expected_output_types() {\n\t// \treturn [ConnectionPointType.VEC3];\n\t// }\n\tgl_function_definitions() {\n\t\treturn [new FunctionGLDefinition(this, ConnectionPointType.VEC3, Quaternion)];\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {UniformGLDefinition} from './utils/GLDefinition';\nimport {RampParam} from '../../params/Ramp';\nimport {ParamConfigsController} from '../utils/code/controllers/ParamConfigsController';\nimport {ParamType} from '../../poly/ParamType';\n\nconst OUTPUT_NAME = 'val';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass RampGlParamsConfig extends NodeParamsConfig {\n\tname = ParamConfig.STRING('ramp');\n\tinput = ParamConfig.FLOAT(0);\n}\nconst ParamsConfig = new RampGlParamsConfig();\nexport class RampGlNode extends TypedGlNode<RampGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'ramp';\n\t}\n\n\tinitialize() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst gl_type = ConnectionPointType.FLOAT;\n\t\tconst texture_name = this._uniform_name();\n\t\tconst var_name = this.gl_var_name(OUTPUT_NAME);\n\n\t\tconst definition = new UniformGLDefinition(this, ConnectionPointType.SAMPLER_2D, texture_name);\n\t\tshaders_collection_controller.add_definitions(this, [definition]);\n\n\t\tconst input_val = this.variable_for_input(this.p.input.name);\n\t\tconst body_line = `${gl_type} ${var_name} = texture2D(${this._uniform_name()}, vec2(${input_val}, 0.0)).x`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n\tset_param_configs() {\n\t\tthis._param_configs_controller = this._param_configs_controller || new ParamConfigsController();\n\t\tthis._param_configs_controller.reset();\n\t\tthis._param_configs_controller.create_and_push(\n\t\t\tParamType.RAMP,\n\t\t\tthis.pv.name,\n\t\t\tRampParam.DEFAULT_VALUE,\n\t\t\tthis._uniform_name()\n\t\t);\n\t}\n\tprivate _uniform_name() {\n\t\treturn 'ramp_texture_' + this.gl_var_name(OUTPUT_NAME);\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../../src/core/ThreeToGl';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nconst OUTPUT_NAME = 'rand';\n\nclass RandomGlParamsConfig extends NodeParamsConfig {\n\tseed = ParamConfig.VECTOR2([1, 1]);\n}\nconst ParamsConfig = new RandomGlParamsConfig();\nexport class RandomGlNode extends TypedGlNode<RandomGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'random';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\t// const function_declaration_lines = []\n\n\t\t// http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\n\t\t// \t\tfunction_declaration_lines.push(`highp float rand2(vec2 co){\n\t\t// \thighp float a = 12.9898;\n\t\t// \thighp float b = 78.233;\n\t\t// \thighp float c = 43758.5453;\n\t\t// \thighp float dt= dot(co.xy ,vec2(a,b));\n\t\t// \thighp float sn= mod(dt,3.14);\n\t\t// \treturn fract(sin(sn) * c);\n\t\t// }`)\n\n\t\tconst input_name = this.io.inputs.named_input_connection_points[0].name;\n\t\tconst value = ThreeToGl.vector2(this.variable_for_input(input_name));\n\n\t\tconst float = this.gl_var_name(OUTPUT_NAME);\n\t\tconst body_line = `float ${float} = rand(${value})`;\n\t\t// this.set_function_declaration_lines(function_declaration_lines)\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../../src/core/ThreeToGl';\n\nimport Rgb2Hsv from './gl/rgb2hsv.glsl';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\n\nconst OUTPUT_NAME = 'hsv';\nclass RgbToHsvGlParamsConfig extends NodeParamsConfig {\n\trgb = ParamConfig.VECTOR3([1, 1, 1]);\n}\nconst ParamsConfig = new RgbToHsvGlParamsConfig();\nexport class RgbToHsvGlNode extends TypedGlNode<RgbToHsvGlParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'rgb_to_hsv';\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(OUTPUT_NAME, ConnectionPointType.VEC3),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst function_declaration_lines = [];\n\t\tconst body_lines = [];\n\n\t\tfunction_declaration_lines.push(new FunctionGLDefinition(this, ConnectionPointType.VEC3, Rgb2Hsv));\n\n\t\tconst rgb = ThreeToGl.vector3(this.variable_for_input('rgb'));\n\n\t\tconst hsv = this.gl_var_name('hsv');\n\t\tbody_lines.push(`vec3 ${hsv} = rgb2hsv(${rgb})`);\n\t\tshaders_collection_controller.add_definitions(this, function_declaration_lines);\n\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t}\n}\n","export default \"// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\\nvec3 rgb2hsv(vec3 c)\\n{\\n\\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n\\tvec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\\n\\tvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\\n\\n\\tfloat d = q.x - min(q.w, q.y);\\n\\tfloat e = 1.0e-10;\\n\\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\\n}\"","import {BaseAdaptiveGlNode} from './_BaseAdaptive';\nimport Quaternion from './gl/quaternion.glsl';\nimport {FunctionGLDefinition} from './utils/GLDefinition';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nenum Mode {\n\tAXIS = 0,\n\tQUAT = 1,\n}\nconst Modes: Array<Mode> = [Mode.AXIS, Mode.QUAT];\n\ntype StringByMode = {[key in Mode]: string};\nconst LabelByMode: StringByMode = {\n\t[Mode.AXIS]: 'from axis + angle',\n\t[Mode.QUAT]: 'from quaternion',\n};\ntype StringArrayByMode = {[key in Mode]: string[]};\nconst InputNamesByMode: StringArrayByMode = {\n\t[Mode.AXIS]: ['vector', 'axis', 'angle'],\n\t[Mode.QUAT]: ['vector', 'quat'],\n};\nconst MethodNameByMode: StringByMode = {\n\t[Mode.AXIS]: 'rotate_with_axis_angle',\n\t[Mode.QUAT]: 'rotate_with_quat',\n};\ntype ConnectionTypeArrayByMode = {[key in Mode]: ConnectionPointType[]};\nconst InputTypesByMode: ConnectionTypeArrayByMode = {\n\t[Mode.AXIS]: [ConnectionPointType.VEC3, ConnectionPointType.VEC3, ConnectionPointType.FLOAT],\n\t[Mode.QUAT]: [ConnectionPointType.VEC3, ConnectionPointType.VEC4],\n};\n\nconst DefaultValues: Dictionary<Number3> = {\n\tvector: [0, 0, 1],\n\taxis: [0, 1, 0],\n};\n\nimport {ParamConfig, NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\n\nclass RotateParamsConfig extends NodeParamsConfig {\n\tsignature = ParamConfig.INTEGER(Mode.AXIS, {\n\t\tmenu: {\n\t\t\tentries: Modes.map((mode, i) => {\n\t\t\t\tconst label = LabelByMode[mode];\n\t\t\t\treturn {name: label, value: i};\n\t\t\t}),\n\t\t},\n\t});\n}\n\nconst ParamsConfig = new RotateParamsConfig();\nexport class RotateGlNode extends BaseAdaptiveGlNode<RotateParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'rotate';\n\t}\n\n\t// _signature_name: string = 'AXIS';\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t}\n\n\tprotected _gl_input_name(index: number) {\n\t\tconst mode = Modes[this.pv.signature];\n\t\treturn InputNamesByMode[mode][index];\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name];\n\t}\n\tgl_method_name(): string {\n\t\tconst mode = Modes[this.pv.signature];\n\t\treturn MethodNameByMode[mode];\n\t}\n\n\tprotected _expected_input_types() {\n\t\tconst mode = Modes[this.pv.signature];\n\t\treturn InputTypesByMode[mode];\n\t}\n\tprotected _expected_output_types() {\n\t\treturn [ConnectionPointType.VEC3];\n\t}\n\tgl_function_definitions() {\n\t\tconst type = this._expected_output_types()[0];\n\t\treturn [new FunctionGLDefinition(this, type, Quaternion)];\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst var_type: ConnectionPointType = this.io.outputs.named_output_connection_points[0].type;\n\t\tconst args = this.io.inputs.named_input_connection_points.map((connection, i) => {\n\t\t\tconst name = connection.name;\n\t\t\treturn ThreeToGl.any(this.variable_for_input(name));\n\t\t});\n\t\tconst joined_args = args.join(', ');\n\n\t\tconst sum = this.gl_var_name(this.gl_connections_controller.output_name(0));\n\t\tconst body_line = `${var_type} ${sum} = ${this.gl_method_name()}(${joined_args})`;\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t\tshaders_collection_controller.add_definitions(this, this.gl_function_definitions());\n\t}\n}\n","import {BaseNodeGlMathFunctionArg1GlNode} from './_BaseMathFunction';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {ConnectionPointComponentsCountMap} from '../utils/connections/ConnectionPointType';\n\nconst ALL_COMPONENTS = ['x', 'y', 'z', 'w'];\n// const OUTPUT_NAME = 'round'\n\nexport class RoundGlNode extends BaseNodeGlMathFunctionArg1GlNode {\n\tstatic type() {\n\t\treturn 'round';\n\t}\n\n\t// initialize_node() {\n\t// \tsuper.initialize_node();\n\t// \tthis.set_named_outputs([new TypedConnectionFloat(v)]);\n\t// }\n\n\t// create_params() {\n\t// \tthis.add_param(ParamType.FLOAT, 'value', 1);\n\t// }\n\t// https://hub.jmonkeyengine.org/t/round-with-glsl/8186/6\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\t// const function_declaration_lines = []\n\n\t\t// \t\tfunction_declaration_lines.push(`highp float round(float num){\n\t\t// \treturn floor(num)-fract(num);\n\t\t// }`)\n\t\tconst input_connection = this.io.inputs.named_input_connection_points[0];\n\t\tconst value = ThreeToGl.vector2(this.variable_for_input(input_connection.name));\n\n\t\tconst output_connection = this.io.outputs.named_output_connection_points[0];\n\t\tconst var_name = this.gl_var_name(output_connection.name);\n\n\t\tconst body_lines: string[] = [];\n\t\tconst lines_count = ConnectionPointComponentsCountMap[output_connection.type];\n\t\tif (lines_count == 1) {\n\t\t\tbody_lines.push(`${output_connection.type} ${var_name} = ${this._simple_line(value)}`);\n\t\t} else {\n\t\t\tconst simple_lines: string[] = ALL_COMPONENTS.map((c) => {\n\t\t\t\treturn this._simple_line(`${value}.${c}`);\n\t\t\t});\n\t\t\tbody_lines.push(\n\t\t\t\t`${output_connection.type} ${var_name} = ${output_connection.type}(${simple_lines.join(',')})`\n\t\t\t);\n\t\t}\n\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t}\n\n\tprivate _simple_line(value: string) {\n\t\treturn `sign(${value})*floor(abs(${value})+0.5)`;\n\t}\n}\n","import {TypedGlNode} from './_Base';\nimport {FileCopNode} from '../cop/File';\n\nimport {TypedNamedConnectionPoint} from '../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {UniformGLDefinition} from './utils/GLDefinition';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nimport {ParamConfigsController} from '../utils/code/controllers/ParamConfigsController';\nimport {ParamType} from '../../poly/ParamType';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass TextureParamsConfig extends NodeParamsConfig {\n\tparam_name = ParamConfig.STRING('texture_map');\n\tdefault_value = ParamConfig.STRING(FileCopNode.DEFAULT_NODE_PATH.UV);\n\tuv = ParamConfig.VECTOR2([0, 0]);\n}\nconst ParamsConfig = new TextureParamsConfig();\nexport class TextureGlNode extends TypedGlNode<TextureParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'texture';\n\t}\n\tstatic readonly OUTPUT_NAME = 'rgba';\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint(TextureGlNode.OUTPUT_NAME, ConnectionPointType.VEC4),\n\t\t]);\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst uv = ThreeToGl.vector2(this.variable_for_input(this.p.uv.name));\n\n\t\tconst rgba = this.gl_var_name(TextureGlNode.OUTPUT_NAME);\n\t\tconst map = this._uniform_name();\n\t\tconst definition = new UniformGLDefinition(this, ConnectionPointType.SAMPLER_2D, map);\n\t\tconst body_line = `vec4 ${rgba} = texture2D(${map}, ${uv})`;\n\t\tshaders_collection_controller.add_definitions(this, [definition]);\n\t\tshaders_collection_controller.add_body_lines(this, [body_line]);\n\t}\n\n\tset_param_configs() {\n\t\tthis._param_configs_controller = this._param_configs_controller || new ParamConfigsController();\n\t\tthis._param_configs_controller.reset();\n\n\t\tthis._param_configs_controller.create_and_push(\n\t\t\tParamType.OPERATOR_PATH,\n\t\t\tthis.pv.param_name,\n\t\t\tthis.pv.default_value,\n\t\t\tthis._uniform_name()\n\t\t);\n\t}\n\tprivate _uniform_name() {\n\t\treturn this.gl_var_name(this.pv.param_name);\n\t}\n}\n","import {ParamlessTypedGlNode} from './_Base';\nimport {ThreeToGl} from '../../../core/ThreeToGl';\nimport {GlConnectionsController} from './utils/ConnectionsController';\n\nconst OUTPUT_NAME = 'value';\nenum InputName {\n\tCONDITION = 'condition',\n\tIF_TRUE = 'if_true',\n\tIF_FALSE = 'if_false',\n}\nconst InputNames: Array<InputName> = [InputName.CONDITION, InputName.IF_TRUE, InputName.IF_FALSE];\n\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\nimport {ShadersCollectionController} from './code/utils/ShadersCollectionController';\nexport class TwoWaySwitchGlNode extends ParamlessTypedGlNode {\n\tstatic type() {\n\t\treturn 'two_way_switch';\n\t}\n\n\tpublic readonly gl_connections_controller: GlConnectionsController = new GlConnectionsController(this);\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.gl_connections_controller.initialize_node();\n\n\t\tthis.gl_connections_controller.set_expected_input_types_function(this._expected_input_types.bind(this));\n\t\tthis.gl_connections_controller.set_expected_output_types_function(this._expected_output_types.bind(this));\n\t\tthis.gl_connections_controller.set_input_name_function(this._gl_input_name.bind(this));\n\t\tthis.gl_connections_controller.set_output_name_function(this._gl_output_name.bind(this));\n\t}\n\n\tprotected _gl_input_name(index: number) {\n\t\treturn InputNames[index];\n\t}\n\tprotected _gl_output_name() {\n\t\treturn OUTPUT_NAME;\n\t}\n\tprotected _expected_input_types(): ConnectionPointType[] {\n\t\tconst second_or_third_connection =\n\t\t\tthis.io.connections.input_connection(1) || this.io.connections.input_connection(2);\n\t\tconst type: ConnectionPointType = second_or_third_connection\n\t\t\t? this.gl_connections_controller.connection_type_from_connection(second_or_third_connection)\n\t\t\t: ConnectionPointType.FLOAT;\n\t\treturn [ConnectionPointType.BOOL, type, type];\n\t}\n\tprotected _expected_output_types() {\n\t\tconst type = this._expected_input_types()[1];\n\t\treturn [type];\n\t}\n\n\tset_lines(shaders_collection_controller: ShadersCollectionController) {\n\t\tconst body_lines: string[] = [];\n\n\t\tconst value = this.gl_var_name(OUTPUT_NAME);\n\t\tconst condition = ThreeToGl.bool(this.variable_for_input(InputName.CONDITION));\n\t\tconst if_true = ThreeToGl.any(this.variable_for_input(InputName.IF_TRUE));\n\t\tconst if_false = ThreeToGl.any(this.variable_for_input(InputName.IF_FALSE));\n\n\t\tconst gl_type = this._expected_output_types()[1];\n\t\tbody_lines.push(`${gl_type} ${value}`);\n\t\tbody_lines.push(`if(${condition}){`);\n\t\tbody_lines.push(`${value} = ${if_true}`);\n\t\tbody_lines.push(`} else {`);\n\t\tbody_lines.push(`${value} = ${if_false}`);\n\t\tbody_lines.push(`}`);\n\t\tshaders_collection_controller.add_body_lines(this, body_lines);\n\t}\n}\n","import Quaternion from './gl/quaternion.glsl';\nimport {MathFunctionArg3Factory} from './_Math_Arg3';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nconst DefaultValues: Dictionary<Number3> = {\n\tstart: [0, 0, 1],\n\tend: [1, 0, 0],\n\tup: [0, 1, 0],\n};\n\nexport class VectorAlignGlNode extends MathFunctionArg3Factory('vector_align', {\n\tin: ['start', 'end', 'up'],\n\tmethod: 'vector_align_with_up',\n\tfunctions: [Quaternion],\n}) {\n\tprotected _expected_input_types() {\n\t\tconst type = ConnectionPointType.VEC3;\n\t\treturn [type, type, type];\n\t}\n\tprotected _expected_output_types() {\n\t\treturn [ConnectionPointType.VEC4];\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name];\n\t}\n}\n","import Quaternion from './gl/quaternion.glsl';\nimport {MathFunctionArg2Factory} from './_Math_Arg2';\nimport {ConnectionPointType} from '../utils/connections/ConnectionPointType';\n\nconst DefaultValues: Dictionary<Number3> = {\n\tstart: [0, 0, 1],\n\tend: [1, 0, 0],\n};\n\nexport class VectorAngleGlNode extends MathFunctionArg2Factory('vector_angle', {\n\tin: ['start', 'end'],\n\tmethod: 'vector_angle',\n\tfunctions: [Quaternion],\n}) {\n\tprotected _expected_input_types() {\n\t\tconst type = ConnectionPointType.VEC3;\n\t\treturn [type, type];\n\t}\n\tprotected _expected_output_types() {\n\t\treturn [ConnectionPointType.FLOAT];\n\t}\n\tgl_input_default_value(name: string) {\n\t\treturn DefaultValues[name];\n\t}\n}\n","import {CATEGORY_MAT} from './Category';\n\nimport {MeshBasicMatNode} from '../../nodes/mat/MeshBasic';\nimport {MeshBasicBuilderMatNode} from '../../nodes/mat/MeshBasicBuilder';\nimport {MeshLambertMatNode} from '../../nodes/mat/MeshLambert';\nimport {MeshLambertBuilderMatNode} from '../../nodes/mat/MeshLambertBuilder';\nimport {MeshStandardMatNode} from '../../nodes/mat/MeshStandard';\nimport {MeshStandardBuilderMatNode} from '../../nodes/mat/MeshStandardBuilder';\nimport {PointsMatNode} from '../../nodes/mat/Points';\nimport {PointsBuilderMatNode} from '../../nodes/mat/PointsBuilder';\n\nexport interface MatNodeChildrenMap {\n\tmesh_basic: MeshBasicMatNode;\n\tmesh_basic_builder: MeshBasicBuilderMatNode;\n\tmesh_lambert: MeshLambertMatNode;\n\tmesh_lambert_builder: MeshLambertBuilderMatNode;\n\tmesh_standard: MeshStandardMatNode;\n\tmesh_standard_builder: MeshStandardBuilderMatNode;\n\tpoints: PointsMatNode;\n\tpoints_builder: PointsBuilderMatNode;\n}\n\nimport {Poly} from '../../Poly';\nexport class MatRegister {\n\tstatic run(poly: Poly) {\n\t\tpoly.register_node(MeshBasicMatNode, CATEGORY_MAT.MESH);\n\t\tpoly.register_node(MeshBasicBuilderMatNode, CATEGORY_MAT.ADVANCED);\n\t\tpoly.register_node(MeshLambertMatNode, CATEGORY_MAT.MESH);\n\t\tpoly.register_node(MeshLambertBuilderMatNode, CATEGORY_MAT.ADVANCED);\n\t\tpoly.register_node(MeshStandardMatNode, CATEGORY_MAT.MESH);\n\t\tpoly.register_node(MeshStandardBuilderMatNode, CATEGORY_MAT.ADVANCED);\n\t\tpoly.register_node(PointsMatNode, CATEGORY_MAT.POINTS);\n\t\tpoly.register_node(PointsBuilderMatNode, CATEGORY_MAT.ADVANCED);\n\t}\n}\n","import {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {FrontSide} from 'three/src/constants';\nimport {TypedMatNode} from './_Base';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ColorsController, ColorParamConfig} from './utils/ColorsController';\nimport {SideController, SideParamConfig} from './utils/SideController';\nimport {SkinningController, SkinningParamConfig} from './utils/SkinningController';\nimport {TextureMapController, TextureMapParamConfig} from './utils/TextureMapController';\nimport {TextureAlphaMapController, TextureAlphaMapParamConfig} from './utils/TextureAlphaMapController';\nclass MeshBasicMatParamsConfig extends TextureAlphaMapParamConfig(\n\tTextureMapParamConfig(SkinningParamConfig(SideParamConfig(ColorParamConfig(NodeParamsConfig))))\n) {}\nconst ParamsConfig = new MeshBasicMatParamsConfig();\n\nexport class MeshBasicMatNode extends TypedMatNode<MeshBasicMaterial, MeshBasicMatParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'mesh_basic';\n\t}\n\n\tcreate_material() {\n\t\treturn new MeshBasicMaterial({\n\t\t\tvertexColors: false,\n\t\t\tside: FrontSide,\n\t\t\tcolor: 0xffffff,\n\t\t\topacity: 1,\n\t\t});\n\t}\n\treadonly texture_map_controller: TextureMapController = new TextureMapController(this, {direct_params: true});\n\treadonly texture_alpha_map_controller: TextureAlphaMapController = new TextureAlphaMapController(this, {\n\t\tdirect_params: true,\n\t});\n\tinitialize_node() {\n\t\tthis.params.set_post_create_params_hook(() => {\n\t\t\tthis.texture_map_controller.initialize_node();\n\t\t\tthis.texture_alpha_map_controller.initialize_node();\n\t\t});\n\t}\n\tasync cook() {\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\tSkinningController.update(this);\n\t\tthis.texture_map_controller.update();\n\t\tthis.texture_alpha_map_controller.update();\n\n\t\tthis.set_material(this.material);\n\t}\n}\n","import {Material} from 'three/src/materials/Material';\nimport {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\n\nexport class MaterialContainer extends TypedContainer<ContainableMap['MATERIAL']> {\n\tset_content(content: ContainableMap['MATERIAL']) {\n\t\tsuper.set_content(content);\n\t}\n\tset_material(material: Material) {\n\t\tif (this._content != null) {\n\t\t\tthis._content.dispose();\n\t\t}\n\t\tthis.set_content(material);\n\t}\n\thas_material() {\n\t\treturn this.has_content();\n\t}\n\tmaterial() {\n\t\treturn this.content();\n\t}\n}\n","import {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ColorParamConfig, ColorsController} from './utils/UniformsColorsController';\nimport {SideParamConfig, SideController} from './utils/SideController';\nimport {SkinningParamConfig, SkinningController} from './utils/SkinningController';\nimport {TextureMapParamConfig, TextureMapController} from './utils/TextureMapController';\nimport {TextureAlphaMapParamConfig, TextureAlphaMapController} from './utils/TextureAlphaMapController';\nimport {ShaderAssemblerBasic} from '../gl/code/assemblers/materials/Basic';\nimport {TypedBuilderMatNode} from './_BaseBuilder';\nimport {GlAssemblerController} from '../gl/code/Controller';\nclass MeshBasicMatParamsConfig extends TextureAlphaMapParamConfig(\n\tTextureMapParamConfig(SkinningParamConfig(SideParamConfig(ColorParamConfig(NodeParamsConfig))))\n) {}\nconst ParamsConfig = new MeshBasicMatParamsConfig();\n\nexport class MeshBasicBuilderMatNode extends TypedBuilderMatNode<ShaderAssemblerBasic, MeshBasicMatParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'mesh_basic_builder';\n\t}\n\n\treadonly texture_map_controller: TextureMapController = new TextureMapController(this, {uniforms: true});\n\treadonly texture_alpha_map_controller: TextureAlphaMapController = new TextureAlphaMapController(this, {\n\t\tuniforms: true,\n\t});\n\tinitialize_node() {\n\t\tthis.params.set_post_create_params_hook(() => {\n\t\t\tthis.texture_map_controller.initialize_node();\n\t\t\tthis.texture_alpha_map_controller.initialize_node();\n\t\t});\n\t}\n\n\tprotected _create_assembler_controller() {\n\t\treturn new GlAssemblerController<ShaderAssemblerBasic>(this, ShaderAssemblerBasic);\n\t}\n\n\tasync cook() {\n\t\tawait this.compile_if_required();\n\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\tSkinningController.update(this);\n\t\tawait TextureMapController.update(this);\n\t\tawait TextureAlphaMapController.update(this);\n\n\t\tthis.set_material(this.material);\n\t}\n}\n","// import {VertexColors} from 'three/src/constants';\nimport {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\n// import {FrontSide} from 'three/src/constants';\nimport {ShaderAssemblerMesh} from './_BaseMesh';\n\nexport class ShaderAssemblerBasic extends ShaderAssemblerMesh {\n\tget _template_shader() {\n\t\tconst template = ShaderLib.basic;\n\t\treturn {\n\t\t\tvertexShader: template.vertexShader,\n\t\t\tfragmentShader: template.fragmentShader,\n\t\t\tuniforms: template.uniforms,\n\t\t};\n\t}\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\n\t\tconst material = new ShaderMaterial({\n\t\t\t// vertexColors: VertexColors,\n\t\t\t// side: FrontSide,\n\t\t\t// transparent: true,\n\t\t\t// fog: true,\n\t\t\tlights: false,\n\t\t\t// depthTest: true,\n\t\t\t// alphaTest: 0.5,\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t\tthis._add_custom_materials(material);\n\t\treturn material;\n\t}\n}\n","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\nimport {RGBADepthPacking} from 'three/src/constants';\nimport {BasicDepthPacking} from 'three/src/constants';\n\nimport {ShaderAssemblerMaterial} from './_BaseMaterial';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\n\nconst INSERT_BODY_AFTER_MAP: Map<ShaderName, string> = new Map([\n\t[ShaderName.VERTEX, '#include <begin_vertex>'],\n\t[ShaderName.FRAGMENT, 'vec4 diffuseColor = vec4( 1.0 );'],\n]);\n\nexport class ShaderAssemblerCustomMeshDistance extends ShaderAssemblerMaterial {\n\t// _color_declaration() { return 'vec4 diffuseColor' }\n\t// _template_shader(){ return ShaderLib.standard }\n\tget _template_shader() {\n\t\tconst template = ShaderLib.distanceRGBA;\n\t\treturn {\n\t\t\tvertexShader: template.vertexShader, //TemplateVertex,\n\t\t\tfragmentShader: template.fragmentShader, //TemplateFragment,\n\t\t\tuniforms: template.uniforms,\n\t\t};\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn INSERT_BODY_AFTER_MAP.get(shader_name);\n\t}\n\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\t\treturn new ShaderMaterial({\n\t\t\t// vertexColors: VertexColors,\n\t\t\t// side: FrontSide,\n\t\t\t// transparent: true,\n\t\t\t// fog: true,\n\t\t\t// lights: true,\n\t\t\tdefines: {\n\t\t\t\tDEPTH_PACKING: [RGBADepthPacking, BasicDepthPacking][0],\n\t\t\t},\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t}\n}\n","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\nimport {RGBADepthPacking} from 'three/src/constants';\nimport {BasicDepthPacking} from 'three/src/constants';\n\nimport {ShaderAssemblerMaterial} from './_BaseMaterial';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\n\nconst INSERT_BODY_AFTER_MAP: Map<ShaderName, string> = new Map([\n\t[ShaderName.VERTEX, '#include <begin_vertex>'],\n\t[ShaderName.FRAGMENT, 'vec4 diffuseColor = vec4( 1.0 );'],\n]);\n\nexport class ShaderAssemblerCustomMeshDepth extends ShaderAssemblerMaterial {\n\t// _color_declaration() { return 'vec4 diffuseColor' }\n\t// _template_shader(){ return ShaderLib.standard }\n\tget _template_shader() {\n\t\tconst template = ShaderLib.depth;\n\t\treturn {\n\t\t\tvertexShader: template.vertexShader, //TemplateVertex,\n\t\t\tfragmentShader: template.fragmentShader, //TemplateFragment,\n\t\t\tuniforms: template.uniforms,\n\t\t};\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn INSERT_BODY_AFTER_MAP.get(shader_name);\n\t}\n\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\t\treturn new ShaderMaterial({\n\t\t\t// vertexColors: VertexColors,\n\t\t\t// side: FrontSide,\n\t\t\t// transparent: true,\n\t\t\t// fog: true,\n\t\t\t// lights: true,\n\t\t\tdefines: {\n\t\t\t\tDEPTH_PACKING: [RGBADepthPacking, BasicDepthPacking][0],\n\t\t\t},\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t}\n}\n","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\n// import {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\n// import {RGBADepthPacking} from 'three/src/constants';\n// import {BasicDepthPacking} from 'three/src/constants';\n\nimport {ShaderAssemblerMaterial} from './_BaseMaterial';\n\nimport TemplateVertex from '../../templates/CustomMeshDepthDOF.vert.glsl';\nimport TemplateFragment from '../../templates/CustomMeshDepthDOF.frag.glsl';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\n\nconst INSERT_DEFINE_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT DEFINES']]);\nconst INSERT_BODY_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT BODY']]);\n// fragment: 'vec4 diffuseColor = vec4( 1.0 );' // do not change? unless there is a texture lookup\n\nexport class ShaderAssemblerCustomMeshDepthDOF extends ShaderAssemblerMaterial {\n\t// _color_declaration() { return 'vec4 diffuseColor' }\n\t// _template_shader(){ return ShaderLib.standard }\n\tget _template_shader() {\n\t\treturn {\n\t\t\tvertexShader: TemplateVertex,\n\t\t\tfragmentShader: TemplateFragment,\n\t\t\tuniforms: {\n\t\t\t\tmNear: {value: 0},\n\t\t\t\tmFar: {value: 10},\n\t\t\t},\n\t\t};\n\t}\n\tprotected insert_define_after(shader_name: ShaderName) {\n\t\treturn INSERT_DEFINE_AFTER_MAP.get(shader_name);\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn INSERT_BODY_AFTER_MAP.get(shader_name);\n\t}\n\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\t\treturn new ShaderMaterial({\n\t\t\t// defines: {\n\t\t\t// \tDEPTH_PACKING: [RGBADepthPacking, BasicDepthPacking][0]\n\t\t\t// },\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t}\n}\n","export default \"#include <common>\\n\\nvarying float vViewZDepth;\\n\\n// INSERT DEFINES\\n\\n\\n\\nvoid main() {\\n\\n\\t// INSERT BODY\\n\\n\\n\\t#include <project_vertex>\\n\\n\\tvViewZDepth = - mvPosition.z;\\n}\"","import {MeshLambertMaterial} from 'three/src/materials/MeshLambertMaterial';\nimport {FrontSide} from 'three/src/constants';\nimport {TypedMatNode} from './_Base';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ColorsController, ColorParamConfig} from './utils/ColorsController';\nimport {SideController, SideParamConfig} from './utils/SideController';\nimport {SkinningController, SkinningParamConfig} from './utils/SkinningController';\nimport {TextureMapController, TextureMapParamConfig} from './utils/TextureMapController';\nimport {TextureAlphaMapController, TextureAlphaMapParamConfig} from './utils/TextureAlphaMapController';\nclass MeshLambertMatParamsConfig extends TextureAlphaMapParamConfig(\n\tTextureMapParamConfig(SkinningParamConfig(SideParamConfig(ColorParamConfig(NodeParamsConfig))))\n) {}\nconst ParamsConfig = new MeshLambertMatParamsConfig();\n\nexport class MeshLambertMatNode extends TypedMatNode<MeshLambertMaterial, MeshLambertMatParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'mesh_lambert';\n\t}\n\n\tcreate_material() {\n\t\treturn new MeshLambertMaterial({\n\t\t\tvertexColors: false,\n\t\t\tside: FrontSide,\n\t\t\tcolor: 0xffffff,\n\t\t\topacity: 1,\n\t\t});\n\t}\n\treadonly texture_map_controller: TextureMapController = new TextureMapController(this, {direct_params: true});\n\treadonly texture_alpha_map_controller: TextureAlphaMapController = new TextureAlphaMapController(this, {\n\t\tdirect_params: true,\n\t});\n\tinitialize_node() {\n\t\tthis.params.set_post_create_params_hook(() => {\n\t\t\tthis.texture_map_controller.initialize_node();\n\t\t\tthis.texture_alpha_map_controller.initialize_node();\n\t\t});\n\t}\n\tasync cook() {\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\tSkinningController.update(this);\n\t\tthis.texture_map_controller.update();\n\t\tthis.texture_alpha_map_controller.update();\n\n\t\tthis.set_material(this.material);\n\t}\n}\n","import {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {ColorParamConfig, ColorsController} from './utils/UniformsColorsController';\nimport {SideParamConfig, SideController} from './utils/SideController';\nimport {SkinningParamConfig, SkinningController} from './utils/SkinningController';\nimport {TextureMapParamConfig, TextureMapController} from './utils/TextureMapController';\nimport {TextureAlphaMapParamConfig, TextureAlphaMapController} from './utils/TextureAlphaMapController';\nimport {TypedBuilderMatNode} from './_BaseBuilder';\nimport {GlAssemblerController} from '../gl/code/Controller';\nimport {ShaderAssemblerLambert} from '../gl/code/assemblers/materials/Lambert';\n\nclass MeshLambertMatParamsConfig extends TextureAlphaMapParamConfig(\n\tTextureMapParamConfig(SkinningParamConfig(SideParamConfig(ColorParamConfig(NodeParamsConfig))))\n) {}\nconst ParamsConfig = new MeshLambertMatParamsConfig();\n\nexport class MeshLambertBuilderMatNode extends TypedBuilderMatNode<ShaderAssemblerLambert, MeshLambertMatParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'mesh_lambert_builder';\n\t}\n\n\treadonly texture_map_controller: TextureMapController = new TextureMapController(this, {uniforms: true});\n\treadonly texture_alpha_map_controller: TextureAlphaMapController = new TextureAlphaMapController(this, {\n\t\tuniforms: true,\n\t});\n\tinitialize_node() {\n\t\tthis.params.set_post_create_params_hook(() => {\n\t\t\tthis.texture_map_controller.initialize_node();\n\t\t\tthis.texture_alpha_map_controller.initialize_node();\n\t\t});\n\t}\n\n\tprotected _create_assembler_controller() {\n\t\treturn new GlAssemblerController<ShaderAssemblerLambert>(this, ShaderAssemblerLambert);\n\t}\n\n\tasync cook() {\n\t\tawait this.compile_if_required();\n\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\tSkinningController.update(this);\n\t\tawait TextureMapController.update(this);\n\t\tawait TextureAlphaMapController.update(this);\n\n\t\tthis.set_material(this.material);\n\t}\n}\n","// import {VertexColors} from 'three/src/constants';\nimport {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\n// import {FrontSide} from 'three/src/constants';\nimport {ShaderAssemblerMesh} from './_BaseMesh';\n\nexport class ShaderAssemblerLambert extends ShaderAssemblerMesh {\n\tget _template_shader() {\n\t\tconst template = ShaderLib.lambert;\n\t\treturn {\n\t\t\tvertexShader: template.vertexShader,\n\t\t\tfragmentShader: template.fragmentShader,\n\t\t\tuniforms: template.uniforms,\n\t\t};\n\t}\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\t\tconst material = new ShaderMaterial({\n\t\t\tlights: true,\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t\tthis._add_custom_materials(material);\n\t\treturn material;\n\t}\n}\n","import {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ColorParamConfig, ColorsController} from './utils/UniformsColorsController';\nimport {SideParamConfig, SideController} from './utils/SideController';\nimport {SkinningParamConfig, SkinningController} from './utils/SkinningController';\nimport {TextureMapParamConfig, TextureMapController} from './utils/TextureMapController';\nimport {TextureAlphaMapParamConfig, TextureAlphaMapController} from './utils/TextureAlphaMapController';\nimport {TextureEnvMapController, TextureEnvMapParamConfig} from './utils/TextureEnvMapController';\nimport {TypedBuilderMatNode} from './_BaseBuilder';\nimport {GlAssemblerController} from '../gl/code/Controller';\nimport {ShaderAssemblerStandard} from '../gl/code/assemblers/materials/Standard';\nimport {BaseParamType} from '../../params/_Base';\nimport {BaseNodeType} from '../_Base';\n\nimport {SHADER_DEFAULTS} from './MeshStandard';\n\nclass MeshStandardMatParamsConfig extends TextureEnvMapParamConfig(\n\tTextureAlphaMapParamConfig(\n\t\tTextureMapParamConfig(SkinningParamConfig(SideParamConfig(ColorParamConfig(NodeParamsConfig))))\n\t)\n) {\n\tmetalness = ParamConfig.FLOAT(SHADER_DEFAULTS.metalness, {\n\t\tcook: false,\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) =>\n\t\t\tMeshStandardBuilderMatNode._update_metalness(node as MeshStandardBuilderMatNode),\n\t});\n\troughness = ParamConfig.FLOAT(SHADER_DEFAULTS.roughness, {\n\t\tcook: false,\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) =>\n\t\t\tMeshStandardBuilderMatNode._update_roughness(node as MeshStandardBuilderMatNode),\n\t});\n}\nconst ParamsConfig = new MeshStandardMatParamsConfig();\n\nexport class MeshStandardBuilderMatNode extends TypedBuilderMatNode<\n\tShaderAssemblerStandard,\n\tMeshStandardMatParamsConfig\n> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'mesh_standard_builder';\n\t}\n\n\treadonly texture_map_controller: TextureMapController = new TextureMapController(this, {uniforms: true});\n\treadonly texture_alpha_map_controller: TextureAlphaMapController = new TextureAlphaMapController(this, {\n\t\tuniforms: true,\n\t});\n\treadonly texture_env_map_controller: TextureEnvMapController = new TextureEnvMapController(this, {\n\t\tuniforms: true,\n\t\tdirect_params: true,\n\t\tdefine: false,\n\t});\n\tinitialize_node() {\n\t\tthis.params.set_post_create_params_hook(() => {\n\t\t\tthis.texture_map_controller.initialize_node();\n\t\t\tthis.texture_alpha_map_controller.initialize_node();\n\t\t\tthis.texture_env_map_controller.initialize_node();\n\t\t});\n\t}\n\n\tprotected _create_assembler_controller() {\n\t\treturn new GlAssemblerController<ShaderAssemblerStandard>(this, ShaderAssemblerStandard);\n\t}\n\n\tasync cook() {\n\t\tawait this.compile_if_required();\n\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\tSkinningController.update(this);\n\t\tawait TextureMapController.update(this);\n\t\tawait TextureAlphaMapController.update(this);\n\t\tawait TextureEnvMapController.update(this);\n\n\t\tif (this._material) {\n\t\t\tthis._material.uniforms.envMapIntensity.value = this.pv.env_map_intensity;\n\t\t\tMeshStandardBuilderMatNode._update_metalness(this);\n\t\t\tMeshStandardBuilderMatNode._update_roughness(this);\n\t\t}\n\n\t\tthis.set_material(this.material);\n\t}\n\tstatic _update_metalness(node: MeshStandardBuilderMatNode) {\n\t\tnode.material.uniforms.metalness.value = node.pv.metalness;\n\t}\n\tstatic _update_roughness(node: MeshStandardBuilderMatNode) {\n\t\tnode.material.uniforms.roughness.value = node.pv.roughness;\n\t}\n}\n","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\n\nimport {ShaderAssemblerMesh} from './_BaseMesh';\nimport {BaseGlShaderAssembler} from '../_Base';\nimport {ShaderConfig} from '../../configs/ShaderConfig';\nimport {VariableConfig} from '../../configs/VariableConfig';\n\nimport metalnessmap_fragment from '../../../gl/ShaderLib/ShaderChunk/metalnessmap_fragment.glsl';\nimport roughnessmap_fragment from '../../../gl/ShaderLib/ShaderChunk/roughnessmap_fragment.glsl';\nimport {OutputGlNode} from '../../../Output';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\nimport {ParamType} from '../../../../../poly/ParamType';\n\nexport class ShaderAssemblerStandard extends ShaderAssemblerMesh {\n\tis_physical() {\n\t\treturn false;\n\t}\n\n\tget _template_shader() {\n\t\tconst template = this.is_physical() ? ShaderLib.physical : ShaderLib.standard;\n\t\treturn {\n\t\t\tvertexShader: template.vertexShader, //TemplateVertex,\n\t\t\tfragmentShader: template.fragmentShader, //TemplateFragment,\n\t\t\tuniforms: template.uniforms,\n\t\t};\n\t}\n\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\n\t\tconst options = {\n\t\t\tlights: true,\n\t\t\textensions: {\n\t\t\t\tderivatives: true,\n\t\t\t},\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t};\n\t\t// if(this.constructor.is_physical()){\n\t\t// \toptions['defines'] = {\n\t\t// \t\tPHYSICAL: 1\n\t\t// \t}\n\t\t// }\n\n\t\tconst material = new ShaderMaterial(options);\n\n\t\t// replace some shader chunks\n\t\tmaterial.onBeforeCompile = function(shader) {\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'#include <metalnessmap_fragment>',\n\t\t\t\tmetalnessmap_fragment\n\t\t\t);\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace(\n\t\t\t\t'#include <roughnessmap_fragment>',\n\t\t\t\troughnessmap_fragment\n\t\t\t);\n\t\t};\n\t\tthis._add_custom_materials(material);\n\t\treturn material;\n\t}\n\n\t// static convert_material_to_gltf_supported(material: ShaderMaterial): Material {\n\t// \tconst gltf_constructor = this.is_physical() ? MeshPhysicalMaterial : MeshStandardMaterial;\n\t// \tconst options = {};\n\t// \tthis._match_uniform('color', options, material, 'diffuse');\n\t// \tthis._match_uniform('map', options, material);\n\t// \tthis._match_uniform('envMap', options, material);\n\t// \tthis._match_uniform('envMapIntensity', options, material);\n\t// \tthis._match_uniform('metalness', options, material);\n\t// \tthis._match_uniform('roughness', options, material);\n\t// \tconst gltf_material = new gltf_constructor(options);\n\t// \treturn gltf_material;\n\t// }\n\n\tadd_output_params(output_child: OutputGlNode) {\n\t\tBaseGlShaderAssembler.add_output_params(output_child);\n\t\t// those defaults should be 1. If they were 0, using the params\n\t\t// at the material level would appear not to work\n\t\toutput_child.add_param(ParamType.FLOAT, 'metalness', 1);\n\t\toutput_child.add_param(ParamType.FLOAT, 'roughness', 1);\n\t}\n\t// create_globals_node_output_connections(){\n\t// \treturn BaseShaderAssembler.create_globals_node_output_connections().concat([\n\t// \t\tnew Connection.Float('metalness'),\n\t// \t\tnew Connection.Float('roughness'),\n\t// \t])\n\t// }\n\tcreate_shader_configs() {\n\t\treturn [\n\t\t\tnew ShaderConfig(ShaderName.VERTEX, ['position', 'normal', 'uv'], []),\n\t\t\tnew ShaderConfig(ShaderName.FRAGMENT, ['color', 'alpha', 'metalness', 'roughness'], [ShaderName.VERTEX]),\n\t\t];\n\t}\n\tcreate_variable_configs() {\n\t\treturn BaseGlShaderAssembler.create_variable_configs().concat([\n\t\t\tnew VariableConfig('metalness', {\n\t\t\t\tdefault: '1.0',\n\t\t\t\tprefix: 'float POLY_metalness = ',\n\t\t\t}),\n\t\t\tnew VariableConfig('roughness', {\n\t\t\t\tdefault: '1.0',\n\t\t\t\tprefix: 'float POLY_roughness = ',\n\t\t\t}),\n\t\t]);\n\t}\n}\n","export default \"float metalnessFactor = metalness * POLY_metalness;\\n\\n#ifdef USE_METALNESSMAP\\n\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\n\\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\\n\\tmetalnessFactor *= texelMetalness.b;\\n\\n#endif\\n\"","export default \"float roughnessFactor = roughness * POLY_roughness;\\n\\n#ifdef USE_ROUGHNESSMAP\\n\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\n\\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\\n\\troughnessFactor *= texelRoughness.g;\\n\\n#endif\\n\"","import {PointsMaterial} from 'three/src/materials/PointsMaterial';\nimport {FrontSide} from 'three/src/constants';\nimport {TypedMatNode} from './_Base';\n\nimport {ColorsController, ColorParamConfig} from './utils/ColorsController';\nimport {SideController, SideParamConfig} from './utils/SideController';\n// import {TextureMapController, TextureMapParamConfig} from './utils/TextureMapController';\n// import {TextureAlphaMapController, TextureAlphaMapParamConfig} from './utils/TextureAlphaMapController';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nexport function PointsParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tsize = ParamConfig.FLOAT(1);\n\t\tsize_attenuation = ParamConfig.BOOLEAN(1);\n\t};\n}\n\nclass PointsMatParamsConfig extends SideParamConfig(ColorParamConfig(PointsParamConfig(NodeParamsConfig))) {}\nconst ParamsConfig = new PointsMatParamsConfig();\n\nexport class PointsMatNode extends TypedMatNode<PointsMaterial, PointsMatParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'points';\n\t}\n\n\tcreate_material() {\n\t\treturn new PointsMaterial({\n\t\t\tvertexColors: false,\n\t\t\tside: FrontSide,\n\t\t\tcolor: 0xffffff,\n\t\t\topacity: 1,\n\t\t});\n\t}\n\n\tasync cook() {\n\t\tColorsController.update(this);\n\t\tSideController.update(this);\n\t\t// await TextureMapController.update(this);\n\t\t// await TextureAlphaMapController.update(this);\n\n\t\tthis.material.size = this.pv.size;\n\t\tthis.material.sizeAttenuation = this.pv.size_attenuation;\n\n\t\tthis.set_material(this.material);\n\t}\n}\n","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\n\nimport {ShaderAssemblerMaterial, CustomAssemblerMap, CustomMaterialName} from './_BaseMaterial';\n\nimport {ShaderConfig} from '../../configs/ShaderConfig';\nimport {VariableConfig} from '../../configs/VariableConfig';\n\nimport {BaseGlShaderAssembler} from '../_Base';\nimport {ShaderAssemblerCustomPointsDepth} from './CustomPointsDepth';\nimport {ShaderAssemblerCustomPointsDistance} from './CustomPointsDistance';\nimport {ShaderAssemblerCustomPointsDepthDOF} from './CustomPointsDepthDOF';\nimport {OutputGlNode} from '../../../Output';\nimport {ParamType} from '../../../../../poly/ParamType';\nimport {TypedNamedConnectionPoint} from '../../../../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../../../../utils/connections/ConnectionPointType';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\n\nconst LINES_TO_REMOVE_MAP: Map<ShaderName, string[]> = new Map([\n\t[ShaderName.VERTEX, ['#include <begin_vertex>', 'gl_PointSize = size;']],\n\t[ShaderName.FRAGMENT, []],\n]);\n\nconst CUSTOM_ASSEMBLER_MAP: CustomAssemblerMap = new Map();\nCUSTOM_ASSEMBLER_MAP.set(CustomMaterialName.DISTANCE, ShaderAssemblerCustomPointsDistance);\nCUSTOM_ASSEMBLER_MAP.set(CustomMaterialName.DEPTH, ShaderAssemblerCustomPointsDepth);\nCUSTOM_ASSEMBLER_MAP.set(CustomMaterialName.DEPTH_DOF, ShaderAssemblerCustomPointsDepthDOF);\n\nexport class ShaderAssemblerPoints extends ShaderAssemblerMaterial {\n\t// _color_declaration() { return 'diffuseColor' }\n\tcustom_assembler_class_by_custom_name(): CustomAssemblerMap {\n\t\treturn CUSTOM_ASSEMBLER_MAP;\n\t}\n\n\tget _template_shader() {\n\t\tconst template = ShaderLib.points;\n\t\treturn {\n\t\t\tvertexShader: template.vertexShader, //TemplateVertex,\n\t\t\tfragmentShader: template.fragmentShader, //TemplateFragment,\n\t\t\tuniforms: template.uniforms,\n\t\t};\n\t}\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\n\t\t// const uniforms = UniformsUtils.clone( template_shader.uniforms )\n\t\t// uniforms.size.value = 10\n\n\t\tconst material = new ShaderMaterial({\n\t\t\ttransparent: true,\n\t\t\tfog: true,\n\n\t\t\t// size: 10,\n\t\t\t// //blending: AdditiveBlending\n\t\t\t// depthTest: true,\n\t\t\t// depthwrite: true,\n\t\t\t// alphaTest: 0.5,\n\t\t\tdefines: {\n\t\t\t\t// ALPHATEST: 0.5,\n\t\t\t\tUSE_SIZEATTENUATION: 1,\n\t\t\t},\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t\tthis._add_custom_materials(material);\n\t\treturn material;\n\t}\n\t// protected insert_body_after(shader_name){\n\t// \treturn {\n\t// \t\tvertex: 'gl_PointSize = size;',\n\t// \t\tfragment: 'vec4 diffuseColor = vec4( diffuse, opacity );'\n\t// \t}[shader_name]\n\t// }\n\t// those shadow shaders should ideally be overriden\n\t// to properly take into account point size\n\n\tadd_output_params(output_child: OutputGlNode) {\n\t\tBaseGlShaderAssembler.add_output_params(output_child);\n\t\toutput_child.add_param(ParamType.FLOAT, 'gl_PointSize', 1);\n\t}\n\tcreate_globals_node_output_connections() {\n\t\treturn BaseGlShaderAssembler.create_globals_node_output_connections().concat([\n\t\t\tnew TypedNamedConnectionPoint('gl_PointCoord', ConnectionPointType.VEC2),\n\t\t]);\n\t}\n\n\t// add_globals_params(globals_node){\n\t// \tBaseShaderAssembler.add_globals_params(globals_node)\n\t// \tglobals_node.set_named_outputs([\n\t// \t\tnew Connection.Vec3('position'),\n\t// \t\tnew Connection.Vec3('color'),\n\t// \t\tnew Connection.Vec3('normal'),\n\t// \t\tnew Connection.Vec4('gl_FragCoord'),\n\t// \t\tnew Connection.Vec2('gl_PointCoord'),\n\t// \t\t// new TypedConnectionVec2('uv'),\n\t// \t\tnew Connection.Float('frame')\n\t// \t])\n\t// }\n\tcreate_shader_configs() {\n\t\treturn [\n\t\t\tnew ShaderConfig(ShaderName.VERTEX, ['position', 'normal', 'uv', 'gl_PointSize'], []),\n\t\t\tnew ShaderConfig(ShaderName.FRAGMENT, ['color', 'alpha'], [ShaderName.VERTEX]),\n\t\t];\n\t}\n\tcreate_variable_configs() {\n\t\treturn BaseGlShaderAssembler.create_variable_configs().concat([\n\t\t\tnew VariableConfig('gl_PointSize', {\n\t\t\t\tdefault: '1.0',\n\t\t\t\tprefix: 'gl_PointSize = ',\n\t\t\t\tsuffix: ' * size * 10.0', // currently using 10 as 1 seems really small\n\t\t\t}),\n\t\t]);\n\t\t// \tnew VariableConfig('position', {\n\t\t// \t\tdefault_from_attribute: true,\n\t\t// \t\t// default: this.globals_handler().variable_config_default('position'),\n\t\t// \t\t// required_definitions: this.globals_handler().variable_config_required_definitions('position'),\n\t\t// \t\tprefix: 'vec3 transformed = '\n\t\t// \t}),\n\t\t// \tnew VariableConfig('normal', {\n\t\t// \t\tprefix: 'objectNormal = '\n\t\t// \t}),\n\t\t// \tnew VariableConfig('color', {\n\t\t// \t\tprefix: 'diffuseColor.xyz = '\n\t\t// \t}),\n\t\t// \tnew VariableConfig('alpha', {\n\t\t// \t\tprefix: 'diffuseColor.w = '\n\t\t// \t}),\n\t\t// \tnew VariableConfig('uv', {\n\t\t// \t\tdefault_from_attribute: true,\n\t\t// \t\tprefix: 'vUv = ',\n\t\t// \t\tif: 'defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )'\n\t\t// \t}),\n\t\t// \tnew VariableConfig('gl_PointSize', {\n\t\t// \t\tdefault: '1.0',\n\t\t// \t\tprefix: 'gl_PointSize = ',\n\t\t// \t\tsuffix: ' * size',\n\t\t// \t}),\n\t\t// ]\n\t}\n\tprotected lines_to_remove(shader_name: ShaderName) {\n\t\treturn LINES_TO_REMOVE_MAP.get(shader_name);\n\t}\n}\n","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\nimport {RGBADepthPacking} from 'three/src/constants';\nimport {BasicDepthPacking} from 'three/src/constants';\n\nimport {ShaderAssemblerMaterial} from './_BaseMaterial';\n\nimport TemplateVertex from '../../templates/CustomPointsDepth.vert.glsl';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\n\nconst INSERT_DEFINE_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT DEFINES']]);\nconst INSERT_BODY_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT BODY']]);\n\nexport class ShaderAssemblerCustomPointsDepth extends ShaderAssemblerMaterial {\n\t// _color_declaration() { return 'vec4 diffuseColor' }\n\t// _template_shader(){ return ShaderLib.standard }\n\tget _template_shader() {\n\t\tconst template = ShaderLib.depth;\n\n\t\tconst uniforms = UniformsUtils.clone(template.uniforms);\n\t\tuniforms['size'] = {value: 1};\n\t\tuniforms['scale'] = {value: 1};\n\n\t\treturn {\n\t\t\tvertexShader: TemplateVertex,\n\t\t\tfragmentShader: template.fragmentShader, //TemplateFragment,\n\t\t\tuniforms: uniforms,\n\t\t};\n\t}\n\tprotected insert_define_after(shader_name: ShaderName) {\n\t\treturn INSERT_DEFINE_AFTER_MAP.get(shader_name);\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn INSERT_BODY_AFTER_MAP.get(shader_name);\n\t}\n\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\t\treturn new ShaderMaterial({\n\t\t\t// vertexColors: VertexColors,\n\t\t\t// side: FrontSide,\n\t\t\t// transparent: true,\n\t\t\t// fog: true,\n\t\t\t// lights: true,\n\t\t\tdefines: {\n\t\t\t\tUSE_SIZEATTENUATION: 1,\n\t\t\t\tDEPTH_PACKING: [RGBADepthPacking, BasicDepthPacking][0],\n\t\t\t},\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t}\n}\n","export default \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <clipping_planes_pars_vertex>\\nvarying float vViewZDepth;\\n\\n// INSERT DEFINES\\n\\n\\n\\nvoid main() {\\n\\n\\t// INSERT BODY\\n\\n\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n\\tvViewZDepth = - mvPosition.z;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\n}\\n\\n\\n\"","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\nimport {RGBADepthPacking} from 'three/src/constants';\nimport {BasicDepthPacking} from 'three/src/constants';\n\nimport {ShaderAssemblerMaterial} from './_BaseMaterial';\n\nimport TemplateVertex from '../../templates/CustomPointsDistance.vert.glsl';\n\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\n\nconst INSERT_DEFINE_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT DEFINES']]);\nconst INSERT_BODY_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT BODY']]);\n\nexport class ShaderAssemblerCustomPointsDistance extends ShaderAssemblerMaterial {\n\t// _color_declaration() { return 'vec4 diffuseColor' }\n\t// _template_shader(){ return ShaderLib.standard }\n\tget _template_shader() {\n\t\tconst template = ShaderLib.distanceRGBA;\n\n\t\tconst uniforms = UniformsUtils.clone(template.uniforms);\n\t\tuniforms['size'] = {value: 1};\n\t\tuniforms['scale'] = {value: 1};\n\n\t\treturn {\n\t\t\tvertexShader: TemplateVertex,\n\t\t\tfragmentShader: template.fragmentShader, //TemplateFragment,\n\t\t\tuniforms: uniforms,\n\t\t};\n\t}\n\tprotected insert_define_after(shader_name: ShaderName) {\n\t\treturn INSERT_DEFINE_AFTER_MAP.get(shader_name);\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn INSERT_BODY_AFTER_MAP.get(shader_name);\n\t}\n\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\t\treturn new ShaderMaterial({\n\t\t\t// vertexColors: VertexColors,\n\t\t\t// side: FrontSide,\n\t\t\t// transparent: true,\n\t\t\t// fog: true,\n\t\t\t// lights: true,\n\t\t\tdefines: {\n\t\t\t\tUSE_SIZEATTENUATION: 1,\n\t\t\t\tDEPTH_PACKING: [RGBADepthPacking, BasicDepthPacking][0],\n\t\t\t},\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t}\n}\n","export default \"uniform float size;\\nuniform float scale;\\n#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <clipping_planes_pars_vertex>\\nvarying float vViewZDepth;\\n\\n// INSERT DEFINES\\n\\n\\n\\nvoid main() {\\n\\n\\t// INSERT BODY\\n\\n\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\\n// #define DISTANCE\\n// varying vec3 vWorldPosition;\\n// #include <common>\\n// #include <uv_pars_vertex>\\n// #include <displacementmap_pars_vertex>\\n// #include <morphtarget_pars_vertex>\\n// #include <skinning_pars_vertex>\\n// #include <clipping_planes_pars_vertex>\\n// void main() {\\n// \\t#include <uv_vertex>\\n// \\t#include <skinbase_vertex>\\n// \\t#ifdef USE_DISPLACEMENTMAP\\n// \\t\\t#include <beginnormal_vertex>\\n// \\t\\t#include <morphnormal_vertex>\\n// \\t\\t#include <skinnormal_vertex>\\n// \\t#endif\\n// \\t#include <begin_vertex>\\n// \\t#include <morphtarget_vertex>\\n// \\t#include <skinning_vertex>\\n// \\t#include <displacementmap_vertex>\\n// \\t#include <project_vertex>\\n// \\t#include <worldpos_vertex>\\n// \\t#include <clipping_planes_vertex>\\n// \\tvWorldPosition = worldPosition.xyz;\\n// }\\n\\n\\n\"","import {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\n// import {ShaderLib} from 'three/src/renderers/shaders/ShaderLib'\n// import {RGBADepthPacking} from 'three/src/constants'\n// import {BasicDepthPacking} from 'three/src/constants'\n\nimport {ShaderAssemblerMaterial} from './_BaseMaterial';\n\nimport TemplateVertex from '../../templates/CustomPointsDepthDOF.vert.glsl';\nimport TemplateFragment from '../../templates/CustomMeshDepthDOF.frag.glsl';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\n\nconst INSERT_DEFINE_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT DEFINES']]);\nconst INSERT_BODY_AFTER_MAP: Map<ShaderName, string> = new Map([[ShaderName.VERTEX, '// INSERT BODY']]);\n\nexport class ShaderAssemblerCustomPointsDepthDOF extends ShaderAssemblerMaterial {\n\t// _color_declaration() { return 'vec4 diffuseColor' }\n\t// _template_shader(){ return ShaderLib.standard }\n\tget _template_shader() {\n\t\treturn {\n\t\t\tvertexShader: TemplateVertex,\n\t\t\tfragmentShader: TemplateFragment,\n\t\t\tuniforms: {\n\t\t\t\tsize: {value: 1},\n\t\t\t\tscale: {value: 1},\n\t\t\t\tmNear: {value: 0},\n\t\t\t\tmFar: {value: 10},\n\t\t\t},\n\t\t};\n\t}\n\tprotected insert_define_after(shader_name: ShaderName) {\n\t\treturn INSERT_DEFINE_AFTER_MAP.get(shader_name);\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn INSERT_BODY_AFTER_MAP.get(shader_name);\n\t}\n\n\tcreate_material() {\n\t\tconst template_shader = this._template_shader;\n\t\treturn new ShaderMaterial({\n\t\t\t// defines: {\n\t\t\t// \tDEPTH_PACKING: [RGBADepthPacking, BasicDepthPacking][0]\n\t\t\t// },\n\t\t\tdepthTest: true,\n\t\t\tdefines: {\n\t\t\t\tUSE_SIZEATTENUATION: 1,\n\t\t\t},\n\n\t\t\tuniforms: UniformsUtils.clone(template_shader.uniforms),\n\t\t\tvertexShader: template_shader.vertexShader,\n\t\t\tfragmentShader: template_shader.fragmentShader,\n\t\t});\n\t}\n}\n","export default \"uniform float size;\\nuniform float scale;\\n#include <common>\\n\\nvarying float vViewZDepth;\\n\\n// INSERT DEFINES\\n\\n\\n\\nvoid main() {\\n\\n\\t// INSERT BODY\\n\\n\\n\\t#include <project_vertex>\\n\\n\\tvViewZDepth = - mvPosition.z;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\n}\\n\\n\"","import {CATEGORY_OBJ} from './Category';\n\nimport {AmbientLightObjNode} from '../../nodes/obj/AmbientLight';\nimport {AreaLightObjNode} from '../../nodes/obj/AreaLight';\nimport {DirectionalLightObjNode} from '../../nodes/obj/DirectionalLight';\nimport {HemisphereLightObjNode} from '../../nodes/obj/HemisphereLight';\nimport {PointLightObjNode} from '../../nodes/obj/PointLight';\nimport {SpotLightObjNode} from '../../nodes/obj/SpotLight';\n\nimport {EventsObjNode} from '../../nodes/obj/Events';\nimport {MaterialsObjNode} from '../../nodes/obj/Materials';\nimport {CopObjNode} from '../../nodes/obj/Cop';\nimport {PostProcessObjNode} from '../../nodes/obj/PostProcess';\n\nimport {GeoObjNode} from '../../nodes/obj/Geo';\nimport {NullObjNode} from '../../nodes/obj/Null';\nimport {FogObjNode} from '../../nodes/obj/Fog';\nimport {SceneObjNode} from '../../nodes/obj/Scene';\n\nimport {OrthographicCameraObjNode} from '../../nodes/obj/OrthographicCamera';\nimport {PerspectiveCameraObjNode} from '../../nodes/obj/PerspectiveCamera';\n// import {CubeCameraObj} from '../../nodes/obj/CubeCamera';\n\nexport interface ObjNodeChildrenMap {\n\tambient_light: AmbientLightObjNode;\n\tarea_light: AreaLightObjNode;\n\tcop: CopObjNode;\n\tdirectional_light: DirectionalLightObjNode;\n\tevents: EventsObjNode;\n\tfog: FogObjNode;\n\tgeo: GeoObjNode;\n\themisphere_light: HemisphereLightObjNode;\n\tmaterials: MaterialsObjNode;\n\tnull: NullObjNode;\n\torthographic_camera: OrthographicCameraObjNode;\n\tperspective_camera: PerspectiveCameraObjNode;\n\tpoint_light: PointLightObjNode;\n\tpost_process: PostProcessObjNode;\n\tscene: SceneObjNode;\n\tspot_light: SpotLightObjNode;\n}\n\nimport {Poly} from '../../Poly';\nexport class ObjRegister {\n\tstatic run(poly: Poly) {\n\t\tpoly.register_node(AmbientLightObjNode, CATEGORY_OBJ.LIGHT);\n\t\tpoly.register_node(AreaLightObjNode, CATEGORY_OBJ.LIGHT);\n\t\tpoly.register_node(DirectionalLightObjNode, CATEGORY_OBJ.LIGHT);\n\t\tpoly.register_node(HemisphereLightObjNode, CATEGORY_OBJ.LIGHT);\n\t\tpoly.register_node(PointLightObjNode, CATEGORY_OBJ.LIGHT);\n\t\tpoly.register_node(SpotLightObjNode, CATEGORY_OBJ.LIGHT);\n\n\t\tpoly.register_node(EventsObjNode, CATEGORY_OBJ.MANAGER);\n\t\tpoly.register_node(MaterialsObjNode, CATEGORY_OBJ.MANAGER);\n\t\tpoly.register_node(CopObjNode, CATEGORY_OBJ.MANAGER);\n\t\tpoly.register_node(PostProcessObjNode, CATEGORY_OBJ.MANAGER);\n\n\t\tpoly.register_node(GeoObjNode, CATEGORY_OBJ.GEOMETRY);\n\t\tpoly.register_node(NullObjNode, CATEGORY_OBJ.GEOMETRY);\n\t\tpoly.register_node(SceneObjNode, CATEGORY_OBJ.MISC);\n\n\t\tpoly.register_node(OrthographicCameraObjNode, CATEGORY_OBJ.CAMERA);\n\t\tpoly.register_node(PerspectiveCameraObjNode, CATEGORY_OBJ.CAMERA);\n\t\t// poly.register_node(CubeCameraObj, CATEGORY_OBJ.CAMERA)\n\n\t\tpoly.register_node(FogObjNode, CATEGORY_OBJ.MISC);\n\t}\n}\n","import {AmbientLight} from 'three/src/lights/AmbientLight';\nimport {TypedLightObjNode} from './_BaseLight';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AmbientLightObjParamsConfig extends NodeParamsConfig {\n\tcolor = ParamConfig.COLOR([1, 1, 1]);\n\tintensity = ParamConfig.FLOAT(1);\n}\nconst ParamsConfig = new AmbientLightObjParamsConfig();\n\nexport class AmbientLightObjNode extends TypedLightObjNode<AmbientLight, AmbientLightObjParamsConfig> {\n\tparams_config = ParamsConfig;\n\n\tstatic type() {\n\t\treturn 'ambient_light';\n\t}\n\n\tcreate_light() {\n\t\treturn new AmbientLight();\n\t}\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t}\n\n\tupdate_light_params() {\n\t\tthis.light.color = this.pv.color;\n\t\tthis.light.intensity = this.pv.intensity;\n\t}\n}\n","import {Object3D} from 'three/src/core/Object3D';\nimport {TypedContainer} from './_Base';\nimport {ContainableMap} from './utils/ContainableMap';\n\nexport class ObjectContainer extends TypedContainer<ContainableMap['OBJECT']> {\n\tset_content(content: ContainableMap['OBJECT']) {\n\t\tsuper.set_content(content);\n\t}\n\tset_object(object: Object3D) {\n\t\treturn this.set_content(object);\n\t}\n\thas_object() {\n\t\treturn this.has_content();\n\t}\n\tobject() {\n\t\treturn this.content();\n\t}\n\n\t// infos() {\n\t// \tconst node = this.node()\n\t// \treturn [\n\t// \t\t`full path: ${node.full_path()}`,\n\t// \t\t`${node.cooks_count()} cooks`,\n\t// \t\t`cook time: ${node.cook_time()}`,\n\t// \t\tthis.content(),\n\t// \t]\n\t// }\n}\n","import {RectAreaLight} from 'three/src/lights/RectAreaLight';\n// import {RectAreaLightHelper} from '../../../../modules/three/examples/jsm/helpers/RectAreaLightHelper';\nimport {RectAreaLightUniformsLib} from '../../../../modules/three/examples/jsm/lights/RectAreaLightUniformsLib';\n\nimport {BaseLightTransformedObjNode} from './_BaseLightTransformed';\nimport {TransformedParamConfig} from './utils/TransformController';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\n// import {HelperController, HelperParamConfig} from './utils/HelperController';\n\nexport function AreaLightParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tcolor = ParamConfig.COLOR([1, 1, 1]);\n\t\tintensity = ParamConfig.FLOAT(1, {range: [0, 10]});\n\t\twidth = ParamConfig.FLOAT(1, {range: [0, 10]});\n\t\theight = ParamConfig.FLOAT(1, {range: [0, 10]});\n\t};\n}\n\nclass AreaLightObjParamsConfig extends AreaLightParamConfig(TransformedParamConfig(NodeParamsConfig)) {}\nconst ParamsConfig = new AreaLightObjParamsConfig();\n\nexport class AreaLightObjNode extends BaseLightTransformedObjNode<RectAreaLight, AreaLightObjParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'area_light';\n\t}\n\t// private _helper_controller = new HelperController<RectAreaLightHelper, RectAreaLight>(this, RectAreaLightHelper);\n\t// initialize_node() {\n\t// \tthis._helper_controller.initialize_node();\n\t// }\n\n\tcreate_light() {\n\t\tconst object = new RectAreaLight(0xffffff, 1, 1, 1);\n\n\t\treturn object;\n\t}\n\n\t// create_light_params() {\n\t// \tthis.add_param(ParamType.COLOR, 'color', [1, 1, 1]);\n\t// \tthis.add_param(ParamType.FLOAT, 'intensity', 1, {range: [0, 10]});\n\t// \tthis.add_param(ParamType.FLOAT, 'width', 1, {range: [0, 10]});\n\t// \tthis.add_param(ParamType.FLOAT, 'height', 1, {range: [0, 10]});\n\t// }\n\n\tupdate_light_params() {\n\t\tthis.light.color = this.pv.color;\n\t\tthis.light.intensity = this.pv.intensity;\n\t\tthis.light.width = this.pv.width;\n\t\tthis.light.height = this.pv.height;\n\t\t// this._helper_controller.update();\n\t}\n\n\tasync cook() {\n\t\t// const {RectAreaLightUniformsLib} = await CoreScriptLoader.load_module_three_light('RectAreaLightUniformsLib');\n\t\t// const module = RectAreaLightUniformsLib\n\t\tif (!(RectAreaLightUniformsLib as any).initialized) {\n\t\t\tRectAreaLightUniformsLib.init();\n\t\t\t(RectAreaLightUniformsLib as any).initialized = true;\n\t\t}\n\n\t\tthis.transform_controller.update();\n\t\tthis.update_light_params();\n\t\tthis.update_shadow_params();\n\t\tthis.cook_controller.end_cook();\n\t}\n}\n","import {ClampToEdgeWrapping} from 'three/src/constants';\nimport {DataTexture} from 'three/src/textures/DataTexture';\nimport {FloatType} from 'three/src/constants';\nimport {LinearFilter} from 'three/src/constants';\nimport {NearestFilter} from 'three/src/constants';\nimport {RGBAFormat} from 'three/src/constants';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\nimport {UVMapping} from 'three/src/constants';\nimport {UniformsLib} from 'three/src/renderers/shaders/UniformsLib';\n/**\n * Uniforms library for RectAreaLight shared webgl shaders\n * @author abelnation\n * @author WestLangley / http://github.com/WestLangley\n *\n * NOTE: This is a temporary location for the BRDF approximation texture data\n *       based off of Eric Heitz's work (see citation below).  BRDF data for\n *       RectAreaLight is currently approximated using a precomputed texture\n *       of roughly 80kb in size.  The hope is to find a better way to include\n *       the large texture data before including the full RectAreaLight implementation\n *       in the main build files.\n *\n * TODO: figure out a way to compress the LTC BRDF data\n */\n\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvar RectAreaLightUniformsLib = {\n\n\tinit: function () {\n\n\t\t// source: https://github.com/selfshadow/ltc_code/tree/master/fit/results/ltc.js\n\n\t\tvar LTC_MAT_1 = [ 1, 0, 0, 2e-05, 1, 0, 0, 0.000503905, 1, 0, 0, 0.00201562, 1, 0, 0, 0.00453516, 1, 0, 0, 0.00806253, 1, 0, 0, 0.0125978, 1, 0, 0, 0.018141, 1, 0, 0, 0.0246924, 1, 0, 0, 0.0322525, 1, 0, 0, 0.0408213, 1, 0, 0, 0.0503999, 1, 0, 0, 0.0609894, 1, 0, 0, 0.0725906, 1, 0, 0, 0.0852058, 1, 0, 0, 0.0988363, 1, 0, 0, 0.113484, 1, 0, 0, 0.129153, 1, 0, 0, 0.145839, 1, 0, 0, 0.163548, 1, 0, 0, 0.182266, 1, 0, 0, 0.201942, 1, 0, 0, 0.222314, 1, 0, 0, 0.241906, 1, 0, 0, 0.262314, 1, 0, 0, 0.285754, 1, 0, 0, 0.310159, 1, 0, 0, 0.335426, 1, 0, 0, 0.361341, 1, 0, 0, 0.387445, 1, 0, 0, 0.412784, 1, 0, 0, 0.438197, 1, 0, 0, 0.466966, 1, 0, 0, 0.49559, 1, 0, 0, 0.523448, 1, 0, 0, 0.549938, 1, 0, 0, 0.57979, 1, 0, 0, 0.608746, 1, 0, 0, 0.636185, 1, 0, 0, 0.664748, 1, 0, 0, 0.69313, 1, 0, 0, 0.71966, 1, 0, 0, 0.747662, 1, 0, 0, 0.774023, 1, 0, 0, 0.799775, 1, 0, 0, 0.825274, 1, 0, 0, 0.849156, 1, 0, 0, 0.873248, 1, 0, 0, 0.89532, 1, 0, 0, 0.917565, 1, 0, 0, 0.937863, 1, 0, 0, 0.958139, 1, 0, 0, 0.976563, 1, 0, 0, 0.994658, 1, 0, 0, 1.0112, 1, 0, 0, 1.02712, 1, 0, 0, 1.04189, 1, 0, 0, 1.05568, 1, 0, 0, 1.06877, 1, 0, 0, 1.08058, 1, 0, 0, 1.09194, 1, 0, 0, 1.10191, 1, 0, 0, 1.11161, 1, 0, 0, 1.1199, 1, 0, 0, 1.12813, 0.999547, - 4.48815e-07, 0.0224417, 1.99902e-05, 0.999495, - 1.13079e-05, 0.0224406, 0.000503651, 0.999496, - 4.52317e-05, 0.0224406, 0.00201461, 0.999496, - 0.000101772, 0.0224406, 0.00453287, 0.999495, - 0.000180928, 0.0224406, 0.00805845, 0.999497, - 0.000282702, 0.0224406, 0.0125914, 0.999496, - 0.000407096, 0.0224406, 0.0181319, 0.999498, - 0.000554114, 0.0224406, 0.02468, 0.999499, - 0.000723768, 0.0224406, 0.0322363, 0.999495, - 0.000916058, 0.0224405, 0.0408009, 0.999499, - 0.00113101, 0.0224408, 0.050375, 0.999494, - 0.00136863, 0.0224405, 0.0609586, 0.999489, - 0.00162896, 0.0224401, 0.0725537, 0.999489, - 0.00191201, 0.0224414, 0.0851619, 0.999498, - 0.00221787, 0.0224413, 0.0987867, 0.999492, - 0.00254642, 0.0224409, 0.113426, 0.999507, - 0.00289779, 0.0224417, 0.129088, 0.999494, - 0.0032716, 0.0224386, 0.145767, 0.999546, - 0.0036673, 0.0224424, 0.163472, 0.999543, - 0.00408166, 0.0224387, 0.182182, 0.999499, - 0.00450056, 0.0224338, 0.201843, 0.999503, - 0.00483661, 0.0224203, 0.222198, 0.999546, - 0.00452928, 0.022315, 0.241714, 0.999508, - 0.00587403, 0.0224329, 0.262184, 0.999509, - 0.00638806, 0.0224271, 0.285609, 0.999501, - 0.00691028, 0.0224166, 0.309998, 0.999539, - 0.00741979, 0.0223989, 0.335262, 0.999454, - 0.00786282, 0.0223675, 0.361154, 0.999529, - 0.00811928, 0.0222828, 0.387224, 0.999503, - 0.00799941, 0.0221063, 0.41252, 0.999561, - 0.00952753, 0.0223057, 0.438006, 0.999557, - 0.0099134, 0.0222065, 0.466735, 0.999541, - 0.0100935, 0.0220402, 0.495332, 0.999562, - 0.00996821, 0.0218067, 0.523197, 0.999556, - 0.0105031, 0.0217096, 0.550223, 0.999561, - 0.0114191, 0.0217215, 0.579498, 0.999588, - 0.0111818, 0.0213357, 0.608416, 0.999633, - 0.0107725, 0.0208689, 0.635965, 0.999527, - 0.0121671, 0.0210149, 0.664476, 0.999508, - 0.0116005, 0.020431, 0.692786, 0.999568, - 0.0115604, 0.0199791, 0.719709, 0.999671, - 0.0121117, 0.0197415, 0.74737, 0.999688, - 0.0110769, 0.0188846, 0.773692, 0.99962, - 0.0122368, 0.0188452, 0.799534, 0.999823, - 0.0110325, 0.0178001, 0.825046, 0.999599, - 0.0114923, 0.0174221, 0.849075, 0.999619, - 0.0105923, 0.0164345, 0.872999, 0.999613, - 0.0105988, 0.0158227, 0.895371, 0.99964, - 0.00979861, 0.0148131, 0.917364, 0.99977, - 0.00967238, 0.0140721, 0.938002, 0.999726, - 0.00869175, 0.0129543, 0.957917, 0.99973, - 0.00866872, 0.0122329, 0.976557, 0.999773, - 0.00731956, 0.0108958, 0.994459, 0.999811, - 0.00756027, 0.0102715, 1.01118, 0.999862, - 0.00583732, 0.00878781, 1.02701, 0.999835, - 0.00631438, 0.00827529, 1.04186, 0.999871, - 0.00450785, 0.00674583, 1.05569, 0.999867, - 0.00486079, 0.00621041, 1.06861, 0.999939, - 0.00322072, 0.00478301, 1.08064, 0.999918, - 0.00318199, 0.00406395, 1.09181, 1.00003, - 0.00193348, 0.00280682, 1.10207, 0.999928, - 0.00153729, 0.00198741, 1.11152, 0.999933, - 0.000623666, 0.000917714, 1.12009, 1, - 1.02387e-06, 9.07581e-07, 1.12813, 0.997866, - 8.96716e-07, 0.0448334, 1.99584e-05, 0.997987, - 2.25945e-05, 0.0448389, 0.000502891, 0.997987, - 9.03781e-05, 0.0448388, 0.00201156, 0.997985, - 0.000203351, 0.0448388, 0.00452602, 0.997986, - 0.000361514, 0.0448388, 0.00804629, 0.997987, - 0.00056487, 0.0448389, 0.0125724, 0.997988, - 0.000813423, 0.0448389, 0.0181045, 0.997984, - 0.00110718, 0.0448387, 0.0246427, 0.997985, - 0.00144616, 0.0448388, 0.0321875, 0.997987, - 0.00183038, 0.044839, 0.0407392, 0.997983, - 0.00225987, 0.0448387, 0.0502986, 0.997991, - 0.00273467, 0.0448389, 0.0608667, 0.997984, - 0.00325481, 0.0448384, 0.0724444, 0.998002, - 0.00382043, 0.044839, 0.0850348, 0.997997, - 0.00443145, 0.0448396, 0.0986372, 0.998007, - 0.00508796, 0.0448397, 0.113255, 0.998008, - 0.00578985, 0.04484, 0.128891, 0.998003, - 0.00653683, 0.0448384, 0.145548, 0.997983, - 0.00732713, 0.0448358, 0.163221, 0.997985, - 0.00815454, 0.0448358, 0.181899, 0.998005, - 0.00898985, 0.0448286, 0.201533, 0.998026, - 0.00964404, 0.0447934, 0.221821, 0.998055, - 0.00922677, 0.044611, 0.241282, 0.99804, - 0.0117361, 0.0448245, 0.261791, 0.998048, - 0.0127628, 0.0448159, 0.285181, 0.998088, - 0.0138055, 0.0447996, 0.30954, 0.998058, - 0.0148206, 0.0447669, 0.334751, 0.998099, - 0.0156998, 0.044697, 0.36061, 0.998116, - 0.0161976, 0.0445122, 0.386603, 0.998195, - 0.015945, 0.0441711, 0.411844, 0.998168, - 0.0183947, 0.0444255, 0.43773, 0.998184, - 0.0197913, 0.0443809, 0.466009, 0.998251, - 0.0201426, 0.0440689, 0.494574, 0.998305, - 0.0198847, 0.0435632, 0.522405, 0.998273, - 0.0210577, 0.043414, 0.549967, 0.998254, - 0.0227901, 0.0433943, 0.578655, 0.998349, - 0.0223108, 0.0426529, 0.60758, 0.99843, - 0.0223088, 0.042, 0.635524, 0.998373, - 0.0241141, 0.0418987, 0.663621, 0.998425, - 0.0231446, 0.0408118, 0.691906, 0.998504, - 0.0233684, 0.0400565, 0.719339, 0.998443, - 0.0241652, 0.0394634, 0.74643, 0.99848, - 0.0228715, 0.0380002, 0.773086, 0.998569, - 0.023519, 0.0372322, 0.798988, 0.998619, - 0.0223108, 0.0356468, 0.824249, 0.998594, - 0.0223105, 0.034523, 0.848808, 0.998622, - 0.0213426, 0.0328887, 0.87227, 0.998669, - 0.0207912, 0.0314374, 0.895157, 0.998705, - 0.0198416, 0.0296925, 0.916769, 0.998786, - 0.0189168, 0.0279634, 0.937773, 0.998888, - 0.0178811, 0.0261597, 0.957431, 0.99906, - 0.0166845, 0.0242159, 0.976495, 0.999038, - 0.0155464, 0.0222638, 0.994169, 0.999237, - 0.0141349, 0.0201967, 1.01112, 0.999378, - 0.0129324, 0.0181744, 1.02692, 0.999433, - 0.0113192, 0.0159898, 1.04174, 0.999439, - 0.0101244, 0.0140385, 1.05559, 0.999614, - 0.00837456, 0.0117826, 1.06852, 0.999722, - 0.00721769, 0.00983745, 1.08069, 0.999817, - 0.00554067, 0.00769002, 1.09176, 0.99983, - 0.00426961, 0.005782, 1.10211, 0.999964, - 0.00273904, 0.00374503, 1.11152, 1.00001, - 0.00136739, 0.00187176, 1.12031, 0.999946, 3.93227e-05, - 2.8919e-05, 1.12804, 0.995847, - 1.3435e-06, 0.0671785, 1.9916e-05, 0.995464, - 3.38387e-05, 0.0671527, 0.000501622, 0.99547, - 0.000135355, 0.0671531, 0.00200649, 0.995471, - 0.00030455, 0.0671532, 0.00451461, 0.99547, - 0.000541423, 0.0671531, 0.008026, 0.995471, - 0.00084598, 0.0671531, 0.0125407, 0.99547, - 0.00121823, 0.0671531, 0.0180589, 0.99547, - 0.00165817, 0.0671531, 0.0245806, 0.995463, - 0.00216583, 0.0671526, 0.0321062, 0.995468, - 0.00274127, 0.0671527, 0.0406366, 0.995474, - 0.00338447, 0.0671534, 0.0501717, 0.995473, - 0.00409554, 0.0671533, 0.0607131, 0.995478, - 0.00487451, 0.0671531, 0.0722618, 0.995476, - 0.00572148, 0.0671532, 0.0848191, 0.995477, - 0.00663658, 0.0671539, 0.0983882, 0.995498, - 0.00761986, 0.0671541, 0.112972, 0.995509, - 0.00867094, 0.0671542, 0.128568, 0.995509, - 0.00978951, 0.0671531, 0.145183, 0.995503, - 0.0109725, 0.0671491, 0.162808, 0.995501, - 0.012211, 0.0671465, 0.181441, 0.99553, - 0.0134565, 0.0671371, 0.201015, 0.99555, - 0.014391, 0.0670831, 0.221206, 0.99558, - 0.014351, 0.0668883, 0.240813, 0.995577, - 0.0173997, 0.0671055, 0.261257, 0.995602, - 0.0191111, 0.0671178, 0.284467, 0.995623, - 0.0206705, 0.0670946, 0.308765, 0.995658, - 0.022184, 0.0670472, 0.333905, 0.995705, - 0.0234832, 0.0669417, 0.359677, 0.995719, - 0.0241933, 0.0666714, 0.385554, 0.995786, - 0.0243539, 0.066266, 0.410951, 0.995887, - 0.0271866, 0.0664367, 0.437163, 0.995944, - 0.0296012, 0.0664931, 0.464842, 0.996004, - 0.0301045, 0.0660105, 0.49332, 0.996128, - 0.0298311, 0.0652694, 0.521131, 0.996253, - 0.0316426, 0.0650739, 0.549167, 0.996244, - 0.0339043, 0.0649433, 0.57737, 0.996309, - 0.033329, 0.0638926, 0.606073, 0.996417, - 0.0338935, 0.0630849, 0.634527, 0.996372, - 0.0353104, 0.0625083, 0.66256, 0.996542, - 0.0348942, 0.0611986, 0.690516, 0.996568, - 0.0351614, 0.060069, 0.718317, 0.996711, - 0.0354317, 0.0588522, 0.74528, 0.996671, - 0.0349513, 0.0571902, 0.772061, 0.996865, - 0.0345622, 0.0555321, 0.798089, 0.996802, - 0.0342566, 0.0537816, 0.823178, 0.996992, - 0.0330862, 0.0516095, 0.847949, 0.996944, - 0.0324666, 0.0495537, 0.871431, 0.997146, - 0.0309544, 0.0470302, 0.894357, 0.997189, - 0.0299372, 0.0446043, 0.916142, 0.997471, - 0.0281389, 0.0418812, 0.937193, 0.997515, - 0.0268702, 0.0391823, 0.957, 0.997812, - 0.0247166, 0.0361338, 0.975936, 0.998027, - 0.0233525, 0.0333945, 0.99391, 0.998233, - 0.0209839, 0.0301917, 1.01075, 0.998481, - 0.0194309, 0.027271, 1.02669, 0.998859, - 0.0169728, 0.0240162, 1.04173, 0.99894, - 0.0152322, 0.0210517, 1.05551, 0.999132, - 0.0127497, 0.0178632, 1.06856, 0.999369, - 0.0108282, 0.014787, 1.08054, 0.999549, - 0.00845886, 0.0116185, 1.09185, 0.999805, - 0.0063937, 0.00867209, 1.10207, 0.99985, - 0.00414582, 0.00566823, 1.1117, 0.999912, - 0.00207443, 0.00277562, 1.12022, 1.00001, 8.70226e-05, - 5.3766e-05, 1.12832, 0.991943, - 1.78672e-06, 0.0893382, 1.98384e-05, 0.991952, - 4.50183e-05, 0.089339, 0.000499849, 0.991956, - 0.000180074, 0.0893394, 0.0019994, 0.991955, - 0.000405167, 0.0893393, 0.00449867, 0.991953, - 0.000720298, 0.0893391, 0.00799764, 0.991955, - 0.00112548, 0.0893393, 0.0124964, 0.991957, - 0.0016207, 0.0893395, 0.0179951, 0.991958, - 0.00220601, 0.0893396, 0.0244939, 0.991947, - 0.00288137, 0.0893385, 0.0319929, 0.991962, - 0.00364693, 0.0893399, 0.0404933, 0.991965, - 0.00450264, 0.0893399, 0.049995, 0.99198, - 0.00544862, 0.0893411, 0.0604995, 0.99197, - 0.00648491, 0.0893397, 0.0720074, 0.991976, - 0.00761164, 0.089341, 0.0845207, 0.99198, - 0.00882891, 0.0893405, 0.0980413, 0.991982, - 0.0101367, 0.0893396, 0.112571, 0.992008, - 0.011535, 0.0893415, 0.128115, 0.992026, - 0.0130228, 0.0893414, 0.144672, 0.992064, - 0.0145966, 0.0893418, 0.162241, 0.992041, - 0.0162421, 0.0893359, 0.180801, 0.992086, - 0.0178888, 0.0893214, 0.200302, 0.992157, - 0.0190368, 0.0892401, 0.220332, 0.992181, - 0.0195584, 0.0890525, 0.240144, 0.992175, - 0.0227257, 0.0892153, 0.260728, 0.99221, - 0.0254195, 0.089304, 0.283473, 0.99222, - 0.0274883, 0.0892703, 0.307673, 0.992317, - 0.0294905, 0.0892027, 0.332729, 0.992374, - 0.0311861, 0.0890577, 0.358387, 0.992505, - 0.0320656, 0.0886994, 0.384102, 0.992568, - 0.0329715, 0.0883198, 0.409767, 0.992675, - 0.036006, 0.0883602, 0.436145, 0.992746, - 0.0392897, 0.0884591, 0.463217, 0.992873, - 0.0399337, 0.0878287, 0.491557, 0.992934, - 0.040231, 0.0870108, 0.519516, 0.993091, - 0.0422013, 0.0865857, 0.547741, 0.993259, - 0.0443503, 0.0861937, 0.575792, 0.993455, - 0.0446368, 0.0851187, 0.604233, 0.993497, - 0.0454299, 0.0840576, 0.632925, 0.993694, - 0.0463296, 0.0829671, 0.660985, 0.993718, - 0.0470619, 0.0817185, 0.688714, 0.993973, - 0.0468838, 0.0800294, 0.716743, 0.994207, - 0.046705, 0.0781286, 0.74377, 0.994168, - 0.0469698, 0.0763337, 0.77042, 0.9945, - 0.0456816, 0.0738184, 0.796659, 0.994356, - 0.0455518, 0.0715545, 0.821868, 0.994747, - 0.0439488, 0.0686085, 0.846572, 0.994937, - 0.0430056, 0.065869, 0.870435, 0.995142, - 0.0413414, 0.0626446, 0.893272, 0.995451, - 0.0396521, 0.05929, 0.915376, 0.995445, - 0.0378453, 0.0558503, 0.936196, 0.995967, - 0.0355219, 0.0520949, 0.956376, 0.996094, - 0.0335146, 0.048377, 0.975327, 0.996622, - 0.030682, 0.0442575, 0.993471, 0.996938, - 0.0285504, 0.0404693, 1.01052, 0.997383, - 0.0253399, 0.0360903, 1.02637, 0.997714, - 0.0231651, 0.0322176, 1.04139, 0.998249, - 0.0198138, 0.0278433, 1.05542, 0.998596, - 0.0174337, 0.0238759, 1.06846, 0.998946, - 0.0141349, 0.0195944, 1.08056, 0.99928, - 0.0115603, 0.0156279, 1.09181, 0.999507, - 0.00839065, 0.0114607, 1.10213, 0.999697, - 0.005666, 0.00763325, 1.11169, 0.999869, - 0.00269902, 0.00364946, 1.12042, 1.00001, 6.23836e-05, - 3.19288e-05, 1.12832, 0.987221, - 2.22675e-06, 0.111332, 1.97456e-05, 0.98739, - 5.61116e-05, 0.111351, 0.000497563, 0.987448, - 0.000224453, 0.111357, 0.00199031, 0.987441, - 0.000505019, 0.111357, 0.0044782, 0.987442, - 0.000897816, 0.111357, 0.00796129, 0.987442, - 0.00140284, 0.111357, 0.0124396, 0.987444, - 0.00202012, 0.111357, 0.0179132, 0.987442, - 0.00274964, 0.111357, 0.0243824, 0.987446, - 0.00359147, 0.111357, 0.0318474, 0.987435, - 0.00454562, 0.111356, 0.0403086, 0.987461, - 0.00561225, 0.111358, 0.0497678, 0.987458, - 0.00679125, 0.111358, 0.0602239, 0.987443, - 0.0080828, 0.111356, 0.0716792, 0.987476, - 0.0094872, 0.111358, 0.0841364, 0.98749, - 0.0110044, 0.111361, 0.097597, 0.987508, - 0.0126344, 0.111362, 0.112062, 0.987494, - 0.0143767, 0.111357, 0.127533, 0.987526, - 0.0162307, 0.111359, 0.144015, 0.987558, - 0.0181912, 0.111361, 0.161502, 0.987602, - 0.0202393, 0.111355, 0.179979, 0.987692, - 0.022273, 0.111346, 0.199386, 0.987702, - 0.0235306, 0.111215, 0.219183, 0.987789, - 0.0247628, 0.111061, 0.239202, 0.987776, - 0.0280668, 0.111171, 0.259957, 0.987856, - 0.0316751, 0.111327, 0.282198, 0.987912, - 0.0342468, 0.111282, 0.306294, 0.988, - 0.0367205, 0.111198, 0.331219, 0.988055, - 0.0387766, 0.110994, 0.356708, 0.988241, - 0.0397722, 0.110547, 0.382234, 0.988399, - 0.0416076, 0.110198, 0.408227, 0.988539, - 0.0448192, 0.110137, 0.434662, 0.988661, - 0.0483793, 0.110143, 0.461442, 0.988967, - 0.0495895, 0.109453, 0.489318, 0.989073, - 0.0506797, 0.108628, 0.517516, 0.989274, - 0.0526953, 0.108003, 0.545844, 0.989528, - 0.054578, 0.107255, 0.573823, 0.989709, - 0.0561503, 0.106294, 0.601944, 0.989991, - 0.056866, 0.104896, 0.630855, 0.990392, - 0.0572914, 0.103336, 0.658925, 0.990374, - 0.0586224, 0.10189, 0.686661, 0.990747, - 0.0584764, 0.099783, 0.714548, 0.991041, - 0.0582662, 0.0974309, 0.74186, 0.991236, - 0.0584118, 0.0951678, 0.768422, 0.991585, - 0.0573055, 0.0921581, 0.794817, 0.991984, - 0.0564241, 0.0891167, 0.820336, 0.9921, - 0.0553608, 0.085805, 0.84493, 0.992749, - 0.0533816, 0.0820354, 0.868961, 0.99288, - 0.0518661, 0.0782181, 0.891931, 0.993511, - 0.0492492, 0.0738935, 0.914186, 0.993617, - 0.0471956, 0.0696402, 0.93532, 0.99411, - 0.044216, 0.0649659, 0.95543, 0.994595, - 0.0416654, 0.0603177, 0.974685, 0.994976, - 0.0384314, 0.0553493, 0.992807, 0.995579, - 0.0353491, 0.0503942, 1.00996, 0.996069, - 0.0319787, 0.0452123, 1.02606, 0.996718, - 0.028472, 0.0400112, 1.04114, 0.997173, - 0.0250789, 0.0349456, 1.05517, 0.997818, - 0.0213326, 0.029653, 1.0683, 0.998318, - 0.0178509, 0.024549, 1.0805, 0.998853, - 0.0141118, 0.0194197, 1.09177, 0.999218, - 0.0105914, 0.0143869, 1.1022, 0.999594, - 0.00693474, 0.00943517, 1.11175, 0.99975, - 0.00340478, 0.00464051, 1.12056, 1.00001, 0.000109172, - 0.000112821, 1.12853, 0.983383, - 2.66524e-06, 0.133358, 1.96534e-05, 0.981942, - 6.71009e-05, 0.133162, 0.000494804, 0.981946, - 0.000268405, 0.133163, 0.00197923, 0.981944, - 0.000603912, 0.133163, 0.00445326, 0.981941, - 0.00107362, 0.133162, 0.00791693, 0.981946, - 0.00167755, 0.133163, 0.0123703, 0.981944, - 0.00241569, 0.133162, 0.0178135, 0.981945, - 0.00328807, 0.133163, 0.0242466, 0.981945, - 0.00429472, 0.133162, 0.03167, 0.981955, - 0.00543573, 0.133164, 0.0400846, 0.981951, - 0.00671105, 0.133163, 0.0494901, 0.981968, - 0.00812092, 0.133165, 0.0598886, 0.981979, - 0.00966541, 0.133166, 0.0712811, 0.981996, - 0.0113446, 0.133168, 0.083669, 0.982014, - 0.0131585, 0.133169, 0.0970533, 0.982011, - 0.0151073, 0.133167, 0.111438, 0.982062, - 0.0171906, 0.133172, 0.126826, 0.9821, - 0.0194067, 0.133175, 0.143215, 0.982149, - 0.0217502, 0.133176, 0.160609, 0.982163, - 0.0241945, 0.133173, 0.178981, 0.982247, - 0.0265907, 0.133148, 0.198249, 0.982291, - 0.027916, 0.132974, 0.217795, 0.982396, - 0.0299663, 0.132868, 0.238042, 0.982456, - 0.0334544, 0.132934, 0.258901, 0.982499, - 0.0378636, 0.133137, 0.280639, 0.982617, - 0.0409274, 0.133085, 0.304604, 0.98274, - 0.0438523, 0.132985, 0.329376, 0.982944, - 0.0462288, 0.132728, 0.354697, 0.98308, - 0.0475995, 0.132228, 0.380102, 0.983391, - 0.0501901, 0.131924, 0.406256, 0.983514, - 0.0535899, 0.131737, 0.432735, 0.98373, - 0.0571858, 0.131567, 0.459359, 0.984056, - 0.0592353, 0.130932, 0.486637, 0.984234, - 0.0610488, 0.130092, 0.51509, 0.984748, - 0.0630758, 0.12923, 0.543461, 0.985073, - 0.0647398, 0.128174, 0.571376, 0.985195, - 0.0671941, 0.127133, 0.599414, 0.985734, - 0.0681345, 0.125576, 0.628134, 0.986241, - 0.0686089, 0.123639, 0.656399, 0.986356, - 0.0698511, 0.121834, 0.684258, 0.986894, - 0.0700931, 0.119454, 0.711818, 0.987382, - 0.0698321, 0.116718, 0.739511, 0.988109, - 0.0693975, 0.113699, 0.766267, 0.988363, - 0.0689584, 0.110454, 0.792456, 0.989112, - 0.0672353, 0.106602, 0.81813, 0.989241, - 0.0662034, 0.10267, 0.842889, 0.990333, - 0.0638938, 0.0981381, 0.867204, 0.990591, - 0.0618534, 0.0935388, 0.89038, 0.991106, - 0.0593117, 0.088553, 0.912576, 0.991919, - 0.0562676, 0.0832187, 0.934118, 0.992111, - 0.0534085, 0.0778302, 0.954254, 0.992997, - 0.0495459, 0.0720453, 0.973722, 0.993317, - 0.0463707, 0.0663458, 0.991949, 0.994133, - 0.0421245, 0.0601883, 1.00936, 0.994705, - 0.0384977, 0.0542501, 1.02559, 0.995495, - 0.0340956, 0.0479862, 1.04083, 0.996206, - 0.030105, 0.041887, 1.05497, 0.996971, - 0.0256095, 0.0355355, 1.06824, 0.997796, - 0.0213932, 0.0293655, 1.08056, 0.998272, - 0.0169612, 0.0232926, 1.09182, 0.998857, - 0.0126756, 0.0172786, 1.10219, 0.99939, - 0.00832486, 0.0113156, 1.11192, 0.999752, - 0.00410826, 0.00557892, 1.12075, 1, 0.000150957, - 0.000119101, 1.12885, 0.975169, - 3.09397e-06, 0.154669, 1.95073e-05, 0.975439, - 7.79608e-05, 0.154712, 0.000491534, 0.975464, - 0.000311847, 0.154716, 0.00196617, 0.975464, - 0.000701656, 0.154716, 0.00442387, 0.975462, - 0.0012474, 0.154715, 0.0078647, 0.975461, - 0.00194906, 0.154715, 0.0122886, 0.975464, - 0.00280667, 0.154715, 0.0176959, 0.975468, - 0.00382025, 0.154716, 0.0240867, 0.975471, - 0.00498985, 0.154716, 0.0314612, 0.975472, - 0.00631541, 0.154717, 0.0398199, 0.975486, - 0.00779719, 0.154718, 0.0491639, 0.975489, - 0.00943505, 0.154718, 0.0594932, 0.975509, - 0.0112295, 0.154721, 0.0708113, 0.97554, - 0.0131802, 0.154724, 0.0831176, 0.975557, - 0.0152876, 0.154726, 0.096415, 0.975585, - 0.0175512, 0.154728, 0.110705, 0.975605, - 0.0199713, 0.154729, 0.125992, 0.975645, - 0.0225447, 0.154729, 0.142272, 0.975711, - 0.0252649, 0.154735, 0.159549, 0.975788, - 0.0280986, 0.154736, 0.177805, 0.975872, - 0.0308232, 0.154704, 0.196911, 0.975968, - 0.0324841, 0.154525, 0.216324, 0.976063, - 0.0351281, 0.154432, 0.236628, 0.976157, - 0.0388618, 0.15446, 0.257539, 0.976204, - 0.0437704, 0.154665, 0.278975, 0.976358, - 0.047514, 0.154652, 0.302606, 0.976571, - 0.0508638, 0.154535, 0.327204, 0.976725, - 0.0534995, 0.154221, 0.352276, 0.977013, - 0.0555547, 0.153737, 0.377696, 0.977294, - 0.0586728, 0.153403, 0.403855, 0.977602, - 0.0622715, 0.15312, 0.430333, 0.977932, - 0.0658166, 0.152755, 0.456855, 0.978241, - 0.0689877, 0.152233, 0.483668, 0.978602, - 0.0712805, 0.15132, 0.512097, 0.979234, - 0.0732775, 0.150235, 0.540455, 0.97977, - 0.075163, 0.148978, 0.568486, 0.979995, - 0.0778026, 0.147755, 0.596524, 0.98078, - 0.0791854, 0.146019, 0.624825, 0.981628, - 0.0799666, 0.143906, 0.653403, 0.982067, - 0.0808532, 0.141561, 0.681445, 0.98271, - 0.0816024, 0.139025, 0.708918, 0.983734, - 0.0812511, 0.135764, 0.736594, 0.98431, - 0.0806201, 0.132152, 0.763576, 0.985071, - 0.0801605, 0.12846, 0.789797, 0.98618, - 0.0784208, 0.124084, 0.815804, 0.986886, - 0.0766643, 0.1193, 0.840869, 0.987485, - 0.0747744, 0.114236, 0.864952, 0.988431, - 0.0716701, 0.108654, 0.888431, 0.988886, - 0.0691609, 0.102994, 0.910963, 0.990024, - 0.0654048, 0.0967278, 0.932629, 0.990401, - 0.0619765, 0.090384, 0.95313, 0.991093, - 0.0579296, 0.0837885, 0.972587, 0.992018, - 0.0536576, 0.0770171, 0.991184, 0.992536, - 0.0493719, 0.0701486, 1.00863, 0.993421, - 0.0444813, 0.062953, 1.02494, 0.993928, - 0.040008, 0.0560455, 1.04017, 0.994994, - 0.0347982, 0.04856, 1.05463, 0.995866, - 0.0301017, 0.0416152, 1.06807, 0.996916, - 0.0248225, 0.0342597, 1.08039, 0.997766, - 0.0199229, 0.0271668, 1.09177, 0.998479, - 0.0147422, 0.0201387, 1.10235, 0.99921, - 0.00980173, 0.0131944, 1.11206, 0.999652, - 0.0047426, 0.00640712, 1.12104, 0.999998, 8.91673e-05, - 0.00010379, 1.12906, 0.967868, - 3.51885e-06, 0.175947, 1.93569e-05, 0.968001, - 8.86733e-05, 0.175972, 0.000487782, 0.96801, - 0.000354697, 0.175973, 0.00195115, 0.968012, - 0.000798063, 0.175974, 0.00439006, 0.968011, - 0.00141879, 0.175973, 0.00780461, 0.968011, - 0.00221686, 0.175973, 0.0121948, 0.968016, - 0.00319231, 0.175974, 0.0175607, 0.968019, - 0.00434515, 0.175974, 0.0239027, 0.968018, - 0.00567538, 0.175974, 0.0312208, 0.968033, - 0.00718308, 0.175977, 0.0395158, 0.968049, - 0.00886836, 0.175979, 0.0487885, 0.968047, - 0.0107312, 0.175978, 0.0590394, 0.968072, - 0.0127719, 0.175981, 0.0702705, 0.968108, - 0.0149905, 0.175986, 0.0824836, 0.968112, - 0.0173866, 0.175985, 0.0956783, 0.968173, - 0.0199611, 0.175993, 0.109862, 0.96827, - 0.0227128, 0.176008, 0.125033, 0.968292, - 0.025639, 0.17601, 0.141193, 0.968339, - 0.0287299, 0.176007, 0.158336, 0.968389, - 0.0319399, 0.176001, 0.176441, 0.968501, - 0.034941, 0.175962, 0.195359, 0.968646, - 0.0370812, 0.175793, 0.214686, 0.968789, - 0.0402329, 0.175708, 0.234973, 0.96886, - 0.0442601, 0.1757, 0.255871, 0.969013, - 0.049398, 0.175876, 0.277238, 0.969242, - 0.0539932, 0.17594, 0.300326, 0.969419, - 0.0577299, 0.175781, 0.324702, 0.969763, - 0.0605643, 0.175432, 0.349527, 0.970093, - 0.0634488, 0.174992, 0.374976, 0.970361, - 0.0670589, 0.174611, 0.401097, 0.970825, - 0.0708246, 0.174226, 0.427496, 0.971214, - 0.0742871, 0.173684, 0.453858, 0.971622, - 0.0782608, 0.173186, 0.480637, 0.972175, - 0.0813151, 0.172288, 0.508655, 0.972944, - 0.0832678, 0.170979, 0.536973, 0.973595, - 0.0855964, 0.169573, 0.565138, 0.974345, - 0.0882163, 0.168152, 0.593222, 0.975233, - 0.0901671, 0.166314, 0.621201, 0.976239, - 0.0912111, 0.163931, 0.649919, 0.977289, - 0.0916959, 0.161106, 0.678011, 0.978076, - 0.0927061, 0.158272, 0.705717, 0.979533, - 0.0925562, 0.15475, 0.733228, 0.980335, - 0.0918159, 0.150638, 0.760454, 0.981808, - 0.0908508, 0.146201, 0.786918, 0.983061, - 0.0896172, 0.141386, 0.812953, 0.984148, - 0.0871588, 0.135837, 0.838281, 0.985047, - 0.0850624, 0.130135, 0.862594, 0.986219, - 0.0818541, 0.123882, 0.88633, 0.987043, - 0.0784523, 0.117126, 0.908952, 0.988107, - 0.0749601, 0.110341, 0.930744, 0.988955, - 0.0703548, 0.102885, 0.951728, 0.989426, - 0.0662798, 0.0954167, 0.971166, 0.990421, - 0.0610834, 0.0876331, 0.989984, 0.991032, - 0.0562936, 0.0797785, 1.00765, 0.992041, - 0.0508154, 0.0718166, 1.02434, 0.992794, - 0.0454045, 0.0637125, 1.03976, 0.993691, - 0.0398194, 0.0555338, 1.05418, 0.994778, - 0.0341482, 0.0473388, 1.06772, 0.995915, - 0.028428, 0.0391016, 1.08028, 0.997109, - 0.022642, 0.0309953, 1.09185, 0.998095, - 0.0168738, 0.0230288, 1.10247, 0.998985, - 0.0111274, 0.0150722, 1.11229, 0.999581, - 0.00543881, 0.00740605, 1.12131, 1.00003, 0.000162239, - 0.000105549, 1.12946, 0.959505, - 3.93734e-06, 0.196876, 1.91893e-05, 0.959599, - 9.92157e-05, 0.196895, 0.000483544, 0.959641, - 0.000396868, 0.196903, 0.0019342, 0.959599, - 0.000892948, 0.196895, 0.00435193, 0.959603, - 0.00158747, 0.196896, 0.0077368, 0.959604, - 0.00248042, 0.196896, 0.0120888, 0.959605, - 0.00357184, 0.196896, 0.0174082, 0.959605, - 0.00486169, 0.196896, 0.0236949, 0.959613, - 0.00635008, 0.196897, 0.0309497, 0.959619, - 0.00803696, 0.196898, 0.0391725, 0.959636, - 0.00992255, 0.196901, 0.0483649, 0.959634, - 0.0120067, 0.1969, 0.0585266, 0.959675, - 0.0142898, 0.196906, 0.0696609, 0.959712, - 0.0167717, 0.196911, 0.0817678, 0.959752, - 0.0194524, 0.196918, 0.0948494, 0.959807, - 0.0223321, 0.196925, 0.10891, 0.959828, - 0.0254091, 0.196924, 0.123947, 0.959906, - 0.0286815, 0.196934, 0.139968, 0.960005, - 0.0321371, 0.196944, 0.156968, 0.960071, - 0.0357114, 0.196936, 0.17491, 0.960237, - 0.0389064, 0.196882, 0.193597, 0.960367, - 0.041623, 0.196731, 0.21285, 0.960562, - 0.0452655, 0.196654, 0.233075, 0.960735, - 0.0496207, 0.196643, 0.253941, 0.960913, - 0.0549379, 0.196774, 0.275278, 0.961121, - 0.0603414, 0.196893, 0.297733, 0.96139, - 0.0644244, 0.196717, 0.321877, 0.961818, - 0.067556, 0.196314, 0.346476, 0.962175, - 0.0712709, 0.195917, 0.371907, 0.96255, - 0.0752848, 0.1955, 0.397916, 0.963164, - 0.0792073, 0.195026, 0.424229, 0.963782, - 0.0828225, 0.194424, 0.450637, 0.964306, - 0.0873119, 0.193831, 0.477288, 0.964923, - 0.0911051, 0.192973, 0.504716, 0.966048, - 0.093251, 0.19151, 0.533053, 0.967024, - 0.0958983, 0.190013, 0.561366, 0.968038, - 0.09835, 0.188253, 0.589464, 0.969152, - 0.100754, 0.186257, 0.617433, 0.970557, - 0.102239, 0.183775, 0.645801, 0.972104, - 0.102767, 0.180645, 0.674278, 0.973203, - 0.103492, 0.177242, 0.702004, 0.975123, - 0.103793, 0.17345, 0.729529, 0.97641, - 0.102839, 0.168886, 0.756712, 0.978313, - 0.101687, 0.163892, 0.783801, 0.980036, - 0.100314, 0.158439, 0.809671, 0.981339, - 0.097836, 0.152211, 0.835402, 0.982794, - 0.0950006, 0.145679, 0.860081, 0.984123, - 0.0920994, 0.138949, 0.883757, 0.984918, - 0.0878641, 0.131283, 0.90685, 0.985999, - 0.083939, 0.123464, 0.928786, 0.987151, - 0.0791234, 0.115324, 0.94983, 0.987827, - 0.0739332, 0.106854, 0.96962, 0.988806, - 0.0688088, 0.0982691, 0.98861, 0.989588, - 0.0628962, 0.0893456, 1.00667, 0.990438, - 0.0573146, 0.0805392, 1.02344, 0.991506, - 0.0509433, 0.0713725, 1.03933, 0.992492, - 0.0448724, 0.0623732, 1.05378, 0.993663, - 0.0383497, 0.0530838, 1.06747, 0.994956, - 0.0319593, 0.0439512, 1.08007, 0.99634, - 0.025401, 0.0347803, 1.09182, 0.99761, - 0.0189687, 0.0257954, 1.1025, 0.99863, - 0.0124441, 0.0169893, 1.11247, 0.99947, - 0.00614003, 0.00829498, 1.12151, 1.00008, 0.000216624, - 0.000146107, 1.12993, 0.950129, - 4.34955e-06, 0.217413, 1.90081e-05, 0.950264, - 0.00010957, 0.217444, 0.00047884, 0.9503, - 0.000438299, 0.217451, 0.00191543, 0.950246, - 0.000986124, 0.21744, 0.00430951, 0.950246, - 0.00175311, 0.21744, 0.00766137, 0.950245, - 0.00273923, 0.21744, 0.011971, 0.950253, - 0.00394453, 0.217441, 0.0172385, 0.950258, - 0.00536897, 0.217442, 0.0234641, 0.950267, - 0.00701262, 0.217444, 0.030648, 0.950277, - 0.00887551, 0.217446, 0.038791, 0.950284, - 0.0109576, 0.217446, 0.0478931, 0.950312, - 0.0132591, 0.217451, 0.0579568, 0.950334, - 0.01578, 0.217454, 0.0689821, 0.950378, - 0.0185204, 0.217462, 0.0809714, 0.950417, - 0.0214803, 0.217467, 0.0939265, 0.950488, - 0.0246594, 0.217479, 0.10785, 0.950534, - 0.0280565, 0.217483, 0.122743, 0.950633, - 0.0316685, 0.217498, 0.138611, 0.950698, - 0.0354787, 0.217499, 0.155442, 0.950844, - 0.0394003, 0.217507, 0.173208, 0.950999, - 0.0426812, 0.217419, 0.191605, 0.951221, - 0.0461302, 0.217317, 0.21084, 0.951412, - 0.0502131, 0.217238, 0.230945, 0.951623, - 0.0549183, 0.21722, 0.251745, 0.951867, - 0.0604493, 0.217306, 0.273001, 0.952069, - 0.0665189, 0.217466, 0.294874, 0.952459, - 0.0709179, 0.217266, 0.318732, 0.952996, - 0.0746112, 0.216891, 0.34318, 0.953425, - 0.0789252, 0.216503, 0.36849, 0.953885, - 0.0833293, 0.216042, 0.394373, 0.954617, - 0.087371, 0.215469, 0.420505, 0.955429, - 0.0914054, 0.214802, 0.446907, 0.956068, - 0.0961671, 0.214146, 0.473522, 0.957094, - 0.10048, 0.213286, 0.50052, 0.958372, - 0.103248, 0.211796, 0.528715, 0.959654, - 0.106033, 0.21016, 0.557065, 0.961305, - 0.108384, 0.208149, 0.585286, 0.962785, - 0.111122, 0.206024, 0.613334, 0.964848, - 0.112981, 0.203442, 0.641334, 0.966498, - 0.113717, 0.19996, 0.669955, 0.968678, - 0.114121, 0.196105, 0.698094, 0.970489, - 0.114524, 0.191906, 0.725643, 0.972903, - 0.113792, 0.186963, 0.752856, 0.974701, - 0.112406, 0.181343, 0.780013, 0.976718, - 0.110685, 0.175185, 0.806268, 0.978905, - 0.108468, 0.168535, 0.832073, 0.980267, - 0.105061, 0.161106, 0.857149, 0.981967, - 0.101675, 0.153387, 0.881145, 0.983063, - 0.0974492, 0.145199, 0.904255, 0.984432, - 0.0925815, 0.136527, 0.926686, 0.985734, - 0.0877983, 0.127584, 0.947901, 0.986228, - 0.081884, 0.118125, 0.968111, 0.98719, - 0.0761208, 0.108594, 0.98719, 0.988228, - 0.0698196, 0.0989996, 1.00559, 0.989046, - 0.0632739, 0.0890074, 1.02246, 0.990242, - 0.056522, 0.0790832, 1.03841, 0.991252, - 0.0495272, 0.0689182, 1.05347, 0.992542, - 0.0425373, 0.0588592, 1.06724, 0.994096, - 0.0353198, 0.0486833, 1.08009, 0.995593, - 0.028235, 0.0385977, 1.09177, 0.99711, - 0.0209511, 0.0286457, 1.10274, 0.998263, - 0.0139289, 0.0188497, 1.11262, 0.999254, - 0.0067359, 0.009208, 1.12191, 0.999967, 0.000141846, - 6.57764e-05, 1.13024, 0.935608, - 4.74692e-06, 0.236466, 1.87817e-05, 0.93996, - 0.00011971, 0.237568, 0.000473646, 0.939959, - 0.000478845, 0.237567, 0.0018946, 0.939954, - 0.0010774, 0.237566, 0.00426284, 0.939956, - 0.00191538, 0.237566, 0.00757842, 0.939954, - 0.00299277, 0.237566, 0.0118413, 0.93996, - 0.00430961, 0.237567, 0.0170518, 0.939969, - 0.00586589, 0.237569, 0.02321, 0.939982, - 0.00766166, 0.237572, 0.0303164, 0.939987, - 0.00969686, 0.237572, 0.0383711, 0.939997, - 0.0119715, 0.237574, 0.0473751, 0.940031, - 0.0144858, 0.237581, 0.0573298, 0.940073, - 0.0172399, 0.237589, 0.0682366, 0.94012, - 0.0202335, 0.237598, 0.080097, 0.940162, - 0.0234663, 0.237604, 0.0929116, 0.940237, - 0.0269387, 0.237615, 0.106686, 0.940328, - 0.0306489, 0.237632, 0.121421, 0.940419, - 0.0345917, 0.237645, 0.137115, 0.940522, - 0.0387481, 0.237654, 0.153766, 0.940702, - 0.0429906, 0.237661, 0.17133, 0.940871, - 0.0465089, 0.237561, 0.189502, 0.941103, - 0.050531, 0.23748, 0.208616, 0.941369, - 0.0550657, 0.237423, 0.228595, 0.941641, - 0.0601337, 0.237399, 0.249287, 0.941903, - 0.0658804, 0.237443, 0.270467, 0.942224, - 0.0722674, 0.237597, 0.292024, 0.942633, - 0.0771788, 0.237419, 0.315272, 0.943172, - 0.0815623, 0.237068, 0.339579, 0.943691, - 0.0863973, 0.236682, 0.364717, 0.944382, - 0.0911536, 0.236213, 0.390435, 0.945392, - 0.0952967, 0.235562, 0.416425, 0.946185, - 0.0998948, 0.234832, 0.442772, 0.947212, - 0.104796, 0.234114, 0.469347, 0.948778, - 0.10928, 0.233222, 0.496162, 0.950149, - 0.113081, 0.231845, 0.523978, 0.951989, - 0.115893, 0.230005, 0.552295, 0.953921, - 0.11846, 0.227862, 0.580569, 0.955624, - 0.12115, 0.225439, 0.608698, 0.958234, - 0.123373, 0.222635, 0.636696, 0.960593, - 0.124519, 0.219093, 0.665208, 0.963201, - 0.124736, 0.214749, 0.693557, 0.965642, - 0.125012, 0.210059, 0.721334, 0.968765, - 0.124661, 0.204935, 0.748613, 0.971753, - 0.122996, 0.198661, 0.776224, 0.973751, - 0.120998, 0.191823, 0.802461, 0.976709, - 0.118583, 0.184359, 0.828399, 0.977956, - 0.115102, 0.176437, 0.853693, 0.979672, - 0.111077, 0.167681, 0.877962, 0.981816, - 0.10688, 0.158872, 0.901564, 0.98238, - 0.101469, 0.149398, 0.924057, 0.983964, - 0.0960013, 0.139436, 0.945751, 0.984933, - 0.0899626, 0.12943, 0.966272, 0.985694, - 0.0832973, 0.11894, 0.985741, 0.986822, - 0.0767082, 0.108349, 1.00407, 0.987725, - 0.0693614, 0.0976026, 1.02154, 0.98877, - 0.06211, 0.086652, 1.03757, 0.990129, - 0.0544143, 0.0756182, 1.05296, 0.991337, - 0.046744, 0.0645753, 1.06683, 0.992978, - 0.0387931, 0.0534683, 1.0798, 0.994676, - 0.030973, 0.0424137, 1.09181, 0.99645, - 0.0230311, 0.0314035, 1.10286, 0.997967, - 0.0152065, 0.0206869, 1.11291, 0.99922, - 0.00744837, 0.010155, 1.12237, 1.00002, 0.000240209, - 7.52767e-05, 1.13089, 0.922948, - 5.15351e-06, 0.255626, 1.86069e-05, 0.928785, - 0.000129623, 0.257244, 0.000468009, 0.928761, - 0.00051849, 0.257237, 0.00187202, 0.928751, - 0.0011666, 0.257235, 0.00421204, 0.928751, - 0.00207395, 0.257234, 0.0074881, 0.928754, - 0.00324055, 0.257235, 0.0117002, 0.92876, - 0.00466639, 0.257236, 0.0168486, 0.928763, - 0.00635149, 0.257237, 0.0229334, 0.928774, - 0.00829584, 0.257239, 0.029955, 0.928791, - 0.0104995, 0.257243, 0.0379139, 0.928804, - 0.0129623, 0.257245, 0.0468108, 0.928847, - 0.0156846, 0.257255, 0.0566473, 0.92889, - 0.0186661, 0.257263, 0.0674246, 0.928924, - 0.0219067, 0.257268, 0.0791433, 0.928989, - 0.0254066, 0.257282, 0.0918076, 0.92909, - 0.0291651, 0.257301, 0.105419, 0.92918, - 0.0331801, 0.257316, 0.119978, 0.92929, - 0.0374469, 0.257332, 0.135491, 0.929453, - 0.041939, 0.257357, 0.151948, 0.929586, - 0.0464612, 0.257347, 0.169275, 0.929858, - 0.0503426, 0.257269, 0.187257, 0.930125, - 0.0548409, 0.257199, 0.206204, 0.930403, - 0.0598063, 0.257149, 0.22601, 0.930726, - 0.0652437, 0.257122, 0.246561, 0.931098, - 0.0712376, 0.257153, 0.267618, 0.931396, - 0.0777506, 0.257237, 0.288993, 0.931947, - 0.0832374, 0.257124, 0.311527, 0.932579, - 0.0883955, 0.25683, 0.335697, 0.933194, - 0.0937037, 0.256444, 0.360634, 0.934013, - 0.0987292, 0.255939, 0.386126, 0.935307, - 0.103215, 0.255282, 0.412018, 0.936374, - 0.108234, 0.254538, 0.438292, 0.93776, - 0.113234, 0.253728, 0.464805, 0.939599, - 0.118013, 0.25275, 0.491464, 0.941036, - 0.122661, 0.251404, 0.518751, 0.94337, - 0.125477, 0.249435, 0.547133, 0.945318, - 0.128374, 0.247113, 0.575456, 0.947995, - 0.130996, 0.244441, 0.60372, 0.950818, - 0.133438, 0.241352, 0.63174, 0.954378, - 0.135004, 0.237849, 0.659971, 0.957151, - 0.135313, 0.233188, 0.688478, 0.960743, - 0.13521, 0.228001, 0.716767, 0.964352, - 0.135007, 0.222249, 0.744349, 0.967273, - 0.133523, 0.21542, 0.771786, 0.969767, - 0.131155, 0.208039, 0.798639, 0.973195, - 0.128492, 0.200076, 0.824774, 0.975557, - 0.125094, 0.191451, 0.850222, 0.977692, - 0.120578, 0.18184, 0.874761, 0.98026, - 0.115882, 0.172102, 0.898497, 0.981394, - 0.110372, 0.161859, 0.921636, 0.982386, - 0.10415, 0.15108, 0.943467, 0.983783, - 0.0978128, 0.140407, 0.964045, 0.98422, - 0.0906171, 0.129058, 0.98398, 0.985447, - 0.0832921, 0.117614, 1.00276, 0.986682, - 0.0754412, 0.10585, 1.02047, 0.987326, - 0.0673885, 0.0940943, 1.03678, 0.988707, - 0.0592565, 0.0822093, 1.05218, 0.990185, - 0.050717, 0.070192, 1.06652, 0.991866, - 0.0423486, 0.0582081, 1.07965, 0.993897, - 0.0336118, 0.0460985, 1.09188, 0.995841, - 0.0252178, 0.0342737, 1.10307, 0.997605, - 0.0164893, 0.0224829, 1.11324, 0.999037, - 0.00817112, 0.0110647, 1.12262, 1.00003, 0.000291686, - 0.000168673, 1.13139, 0.915304, - 5.52675e-06, 0.275999, 1.83285e-05, 0.91668, - 0.000139285, 0.276414, 0.000461914, 0.916664, - 0.00055713, 0.276409, 0.00184763, 0.916653, - 0.00125354, 0.276406, 0.00415715, 0.916651, - 0.00222851, 0.276405, 0.00739053, 0.916655, - 0.00348205, 0.276406, 0.0115478, 0.916653, - 0.00501414, 0.276405, 0.0166291, 0.916667, - 0.00682478, 0.276409, 0.0226346, 0.91668, - 0.00891398, 0.276412, 0.0295648, 0.91669, - 0.0112817, 0.276413, 0.0374199, 0.916727, - 0.013928, 0.276422, 0.0462016, 0.916759, - 0.0168528, 0.276429, 0.0559101, 0.916793, - 0.0200558, 0.276436, 0.0665466, 0.916849, - 0.0235373, 0.276448, 0.0781139, 0.916964, - 0.0272973, 0.276474, 0.0906156, 0.917047, - 0.0313344, 0.276491, 0.104051, 0.917152, - 0.0356465, 0.276511, 0.118424, 0.917286, - 0.0402271, 0.276533, 0.133736, 0.917469, - 0.0450408, 0.276564, 0.149978, 0.917686, - 0.0497872, 0.276563, 0.167057, 0.917953, - 0.0540937, 0.276493, 0.184846, 0.918228, - 0.0590709, 0.276437, 0.203614, 0.918572, - 0.0644277, 0.276398, 0.223212, 0.918918, - 0.0702326, 0.276362, 0.243584, 0.919356, - 0.076484, 0.276383, 0.264465, 0.919842, - 0.0830808, 0.276434, 0.285701, 0.920451, - 0.0892972, 0.276407, 0.307559, 0.921113, - 0.095016, 0.276128, 0.331501, 0.921881, - 0.100771, 0.275754, 0.356207, 0.923027, - 0.106029, 0.275254, 0.381477, 0.924364, - 0.111029, 0.274595, 0.40722, 0.925818, - 0.116345, 0.273841, 0.433385, 0.92746, - 0.121424, 0.272913, 0.459848, 0.929167, - 0.12657, 0.271837, 0.486493, 0.931426, - 0.131581, 0.270575, 0.513432, 0.934001, - 0.135038, 0.268512, 0.541502, 0.936296, - 0.138039, 0.266135, 0.569658, 0.939985, - 0.140687, 0.263271, 0.598375, 0.943516, - 0.143247, 0.260058, 0.626563, 0.94782, - 0.145135, 0.256138, 0.654711, 0.951023, - 0.145733, 0.251154, 0.683285, 0.955338, - 0.145554, 0.245562, 0.711831, 0.959629, - 0.145008, 0.239265, 0.739573, 0.963123, - 0.144003, 0.232064, 0.767027, 0.966742, - 0.141289, 0.224036, 0.794359, 0.969991, - 0.138247, 0.215305, 0.820361, 0.973403, - 0.134786, 0.206051, 0.846548, 0.975317, - 0.129966, 0.195914, 0.871541, 0.977647, - 0.12471, 0.185184, 0.895313, 0.980137, - 0.119086, 0.174161, 0.918398, 0.981031, - 0.112297, 0.162792, 0.940679, 0.982037, - 0.105372, 0.150952, 0.961991, 0.983164, - 0.097821, 0.138921, 0.981913, 0.983757, - 0.0897245, 0.126611, 1.00109, 0.985036, - 0.0815974, 0.114228, 1.01902, 0.986289, - 0.0727725, 0.101389, 1.03604, 0.987329, - 0.0639323, 0.0886476, 1.05149, 0.989193, - 0.0548109, 0.0756837, 1.06619, 0.990716, - 0.045687, 0.0627581, 1.07948, 0.992769, - 0.0364315, 0.0498337, 1.09172, 0.99524, - 0.0271761, 0.0370305, 1.1033, 0.997154, - 0.0179609, 0.0243959, 1.11353, 0.998845, - 0.00878063, 0.0119567, 1.12319, 1.00002, 0.000259038, - 0.000108146, 1.13177, 0.903945, - 5.91681e-06, 0.295126, 1.81226e-05, 0.903668, - 0.000148672, 0.295037, 0.000455367, 0.903677, - 0.000594683, 0.29504, 0.00182145, 0.903673, - 0.00133805, 0.295039, 0.00409831, 0.903666, - 0.00237872, 0.295036, 0.00728584, 0.903668, - 0.00371676, 0.295037, 0.0113842, 0.903679, - 0.00535212, 0.29504, 0.0163936, 0.903684, - 0.00728479, 0.295041, 0.0223141, 0.903698, - 0.00951473, 0.295044, 0.0291462, 0.903718, - 0.0120419, 0.295049, 0.0368904, 0.903754, - 0.0148664, 0.295058, 0.0455477, 0.903801, - 0.017988, 0.29507, 0.0551194, 0.903851, - 0.0214064, 0.295082, 0.0656058, 0.903921, - 0.0251219, 0.295097, 0.0770109, 0.904002, - 0.0291337, 0.295116, 0.0893354, 0.904111, - 0.033441, 0.29514, 0.102583, 0.904246, - 0.0380415, 0.295169, 0.116755, 0.904408, - 0.0429258, 0.295202, 0.131853, 0.904637, - 0.0480468, 0.295245, 0.147869, 0.904821, - 0.0529208, 0.295214, 0.164658, 0.905163, - 0.0577748, 0.295185, 0.182274, 0.905469, - 0.0631763, 0.295143, 0.200828, 0.905851, - 0.068917, 0.295112, 0.2202, 0.906322, - 0.0750861, 0.295104, 0.240372, 0.906761, - 0.0815855, 0.295086, 0.261082, 0.90735, - 0.0882138, 0.295095, 0.282123, 0.908087, - 0.095082, 0.295139, 0.303563, 0.908826, - 0.101488, 0.29492, 0.327028, 0.909832, - 0.107577, 0.294577, 0.351464, 0.911393, - 0.113033, 0.294115, 0.376497, 0.912804, - 0.118629, 0.293446, 0.402115, 0.914081, - 0.124232, 0.292581, 0.428111, 0.91637, - 0.129399, 0.29166, 0.454442, 0.91814, - 0.134892, 0.290422, 0.481024, 0.921179, - 0.140069, 0.289194, 0.507924, 0.924544, - 0.144431, 0.287421, 0.535557, 0.927995, - 0.147498, 0.284867, 0.563984, 0.931556, - 0.150197, 0.281722, 0.5923, 0.935777, - 0.152711, 0.278207, 0.620832, 0.940869, - 0.154836, 0.274148, 0.649069, 0.945994, - 0.155912, 0.269057, 0.677746, 0.949634, - 0.155641, 0.262799, 0.706293, 0.955032, - 0.154809, 0.256097, 0.734278, 0.95917, - 0.153678, 0.248618, 0.761751, 0.962931, - 0.151253, 0.239794, 0.789032, 0.966045, - 0.147625, 0.230281, 0.815422, 0.96971, - 0.143964, 0.220382, 0.841787, 0.972747, - 0.139464, 0.209846, 0.867446, 0.975545, - 0.133459, 0.198189, 0.892004, 0.978381, - 0.127424, 0.186362, 0.915458, 0.979935, - 0.120506, 0.173964, 0.937948, 0.980948, - 0.11282, 0.161429, 0.959732, 0.982234, - 0.104941, 0.148557, 0.980118, 0.982767, - 0.0962905, 0.135508, 0.999463, 0.983544, - 0.0873625, 0.122338, 1.01756, 0.984965, - 0.0783447, 0.108669, 1.03492, 0.986233, - 0.0684798, 0.0949911, 1.05087, 0.987796, - 0.0590867, 0.0811386, 1.0656, 0.989885, - 0.0489145, 0.0673099, 1.0794, 0.991821, - 0.0391, 0.0535665, 1.09174, 0.99448, - 0.029087, 0.0397529, 1.10341, 0.996769, - 0.019114, 0.0261463, 1.11383, 0.998641, - 0.00947007, 0.0128731, 1.1237, 0.999978, 0.000446316, - 0.000169093, 1.13253, 0.888362, - 6.27064e-06, 0.312578, 1.78215e-05, 0.889988, - 0.000157791, 0.313148, 0.000448451, 0.889825, - 0.000631076, 0.313092, 0.00179356, 0.88984, - 0.00141994, 0.313097, 0.00403554, 0.889828, - 0.0025243, 0.313092, 0.00717429, 0.889831, - 0.00394421, 0.313093, 0.0112099, 0.889831, - 0.00567962, 0.313093, 0.0161425, 0.889844, - 0.00773051, 0.313096, 0.0219724, 0.889858, - 0.0100968, 0.3131, 0.0286999, 0.889882, - 0.0127786, 0.313106, 0.0363256, 0.889918, - 0.0157757, 0.313116, 0.0448509, 0.889967, - 0.0190878, 0.313129, 0.0542758, 0.89003, - 0.022715, 0.313145, 0.0646032, 0.890108, - 0.0266566, 0.313165, 0.0758339, 0.890218, - 0.0309131, 0.313193, 0.0879729, 0.890351, - 0.0354819, 0.313226, 0.101019, 0.89051, - 0.0403613, 0.313263, 0.114979, 0.890672, - 0.0455385, 0.313294, 0.129848, 0.890882, - 0.0509444, 0.313333, 0.145616, 0.891189, - 0.0559657, 0.313324, 0.162122, 0.891457, - 0.0613123, 0.313281, 0.179524, 0.891856, - 0.0671488, 0.313281, 0.197855, 0.892312, - 0.0732732, 0.313268, 0.216991, 0.892819, - 0.0797865, 0.313263, 0.236924, 0.893369, - 0.0865269, 0.313247, 0.257433, 0.894045, - 0.0931592, 0.313205, 0.278215, 0.894884, - 0.100532, 0.313276, 0.299467, 0.895832, - 0.107716, 0.313205, 0.322276, 0.897043, - 0.114099, 0.312873, 0.34642, 0.898515, - 0.119941, 0.312331, 0.371187, 0.900191, - 0.126044, 0.311731, 0.396656, 0.90188, - 0.131808, 0.310859, 0.422488, 0.904359, - 0.137289, 0.309857, 0.448744, 0.906923, - 0.142991, 0.308714, 0.475239, 0.910634, - 0.148253, 0.307465, 0.501983, 0.914502, - 0.153332, 0.305774, 0.529254, 0.919046, - 0.156646, 0.303156, 0.557709, 0.923194, - 0.159612, 0.299928, 0.586267, 0.928858, - 0.162027, 0.296245, 0.614925, 0.934464, - 0.164203, 0.291832, 0.643187, 0.939824, - 0.165602, 0.286565, 0.671601, 0.944582, - 0.165383, 0.280073, 0.700213, 0.949257, - 0.164439, 0.272891, 0.728432, 0.954389, - 0.162953, 0.264771, 0.756082, 0.958595, - 0.161007, 0.255927, 0.78369, 0.962138, - 0.157243, 0.245769, 0.810769, 0.966979, - 0.152872, 0.235127, 0.836999, 0.969566, - 0.148209, 0.22347, 0.862684, 0.972372, - 0.142211, 0.211147, 0.887847, 0.975916, - 0.135458, 0.198606, 0.911843, 0.978026, - 0.128398, 0.185498, 0.934795, 0.979686, - 0.120313, 0.17171, 0.956787, 0.980748, - 0.11166, 0.158159, 0.978046, 0.981622, - 0.103035, 0.144399, 0.997693, 0.982356, - 0.0930328, 0.13001, 1.01642, 0.983308, - 0.0834627, 0.115778, 1.03366, 0.985037, - 0.0732249, 0.101327, 1.05014, 0.986493, - 0.0628145, 0.086554, 1.06507, 0.988484, - 0.0526556, 0.0720413, 1.07907, 0.991051, - 0.0415744, 0.0571151, 1.09189, 0.993523, - 0.0314275, 0.0426643, 1.10369, 0.99628, - 0.0203603, 0.0279325, 1.11423, 0.998344, - 0.0102446, 0.0138182, 1.12421, 0.999997, 0.00042612, - 0.000193628, 1.1333, 0.871555, - 6.60007e-06, 0.329176, 1.74749e-05, 0.875255, - 0.000166579, 0.330571, 0.000441051, 0.875644, - 0.000666394, 0.330718, 0.00176441, 0.875159, - 0.00149903, 0.330536, 0.00396899, 0.87516, - 0.00266493, 0.330536, 0.007056, 0.875158, - 0.00416393, 0.330535, 0.0110251, 0.87516, - 0.00599598, 0.330535, 0.0158764, 0.875163, - 0.00816108, 0.330536, 0.0216101, 0.875174, - 0.0106591, 0.330538, 0.0282266, 0.875199, - 0.0134899, 0.330545, 0.0357266, 0.875257, - 0.0166538, 0.330563, 0.0441117, 0.875304, - 0.0201501, 0.330575, 0.0533821, 0.875373, - 0.0239785, 0.330595, 0.0635395, 0.875464, - 0.0281389, 0.330619, 0.0745872, 0.875565, - 0.0326301, 0.330645, 0.0865255, 0.875691, - 0.0374516, 0.330676, 0.0993599, 0.875897, - 0.0425993, 0.330733, 0.113093, 0.876091, - 0.0480576, 0.330776, 0.127722, 0.876353, - 0.0537216, 0.330826, 0.143227, 0.876649, - 0.0589807, 0.330809, 0.159462, 0.877034, - 0.0647865, 0.330819, 0.176642, 0.877443, - 0.0709789, 0.330817, 0.194702, 0.877956, - 0.0774782, 0.330832, 0.213577, 0.878499, - 0.0843175, 0.330822, 0.233246, 0.879144, - 0.0912714, 0.330804, 0.253512, 0.879982, - 0.0980824, 0.330766, 0.274137, 0.88097, - 0.105823, 0.330864, 0.295209, 0.882051, - 0.113671, 0.330896, 0.317226, 0.883397, - 0.120303, 0.330545, 0.341068, 0.884987, - 0.12667, 0.330068, 0.365613, 0.886789, - 0.133118, 0.329418, 0.390807, 0.889311, - 0.139024, 0.328683, 0.416494, 0.891995, - 0.144971, 0.327729, 0.442618, 0.895106, - 0.150747, 0.326521, 0.469131, 0.899527, - 0.156283, 0.325229, 0.495921, 0.90504, - 0.161707, 0.32378, 0.523162, 0.909875, - 0.165661, 0.32122, 0.55092, 0.91561, - 0.168755, 0.317942, 0.579928, 0.921225, - 0.171193, 0.313983, 0.608539, 0.927308, - 0.17319, 0.309636, 0.636854, 0.933077, - 0.174819, 0.304262, 0.66523, 0.938766, - 0.175002, 0.297563, 0.693609, 0.943667, - 0.173946, 0.289613, 0.722157, 0.949033, - 0.172221, 0.281227, 0.750021, 0.953765, - 0.169869, 0.271545, 0.777466, 0.95804, - 0.166578, 0.261034, 0.804853, 0.962302, - 0.161761, 0.249434, 0.831569, 0.966544, - 0.156636, 0.237484, 0.857779, 0.969372, - 0.150784, 0.224395, 0.883051, 0.972486, - 0.143672, 0.210786, 0.907864, 0.975853, - 0.135772, 0.196556, 0.931223, 0.977975, - 0.127942, 0.182307, 0.954061, 0.979122, - 0.118347, 0.167607, 0.97531, 0.980719, - 0.109112, 0.152739, 0.995666, 0.981223, - 0.0991789, 0.137932, 1.01475, 0.98216, - 0.0883553, 0.122692, 1.03253, 0.983379, - 0.0780825, 0.107493, 1.04917, 0.985434, - 0.0665646, 0.0917791, 1.06464, 0.987332, - 0.0557714, 0.0764949, 1.07896, 0.990004, - 0.0442805, 0.060721, 1.09199, 0.992975, - 0.0331676, 0.0452284, 1.10393, 0.995811, - 0.0219547, 0.0297934, 1.11476, 0.9982, - 0.0107613, 0.0146415, 1.12484, 1.00002, 0.000248678, - 0.00014555, 1.13413, 0.859519, - 6.93595e-06, 0.347264, 1.71673e-05, 0.859843, - 0.00017503, 0.347394, 0.000433219, 0.859656, - 0.000700076, 0.347319, 0.00173277, 0.859671, - 0.00157517, 0.347325, 0.00389875, 0.859669, - 0.00280028, 0.347324, 0.00693112, 0.85967, - 0.0043754, 0.347324, 0.01083, 0.859665, - 0.00630049, 0.347321, 0.0155954, 0.859685, - 0.0085755, 0.347328, 0.0212278, 0.859694, - 0.0112003, 0.347329, 0.0277273, 0.859718, - 0.0141747, 0.347336, 0.0350946, 0.85976, - 0.0174988, 0.347348, 0.0433314, 0.85982, - 0.0211722, 0.347366, 0.0524384, 0.859892, - 0.0251941, 0.347387, 0.0624168, 0.860006, - 0.0295649, 0.347422, 0.0732708, 0.860122, - 0.0342825, 0.347453, 0.0849999, 0.860282, - 0.0393462, 0.347499, 0.0976102, 0.860482, - 0.0447513, 0.347554, 0.111104, 0.860719, - 0.0504775, 0.347614, 0.125479, 0.860998, - 0.0563577, 0.347666, 0.140703, 0.861322, - 0.0619473, 0.347662, 0.156681, 0.861724, - 0.0681277, 0.347684, 0.173597, 0.862198, - 0.0746567, 0.347709, 0.191371, 0.862733, - 0.0815234, 0.347727, 0.209976, 0.863371, - 0.0886643, 0.347744, 0.229351, 0.86414, - 0.0957908, 0.347734, 0.24934, 0.865138, - 0.102912, 0.34772, 0.269797, 0.866182, - 0.110924, 0.3478, 0.290654, 0.867436, - 0.119223, 0.347911, 0.312074, 0.869087, - 0.126197, 0.347649, 0.335438, 0.870859, - 0.133145, 0.347222, 0.359732, 0.872997, - 0.139869, 0.346645, 0.38467, 0.875939, - 0.146089, 0.345935, 0.41019, 0.879012, - 0.152334, 0.345012, 0.436218, 0.883353, - 0.15821, 0.343924, 0.462641, 0.888362, - 0.164097, 0.342636, 0.489449, 0.895026, - 0.169528, 0.341351, 0.516629, 0.900753, - 0.174408, 0.339115, 0.544109, 0.906814, - 0.17751, 0.335809, 0.572857, 0.912855, - 0.180101, 0.331597, 0.601554, 0.919438, - 0.182116, 0.32698, 0.630198, 0.925962, - 0.183494, 0.321449, 0.658404, 0.931734, - 0.184159, 0.314595, 0.686625, 0.93762, - 0.18304, 0.306462, 0.71531, 0.943858, - 0.181323, 0.297514, 0.744272, 0.948662, - 0.178683, 0.287447, 0.771462, 0.953299, - 0.175379, 0.276166, 0.798593, 0.957346, - 0.170395, 0.263758, 0.8256, 0.962565, - 0.165042, 0.251019, 0.852575, 0.966075, - 0.158655, 0.237011, 0.878316, 0.969048, - 0.151707, 0.222518, 0.90329, 0.972423, - 0.143271, 0.207848, 0.927745, 0.975833, - 0.134824, 0.192463, 0.950859, 0.977629, - 0.125444, 0.1768, 0.972947, 0.978995, - 0.114949, 0.161033, 0.993263, 0.980533, - 0.104936, 0.145523, 1.01337, 0.980745, - 0.0935577, 0.129799, 1.03128, 0.981814, - 0.0822956, 0.113486, 1.04825, 0.983943, - 0.0710082, 0.0972925, 1.06405, 0.986141, - 0.0587931, 0.0808138, 1.0785, 0.988878, - 0.0472755, 0.0644915, 1.09204, 0.992132, - 0.0349128, 0.0478128, 1.10413, 0.9953, - 0.0232407, 0.031621, 1.11527, 0.998117, - 0.0112713, 0.0154935, 1.12551, 1.00003, 0.000339743, - 0.000195763, 1.13504, 0.845441, - 7.29126e-06, 0.364305, 1.69208e-05, 0.843588, - 0.000183164, 0.363506, 0.000425067, 0.843412, - 0.00073253, 0.36343, 0.00169999, 0.843401, - 0.00164818, 0.363426, 0.00382495, 0.843399, - 0.00293008, 0.363425, 0.00679993, 0.843401, - 0.00457822, 0.363425, 0.010625, 0.843394, - 0.00659249, 0.363421, 0.0153002, 0.843398, - 0.00897282, 0.363421, 0.0208258, 0.843415, - 0.0117191, 0.363426, 0.0272024, 0.843438, - 0.0148312, 0.363432, 0.0344305, 0.843483, - 0.018309, 0.363447, 0.0425116, 0.84356, - 0.0221521, 0.363472, 0.0514471, 0.843646, - 0.0263597, 0.363499, 0.061238, 0.843743, - 0.0309315, 0.363527, 0.0718873, 0.84388, - 0.0358658, 0.363569, 0.0833969, 0.844079, - 0.0411624, 0.363631, 0.0957742, 0.844279, - 0.0468128, 0.363688, 0.109015, 0.844549, - 0.0527923, 0.363761, 0.123124, 0.844858, - 0.0588204, 0.363817, 0.138044, 0.84522, - 0.0647573, 0.36383, 0.153755, 0.845669, - 0.0713181, 0.363879, 0.170394, 0.846155, - 0.0781697, 0.363908, 0.187861, 0.846789, - 0.0853913, 0.363969, 0.206176, 0.847502, - 0.0928086, 0.363999, 0.225244, 0.8484, - 0.10005, 0.363997, 0.244926, 0.849461, - 0.107615, 0.364008, 0.265188, 0.850562, - 0.115814, 0.364055, 0.28587, 0.851962, - 0.124334, 0.364179, 0.306926, 0.854326, - 0.131995, 0.364233, 0.329605, 0.856295, - 0.139338, 0.363856, 0.35359, 0.858857, - 0.146346, 0.363347, 0.37831, 0.862428, - 0.152994, 0.362807, 0.403722, 0.866203, - 0.159463, 0.361963, 0.429537, 0.871629, - 0.165623, 0.36112, 0.456, 0.877365, - 0.171649, 0.359917, 0.482773, 0.883744, - 0.177151, 0.35848, 0.509705, 0.890693, - 0.182381, 0.356523, 0.537215, 0.897278, - 0.186076, 0.3533, 0.565493, 0.903958, - 0.188602, 0.349095, 0.594293, 0.910908, - 0.190755, 0.344215, 0.623165, 0.918117, - 0.192063, 0.338606, 0.651573, 0.924644, - 0.192758, 0.331544, 0.679869, 0.931054, - 0.192238, 0.323163, 0.708668, 0.937303, - 0.190035, 0.313529, 0.737201, 0.943387, - 0.187162, 0.303152, 0.764977, 0.948494, - 0.183876, 0.29146, 0.792683, 0.952546, - 0.178901, 0.277917, 0.819228, 0.958077, - 0.173173, 0.264753, 0.846559, 0.962462, - 0.16645, 0.25002, 0.872962, 0.966569, - 0.159452, 0.234873, 0.898729, 0.969108, - 0.15074, 0.218752, 0.923126, 0.973072, - 0.141523, 0.202673, 0.947278, 0.975452, - 0.132075, 0.186326, 0.969938, 0.977784, - 0.121257, 0.169396, 0.991325, 0.97899, - 0.110182, 0.153044, 1.01123, 0.979777, - 0.0989634, 0.136485, 1.0299, 0.980865, - 0.0865894, 0.119343, 1.04727, 0.982432, - 0.0746115, 0.102452, 1.06341, 0.984935, - 0.0621822, 0.0852423, 1.07834, 0.987776, - 0.0495694, 0.0678546, 1.092, 0.99103, - 0.0372386, 0.0506917, 1.1043, 0.99474, - 0.0244353, 0.0333316, 1.11576, 0.997768, - 0.0121448, 0.0164348, 1.12617, 1.00003, 0.00031774, - 0.000169504, 1.13598, 0.825551, - 7.56799e-06, 0.378425, 1.65099e-05, 0.82664, - 0.000190922, 0.378923, 0.000416504, 0.826323, - 0.000763495, 0.378779, 0.0016656, 0.826359, - 0.00171789, 0.378795, 0.00374768, 0.82636, - 0.00305402, 0.378795, 0.00666259, 0.826368, - 0.00477185, 0.378798, 0.0104104, 0.826364, - 0.00687131, 0.378795, 0.0149912, 0.826368, - 0.00935232, 0.378795, 0.0204054, 0.826376, - 0.0122146, 0.378797, 0.0266532, 0.826399, - 0.0154581, 0.378803, 0.0337355, 0.82646, - 0.0190825, 0.378824, 0.0416537, 0.826525, - 0.0230873, 0.378846, 0.0504091, 0.826614, - 0.0274719, 0.378876, 0.0600032, 0.82674, - 0.0322355, 0.378917, 0.0704393, 0.826888, - 0.0373766, 0.378964, 0.0817195, 0.827078, - 0.0428936, 0.379024, 0.0938492, 0.827318, - 0.0487778, 0.379099, 0.106828, 0.82764, - 0.0549935, 0.379199, 0.120659, 0.827926, - 0.0611058, 0.379227, 0.13526, 0.828325, - 0.0675054, 0.379275, 0.150713, 0.828801, - 0.0743455, 0.379332, 0.167034, 0.8294, - 0.0815523, 0.379415, 0.184209, 0.830094, - 0.0890779, 0.379495, 0.202203, 0.8309, - 0.096736, 0.379555, 0.220945, 0.831943, - 0.104135, 0.379577, 0.240306, 0.833037, - 0.112106, 0.379604, 0.260317, 0.834278, - 0.120554, 0.379668, 0.2808, 0.836192, - 0.129128, 0.3799, 0.301654, 0.838671, - 0.137541, 0.380109, 0.323502, 0.840939, - 0.14523, 0.379809, 0.347176, 0.844575, - 0.15248, 0.379593, 0.371706, 0.848379, - 0.159607, 0.37909, 0.39688, 0.853616, - 0.166267, 0.378617, 0.422702, 0.858921, - 0.172698, 0.377746, 0.448919, 0.865324, - 0.178823, 0.376749, 0.475661, 0.872207, - 0.184542, 0.375363, 0.502599, 0.880018, - 0.189836, 0.373657, 0.529914, 0.88694, - 0.194294, 0.370673, 0.557683, 0.894779, - 0.197022, 0.36662, 0.586848, 0.902242, - 0.199108, 0.36138, 0.615831, 0.909914, - 0.200398, 0.355434, 0.644478, 0.917088, - 0.20094, 0.348173, 0.672905, 0.923888, - 0.200671, 0.339482, 0.701327, 0.930495, - 0.198773, 0.32956, 0.730101, 0.937247, - 0.195394, 0.318363, 0.758383, 0.943108, - 0.191956, 0.306323, 0.786539, 0.948296, - 0.187227, 0.292576, 0.813637, 0.953472, - 0.181165, 0.278234, 0.840793, 0.958485, - 0.174119, 0.263054, 0.867712, 0.962714, - 0.166564, 0.246756, 0.893635, 0.966185, - 0.158181, 0.229945, 0.919028, 0.970146, - 0.148275, 0.212633, 0.943413, 0.973491, - 0.138157, 0.195229, 0.966627, 0.975741, - 0.127574, 0.178048, 0.988817, 0.977238, - 0.11554, 0.160312, 1.00924, 0.978411, - 0.10364, 0.142857, 1.02845, 0.979811, - 0.0913122, 0.125317, 1.04648, 0.98116, - 0.0782558, 0.107627, 1.06284, 0.983543, - 0.0655957, 0.0895862, 1.07798, 0.986789, - 0.0520411, 0.0713756, 1.092, 0.990292, - 0.0389727, 0.053228, 1.10484, 0.994187, - 0.025808, 0.0351945, 1.11642, 0.997499, - 0.0126071, 0.0173198, 1.12703, 0.999999, 0.000275604, - 0.000148602, 1.13674, 0.81075, - 7.8735e-06, 0.394456, 1.61829e-05, 0.808692, - 0.000198293, 0.393453, 0.000407564, 0.80846, - 0.000792877, 0.39334, 0.00162965, 0.808595, - 0.00178416, 0.393407, 0.00366711, 0.808597, - 0.00317182, 0.393408, 0.00651934, 0.808598, - 0.00495589, 0.393408, 0.0101866, 0.808591, - 0.00713627, 0.393403, 0.0146689, 0.808592, - 0.00971285, 0.393402, 0.0199667, 0.80861, - 0.0126855, 0.393407, 0.0260803, 0.808633, - 0.0160538, 0.393413, 0.0330107, 0.80868, - 0.0198175, 0.393429, 0.0407589, 0.808748, - 0.0239758, 0.393453, 0.0493264, 0.808854, - 0.0285286, 0.39349, 0.0587161, 0.808992, - 0.0334748, 0.39354, 0.0689304, 0.809141, - 0.0388116, 0.393588, 0.0799707, 0.809352, - 0.0445375, 0.39366, 0.0918432, 0.809608, - 0.0506427, 0.393742, 0.104549, 0.809915, - 0.0570708, 0.393834, 0.118085, 0.810253, - 0.0633526, 0.393885, 0.132377, 0.810687, - 0.0700966, 0.393953, 0.147537, 0.811233, - 0.0772274, 0.394047, 0.163543, 0.811865, - 0.0847629, 0.394148, 0.180394, 0.812648, - 0.0925663, 0.394265, 0.198051, 0.813583, - 0.100416, 0.394363, 0.216443, 0.814683, - 0.108119, 0.394402, 0.235502, 0.815948, - 0.11644, 0.394489, 0.255242, 0.817278, - 0.125036, 0.394542, 0.275441, 0.819605, - 0.133655, 0.39486, 0.296094, 0.822256, - 0.142682, 0.395248, 0.317309, 0.825349, - 0.150756, 0.395241, 0.340516, 0.829605, - 0.158392, 0.395285, 0.364819, 0.83391, - 0.165801, 0.394922, 0.389736, 0.839808, - 0.172677, 0.394691, 0.415409, 0.845708, - 0.179448, 0.394006, 0.441546, 0.853025, - 0.185746, 0.393279, 0.46832, 0.859666, - 0.191684, 0.391655, 0.495302, 0.86789, - 0.197146, 0.390068, 0.52262, 0.875845, - 0.201904, 0.38727, 0.550336, 0.882634, - 0.205023, 0.382688, 0.578825, 0.891076, - 0.207098, 0.377543, 0.608103, 0.900589, - 0.208474, 0.371752, 0.63723, 0.90791, - 0.209068, 0.364016, 0.665769, 0.915971, - 0.208655, 0.355593, 0.694428, 0.923455, - 0.20729, 0.345439, 0.723224, 0.931514, - 0.203821, 0.334099, 0.751925, 0.937885, - 0.19986, 0.321069, 0.780249, 0.943136, - 0.194993, 0.306571, 0.8077, 0.948818, - 0.189132, 0.291556, 0.83497, 0.954433, - 0.181617, 0.275745, 0.86188, 0.959078, - 0.173595, 0.258695, 0.888562, 0.962705, - 0.164855, 0.240825, 0.914008, 0.966753, - 0.155129, 0.22268, 0.939145, 0.970704, - 0.144241, 0.204542, 0.963393, 0.973367, - 0.133188, 0.185927, 0.985983, 0.975984, - 0.121146, 0.167743, 1.00704, 0.976994, - 0.108366, 0.149218, 1.02715, 0.978485, - 0.0956746, 0.13131, 1.0455, 0.980074, - 0.0820733, 0.112513, 1.06221, 0.98225, - 0.0684061, 0.0938323, 1.07782, 0.98553, - 0.0549503, 0.0749508, 1.09199, 0.989529, - 0.0407857, 0.055848, 1.10508, 0.993536, - 0.0271978, 0.0368581, 1.11684, 0.997247, - 0.0132716, 0.0181845, 1.12789, 1, 0.000431817, - 0.000198809, 1.13792, 0.785886, - 8.12608e-06, 0.405036, 1.57669e-05, 0.790388, - 0.000205278, 0.407355, 0.000398297, 0.790145, - 0.000820824, 0.407231, 0.00159263, 0.790135, - 0.00184681, 0.407226, 0.00358336, 0.790119, - 0.00328316, 0.407218, 0.00637039, 0.790126, - 0.00512988, 0.40722, 0.0099539, 0.79013, - 0.00738684, 0.407221, 0.0143339, 0.790135, - 0.0100538, 0.407221, 0.0195107, 0.790134, - 0.0131306, 0.407217, 0.0254848, 0.79016, - 0.0166169, 0.407224, 0.0322572, 0.790197, - 0.020512, 0.407236, 0.0398284, 0.790273, - 0.0248157, 0.407263, 0.0482014, 0.790381, - 0.029527, 0.407304, 0.0573777, 0.790521, - 0.0346446, 0.407355, 0.0673602, 0.790704, - 0.0401665, 0.40742, 0.0781522, 0.790925, - 0.0460896, 0.407499, 0.0897582, 0.791195, - 0.0524017, 0.407589, 0.10218, 0.791522, - 0.0590121, 0.407691, 0.11541, 0.791878, - 0.0654876, 0.407748, 0.12939, 0.792361, - 0.0725207, 0.407849, 0.144237, 0.792942, - 0.0799844, 0.407963, 0.159924, 0.79362, - 0.0877896, 0.408087, 0.176425, 0.794529, - 0.0958451, 0.408259, 0.193733, 0.795521, - 0.103827, 0.408362, 0.211756, 0.796778, - 0.111937, 0.408482, 0.230524, 0.798027, - 0.120521, 0.408547, 0.249967, 0.799813, - 0.129242, 0.408721, 0.269926, 0.802387, - 0.138048, 0.409148, 0.290338, 0.805279, - 0.147301, 0.409641, 0.311193, 0.809251, - 0.155895, 0.410154, 0.333611, 0.813733, - 0.163942, 0.410297, 0.357615, 0.819081, - 0.171666, 0.410373, 0.382339, 0.825427, - 0.178905, 0.410348, 0.407828, 0.83172, - 0.185812, 0.409486, 0.434034, 0.83877, - 0.192318, 0.408776, 0.460493, 0.845817, - 0.198249, 0.407176, 0.487346, 0.854664, - 0.204034, 0.405719, 0.514832, 0.863495, - 0.208908, 0.403282, 0.542401, 0.871883, - 0.212765, 0.399293, 0.570683, 0.88065, - 0.214911, 0.393803, 0.599947, 0.89004, - 0.216214, 0.387536, 0.62932, 0.898476, - 0.216745, 0.379846, 0.658319, 0.906738, - 0.216387, 0.370625, 0.687138, 0.914844, - 0.215053, 0.360139, 0.71601, 0.923877, - 0.212007, 0.348849, 0.745124, 0.931925, - 0.207481, 0.335639, 0.773366, 0.938054, - 0.202418, 0.320798, 0.801636, 0.943895, - 0.196507, 0.304772, 0.829055, 0.949468, - 0.189009, 0.288033, 0.856097, 0.955152, - 0.180539, 0.270532, 0.88301, 0.959403, - 0.171437, 0.251639, 0.909296, 0.963309, - 0.161661, 0.232563, 0.934868, 0.967399, - 0.150425, 0.213231, 0.959662, 0.972009, - 0.138659, 0.194247, 0.98302, 0.97433, - 0.126595, 0.174718, 1.00517, 0.975823, - 0.113205, 0.155518, 1.02566, 0.976371, - 0.0996096, 0.136709, 1.04418, 0.978705, - 0.0860754, 0.117571, 1.06146, 0.981477, - 0.0714438, 0.0980046, 1.07777, 0.984263, - 0.0572304, 0.0782181, 1.09214, 0.988423, - 0.0428875, 0.0584052, 1.10553, 0.993, - 0.0282442, 0.038522, 1.11758, 0.99704, - 0.0140183, 0.0190148, 1.12864, 0.999913, 0.000369494, - 0.000145203, 1.13901, 0.777662, - 8.4153e-06, 0.423844, 1.54403e-05, 0.770458, - 0.000211714, 0.419915, 0.00038845, 0.770716, - 0.000846888, 0.420055, 0.00155386, 0.770982, - 0.00190567, 0.420202, 0.00349653, 0.770981, - 0.00338782, 0.420201, 0.00621606, 0.77098, - 0.00529338, 0.4202, 0.00971274, 0.770983, - 0.00762223, 0.4202, 0.0139867, 0.770985, - 0.0103741, 0.420198, 0.0190381, 0.770996, - 0.0135489, 0.4202, 0.0248677, 0.771029, - 0.0171461, 0.420212, 0.0314764, 0.771052, - 0.0211647, 0.420215, 0.0388648, 0.771131, - 0.0256048, 0.420245, 0.047036, 0.771235, - 0.0304647, 0.420284, 0.0559911, 0.771383, - 0.0357436, 0.420341, 0.0657346, 0.771591, - 0.0414392, 0.420423, 0.0762694, 0.771819, - 0.0475462, 0.420506, 0.0875984, 0.772123, - 0.0540506, 0.420617, 0.099727, 0.772464, - 0.060797, 0.42072, 0.112637, 0.772855, - 0.0675393, 0.420799, 0.126313, 0.773317, - 0.0748323, 0.420893, 0.140824, 0.773981, - 0.0825681, 0.421058, 0.15617, 0.774746, - 0.0906307, 0.421226, 0.172322, 0.77566, - 0.0988982, 0.421397, 0.189253, 0.776837, - 0.106994, 0.421569, 0.206912, 0.778097, - 0.115528, 0.421704, 0.225359, 0.779588, - 0.124317, 0.421849, 0.24447, 0.781574, - 0.133139, 0.422097, 0.264156, 0.784451, - 0.142179, 0.422615, 0.284318, 0.787682, - 0.15165, 0.423269, 0.304902, 0.792433, - 0.160771, 0.424396, 0.3265, 0.797359, - 0.169166, 0.424772, 0.35014, 0.803986, - 0.177149, 0.425475, 0.374768, 0.809504, - 0.184745, 0.424996, 0.399928, 0.815885, - 0.19173, 0.424247, 0.425796, 0.823513, - 0.198525, 0.423515, 0.452287, 0.832549, - 0.204709, 0.422787, 0.479321, 0.841653, - 0.210447, 0.421187, 0.506718, 0.850401, - 0.215501, 0.418519, 0.53432, 0.859854, - 0.219752, 0.414715, 0.56242, 0.869364, - 0.222305, 0.409462, 0.591558, 0.878837, - 0.223744, 0.402926, 0.621074, 0.888636, - 0.224065, 0.395043, 0.650538, 0.898132, - 0.223742, 0.38564, 0.679538, 0.907181, - 0.222308, 0.375378, 0.708674, 0.915621, - 0.219837, 0.363212, 0.737714, 0.9239, - 0.215233, 0.349313, 0.767014, 0.931644, - 0.209592, 0.334162, 0.795133, 0.938887, - 0.203644, 0.317943, 0.823228, 0.945282, - 0.196349, 0.300581, 0.850822, 0.950758, - 0.18742, 0.282195, 0.877594, 0.956146, - 0.177879, 0.262481, 0.904564, 0.960355, - 0.167643, 0.242487, 0.930741, 0.965256, - 0.156671, 0.222668, 0.955868, 0.968029, - 0.144123, 0.201907, 0.979869, 0.97251, - 0.131305, 0.18202, 1.00291, 0.974925, - 0.118335, 0.161909, 1.02392, 0.975402, - 0.103714, 0.142129, 1.0433, 0.976987, - 0.089415, 0.122447, 1.06089, 0.979677, - 0.0748858, 0.102248, 1.07713, 0.983184, - 0.0596086, 0.0814851, 1.09218, 0.987466, - 0.0447671, 0.0609484, 1.10585, 0.992348, - 0.0295217, 0.0401835, 1.11829, 0.996674, - 0.0143917, 0.0198163, 1.12966, 1.00003, 0.000321364, - 0.000149983, 1.1402, 0.757901, - 8.69074e-06, 0.436176, 1.51011e-05, 0.751195, - 0.000217848, 0.432317, 0.000378533, 0.751178, - 0.000871373, 0.432307, 0.0015141, 0.751195, - 0.00196061, 0.432317, 0.0034068, 0.751198, - 0.00348552, 0.432318, 0.00605659, 0.751195, - 0.00544599, 0.432315, 0.00946353, 0.751207, - 0.00784203, 0.43232, 0.013628, 0.751213, - 0.0106732, 0.43232, 0.0185499, 0.751221, - 0.0139393, 0.432319, 0.0242302, 0.751244, - 0.0176398, 0.432325, 0.0306694, 0.7513, - 0.0217743, 0.432348, 0.0378698, 0.751358, - 0.0263412, 0.432367, 0.0458321, 0.751458, - 0.0313396, 0.432404, 0.0545587, 0.751608, - 0.0367682, 0.432464, 0.0640543, 0.7518, - 0.0426246, 0.43254, 0.0743222, 0.752065, - 0.0489031, 0.432645, 0.0853668, 0.752376, - 0.0555828, 0.432762, 0.0971911, 0.752715, - 0.0623861, 0.432859, 0.109768, 0.753137, - 0.069415, 0.432958, 0.123126, 0.753676, - 0.0770039, 0.433099, 0.137308, 0.754345, - 0.084971, 0.433272, 0.15229, 0.755235, - 0.0932681, 0.433504, 0.168075, 0.756186, - 0.10171, 0.433693, 0.184625, 0.757363, - 0.110019, 0.433857, 0.201897, 0.75884, - 0.11887, 0.434102, 0.220014, 0.760467, - 0.127881, 0.434306, 0.238778, 0.762969, - 0.136766, 0.434751, 0.258172, 0.765823, - 0.14612, 0.43529, 0.278062, 0.769676, - 0.15566, 0.436236, 0.298437, 0.774909, - 0.165177, 0.437754, 0.319532, 0.77994, - 0.17402, 0.438343, 0.342505, 0.785757, - 0.182201, 0.438609, 0.366693, 0.792487, - 0.190104, 0.438762, 0.391668, 0.80038, - 0.197438, 0.438795, 0.417494, 0.808494, - 0.204365, 0.438226, 0.443933, 0.817695, - 0.210714, 0.437283, 0.470929, 0.828111, - 0.216651, 0.436087, 0.498569, 0.837901, - 0.221804, 0.433717, 0.526165, 0.847813, - 0.226318, 0.430133, 0.554155, 0.858314, - 0.229297, 0.425213, 0.582822, 0.868891, - 0.230999, 0.418576, 0.612847, 0.878941, - 0.231155, 0.410405, 0.642445, 0.888809, - 0.230935, 0.400544, 0.672024, 0.898089, - 0.229343, 0.389613, 0.701366, 0.908081, - 0.226886, 0.377197, 0.730763, 0.916819, - 0.222676, 0.363397, 0.759642, 0.924968, - 0.216835, 0.347437, 0.788775, 0.932906, - 0.210245, 0.32995, 0.817135, 0.940025, - 0.202992, 0.312262, 0.844912, 0.946101, - 0.19436, 0.293313, 0.872164, 0.952835, - 0.184125, 0.273638, 0.899443, 0.957347, - 0.173657, 0.252385, 0.926389, 0.961434, - 0.162204, 0.231038, 0.951947, 0.965522, - 0.14979, 0.209834, 0.976751, 0.969412, - 0.136307, 0.188821, 1.00022, 0.973902, - 0.122527, 0.168013, 1.02229, 0.974045, - 0.108213, 0.147634, 1.04199, 0.975775, - 0.0927397, 0.12705, 1.06019, 0.978383, - 0.0778212, 0.106309, 1.07711, 0.98211, - 0.0621216, 0.0849279, 1.09245, 0.986517, - 0.0463847, 0.0633519, 1.10651, 0.991696, - 0.0309353, 0.0419698, 1.11903, 0.996349, - 0.0150914, 0.0206272, 1.13073, 1.00003, 0.000442449, - 0.000231396, 1.14146, 0.727498, - 8.85074e-06, 0.441528, 1.45832e-05, 0.730897, - 0.000223525, 0.443589, 0.000368298, 0.730796, - 0.000893996, 0.443528, 0.00147303, 0.730805, - 0.00201149, 0.443533, 0.00331433, 0.730814, - 0.00357596, 0.443538, 0.00589222, 0.730815, - 0.00558734, 0.443538, 0.00920678, 0.730822, - 0.00804544, 0.44354, 0.0132582, 0.730836, - 0.0109501, 0.443545, 0.0180468, 0.730848, - 0.0143008, 0.443546, 0.0235732, 0.730871, - 0.0180969, 0.443552, 0.0298382, 0.730915, - 0.022338, 0.443567, 0.0368438, 0.730982, - 0.0270225, 0.443591, 0.044591, 0.731076, - 0.0321491, 0.443627, 0.0530831, 0.731245, - 0.0377166, 0.443699, 0.0623243, 0.73144, - 0.0437216, 0.443777, 0.0723181, 0.7317, - 0.0501576, 0.443881, 0.0830691, 0.732034, - 0.0569942, 0.444014, 0.0945809, 0.732388, - 0.0638756, 0.444113, 0.106825, 0.732853, - 0.071203, 0.444247, 0.119859, 0.733473, - 0.0790076, 0.444442, 0.13369, 0.734195, - 0.0871937, 0.444645, 0.148304, 0.735069, - 0.095696, 0.444877, 0.163702, 0.736169, - 0.10426, 0.445133, 0.179861, 0.73747, - 0.112853, 0.44537, 0.196778, 0.738991, - 0.12199, 0.445651, 0.214496, 0.740865, - 0.131153, 0.445958, 0.232913, 0.743637, - 0.140245, 0.446548, 0.251977, 0.746797, - 0.149722, 0.447246, 0.271551, 0.751517, - 0.159341, 0.448656, 0.291774, 0.756156, - 0.169106, 0.449866, 0.312455, 0.761519, - 0.178436, 0.450919, 0.334552, 0.768295, - 0.186904, 0.451776, 0.358491, 0.776613, - 0.195117, 0.452832, 0.383446, 0.783966, - 0.202695, 0.45249, 0.408945, 0.793542, - 0.20985, 0.452587, 0.435364, 0.803192, - 0.216403, 0.451852, 0.462336, 0.813892, - 0.22251, 0.450708, 0.48987, 0.824968, - 0.227676, 0.4486, 0.517697, 0.835859, - 0.232443, 0.445156, 0.545975, 0.846825, - 0.235775, 0.440351, 0.574483, 0.858085, - 0.237897, 0.433641, 0.604246, 0.868825, - 0.238074, 0.425354, 0.634101, 0.879638, - 0.237661, 0.415383, 0.664201, 0.889966, - 0.236186, 0.404136, 0.693918, 0.899479, - 0.233599, 0.390917, 0.723481, 0.908769, - 0.229737, 0.376352, 0.75258, 0.917966, - 0.223836, 0.360372, 0.781764, 0.926304, - 0.217067, 0.342551, 0.811139, 0.934626, - 0.209309, 0.324238, 0.839585, 0.941841, - 0.20071, 0.304484, 0.867044, 0.94789, - 0.190602, 0.283607, 0.894579, 0.954196, - 0.179253, 0.262205, 0.921743, 0.958383, - 0.167646, 0.239847, 0.948026, 0.963119, - 0.155073, 0.218078, 0.973296, 0.966941, - 0.141426, 0.195899, 0.998135, 0.970836, - 0.126849, 0.174121, 1.02021, 0.973301, - 0.112296, 0.153052, 1.04085, 0.97448, - 0.0964965, 0.131733, 1.05946, 0.977045, - 0.080489, 0.10997, 1.07693, 0.980751, - 0.064844, 0.0881657, 1.09254, 0.985475, - 0.0481938, 0.0657987, 1.10697, 0.991089, - 0.0319185, 0.0435215, 1.12004, 0.996122, - 0.0158088, 0.0214779, 1.13173, 1.00001, 0.000372455, - 0.000200295, 1.14291, 0.708622, - 9.07597e-06, 0.45304, 1.41962e-05, 0.711162, - 0.000228911, 0.454662, 0.000358052, 0.709812, - 0.000914446, 0.453797, 0.00143034, 0.709865, - 0.00205819, 0.453834, 0.00321935, 0.709864, - 0.00365894, 0.453833, 0.00572331, 0.709855, - 0.00571692, 0.453826, 0.00894278, 0.709862, - 0.00823201, 0.453828, 0.012878, 0.709875, - 0.011204, 0.453832, 0.0175295, 0.709896, - 0.0146323, 0.453839, 0.0228978, 0.709925, - 0.0185163, 0.453847, 0.0289839, 0.709974, - 0.0228551, 0.453866, 0.0357894, 0.710045, - 0.0276473, 0.453892, 0.0433161, 0.710133, - 0.032891, 0.453924, 0.0515665, 0.710292, - 0.0385851, 0.453992, 0.0605458, 0.710485, - 0.0447254, 0.45407, 0.0702574, 0.710769, - 0.0513051, 0.454192, 0.0807077, 0.711106, - 0.0582733, 0.454329, 0.091896, 0.711516, - 0.0652866, 0.45446, 0.103814, 0.712071, - 0.0728426, 0.454653, 0.116508, 0.712676, - 0.0808307, 0.45484, 0.129968, 0.713476, - 0.0892216, 0.455096, 0.144206, 0.714377, - 0.0979047, 0.455346, 0.159212, 0.715579, - 0.106531, 0.455647, 0.174973, 0.716977, - 0.115492, 0.455961, 0.191504, 0.71862, - 0.124821, 0.456315, 0.208835, 0.72084, - 0.134079, 0.4568, 0.226869, 0.723786, - 0.143427, 0.457521, 0.245582, 0.727464, - 0.153061, 0.458475, 0.264957, 0.732771, - 0.162768, 0.460239, 0.284948, 0.736515, - 0.172627, 0.460899, 0.30522, 0.743519, - 0.182487, 0.463225, 0.326717, 0.750041, - 0.191295, 0.464027, 0.350113, 0.758589, - 0.199746, 0.465227, 0.374782, 0.767703, - 0.207584, 0.465877, 0.400226, 0.777484, - 0.214973, 0.465996, 0.426442, 0.788792, - 0.221796, 0.466019, 0.453688, 0.800194, - 0.228038, 0.465083, 0.481246, 0.811234, - 0.233346, 0.462506, 0.509086, 0.822859, - 0.238073, 0.459257, 0.537338, 0.835082, - 0.241764, 0.454863, 0.566108, 0.846332, - 0.244241, 0.448163, 0.595126, 0.858355, - 0.244736, 0.439709, 0.625574, 0.87034, - 0.244278, 0.429837, 0.65617, 0.881027, - 0.24255, 0.418002, 0.686029, 0.891007, - 0.239912, 0.404325, 0.716039, 0.900874, - 0.236133, 0.389222, 0.745518, 0.911072, - 0.230672, 0.373269, 0.775026, 0.920359, - 0.22356, 0.355083, 0.804521, 0.928604, - 0.215591, 0.335533, 0.834045, 0.937175, - 0.206503, 0.315278, 0.861612, 0.942825, - 0.196684, 0.293653, 0.889131, 0.949805, - 0.185116, 0.271503, 0.916853, 0.955535, - 0.172703, 0.248821, 0.943541, 0.959843, - 0.159978, 0.225591, 0.970132, 0.964393, - 0.146375, 0.202719, 0.994709, 0.968008, - 0.131269, 0.179928, 1.0186, 0.971013, - 0.11569, 0.158007, 1.03928, 0.973334, - 0.1003, 0.13624, 1.05887, 0.975775, - 0.0833352, 0.1138, 1.07652, 0.979579, - 0.0668981, 0.0913141, 1.09297, 0.984323, - 0.0500902, 0.0683051, 1.10734, 0.990351, - 0.0332377, 0.0451771, 1.12084, 0.995823, - 0.0161491, 0.0221705, 1.13296, 1.0001, 0.000234083, - 0.000108712, 1.14441, 0.683895, - 9.24677e-06, 0.46015, 1.37429e-05, 0.68833, - 0.000233383, 0.463134, 0.000346865, 0.688368, - 0.000933547, 0.463159, 0.00138748, 0.688367, - 0.00210049, 0.463159, 0.00312187, 0.688369, - 0.00373415, 0.463159, 0.00555004, 0.688377, - 0.00583449, 0.463163, 0.00867216, 0.688386, - 0.00840128, 0.463166, 0.0124884, 0.688398, - 0.0114343, 0.463169, 0.0169993, 0.688418, - 0.0149329, 0.463175, 0.0222054, 0.688453, - 0.0188964, 0.463188, 0.028108, 0.688515, - 0.0233239, 0.463214, 0.0347085, 0.68857, - 0.0282136, 0.463231, 0.0420091, 0.688679, - 0.033564, 0.463276, 0.0500132, 0.688854, - 0.0393733, 0.463356, 0.0587255, 0.689038, - 0.0456354, 0.46343, 0.0681476, 0.689321, - 0.0523433, 0.463553, 0.0782897, 0.689662, - 0.059412, 0.463693, 0.0891501, 0.690188, - 0.0665736, 0.4639, 0.100735, 0.690755, - 0.0743106, 0.464107, 0.113074, 0.691405, - 0.0824722, 0.464329, 0.126161, 0.692198, - 0.0910484, 0.464585, 0.140007, 0.693196, - 0.0998778, 0.464893, 0.154612, 0.69454, - 0.108651, 0.465285, 0.169984, 0.695921, - 0.117855, 0.465596, 0.186106, 0.697749, - 0.12734, 0.466056, 0.203034, 0.700375, - 0.136714, 0.466771, 0.220703, 0.703395, - 0.146386, 0.467579, 0.239062, 0.707904, - 0.156096, 0.469067, 0.258188, 0.711673, - 0.165904, 0.469851, 0.277759, 0.717489, - 0.175812, 0.471815, 0.297935, 0.724051, - 0.185931, 0.47389, 0.318916, 0.731965, - 0.195238, 0.47587, 0.341591, 0.741151, - 0.204021, 0.477523, 0.366062, 0.751416, - 0.212113, 0.478881, 0.391396, 0.761848, - 0.21979, 0.479226, 0.417599, 0.771886, - 0.2267, 0.478495, 0.444401, 0.783998, - 0.232991, 0.477622, 0.472084, 0.796523, - 0.238645, 0.475833, 0.500193, 0.808851, - 0.243396, 0.472568, 0.52865, 0.821191, - 0.247226, 0.467857, 0.557362, 0.834261, - 0.250102, 0.461871, 0.586768, 0.846762, - 0.251056, 0.453543, 0.617085, 0.859867, - 0.250604, 0.443494, 0.647659, 0.871948, - 0.248783, 0.431711, 0.678119, 0.882967, - 0.245855, 0.417911, 0.708399, 0.892826, - 0.242168, 0.401993, 0.738256, 0.90332, - 0.237062, 0.385371, 0.767999, 0.913633, - 0.22997, 0.366837, 0.798191, 0.922774, - 0.221687, 0.346372, 0.827756, 0.931371, - 0.212345, 0.325682, 0.856425, 0.938929, - 0.20206, 0.303665, 0.884299, 0.944821, - 0.190981, 0.280786, 0.912023, 0.951792, - 0.178065, 0.2573, 0.939669, 0.957712, - 0.164634, 0.233448, 0.96655, 0.961912, - 0.150863, 0.209504, 0.992366, 0.966382, - 0.13577, 0.18597, 1.01633, 0.969588, - 0.119593, 0.162905, 1.03843, 0.971777, - 0.103203, 0.14053, 1.05841, 0.97433, - 0.0865888, 0.117909, 1.07632, 0.978686, - 0.0690829, 0.0944101, 1.09326, 0.983281, - 0.0516568, 0.0705671, 1.10796, 0.989562, - 0.034558, 0.0468592, 1.12182, 0.995465, - 0.0167808, 0.0229846, 1.1342, 0.999991, 0.000373016, - 0.000235606, 1.1459, 0.662251, - 9.39016e-06, 0.468575, 1.32714e-05, 0.666634, - 0.000237624, 0.471675, 0.000335842, 0.666411, - 0.000950385, 0.471516, 0.00134321, 0.666399, - 0.00213833, 0.471509, 0.00302221, 0.666386, - 0.0038014, 0.471499, 0.00537283, 0.666405, - 0.00593958, 0.471511, 0.00839533, 0.666406, - 0.00855253, 0.471508, 0.0120898, 0.666428, - 0.0116401, 0.471519, 0.0164569, 0.666444, - 0.0152015, 0.471522, 0.0214971, 0.66649, - 0.0192362, 0.471543, 0.027212, 0.666537, - 0.0237428, 0.471558, 0.033603, 0.666617, - 0.0287198, 0.471591, 0.0406728, 0.666718, - 0.0341647, 0.471631, 0.0484238, 0.666889, - 0.0400759, 0.47171, 0.0568621, 0.667104, - 0.0464479, 0.471805, 0.0659915, 0.667374, - 0.0532677, 0.471923, 0.0758178, 0.667772, - 0.0603805, 0.472098, 0.0863425, 0.668371, - 0.0677392, 0.472363, 0.0975917, 0.668971, - 0.0756028, 0.472596, 0.109567, 0.669696, - 0.0839293, 0.472869, 0.122272, 0.670481, - 0.0926683, 0.473126, 0.135718, 0.6715, - 0.1016, 0.473442, 0.149914, 0.672911, - 0.110566, 0.47389, 0.164882, 0.674512, - 0.119984, 0.474354, 0.180602, 0.67651, - 0.129574, 0.474922, 0.19711, 0.679292, - 0.139106, 0.475764, 0.214371, 0.682798, - 0.148993, 0.476886, 0.232405, 0.686955, - 0.158737, 0.478179, 0.251153, 0.691406, - 0.168754, 0.479432, 0.270436, 0.697438, - 0.178703, 0.481481, 0.290374, 0.704761, - 0.188955, 0.484143, 0.311044, 0.713599, - 0.198814, 0.487007, 0.333003, 0.723194, - 0.207869, 0.488962, 0.357144, 0.732601, - 0.216189, 0.489815, 0.382169, 0.744193, - 0.22398, 0.490888, 0.408227, 0.754907, - 0.231156, 0.490355, 0.434928, 0.767403, - 0.23747, 0.489548, 0.462599, 0.78107, - 0.243503, 0.488274, 0.490908, 0.793893, - 0.248114, 0.484843, 0.519421, 0.807296, - 0.25222, 0.4803, 0.548561, 0.820529, - 0.255265, 0.474097, 0.577772, 0.833716, - 0.256741, 0.466041, 0.607782, 0.848403, - 0.25637, 0.456547, 0.638807, 0.860755, - 0.254804, 0.443946, 0.670058, 0.874012, - 0.251834, 0.430852, 0.700749, 0.885619, - 0.247867, 0.414903, 0.731446, 0.896069, - 0.242634, 0.397276, 0.761191, 0.906266, - 0.236093, 0.378535, 0.791053, 0.916759, - 0.227543, 0.358038, 0.821298, 0.92523, - 0.21783, 0.335705, 0.850747, 0.93436, - 0.207534, 0.313797, 0.879258, 0.941631, - 0.195983, 0.289671, 0.907734, 0.947564, - 0.183567, 0.265319, 0.935206, 0.953681, - 0.169345, 0.240815, 0.962739, 0.960008, - 0.154909, 0.216119, 0.989227, 0.964145, - 0.140161, 0.192096, 1.01465, 0.968171, - 0.123411, 0.167855, 1.03737, 0.969859, - 0.106525, 0.144817, 1.05767, 0.972666, - 0.0891023, 0.12149, 1.0761, 0.977055, - 0.0718094, 0.0975306, 1.09336, 0.982527, - 0.0534213, 0.0730217, 1.10878, 0.989001, - 0.0355579, 0.0483366, 1.12285, 0.99512, - 0.0176383, 0.023938, 1.13548, 1.00007, 0.000368831, - 0.000211581, 1.14744, 0.651047, - 9.60845e-06, 0.484101, 1.2922e-05, 0.644145, - 0.000241347, 0.478968, 0.000324578, 0.64396, - 0.000965142, 0.478831, 0.00129798, 0.64396, - 0.00217154, 0.47883, 0.00292046, 0.643968, - 0.00386049, 0.478835, 0.00519202, 0.643974, - 0.00603186, 0.478838, 0.0081128, 0.643977, - 0.0086854, 0.478836, 0.011683, 0.643982, - 0.0118207, 0.478834, 0.0159031, 0.644024, - 0.0154374, 0.478856, 0.0207743, 0.644059, - 0.0195343, 0.478868, 0.0262975, 0.644122, - 0.0241103, 0.478896, 0.0324747, 0.644207, - 0.0291638, 0.478933, 0.039309, 0.64432, - 0.0346919, 0.478981, 0.0468029, 0.644481, - 0.0406919, 0.479053, 0.0549614, 0.644722, - 0.047159, 0.479169, 0.0637909, 0.645013, - 0.0540748, 0.479302, 0.0732974, 0.645503, - 0.0612001, 0.479541, 0.0834898, 0.646117, - 0.0687303, 0.479829, 0.0943873, 0.646707, - 0.0767846, 0.480061, 0.105991, 0.647431, - 0.0852465, 0.480343, 0.11831, 0.64831, - 0.0940719, 0.48066, 0.131348, 0.649486, - 0.103056, 0.481083, 0.14514, 0.650864, - 0.112261, 0.481528, 0.159676, 0.652604, - 0.121852, 0.482102, 0.174979, 0.654825, - 0.131505, 0.482813, 0.191079, 0.657876, - 0.141189, 0.483876, 0.207927, 0.661339, - 0.151239, 0.48499, 0.225586, 0.665463, - 0.161091, 0.486279, 0.243947, 0.670542, - 0.171235, 0.487968, 0.262957, 0.677361, - 0.181347, 0.49053, 0.282781, 0.685672, - 0.191679, 0.493862, 0.303311, 0.694551, - 0.201781, 0.49699, 0.324607, 0.703753, - 0.211164, 0.498884, 0.347916, 0.713703, - 0.219675, 0.500086, 0.372628, 0.725911, - 0.227836, 0.501554, 0.398694, 0.73862, - 0.23533, 0.502193, 0.425529, 0.752118, - 0.241786, 0.501811, 0.453209, 0.76579, - 0.247865, 0.500185, 0.481381, 0.779568, - 0.252696, 0.497159, 0.51011, 0.793991, - 0.256802, 0.492765, 0.539322, 0.808182, - 0.259942, 0.486827, 0.569078, 0.821698, - 0.261703, 0.478386, 0.598818, 0.836009, - 0.262006, 0.468772, 0.629762, 0.849824, - 0.260333, 0.456352, 0.661366, 0.863888, - 0.257398, 0.442533, 0.69295, 0.876585, - 0.253264, 0.426573, 0.723608, 0.888665, - 0.248026, 0.408964, 0.754378, 0.899537, - 0.241487, 0.389677, 0.784761, 0.9094, - 0.233463, 0.368516, 0.814688, 0.920166, - 0.223397, 0.346624, 0.845009, 0.928899, - 0.21255, 0.322717, 0.874431, 0.937156, - 0.200869, 0.298698, 0.902922, 0.943861, - 0.188387, 0.273491, 0.931356, 0.949557, - 0.174341, 0.247866, 0.958854, 0.955862, - 0.158994, 0.222496, 0.986098, 0.961721, - 0.143664, 0.197522, 1.01229, 0.965976, - 0.127412, 0.17302, 1.03571, 0.968652, - 0.109798, 0.148954, 1.05699, 0.971084, - 0.0916787, 0.125044, 1.07587, 0.975584, - 0.0739634, 0.100577, 1.09372, 0.98122, - 0.055322, 0.0753666, 1.10948, 0.988253, - 0.0366825, 0.0498899, 1.12394, 0.99482, - 0.0180389, 0.024611, 1.13694, 1.00001, 0.000229839, - 0.000188283, 1.14919, 0.613867, - 9.64198e-06, 0.479449, 1.23452e-05, 0.621485, - 0.000244534, 0.485399, 0.000313091, 0.621429, - 0.000978202, 0.485353, 0.00125245, 0.62112, - 0.00220004, 0.485114, 0.00281687, 0.621119, - 0.0039111, 0.485112, 0.00500783, 0.621122, - 0.00611091, 0.485112, 0.00782498, 0.621133, - 0.00879922, 0.485117, 0.0112687, 0.621152, - 0.0119756, 0.485125, 0.0153394, 0.621183, - 0.0156396, 0.485139, 0.0200382, 0.621227, - 0.0197898, 0.485158, 0.0253663, 0.621298, - 0.0244253, 0.485192, 0.0313261, 0.621388, - 0.0295441, 0.485233, 0.0379204, 0.621507, - 0.0351432, 0.485286, 0.0451523, 0.621693, - 0.0412198, 0.485378, 0.0530277, 0.621933, - 0.0477673, 0.485495, 0.0615522, 0.622232, - 0.0547574, 0.485635, 0.0707316, 0.622809, - 0.0619417, 0.485943, 0.0805883, 0.623407, - 0.069625, 0.486232, 0.0911267, 0.62406, - 0.077796, 0.486516, 0.102354, 0.624835, - 0.0863731, 0.486838, 0.114279, 0.625758, - 0.095251, 0.487188, 0.126902, 0.627043, - 0.104299, 0.487695, 0.140285, 0.628438, - 0.113724, 0.488163, 0.154397, 0.630325, - 0.123417, 0.488858, 0.169267, 0.632801, - 0.133137, 0.489754, 0.184941, 0.635784, - 0.143052, 0.490815, 0.20136, 0.639406, - 0.153132, 0.492048, 0.218643, 0.643872, - 0.163143, 0.49363, 0.236615, 0.6499, - 0.17333, 0.496009, 0.255449, 0.657201, - 0.183622, 0.498994, 0.275006, 0.666221, - 0.194019, 0.502888, 0.295354, 0.674419, - 0.204192, 0.505459, 0.316244, 0.683729, - 0.21406, 0.507771, 0.33849, 0.695584, - 0.222854, 0.510245, 0.363166, 0.708583, - 0.231315, 0.512293, 0.389071, 0.721233, - 0.238911, 0.512747, 0.415737, 0.735134, - 0.245657, 0.512482, 0.443331, 0.750179, - 0.251879, 0.511526, 0.471891, 0.765073, - 0.256911, 0.508935, 0.500892, 0.779794, - 0.261144, 0.504341, 0.530294, 0.794801, - 0.264316, 0.498515, 0.560144, 0.810339, - 0.266276, 0.491015, 0.590213, 0.824818, - 0.266981, 0.481126, 0.620865, 0.839375, - 0.265778, 0.468685, 0.652687, 0.853043, - 0.262748, 0.453925, 0.684759, 0.867335, - 0.258474, 0.437912, 0.716209, 0.88037, - 0.253187, 0.419648, 0.747508, 0.891711, - 0.246476, 0.39982, 0.77797, 0.902896, - 0.238735, 0.37879, 0.808586, 0.913601, - 0.22885, 0.355891, 0.838843, 0.923019, - 0.217656, 0.331773, 0.869014, 0.933432, - 0.205539, 0.307356, 0.898512, 0.939691, - 0.192595, 0.281321, 0.9269, 0.946938, - 0.178945, 0.255441, 0.955297, 0.952372, - 0.163587, 0.229013, 0.983231, 0.95909, - 0.147214, 0.203179, 1.00971, 0.963675, - 0.13064, 0.17792, 1.03438, 0.968247, - 0.113121, 0.152898, 1.05625, 0.97001, - 0.0945824, 0.128712, 1.07598, 0.974458, - 0.0755648, 0.103349, 1.094, 0.980168, - 0.0571998, 0.0776731, 1.1104, 0.987295, - 0.0377994, 0.0514445, 1.12491, 0.994432, - 0.0186417, 0.025429, 1.13851, 0.999975, 0.000542714, - 0.000282356, 1.15108, 0.592656, - 9.80249e-06, 0.486018, 1.19532e-05, 0.598467, - 0.000247275, 0.490781, 0.000301531, 0.597934, - 0.000988317, 0.490343, 0.00120517, 0.597903, - 0.00222366, 0.490319, 0.0027116, 0.597913, - 0.00395315, 0.490327, 0.00482077, 0.597919, - 0.00617653, 0.490329, 0.00753264, 0.597936, - 0.00889375, 0.490339, 0.0108478, 0.597956, - 0.0121043, 0.490347, 0.0147668, 0.597992, - 0.0158073, 0.490365, 0.0192905, 0.598032, - 0.0200017, 0.490382, 0.0244204, 0.598109, - 0.0246865, 0.49042, 0.0301593, 0.598215, - 0.0298594, 0.490474, 0.03651, 0.59833, - 0.0355167, 0.490524, 0.0434757, 0.598525, - 0.0416559, 0.490624, 0.0510629, 0.598778, - 0.0482692, 0.490753, 0.0592781, 0.599135, - 0.0553114, 0.49094, 0.0681304, 0.599802, - 0.062542, 0.491328, 0.0776467, 0.600361, - 0.0703638, 0.491598, 0.0878184, 0.60101, - 0.0786256, 0.491882, 0.0986573, 0.601811, - 0.0872962, 0.492232, 0.11018, 0.602861, - 0.0962284, 0.492684, 0.1224, 0.604167, - 0.10538, 0.493213, 0.135354, 0.605693, - 0.114896, 0.493799, 0.149034, 0.607682, - 0.124654, 0.494576, 0.163469, 0.610672, - 0.13456, 0.4959, 0.178747, 0.613313, - 0.144581, 0.496713, 0.194723, 0.617603, - 0.154703, 0.498499, 0.211617, 0.622174, - 0.16489, 0.500188, 0.229183, 0.628855, - 0.175164, 0.503072, 0.247786, 0.636963, - 0.185565, 0.506798, 0.267116, 0.644866, - 0.195911, 0.509719, 0.28702, 0.653741, - 0.206104, 0.512776, 0.307763, 0.664942, - 0.216447, 0.516812, 0.329631, 0.67633, - 0.22552, 0.519181, 0.353515, 0.690012, - 0.234316, 0.521681, 0.379226, 0.704243, - 0.242032, 0.523129, 0.405901, 0.719396, - 0.249172, 0.523768, 0.433585, 0.734471, - 0.255543, 0.522541, 0.462085, 0.750539, - 0.260697, 0.520217, 0.491233, 0.766365, - 0.26501, 0.516293, 0.521094, 0.781677, - 0.268409, 0.509708, 0.551014, 0.797132, - 0.270399, 0.501944, 0.581463, 0.812655, - 0.271247, 0.492025, 0.612402, 0.828592, - 0.270708, 0.480424, 0.643798, 0.844044, - 0.268085, 0.465955, 0.67682, 0.857305, - 0.263459, 0.448425, 0.708496, 0.87114, - 0.258151, 0.430243, 0.74046, 0.884936, - 0.251171, 0.410578, 0.771583, 0.895772, - 0.243305, 0.38862, 0.802234, 0.906961, - 0.234037, 0.365214, 0.833179, 0.917775, - 0.222714, 0.34116, 0.86353, 0.927883, - 0.210175, 0.31572, 0.893557, 0.936617, - 0.196925, 0.289159, 0.922976, 0.943384, - 0.182788, 0.261996, 0.951606, 0.949713, - 0.167965, 0.235324, 0.979958, 0.955818, - 0.151109, 0.208408, 1.00765, 0.961344, - 0.133834, 0.182591, 1.03329, 0.965469, - 0.115987, 0.156958, 1.0557, 0.968693, - 0.09746, 0.132239, 1.07583, 0.973165, - 0.0778514, 0.106195, 1.09451, 0.979387, - 0.0585067, 0.0797669, 1.11137, 0.98671, - 0.0390409, 0.0530263, 1.12643, 0.994093, - 0.019408, 0.0263163, 1.14016, 1.00002, 0.000540029, - 0.000194487, 1.15299, 0.574483, - 9.89066e-06, 0.494533, 1.14896e-05, 0.574478, - 0.000249127, 0.494528, 0.000289403, 0.574607, - 0.000996811, 0.494637, 0.00115797, 0.574396, - 0.00224241, 0.494458, 0.00260498, 0.574377, - 0.00398632, 0.49444, 0.00463102, 0.574386, - 0.00622836, 0.494445, 0.00723623, 0.574401, - 0.0089683, 0.494453, 0.010421, 0.574419, - 0.0122056, 0.49446, 0.0141859, 0.574459, - 0.0159396, 0.494481, 0.0185322, 0.574525, - 0.0201692, 0.49452, 0.0234617, 0.574587, - 0.0248924, 0.494547, 0.0289762, 0.574697, - 0.0301074, 0.494604, 0.0350797, 0.574853, - 0.0358114, 0.494688, 0.0417767, 0.575027, - 0.041999, 0.494772, 0.0490718, 0.575294, - 0.0486618, 0.494915, 0.0569728, 0.575733, - 0.0557148, 0.495173, 0.0654955, 0.576356, - 0.0630489, 0.495537, 0.0746612, 0.576944, - 0.0709285, 0.495836, 0.0844615, 0.57765, - 0.0792723, 0.496177, 0.0949142, 0.578491, - 0.0880167, 0.496563, 0.10603, 0.579639, - 0.0969462, 0.497096, 0.117841, 0.580989, - 0.10622, 0.497684, 0.130367, 0.582587, - 0.115861, 0.498337, 0.143609, 0.584951, - 0.125605, 0.499414, 0.157625, 0.587602, - 0.135608, 0.500518, 0.172413, 0.59076, - 0.145742, 0.501767, 0.187999, 0.594992, - 0.155934, 0.503542, 0.20445, 0.600656, - 0.166303, 0.506135, 0.221764, 0.607816, - 0.176681, 0.509542, 0.24002, 0.61522, - 0.187071, 0.51263, 0.258992, 0.623702, - 0.197465, 0.516021, 0.278773, 0.634192, - 0.207816, 0.520422, 0.299377, 0.644936, - 0.218183, 0.524073, 0.320802, 0.657888, - 0.2278, 0.528049, 0.34384, 0.670666, - 0.236747, 0.52986, 0.36916, 0.685626, - 0.24484, 0.531892, 0.395867, 0.701304, - 0.252071, 0.532727, 0.423488, 0.717727, - 0.258714, 0.532146, 0.452201, 0.733914, - 0.264211, 0.529883, 0.481579, 0.750529, - 0.26859, 0.5259, 0.511558, 0.76747, - 0.272046, 0.51999, 0.542042, 0.785189, - 0.274225, 0.513083, 0.572799, 0.800954, - 0.275189, 0.502936, 0.603816, 0.816962, - 0.274946, 0.490921, 0.635461, 0.83336, - 0.272695, 0.47684, 0.6676, 0.848143, - 0.268223, 0.459405, 0.70051, 0.861818, - 0.262768, 0.440319, 0.732902, 0.876828, - 0.255872, 0.420123, 0.765084, 0.889312, - 0.247703, 0.398379, 0.796391, 0.900412, - 0.238381, 0.374496, 0.827333, 0.912251, - 0.227783, 0.349874, 0.858385, 0.921792, - 0.214832, 0.323181, 0.888652, 0.931273, - 0.200949, 0.296624, 0.917763, 0.940295, - 0.186537, 0.269211, 0.947878, 0.946812, - 0.171538, 0.241447, 0.977016, 0.953588, - 0.155254, 0.213829, 1.00501, 0.958841, - 0.137156, 0.186807, 1.03179, 0.963746, - 0.118699, 0.160706, 1.05502, 0.966468, - 0.0998358, 0.135504, 1.07568, 0.971178, - 0.0805186, 0.109131, 1.09479, 0.97831, - 0.0599348, 0.0818293, 1.1123, 0.985886, - 0.0399661, 0.0545872, 1.12771, 0.994021, - 0.0198682, 0.0269405, 1.14186, 1.00009, 0.000271022, - 0.00012989, 1.15514, 0.538716, - 9.90918e-06, 0.486732, 1.09675e-05, 0.550656, - 0.000250642, 0.497518, 0.000277412, 0.55057, - 0.00100265, 0.497441, 0.00110974, 0.550903, - 0.00225672, 0.497733, 0.00249779, 0.550568, - 0.00401046, 0.497438, 0.00443906, 0.550574, - 0.00626613, 0.49744, 0.00693637, 0.550591, - 0.0090226, 0.497449, 0.00998921, 0.550623, - 0.0122795, 0.497469, 0.0135984, 0.550667, - 0.0160361, 0.497495, 0.0177654, 0.550724, - 0.0202908, 0.497526, 0.0224915, 0.550792, - 0.0250421, 0.497557, 0.0277795, 0.550918, - 0.0302878, 0.49763, 0.0336334, 0.551058, - 0.0360241, 0.497701, 0.0400573, 0.551276, - 0.0422473, 0.497824, 0.0470585, 0.551551, - 0.0489441, 0.497977, 0.0546433, 0.552074, - 0.0559596, 0.498312, 0.0628367, 0.552681, - 0.0633978, 0.498679, 0.071646, 0.553324, - 0.0713176, 0.499031, 0.0810746, 0.554011, - 0.0797268, 0.499365, 0.091129, 0.55488, - 0.0885238, 0.499779, 0.101837, 0.556171, - 0.0974417, 0.500444, 0.113239, 0.557498, - 0.106841, 0.501025, 0.125316, 0.559299, - 0.116533, 0.501864, 0.138128, 0.561647, - 0.126298, 0.502967, 0.151695, 0.564347, - 0.136388, 0.504129, 0.16604, 0.567863, - 0.146576, 0.505713, 0.181207, 0.572569, - 0.156832, 0.507953, 0.197259, 0.578919, - 0.167323, 0.511186, 0.214258, 0.585387, - 0.177712, 0.514042, 0.232038, 0.593134, - 0.188184, 0.517484, 0.250733, 0.603295, - 0.198717, 0.522345, 0.270454, 0.613854, - 0.209177, 0.526751, 0.290807, 0.626092, - 0.219644, 0.531595, 0.312202, 0.637868, - 0.229494, 0.534721, 0.334435, 0.652458, - 0.238718, 0.538304, 0.359184, 0.666985, - 0.247061, 0.539875, 0.385637, 0.683301, - 0.254652, 0.541042, 0.41328, 0.69998, - 0.261376, 0.540735, 0.441903, 0.717824, - 0.267085, 0.539139, 0.471609, 0.734617, - 0.271465, 0.534958, 0.501446, 0.753663, - 0.27528, 0.53032, 0.532571, 0.770512, - 0.277617, 0.522134, 0.563641, 0.787356, - 0.278525, 0.51206, 0.595067, 0.806252, - 0.278512, 0.50119, 0.627226, 0.822061, - 0.277023, 0.486791, 0.659402, 0.838959, - 0.273175, 0.470467, 0.692874, 0.85379, - 0.267238, 0.450688, 0.725702, 0.868268, - 0.260327, 0.429741, 0.75832, 0.881994, - 0.251946, 0.407223, 0.790189, 0.893885, - 0.242432, 0.383214, 0.821625, 0.905118, - 0.231904, 0.357297, 0.853011, 0.916045, - 0.219545, 0.330733, 0.883773, 0.927614, - 0.205378, 0.303916, 0.914435, 0.936005, - 0.190388, 0.275941, 0.944502, 0.944533, - 0.1749, 0.247493, 0.974439, 0.950758, - 0.158588, 0.218996, 1.00286, 0.957078, - 0.141027, 0.191559, 1.0304, 0.962448, - 0.121507, 0.164457, 1.05466, 0.964993, - 0.102068, 0.138636, 1.0761, 0.970017, - 0.0822598, 0.111861, 1.09541, 0.97661, - 0.062033, 0.0843438, 1.11317, 0.985073, - 0.0409832, 0.0558496, 1.12911, 0.993515, - 0.020146, 0.0275331, 1.1438, 1.00006, 0.00027329, - 0.000107883, 1.15736, 0.525324, - 9.99341e-06, 0.498153, 1.05385e-05, 0.526513, - 0.000251605, 0.499277, 0.000265329, 0.526517, - 0.00100641, 0.499282, 0.0010613, 0.526588, - 0.00226466, 0.499337, 0.00238823, 0.526539, - 0.0040255, 0.499302, 0.00424535, 0.526547, - 0.00628954, 0.499306, 0.00663364, 0.526561, - 0.00905628, 0.499313, 0.00955337, 0.526593, - 0.0123253, 0.499334, 0.0130054, 0.526642, - 0.0160957, 0.499365, 0.0169911, 0.5267, - 0.0203661, 0.499396, 0.0215122, 0.526792, - 0.0251347, 0.499451, 0.0265718, 0.526904, - 0.0303985, 0.499511, 0.0321732, 0.527079, - 0.0361554, 0.499617, 0.0383231, 0.527285, - 0.0423982, 0.499731, 0.045026, 0.527602, - 0.0491121, 0.499924, 0.0522936, 0.528166, - 0.0561127, 0.500306, 0.0601528, 0.52879, - 0.0635988, 0.5007, 0.0686059, 0.529421, - 0.071581, 0.501048, 0.0776518, 0.530144, - 0.0799854, 0.501421, 0.0873148, 0.531062, - 0.0888032, 0.501884, 0.0976084, 0.532374, - 0.0977643, 0.50259, 0.108588, 0.533828, - 0.107197, 0.50329, 0.120234, 0.53581, - 0.116887, 0.504312, 0.132602, 0.538063, - 0.126755, 0.505365, 0.145721, 0.5409, - 0.136819, 0.506668, 0.159617, 0.544882, - 0.147117, 0.508731, 0.174369, 0.550238, - 0.157446, 0.511601, 0.190028, 0.556038, - 0.167988, 0.514431, 0.206587, 0.563031, - 0.178364, 0.517808, 0.224046, 0.571543, - 0.189007, 0.521937, 0.242503, 0.582255, - 0.199546, 0.527415, 0.261977, 0.59272, - 0.210084, 0.531682, 0.282162, 0.605648, - 0.220448, 0.537123, 0.303426, 0.61785, - 0.230593, 0.540664, 0.325323, 0.632223, - 0.240238, 0.544467, 0.348993, 0.648819, - 0.24887, 0.547594, 0.375462, 0.665825, - 0.256657, 0.54912, 0.403024, 0.683389, - 0.263711, 0.549294, 0.431773, 0.701495, - 0.269666, 0.547649, 0.461494, 0.719197, - 0.274169, 0.543786, 0.491623, 0.737906, - 0.278124, 0.538644, 0.522994, 0.756652, - 0.280632, 0.531057, 0.554775, 0.775279, - 0.281741, 0.521972, 0.586441, 0.792688, - 0.281652, 0.509613, 0.618596, 0.811894, - 0.280345, 0.496497, 0.651462, 0.827938, - 0.277128, 0.47968, 0.684023, 0.844837, - 0.271646, 0.460688, 0.718024, 0.859239, - 0.264397, 0.438872, 0.751207, 0.874088, - 0.256144, 0.41577, 0.784232, 0.887693, - 0.246311, 0.391369, 0.816191, 0.899402, - 0.235497, 0.365872, 0.847828, 0.910973, - 0.223631, 0.338618, 0.87934, 0.92204, - 0.209874, 0.310803, 0.910325, 0.930987, - 0.194265, 0.281802, 0.940695, 0.94, - 0.178125, 0.252836, 0.970958, 0.948018, - 0.161479, 0.224239, 1.00078, 0.955141, - 0.144038, 0.195857, 1.0288, 0.960513, - 0.124915, 0.168487, 1.05371, 0.963964, - 0.104284, 0.141495, 1.07596, 0.968713, - 0.0838732, 0.114437, 1.09628, 0.975524, - 0.0635579, 0.0863105, 1.11448, 0.98431, - 0.042291, 0.0574774, 1.13069, 0.992916, - 0.0209131, 0.0284343, 1.14568, 0.999926, 0.000743097, - 0.000379265, 1.15955, 0.501042, - 9.98428e-06, 0.498726, 1.00306e-05, 0.502992, - 0.000252112, 0.500665, 0.000253283, 0.502417, - 0.00100791, 0.500092, 0.00101259, 0.502965, - 0.00226919, 0.500621, 0.00227978, 0.502318, - 0.00403109, 0.499994, 0.00405011, 0.502333, - 0.00629832, 0.500005, 0.00632868, 0.502362, - 0.00906907, 0.500027, 0.00911446, 0.502369, - 0.0123423, 0.500023, 0.0124078, 0.50243, - 0.0161178, 0.500066, 0.016211, 0.502493, - 0.0203937, 0.500103, 0.0205256, 0.502592, - 0.0251684, 0.500166, 0.0253548, 0.502707, - 0.0304389, 0.50023, 0.0307029, 0.502881, - 0.0362015, 0.500335, 0.0365753, 0.503124, - 0.0424507, 0.500488, 0.0429798, 0.503443, - 0.0491582, 0.500686, 0.0499268, 0.504083, - 0.0561476, 0.501155, 0.0574541, 0.504668, - 0.0636846, 0.501524, 0.0655408, 0.505319, - 0.0716834, 0.501904, 0.0742072, 0.50609, - 0.0800925, 0.502321, 0.0834699, 0.507122, - 0.0888425, 0.502896, 0.0933603, 0.508414, - 0.097855, 0.503603, 0.10391, 0.509955, - 0.107304, 0.504416, 0.115113, 0.512061, - 0.116921, 0.505565, 0.127054, 0.514419, - 0.12689, 0.506732, 0.139709, 0.517529, - 0.136934, 0.508338, 0.153173, 0.522085, - 0.147327, 0.510987, 0.167528, 0.526986, - 0.157612, 0.513527, 0.182708, 0.533122, - 0.168213, 0.516717, 0.198881, 0.540807, - 0.178688, 0.520832, 0.215986, 0.550687, - 0.189511, 0.52632, 0.234335, 0.560567, - 0.199998, 0.531009, 0.253375, 0.571698, - 0.210652, 0.535839, 0.273499, 0.584364, - 0.220917, 0.541091, 0.294355, 0.599066, - 0.23137, 0.546875, 0.316525, 0.614148, - 0.241206, 0.551306, 0.339671, 0.631157, - 0.250379, 0.555187, 0.36531, 0.647919, - 0.258397, 0.556595, 0.392767, 0.666112, - 0.265528, 0.556949, 0.421397, 0.686158, - 0.271827, 0.556617, 0.451433, 0.704838, - 0.27674, 0.552975, 0.482131, 0.723957, - 0.280733, 0.547814, 0.513458, 0.74262, - 0.283359, 0.53997, 0.545446, 0.762009, - 0.284541, 0.530422, 0.57775, 0.781314, - 0.284507, 0.518546, 0.610434, 0.799116, - 0.283309, 0.504178, 0.643178, 0.817604, - 0.280378, 0.48843, 0.676248, 0.83459, - 0.275619, 0.469457, 0.709698, 0.850974, - 0.26856, 0.447698, 0.744245, 0.866747, - 0.260094, 0.424791, 0.777695, 0.881412, - 0.249929, 0.399913, 0.810392, 0.8936, - 0.239137, 0.37308, 0.842872, 0.905943, - 0.226818, 0.345705, 0.874677, 0.916408, - 0.213699, 0.31706, 0.906257, 0.927215, - 0.198428, 0.288444, 0.936881, 0.935625, - 0.181643, 0.258329, 0.96795, 0.944076, - 0.164386, 0.228488, 0.998216, 0.951229, - 0.146339, 0.199763, 1.02689, 0.958793, - 0.127709, 0.172153, 1.0535, 0.963219, - 0.107244, 0.144989, 1.07646, 0.967562, - 0.0857764, 0.11685, 1.09675, 0.974866, - 0.0645377, 0.0880571, 1.11576, 0.983353, - 0.0431732, 0.0587352, 1.13227, 0.992503, - 0.0218356, 0.0294181, 1.1478, 1.00003, 0.000605203, - 0.000231013, 1.16207, 0.482935, - 1.01177e-05, 0.504695, 9.68142e-06, 0.477554, - 0.000251521, 0.499071, 0.000240676, 0.477904, - 0.00100683, 0.499436, 0.00096342, 0.478368, - 0.00226636, 0.499899, 0.0021687, 0.477977, - 0.00402719, 0.499513, 0.00385384, 0.477993, - 0.00629226, 0.499525, 0.0060221, 0.478011, - 0.00906011, 0.499536, 0.00867289, 0.478051, - 0.0123305, 0.499566, 0.0118074, 0.478089, - 0.016102, 0.499587, 0.0154269, 0.478171, - 0.0203736, 0.499645, 0.0195341, 0.478254, - 0.025143, 0.499692, 0.0241318, 0.47839, - 0.0304071, 0.499779, 0.0292247, 0.478588, - 0.0361631, 0.499911, 0.0348196, 0.478812, - 0.0424023, 0.500046, 0.0409231, 0.479208, - 0.0490724, 0.500326, 0.047552, 0.479841, - 0.0560722, 0.500805, 0.0547377, 0.480392, - 0.0636125, 0.501152, 0.0624607, 0.481068, - 0.0716134, 0.501561, 0.0707473, 0.481898, - 0.0800062, 0.502054, 0.0796118, 0.483022, - 0.0886568, 0.502728, 0.0890974, 0.484332, - 0.0977553, 0.503479, 0.0992099, 0.486126, - 0.107173, 0.504546, 0.10999, 0.488066, - 0.11677, 0.50557, 0.121476, 0.490521, - 0.126725, 0.506849, 0.133672, 0.494232, - 0.136793, 0.50911, 0.146731, 0.498302, - 0.147116, 0.511345, 0.160577, 0.503565, - 0.157446, 0.514344, 0.175335, 0.510902, - 0.168121, 0.518824, 0.191207, 0.519263, - 0.178799, 0.523666, 0.208058, 0.528204, - 0.189407, 0.528296, 0.225875, 0.538854, - 0.200145, 0.533724, 0.244782, 0.551278, - 0.210701, 0.539833, 0.264753, 0.565222, - 0.221303, 0.546131, 0.285745, 0.579403, - 0.231688, 0.551496, 0.307592, 0.595469, - 0.241718, 0.556809, 0.330582, 0.610929, - 0.250992, 0.559641, 0.354995, 0.629433, - 0.259602, 0.562379, 0.382471, 0.648504, - 0.267038, 0.563676, 0.411126, 0.66756, - 0.273388, 0.562092, 0.440924, 0.689143, - 0.278788, 0.560807, 0.472118, 0.709056, - 0.282783, 0.555701, 0.503774, 0.729855, - 0.285836, 0.548698, 0.536364, 0.748954, - 0.287078, 0.538544, 0.56895, 0.768373, - 0.287133, 0.526711, 0.601991, 0.78827, - 0.285839, 0.512511, 0.635403, 0.807465, - 0.283238, 0.496323, 0.668797, 0.825194, - 0.27906, 0.477638, 0.702584, 0.842203, - 0.272286, 0.456253, 0.736393, 0.857749, - 0.263854, 0.432412, 0.77096, 0.874799, - 0.253943, 0.407806, 0.80489, 0.887497, - 0.24237, 0.38033, 0.83771, 0.89966, - 0.230278, 0.352446, 0.870376, 0.911753, - 0.21646, 0.323268, 0.902256, 0.923011, - 0.202071, 0.294314, 0.933306, 0.932375, - 0.185519, 0.264104, 0.965177, 0.940537, - 0.167604, 0.234035, 0.996303, 0.948904, - 0.149068, 0.20412, 1.0261, 0.955263, - 0.129539, 0.175431, 1.05304, 0.960303, - 0.109932, 0.148116, 1.07617, 0.965512, - 0.0880572, 0.119693, 1.09742, 0.973466, - 0.0660548, 0.0901619, 1.11721, 0.98284, - 0.0439228, 0.0599875, 1.13436, 0.992216, - 0.0219588, 0.0298975, 1.15006, 0.999946, 0.000119402, - 2.08547e-05, 1.16471, 0.447827, - 1.00414e-05, 0.491543, 9.14833e-06, 0.454778, - 0.000251257, 0.499172, 0.00022891, 0.453519, - 0.00100342, 0.497787, 0.000914184, 0.45357, - 0.00225776, 0.497847, 0.00205701, 0.453578, - 0.00401371, 0.497855, 0.00365705, 0.45357, - 0.00627107, 0.497841, 0.00571453, 0.453598, - 0.00902968, 0.497864, 0.00823019, 0.453627, - 0.0122888, 0.497882, 0.0112049, 0.453684, - 0.0160475, 0.497923, 0.0146405, 0.453764, - 0.0203044, 0.49798, 0.0185394, 0.453866, - 0.0250576, 0.498049, 0.0229054, 0.453996, - 0.0303028, 0.49813, 0.0277424, 0.454196, - 0.0360379, 0.498267, 0.0330587, 0.454457, - 0.0422521, 0.498445, 0.0388613, 0.454926, - 0.0488393, 0.498812, 0.0451767, 0.455525, - 0.0558653, 0.499272, 0.0520153, 0.456074, - 0.0633772, 0.499625, 0.0593754, 0.456752, - 0.0713606, 0.500049, 0.0672751, 0.457648, - 0.07971, 0.500615, 0.0757447, 0.458849, - 0.0883032, 0.501399, 0.0848231, 0.46029, - 0.0974095, 0.502293, 0.0945135, 0.462, - 0.106729, 0.503301, 0.104848, 0.464121, - 0.116354, 0.504533, 0.115884, 0.466889, - 0.126214, 0.506172, 0.127652, 0.470744, - 0.136324, 0.508667, 0.14024, 0.47488, - 0.146595, 0.510995, 0.153673, 0.480845, - 0.157027, 0.514832, 0.168053, 0.488262, - 0.167658, 0.519506, 0.183508, 0.496547, - 0.178343, 0.524347, 0.199948, 0.506254, - 0.188916, 0.52983, 0.217503, 0.517961, - 0.199975, 0.536357, 0.236272, 0.531484, - 0.210624, 0.543641, 0.256096, 0.545496, - 0.221227, 0.550048, 0.277085, 0.559497, - 0.231568, 0.555076, 0.298615, 0.575752, - 0.241698, 0.560541, 0.321547, 0.591999, - 0.251172, 0.564156, 0.345602, 0.610654, - 0.260178, 0.567607, 0.371851, 0.630484, - 0.268094, 0.56923, 0.40076, 0.651807, - 0.274661, 0.569779, 0.430801, 0.67239, - 0.280331, 0.566791, 0.461939, 0.693024, - 0.284501, 0.562007, 0.493854, 0.715473, - 0.287852, 0.555791, 0.526992, 0.736323, - 0.28929, 0.546345, 0.560102, 0.755771, - 0.289405, 0.534, 0.593543, 0.775424, - 0.2881, 0.519114, 0.627256, 0.795447, - 0.285562, 0.502543, 0.661464, 0.815319, - 0.281416, 0.484773, 0.695206, 0.831769, - 0.275523, 0.463445, 0.729044, 0.849464, - 0.267516, 0.440269, 0.764069, 0.866775, - 0.257584, 0.415049, 0.799089, 0.881252, - 0.245817, 0.388049, 0.831948, 0.894209, - 0.233127, 0.35889, 0.865526, 0.906922, - 0.219579, 0.329915, 0.89818, 0.919686, - 0.204491, 0.300441, 0.930013, 0.929044, - 0.188962, 0.269445, 0.962061, 0.938393, - 0.171079, 0.238402, 0.994214, 0.94661, - 0.15199, 0.208204, 1.02533, 0.953095, - 0.131953, 0.178653, 1.0529, 0.958644, - 0.111233, 0.150684, 1.0771, 0.963925, - 0.0903098, 0.122359, 1.09855, 0.971995, - 0.0680505, 0.0923342, 1.11874, 0.981658, - 0.0448512, 0.0614195, 1.13635, 0.991649, - 0.0221931, 0.0303582, 1.15238, 0.999985, 0.000393403, - 0.000111086, 1.16772, 0.396806, - 9.71563e-06, 0.457671, 8.42355e-06, 0.429186, - 0.000249421, 0.495017, 0.00021625, 0.429324, - 0.000998052, 0.495173, 0.000865322, 0.429175, - 0.00224487, 0.494999, 0.00194637, 0.429129, - 0.00399041, 0.494952, 0.00346004, 0.429153, - 0.00623476, 0.494974, 0.00540684, 0.429168, - 0.0089773, 0.494983, 0.00778714, 0.429207, - 0.0122175, 0.495012, 0.0106022, 0.429257, - 0.0159542, 0.495047, 0.0138535, 0.429338, - 0.0201864, 0.495106, 0.0175443, 0.429431, - 0.0249104, 0.495165, 0.0216774, 0.429587, - 0.0301252, 0.495279, 0.0262594, 0.429796, - 0.0358249, 0.495432, 0.0312968, 0.430065, - 0.0419972, 0.495621, 0.0367985, 0.430588, - 0.0485144, 0.496061, 0.042798, 0.43113, - 0.0555028, 0.496472, 0.0492914, 0.431743, - 0.0629852, 0.496904, 0.0562907, 0.432448, - 0.0709256, 0.497369, 0.0638056, 0.433414, - 0.0791942, 0.498032, 0.071885, 0.434638, - 0.0877346, 0.498854, 0.0805517, 0.43611, - 0.0968056, 0.499812, 0.0898047, 0.437859, - 0.106002, 0.500891, 0.0997142, 0.440017, - 0.115648, 0.502198, 0.110289, 0.443236, - 0.125427, 0.504389, 0.121644, 0.44697, - 0.135492, 0.506809, 0.133769, 0.451689, - 0.145746, 0.509858, 0.146787, 0.45811, - 0.156219, 0.514247, 0.160793, 0.465305, - 0.166834, 0.518816, 0.175791, 0.474085, - 0.177546, 0.524331, 0.191906, 0.484808, - 0.188262, 0.53104, 0.209199, 0.49732, - 0.199346, 0.538511, 0.227825, 0.509693, - 0.209951, 0.544554, 0.247269, 0.524367, - 0.220533, 0.551616, 0.267978, 0.539228, - 0.231082, 0.557368, 0.289672, 0.55644, - 0.241342, 0.563782, 0.31268, 0.574204, - 0.250964, 0.568851, 0.33651, 0.593388, - 0.260306, 0.57312, 0.362219, 0.613358, - 0.268667, 0.574916, 0.390322, 0.634512, - 0.275591, 0.575053, 0.420478, 0.65563, - 0.281328, 0.572404, 0.451614, 0.678265, - 0.285948, 0.568893, 0.484112, 0.70011, - 0.289408, 0.561878, 0.517348, 0.723005, - 0.291328, 0.55359, 0.551355, 0.743744, - 0.291418, 0.541099, 0.585109, 0.763949, - 0.290252, 0.526489, 0.619487, 0.784186, - 0.287648, 0.509496, 0.65404, 0.804304, - 0.283782, 0.491484, 0.688649, 0.823629, - 0.278067, 0.470517, 0.723133, 0.84094, - 0.270588, 0.44705, 0.757163, 0.857852, - 0.261188, 0.421252, 0.792816, 0.874934, - 0.249313, 0.394191, 0.827248, 0.888709, - 0.236492, 0.365359, 0.861074, 0.902589, - 0.222185, 0.336016, 0.894417, 0.914201, - 0.207314, 0.30527, 0.926825, 0.925978, - 0.191146, 0.274532, 0.9595, 0.93512, - 0.174135, 0.243393, 0.991583, 0.943656, - 0.155231, 0.212414, 1.02356, 0.951719, - 0.134403, 0.182005, 1.05239, 0.957164, - 0.113023, 0.153043, 1.07754, 0.962656, - 0.0914493, 0.124186, 1.09984, 0.970695, - 0.0694179, 0.0941654, 1.12, 0.980749, - 0.0466199, 0.0629671, 1.13849, 0.991205, - 0.0227032, 0.0311146, 1.15494, 0.999884, 0.000632388, - 0.000254483, 1.1706, 0.379821, - 9.57289e-06, 0.460637, 7.89337e-06, 0.405188, - 0.000247483, 0.491396, 0.000204064, 0.404796, - 0.000989434, 0.490914, 0.000815853, 0.40483, - 0.00222607, 0.490949, 0.00183559, 0.40473, - 0.00395723, 0.49084, 0.00326332, 0.404731, - 0.00618287, 0.490836, 0.00509945, 0.404768, - 0.00890258, 0.490871, 0.00734463, 0.404791, - 0.0121156, 0.490883, 0.00999992, 0.404857, - 0.0158214, 0.490938, 0.0130676, 0.404943, - 0.0200178, 0.491004, 0.0165503, 0.405059, - 0.0247027, 0.491093, 0.0204521, 0.405213, - 0.0298729, 0.491205, 0.0247788, 0.405399, - 0.0355226, 0.491333, 0.0295373, 0.405731, - 0.0416352, 0.491604, 0.034741, 0.406303, - 0.0480807, 0.492116, 0.0404255, 0.406814, - 0.0550458, 0.492506, 0.0465732, 0.407404, - 0.0624652, 0.492926, 0.0532058, 0.408149, - 0.0702958, 0.493442, 0.0603442, 0.409128, - 0.0784623, 0.494136, 0.0680297, 0.410408, - 0.087007, 0.495054, 0.0762786, 0.411813, - 0.0959639, 0.495962, 0.0851046, 0.413735, - 0.105075, 0.497257, 0.0945878, 0.416137, - 0.114646, 0.498882, 0.104725, 0.41934, - 0.124394, 0.501132, 0.11563, 0.423326, - 0.134328, 0.503883, 0.127325, 0.428419, - 0.14458, 0.50747, 0.139911, 0.43484, - 0.154979, 0.511964, 0.153481, 0.442641, - 0.165628, 0.517328, 0.168114, 0.452511, - 0.176365, 0.524258, 0.183995, 0.463473, - 0.187298, 0.531248, 0.200953, 0.475564, - 0.198244, 0.538367, 0.219176, 0.488664, - 0.208938, 0.545175, 0.238514, 0.504073, - 0.219599, 0.553227, 0.259129, 0.520832, - 0.230378, 0.560653, 0.280997, 0.538455, - 0.240703, 0.567523, 0.303821, 0.55709, - 0.250548, 0.573287, 0.327948, 0.576646, - 0.259964, 0.577795, 0.353362, 0.596705, - 0.268721, 0.580077, 0.380336, 0.618053, - 0.276054, 0.58018, 0.4101, 0.640303, - 0.282176, 0.578747, 0.44161, 0.662365, - 0.286931, 0.574294, 0.474106, 0.684542, - 0.290521, 0.567035, 0.507549, 0.707984, - 0.292672, 0.558687, 0.541853, 0.730913, - 0.293189, 0.547606, 0.576581, 0.752948, - 0.292199, 0.533471, 0.61172, 0.773452, - 0.289508, 0.516395, 0.646339, 0.794715, - 0.285716, 0.497873, 0.682131, 0.814251, - 0.280051, 0.476845, 0.716396, 0.833057, - 0.272873, 0.453449, 0.751503, 0.84959, - 0.263982, 0.427857, 0.786085, 0.867022, - 0.252745, 0.400335, 0.821355, 0.882277, - 0.239655, 0.371304, 0.85646, 0.895375, - 0.225386, 0.340397, 0.890828, 0.909347, - 0.209587, 0.310005, 0.923532, 0.921885, - 0.193433, 0.2796, 0.956419, 0.932127, - 0.176135, 0.247276, 0.989445, 0.941869, - 0.157872, 0.216186, 1.02221, 0.949735, - 0.137577, 0.185602, 1.05195, 0.956617, - 0.115285, 0.155767, 1.07822, 0.961974, - 0.0928418, 0.126103, 1.10149, 0.96972, - 0.0700592, 0.0956758, 1.12207, 0.98012, - 0.0474671, 0.0643269, 1.1408, 0.990825, - 0.0238113, 0.0320863, 1.1577, 0.999876, 0.000381574, - 8.12203e-05, 1.17403, 0.367636, - 9.61342e-06, 0.469176, 7.53287e-06, 0.380377, - 0.000244772, 0.485434, 0.000191797, 0.380416, - 0.000978857, 0.485475, 0.000767015, 0.380376, - 0.00220165, 0.485435, 0.00172522, 0.380419, - 0.00391408, 0.485487, 0.00306734, 0.380438, - 0.00611549, 0.485505, 0.00479332, 0.380462, - 0.00880558, 0.485525, 0.00690391, 0.380496, - 0.0119837, 0.485551, 0.00940039, 0.38056, - 0.0156487, 0.485605, 0.0122848, 0.38064, - 0.0197988, 0.485666, 0.0155601, 0.380767, - 0.0244324, 0.48577, 0.0192313, 0.380909, - 0.0295444, 0.485871, 0.0233032, 0.381142, - 0.0351321, 0.48606, 0.0277861, 0.381472, - 0.0411535, 0.486336, 0.0326939, 0.382015, - 0.0475408, 0.486833, 0.0380565, 0.382523, - 0.0544395, 0.487231, 0.0438615, 0.383129, - 0.061784, 0.487683, 0.0501332, 0.383952, - 0.0695085, 0.488313, 0.0568996, 0.38498, - 0.0775819, 0.489077, 0.0641952, 0.386331, - 0.0860443, 0.490113, 0.0720324, 0.387788, - 0.0948406, 0.491099, 0.0804379, 0.389808, - 0.103899, 0.492566, 0.0894899, 0.39252, - 0.113313, 0.494601, 0.0992098, 0.395493, - 0.123007, 0.496619, 0.109641, 0.399826, - 0.132859, 0.499912, 0.120919, 0.405341, - 0.143077, 0.504061, 0.133107, 0.411932, - 0.153465, 0.508905, 0.146263, 0.420591, - 0.164108, 0.515482, 0.160544, 0.43101, - 0.174893, 0.523191, 0.176123, 0.441881, - 0.185839, 0.53026, 0.192757, 0.453919, - 0.196633, 0.537295, 0.210535, 0.468715, - 0.207611, 0.546156, 0.229886, 0.485182, - 0.218517, 0.555173, 0.250543, 0.501926, - 0.229249, 0.562728, 0.27221, 0.51785, - 0.239481, 0.567494, 0.294892, 0.536947, - 0.249395, 0.573889, 0.318987, 0.557115, - 0.259, 0.578831, 0.344348, 0.577966, - 0.268075, 0.582055, 0.371223, 0.599489, - 0.276115, 0.583307, 0.399834, 0.62479, - 0.282523, 0.583902, 0.431415, 0.647504, - 0.287663, 0.57953, 0.464301, 0.670601, - 0.291538, 0.573103, 0.498123, 0.693539, - 0.293842, 0.563731, 0.532662, 0.717385, - 0.294681, 0.553169, 0.567925, 0.741533, - 0.293717, 0.539908, 0.603502, 0.762142, - 0.291156, 0.521902, 0.639074, 0.783014, - 0.28719, 0.502815, 0.674439, 0.805158, - 0.281773, 0.482598, 0.710497, 0.823646, - 0.274682, 0.458949, 0.7456, 0.841879, - 0.266184, 0.433129, 0.781085, 0.859515, - 0.255682, 0.406064, 0.816, 0.875335, - 0.242849, 0.376509, 0.851074, 0.890147, - 0.228329, 0.345502, 0.886473, 0.903144, - 0.212491, 0.31428, 0.920751, 0.916618, - 0.195695, 0.282994, 0.954606, 0.927953, - 0.178267, 0.251091, 0.988402, 0.937414, - 0.159549, 0.219107, 1.02141, 0.946823, - 0.140022, 0.18896, 1.05167, 0.954651, - 0.118154, 0.158667, 1.07819, 0.959955, - 0.0946636, 0.128808, 1.1025, 0.96858, - 0.0711792, 0.0973787, 1.12391, 0.97938, - 0.0475046, 0.0650965, 1.14322, 0.990498, - 0.024059, 0.0326267, 1.16077, 0.999844, - 5.12408e-05, 0.000112444, 1.17727, 0.316912, - 9.34977e-06, 0.425996, 6.95559e-06, 0.356423, - 0.000241372, 0.479108, 0.000179562, 0.356272, - 0.000965292, 0.478897, 0.00071811, 0.356262, - 0.00217182, 0.478894, 0.00161574, 0.356265, - 0.00386092, 0.478895, 0.00287261, 0.356278, - 0.0060324, 0.478905, 0.00448907, 0.356293, - 0.00868565, 0.478914, 0.00646572, 0.356346, - 0.0118207, 0.478965, 0.00880438, 0.356395, - 0.0154355, 0.479001, 0.0115066, 0.356484, - 0.019529, 0.479075, 0.0145762, 0.356609, - 0.0240991, 0.47918, 0.018018, 0.356766, - 0.0291413, 0.479305, 0.0218379, 0.357009, - 0.0346498, 0.479512, 0.0260454, 0.357424, - 0.0405462, 0.479909, 0.0306657, 0.357899, - 0.0468825, 0.480337, 0.0357054, 0.358424, - 0.0536887, 0.480771, 0.0411728, 0.359041, - 0.0609416, 0.481242, 0.0470841, 0.359903, - 0.0685239, 0.481943, 0.0534831, 0.360932, - 0.0764883, 0.482741, 0.0603795, 0.362196, - 0.0848364, 0.483688, 0.0678028, 0.363847, - 0.0935002, 0.484947, 0.0758086, 0.365972, - 0.102471, 0.486588, 0.0844173, 0.368741, - 0.111751, 0.488787, 0.0937199, 0.372146, - 0.121334, 0.491405, 0.103732, 0.377114, - 0.131147, 0.495604, 0.114608, 0.38226, - 0.141213, 0.499436, 0.126345, 0.389609, - 0.151632, 0.505334, 0.139116, 0.397925, - 0.162073, 0.51168, 0.152995, 0.407824, - 0.172819, 0.518876, 0.168071, 0.420014, - 0.183929, 0.527639, 0.184495, 0.434266, - 0.195032, 0.537588, 0.20232, 0.447352, - 0.205792, 0.544379, 0.221189, 0.463726, - 0.216704, 0.553422, 0.241616, 0.481406, - 0.227531, 0.562074, 0.263298, 0.498707, - 0.238017, 0.568227, 0.286116, 0.518039, - 0.247936, 0.574473, 0.3101, 0.538277, - 0.257437, 0.579191, 0.335401, 0.561166, - 0.266829, 0.584807, 0.362246, 0.583189, - 0.275329, 0.586476, 0.390609, 0.606024, - 0.28234, 0.585578, 0.420998, 0.632419, - 0.287924, 0.584496, 0.454357, 0.656128, - 0.291972, 0.577766, 0.488233, 0.679953, - 0.29456, 0.56875, 0.523248, 0.704654, - 0.295816, 0.558388, 0.559168, 0.729016, - 0.295157, 0.544826, 0.595326, 0.752062, - 0.292779, 0.528273, 0.631864, 0.773138, - 0.288681, 0.508482, 0.667793, 0.794869, - 0.283358, 0.487341, 0.704035, 0.815101, - 0.27608, 0.46354, 0.739925, 0.834212, - 0.26767, 0.438672, 0.775539, 0.852368, - 0.257397, 0.411239, 0.810895, 0.870207, - 0.245689, 0.3829, 0.846472, 0.884063, - 0.231452, 0.351496, 0.881788, 0.898284, - 0.215561, 0.31895, 0.917438, 0.912964, - 0.198208, 0.287367, 0.952422, 0.924666, - 0.180426, 0.254487, 0.987551, 0.934429, - 0.161525, 0.222226, 1.02142, 0.943485, - 0.141197, 0.191143, 1.05218, 0.9521, - 0.120085, 0.161112, 1.07937, 0.957876, - 0.0975881, 0.130982, 1.10403, 0.966943, - 0.0726842, 0.0990553, 1.12616, 0.978313, - 0.0483705, 0.0662818, 1.14619, 0.990048, - 0.0239072, 0.0329243, 1.16413, 0.999984, 0.000461885, - 7.72859e-05, 1.18099, 0.321287, - 9.35049e-06, 0.455413, 6.59662e-06, 0.332595, - 0.000237513, 0.471437, 0.000167562, 0.332729, - 0.000949964, 0.471618, 0.000670192, 0.332305, - 0.00213618, 0.471028, 0.00150712, 0.332326, - 0.00379765, 0.471055, 0.00267959, 0.332344, - 0.00593353, 0.471072, 0.00418751, 0.332356, - 0.00854349, 0.471077, 0.00603172, 0.332403, - 0.0116268, 0.471121, 0.00821362, 0.332461, - 0.0151824, 0.47117, 0.0107357, 0.332552, - 0.0192088, 0.471251, 0.0136014, 0.332657, - 0.0237024, 0.47133, 0.0168152, 0.332835, - 0.0286615, 0.471487, 0.0203853, 0.333083, - 0.0340765, 0.471708, 0.0243212, 0.333547, - 0.0398563, 0.47219, 0.0286518, 0.333989, - 0.0460916, 0.472587, 0.0333763, 0.334532, - 0.0527897, 0.473054, 0.0385084, 0.335167, - 0.0599284, 0.473568, 0.0440638, 0.33608, - 0.0673514, 0.474362, 0.0500962, 0.337146, - 0.0752237, 0.475231, 0.0566022, 0.338462, - 0.083418, 0.476282, 0.0636272, 0.34014, - 0.0919382, 0.477615, 0.0712153, 0.342341, - 0.100741, 0.479404, 0.079417, 0.345088, - 0.109905, 0.481618, 0.0882631, 0.349049, - 0.119369, 0.485081, 0.0978851, 0.353939, - 0.129033, 0.489317, 0.108336, 0.359893, - 0.139038, 0.494309, 0.119698, 0.366945, - 0.149411, 0.499983, 0.132024, 0.375814, - 0.159843, 0.507185, 0.145558, 0.387112, - 0.170664, 0.516392, 0.160433, 0.40023, - 0.181897, 0.526519, 0.176648, 0.412555, - 0.192785, 0.53423, 0.193922, 0.427023, - 0.203663, 0.542741, 0.212662, 0.443685, - 0.214695, 0.552066, 0.232944, 0.461499, - 0.225561, 0.560762, 0.254495, 0.480975, - 0.236257, 0.569421, 0.277531, 0.501, - 0.24639, 0.576101, 0.301724, 0.521691, - 0.256101, 0.581493, 0.327112, 0.543478, - 0.265289, 0.585221, 0.353917, 0.566094, - 0.273938, 0.587614, 0.381941, 0.589578, - 0.281679, 0.587991, 0.41172, 0.614583, - 0.287655, 0.585928, 0.444148, 0.641813, - 0.292228, 0.582092, 0.478617, 0.666189, - 0.295172, 0.57398, 0.51397, 0.690475, - 0.29648, 0.561676, 0.550118, 0.715543, - 0.296203, 0.548758, 0.586933, 0.740405, - 0.293999, 0.532792, 0.62384, 0.762183, - 0.28998, 0.512735, 0.660723, 0.786069, - 0.28478, 0.492402, 0.69807, 0.806812, - 0.277568, 0.469058, 0.734422, 0.826987, - 0.268951, 0.443017, 0.770946, 0.844588, - 0.259049, 0.415501, 0.80699, 0.863725, - 0.2471, 0.387328, 0.842107, 0.879137, - 0.234157, 0.356108, 0.878078, 0.894634, - 0.218719, 0.324315, 0.914058, 0.909162, - 0.201293, 0.291813, 0.949922, 0.92072, - 0.18267, 0.258474, 0.985337, 0.93158, - 0.163212, 0.225593, 1.0205, 0.941238, - 0.142771, 0.193986, 1.05273, 0.949293, - 0.120956, 0.163392, 1.08075, 0.956226, - 0.0985743, 0.132934, 1.10559, 0.96546, - 0.075118, 0.101255, 1.12823, 0.977403, - 0.0497921, 0.0675441, 1.149, 0.989648, - 0.0241574, 0.0334681, 1.16765, 1.00001, 0.0005762, - 0.000184807, 1.18519, 0.303474, - 9.16603e-06, 0.4542, 6.1243e-06, 0.308894, - 0.000232869, 0.462306, 0.000155592, 0.309426, - 0.000931661, 0.463093, 0.000622499, 0.308643, - 0.0020949, 0.461933, 0.00139979, 0.308651, - 0.0037242, 0.461941, 0.00248874, 0.308662, - 0.00581873, 0.46195, 0.00388933, 0.308687, - 0.00837818, 0.461974, 0.00560247, 0.308728, - 0.0114016, 0.462011, 0.00762948, 0.308789, - 0.0148884, 0.462067, 0.00997326, 0.308882, - 0.0188369, 0.462151, 0.0126375, 0.309007, - 0.0232436, 0.462263, 0.0156271, 0.30918, - 0.0281054, 0.462417, 0.0189498, 0.309442, - 0.0334065, 0.462667, 0.0226167, 0.309901, - 0.0390589, 0.463162, 0.0266614, 0.310331, - 0.0452042, 0.463555, 0.0310715, 0.310858, - 0.0517735, 0.464019, 0.0358698, 0.311576, - 0.0587359, 0.464669, 0.0410848, 0.312436, - 0.0660383, 0.465406, 0.0467453, 0.313526, - 0.0737266, 0.466339, 0.0528718, 0.314903, - 0.0817574, 0.467504, 0.0595039, 0.316814, - 0.090167, 0.469226, 0.0666888, 0.318965, - 0.0987555, 0.470981, 0.0744658, 0.322077, - 0.107792, 0.473814, 0.082912, 0.325947, - 0.117098, 0.477241, 0.0920846, 0.331008, - 0.126602, 0.48184, 0.102137, 0.337893, - 0.136619, 0.488334, 0.113135, 0.345106, - 0.146838, 0.494415, 0.12511, 0.355111, - 0.157357, 0.503275, 0.138356, 0.365095, - 0.167955, 0.510966, 0.152686, 0.378344, - 0.179157, 0.521508, 0.16856, 0.391599, - 0.190143, 0.530455, 0.18561, 0.407786, - 0.20123, 0.541275, 0.204308, 0.425294, - 0.212456, 0.551784, 0.224623, 0.444021, - 0.223568, 0.561493, 0.246172, 0.463418, - 0.234154, 0.569886, 0.268979, 0.484077, - 0.244546, 0.577116, 0.293411, 0.505513, - 0.254301, 0.582914, 0.318936, 0.527672, - 0.263564, 0.587208, 0.345856, 0.550565, - 0.272332, 0.589277, 0.374054, 0.573656, - 0.280011, 0.588426, 0.403276, 0.59827, - 0.286924, 0.587504, 0.43474, 0.624731, - 0.291994, 0.583401, 0.468767, 0.652396, - 0.295159, 0.576997, 0.504411, 0.67732, - 0.296954, 0.565863, 0.54114, 0.703147, - 0.296877, 0.552316, 0.57816, 0.728715, - 0.295147, 0.536773, 0.616124, 0.752448, - 0.291275, 0.51771, 0.653885, 0.775169, - 0.285905, 0.496087, 0.691537, 0.799307, - 0.279064, 0.474232, 0.729251, 0.819482, - 0.270294, 0.447676, 0.766267, 0.837659, - 0.260032, 0.419656, 0.802616, 0.856903, - 0.248497, 0.391328, 0.838583, 0.873325, - 0.235252, 0.360285, 0.874711, 0.889788, - 0.221126, 0.329215, 0.91077, 0.904486, - 0.204304, 0.296392, 0.94653, 0.917711, - 0.185562, 0.262159, 0.983828, 0.928969, - 0.165635, 0.229142, 1.01955, 0.939707, - 0.14442, 0.19673, 1.05317, 0.948167, - 0.122147, 0.165095, 1.0823, 0.955222, - 0.099098, 0.13451, 1.10791, 0.964401, - 0.0755332, 0.102476, 1.1312, 0.976605, - 0.0513817, 0.0689667, 1.15218, 0.989085, - 0.0258499, 0.034506, 1.17129, 0.999908, 0.000617773, - 0.000271268, 1.18961, 0.285803, - 9.05752e-06, 0.452348, 5.72272e-06, 0.284689, - 0.00022732, 0.450581, 0.000143626, 0.285263, - 0.000910214, 0.451482, 0.000575099, 0.285302, - 0.00204784, 0.451553, 0.00129395, 0.285318, - 0.00364057, 0.451574, 0.0023006, 0.28533, - 0.00568813, 0.451585, 0.00359547, 0.285361, - 0.00819001, 0.451618, 0.00517934, 0.285397, - 0.0111458, 0.45165, 0.007054, 0.285447, - 0.0145536, 0.451688, 0.00922167, 0.285527, - 0.0184127, 0.451758, 0.0116869, 0.285688, - 0.0227207, 0.451929, 0.0144555, 0.28584, - 0.0274712, 0.452055, 0.0175341, 0.286136, - 0.0326278, 0.452369, 0.0209406, 0.286574, - 0.0381792, 0.452853, 0.0246965, 0.287012, - 0.0441879, 0.453272, 0.0287996, 0.287542, - 0.0506096, 0.453752, 0.033268, 0.288299, - 0.0573634, 0.454488, 0.0381504, 0.289186, - 0.0645458, 0.455294, 0.0434447, 0.290302, - 0.0720405, 0.456301, 0.0491973, 0.291776, - 0.0799046, 0.457648, 0.0554453, 0.29372, - 0.088117, 0.459483, 0.0622311, 0.296052, - 0.0965328, 0.461571, 0.0695992, 0.299563, - 0.105409, 0.465085, 0.077658, 0.30335, - 0.114553, 0.468506, 0.0864176, 0.309167, - 0.123917, 0.474423, 0.0961078, 0.31529, - 0.13381, 0.47995, 0.106643, 0.324163, - 0.144021, 0.488592, 0.118322, 0.333272, - 0.154382, 0.496461, 0.131133, 0.344224, - 0.165015, 0.50562, 0.145208, 0.357733, - 0.176168, 0.516719, 0.16073, 0.373046, - 0.187468, 0.528513, 0.177807, 0.38788, - 0.198488, 0.537713, 0.196072, 0.405133, - 0.209545, 0.547999, 0.21605, 0.423845, - 0.220724, 0.55759, 0.237484, 0.443777, - 0.231518, 0.566246, 0.26039, 0.464824, - 0.242035, 0.574326, 0.284835, 0.486635, - 0.251898, 0.58037, 0.310518, 0.51012, - 0.261304, 0.58568, 0.337678, 0.535301, - 0.270384, 0.590197, 0.366242, 0.559193, - 0.27841, 0.590569, 0.395873, 0.583544, - 0.285325, 0.588161, 0.426857, 0.608834, - 0.291113, 0.584249, 0.459477, 0.635753, - 0.294882, 0.57763, 0.494734, 0.664367, - 0.297088, 0.569479, 0.532023, 0.689688, - 0.297364, 0.555064, 0.569629, 0.715732, - 0.295949, 0.539522, 0.608124, 0.741307, - 0.292259, 0.521613, 0.646231, 0.764949, - 0.287063, 0.49969, 0.684938, 0.788599, - 0.28012, 0.476747, 0.723548, 0.81048, - 0.27153, 0.45116, 0.761135, 0.831372, - 0.261289, 0.424101, 0.798916, 0.850092, - 0.249559, 0.39443, 0.835952, 0.867777, - 0.236348, 0.363849, 0.871606, 0.884632, - 0.221569, 0.332477, 0.907843, 0.90047, - 0.20618, 0.300667, 0.944187, 0.914524, - 0.188771, 0.266552, 0.981371, 0.926892, - 0.168362, 0.232349, 1.01841, 0.937951, - 0.146761, 0.199359, 1.05308, 0.947236, - 0.123813, 0.1675, 1.0839, 0.954367, - 0.099984, 0.136166, 1.11047, 0.963907, - 0.0759278, 0.103808, 1.13414, 0.976218, - 0.0511367, 0.0697061, 1.15575, 0.988772, - 0.0267415, 0.0352529, 1.17531, 0.999888, - 0.000520778, 0.000289926, 1.19389, 0.263546, - 8.83274e-06, 0.441896, 5.26783e-06, 0.262352, - 0.000221849, 0.439889, 0.000132311, 0.262325, - 0.000886683, 0.439848, 0.000528824, 0.26228, - 0.00199476, 0.439765, 0.00118975, 0.262372, - 0.00354671, 0.439922, 0.00211568, 0.26239, - 0.00554141, 0.439941, 0.00330652, 0.262412, - 0.00797888, 0.439961, 0.00476346, 0.262453, - 0.0108584, 0.440002, 0.00648818, 0.262528, - 0.0141788, 0.440085, 0.0084835, 0.262615, - 0.017938, 0.440166, 0.0107533, 0.262744, - 0.0221346, 0.440291, 0.0133044, 0.262939, - 0.026762, 0.440493, 0.0161445, 0.263277, - 0.0317573, 0.440889, 0.0192974, 0.26368, - 0.0371832, 0.441338, 0.0227699, 0.264106, - 0.0430371, 0.441753, 0.0265698, 0.264624, - 0.0493035, 0.442227, 0.0307178, 0.265378, - 0.0558669, 0.442985, 0.0352616, 0.266253, - 0.0628718, 0.443795, 0.0401968, 0.267478, - 0.0701569, 0.445008, 0.04559, 0.269062, - 0.077845, 0.446599, 0.0514539, 0.270926, - 0.0857941, 0.448349, 0.0578382, 0.273693, - 0.0940773, 0.451221, 0.0648363, 0.276746, - 0.102704, 0.454097, 0.0724389, 0.281693, - 0.111735, 0.459517, 0.0808744, 0.287335, - 0.121004, 0.46531, 0.0901551, 0.29448, - 0.130734, 0.472605, 0.100371, 0.30257, - 0.140777, 0.480251, 0.111644, 0.312465, - 0.15111, 0.489444, 0.124111, 0.324856, - 0.16189, 0.500919, 0.137979, 0.33774, - 0.172946, 0.511317, 0.153163, 0.35255, - 0.184152, 0.522684, 0.169817, 0.367786, - 0.19522, 0.53248, 0.187886, 0.385474, - 0.20632, 0.543326, 0.207634, 0.404976, - 0.217744, 0.554109, 0.229165, 0.425203, - 0.228691, 0.563395, 0.252068, 0.446704, - 0.239299, 0.571565, 0.276471, 0.468951, - 0.249348, 0.577935, 0.302323, 0.493487, - 0.258933, 0.584309, 0.329882, 0.517861, - 0.268009, 0.58773, 0.358525, 0.543309, - 0.276238, 0.589612, 0.388585, 0.569704, - 0.28356, 0.589294, 0.419787, 0.594871, - 0.289497, 0.585137, 0.452114, 0.622555, - 0.294452, 0.580356, 0.486466, 0.651167, - 0.296918, 0.57185, 0.523079, 0.677332, - 0.297647, 0.558428, 0.5611, 0.703718, - 0.296321, 0.542232, 0.599592, 0.730262, - 0.293339, 0.524541, 0.639138, 0.754304, - 0.288036, 0.502691, 0.677978, 0.778051, - 0.281018, 0.479212, 0.716537, 0.801557, - 0.272414, 0.454071, 0.75586, 0.822559, - 0.262419, 0.425952, 0.794477, 0.843051, - 0.250702, 0.397313, 0.832664, 0.86232, - 0.237264, 0.366534, 0.869876, 0.879044, - 0.222716, 0.334816, 0.906973, 0.896362, - 0.206827, 0.303143, 0.943558, 0.910342, - 0.189659, 0.269699, 0.979759, 0.924119, - 0.171108, 0.236411, 1.01718, 0.935374, - 0.149579, 0.202224, 1.05289, 0.944295, - 0.126295, 0.16989, 1.08496, 0.952227, - 0.101511, 0.138089, 1.11256, 0.962041, - 0.0766392, 0.105053, 1.1375, 0.97528, - 0.0511967, 0.070329, 1.15983, 0.988476, - 0.025463, 0.0351268, 1.17987, 0.999962, 2.86808e-05, 1.45564e-05, 1.19901, 0.227089, - 8.41413e-06, 0.404216, 4.72707e-06, 0.239725, - 0.000215083, 0.426708, 0.000120833, 0.239904, - 0.000860718, 0.427028, 0.000483555, 0.239911, - 0.00193661, 0.427039, 0.00108806, 0.239914, - 0.00344276, 0.42704, 0.00193457, 0.239933, - 0.00537907, 0.427064, 0.00302363, 0.239944, - 0.00774482, 0.427065, 0.00435604, 0.239993, - 0.01054, 0.427122, 0.00593398, 0.240052, - 0.0137626, 0.427179, 0.00775987, 0.240148, - 0.0174115, 0.427279, 0.00983854, 0.240278, - 0.021484, 0.42741, 0.0121763, 0.240472, - 0.0259729, 0.427618, 0.0147827, 0.240839, - 0.0308131, 0.428086, 0.0176837, 0.241201, - 0.0360893, 0.428482, 0.0208775, 0.241626, - 0.0417723, 0.428907, 0.0243821, 0.242207, - 0.0478337, 0.42952, 0.0282228, 0.24298, - 0.0542199, 0.430332, 0.0324333, 0.243881, - 0.0610015, 0.431222, 0.0370252, 0.245123, - 0.0680874, 0.432512, 0.0420535, 0.24667, - 0.0755482, 0.434088, 0.0475414, 0.248779, - 0.0832873, 0.436323, 0.0535542, 0.251665, - 0.0913546, 0.439509, 0.0601716, 0.255305, - 0.0998489, 0.443478, 0.0674282, 0.260049, - 0.108576, 0.448713, 0.0754673, 0.266192, - 0.117754, 0.455524, 0.084339, 0.273158, - 0.127294, 0.4627, 0.0941683, 0.282131, - 0.137311, 0.472068, 0.10515, 0.293332, - 0.147736, 0.483565, 0.117402, 0.304667, - 0.158357, 0.493702, 0.130824, 0.317785, - 0.169274, 0.504708, 0.145724, 0.333245, - 0.180595, 0.517107, 0.16215, 0.349843, - 0.191892, 0.528849, 0.180149, 0.367944, - 0.203168, 0.540301, 0.199746, 0.387579, - 0.214443, 0.551514, 0.221047, 0.408247, - 0.225624, 0.560906, 0.243981, 0.43014, - 0.236422, 0.56959, 0.268513, 0.452669, - 0.24654, 0.576098, 0.294409, 0.476196, - 0.256157, 0.580925, 0.322002, 0.501157, - 0.265289, 0.584839, 0.351052, 0.527632, - 0.273671, 0.587614, 0.3812, 0.555754, - 0.281254, 0.589119, 0.412994, 0.581682, - 0.287448, 0.585204, 0.445498, 0.608196, - 0.292614, 0.579006, 0.479505, 0.635661, - 0.296068, 0.571297, 0.514643, 0.664999, - 0.297395, 0.560855, 0.552213, 0.691039, - 0.296645, 0.544525, 0.591365, 0.7179, - 0.293785, 0.526535, 0.630883, 0.744059, - 0.289089, 0.50545, 0.670932, 0.76863, - 0.282239, 0.482514, 0.710904, 0.793273, - 0.273688, 0.457246, 0.750259, 0.814731, - 0.26328, 0.428872, 0.78948, 0.835603, - 0.251526, 0.399384, 0.828597, 0.85489, - 0.238339, 0.368811, 0.866892, 0.872828, - 0.223607, 0.336617, 0.90563, 0.889462, - 0.207538, 0.303997, 0.943538, 0.904929, - 0.190297, 0.270812, 0.980591, 0.919101, - 0.172034, 0.237453, 1.01935, 0.930536, - 0.152058, 0.204431, 1.05498, 0.941223, - 0.129515, 0.172495, 1.08717, 0.94982, - 0.104263, 0.140175, 1.11551, 0.960592, - 0.0781944, 0.106465, 1.14098, 0.974629, - 0.051688, 0.0711592, 1.16418, 0.98811, - 0.0253929, 0.0354432, 1.18465, 1.00004, 0.000804378, - 0.000330876, 1.20462, 0.214668, - 8.21282e-06, 0.406619, 4.33582e-06, 0.218053, - 0.000208144, 0.413025, 0.000109887, 0.217987, - 0.000832212, 0.412901, 0.000439362, 0.217971, - 0.00187246, 0.412876, 0.000988623, 0.217968, - 0.00332855, 0.41286, 0.00175772, 0.217985, - 0.00520055, 0.412882, 0.00274729, 0.218014, - 0.00748814, 0.412916, 0.00395842, 0.218054, - 0.0101901, 0.412957, 0.00539274, 0.218106, - 0.0133057, 0.413005, 0.00705348, 0.218217, - 0.0168342, 0.413139, 0.00894581, 0.218338, - 0.0207707, 0.413258, 0.0110754, 0.21855, - 0.0251001, 0.413509, 0.0134551, 0.218913, - 0.0297861, 0.413992, 0.0161081, 0.219265, - 0.0348956, 0.414383, 0.0190307, 0.219696, - 0.0403909, 0.414839, 0.0222458, 0.220329, - 0.0462003, 0.415567, 0.025792, 0.220989, - 0.0524208, 0.41621, 0.0296637, 0.222027, - 0.058948, 0.417385, 0.0339323, 0.223301, - 0.0658208, 0.418779, 0.0386055, 0.224988, - 0.0730347, 0.420665, 0.0437355, 0.227211, - 0.0805274, 0.423198, 0.0493844, 0.230131, - 0.088395, 0.426566, 0.0556135, 0.233908, - 0.0966208, 0.43091, 0.0624829, 0.239092, - 0.105223, 0.437148, 0.0701636, 0.245315, - 0.11424, 0.444302, 0.0786949, 0.253166, - 0.12368, 0.453262, 0.0882382, 0.262374, - 0.133569, 0.463211, 0.0988682, 0.273145, - 0.143836, 0.474271, 0.110727, 0.285512, - 0.154577, 0.4863, 0.123945, 0.299512, - 0.165501, 0.498817, 0.138581, 0.314287, - 0.176698, 0.510341, 0.154676, 0.331083, - 0.188066, 0.522583, 0.172459, 0.349615, - 0.199597, 0.534879, 0.191979, 0.369318, - 0.210843, 0.546083, 0.21309, 0.390377, - 0.222068, 0.5562, 0.235998, 0.412411, - 0.233059, 0.564704, 0.260518, 0.435715, - 0.24357, 0.572314, 0.286795, 0.461196, - 0.253356, 0.579395, 0.314559, 0.485587, - 0.262362, 0.581985, 0.343581, 0.511908, - 0.270895, 0.584347, 0.374367, 0.539798, - 0.278452, 0.58505, 0.406015, 0.567974, - 0.284877, 0.583344, 0.439168, 0.594303, - 0.290124, 0.577348, 0.473005, 0.622951, - 0.294183, 0.570751, 0.508534, 0.652404, - 0.296389, 0.561541, 0.544764, 0.679291, - 0.296605, 0.546426, 0.582927, 0.706437, - 0.294095, 0.528599, 0.622681, 0.734485, - 0.28978, 0.508676, 0.663567, 0.758841, - 0.283363, 0.484768, 0.704092, 0.78537, - 0.275015, 0.460434, 0.745101, 0.807315, - 0.264689, 0.432166, 0.784712, 0.8271, - 0.252597, 0.401807, 0.824241, 0.849191, - 0.239154, 0.371458, 0.863803, 0.867046, - 0.224451, 0.338873, 0.903063, 0.8852, - 0.208342, 0.306175, 0.942763, 0.901771, - 0.190684, 0.272759, 0.981559, 0.915958, - 0.172105, 0.239306, 1.02048, 0.928046, - 0.152214, 0.206071, 1.05765, 0.939961, - 0.130247, 0.17367, 1.08999, 0.948711, - 0.10672, 0.142201, 1.11829, 0.959305, - 0.0808688, 0.108454, 1.14467, 0.973009, - 0.0539145, 0.0728109, 1.16839, 0.987631, - 0.0262947, 0.0360625, 1.19004, 0.999978, 0.00132758, - 0.000559424, 1.21058, 0.193925, - 7.93421e-06, 0.391974, 3.92537e-06, 0.196746, - 0.000200315, 0.397675, 9.91033e-05, 0.19667, - 0.000801099, 0.397521, 0.000396342, 0.196633, - 0.00180246, 0.397445, 0.000891829, 0.196654, - 0.00320443, 0.397482, 0.00158582, 0.196659, - 0.00500647, 0.39748, 0.00247867, 0.196683, - 0.0072086, 0.397506, 0.00357167, 0.196728, - 0.00981001, 0.397562, 0.00486675, 0.196792, - 0.0128096, 0.397633, 0.00636707, 0.19689, - 0.0162055, 0.397746, 0.00807752, 0.197017, - 0.0199943, 0.397884, 0.0100052, 0.19729, - 0.024139, 0.39827, 0.0121691, 0.197583, - 0.0286671, 0.398639, 0.0145755, 0.197927, - 0.0335858, 0.399034, 0.0172355, 0.198383, - 0.0388806, 0.399554, 0.0201718, 0.199002, - 0.0444736, 0.400289, 0.0234194, 0.199739, - 0.0504583, 0.401111, 0.026984, 0.200784, - 0.056729, 0.402349, 0.0309217, 0.202075, - 0.0633643, 0.403841, 0.0352496, 0.203898, - 0.0703247, 0.406076, 0.0400313, 0.206199, - 0.0775565, 0.408841, 0.0453282, 0.209252, - 0.085184, 0.41259, 0.0511794, 0.213638, - 0.0931994, 0.418288, 0.0577459, 0.21881, - 0.101617, 0.424681, 0.0650508, 0.225642, - 0.11052, 0.433429, 0.0732759, 0.233717, - 0.119772, 0.442897, 0.0824683, 0.242823, - 0.129505, 0.452888, 0.0927484, 0.254772, - 0.139906, 0.466407, 0.104417, 0.266603, - 0.150402, 0.477413, 0.117211, 0.28073, - 0.161395, 0.490519, 0.131598, 0.295399, - 0.172465, 0.50201, 0.147407, 0.312705, - 0.183982, 0.515311, 0.165031, 0.331335, - 0.195532, 0.52786, 0.184336, 0.351037, - 0.206971, 0.5392, 0.205361, 0.372175, - 0.218117, 0.54941, 0.228043, 0.394548, - 0.229327, 0.558642, 0.25267, 0.419598, - 0.240052, 0.567861, 0.279071, 0.443922, - 0.249937, 0.573332, 0.306882, 0.471495, - 0.259407, 0.58013, 0.33661, 0.496769, - 0.267749, 0.580564, 0.367328, 0.524951, - 0.275524, 0.581696, 0.399753, 0.55318, - 0.282148, 0.579885, 0.433134, 0.581577, - 0.287533, 0.575471, 0.467534, 0.609231, - 0.291612, 0.567445, 0.502943, 0.637478, - 0.293911, 0.557657, 0.53871, 0.667795, - 0.295096, 0.546535, 0.576568, 0.694272, - 0.294073, 0.529561, 0.614929, 0.722937, - 0.290386, 0.510561, 0.655909, 0.749682, - 0.284481, 0.487846, 0.697663, 0.774754, - 0.276188, 0.462487, 0.738515, 0.799301, - 0.266215, 0.43481, 0.779802, 0.820762, - 0.254116, 0.404879, 0.820045, 0.843231, - 0.240393, 0.374559, 0.860294, 0.861857, - 0.225503, 0.341582, 0.900965, 0.880815, - 0.209382, 0.308778, 0.941727, 0.89766, - 0.19155, 0.275232, 0.980916, 0.912926, - 0.172346, 0.240938, 1.02162, 0.926391, - 0.151799, 0.207223, 1.0597, 0.938429, - 0.129968, 0.17484, 1.09291, 0.947834, - 0.10651, 0.142984, 1.12248, 0.958432, - 0.0824098, 0.109902, 1.149, 0.972402, - 0.0565242, 0.0744454, 1.1733, 0.987191, - 0.028427, 0.0373794, 1.19538, 0.999975, 3.85685e-05, - 4.203e-05, 1.21676, 0.178114, - 7.66075e-06, 0.385418, 3.54027e-06, 0.176074, - 0.000191966, 0.381002, 8.87135e-05, 0.17601, - 0.000767549, 0.380861, 0.000354715, 0.17598, - 0.00172696, 0.380798, 0.000798168, 0.175994, - 0.00307012, 0.380824, 0.00141928, 0.176017, - 0.00479684, 0.380858, 0.00221859, 0.176019, - 0.00690648, 0.380839, 0.00319714, 0.176072, - 0.00939888, 0.380913, 0.0043572, 0.176131, - 0.0122726, 0.380979, 0.005702, 0.176239, - 0.0155264, 0.38112, 0.00723689, 0.176371, - 0.0191551, 0.381272, 0.00896907, 0.176638, - 0.023117, 0.381669, 0.0109194, 0.176912, - 0.0274633, 0.382015, 0.0130903, 0.177279, - 0.032173, 0.382476, 0.0154949, 0.17774, - 0.0372219, 0.383041, 0.0181669, 0.178344, - 0.0426132, 0.38378, 0.0211209, 0.179153, - 0.0483309, 0.384773, 0.0243899, 0.180197, - 0.0543447, 0.386076, 0.0280062, 0.181581, - 0.0607122, 0.387809, 0.032004, 0.18344, - 0.0673855, 0.390205, 0.036453, 0.186139, - 0.0743989, 0.393944, 0.0414162, 0.189432, - 0.0817731, 0.39832, 0.0469394, 0.193795, - 0.0895464, 0.404188, 0.0531442, 0.199641, - 0.0978264, 0.4121, 0.0601374, 0.206679, - 0.106499, 0.421425, 0.0680078, 0.214865, - 0.115654, 0.431504, 0.076919, 0.224406, - 0.125268, 0.442526, 0.0868835, 0.235876, - 0.135475, 0.455465, 0.0981875, 0.248335, - 0.146023, 0.4681, 0.110759, 0.262868, - 0.157016, 0.482069, 0.124885, 0.278962, - 0.168245, 0.496182, 0.140645, 0.295082, - 0.17958, 0.507401, 0.157838, 0.313738, - 0.191227, 0.520252, 0.17695, 0.333573, - 0.202718, 0.531708, 0.197817, 0.356433, - 0.214424, 0.544509, 0.220785, 0.378853, - 0.225492, 0.55373, 0.245306, 0.402717, - 0.236236, 0.561348, 0.271593, 0.428375, - 0.246568, 0.568538, 0.299776, 0.454724, - 0.255941, 0.573462, 0.329433, 0.482291, - 0.264511, 0.576356, 0.360598, 0.509706, - 0.272129, 0.576446, 0.393204, 0.538805, - 0.278979, 0.575298, 0.427227, 0.568919, - 0.284528, 0.572154, 0.462157, 0.596804, - 0.288801, 0.564691, 0.497997, 0.625987, - 0.291334, 0.555134, 0.534467, 0.656414, - 0.292722, 0.545051, 0.571736, 0.683916, - 0.292185, 0.528813, 0.610158, 0.711809, - 0.290043, 0.51106, 0.649061, 0.739547, - 0.285246, 0.490103, 0.690081, 0.766914, - 0.277647, 0.465523, 0.732554, 0.791375, - 0.267603, 0.437718, 0.773982, 0.814772, - 0.256109, 0.40882, 0.81609, 0.836691, - 0.242281, 0.377823, 0.856849, 0.856984, - 0.227155, 0.34496, 0.898363, 0.876332, - 0.210395, 0.311335, 0.939471, 0.894988, - 0.192612, 0.277703, 0.980799, 0.911113, - 0.173236, 0.243019, 1.02215, 0.924092, - 0.152258, 0.209037, 1.06139, 0.936828, - 0.129575, 0.175909, 1.09635, 0.946869, - 0.10594, 0.143852, 1.12707, 0.958284, - 0.081318, 0.110289, 1.15419, 0.972325, - 0.0556133, 0.0747232, 1.17909, 0.986878, - 0.0297899, 0.0383149, 1.20163, 0.999936, - 0.00197169, 0.000912402, 1.22338, 0.151174, - 7.20365e-06, 0.351531, 3.09789e-06, 0.155594, - 0.00018279, 0.361806, 7.8608e-05, 0.156099, - 0.000731569, 0.362982, 0.000314615, 0.156053, - 0.00164578, 0.362869, 0.000707845, 0.156093, - 0.0029261, 0.362961, 0.00125884, 0.156099, - 0.00457155, 0.362959, 0.00196783, 0.15612, - 0.00658224, 0.362982, 0.00283622, 0.156168, - 0.00895774, 0.363048, 0.00386625, 0.156221, - 0.0116962, 0.363101, 0.00506109, 0.156324, - 0.0147973, 0.363241, 0.00642675, 0.156476, - 0.0182503, 0.363448, 0.00797175, 0.156731, - 0.0220266, 0.36384, 0.00971484, 0.156994, - 0.026176, 0.364179, 0.0116575, 0.157341, - 0.0306701, 0.36462, 0.0138207, 0.157867, - 0.0354591, 0.365364, 0.0162356, 0.15846, - 0.0406141, 0.366111, 0.0189092, 0.159308, - 0.0460519, 0.367248, 0.021885, 0.160426, - 0.0518096, 0.368767, 0.0252004, 0.161877, - 0.0578906, 0.370745, 0.0288825, 0.163995, - 0.0642812, 0.373831, 0.0330139, 0.16655, - 0.0710067, 0.377366, 0.0376283, 0.170237, - 0.0781522, 0.382799, 0.0428493, 0.175096, - 0.0857172, 0.389915, 0.0487324, 0.181069, - 0.0938025, 0.398487, 0.0554214, 0.188487, - 0.102363, 0.408799, 0.0630189, 0.197029, - 0.111343, 0.419991, 0.071634, 0.206684, - 0.120812, 0.431455, 0.0812797, 0.218698, - 0.131033, 0.445746, 0.0923651, 0.230726, - 0.141373, 0.457471, 0.104545, 0.245516, - 0.152387, 0.472388, 0.118449, 0.261551, - 0.163628, 0.486671, 0.133923, 0.277437, - 0.174814, 0.49762, 0.150849, 0.296662, - 0.186713, 0.51162, 0.169924, 0.31795, - 0.198513, 0.525435, 0.190848, 0.339422, - 0.210119, 0.536267, 0.213504, 0.362143, - 0.221354, 0.545982, 0.237947, 0.387198, - 0.23224, 0.555364, 0.264427, 0.412349, - 0.24257, 0.561489, 0.292519, 0.439274, - 0.252284, 0.566903, 0.322561, 0.466779, - 0.261023, 0.569614, 0.353952, 0.496011, - 0.26899, 0.571589, 0.387278, 0.524964, - 0.275498, 0.570325, 0.421356, 0.556518, - 0.281449, 0.568792, 0.457314, 0.584363, - 0.285526, 0.560268, 0.493199, 0.614214, - 0.28844, 0.55205, 0.530276, 0.645684, - 0.289777, 0.541906, 0.56855, 0.673446, - 0.289722, 0.526464, 0.606927, 0.701924, - 0.287792, 0.509872, 0.645945, 0.73037, - 0.284315, 0.490649, 0.685564, 0.757405, - 0.278804, 0.467964, 0.726511, 0.784025, - 0.269543, 0.441468, 0.768601, 0.808255, - 0.258117, 0.41216, 0.811321, 0.830739, - 0.244728, 0.380606, 0.853496, 0.851914, - 0.229428, 0.348111, 0.895374, 0.872586, - 0.212508, 0.314732, 0.937674, 0.891581, - 0.194025, 0.280338, 0.979869, 0.907641, - 0.174711, 0.245203, 1.02253, 0.922233, - 0.153509, 0.21077, 1.06371, 0.935878, - 0.130418, 0.177399, 1.09972, 0.946338, - 0.105558, 0.144507, 1.13124, 0.957265, - 0.080059, 0.110508, 1.15973, 0.971668, - 0.0539766, 0.0742311, 1.18515, 0.9866, - 0.0277101, 0.0375224, 1.20858, 1.00021, - 0.000515531, 0.000135226, 1.23135, 0.137468, - 6.86011e-06, 0.345041, 2.73315e-06, 0.13703, - 0.000173378, 0.343936, 6.90761e-05, 0.136986, - 0.000693048, 0.34383, 0.000276126, 0.136964, - 0.00155931, 0.343761, 0.000621337, 0.137003, - 0.00277211, 0.343863, 0.00110494, 0.137012, - 0.00433103, 0.343868, 0.00172744, 0.137043, - 0.00623606, 0.343916, 0.00249022, 0.13709, - 0.0084868, 0.343986, 0.00339559, 0.137145, - 0.0110814, 0.344045, 0.00444687, 0.137242, - 0.0140187, 0.344177, 0.00565007, 0.137431, - 0.0172713, 0.344491, 0.00701868, 0.137644, - 0.0208605, 0.344805, 0.00856042, 0.13791, - 0.024792, 0.345172, 0.0102863, 0.138295, - 0.0290461, 0.345734, 0.0122185, 0.138764, - 0.0335957, 0.346371, 0.0143771, 0.139415, - 0.038467, 0.347298, 0.0167894, 0.140272, - 0.0436176, 0.348527, 0.0194895, 0.141457, - 0.0491016, 0.350276, 0.0225043, 0.14303, - 0.0548764, 0.352646, 0.0258962, 0.145289, - 0.0610096, 0.356206, 0.0297168, 0.148502, - 0.0674777, 0.361488, 0.0340562, 0.152188, - 0.074345, 0.367103, 0.0389534, 0.157359, - 0.0817442, 0.375247, 0.0445541, 0.16379, - 0.0896334, 0.385064, 0.0509535, 0.171376, - 0.098005, 0.396082, 0.0582611, 0.179901, - 0.106817, 0.407418, 0.06654, 0.189892, - 0.116239, 0.420031, 0.075994, 0.201838, - 0.12627, 0.434321, 0.0867239, 0.214311, - 0.136701, 0.447631, 0.0987517, 0.228902, - 0.147616, 0.462046, 0.112353, 0.245107, - 0.158871, 0.476942, 0.127605, 0.262292, - 0.170261, 0.490285, 0.144469, 0.281215, - 0.182017, 0.503783, 0.163282, 0.301058, - 0.193729, 0.515505, 0.183873, 0.322752, - 0.205512, 0.52682, 0.206466, 0.347547, - 0.217214, 0.539473, 0.231194, 0.370969, - 0.227966, 0.546625, 0.257288, 0.397533, - 0.238555, 0.55472, 0.285789, 0.42398, - 0.248278, 0.559468, 0.315746, 0.452928, - 0.257422, 0.564095, 0.347724, 0.482121, - 0.265306, 0.565426, 0.380922, 0.510438, - 0.272043, 0.563205, 0.415639, 0.541188, - 0.277614, 0.561087, 0.451702, 0.571667, - 0.281927, 0.554922, 0.48845, 0.602432, - 0.285015, 0.546838, 0.526442, 0.634126, - 0.286512, 0.537415, 0.564896, 0.662816, - 0.286388, 0.522906, 0.604037, 0.692411, - 0.284734, 0.507003, 0.643795, 0.720946, - 0.281297, 0.488398, 0.68298, 0.748293, - 0.276262, 0.466353, 0.723466, 0.776931, - 0.269978, 0.443573, 0.764565, 0.801065, - 0.260305, 0.415279, 0.805838, 0.825843, - 0.247426, 0.384773, 0.849985, 0.84807, - 0.232437, 0.352555, 0.893174, 0.869122, - 0.215806, 0.318642, 0.936564, 0.888963, - 0.197307, 0.28381, 0.980253, 0.905547, - 0.177203, 0.247888, 1.02463, 0.918554, - 0.155542, 0.212904, 1.06714, 0.931395, - 0.131948, 0.1787, 1.10451, 0.941749, - 0.106723, 0.145902, 1.13694, 0.954551, - 0.0804939, 0.111193, 1.1666, 0.970279, - 0.0534239, 0.0744697, 1.19249, 0.986117, - 0.0257452, 0.0368788, 1.21665, 0.999938, 0.00190634, - 0.0010291, 1.23981, 0.118493, - 6.47439e-06, 0.32272, 2.3772e-06, 0.118765, - 0.000163023, 0.323456, 5.98573e-05, 0.118772, - 0.00065212, 0.323477, 0.000239447, 0.118843, - 0.00146741, 0.323657, 0.000538881, 0.118804, - 0.00260846, 0.323553, 0.00095826, 0.118826, - 0.00407576, 0.323595, 0.00149845, 0.118846, - 0.00586826, 0.323617, 0.00216047, 0.118886, - 0.00798578, 0.32367, 0.00294679, 0.118947, - 0.0104273, 0.323753, 0.00386124, 0.119055, - 0.0131909, 0.323922, 0.00490999, 0.119241, - 0.0162444, 0.324251, 0.00610804, 0.11944, - 0.0196339, 0.324544, 0.00745805, 0.119739, - 0.0233378, 0.325026, 0.00897805, 0.12011, - 0.0273179, 0.325586, 0.0106895, 0.120571, - 0.0316143, 0.326231, 0.0126073, 0.12124, - 0.0361939, 0.327264, 0.0147654, 0.122162, - 0.0410511, 0.328733, 0.0172001, 0.123378, - 0.0462233, 0.330659, 0.0199375, 0.125183, - 0.0517109, 0.333754, 0.0230498, 0.127832, - 0.0575652, 0.338507, 0.026597, 0.130909, - 0.0637441, 0.343666, 0.0306345, 0.135221, - 0.0704302, 0.351063, 0.035273, 0.14082, - 0.0776364, 0.360604, 0.0406137, 0.146781, - 0.0852293, 0.369638, 0.0466788, 0.155121, - 0.0935351, 0.3827, 0.0537628, 0.16398, - 0.102234, 0.39522, 0.0617985, 0.173926, - 0.111465, 0.40793, 0.07097, 0.185137, - 0.121296, 0.42105, 0.0813426, 0.19826, - 0.13169, 0.435735, 0.0931596, 0.212938, - 0.142614, 0.450932, 0.106547, 0.229046, - 0.153884, 0.465726, 0.121575, 0.246246, - 0.165382, 0.479461, 0.138286, 0.264637, - 0.176806, 0.492106, 0.15666, 0.284959, - 0.188793, 0.504774, 0.17728, 0.308157, - 0.200763, 0.518805, 0.19988, 0.330951, - 0.21239, 0.528231, 0.224293, 0.3549, - 0.223521, 0.536376, 0.250541, 0.381502, - 0.234169, 0.544846, 0.278902, 0.409529, - 0.244077, 0.551717, 0.309227, 0.437523, - 0.253363, 0.55517, 0.341426, 0.467624, - 0.261659, 0.557772, 0.37518, 0.497268, - 0.268498, 0.556442, 0.41007, 0.528294, - 0.274018, 0.553915, 0.446445, 0.559053, - 0.278169, 0.549153, 0.483779, 0.589329, - 0.281229, 0.539878, 0.522249, 0.622503, - 0.282902, 0.53162, 0.561754, 0.652382, - 0.282815, 0.518119, 0.601544, 0.681847, - 0.281247, 0.502187, 0.641574, 0.712285, - 0.277986, 0.484824, 0.682633, 0.740094, - 0.273017, 0.463483, 0.723426, 0.768478, - 0.266692, 0.441299, 0.763747, 0.794556, - 0.258358, 0.415238, 0.805565, 0.819408, - 0.248807, 0.386912, 0.847254, 0.843411, - 0.236214, 0.356165, 0.891091, 0.862397, - 0.219794, 0.320562, 0.936174, 0.883113, - 0.201768, 0.285322, 0.982562, 0.90023, - 0.181672, 0.249713, 1.02862, 0.915192, - 0.159279, 0.214546, 1.07163, 0.928458, - 0.134725, 0.180285, 1.10995, 0.94069, - 0.10913, 0.147119, 1.14354, 0.953409, - 0.0821315, 0.112492, 1.17372, 0.969537, - 0.0542677, 0.0752014, 1.20043, 0.985612, - 0.0259096, 0.0370361, 1.22528, 0.999835, 0.00298198, - 0.00151801, 1.24959, 0.10097, - 6.02574e-06, 0.300277, 2.02619e-06, 0.101577, - 0.000152164, 0.302077, 5.11662e-05, 0.101572, - 0.000608889, 0.302066, 0.000204751, 0.101566, - 0.00136997, 0.302047, 0.000460753, 0.101592, - 0.00243557, 0.302114, 0.000819497, 0.101608, - 0.0038053, 0.30214, 0.00128154, 0.101627, - 0.00547906, 0.30216, 0.0018483, 0.101669, - 0.00745647, 0.302224, 0.00252223, 0.101732, - 0.00973615, 0.302318, 0.00330716, 0.101844, - 0.0123097, 0.302513, 0.00421061, 0.102025, - 0.0151681, 0.30285, 0.00524481, 0.102224, - 0.0183334, 0.303166, 0.0064154, 0.102515, - 0.0217819, 0.303654, 0.00774063, 0.102886, - 0.0255067, 0.304243, 0.0092398, 0.103395, - 0.029514, 0.305089, 0.0109339, 0.104109, - 0.0337912, 0.306301, 0.0128561, 0.105074, - 0.0383565, 0.30798, 0.0150338, 0.10654, - 0.0432132, 0.310726, 0.0175228, 0.108478, - 0.0484244, 0.314351, 0.0203648, 0.111015, - 0.0539339, 0.319032, 0.0236325, 0.114682, - 0.0598885, 0.32605, 0.0274188, 0.11911, - 0.0663375, 0.334109, 0.0317905, 0.124736, - 0.0733011, 0.344013, 0.0368502, 0.131479, - 0.0807744, 0.355358, 0.0427104, 0.139283, - 0.0888204, 0.367614, 0.0494788, 0.148054, - 0.0973394, 0.380072, 0.0572367, 0.159037, - 0.10665, 0.395678, 0.0662704, 0.169794, - 0.116221, 0.40795, 0.0763192, 0.18314, - 0.126632, 0.423546, 0.087956, 0.197515, - 0.137383, 0.438213, 0.101042, 0.213514, - 0.148641, 0.453248, 0.115827, 0.23065, - 0.160117, 0.46688, 0.132283, 0.249148, - 0.171807, 0.479962, 0.150644, 0.270219, - 0.183695, 0.494618, 0.171073, 0.292338, - 0.195574, 0.506937, 0.193378, 0.314999, - 0.207205, 0.516463, 0.217585, 0.340991, - 0.218955, 0.528123, 0.24428, 0.367982, - 0.229917, 0.537025, 0.272784, 0.39432, - 0.239737, 0.541627, 0.302742, 0.423364, - 0.249048, 0.546466, 0.335112, 0.453751, - 0.257329, 0.549466, 0.369032, 0.48416, - 0.264623, 0.549503, 0.404577, 0.515262, - 0.270411, 0.547008, 0.441337, 0.547036, - 0.274581, 0.542249, 0.479162, 0.576614, - 0.277266, 0.533015, 0.517904, 0.611143, - 0.279144, 0.525512, 0.558508, 0.640989, - 0.279001, 0.51154, 0.598995, 0.671182, - 0.277324, 0.495641, 0.639935, 0.700848, - 0.273908, 0.477526, 0.681017, 0.729862, - 0.269063, 0.457955, 0.722764, 0.758273, - 0.262282, 0.434846, 0.764349, 0.784121, - 0.254281, 0.409203, 0.806206, 0.809798, - 0.24505, 0.382694, 0.848617, 0.834953, - 0.233861, 0.354034, 0.892445, 0.856817, - 0.221308, 0.321764, 0.936263, 0.877609, - 0.205996, 0.288118, 0.982401, 0.897489, - 0.186702, 0.253277, 1.02975, 0.913792, - 0.164618, 0.217963, 1.07488, 0.92785, - 0.140023, 0.183221, 1.11487, 0.940378, - 0.11328, 0.149385, 1.14947, 0.95273, - 0.0853958, 0.114152, 1.1807, 0.969059, - 0.0568698, 0.0769845, 1.20912, 0.985574, - 0.0276502, 0.0381186, 1.23498, 0.999943, 0.00239052, - 0.00126861, 1.25987, 0.0852715, - 5.60067e-06, 0.279021, 1.71162e-06, 0.0854143, - 0.000140871, 0.279483, 4.30516e-05, 0.0854191, - 0.000563385, 0.2795, 0.000172184, 0.0854188, - 0.00126753, 0.279493, 0.000387464, 0.0854229, - 0.00225337, 0.279501, 0.00068918, 0.0854443, - 0.00352086, 0.279549, 0.00107803, 0.0854697, - 0.00506962, 0.279591, 0.00155536, 0.0855093, - 0.00689873, 0.279652, 0.00212354, 0.0855724, - 0.00900821, 0.279752, 0.00278703, 0.0856991, - 0.0113799, 0.280011, 0.0035551, 0.085855, - 0.0140314, 0.280297, 0.00443449, 0.0860682, - 0.016963, 0.280682, 0.00543636, 0.086344, - 0.0201438, 0.281159, 0.0065788, 0.0867426, - 0.0235999, 0.281886, 0.00787977, 0.087239, - 0.0273069, 0.282745, 0.0093606, 0.0879815, - 0.031269, 0.284139, 0.011056, 0.0891258, - 0.035531, 0.28647, 0.0130065, 0.0906909, - 0.0400947, 0.289708, 0.0152495, 0.0927624, - 0.0449638, 0.293904, 0.0178454, 0.0958376, - 0.0502427, 0.300471, 0.0208915, 0.0995827, - 0.0559514, 0.30806, 0.0244247, 0.104526, - 0.0622152, 0.317874, 0.0285721, 0.110532, - 0.0690046, 0.329332, 0.0334227, 0.117385, - 0.0763068, 0.341217, 0.0390466, 0.12522, - 0.084184, 0.353968, 0.0455786, 0.134037, - 0.0925248, 0.366797, 0.0530773, 0.144014, - 0.101487, 0.380209, 0.0617424, 0.156013, - 0.111273, 0.395956, 0.071777, 0.168872, - 0.121431, 0.41053, 0.0830905, 0.183089, - 0.132105, 0.425073, 0.0959341, 0.198763, - 0.143286, 0.439833, 0.110448, 0.216159, - 0.154841, 0.454507, 0.126769, 0.234859, - 0.166588, 0.468368, 0.14495, 0.255879, - 0.178626, 0.482846, 0.165233, 0.27677, - 0.190218, 0.493489, 0.187217, 0.301184, - 0.202227, 0.506549, 0.211659, 0.325852, - 0.213764, 0.5158, 0.237922, 0.352824, - 0.22487, 0.525442, 0.26632, 0.380882, - 0.235246, 0.532487, 0.296691, 0.410137, - 0.244847, 0.537703, 0.329179, 0.439787, - 0.253122, 0.540361, 0.363135, 0.472291, - 0.260517, 0.542734, 0.399222, 0.501856, - 0.266519, 0.538826, 0.436352, 0.534816, - 0.270905, 0.535152, 0.474505, 0.565069, - 0.273826, 0.525979, 0.513988, 0.597154, - 0.275333, 0.516394, 0.554852, 0.630473, - 0.275314, 0.506206, 0.596592, 0.660574, - 0.273323, 0.489769, 0.638117, 0.692015, - 0.270008, 0.472578, 0.680457, 0.720647, - 0.265001, 0.452134, 0.723008, 0.750528, - 0.258311, 0.430344, 0.765954, 0.777568, - 0.250046, 0.405624, 0.809012, 0.80387, - 0.240114, 0.378339, 0.852425, 0.828439, - 0.228737, 0.349877, 0.895346, 0.851472, - 0.216632, 0.318968, 0.940695, 0.873906, - 0.202782, 0.287489, 0.987235, 0.89467, - 0.187059, 0.254394, 1.03348, 0.912281, - 0.168818, 0.221294, 1.07812, 0.927358, - 0.146494, 0.18675, 1.11928, 0.940385, - 0.120009, 0.152322, 1.15609, 0.952672, - 0.0917183, 0.117514, 1.18875, 0.968496, - 0.0620321, 0.0797405, 1.21821, 0.985236, - 0.0314945, 0.0402383, 1.24523, 0.99998, - 0.000575153, 0.000110644, 1.27133, 0.0702429, - 5.12222e-06, 0.255273, 1.40947e-06, 0.0702981, - 0.000128826, 0.255469, 3.54488e-05, 0.0703691, - 0.000515562, 0.255727, 0.000141874, 0.0703805, - 0.00116, 0.255754, 0.00031929, 0.0703961, - 0.00206224, 0.255813, 0.000567999, 0.0704102, - 0.00322223, 0.255839, 0.00088871, 0.0704298, - 0.00463928, 0.255863, 0.00128272, 0.0704759, - 0.00631375, 0.255953, 0.00175283, 0.0705434, - 0.00824317, 0.256079, 0.00230342, 0.0706693, - 0.010412, 0.25636, 0.0029443, 0.0708189, - 0.0128439, 0.256647, 0.00368031, 0.0710364, - 0.0155177, 0.257084, 0.00452614, 0.0713223, - 0.0184374, 0.257637, 0.00549706, 0.0717182, - 0.0216002, 0.258416, 0.00661246, 0.072321, - 0.0249966, 0.259699, 0.00790147, 0.0731446, - 0.0286566, 0.261475, 0.0093884, 0.0743352, - 0.0325888, 0.264132, 0.0111186, 0.0760676, - 0.036843, 0.26815, 0.013145, 0.078454, - 0.0414292, 0.273636, 0.0155251, 0.0818618, - 0.0464634, 0.281653, 0.0183525, 0.0857382, - 0.0519478, 0.289992, 0.0216642, 0.0908131, - 0.0579836, 0.30066, 0.0255956, 0.0967512, - 0.0645124, 0.312204, 0.0301954, 0.103717, - 0.0716505, 0.325001, 0.0356017, 0.111596, - 0.0793232, 0.338129, 0.041896, 0.120933, - 0.087645, 0.352853, 0.0492447, 0.130787, - 0.096492, 0.366192, 0.0576749, 0.142311, - 0.105973, 0.380864, 0.0673969, 0.155344, - 0.116182, 0.396575, 0.0785899, 0.169535, - 0.126815, 0.411443, 0.0912377, 0.185173, - 0.138015, 0.426256, 0.105607, 0.201755, - 0.149325, 0.439607, 0.121551, 0.221334, - 0.161207, 0.455467, 0.139608, 0.241461, - 0.173162, 0.469096, 0.159591, 0.26294, - 0.18504, 0.481014, 0.18156, 0.286776, - 0.196881, 0.493291, 0.205781, 0.311596, - 0.208311, 0.503556, 0.231819, 0.338667, - 0.219671, 0.513268, 0.260274, 0.366021, - 0.230451, 0.519414, 0.290862, 0.395875, - 0.240131, 0.526766, 0.323196, 0.425564, - 0.248566, 0.52905, 0.357071, 0.457094, - 0.256195, 0.530796, 0.393262, 0.488286, - 0.262331, 0.528703, 0.430797, 0.522291, - 0.267141, 0.52727, 0.470231, 0.554172, - 0.270411, 0.519848, 0.510477, 0.586427, - 0.271986, 0.510307, 0.551594, 0.619638, - 0.27192, 0.499158, 0.593849, 0.650656, - 0.269817, 0.483852, 0.636314, 0.68284, - 0.266267, 0.467515, 0.679679, 0.714356, - 0.26113, 0.44931, 0.723884, 0.742717, - 0.254067, 0.425789, 0.767245, 0.770894, - 0.245652, 0.401144, 0.811819, 0.797358, - 0.235554, 0.374224, 0.856315, 0.823377, - 0.223896, 0.346167, 0.901077, 0.847456, - 0.210865, 0.316056, 0.946502, 0.870697, - 0.196574, 0.284503, 0.993711, 0.891068, - 0.180814, 0.251628, 1.04134, 0.909267, - 0.163314, 0.219065, 1.08609, 0.925653, - 0.143304, 0.186446, 1.12702, 0.940017, - 0.121322, 0.153416, 1.16371, 0.952398, - 0.0973872, 0.120334, 1.19712, 0.967568, - 0.0698785, 0.08352, 1.22791, 0.984772, - 0.0390031, 0.0439209, 1.25672, 1.00026, - 0.0070087, 0.00315668, 1.28428, 0.0556653, - 4.59654e-06, 0.227325, 1.12556e-06, 0.0565238, - 0.000116382, 0.230826, 2.84985e-05, 0.0565717, - 0.000465666, 0.231026, 0.000114036, 0.0565859, - 0.00104773, 0.231079, 0.000256656, 0.0565761, - 0.00186255, 0.231025, 0.00045663, 0.0565913, - 0.00291002, 0.231058, 0.000714664, 0.0566108, - 0.00418998, 0.231085, 0.00103224, 0.0566532, - 0.00570206, 0.231169, 0.00141202, 0.0567473, - 0.00743666, 0.231417, 0.00186018, 0.0568567, - 0.00940298, 0.231661, 0.00238264, 0.0569859, - 0.0115991, 0.231895, 0.00298699, 0.0572221, - 0.0140096, 0.232456, 0.00368957, 0.057519, - 0.0166508, 0.233096, 0.00450303, 0.0579534, - 0.01951, 0.234094, 0.00544945, 0.0585922, - 0.0225991, 0.235629, 0.00655564, 0.0595647, - 0.0259416, 0.238106, 0.00785724, 0.0609109, - 0.0295661, 0.241557, 0.00939127, 0.0628751, - 0.0335126, 0.246652, 0.0112198, 0.0656908, - 0.0378604, 0.254091, 0.0134168, 0.0691347, - 0.0426543, 0.262666, 0.0160374, 0.0732165, - 0.0478967, 0.272029, 0.0191514, 0.0782863, - 0.0536716, 0.283007, 0.0228597, 0.0843973, - 0.0600683, 0.295732, 0.0272829, 0.0913598, - 0.0670095, 0.308779, 0.032484, 0.0994407, - 0.0745516, 0.322886, 0.0385886, 0.108189, - 0.082712, 0.336408, 0.0457133, 0.118574, - 0.0914927, 0.351692, 0.0539832, 0.129989, - 0.100854, 0.366502, 0.0635162, 0.142722, - 0.110837, 0.381675, 0.0744386, 0.156654, - 0.121353, 0.3963, 0.0868483, 0.172151, - 0.132414, 0.411477, 0.100963, 0.188712, - 0.143809, 0.42508, 0.116795, 0.208093, - 0.155765, 0.441328, 0.134715, 0.227936, - 0.167608, 0.454328, 0.154396, 0.249495, - 0.179579, 0.467235, 0.176179, 0.27362, - 0.191488, 0.480248, 0.200193, 0.296371, - 0.202618, 0.487886, 0.225775, 0.324234, - 0.214133, 0.499632, 0.25441, 0.353049, - 0.225212, 0.509532, 0.285077, 0.381785, - 0.234875, 0.514265, 0.317047, 0.414038, - 0.244205, 0.521282, 0.351874, 0.445251, - 0.252145, 0.522931, 0.388279, 0.476819, - 0.258433, 0.520947, 0.425825, 0.509209, - 0.263411, 0.517669, 0.465104, 0.542759, - 0.266732, 0.512841, 0.505741, 0.574822, - 0.268263, 0.503317, 0.547611, 0.609324, - 0.268489, 0.493035, 0.590953, 0.641772, - 0.266941, 0.478816, 0.63488, 0.674049, - 0.263297, 0.462863, 0.679072, 0.705071, - 0.257618, 0.442931, 0.723487, 0.734709, - 0.250625, 0.421299, 0.768708, 0.763704, - 0.24179, 0.397085, 0.814375, 0.791818, - 0.231115, 0.370577, 0.859907, 0.817439, - 0.21922, 0.34232, 0.906715, 0.843202, - 0.205658, 0.312627, 0.953943, 0.866639, - 0.190563, 0.280933, 1.00185, 0.888129, - 0.173978, 0.248393, 1.05105, 0.907239, - 0.155485, 0.216007, 1.09704, 0.923893, - 0.134782, 0.183233, 1.13857, 0.938882, - 0.11249, 0.150376, 1.17539, 0.952464, - 0.0890706, 0.117177, 1.20924, 0.968529, - 0.0646523, 0.0813095, 1.24055, 0.984763, - 0.038606, 0.0439378, 1.27018, 1.00053, - 0.01238, 0.00598668, 1.29873, 0.0437928, - 4.09594e-06, 0.204012, 8.79224e-07, 0.0440166, - 0.000103395, 0.205049, 2.21946e-05, 0.0440529, - 0.000413633, 0.205225, 8.87981e-05, 0.0440493, - 0.000930594, 0.2052, 0.000199858, 0.0439884, - 0.00165352, 0.204901, 0.000355495, 0.0440716, - 0.0025849, 0.205255, 0.000556983, 0.0440968, - 0.00372222, 0.205311, 0.000805326, 0.0441359, - 0.00506478, 0.205391, 0.00110333, 0.0442231, - 0.00660384, 0.205638, 0.00145768, 0.0443254, - 0.00835246, 0.205877, 0.00187275, 0.0444832, - 0.0102992, 0.20627, 0.00235938, 0.0447001, - 0.0124449, 0.206796, 0.0029299, 0.0450168, - 0.0147935, 0.207593, 0.0036005, 0.0454816, - 0.017336, 0.208819, 0.00439246, 0.0462446, - 0.0201156, 0.211036, 0.00533864, 0.0473694, - 0.0231568, 0.214388, 0.00646984, 0.0490191, - 0.0264941, 0.219357, 0.00783856, 0.0512776, - 0.030184, 0.226061, 0.00950182, 0.0541279, - 0.0342661, 0.234094, 0.0115156, 0.0578989, - 0.0388539, 0.244297, 0.0139687, 0.0620835, - 0.0438735, 0.254457, 0.0169015, 0.0673497, - 0.04951, 0.266706, 0.0204554, 0.0731759, - 0.0556263, 0.278753, 0.0246606, 0.0803937, - 0.0624585, 0.29309, 0.0297126, 0.0879287, - 0.0697556, 0.305856, 0.0355868, 0.0970669, - 0.0778795, 0.321059, 0.0425768, 0.106508, - 0.0863541, 0.333873, 0.05056, 0.11776, - 0.0955935, 0.349008, 0.0598972, 0.130081, - 0.105438, 0.363776, 0.0706314, 0.144454, - 0.115899, 0.380112, 0.0828822, 0.1596, - 0.126827, 0.394843, 0.0967611, 0.176097, - 0.138161, 0.409033, 0.112381, 0.194726, - 0.149904, 0.424257, 0.129952, 0.213944, - 0.161675, 0.436945, 0.149333, 0.235516, - 0.173659, 0.450176, 0.170892, 0.260564, - 0.185963, 0.466305, 0.194984, 0.285183, - 0.197582, 0.477328, 0.220805, 0.311095, - 0.208697, 0.486566, 0.248694, 0.338924, - 0.219519, 0.494811, 0.279015, 0.369757, - 0.229766, 0.504065, 0.311725, 0.3996, - 0.238879, 0.507909, 0.345844, 0.430484, - 0.246802, 0.509805, 0.381749, 0.46413, - 0.253924, 0.511436, 0.420251, 0.497077, - 0.259319, 0.508787, 0.459957, 0.530434, - 0.263297, 0.50394, 0.501356, 0.565725, - 0.265619, 0.49804, 0.544252, 0.599254, - 0.265842, 0.487346, 0.587856, 0.631251, - 0.263978, 0.472975, 0.631969, 0.663972, - 0.26043, 0.457135, 0.677471, 0.697724, - 0.255358, 0.439844, 0.723744, 0.727725, - 0.248308, 0.417872, 0.770653, 0.756417, - 0.239181, 0.39273, 0.817357, 0.785419, - 0.22814, 0.367839, 0.864221, 0.81266, - 0.215681, 0.339449, 0.912701, 0.839391, - 0.201623, 0.309279, 0.962419, 0.86366, - 0.185624, 0.278029, 1.0122, 0.885028, - 0.16797, 0.245294, 1.06186, 0.904639, - 0.148336, 0.212689, 1.10934, 0.922048, - 0.12637, 0.179616, 1.15063, 0.936952, - 0.102928, 0.146749, 1.18885, 0.951895, - 0.0785268, 0.112733, 1.22352, 0.967198, - 0.0530153, 0.0760056, 1.25681, 0.984405, - 0.02649, 0.0383183, 1.28762, 1.00021, 0.00070019, - 0.00020039, 1.31656, 0.0325964, - 3.55447e-06, 0.176706, 6.55682e-07, 0.0329333, - 8.99174e-05, 0.178527, 1.65869e-05, 0.0329181, - 0.000359637, 0.178453, 6.63498e-05, 0.0329085, - 0.000808991, 0.178383, 0.000149332, 0.0329181, - 0.00143826, 0.178394, 0.000265873, 0.0329425, - 0.00224678, 0.178517, 0.000416597, 0.0329511, - 0.00323575, 0.17849, 0.000603299, 0.033011, - 0.00439875, 0.178695, 0.000829422, 0.0330733, - 0.00574059, 0.178843, 0.00109908, 0.0331857, - 0.00725896, 0.179176, 0.00141933, 0.0333445, - 0.00895289, 0.179618, 0.0017999, 0.0335674, - 0.0108219, 0.180238, 0.00225316, 0.033939, - 0.0128687, 0.181417, 0.00279765, 0.0345239, - 0.015114, 0.183395, 0.0034564, 0.0354458, - 0.017596, 0.186616, 0.00425864, 0.0368313, - 0.0203524, 0.191547, 0.00524936, 0.0386115, - 0.0234105, 0.197508, 0.00647033, 0.0410303, - 0.0268509, 0.205395, 0.00798121, 0.0442245, - 0.0307481, 0.215365, 0.0098557, 0.0478659, - 0.0350863, 0.225595, 0.0121417, 0.0522416, - 0.0399506, 0.236946, 0.0149385, 0.0574513, - 0.045357, 0.249442, 0.0183189, 0.0631208, - 0.0512863, 0.261222, 0.0223644, 0.0701124, - 0.0579273, 0.275418, 0.0272418, 0.0777331, - 0.0650652, 0.288989, 0.0329458, 0.0862709, - 0.0728813, 0.302546, 0.0396819, 0.096103, - 0.081363, 0.317164, 0.04757, 0.106976, - 0.0904463, 0.331733, 0.0567012, 0.119175, - 0.100105, 0.34661, 0.067202, 0.132919, - 0.110375, 0.362249, 0.0792588, 0.147727, - 0.121115, 0.376978, 0.0928672, 0.163618, - 0.132299, 0.390681, 0.108228, 0.182234, - 0.143887, 0.406571, 0.125502, 0.201809, - 0.155827, 0.42042, 0.144836, 0.225041, - 0.168357, 0.438411, 0.166706, 0.247621, - 0.18004, 0.450368, 0.189909, 0.27097, - 0.191536, 0.460083, 0.215251, 0.296658, - 0.203024, 0.469765, 0.243164, 0.325892, - 0.214056, 0.481837, 0.273388, 0.35406, - 0.224104, 0.487474, 0.305344, 0.384372, - 0.233489, 0.492773, 0.339741, 0.41749, - 0.241874, 0.498451, 0.376287, 0.45013, - 0.248834, 0.499632, 0.414195, 0.481285, - 0.254658, 0.495233, 0.454077, 0.519183, - 0.259367, 0.496401, 0.496352, 0.551544, - 0.261818, 0.487686, 0.538798, 0.587349, - 0.262964, 0.479453, 0.583626, 0.621679, - 0.262128, 0.467709, 0.629451, 0.654991, - 0.258998, 0.452123, 0.67566, 0.686873, - 0.254119, 0.433495, 0.723248, 0.719801, - 0.246946, 0.413657, 0.771156, 0.750355, - 0.237709, 0.390366, 0.81989, 0.780033, - 0.226549, 0.364947, 0.868601, 0.809254, - 0.214186, 0.337256, 0.920034, 0.836576, - 0.199639, 0.307395, 0.971706, 0.861774, - 0.183169, 0.275431, 1.02479, 0.885707, - 0.165111, 0.243431, 1.07837, 0.904742, - 0.144363, 0.210921, 1.12783, 0.915604, - 0.121305, 0.17647, 1.17254, 0.930959, - 0.0962119, 0.143106, 1.21012, 0.948404, - 0.069969, 0.108112, 1.24474, 0.967012, - 0.0427586, 0.0708478, 1.27718, 0.984183, - 0.0147043, 0.032335, 1.3083, 0.999577, 0.0142165, - 0.00726867, 1.3382, 0.0229227, - 2.99799e-06, 0.148623, 4.62391e-07, 0.0232194, - 7.58796e-05, 0.15054, 1.17033e-05, 0.0232315, - 0.000303636, 0.15063, 4.68397e-05, 0.0232354, - 0.000683189, 0.150624, 0.000105472, 0.0232092, - 0.0012136, 0.150445, 0.000187744, 0.0232523, - 0.00189765, 0.150679, 0.000294847, 0.0232828, - 0.00273247, 0.150789, 0.000428013, 0.0233371, - 0.00371287, 0.150995, 0.000591134, 0.0234015, - 0.00484794, 0.15118, 0.000787642, 0.023514, - 0.00612877, 0.151562, 0.00102547, 0.023679, - 0.00756125, 0.152116, 0.00131351, 0.0239559, - 0.00914651, 0.153162, 0.00166594, 0.0244334, - 0.010904, 0.155133, 0.00210182, 0.025139, - 0.0128615, 0.158035, 0.00264406, 0.0262598, - 0.0150628, 0.162751, 0.00332923, 0.0277875, - 0.0175532, 0.168944, 0.00419773, 0.0298472, - 0.0203981, 0.176835, 0.00530034, 0.0325444, - 0.023655, 0.186686, 0.00669777, 0.0355581, - 0.0272982, 0.196248, 0.00842661, 0.0392841, - 0.0314457, 0.207352, 0.0105854, 0.0436815, - 0.0361157, 0.219279, 0.0132458, 0.0485272, - 0.0412932, 0.230728, 0.0164736, 0.0541574, - 0.0470337, 0.242994, 0.0203715, 0.0609479, - 0.0535002, 0.257042, 0.0250953, 0.0685228, - 0.0605409, 0.27102, 0.0306856, 0.0768042, - 0.0680553, 0.28406, 0.037193, 0.0864844, - 0.0765011, 0.299186, 0.0449795, 0.0969415, - 0.0852674, 0.3132, 0.0538316, 0.108478, - 0.0947333, 0.327138, 0.0641149, 0.121705, - 0.10481, 0.342345, 0.0759185, 0.136743, - 0.115474, 0.358472, 0.0894116, 0.152986, - 0.126536, 0.374067, 0.104562, 0.170397, - 0.138061, 0.388267, 0.121632, 0.191392, - 0.150203, 0.406467, 0.140996, 0.211566, - 0.161751, 0.418641, 0.161696, 0.233567, - 0.173407, 0.430418, 0.184557, 0.257769, - 0.185397, 0.44277, 0.210092, 0.28531, - 0.197048, 0.457191, 0.237827, 0.311726, - 0.20784, 0.464712, 0.267253, 0.340537, - 0.218345, 0.472539, 0.299332, 0.372921, - 0.228306, 0.482331, 0.333988, 0.402924, - 0.236665, 0.484378, 0.369722, 0.434475, - 0.244097, 0.484717, 0.407836, 0.469736, - 0.250547, 0.487093, 0.448465, 0.505045, - 0.25511, 0.485575, 0.490263, 0.540262, - 0.258444, 0.481225, 0.534495, 0.576347, - 0.259903, 0.473481, 0.579451, 0.608656, - 0.259572, 0.4603, 0.625604, 0.646679, - 0.257908, 0.450341, 0.674511, 0.679902, - 0.253663, 0.431561, 0.723269, 0.714159, - 0.247419, 0.412684, 0.773263, 0.745345, - 0.239122, 0.389388, 0.824182, 0.778248, - 0.228837, 0.365361, 0.876634, 0.807208, - 0.216197, 0.337667, 0.92945, 0.835019, - 0.201772, 0.307197, 0.985261, 0.860261, - 0.185291, 0.274205, 1.04299, 0.877601, - 0.165809, 0.240178, 1.09816, 0.898211, - 0.143897, 0.207571, 1.14694, 0.915789, - 0.119513, 0.174904, 1.19008, 0.931831, - 0.0932919, 0.141423, 1.2297, 0.949244, - 0.0656528, 0.105603, 1.26553, 0.967527, - 0.0370262, 0.0679551, 1.29986, 0.984139, - 0.00730117, 0.0283133, 1.33252, 0.999713, 0.0234648, - 0.0121785, 1.36397, 0.0152135, - 2.45447e-06, 0.122795, 3.04092e-07, 0.0151652, - 6.15778e-05, 0.122399, 7.6292e-06, 0.0151181, - 0.000245948, 0.122023, 3.04802e-05, 0.0151203, - 0.000553394, 0.12203, 6.86634e-05, 0.015125, - 0.000983841, 0.122037, 0.000122463, 0.0151427, - 0.00153774, 0.12214, 0.000192706, 0.0151708, - 0.0022103, 0.122237, 0.000281219, 0.0152115, - 0.00300741, 0.12238, 0.000390804, 0.0152877, - 0.00392494, 0.1227, 0.000526317, 0.015412, - 0.00496597, 0.123244, 0.00069443, 0.0156201, - 0.00613314, 0.124228, 0.00090547, 0.0159658, - 0.00744113, 0.125945, 0.0011732, 0.0165674, - 0.00892546, 0.129098, 0.00151888, 0.017487, - 0.010627, 0.133865, 0.00197007, 0.018839, - 0.0126043, 0.140682, 0.0025637, 0.020554, - 0.0148814, 0.148534, 0.00333637, 0.0226727, - 0.0175123, 0.157381, 0.00433738, 0.0251879, - 0.0205266, 0.166685, 0.00561664, 0.0283635, - 0.0240319, 0.177796, 0.00725563, 0.0318694, - 0.0279432, 0.188251, 0.00928811, 0.0361044, - 0.0324313, 0.200038, 0.011835, 0.0406656, - 0.0373527, 0.210685, 0.0149146, 0.0463846, - 0.0430132, 0.224182, 0.0187254, 0.0525696, - 0.0491013, 0.23634, 0.0232283, 0.0598083, - 0.0559175, 0.250013, 0.0286521, 0.0679437, - 0.0633657, 0.263981, 0.0350634, 0.0771181, - 0.0714602, 0.278072, 0.0425882, 0.0881273, - 0.0803502, 0.29511, 0.0514487, 0.0996628, - 0.0896903, 0.309976, 0.0615766, 0.112702, - 0.099644, 0.325611, 0.0732139, 0.126488, - 0.109829, 0.339321, 0.0862324, 0.142625, - 0.120859, 0.35574, 0.101275, 0.15953, - 0.131956, 0.369845, 0.117892, 0.176991, - 0.143145, 0.38146, 0.136205, 0.199715, - 0.155292, 0.40052, 0.157252, 0.220787, - 0.167066, 0.412055, 0.179966, 0.243697, - 0.178396, 0.423133, 0.204418, 0.272106, - 0.190433, 0.439524, 0.232141, 0.297637, - 0.201265, 0.447041, 0.261109, 0.325273, - 0.211834, 0.454488, 0.292627, 0.357219, - 0.221889, 0.465004, 0.326669, 0.387362, - 0.230729, 0.468527, 0.362426, 0.423131, - 0.23924, 0.475836, 0.401533, 0.45543, - 0.246067, 0.475017, 0.441902, 0.493393, - 0.251557, 0.478017, 0.484239, 0.526253, - 0.255571, 0.4709, 0.528586, 0.560554, - 0.257752, 0.463167, 0.574346, 0.599306, - 0.258076, 0.456452, 0.621655, 0.634541, - 0.256471, 0.443725, 0.670492, 0.668907, - 0.253283, 0.428719, 0.721943, 0.705619, - 0.247562, 0.411348, 0.772477, 0.739034, - 0.240626, 0.388939, 0.8264, 0.771408, - 0.231493, 0.36425, 0.881702, 0.803312, - 0.220125, 0.337321, 0.9385, 0.828457, - 0.206645, 0.305364, 0.997437, 0.854819, - 0.190664, 0.273715, 1.05693, 0.878666, - 0.171429, 0.242218, 1.11251, 0.898404, - 0.149235, 0.209556, 1.16398, 0.917416, - 0.12435, 0.176863, 1.21014, 0.933133, - 0.0972703, 0.142775, 1.25178, 0.95066, - 0.0683607, 0.106735, 1.29028, 0.968589, - 0.0378724, 0.0681609, 1.32703, 0.984776, - 0.00605712, 0.0273966, 1.36158, 0.99994, 0.0263276, - 0.0138124, 1.3943, 0.00867437, - 1.86005e-06, 0.0928979, 1.73682e-07, 0.00864003, - 4.66389e-05, 0.0925237, 4.35505e-06, 0.00864593, - 0.000186594, 0.0925806, 1.74322e-05, 0.00864095, - 0.000419639, 0.0924903, 3.92862e-05, 0.00863851, - 0.000746272, 0.0924589, 7.02598e-05, 0.00868531, - 0.00116456, 0.0929, 0.000111188, 0.00869667, - 0.00167711, 0.0928529, 0.000163867, 0.00874332, - 0.00228051, 0.0930914, 0.00023104, 0.00882709, - 0.00297864, 0.0935679, 0.00031741, 0.00898874, - 0.00377557, 0.0946165, 0.000430186, 0.00929346, - 0.00469247, 0.0967406, 0.000580383, 0.00978271, - 0.00575491, 0.100084, 0.000783529, 0.0105746, - 0.00701514, 0.105447, 0.00106304, 0.0116949, - 0.00851797, 0.112494, 0.00144685, 0.0130419, - 0.0102757, 0.119876, 0.00196439, 0.0148375, - 0.012381, 0.129034, 0.00266433, 0.0168725, - 0.01482, 0.137812, 0.00358364, 0.0193689, - 0.0176563, 0.147696, 0.00478132, 0.0222691, - 0.0209211, 0.157795, 0.00631721, 0.0256891, - 0.0246655, 0.168431, 0.00826346, 0.0294686, - 0.0288597, 0.178587, 0.0106714, 0.0340412, - 0.0336441, 0.190251, 0.0136629, 0.0393918, - 0.039033, 0.202999, 0.0173272, 0.0453947, - 0.0450087, 0.215655, 0.0217448, 0.0521936, - 0.0515461, 0.228686, 0.0269941, 0.0600279, - 0.058817, 0.242838, 0.033272, 0.0692398, - 0.0667228, 0.258145, 0.0406457, 0.0793832, - 0.0752401, 0.273565, 0.0492239, 0.0902297, - 0.0841851, 0.287735, 0.0590105, 0.102014, - 0.0936479, 0.301161, 0.0702021, 0.116054, - 0.103967, 0.317438, 0.0832001, 0.13191, - 0.114622, 0.334166, 0.0977951, 0.148239, - 0.125452, 0.348192, 0.113985, 0.165809, - 0.136453, 0.361094, 0.131928, 0.184616, - 0.147648, 0.373534, 0.151811, 0.207491, - 0.159607, 0.39101, 0.174476, 0.230106, - 0.171119, 0.402504, 0.198798, 0.257036, - 0.182906, 0.418032, 0.225796, 0.281172, - 0.193605, 0.425468, 0.254027, 0.312034, - 0.204771, 0.440379, 0.285713, 0.340402, - 0.214988, 0.445406, 0.319196, 0.370231, - 0.224711, 0.44968, 0.35537, 0.407105, - 0.233516, 0.460747, 0.393838, 0.439037, - 0.240801, 0.460624, 0.433747, 0.47781, - 0.24762, 0.465957, 0.477234, 0.510655, - 0.251823, 0.460054, 0.52044, 0.550584, - 0.255552, 0.459172, 0.567853, 0.585872, - 0.257036, 0.450311, 0.615943, 0.620466, - 0.257535, 0.437763, 0.667693, 0.660496, - 0.255248, 0.426639, 0.718988, 0.695578, - 0.251141, 0.409185, 0.772503, 0.732176, - 0.244718, 0.39015, 0.827023, 0.760782, - 0.236782, 0.362594, 0.885651, 0.79422, - 0.225923, 0.33711, 0.943756, 0.824521, - 0.213855, 0.308272, 1.00874, 0.854964, - 0.197723, 0.278529, 1.06764, 0.878065, - 0.179209, 0.246208, 1.12836, 0.899834, - 0.157569, 0.21329, 1.18318, 0.918815, - 0.133206, 0.181038, 1.23161, 0.934934, - 0.106545, 0.146993, 1.27644, 0.952115, - 0.0780574, 0.111175, 1.31842, 0.96906, - 0.0478279, 0.0728553, 1.35839, 0.985178, - 0.0160014, 0.032579, 1.39697, 1.00039, 0.0173126, - 0.0095256, 1.43312, 0.00384146, - 1.24311e-06, 0.0613583, 7.78271e-08, 0.00390023, - 3.14043e-05, 0.0622919, 1.96626e-06, 0.00389971, - 0.000125622, 0.0622632, 7.87379e-06, 0.00389491, - 0.000282352, 0.0620659, 1.778e-05, 0.00391618, - 0.000502512, 0.0624687, 3.20918e-05, 0.00392662, - 0.000784458, 0.0625113, 5.15573e-05, 0.00396053, - 0.00112907, 0.0628175, 7.78668e-05, 0.00401911, - 0.00153821, 0.0633286, 0.000113811, 0.00414994, - 0.0020208, 0.0646443, 0.00016445, 0.00441223, - 0.00260007, 0.0673886, 0.000237734, 0.00484427, - 0.0033097, 0.0716528, 0.000345929, 0.00549109, - 0.00418966, 0.0774998, 0.000505987, 0.00636293, - 0.00527331, 0.0844758, 0.000739208, 0.00746566, - 0.00660428, 0.0921325, 0.00107347, 0.00876625, - 0.00818826, 0.0997067, 0.00153691, 0.0103125, - 0.0100811, 0.107433, 0.00217153, 0.0123309, - 0.0123643, 0.117088, 0.00303427, 0.0146274, - 0.0150007, 0.126438, 0.00416018, 0.0172295, - 0.0180531, 0.135672, 0.00561513, 0.0204248, - 0.0215962, 0.146244, 0.007478, 0.0241597, - 0.0256234, 0.157481, 0.00981046, 0.0284693, - 0.0302209, 0.169125, 0.0127148, 0.033445, - 0.0353333, 0.181659, 0.0162453, 0.0391251, - 0.0410845, 0.1944, 0.0205417, 0.0454721, - 0.0473451, 0.207082, 0.0256333, 0.0530983, - 0.0542858, 0.221656, 0.0317036, 0.0615356, - 0.0618384, 0.236036, 0.0388319, 0.0703363, - 0.0697631, 0.248398, 0.046974, 0.0810391, - 0.0784757, 0.263611, 0.0565246, 0.0920144, - 0.0873488, 0.275857, 0.0671724, 0.105584, - 0.0973652, 0.292555, 0.0798105, 0.119506, - 0.107271, 0.306333, 0.0935945, 0.134434, - 0.117608, 0.318888, 0.109106, 0.153399, - 0.128938, 0.337552, 0.127074, 0.171258, - 0.139944, 0.349955, 0.14643, 0.191059, - 0.151288, 0.361545, 0.168, 0.215069, - 0.163018, 0.378421, 0.192082, 0.237838, - 0.174226, 0.38879, 0.217838, 0.266965, - 0.186063, 0.405857, 0.246931, 0.292827, - 0.196909, 0.414146, 0.277505, 0.324352, - 0.207473, 0.426955, 0.310711, 0.354427, - 0.217713, 0.433429, 0.346794, 0.389854, - 0.227183, 0.443966, 0.385237, 0.420749, - 0.235131, 0.44471, 0.424955, 0.459597, - 0.242786, 0.451729, 0.468446, 0.495316, - 0.248767, 0.45072, 0.513422, 0.534903, - 0.253351, 0.450924, 0.560618, 0.572369, - 0.256277, 0.445266, 0.609677, 0.612383, - 0.2576, 0.438798, 0.660995, 0.644037, - 0.256931, 0.421693, 0.713807, 0.686749, - 0.254036, 0.4109, 0.767616, 0.719814, - 0.249785, 0.390151, 0.82533, 0.754719, - 0.244283, 0.367847, 0.888311, 0.792022, - 0.235076, 0.345013, 0.948177, 0.822404, - 0.225061, 0.316193, 1.01661, 0.853084, - 0.211113, 0.287013, 1.08075, 0.879871, - 0.19449, 0.255424, 1.14501, 0.901655, - 0.174023, 0.222879, 1.20203, 0.919957, - 0.1509, 0.18989, 1.25698, 0.938412, - 0.124923, 0.15606, 1.30588, 0.953471, - 0.0968139, 0.120512, 1.3529, 0.970451, - 0.066734, 0.0828515, 1.3986, 0.985522, - 0.034734, 0.0424458, 1.44148, 1.00099, - 0.00102222, 0.000678929, 1.48398, 0.000965494, - 6.27338e-07, 0.0306409, 1.97672e-08, 0.00099168, - 1.58573e-05, 0.0314638, 4.99803e-07, 0.000991068, - 6.34012e-05, 0.031363, 2.00682e-06, 0.000974567, - 0.00014144, 0.03036, 4.57312e-06, 0.000998079, - 0.000252812, 0.031496, 8.60131e-06, 0.00102243, - 0.000396506, 0.0319955, 1.48288e-05, 0.00107877, - 0.000577593, 0.0331376, 2.49141e-05, 0.00121622, - 0.000816816, 0.0359396, 4.23011e-05, 0.0014455, - 0.00113761, 0.0399652, 7.24613e-05, 0.00178791, - 0.00156959, 0.0450556, 0.000123929, 0.00225668, - 0.00214064, 0.0508025, 0.000208531, 0.00285627, - 0.00287655, 0.0568443, 0.000341969, 0.0035991, - 0.00380271, 0.0630892, 0.000544158, 0.00455524, - 0.00496264, 0.0702204, 0.000842423, 0.00569143, - 0.0063793, 0.0773426, 0.00126704, 0.00716928, - 0.00813531, 0.0860839, 0.00186642, 0.00885307, - 0.0101946, 0.0944079, 0.00267014, 0.0109316, - 0.0126386, 0.103951, 0.00374033, 0.0133704, - 0.0154876, 0.113786, 0.0051304, 0.0161525, - 0.0187317, 0.123477, 0.00688858, 0.0194267, - 0.0224652, 0.133986, 0.00910557, 0.0230967, - 0.0265976, 0.143979, 0.0118074, 0.0273627, - 0.0312848, 0.154645, 0.0151266, 0.0323898, - 0.0365949, 0.166765, 0.0191791, 0.0379225, - 0.0422914, 0.177932, 0.0239236, 0.0447501, - 0.0487469, 0.19167, 0.0296568, 0.0519391, - 0.0556398, 0.203224, 0.0362924, 0.0599464, - 0.0631646, 0.215652, 0.0440585, 0.0702427, - 0.0714308, 0.232089, 0.0531619, 0.0806902, - 0.0800605, 0.245258, 0.0634564, 0.0923194, - 0.0892815, 0.258609, 0.0752481, 0.106938, - 0.09931, 0.276654, 0.0888914, 0.121238, - 0.109575, 0.289847, 0.104055, 0.138817, - 0.120461, 0.307566, 0.121266, 0.15595, - 0.131209, 0.320117, 0.139944, 0.178418, - 0.143049, 0.339677, 0.161591, 0.197875, - 0.154074, 0.349886, 0.184303, 0.224368, - 0.166307, 0.369352, 0.210669, 0.252213, - 0.178051, 0.386242, 0.238895, 0.277321, - 0.189335, 0.395294, 0.269182, 0.310332, - 0.200683, 0.412148, 0.302508, 0.338809, - 0.210856, 0.418266, 0.337264, 0.372678, - 0.220655, 0.428723, 0.374881, 0.405632, - 0.230053, 0.433887, 0.415656, 0.442293, - 0.237993, 0.439911, 0.457982, 0.477256, - 0.244897, 0.440175, 0.502831, 0.515592, - 0.250657, 0.441079, 0.550277, 0.550969, - 0.255459, 0.435219, 0.601102, 0.592883, - 0.257696, 0.432882, 0.651785, 0.629092, - 0.259894, 0.421054, 0.708961, 0.672033, - 0.258592, 0.41177, 0.763806, 0.709147, - 0.256525, 0.395267, 0.824249, 0.745367, - 0.254677, 0.375013, 0.8951, 0.784715, - 0.247892, 0.353906, 0.959317, 0.818107, - 0.240162, 0.327801, 1.03153, 0.847895, - 0.229741, 0.298821, 1.10601, 0.879603, - 0.213084, 0.269115, 1.164, 0.902605, - 0.195242, 0.236606, 1.22854, 0.922788, - 0.174505, 0.203442, 1.29017, 0.944831, - 0.150169, 0.169594, 1.34157, 0.959656, - 0.124099, 0.135909, 1.3956, 0.972399, - 0.0960626, 0.0990563, 1.45128, 0.986549, - 0.0657097, 0.0602348, 1.50312, 1.00013, - 0.0333558, 0.0186694, 1.55364, 6.19747e-06, - 1e-07, 0.00778326, 7.96756e-11, 2.37499e-08, - 9.99999e-08, 2.82592e-05, 1.14596e-10, 1.00292e-06, - 1.66369e-06, 0.000250354, 6.77492e-09, 3.50752e-06, - 6.37769e-06, 0.000357289, 6.31655e-08, 8.26445e-06, - 1.74689e-05, 0.000516179, 3.1851e-07, 2.42481e-05, - 4.50868e-05, 0.0010223, 1.30577e-06, 4.55631e-05, - 8.9044e-05, 0.00144302, 3.74587e-06, 9.71222e-05, - 0.000178311, 0.00241912, 1.02584e-05, 0.000171403, - 0.000313976, 0.00354938, 2.36481e-05, 0.000292747, - 0.000520026, 0.00513765, 4.96014e-05, 0.000789827, - 0.00118187, 0.0238621, 0.000139056, 0.00114093, - 0.00171827, 0.0286691, 0.000244093, 0.00176119, - 0.00249667, 0.0368565, 0.000420623, 0.0022233, - 0.00333742, 0.0400469, 0.00065673, 0.00343382, - 0.00481976, 0.0535751, 0.00109323, 0.00427602, - 0.00600755, 0.057099, 0.00155268, 0.00461435, - 0.00737637, 0.0551084, 0.00215031, 0.00695698, - 0.00971401, 0.0715767, 0.00316529, 0.00867619, - 0.0120943, 0.0793314, 0.00436995, 0.0106694, - 0.0148202, 0.0869391, 0.0058959, 0.0140351, - 0.0183501, 0.101572, 0.00798757, 0.0168939, - 0.022006, 0.11018, 0.0104233, 0.020197, - 0.0261568, 0.119041, 0.0134167, 0.0254702, - 0.0312778, 0.135404, 0.0173009, 0.0298384, - 0.0362469, 0.1437, 0.0215428, 0.035159, - 0.042237, 0.15512, 0.0268882, 0.0427685, - 0.0488711, 0.17128, 0.033235, 0.0494848, - 0.0557997, 0.181813, 0.0404443, 0.0592394, - 0.0635578, 0.198745, 0.0490043, 0.0681463, - 0.071838, 0.210497, 0.0588239, 0.0804753, - 0.0809297, 0.228864, 0.0702835, 0.0942205, - 0.0906488, 0.247008, 0.0834012, 0.106777, - 0.100216, 0.258812, 0.0975952, 0.124471, - 0.110827, 0.278617, 0.114162, 0.138389, - 0.121193, 0.287049, 0.131983, 0.159543, - 0.13253, 0.307151, 0.152541, 0.176432, - 0.143611, 0.31564, 0.174673, 0.201723, - 0.15548, 0.33538, 0.199842, 0.229721, - 0.167166, 0.355256, 0.227097, 0.250206, - 0.178238, 0.360047, 0.256014, 0.282118, - 0.189905, 0.378761, 0.28855, 0.312821, - 0.201033, 0.39181, 0.323348, 0.341482, - 0.211584, 0.397716, 0.360564, 0.377368, - 0.221314, 0.410141, 0.400004, 0.418229, - 0.230474, 0.423485, 0.442371, 0.444881, - 0.239443, 0.418874, 0.488796, 0.488899, - 0.245987, 0.427545, 0.535012, 0.520317, - 0.253948, 0.422147, 0.589678, 0.568566, - 0.256616, 0.42719, 0.637683, 0.599607, - 0.26376, 0.415114, 0.703363, 0.64222, - 0.268687, 0.408715, 0.771363, 0.685698, - 0.2694, 0.399722, 0.83574, 0.732327, - 0.266642, 0.388651, 0.897764, 0.769873, - 0.267712, 0.369198, 0.983312, 0.806733, - 0.263479, 0.346802, 1.06222, 0.843466, - 0.254575, 0.321368, 1.13477, 0.873008, - 0.242749, 0.29211, 1.20712, 0.908438, - 0.22725, 0.262143, 1.27465, 0.936321, - 0.207621, 0.228876, 1.33203, 0.950353, - 0.187932, 0.19484, 1.40439, 0.96442, - 0.165154, 0.163178, 1.4732, 0.979856, - 0.139302, 0.127531, 1.53574, 0.982561, - 0.11134, 0.0903457, 1.59982, 0.996389, - 0.0808124, 0.0489007, 1.6577 ];\n\n\t\tvar LTC_MAT_2 = [ 1, 0, 0, 0, 1, 7.91421e-31, 0, 0, 1, 1.04392e-24, 0, 0, 1, 3.49405e-21, 0, 0, 1, 1.09923e-18, 0, 0, 1, 9.47414e-17, 0, 0, 1, 3.59627e-15, 0, 0, 1, 7.72053e-14, 0, 0, 1, 1.08799e-12, 0, 0, 1, 1.10655e-11, 0, 0, 1, 8.65818e-11, 0, 0, 0.999998, 5.45037e-10, 0, 0, 0.999994, 2.85095e-09, 0, 0, 0.999989, 1.26931e-08, 0, 0, 0.999973, 4.89938e-08, 0, 0, 0.999947, 1.66347e-07, 0, 0, 0.999894, 5.02694e-07, 0, 0, 0.999798, 1.36532e-06, 0, 0, 0.999617, 3.35898e-06, 0, 0, 0.999234, 7.52126e-06, 0, 0, 0.998258, 1.52586e-05, 0, 0, 0.99504, 2.66207e-05, 0, 0, 0.980816, 2.36802e-05, 0, 0, 0.967553, 2.07684e-06, 0, 0, 0.966877, 4.03733e-06, 0, 0, 0.965752, 7.41174e-06, 0, 0, 0.96382, 1.27746e-05, 0, 0, 0.960306, 2.02792e-05, 0, 0, 0.953619, 2.80232e-05, 0, 0, 0.941103, 2.78816e-05, 0, 0, 0.926619, 1.60221e-05, 0, 0, 0.920983, 2.35164e-05, 0, 0, 0.912293, 3.11924e-05, 0, 0.0158731, 0.899277, 3.48118e-05, 0, 0.0476191, 0.880884, 2.6041e-05, 0, 0.0793651, 0.870399, 3.38726e-05, 0, 0.111111, 0.856138, 3.92906e-05, 0, 0.142857, 0.837436, 3.72874e-05, 0, 0.174603, 0.820973, 3.92558e-05, 0, 0.206349, 0.803583, 4.34658e-05, 0, 0.238095, 0.782168, 4.0256e-05, 0, 0.269841, 0.764107, 4.48159e-05, 0, 0.301587, 0.743092, 4.57627e-05, 0, 0.333333, 0.721626, 4.55314e-05, 0, 0.365079, 0.700375, 4.77335e-05, 0, 0.396825, 0.677334, 4.61072e-05, 0, 0.428571, 0.655702, 4.84393e-05, 0, 0.460317, 0.632059, 4.64583e-05, 0, 0.492064, 0.610125, 4.83923e-05, 0, 0.52381, 0.58653, 4.64342e-05, 0, 0.555556, 0.564508, 4.77033e-05, 0, 0.587302, 0.541405, 4.59263e-05, 0, 0.619048, 0.519556, 4.6412e-05, 0, 0.650794, 0.497292, 4.48913e-05, 0, 0.68254, 0.475898, 4.45789e-05, 0, 0.714286, 0.454722, 4.33496e-05, 0, 0.746032, 0.434042, 4.23054e-05, 0, 0.777778, 0.414126, 4.13737e-05, 0, 0.809524, 0.394387, 3.97265e-05, 0, 0.84127, 0.375841, 3.90709e-05, 0, 0.873016, 0.357219, 3.69938e-05, 0, 0.904762, 0.340084, 3.65618e-05, 0, 0.936508, 0.322714, 3.42533e-05, 0, 0.968254, 0.306974, 3.39596e-05, 0, 1, 1, 1.01524e-18, 0, 0, 1, 1.0292e-18, 0, 0, 1, 1.30908e-18, 0, 0, 1, 4.73331e-18, 0, 0, 1, 6.25319e-17, 0, 0, 1, 1.07932e-15, 0, 0, 1, 1.63779e-14, 0, 0, 1, 2.03198e-13, 0, 0, 1, 2.04717e-12, 0, 0, 0.999999, 1.68995e-11, 0, 0, 0.999998, 1.15855e-10, 0, 0, 0.999996, 6.6947e-10, 0, 0, 0.999991, 3.30863e-09, 0, 0, 0.999983, 1.41737e-08, 0, 0, 0.999968, 5.32626e-08, 0, 0, 0.99994, 1.77431e-07, 0, 0, 0.999891, 5.28835e-07, 0, 0, 0.999797, 1.42169e-06, 0, 0, 0.999617, 3.47057e-06, 0, 0, 0.999227, 7.7231e-06, 0, 0, 0.998239, 1.55753e-05, 0, 0, 0.994937, 2.68495e-05, 0, 0, 0.980225, 2.13742e-05, 0, 0, 0.967549, 2.1631e-06, 0, 0, 0.966865, 4.17989e-06, 0, 0, 0.965739, 7.63341e-06, 0, 0, 0.963794, 1.30892e-05, 0, 0, 0.960244, 2.06456e-05, 0, 0, 0.953495, 2.82016e-05, 0, 0.000148105, 0.940876, 2.71581e-05, 0, 0.002454, 0.926569, 1.64159e-05, 0, 0.00867491, 0.920905, 2.39521e-05, 0, 0.01956, 0.912169, 3.15127e-05, 0, 0.035433, 0.899095, 3.46626e-05, 0, 0.056294, 0.882209, 2.90223e-05, 0, 0.0818191, 0.870272, 3.42992e-05, 0, 0.111259, 0.855977, 3.94164e-05, 0, 0.142857, 0.837431, 3.72343e-05, 0, 0.174603, 0.820826, 3.96691e-05, 0, 0.206349, 0.803408, 4.35395e-05, 0, 0.238095, 0.782838, 4.19579e-05, 0, 0.269841, 0.763941, 4.50953e-05, 0, 0.301587, 0.742904, 4.55847e-05, 0, 0.333333, 0.721463, 4.58833e-05, 0, 0.365079, 0.700197, 4.77159e-05, 0, 0.396825, 0.677501, 4.70641e-05, 0, 0.428571, 0.655527, 4.84732e-05, 0, 0.460317, 0.6324, 4.76834e-05, 0, 0.492064, 0.609964, 4.84213e-05, 0, 0.52381, 0.586839, 4.75541e-05, 0, 0.555556, 0.564353, 4.76951e-05, 0, 0.587302, 0.541589, 4.67611e-05, 0, 0.619048, 0.519413, 4.63493e-05, 0, 0.650794, 0.497337, 4.53994e-05, 0, 0.68254, 0.475797, 4.45308e-05, 0, 0.714286, 0.454659, 4.35787e-05, 0, 0.746032, 0.434065, 4.24839e-05, 0, 0.777778, 0.414018, 4.1436e-05, 0, 0.809524, 0.39455, 4.01902e-05, 0, 0.84127, 0.375742, 3.90813e-05, 0, 0.873016, 0.357501, 3.77116e-05, 0, 0.904762, 0.339996, 3.6535e-05, 0, 0.936508, 0.323069, 3.51265e-05, 0, 0.968254, 0.306897, 3.39112e-05, 0, 1, 1, 1.0396e-15, 0, 0, 1, 1.04326e-15, 0, 0, 1, 1.10153e-15, 0, 0, 1, 1.44668e-15, 0, 0, 1, 3.4528e-15, 0, 0, 1, 1.75958e-14, 0, 0, 1, 1.2627e-13, 0, 0, 1, 9.36074e-13, 0, 0, 1, 6.45742e-12, 0, 0, 0.999998, 4.01228e-11, 0, 0, 0.999997, 2.22338e-10, 0, 0, 0.999995, 1.0967e-09, 0, 0, 0.999991, 4.82132e-09, 0, 0, 0.999981, 1.89434e-08, 0, 0, 0.999967, 6.67716e-08, 0, 0, 0.999938, 2.12066e-07, 0, 0, 0.999886, 6.0977e-07, 0, 0, 0.999792, 1.59504e-06, 0, 0, 0.999608, 3.81191e-06, 0, 0, 0.999209, 8.33727e-06, 0, 0, 0.998179, 1.65288e-05, 0, 0, 0.994605, 2.74387e-05, 0, 0, 0.979468, 1.67316e-05, 0, 0, 0.967529, 2.42877e-06, 0, 0, 0.966836, 4.61696e-06, 0, 0, 0.96569, 8.30977e-06, 0, 0, 0.963706, 1.40427e-05, 0, 2.44659e-06, 0.960063, 2.17353e-05, 0, 0.000760774, 0.953113, 2.86606e-05, 0, 0.00367261, 0.940192, 2.47691e-05, 0, 0.00940263, 0.927731, 1.95814e-05, 0, 0.018333, 0.920669, 2.52531e-05, 0, 0.0306825, 0.911799, 3.24277e-05, 0, 0.0465556, 0.89857, 3.40982e-05, 0, 0.0659521, 0.883283, 3.19622e-05, 0, 0.0887677, 0.86989, 3.5548e-05, 0, 0.114784, 0.855483, 3.97143e-05, 0, 0.143618, 0.837987, 3.91665e-05, 0, 0.174606, 0.820546, 4.11306e-05, 0, 0.206349, 0.802878, 4.36753e-05, 0, 0.238095, 0.783402, 4.44e-05, 0, 0.269841, 0.763439, 4.58726e-05, 0, 0.301587, 0.742925, 4.67097e-05, 0, 0.333333, 0.721633, 4.78887e-05, 0, 0.365079, 0.69985, 4.81251e-05, 0, 0.396825, 0.67783, 4.91811e-05, 0, 0.428571, 0.655126, 4.88199e-05, 0, 0.460318, 0.632697, 4.96025e-05, 0, 0.492064, 0.609613, 4.8829e-05, 0, 0.52381, 0.587098, 4.92754e-05, 0, 0.555556, 0.564119, 4.82625e-05, 0, 0.587302, 0.541813, 4.82807e-05, 0, 0.619048, 0.519342, 4.71552e-05, 0, 0.650794, 0.497514, 4.66765e-05, 0, 0.68254, 0.475879, 4.55582e-05, 0, 0.714286, 0.454789, 4.46007e-05, 0, 0.746032, 0.434217, 4.35382e-05, 0, 0.777778, 0.414086, 4.21753e-05, 0, 0.809524, 0.394744, 4.12093e-05, 0, 0.84127, 0.375782, 3.96634e-05, 0, 0.873016, 0.357707, 3.86419e-05, 0, 0.904762, 0.340038, 3.70345e-05, 0, 0.936508, 0.323284, 3.59725e-05, 0, 0.968254, 0.306954, 3.436e-05, 0, 1, 1, 5.99567e-14, 0, 0, 1, 6.00497e-14, 0, 0, 1, 6.14839e-14, 0, 0, 1, 6.86641e-14, 0, 0, 1, 9.72658e-14, 0, 0, 1, 2.21271e-13, 0, 0, 1, 8.33195e-13, 0, 0, 1, 4.03601e-12, 0, 0, 0.999999, 2.06001e-11, 0, 0, 0.999998, 1.01739e-10, 0, 0, 0.999997, 4.70132e-10, 0, 0, 0.999993, 2.00436e-09, 0, 0, 0.999988, 7.83682e-09, 0, 0, 0.999979, 2.80338e-08, 0, 0, 0.999962, 9.17033e-08, 0, 0, 0.999933, 2.74514e-07, 0, 0, 0.999881, 7.53201e-07, 0, 0, 0.999783, 1.89826e-06, 0, 0, 0.999594, 4.40279e-06, 0, 0, 0.999178, 9.3898e-06, 0, 0, 0.998073, 1.81265e-05, 0, 0, 0.993993, 2.80487e-05, 0, 0, 0.979982, 1.49422e-05, 0, 0, 0.968145, 3.78481e-06, 0, 0, 0.966786, 5.3771e-06, 0, 0, 0.965611, 9.47508e-06, 0, 3.88934e-05, 0.963557, 1.56616e-05, 0, 0.0009693, 0.959752, 2.35144e-05, 0, 0.00370329, 0.952461, 2.91568e-05, 0, 0.00868428, 0.940193, 2.40102e-05, 0, 0.0161889, 0.929042, 2.31235e-05, 0, 0.0263948, 0.920266, 2.73968e-05, 0, 0.0394088, 0.911178, 3.37915e-05, 0, 0.0552818, 0.897873, 3.33629e-05, 0, 0.0740138, 0.884053, 3.51405e-05, 0, 0.0955539, 0.869455, 3.78034e-05, 0, 0.119795, 0.854655, 3.99378e-05, 0, 0.14656, 0.838347, 4.19108e-05, 0, 0.175573, 0.820693, 4.40831e-05, 0, 0.206388, 0.802277, 4.45599e-05, 0, 0.238095, 0.783634, 4.72691e-05, 0, 0.269841, 0.763159, 4.76984e-05, 0, 0.301587, 0.742914, 4.91487e-05, 0, 0.333333, 0.721662, 5.02312e-05, 0, 0.365079, 0.699668, 5.02817e-05, 0, 0.396825, 0.677839, 5.1406e-05, 0, 0.428571, 0.655091, 5.11095e-05, 0, 0.460317, 0.632665, 5.16067e-05, 0, 0.492064, 0.609734, 5.12255e-05, 0, 0.52381, 0.587043, 5.10263e-05, 0, 0.555556, 0.564298, 5.0565e-05, 0, 0.587302, 0.541769, 4.97951e-05, 0, 0.619048, 0.519529, 4.92698e-05, 0, 0.650794, 0.497574, 4.82066e-05, 0, 0.68254, 0.476028, 4.73689e-05, 0, 0.714286, 0.454961, 4.61941e-05, 0, 0.746032, 0.434341, 4.50618e-05, 0, 0.777778, 0.414364, 4.38355e-05, 0, 0.809524, 0.394832, 4.24196e-05, 0, 0.84127, 0.376109, 4.12563e-05, 0, 0.873016, 0.35779, 3.96226e-05, 0, 0.904762, 0.340379, 3.84886e-05, 0, 0.936508, 0.323385, 3.68214e-05, 0, 0.968254, 0.307295, 3.56636e-05, 0, 1, 1, 1.06465e-12, 0, 0, 1, 1.06555e-12, 0, 0, 1, 1.07966e-12, 0, 0, 1, 1.14601e-12, 0, 0, 1, 1.37123e-12, 0, 0, 1, 2.1243e-12, 0, 0, 0.999999, 4.89653e-12, 0, 0, 0.999999, 1.60283e-11, 0, 0, 0.999998, 6.2269e-11, 0, 0, 0.999997, 2.51859e-10, 0, 0, 0.999996, 9.96192e-10, 0, 0, 0.999992, 3.74531e-09, 0, 0, 0.999986, 1.32022e-08, 0, 0, 0.999975, 4.33315e-08, 0, 0, 0.999959, 1.31956e-07, 0, 0, 0.999927, 3.72249e-07, 0, 0, 0.999871, 9.72461e-07, 0, 0, 0.999771, 2.35343e-06, 0, 0, 0.999572, 5.2768e-06, 0, 0, 0.999133, 1.09237e-05, 0, 0, 0.997912, 2.03675e-05, 0, 0, 0.993008, 2.79396e-05, 0, 0, 0.980645, 1.39604e-05, 0, 0, 0.970057, 6.46596e-06, 0, 0, 0.966717, 6.5089e-06, 0, 4.74145e-05, 0.965497, 1.11863e-05, 0, 0.00089544, 0.96334, 1.79857e-05, 0, 0.0032647, 0.959294, 2.59045e-05, 0, 0.0075144, 0.951519, 2.92327e-05, 0, 0.0138734, 0.940517, 2.49769e-05, 0, 0.0224952, 0.93014, 2.6803e-05, 0, 0.0334828, 0.91972, 3.03656e-05, 0, 0.0468973, 0.910294, 3.53323e-05, 0, 0.0627703, 0.897701, 3.51002e-05, 0, 0.0811019, 0.884522, 3.88104e-05, 0, 0.10186, 0.869489, 4.12932e-05, 0, 0.124985, 0.853983, 4.15781e-05, 0, 0.150372, 0.838425, 4.54066e-05, 0, 0.177868, 0.820656, 4.71624e-05, 0, 0.207245, 0.801875, 4.75243e-05, 0, 0.238143, 0.783521, 5.05621e-05, 0, 0.269841, 0.763131, 5.0721e-05, 0, 0.301587, 0.74261, 5.23293e-05, 0, 0.333333, 0.72148, 5.28699e-05, 0, 0.365079, 0.699696, 5.38677e-05, 0, 0.396825, 0.677592, 5.39255e-05, 0, 0.428571, 0.65525, 5.46367e-05, 0, 0.460317, 0.632452, 5.41348e-05, 0, 0.492064, 0.609903, 5.44976e-05, 0, 0.52381, 0.586928, 5.36201e-05, 0, 0.555556, 0.564464, 5.35185e-05, 0, 0.587302, 0.541801, 5.24949e-05, 0, 0.619048, 0.519681, 5.1812e-05, 0, 0.650794, 0.497685, 5.07687e-05, 0, 0.68254, 0.47622, 4.96243e-05, 0, 0.714286, 0.455135, 4.85714e-05, 0, 0.746032, 0.4346, 4.71847e-05, 0, 0.777778, 0.414564, 4.59294e-05, 0, 0.809524, 0.395165, 4.44705e-05, 0, 0.84127, 0.376333, 4.30772e-05, 0, 0.873016, 0.358197, 4.16229e-05, 0, 0.904762, 0.34064, 4.01019e-05, 0, 0.936508, 0.323816, 3.86623e-05, 0, 0.968254, 0.307581, 3.70933e-05, 0, 1, 1, 9.91541e-12, 0, 0, 1, 9.92077e-12, 0, 0, 1, 1.00041e-11, 0, 0, 1, 1.0385e-11, 0, 0, 1, 1.15777e-11, 0, 0, 1, 1.50215e-11, 0, 0, 0.999999, 2.54738e-11, 0, 0, 0.999999, 5.98822e-11, 0, 0, 0.999998, 1.79597e-10, 0, 0, 0.999997, 6.02367e-10, 0, 0, 0.999994, 2.06835e-09, 0, 0, 0.99999, 6.94952e-09, 0, 0, 0.999984, 2.23363e-08, 0, 0, 0.999972, 6.78578e-08, 0, 0, 0.999952, 1.93571e-07, 0, 0, 0.999919, 5.16594e-07, 0, 0, 0.99986, 1.28739e-06, 0, 0, 0.999753, 2.99298e-06, 0, 0, 0.999546, 6.48258e-06, 0, 0, 0.999074, 1.29985e-05, 0, 0, 0.997671, 2.32176e-05, 0, 0, 0.991504, 2.56701e-05, 0, 0, 0.981148, 1.31141e-05, 0, 0, 0.971965, 8.69048e-06, 0, 2.80182e-05, 0.966624, 8.08301e-06, 0, 0.000695475, 0.965344, 1.35235e-05, 0, 0.00265522, 0.963048, 2.10592e-05, 0, 0.00622975, 0.958673, 2.87473e-05, 0, 0.0116234, 0.950262, 2.81379e-05, 0, 0.018976, 0.940836, 2.71089e-05, 0, 0.0283844, 0.930996, 3.0926e-05, 0, 0.0399151, 0.919848, 3.48359e-05, 0, 0.0536063, 0.909136, 3.66092e-05, 0, 0.0694793, 0.897554, 3.84162e-05, 0, 0.0875342, 0.884691, 4.30971e-05, 0, 0.107749, 0.869414, 4.47803e-05, 0, 0.130087, 0.853462, 4.52858e-05, 0, 0.154481, 0.838187, 4.95769e-05, 0, 0.180833, 0.820381, 5.02709e-05, 0, 0.209005, 0.801844, 5.22713e-05, 0, 0.238791, 0.783061, 5.41505e-05, 0, 0.269869, 0.763205, 5.53712e-05, 0, 0.301587, 0.742362, 5.64909e-05, 0, 0.333333, 0.721393, 5.72646e-05, 0, 0.365079, 0.699676, 5.81012e-05, 0, 0.396825, 0.677395, 5.8096e-05, 0, 0.428571, 0.655208, 5.85766e-05, 0, 0.460317, 0.632451, 5.83602e-05, 0, 0.492064, 0.609839, 5.80234e-05, 0, 0.52381, 0.587093, 5.77161e-05, 0, 0.555556, 0.564467, 5.68447e-05, 0, 0.587302, 0.542043, 5.63166e-05, 0, 0.619048, 0.519826, 5.5156e-05, 0, 0.650794, 0.497952, 5.41682e-05, 0, 0.68254, 0.476477, 5.28971e-05, 0, 0.714286, 0.455412, 5.14952e-05, 0, 0.746032, 0.434926, 5.02222e-05, 0, 0.777778, 0.4149, 4.85779e-05, 0, 0.809524, 0.395552, 4.72242e-05, 0, 0.84127, 0.376712, 4.54891e-05, 0, 0.873016, 0.358622, 4.40924e-05, 0, 0.904762, 0.341048, 4.22984e-05, 0, 0.936508, 0.324262, 4.08582e-05, 0, 0.968254, 0.308013, 3.90839e-05, 0, 1, 1, 6.13913e-11, 0, 0, 1, 6.14145e-11, 0, 0, 1, 6.17708e-11, 0, 0, 1, 6.33717e-11, 0, 0, 1, 6.81648e-11, 0, 0, 1, 8.08291e-11, 0, 0, 1, 1.14608e-10, 0, 0, 0.999998, 2.10507e-10, 0, 0, 0.999997, 4.99595e-10, 0, 0, 0.999995, 1.39897e-09, 0, 0, 0.999994, 4.19818e-09, 0, 0, 0.999988, 1.27042e-08, 0, 0, 0.999979, 3.75153e-08, 0, 0, 0.999965, 1.06206e-07, 0, 0, 0.999945, 2.85381e-07, 0, 0, 0.999908, 7.23611e-07, 0, 0, 0.999846, 1.7255e-06, 0, 0, 0.999733, 3.86104e-06, 0, 0, 0.999511, 8.08493e-06, 0, 0, 0.998993, 1.56884e-05, 0, 0, 0.997326, 2.65538e-05, 0, 0, 0.989706, 2.06466e-05, 0, 0, 0.981713, 1.30756e-05, 0, 7.0005e-06, 0.973636, 1.06473e-05, 0, 0.000464797, 0.966509, 1.0194e-05, 0, 0.00201743, 0.965149, 1.65881e-05, 0, 0.00497549, 0.962669, 2.49147e-05, 0, 0.00953262, 0.95786, 3.17449e-05, 0, 0.0158211, 0.949334, 2.81045e-05, 0, 0.0239343, 0.941041, 3.03263e-05, 0, 0.0339372, 0.931575, 3.56754e-05, 0, 0.0458738, 0.920102, 3.97075e-05, 0, 0.059772, 0.908002, 3.84886e-05, 0, 0.075645, 0.897269, 4.3027e-05, 0, 0.0934929, 0.884559, 4.79925e-05, 0, 0.113302, 0.869161, 4.8246e-05, 0, 0.135045, 0.853342, 5.09505e-05, 0, 0.158678, 0.837633, 5.42846e-05, 0, 0.184136, 0.820252, 5.54139e-05, 0, 0.211325, 0.801872, 5.81412e-05, 0, 0.240113, 0.782418, 5.85535e-05, 0, 0.270306, 0.7631, 6.10923e-05, 0, 0.301594, 0.742183, 6.13678e-05, 0, 0.333333, 0.721098, 6.27275e-05, 0, 0.365079, 0.699512, 6.29413e-05, 0, 0.396825, 0.677372, 6.36351e-05, 0, 0.428571, 0.655059, 6.33555e-05, 0, 0.460317, 0.632567, 6.36513e-05, 0, 0.492064, 0.609784, 6.28965e-05, 0, 0.52381, 0.587237, 6.25546e-05, 0, 0.555556, 0.564525, 6.15825e-05, 0, 0.587302, 0.542181, 6.05048e-05, 0, 0.619048, 0.520017, 5.96329e-05, 0, 0.650794, 0.498204, 5.81516e-05, 0, 0.68254, 0.476742, 5.69186e-05, 0, 0.714286, 0.455803, 5.53833e-05, 0, 0.746032, 0.435251, 5.37807e-05, 0, 0.777778, 0.415374, 5.22025e-05, 0, 0.809524, 0.395921, 5.03421e-05, 0, 0.84127, 0.377253, 4.88211e-05, 0, 0.873016, 0.359021, 4.68234e-05, 0, 0.904762, 0.341637, 4.53269e-05, 0, 0.936508, 0.3247, 4.33014e-05, 0, 0.968254, 0.308625, 4.18007e-05, 0, 1, 1, 2.86798e-10, 0, 0, 1, 2.86877e-10, 0, 0, 1, 2.88094e-10, 0, 0, 1, 2.93506e-10, 0, 0, 1, 3.09262e-10, 0, 0, 0.999999, 3.48593e-10, 0, 0, 0.999999, 4.44582e-10, 0, 0, 0.999998, 6.88591e-10, 0, 0, 0.999996, 1.34391e-09, 0, 0, 0.999993, 3.17438e-09, 0, 0, 0.999989, 8.35609e-09, 0, 0, 0.999983, 2.28677e-08, 0, 0, 0.999974, 6.23361e-08, 0, 0, 0.999959, 1.65225e-07, 0, 0, 0.999936, 4.19983e-07, 0, 0, 0.999896, 1.01546e-06, 0, 0, 0.99983, 2.32376e-06, 0, 0, 0.999709, 5.0156e-06, 0, 0, 0.999469, 1.0167e-05, 0, 0, 0.998886, 1.90775e-05, 0, 0, 0.996819, 3.00511e-05, 0, 0, 0.988837, 1.85092e-05, 0, 1.68222e-07, 0.982178, 1.34622e-05, 0, 0.000259622, 0.975017, 1.25961e-05, 0, 0.00142595, 0.967101, 1.3507e-05, 0, 0.00382273, 0.964905, 2.05003e-05, 0, 0.00764164, 0.96218, 2.9546e-05, 0, 0.0130121, 0.956821, 3.43738e-05, 0, 0.0200253, 0.948829, 3.05063e-05, 0, 0.0287452, 0.941092, 3.46487e-05, 0, 0.039218, 0.931883, 4.12061e-05, 0, 0.0514748, 0.920211, 4.44651e-05, 0, 0.0655351, 0.907307, 4.31252e-05, 0, 0.0814082, 0.89684, 4.90382e-05, 0, 0.0990939, 0.884119, 5.3334e-05, 0, 0.118583, 0.869148, 5.4114e-05, 0, 0.139856, 0.853377, 5.78536e-05, 0, 0.162882, 0.836753, 5.92285e-05, 0, 0.187615, 0.820063, 6.22787e-05, 0, 0.213991, 0.801694, 6.45492e-05, 0, 0.241918, 0.782116, 6.5353e-05, 0, 0.271267, 0.762673, 6.74344e-05, 0, 0.301847, 0.742133, 6.82788e-05, 0, 0.333333, 0.720779, 6.91959e-05, 0, 0.365079, 0.699386, 6.96817e-05, 0, 0.396826, 0.67732, 6.99583e-05, 0, 0.428572, 0.654888, 6.98447e-05, 0, 0.460318, 0.632499, 6.94063e-05, 0, 0.492064, 0.609825, 6.91612e-05, 0, 0.52381, 0.587287, 6.81576e-05, 0, 0.555556, 0.564743, 6.74138e-05, 0, 0.587302, 0.542409, 6.61617e-05, 0, 0.619048, 0.520282, 6.47785e-05, 0, 0.650794, 0.498506, 6.33836e-05, 0, 0.68254, 0.477102, 6.15905e-05, 0, 0.714286, 0.456167, 6.01013e-05, 0, 0.746032, 0.435728, 5.81457e-05, 0, 0.777778, 0.415809, 5.64215e-05, 0, 0.809524, 0.396517, 5.44997e-05, 0, 0.84127, 0.377737, 5.25061e-05, 0, 0.873016, 0.359698, 5.06831e-05, 0, 0.904762, 0.342164, 4.8568e-05, 0, 0.936508, 0.325417, 4.67826e-05, 0, 0.968254, 0.309186, 4.46736e-05, 0, 1, 1, 1.09018e-09, 0, 0, 1, 1.0904e-09, 0, 0, 1, 1.09393e-09, 0, 0, 1, 1.1095e-09, 0, 0, 1, 1.154e-09, 0, 0, 1, 1.26089e-09, 0, 0, 0.999999, 1.5059e-09, 0, 0, 0.999997, 2.07899e-09, 0, 0, 0.999994, 3.48164e-09, 0, 0, 0.999993, 7.05728e-09, 0, 0, 0.999987, 1.63692e-08, 0, 0, 0.999981, 4.06033e-08, 0, 0, 0.999969, 1.0245e-07, 0, 0, 0.999953, 2.55023e-07, 0, 0, 0.999925, 6.1511e-07, 0, 0, 0.999881, 1.42218e-06, 0, 0, 0.99981, 3.13086e-06, 0, 0, 0.99968, 6.53119e-06, 0, 0, 0.999418, 1.2832e-05, 0, 0, 0.998748, 2.32497e-05, 0, 0, 0.996066, 3.29522e-05, 0, 0, 0.988379, 1.79613e-05, 0, 0.000108799, 0.982567, 1.43715e-05, 0, 0.000921302, 0.976097, 1.48096e-05, 0, 0.00280738, 0.968475, 1.78905e-05, 0, 0.00596622, 0.964606, 2.53921e-05, 0, 0.0105284, 0.961564, 3.48623e-05, 0, 0.0165848, 0.955517, 3.57612e-05, 0, 0.0242, 0.948381, 3.43493e-05, 0, 0.03342, 0.941095, 4.05849e-05, 0, 0.0442777, 0.931923, 4.75394e-05, 0, 0.0567958, 0.91996, 4.84328e-05, 0, 0.0709879, 0.907419, 5.02146e-05, 0, 0.086861, 0.89618, 5.61654e-05, 0, 0.104415, 0.88337, 5.87612e-05, 0, 0.123643, 0.869046, 6.18057e-05, 0, 0.144531, 0.853278, 6.57392e-05, 0, 0.167057, 0.836091, 6.6303e-05, 0, 0.191188, 0.819644, 7.04445e-05, 0, 0.216878, 0.801246, 7.14071e-05, 0, 0.244062, 0.782031, 7.40093e-05, 0, 0.272649, 0.762066, 7.4685e-05, 0, 0.302509, 0.741964, 7.66647e-05, 0, 0.333442, 0.720554, 7.66328e-05, 0, 0.365079, 0.699098, 7.77857e-05, 0, 0.396826, 0.677189, 7.74633e-05, 0, 0.428572, 0.65484, 7.76235e-05, 0, 0.460318, 0.632496, 7.70316e-05, 0, 0.492064, 0.609908, 7.62669e-05, 0, 0.52381, 0.587312, 7.53972e-05, 0, 0.555556, 0.564938, 7.39994e-05, 0, 0.587302, 0.542577, 7.28382e-05, 0, 0.619048, 0.52062, 7.1112e-05, 0, 0.650794, 0.498819, 6.94004e-05, 0, 0.68254, 0.477555, 6.75575e-05, 0, 0.714286, 0.456568, 6.53449e-05, 0, 0.746032, 0.436278, 6.36068e-05, 0, 0.777778, 0.41637, 6.13466e-05, 0, 0.809524, 0.397144, 5.94177e-05, 0, 0.84127, 0.378412, 5.70987e-05, 0, 0.873016, 0.360376, 5.50419e-05, 0, 0.904762, 0.342906, 5.27422e-05, 0, 0.936508, 0.326136, 5.06544e-05, 0, 0.968254, 0.30997, 4.84307e-05, 0, 1, 1, 3.54014e-09, 0, 0, 1, 3.54073e-09, 0, 0, 1, 3.54972e-09, 0, 0, 1, 3.58929e-09, 0, 0, 1, 3.70093e-09, 0, 0, 0.999999, 3.96194e-09, 0, 0, 0.999998, 4.53352e-09, 0, 0, 0.999997, 5.78828e-09, 0, 0, 0.999994, 8.63812e-09, 0, 0, 0.999991, 1.53622e-08, 0, 0, 0.999985, 3.16356e-08, 0, 0, 0.999977, 7.12781e-08, 0, 0, 0.999964, 1.66725e-07, 0, 0, 0.999945, 3.90501e-07, 0, 0, 0.999912, 8.95622e-07, 0, 0, 0.999866, 1.98428e-06, 0, 0, 0.999786, 4.21038e-06, 0, 0, 0.999647, 8.50239e-06, 0, 0, 0.999356, 1.62059e-05, 0, 0, 0.998563, 2.82652e-05, 0, 0, 0.994928, 3.36309e-05, 0, 2.44244e-05, 0.987999, 1.78458e-05, 0, 0.000523891, 0.982893, 1.59162e-05, 0, 0.00194729, 0.977044, 1.78056e-05, 0, 0.00451099, 0.969972, 2.30624e-05, 0, 0.00835132, 0.964237, 3.13922e-05, 0, 0.013561, 0.960791, 4.06145e-05, 0, 0.0202056, 0.954292, 3.72796e-05, 0, 0.0283321, 0.948052, 4.03199e-05, 0, 0.0379739, 0.940938, 4.79537e-05, 0, 0.0491551, 0.931689, 5.45292e-05, 0, 0.0618918, 0.91987, 5.4038e-05, 0, 0.0761941, 0.907665, 5.89909e-05, 0, 0.0920672, 0.895281, 6.42651e-05, 0, 0.109511, 0.882621, 6.59707e-05, 0, 0.12852, 0.86873, 7.09973e-05, 0, 0.149085, 0.853008, 7.42221e-05, 0, 0.171189, 0.835944, 7.61754e-05, 0, 0.194809, 0.818949, 7.97052e-05, 0, 0.21991, 0.800951, 8.12434e-05, 0, 0.246447, 0.781847, 8.38075e-05, 0, 0.274352, 0.761649, 8.4501e-05, 0, 0.303535, 0.74152, 8.60258e-05, 0, 0.333857, 0.720495, 8.66233e-05, 0, 0.365104, 0.698742, 8.68326e-05, 0, 0.396826, 0.677096, 8.7133e-05, 0, 0.428572, 0.654782, 8.63497e-05, 0, 0.460318, 0.632335, 8.60206e-05, 0, 0.492064, 0.610031, 8.49337e-05, 0, 0.52381, 0.587457, 8.38279e-05, 0, 0.555556, 0.56513, 8.2309e-05, 0, 0.587302, 0.542877, 8.03542e-05, 0, 0.619048, 0.5209, 7.86928e-05, 0, 0.650794, 0.499291, 7.65171e-05, 0, 0.68254, 0.477971, 7.44753e-05, 0, 0.714286, 0.457221, 7.2209e-05, 0, 0.746032, 0.436803, 6.97448e-05, 0, 0.777778, 0.417083, 6.75333e-05, 0, 0.809524, 0.397749, 6.48058e-05, 0, 0.84127, 0.379177, 6.25759e-05, 0, 0.873016, 0.361061, 5.98584e-05, 0, 0.904762, 0.343713, 5.75797e-05, 0, 0.936508, 0.326894, 5.49999e-05, 0, 0.968254, 0.310816, 5.27482e-05, 0, 1, 1, 1.0153e-08, 0, 0, 1, 1.01544e-08, 0, 0, 1, 1.01751e-08, 0, 0, 1, 1.02662e-08, 0, 0, 1, 1.0521e-08, 0, 0, 0.999999, 1.11049e-08, 0, 0, 0.999999, 1.23408e-08, 0, 0, 0.999996, 1.4924e-08, 0, 0, 0.999992, 2.04471e-08, 0, 0, 0.999989, 3.26539e-08, 0, 0, 0.99998, 6.03559e-08, 0, 0, 0.999971, 1.23936e-07, 0, 0, 0.999955, 2.69058e-07, 0, 0, 0.999933, 5.93604e-07, 0, 0, 0.999901, 1.29633e-06, 0, 0, 0.999847, 2.75621e-06, 0, 0, 0.999761, 5.64494e-06, 0, 0, 0.999607, 1.10485e-05, 0, 0, 0.999282, 2.04388e-05, 0, 0, 0.99831, 3.41084e-05, 0, 2.2038e-07, 0.993288, 2.94949e-05, 0, 0.000242388, 0.987855, 1.92736e-05, 0, 0.0012503, 0.983167, 1.82383e-05, 0, 0.0032745, 0.977908, 2.18633e-05, 0, 0.00646321, 0.971194, 2.90662e-05, 0, 0.0109133, 0.963867, 3.86401e-05, 0, 0.0166927, 0.95982, 4.62827e-05, 0, 0.0238494, 0.953497, 4.20705e-05, 0, 0.0324178, 0.947621, 4.77743e-05, 0, 0.0424225, 0.940611, 5.68258e-05, 0, 0.0538808, 0.931174, 6.18061e-05, 0, 0.0668047, 0.919919, 6.27098e-05, 0, 0.0812014, 0.907856, 6.94714e-05, 0, 0.0970745, 0.894509, 7.35008e-05, 0, 0.114424, 0.881954, 7.63369e-05, 0, 0.133246, 0.868309, 8.21896e-05, 0, 0.153534, 0.852511, 8.3769e-05, 0, 0.175275, 0.835821, 8.81615e-05, 0, 0.198453, 0.817981, 8.96368e-05, 0, 0.223042, 0.800504, 9.30906e-05, 0, 0.249009, 0.78141, 9.45056e-05, 0, 0.276304, 0.761427, 9.63605e-05, 0, 0.304862, 0.74094, 9.68088e-05, 0, 0.334584, 0.720233, 9.81481e-05, 0, 0.365322, 0.698592, 9.79122e-05, 0, 0.396826, 0.676763, 9.81057e-05, 0, 0.428571, 0.654808, 9.73956e-05, 0, 0.460318, 0.632326, 9.62619e-05, 0, 0.492064, 0.610049, 9.52996e-05, 0, 0.52381, 0.58763, 9.33334e-05, 0, 0.555556, 0.565261, 9.17573e-05, 0, 0.587302, 0.543244, 8.96636e-05, 0, 0.619048, 0.521273, 8.73304e-05, 0, 0.650794, 0.499818, 8.52648e-05, 0, 0.68254, 0.478536, 8.23961e-05, 0, 0.714286, 0.457826, 7.9939e-05, 0, 0.746032, 0.437549, 7.7126e-05, 0, 0.777778, 0.41776, 7.43043e-05, 0, 0.809524, 0.39863, 7.16426e-05, 0, 0.84127, 0.379954, 6.86456e-05, 0, 0.873016, 0.362025, 6.60514e-05, 0, 0.904762, 0.344581, 6.30755e-05, 0, 0.936508, 0.327909, 6.05439e-05, 0, 0.968254, 0.311736, 5.76345e-05, 0, 1, 1, 2.63344e-08, 0, 0, 1, 2.63373e-08, 0, 0, 1, 2.63815e-08, 0, 0, 1, 2.65753e-08, 0, 0, 1, 2.71132e-08, 0, 0, 0.999999, 2.83279e-08, 0, 0, 0.999997, 3.0833e-08, 0, 0, 0.999995, 3.58711e-08, 0, 0, 0.999992, 4.61266e-08, 0, 0, 0.999985, 6.7574e-08, 0, 0, 0.999977, 1.1358e-07, 0, 0, 0.999966, 2.13657e-07, 0, 0, 0.999948, 4.31151e-07, 0, 0, 0.999923, 8.96656e-07, 0, 0, 0.999884, 1.86603e-06, 0, 0, 0.999826, 3.81115e-06, 0, 0, 0.999732, 7.54184e-06, 0, 0, 0.999561, 1.43192e-05, 0, 0, 0.999191, 2.57061e-05, 0, 0, 0.997955, 4.05724e-05, 0, 7.44132e-05, 0.992228, 2.76537e-05, 0, 0.000716477, 0.987638, 2.08885e-05, 0, 0.0022524, 0.983395, 2.15226e-05, 0, 0.00484816, 0.978614, 2.70795e-05, 0, 0.00860962, 0.972389, 3.65282e-05, 0, 0.0136083, 0.964392, 4.74747e-05, 0, 0.0198941, 0.95861, 5.09141e-05, 0, 0.0275023, 0.952806, 4.8963e-05, 0, 0.0364584, 0.94712, 5.71119e-05, 0, 0.04678, 0.940104, 6.71704e-05, 0, 0.0584799, 0.930398, 6.87586e-05, 0, 0.0715665, 0.919866, 7.38161e-05, 0, 0.086045, 0.907853, 8.13235e-05, 0, 0.101918, 0.894078, 8.34582e-05, 0, 0.119186, 0.881177, 8.92093e-05, 0, 0.137845, 0.867575, 9.44548e-05, 0, 0.157891, 0.852107, 9.69607e-05, 0, 0.179316, 0.835502, 0.000101456, 0, 0.202106, 0.81756, 0.000103256, 0, 0.226243, 0.79984, 0.000106954, 0, 0.251704, 0.780998, 0.000108066, 0, 0.278451, 0.761132, 0.000110111, 0, 0.306436, 0.740429, 0.000110459, 0, 0.335586, 0.719836, 0.000111219, 0, 0.365796, 0.698467, 0.00011145, 0, 0.3969, 0.676446, 0.000110393, 0, 0.428571, 0.654635, 0.000110035, 0, 0.460318, 0.632411, 0.000108548, 0, 0.492064, 0.609986, 0.000106963, 0, 0.52381, 0.587872, 0.000105238, 0, 0.555556, 0.565528, 0.000102665, 0, 0.587302, 0.543563, 0.000100543, 0, 0.619048, 0.52176, 9.76182e-05, 0, 0.650794, 0.500188, 9.47099e-05, 0, 0.68254, 0.479204, 9.19929e-05, 0, 0.714286, 0.458413, 8.86139e-05, 0, 0.746032, 0.438314, 8.57839e-05, 0, 0.777778, 0.418573, 8.2411e-05, 0, 0.809524, 0.39947, 7.92211e-05, 0, 0.84127, 0.380892, 7.59546e-05, 0, 0.873016, 0.362953, 7.27571e-05, 0, 0.904762, 0.345601, 6.95738e-05, 0, 0.936508, 0.328895, 6.64907e-05, 0, 0.968254, 0.312808, 6.34277e-05, 0, 1, 1, 6.28647e-08, 0, 0, 1, 6.28705e-08, 0, 0, 1, 6.29587e-08, 0, 0, 1, 6.33441e-08, 0, 0, 0.999999, 6.44087e-08, 0, 0, 0.999998, 6.67856e-08, 0, 0, 0.999997, 7.15889e-08, 0, 0, 0.999995, 8.09577e-08, 0, 0, 0.999989, 9.92764e-08, 0, 0, 0.999983, 1.35834e-07, 0, 0, 0.999974, 2.10482e-07, 0, 0, 0.999959, 3.65215e-07, 0, 0, 0.999939, 6.86693e-07, 0, 0, 0.999911, 1.3472e-06, 0, 0, 0.999868, 2.6731e-06, 0, 0, 0.999804, 5.24756e-06, 0, 0, 0.9997, 1.00403e-05, 0, 0, 0.99951, 1.85019e-05, 0, 0, 0.999078, 3.22036e-05, 0, 6.20676e-06, 0.997428, 4.70002e-05, 0, 0.000341552, 0.99162, 2.87123e-05, 0, 0.00143727, 0.987479, 2.34706e-05, 0, 0.00349201, 0.983582, 2.60083e-05, 0, 0.0066242, 0.979186, 3.37927e-05, 0, 0.0109113, 0.97325, 4.54689e-05, 0, 0.0164064, 0.965221, 5.73759e-05, 0, 0.0231463, 0.957262, 5.44114e-05, 0, 0.0311571, 0.952211, 5.87006e-05, 0, 0.0404572, 0.946631, 6.92256e-05, 0, 0.0510592, 0.939391, 7.87819e-05, 0, 0.0629723, 0.929795, 7.92368e-05, 0, 0.0762025, 0.91965, 8.75075e-05, 0, 0.090753, 0.907737, 9.50903e-05, 0, 0.106626, 0.893899, 9.72963e-05, 0, 0.123822, 0.880239, 0.00010459, 0, 0.142337, 0.866562, 0.000107689, 0, 0.16217, 0.85164, 0.000113081, 0, 0.183314, 0.835021, 0.000116636, 0, 0.20576, 0.817311, 0.000120074, 0, 0.229496, 0.798845, 0.000121921, 0, 0.254502, 0.780479, 0.00012475, 0, 0.280753, 0.760694, 0.000125255, 0, 0.308212, 0.740142, 0.000126719, 0, 0.336825, 0.719248, 0.00012636, 0, 0.366517, 0.698209, 0.000126712, 0, 0.397167, 0.676398, 0.000125769, 0, 0.428578, 0.654378, 0.000124432, 0, 0.460318, 0.632484, 0.000123272, 0, 0.492064, 0.610113, 0.00012085, 0, 0.52381, 0.587931, 0.000118411, 0, 0.555556, 0.565872, 0.00011569, 0, 0.587302, 0.543814, 0.000112521, 0, 0.619048, 0.522265, 0.000109737, 0, 0.650794, 0.500835, 0.000106228, 0, 0.68254, 0.479818, 0.000102591, 0, 0.714286, 0.459258, 9.91288e-05, 0, 0.746032, 0.439061, 9.52325e-05, 0, 0.777778, 0.419552, 9.1895e-05, 0, 0.809524, 0.400399, 8.79051e-05, 0, 0.84127, 0.381976, 8.44775e-05, 0, 0.873016, 0.364009, 8.06316e-05, 0, 0.904762, 0.346761, 7.71848e-05, 0, 0.936508, 0.330049, 7.35429e-05, 0, 0.968254, 0.314018, 7.02103e-05, 0, 1, 1, 1.39968e-07, 0, 0, 1, 1.39979e-07, 0, 0, 1, 1.40145e-07, 0, 0, 1, 1.4087e-07, 0, 0, 0.999999, 1.42865e-07, 0, 0, 0.999998, 1.47279e-07, 0, 0, 0.999997, 1.56057e-07, 0, 0, 0.999992, 1.7276e-07, 0, 0, 0.999989, 2.04352e-07, 0, 0, 0.99998, 2.6494e-07, 0, 0, 0.999969, 3.83435e-07, 0, 0, 0.999953, 6.18641e-07, 0, 0, 0.999929, 1.08755e-06, 0, 0, 0.999898, 2.01497e-06, 0, 0, 0.999849, 3.81346e-06, 0, 0, 0.999778, 7.19815e-06, 0, 0, 0.999661, 1.33215e-05, 0, 0, 0.999451, 2.38313e-05, 0, 0, 0.998936, 4.01343e-05, 0, 0.000113724, 0.99662, 5.17346e-05, 0, 0.000820171, 0.991094, 3.04323e-05, 0, 0.00238143, 0.987487, 2.81757e-05, 0, 0.00493527, 0.983731, 3.20048e-05, 0, 0.00856859, 0.979647, 4.23905e-05, 0, 0.0133393, 0.973837, 5.62935e-05, 0, 0.0192863, 0.96584, 6.77442e-05, 0, 0.0264369, 0.956309, 6.23073e-05, 0, 0.03481, 0.951523, 7.04131e-05, 0, 0.0444184, 0.946003, 8.36594e-05, 0, 0.0552713, 0.938454, 9.11736e-05, 0, 0.0673749, 0.929279, 9.38264e-05, 0, 0.0807329, 0.919239, 0.000103754, 0, 0.0953479, 0.907293, 0.000109928, 0, 0.111221, 0.893936, 0.000115257, 0, 0.128352, 0.879674, 0.000122265, 0, 0.14674, 0.865668, 0.000125733, 0, 0.166382, 0.850998, 0.000132305, 0, 0.187276, 0.834498, 0.000134844, 0, 0.209413, 0.816903, 0.000139276, 0, 0.232786, 0.798235, 0.000140984, 0, 0.257382, 0.779724, 0.00014378, 0, 0.283181, 0.760251, 0.000144623, 0, 0.310156, 0.739808, 0.000145228, 0, 0.338269, 0.718762, 0.00014539, 0, 0.367461, 0.697815, 0.000144432, 0, 0.397646, 0.67631, 0.000143893, 0, 0.428685, 0.654278, 0.000141846, 0, 0.460318, 0.632347, 0.00013935, 0, 0.492064, 0.610296, 0.000137138, 0, 0.52381, 0.588039, 0.000133806, 0, 0.555556, 0.566218, 0.000130755, 0, 0.587302, 0.544346, 0.000127128, 0, 0.619048, 0.522701, 0.000123002, 0, 0.650794, 0.501542, 0.000119443, 0, 0.68254, 0.480508, 0.000115055, 0, 0.714286, 0.460092, 0.000111032, 0, 0.746032, 0.440021, 0.000106635, 0, 0.777778, 0.420446, 0.000102162, 0, 0.809524, 0.401512, 9.8184e-05, 0, 0.84127, 0.38299, 9.36497e-05, 0, 0.873016, 0.365232, 8.9813e-05, 0, 0.904762, 0.347865, 8.53073e-05, 0, 0.936508, 0.331342, 8.17068e-05, 0, 0.968254, 0.315202, 7.73818e-05, 0, 1, 1, 2.9368e-07, 0, 0, 1, 2.937e-07, 0, 0, 1, 2.93998e-07, 0, 0, 1, 2.95298e-07, 0, 0, 0.999999, 2.98865e-07, 0, 0, 0.999998, 3.067e-07, 0, 0, 0.999995, 3.22082e-07, 0, 0, 0.999992, 3.50767e-07, 0, 0, 0.999986, 4.03538e-07, 0, 0, 0.999976, 5.01372e-07, 0, 0, 0.999964, 6.8562e-07, 0, 0, 0.999945, 1.0374e-06, 0, 0, 0.999919, 1.71269e-06, 0, 0, 0.999882, 3.00175e-06, 0, 0, 0.999829, 5.42144e-06, 0, 0, 0.999749, 9.84182e-06, 0, 0, 0.99962, 1.76213e-05, 0, 0, 0.999382, 3.05995e-05, 0, 1.38418e-05, 0.998751, 4.96686e-05, 0, 0.000389844, 0.995344, 5.10733e-05, 0, 0.00150343, 0.990768, 3.45829e-05, 0, 0.00352451, 0.987464, 3.42841e-05, 0, 0.00655379, 0.983846, 3.99072e-05, 0, 0.0106554, 0.980007, 5.33219e-05, 0, 0.0158723, 0.974494, 6.96992e-05, 0, 0.0222333, 0.96622, 7.76754e-05, 0, 0.029758, 0.956273, 7.47718e-05, 0, 0.0384596, 0.950952, 8.64611e-05, 0, 0.0483473, 0.945215, 0.000100464, 0, 0.0594266, 0.937287, 0.000103729, 0, 0.0717019, 0.928649, 0.000111665, 0, 0.0851752, 0.918791, 0.00012353, 0, 0.0998479, 0.906685, 0.000127115, 0, 0.115721, 0.893706, 0.00013628, 0, 0.132794, 0.879248, 0.000142427, 0, 0.151067, 0.864685, 0.000148091, 0, 0.170538, 0.850032, 0.000153517, 0, 0.191204, 0.833853, 0.000157322, 0, 0.213063, 0.816353, 0.000161086, 0, 0.236107, 0.797834, 0.000164111, 0, 0.260329, 0.778831, 0.000165446, 0, 0.285714, 0.759756, 0.000167492, 0, 0.312243, 0.739419, 0.000166928, 0, 0.339887, 0.718491, 0.000167, 0, 0.368604, 0.697392, 0.000165674, 0, 0.398329, 0.676102, 0.000163815, 0, 0.428961, 0.654243, 0.000162003, 0, 0.460331, 0.632176, 0.000158831, 0, 0.492064, 0.610407, 0.000155463, 0, 0.52381, 0.588394, 0.000152062, 0, 0.555556, 0.56645, 0.000147665, 0, 0.587302, 0.5449, 0.00014375, 0, 0.619048, 0.523276, 0.000138905, 0, 0.650794, 0.502179, 0.000134189, 0, 0.68254, 0.481359, 0.000129392, 0, 0.714286, 0.46092, 0.000124556, 0, 0.746032, 0.441084, 0.00011957, 0, 0.777778, 0.421517, 0.000114652, 0, 0.809524, 0.402721, 0.000109688, 0, 0.84127, 0.384222, 0.000104667, 0, 0.873016, 0.366534, 9.99633e-05, 0, 0.904762, 0.349205, 9.50177e-05, 0, 0.936508, 0.332702, 9.07301e-05, 0, 0.968254, 0.316599, 8.59769e-05, 0, 1, 1, 5.85473e-07, 0, 0, 1, 5.85507e-07, 0, 0, 1, 5.8602e-07, 0, 0, 0.999999, 5.88259e-07, 0, 0, 0.999999, 5.94381e-07, 0, 0, 0.999998, 6.07754e-07, 0, 0, 0.999995, 6.33729e-07, 0, 0, 0.99999, 6.8137e-07, 0, 0, 0.999984, 7.67003e-07, 0, 0, 0.999973, 9.21212e-07, 0, 0, 0.999959, 1.20218e-06, 0, 0, 0.999936, 1.72024e-06, 0, 0, 0.999907, 2.68088e-06, 0, 0, 0.999866, 4.45512e-06, 0, 0, 0.999806, 7.68481e-06, 0, 0, 0.999716, 1.342e-05, 0, 0, 0.999576, 2.32473e-05, 0, 0, 0.9993, 3.91694e-05, 0, 0.000129917, 0.998498, 6.08429e-05, 0, 0.000845035, 0.994132, 4.89743e-05, 0, 0.00237616, 0.99031, 3.84644e-05, 0, 0.00484456, 0.987409, 4.21768e-05, 0, 0.00832472, 0.983981, 5.04854e-05, 0, 0.0128643, 0.980268, 6.71028e-05, 0, 0.0184947, 0.974875, 8.52749e-05, 0, 0.025237, 0.966063, 8.5531e-05, 0, 0.0331046, 0.956779, 9.00588e-05, 0, 0.0421067, 0.950259, 0.00010577, 0, 0.0522487, 0.944239, 0.000119458, 0, 0.0635343, 0.936341, 0.000122164, 0, 0.0759654, 0.928047, 0.000134929, 0, 0.0895434, 0.918065, 0.000145544, 0, 0.104269, 0.906267, 0.000150531, 0, 0.120142, 0.893419, 0.000161652, 0, 0.137163, 0.878758, 0.00016593, 0, 0.15533, 0.863699, 0.000174014, 0, 0.174645, 0.848876, 0.000177877, 0, 0.195106, 0.833032, 0.000184049, 0, 0.21671, 0.815557, 0.000186088, 0, 0.239454, 0.797323, 0.00019054, 0, 0.263332, 0.778124, 0.000191765, 0, 0.288336, 0.758929, 0.000192535, 0, 0.314451, 0.738979, 0.000192688, 0, 0.341658, 0.718213, 0.000191522, 0, 0.369924, 0.696947, 0.000190491, 0, 0.399202, 0.675807, 0.000187913, 0, 0.429416, 0.654147, 0.000184451, 0, 0.460447, 0.63229, 0.000181442, 0, 0.492064, 0.610499, 0.000177139, 0, 0.523809, 0.588747, 0.000172596, 0, 0.555555, 0.566783, 0.000167457, 0, 0.587301, 0.545359, 0.000162518, 0, 0.619048, 0.523984, 0.000156818, 0, 0.650794, 0.502917, 0.000151884, 0, 0.68254, 0.482294, 0.000145514, 0, 0.714286, 0.461945, 0.000140199, 0, 0.746032, 0.442133, 0.000134101, 0, 0.777778, 0.422705, 0.000128374, 0, 0.809524, 0.403916, 0.000122996, 0, 0.84127, 0.38554, 0.000116808, 0, 0.873016, 0.367909, 0.000111973, 0, 0.904762, 0.350651, 0.000105938, 0, 0.936508, 0.334208, 0.000101355, 0, 0.968254, 0.318123, 9.57629e-05, 0, 1, 1, 1.11633e-06, 0, 0, 1, 1.11639e-06, 0, 0, 1, 1.11725e-06, 0, 0, 1, 1.12096e-06, 0, 0, 0.999999, 1.1311e-06, 0, 0, 0.999997, 1.15315e-06, 0, 0, 0.999995, 1.1956e-06, 0, 0, 0.999989, 1.27239e-06, 0, 0, 0.999981, 1.40772e-06, 0, 0, 0.999969, 1.64541e-06, 0, 0, 0.999952, 2.06607e-06, 0, 0, 0.999928, 2.81783e-06, 0, 0, 0.999895, 4.16835e-06, 0, 0, 0.999848, 6.58728e-06, 0, 0, 0.999781, 1.08648e-05, 0, 0, 0.999682, 1.82579e-05, 0, 0, 0.999523, 3.06003e-05, 0, 1.59122e-05, 0.999205, 4.99862e-05, 0, 0.000391184, 0.998131, 7.3306e-05, 0, 0.00147534, 0.993334, 5.13229e-05, 0, 0.0034227, 0.99016, 4.67783e-05, 0, 0.00632232, 0.987321, 5.23413e-05, 0, 0.0102295, 0.984099, 6.4267e-05, 0, 0.0151794, 0.980432, 8.43042e-05, 0, 0.0211947, 0.974976, 0.000102819, 0, 0.0282899, 0.966429, 9.96234e-05, 0, 0.0364739, 0.957633, 0.000111074, 0, 0.0457522, 0.949422, 0.000128644, 0, 0.0561278, 0.943045, 0.000140076, 0, 0.0676023, 0.935448, 0.000146349, 0, 0.0801762, 0.927225, 0.000161854, 0, 0.0938499, 0.917033, 0.000169135, 0, 0.108623, 0.905762, 0.000179987, 0, 0.124496, 0.892879, 0.000189832, 0, 0.141469, 0.878435, 0.000195881, 0, 0.159541, 0.863114, 0.00020466, 0, 0.178713, 0.84776, 0.000209473, 0, 0.198985, 0.832084, 0.000214861, 0, 0.220355, 0.814915, 0.000217695, 0, 0.242823, 0.796711, 0.000220313, 0, 0.266385, 0.777603, 0.00022313, 0, 0.291036, 0.757991, 0.000222471, 0, 0.316767, 0.738371, 0.000222869, 0, 0.343563, 0.717872, 0.000221243, 0, 0.371402, 0.696619, 0.000218089, 0, 0.400248, 0.675379, 0.00021562, 0, 0.430047, 0.65411, 0.00021169, 0, 0.460709, 0.63241, 0.000206947, 0, 0.492079, 0.61046, 0.000201709, 0, 0.52381, 0.58903, 0.000196753, 0, 0.555556, 0.567267, 0.000189637, 0, 0.587302, 0.545886, 0.000184735, 0, 0.619048, 0.524714, 0.000177257, 0, 0.650794, 0.503789, 0.000171424, 0, 0.68254, 0.483204, 0.000164688, 0, 0.714286, 0.462976, 0.000157172, 0, 0.746032, 0.443294, 0.000151341, 0, 0.777778, 0.423988, 0.000143737, 0, 0.809524, 0.405325, 0.000138098, 0, 0.84127, 0.386981, 0.000130698, 0, 0.873016, 0.369436, 0.000125276, 0, 0.904762, 0.35219, 0.000118349, 0, 0.936508, 0.335804, 0.00011312, 0, 0.968254, 0.319749, 0.000106687, 0, 1, 1, 2.04685e-06, 0, 0, 1, 2.04694e-06, 0, 0, 1, 2.04831e-06, 0, 0, 0.999999, 2.05428e-06, 0, 0, 0.999999, 2.07056e-06, 0, 0, 0.999997, 2.10581e-06, 0, 0, 0.999993, 2.1732e-06, 0, 0, 0.999987, 2.29365e-06, 0, 0, 0.999979, 2.50243e-06, 0, 0, 0.999965, 2.86127e-06, 0, 0, 0.999947, 3.48028e-06, 0, 0, 0.999918, 4.55588e-06, 0, 0, 0.999881, 6.43303e-06, 0, 0, 0.999828, 9.70064e-06, 0, 0, 0.999753, 1.53233e-05, 0, 0, 0.999642, 2.4793e-05, 0, 0, 0.999464, 4.02032e-05, 0, 0.000122947, 0.999089, 6.35852e-05, 0, 0.000807414, 0.997567, 8.57026e-05, 0, 0.00227206, 0.992903, 5.94912e-05, 0, 0.00462812, 0.990011, 5.78515e-05, 0, 0.00794162, 0.987192, 6.5399e-05, 0, 0.0122534, 0.98418, 8.19675e-05, 0, 0.0175888, 0.980491, 0.000105514, 0, 0.0239635, 0.974779, 0.000121532, 0, 0.031387, 0.96675, 0.000119144, 0, 0.0398644, 0.958248, 0.000136125, 0, 0.0493982, 0.948884, 0.000155408, 0, 0.0599896, 0.941673, 0.000162281, 0, 0.0716382, 0.934521, 0.000176754, 0, 0.0843437, 0.926205, 0.000192873, 0, 0.0981056, 0.916089, 0.000200038, 0, 0.112923, 0.904963, 0.000213624, 0, 0.128796, 0.892089, 0.000221834, 0, 0.145725, 0.878028, 0.000232619, 0, 0.163709, 0.86249, 0.000238632, 0, 0.182749, 0.846587, 0.000247002, 0, 0.202847, 0.830988, 0.000250702, 0, 0.224001, 0.814165, 0.000255562, 0, 0.246214, 0.796135, 0.000257505, 0, 0.269482, 0.777052, 0.000258625, 0, 0.293805, 0.757201, 0.000258398, 0, 0.319176, 0.737655, 0.000256714, 0, 0.345587, 0.717477, 0.000255187, 0, 0.373021, 0.696433, 0.000251792, 0, 0.401454, 0.675084, 0.000247223, 0, 0.430844, 0.653907, 0.000242213, 0, 0.461125, 0.632561, 0.000237397, 0, 0.492187, 0.610658, 0.000229313, 0, 0.52381, 0.589322, 0.000224402, 0, 0.555556, 0.567857, 0.000216116, 0, 0.587302, 0.54652, 0.000209124, 0, 0.619048, 0.525433, 0.000201601, 0, 0.650794, 0.504679, 0.000192957, 0, 0.68254, 0.484203, 0.000186052, 0, 0.714286, 0.464203, 0.000177672, 0, 0.746032, 0.444549, 0.000170005, 0, 0.777778, 0.425346, 0.000162401, 0, 0.809524, 0.406706, 0.0001544, 0, 0.84127, 0.388576, 0.000147437, 0, 0.873016, 0.37094, 0.000139493, 0, 0.904762, 0.353996, 0.000133219, 0, 0.936508, 0.337391, 0.000125573, 0, 0.968254, 0.321648, 0.000119867, 0, 1, 1, 3.62511e-06, 0, 0, 1, 3.62525e-06, 0, 0, 1, 3.62739e-06, 0, 0, 0.999999, 3.63673e-06, 0, 0, 0.999998, 3.66214e-06, 0, 0, 0.999996, 3.71698e-06, 0, 0, 0.999992, 3.82116e-06, 0, 0, 0.999986, 4.00554e-06, 0, 0, 0.999976, 4.32058e-06, 0, 0, 0.999961, 4.85194e-06, 0, 0, 0.999938, 5.74808e-06, 0, 0, 0.999908, 7.26643e-06, 0, 0, 0.999865, 9.84707e-06, 0, 0, 0.999807, 1.42217e-05, 0, 0, 0.999723, 2.15581e-05, 0, 0, 0.999602, 3.36114e-05, 0, 1.19113e-05, 0.999398, 5.27353e-05, 0, 0.000355813, 0.998946, 8.05809e-05, 0, 0.00137768, 0.996647, 9.42908e-05, 0, 0.00322469, 0.992298, 6.68733e-05, 0, 0.00597897, 0.989802, 7.16564e-05, 0, 0.00968903, 0.987019, 8.21355e-05, 0, 0.0143845, 0.984219, 0.000104555, 0, 0.0200831, 0.980425, 0.000131245, 0, 0.0267948, 0.974241, 0.000139613, 0, 0.034525, 0.967006, 0.000145931, 0, 0.0432757, 0.95893, 0.000167153, 0, 0.0530471, 0.949157, 0.000188146, 0, 0.0638386, 0.94062, 0.000194625, 0, 0.0756487, 0.933509, 0.000213721, 0, 0.0884762, 0.925088, 0.000229616, 0, 0.10232, 0.915178, 0.000239638, 0, 0.117178, 0.904093, 0.000254814, 0, 0.133051, 0.891337, 0.000263685, 0, 0.149939, 0.877326, 0.000274789, 0, 0.167841, 0.861794, 0.000280534, 0, 0.18676, 0.845758, 0.000289534, 0, 0.206696, 0.829792, 0.000294446, 0, 0.22765, 0.813037, 0.000296877, 0, 0.249625, 0.795285, 0.000300217, 0, 0.27262, 0.776323, 0.000299826, 0, 0.296636, 0.756673, 0.000299787, 0, 0.321671, 0.736856, 0.000297867, 0, 0.347718, 0.716883, 0.000294052, 0, 0.374768, 0.696089, 0.000289462, 0, 0.402804, 0.67505, 0.000285212, 0, 0.431796, 0.653509, 0.00027653, 0, 0.461695, 0.63258, 0.000271759, 0, 0.49242, 0.61104, 0.000262811, 0, 0.523822, 0.589567, 0.000255151, 0, 0.555556, 0.568322, 0.000246434, 0, 0.587302, 0.547235, 0.000237061, 0, 0.619048, 0.52616, 0.000228343, 0, 0.650794, 0.505716, 0.000219236, 0, 0.68254, 0.485274, 0.000209595, 0, 0.714286, 0.465411, 0.000201011, 0, 0.746032, 0.445854, 0.00019109, 0, 0.777778, 0.426911, 0.000182897, 0, 0.809524, 0.408222, 0.000173569, 0, 0.84127, 0.390307, 0.000165496, 0, 0.873016, 0.372624, 0.000156799, 0, 0.904762, 0.355804, 0.00014917, 0, 0.936508, 0.33924, 0.000140907, 0, 0.968254, 0.323534, 0.000134062, 0, 1, 1, 6.22487e-06, 0, 0, 1, 6.2251e-06, 0, 0, 1, 6.22837e-06, 0, 0, 0.999999, 6.24259e-06, 0, 0, 0.999998, 6.28127e-06, 0, 0, 0.999996, 6.36451e-06, 0, 0, 0.999991, 6.5218e-06, 0, 0, 0.999984, 6.79782e-06, 0, 0, 0.999973, 7.26361e-06, 0, 0, 0.999955, 8.03644e-06, 0, 0, 0.999931, 9.31397e-06, 0, 0, 0.999896, 1.14299e-05, 0, 0, 0.999847, 1.49402e-05, 0, 0, 0.999784, 2.07461e-05, 0, 0, 0.999692, 3.02493e-05, 0, 0, 0.999554, 4.54957e-05, 0, 9.97275e-05, 0.999326, 6.90762e-05, 0, 0.000724813, 0.998757, 0.000101605, 0, 0.0020972, 0.995367, 9.58745e-05, 0, 0.00432324, 0.99209, 8.32808e-05, 0, 0.00746347, 0.989517, 8.87601e-05, 0, 0.0115534, 0.987008, 0.00010564, 0, 0.0166134, 0.98421, 0.000133179, 0, 0.0226552, 0.98021, 0.000161746, 0, 0.0296838, 0.973676, 0.000161821, 0, 0.0377016, 0.967052, 0.000178635, 0, 0.0467079, 0.959385, 0.000206765, 0, 0.0567013, 0.949461, 0.00022476, 0, 0.0676796, 0.939578, 0.00023574, 0, 0.0796403, 0.932416, 0.00025893, 0, 0.0925812, 0.923759, 0.000271228, 0, 0.106501, 0.914223, 0.000289165, 0, 0.121397, 0.902942, 0.000301156, 0, 0.13727, 0.890419, 0.000313852, 0, 0.15412, 0.876639, 0.000324408, 0, 0.171946, 0.861316, 0.00033249, 0, 0.190751, 0.84496, 0.000338497, 0, 0.210537, 0.828427, 0.000345861, 0, 0.231305, 0.811871, 0.000347863, 0, 0.253057, 0.794397, 0.000350225, 0, 0.275797, 0.775726, 0.000349915, 0, 0.299525, 0.75617, 0.000347297, 0, 0.324242, 0.736091, 0.000344232, 0, 0.349947, 0.716213, 0.000340835, 0, 0.376633, 0.695736, 0.000332369, 0, 0.404289, 0.674961, 0.000327943, 0, 0.432895, 0.653518, 0.000318533, 0, 0.462415, 0.632574, 0.000310391, 0, 0.492788, 0.61134, 0.000300755, 0, 0.523909, 0.590017, 0.000290506, 0, 0.555556, 0.568752, 0.000280446, 0, 0.587302, 0.548061, 0.000269902, 0, 0.619048, 0.52711, 0.000258815, 0, 0.650794, 0.506682, 0.000248481, 0, 0.68254, 0.486524, 0.000237141, 0, 0.714286, 0.466812, 0.000226872, 0, 0.746032, 0.44732, 0.000216037, 0, 0.777778, 0.428473, 0.000205629, 0, 0.809524, 0.409921, 0.000195691, 0, 0.84127, 0.392028, 0.000185457, 0, 0.873016, 0.374606, 0.000176436, 0, 0.904762, 0.357601, 0.000166508, 0, 0.936508, 0.341348, 0.000158385, 0, 0.968254, 0.32542, 0.000149203, 0, 1, 1, 1.03967e-05, 0, 0, 1, 1.0397e-05, 0, 0, 1, 1.04019e-05, 0, 0, 0.999999, 1.04231e-05, 0, 0, 0.999998, 1.04806e-05, 0, 0, 0.999995, 1.06042e-05, 0, 0, 0.999991, 1.08366e-05, 0, 0, 0.999982, 1.12415e-05, 0, 0, 0.999968, 1.19174e-05, 0, 0, 0.99995, 1.30227e-05, 0, 0, 0.999922, 1.48176e-05, 0, 0, 0.999884, 1.77303e-05, 0, 0, 0.99983, 2.24564e-05, 0, 0, 0.999758, 3.00966e-05, 0, 0, 0.999654, 4.23193e-05, 0, 5.49083e-06, 0.999503, 6.14848e-05, 0, 0.000296087, 0.999237, 9.03576e-05, 0, 0.00123144, 0.998491, 0.0001271, 0, 0.00295954, 0.994594, 0.000107754, 0, 0.00555829, 0.99178, 0.000103025, 0, 0.00907209, 0.989265, 0.00011154, 0, 0.0135257, 0.986998, 0.000136296, 0, 0.0189327, 0.984137, 0.000169154, 0, 0.0252993, 0.979798, 0.000196671, 0, 0.0326272, 0.97337, 0.000196678, 0, 0.0409157, 0.967239, 0.000223121, 0, 0.0501623, 0.959543, 0.000253809, 0, 0.0603638, 0.949466, 0.000265972, 0, 0.0715171, 0.939074, 0.000288372, 0, 0.0836187, 0.931118, 0.000310983, 0, 0.0966657, 0.922525, 0.000325561, 0, 0.110656, 0.912983, 0.000345725, 0, 0.125588, 0.901617, 0.0003556, 0, 0.141461, 0.889487, 0.000374012, 0, 0.158275, 0.875787, 0.000383445, 0, 0.176031, 0.860654, 0.000393972, 0, 0.19473, 0.844417, 0.000400311, 0, 0.214374, 0.82741, 0.000405004, 0, 0.234967, 0.810545, 0.000407378, 0, 0.256512, 0.793312, 0.000407351, 0, 0.279011, 0.774847, 0.000406563, 0, 0.302468, 0.755621, 0.000404903, 0, 0.326887, 0.735511, 0.000397486, 0, 0.352266, 0.715435, 0.00039357, 0, 0.378605, 0.695403, 0.000384739, 0, 0.405897, 0.674681, 0.000376108, 0, 0.43413, 0.65359, 0.000365997, 0, 0.463277, 0.632471, 0.000354957, 0, 0.493295, 0.61151, 0.000343593, 0, 0.524106, 0.59064, 0.000331841, 0, 0.555561, 0.569386, 0.000318891, 0, 0.587302, 0.548785, 0.0003072, 0, 0.619048, 0.528146, 0.00029361, 0, 0.650794, 0.507872, 0.000281709, 0, 0.68254, 0.487805, 0.000268627, 0, 0.714286, 0.468196, 0.000255887, 0, 0.746032, 0.448922, 0.000243997, 0, 0.777778, 0.430093, 0.000231662, 0, 0.809524, 0.411845, 0.000220339, 0, 0.84127, 0.393808, 0.000208694, 0, 0.873016, 0.376615, 0.000198045, 0, 0.904762, 0.359655, 0.000187375, 0, 0.936508, 0.343452, 0.000177371, 0, 0.968254, 0.32765, 0.000167525, 0, 1, 1, 1.69351e-05, 0, 0, 1, 1.69356e-05, 0, 0, 1, 1.69427e-05, 0, 0, 0.999999, 1.69736e-05, 0, 0, 0.999998, 1.70575e-05, 0, 0, 0.999995, 1.72372e-05, 0, 0, 0.99999, 1.75739e-05, 0, 0, 0.999979, 1.81568e-05, 0, 0, 0.999966, 1.91206e-05, 0, 0, 0.999944, 2.0677e-05, 0, 0, 0.999912, 2.31644e-05, 0, 0, 0.999869, 2.71268e-05, 0, 0, 0.999811, 3.34272e-05, 0, 0, 0.99973, 4.33979e-05, 0, 0, 0.999617, 5.90083e-05, 0, 6.80315e-05, 0.999445, 8.29497e-05, 0, 0.000612796, 0.999138, 0.000118019, 0, 0.00187408, 0.998095, 0.000156712, 0, 0.00395791, 0.993919, 0.000125054, 0, 0.00692144, 0.991333, 0.000126091, 0, 0.0107962, 0.989226, 0.000144912, 0, 0.0155986, 0.986954, 0.000175737, 0, 0.0213364, 0.983982, 0.000213883, 0, 0.0280114, 0.979128, 0.000234526, 0, 0.0356226, 0.973327, 0.000243725, 0, 0.0441668, 0.967416, 0.0002773, 0, 0.0536399, 0.959729, 0.000308799, 0, 0.0640376, 0.949758, 0.000322447, 0, 0.0753554, 0.939173, 0.000350021, 0, 0.0875893, 0.9296, 0.000370089, 0, 0.100736, 0.921181, 0.000391365, 0, 0.114793, 0.91164, 0.000413636, 0, 0.129759, 0.900435, 0.000427068, 0, 0.145632, 0.888183, 0.000441046, 0, 0.162412, 0.874772, 0.000454968, 0, 0.180101, 0.859566, 0.000461882, 0, 0.1987, 0.843579, 0.000471556, 0, 0.218213, 0.826453, 0.000474335, 0, 0.238641, 0.809164, 0.000477078, 0, 0.259989, 0.792179, 0.00047755, 0, 0.282262, 0.773866, 0.000472573, 0, 0.305464, 0.754944, 0.000469765, 0, 0.329599, 0.735133, 0.000462371, 0, 0.35467, 0.714858, 0.000453674, 0, 0.380678, 0.694829, 0.000443888, 0, 0.407622, 0.674453, 0.000432052, 0, 0.435493, 0.653685, 0.000420315, 0, 0.464275, 0.632666, 0.000406829, 0, 0.493938, 0.611676, 0.000392234, 0, 0.524422, 0.591193, 0.000379208, 0, 0.555624, 0.570145, 0.00036319, 0, 0.587302, 0.549566, 0.000349111, 0, 0.619048, 0.529278, 0.000334166, 0, 0.650794, 0.509026, 0.000318456, 0, 0.68254, 0.489186, 0.00030449, 0, 0.714286, 0.469662, 0.000289051, 0, 0.746032, 0.450691, 0.000275494, 0, 0.777778, 0.431841, 0.000261437, 0, 0.809524, 0.413752, 0.000247846, 0, 0.84127, 0.395951, 0.000235085, 0, 0.873016, 0.378633, 0.000222245, 0, 0.904762, 0.36194, 0.000210533, 0, 0.936508, 0.345599, 0.000198494, 0, 0.968254, 0.329999, 0.000188133, 0, 1, 1, 2.69663e-05, 0, 0, 1, 2.6967e-05, 0, 0, 1, 2.69772e-05, 0, 0, 0.999999, 2.70214e-05, 0, 0, 0.999998, 2.71415e-05, 0, 0, 0.999994, 2.7398e-05, 0, 0, 0.999988, 2.78771e-05, 0, 0, 0.999977, 2.87019e-05, 0, 0, 0.999961, 3.00544e-05, 0, 0, 0.999937, 3.22138e-05, 0, 0, 0.999904, 3.56163e-05, 0, 0, 0.999854, 4.09465e-05, 0, 0, 0.99979, 4.92651e-05, 0, 0, 0.999699, 6.21722e-05, 0, 8.8288e-07, 0.999572, 8.19715e-05, 0, 0.000223369, 0.999381, 0.000111689, 0, 0.00105414, 0.999016, 0.000153862, 0, 0.0026493, 0.997437, 0.000187667, 0, 0.00508608, 0.993545, 0.000155672, 0, 0.00840554, 0.991135, 0.000161455, 0, 0.012629, 0.989157, 0.000188241, 0, 0.0177661, 0.986874, 0.000226229, 0, 0.0238198, 0.983714, 0.000268668, 0, 0.0307887, 0.978301, 0.000277109, 0, 0.0386688, 0.973227, 0.000303446, 0, 0.0474554, 0.967317, 0.000341851, 0, 0.0571428, 0.959477, 0.000370885, 0, 0.0677256, 0.950012, 0.000392753, 0, 0.0791988, 0.939484, 0.00042781, 0, 0.0915576, 0.928135, 0.000443866, 0, 0.104798, 0.919819, 0.000472959, 0, 0.118918, 0.910049, 0.000491551, 0, 0.133915, 0.899181, 0.000512616, 0, 0.149788, 0.886881, 0.000523563, 0, 0.166537, 0.87359, 0.000540183, 0, 0.184164, 0.858613, 0.000547386, 0, 0.202669, 0.842809, 0.000554809, 0, 0.222056, 0.825727, 0.000558316, 0, 0.242329, 0.808086, 0.000557824, 0, 0.263492, 0.790728, 0.000556346, 0, 0.285551, 0.772987, 0.000552672, 0, 0.30851, 0.7541, 0.000543738, 0, 0.332376, 0.734669, 0.000536107, 0, 0.357153, 0.714411, 0.000523342, 0, 0.382845, 0.694196, 0.000512238, 0, 0.409454, 0.674252, 0.000497465, 0, 0.436977, 0.65357, 0.000481096, 0, 0.465404, 0.632999, 0.000467054, 0, 0.494713, 0.611994, 0.000448771, 0, 0.524864, 0.591604, 0.000431889, 0, 0.555779, 0.571134, 0.000415238, 0, 0.587302, 0.550528, 0.000396369, 0, 0.619048, 0.530292, 0.000379477, 0, 0.650794, 0.510364, 0.000361488, 0, 0.68254, 0.490749, 0.000343787, 0, 0.714286, 0.471266, 0.000327822, 0, 0.746032, 0.452462, 0.000310626, 0, 0.777778, 0.433907, 0.000295352, 0, 0.809524, 0.415659, 0.000279179, 0, 0.84127, 0.398138, 0.000264685, 0, 0.873016, 0.380833, 0.000249905, 0, 0.904762, 0.364247, 0.000236282, 0, 0.936508, 0.348041, 0.000222905, 0, 0.968254, 0.332389, 0.000210522, 0, 1, 1, 4.20604e-05, 0, 0, 1, 4.20614e-05, 0, 0, 1, 4.20757e-05, 0, 0, 0.999999, 4.2138e-05, 0, 0, 0.999997, 4.23067e-05, 0, 0, 0.999993, 4.26668e-05, 0, 0, 0.999986, 4.33372e-05, 0, 0, 0.999974, 4.44857e-05, 0, 0, 0.999956, 4.63554e-05, 0, 0, 0.99993, 4.93105e-05, 0, 0, 0.999892, 5.39077e-05, 0, 0, 0.999838, 6.10005e-05, 0, 0, 0.999767, 7.18822e-05, 0, 0, 0.999666, 8.84581e-05, 0, 3.65471e-05, 0.999525, 0.000113398, 0, 0.000485623, 0.999311, 0.000150043, 0, 0.00162096, 0.998865, 0.000200063, 0, 0.00355319, 0.996278, 0.000211014, 0, 0.00633818, 0.992956, 0.000189672, 0, 0.0100043, 0.991017, 0.000210262, 0, 0.0145648, 0.989055, 0.000244292, 0, 0.0200237, 0.986741, 0.000290481, 0, 0.0263798, 0.983288, 0.000334303, 0, 0.033629, 0.977784, 0.000340307, 0, 0.0417652, 0.973037, 0.000377864, 0, 0.0507821, 0.967181, 0.0004239, 0, 0.060673, 0.958971, 0.000443854, 0, 0.0714314, 0.950093, 0.000483039, 0, 0.0830518, 0.939552, 0.000517934, 0, 0.0955288, 0.927678, 0.000539449, 0, 0.108859, 0.918278, 0.000568604, 0, 0.123038, 0.908449, 0.000588505, 0, 0.138065, 0.897713, 0.000612473, 0, 0.153938, 0.885533, 0.000625575, 0, 0.170657, 0.872131, 0.00063854, 0, 0.188224, 0.857517, 0.000647034, 0, 0.20664, 0.841796, 0.00065209, 0, 0.225909, 0.824726, 0.0006544, 0, 0.246035, 0.807297, 0.000655744, 0, 0.267022, 0.789058, 0.000646716, 0, 0.288878, 0.77189, 0.000643898, 0, 0.311607, 0.753082, 0.000629973, 0, 0.335216, 0.7341, 0.000621564, 0, 0.359713, 0.714094, 0.000605171, 0, 0.385103, 0.693839, 0.000588752, 0, 0.41139, 0.673891, 0.000573294, 0, 0.438576, 0.653565, 0.000552682, 0, 0.466656, 0.633326, 0.000533446, 0, 0.495617, 0.612582, 0.000514635, 0, 0.525431, 0.59205, 0.00049303, 0, 0.556041, 0.571918, 0.000471842, 0, 0.587338, 0.551572, 0.000451713, 0, 0.619048, 0.531553, 0.000430049, 0, 0.650794, 0.51175, 0.000410445, 0, 0.68254, 0.49238, 0.000390098, 0, 0.714286, 0.473143, 0.000370033, 0, 0.746032, 0.45423, 0.000351205, 0, 0.777778, 0.435963, 0.000332049, 0, 0.809524, 0.41787, 0.000315021, 0, 0.84127, 0.400387, 0.000297315, 0, 0.873016, 0.383332, 0.000281385, 0, 0.904762, 0.366665, 0.000265397, 0, 0.936508, 0.350633, 0.000250601, 0, 0.968254, 0.334964, 0.00023589, 0, 1, 1, 6.43736e-05, 0, 0, 1, 6.4375e-05, 0, 0, 1, 6.43947e-05, 0, 0, 0.999999, 6.4481e-05, 0, 0, 0.999997, 6.47143e-05, 0, 0, 0.999994, 6.52119e-05, 0, 0, 0.999985, 6.61359e-05, 0, 0, 0.999972, 6.77116e-05, 0, 0, 0.999952, 7.02599e-05, 0, 0, 0.999922, 7.42517e-05, 0, 0, 0.99988, 8.03906e-05, 0, 0, 0.99982, 8.97315e-05, 0, 0, 0.999741, 0.000103838, 0, 0, 0.999629, 0.00012496, 0, 0.000149024, 0.999474, 0.000156161, 0, 0.000861027, 0.999229, 0.000201034, 0, 0.00231198, 0.998662, 0.000259069, 0, 0.00458147, 0.995299, 0.000245439, 0, 0.00770895, 0.992732, 0.00024498, 0, 0.0117126, 0.990847, 0.000273211, 0, 0.0165989, 0.988911, 0.000316492, 0, 0.0223674, 0.98654, 0.00037161, 0, 0.0290135, 0.982636, 0.000410352, 0, 0.0365309, 0.977346, 0.000421756, 0, 0.0449117, 0.972909, 0.000475578, 0, 0.0541481, 0.966821, 0.000522482, 0, 0.0642326, 0.958686, 0.000545008, 0, 0.075158, 0.949754, 0.000589286, 0, 0.0869181, 0.939184, 0.000619995, 0, 0.0995074, 0.927505, 0.000654266, 0, 0.112922, 0.916606, 0.000682362, 0, 0.127157, 0.906707, 0.000704286, 0, 0.142212, 0.895937, 0.000725909, 0, 0.158085, 0.883913, 0.000743939, 0, 0.174776, 0.870642, 0.000755157, 0, 0.192287, 0.856241, 0.000764387, 0, 0.210619, 0.84069, 0.000771032, 0, 0.229775, 0.823728, 0.000765906, 0, 0.249761, 0.806481, 0.000767604, 0, 0.270582, 0.787924, 0.000754385, 0, 0.292243, 0.770588, 0.000749668, 0, 0.314753, 0.751991, 0.000731613, 0, 0.338118, 0.733407, 0.000717655, 0, 0.362347, 0.713688, 0.000700604, 0, 0.387447, 0.693595, 0.000678765, 0, 0.413424, 0.673426, 0.000657042, 0, 0.440284, 0.65359, 0.000635892, 0, 0.468027, 0.633576, 0.000611569, 0, 0.496645, 0.613144, 0.000586011, 0, 0.526122, 0.592711, 0.000563111, 0, 0.556417, 0.572722, 0.000537699, 0, 0.587451, 0.552762, 0.000512556, 0, 0.619048, 0.532985, 0.000489757, 0, 0.650794, 0.513219, 0.000464139, 0, 0.68254, 0.493992, 0.000442193, 0, 0.714286, 0.47509, 0.000418629, 0, 0.746032, 0.456287, 0.000397045, 0, 0.777778, 0.438152, 0.000375504, 0, 0.809524, 0.420294, 0.00035492, 0, 0.84127, 0.402749, 0.000335327, 0, 0.873016, 0.385879, 0.000316422, 0, 0.904762, 0.369352, 0.000298333, 0, 0.936508, 0.353301, 0.000281417, 0, 0.968254, 0.337781, 0.000265203, 0, 1, 1, 9.68267e-05, 0, 0, 1, 9.68284e-05, 0, 0, 1, 9.68556e-05, 0, 0, 0.999999, 9.69733e-05, 0, 0, 0.999997, 9.72913e-05, 0, 0, 0.999993, 9.79688e-05, 0, 0, 0.999984, 9.92239e-05, 0, 0, 0.999969, 0.000101356, 0, 0, 0.999946, 0.000104784, 0, 0, 0.999913, 0.000110111, 0, 0, 0.999868, 0.000118217, 0, 0, 0.999801, 0.000130396, 0, 0, 0.999712, 0.000148523, 0, 1.24907e-05, 0.999589, 0.000175233, 0, 0.000355405, 0.999416, 0.000213999, 0, 0.0013528, 0.999136, 0.000268529, 0, 0.00312557, 0.998367, 0.000333088, 0, 0.00573045, 0.994701, 0.000304757, 0, 0.00919397, 0.992497, 0.000318031, 0, 0.0135261, 0.990608, 0.000353863, 0, 0.0187278, 0.988715, 0.000409044, 0, 0.0247947, 0.986241, 0.000472967, 0, 0.0317196, 0.981696, 0.000495104, 0, 0.039494, 0.977097, 0.000532873, 0, 0.0481087, 0.972583, 0.000594447, 0, 0.0575549, 0.966142, 0.000636867, 0, 0.0678242, 0.95823, 0.000669899, 0, 0.0789089, 0.949677, 0.000719499, 0, 0.0908023, 0.939226, 0.000750584, 0, 0.103499, 0.927501, 0.000793183, 0, 0.116993, 0.915199, 0.00081995, 0, 0.131282, 0.90498, 0.000847654, 0, 0.146364, 0.894243, 0.000868929, 0, 0.162237, 0.882154, 0.000884278, 0, 0.178902, 0.869161, 0.000898108, 0, 0.196358, 0.854751, 0.000901254, 0, 0.21461, 0.839368, 0.00090679, 0, 0.23366, 0.822874, 0.000901541, 0, 0.253512, 0.805514, 0.000897297, 0, 0.274174, 0.78716, 0.000881856, 0, 0.29565, 0.769061, 0.000870032, 0, 0.31795, 0.751, 0.000851719, 0, 0.341081, 0.732614, 0.000830671, 0, 0.365053, 0.713171, 0.000806569, 0, 0.389874, 0.693472, 0.00078338, 0, 0.415553, 0.673528, 0.000756404, 0, 0.442098, 0.653397, 0.000726872, 0, 0.469512, 0.633781, 0.000700494, 0, 0.497794, 0.613877, 0.00067105, 0, 0.526935, 0.593506, 0.000640361, 0, 0.556908, 0.573667, 0.000613502, 0, 0.587657, 0.553932, 0.000583177, 0, 0.61906, 0.534345, 0.000554375, 0, 0.650794, 0.515042, 0.000527811, 0, 0.68254, 0.495674, 0.000499367, 0, 0.714286, 0.477132, 0.00047429, 0, 0.746032, 0.458609, 0.000447726, 0, 0.777778, 0.440354, 0.000424205, 0, 0.809524, 0.422765, 0.000399549, 0, 0.84127, 0.405472, 0.000378315, 0, 0.873016, 0.388482, 0.000355327, 0, 0.904762, 0.372191, 0.000336122, 0, 0.936508, 0.356099, 0.000315247, 0, 0.968254, 0.340737, 0.00029794, 0, 1, 1, 0.000143327, 0, 0, 1, 0.00014333, 0, 0, 1, 0.000143366, 0, 0, 0.999999, 0.000143524, 0, 0, 0.999996, 0.000143952, 0, 0, 0.999991, 0.000144862, 0, 0, 0.999981, 0.000146544, 0, 0, 0.999966, 0.000149391, 0, 0, 0.999941, 0.000153946, 0, 0, 0.999905, 0.000160971, 0, 0, 0.999852, 0.000171562, 0, 0, 0.99978, 0.00018729, 0, 0, 0.999681, 0.000210386, 0, 8.26239e-05, 0.999546, 0.000243906, 0, 0.000664807, 0.999352, 0.000291739, 0, 0.00196192, 0.999027, 0.000357419, 0, 0.00405941, 0.997886, 0.000422349, 0, 0.00699664, 0.99419, 0.000385008, 0, 0.0107896, 0.99214, 0.000409775, 0, 0.0154415, 0.990274, 0.000456418, 0, 0.0209488, 0.988455, 0.000527008, 0, 0.0273037, 0.985804, 0.000597685, 0, 0.0344969, 0.98103, 0.000613124, 0, 0.0425183, 0.976674, 0.000668321, 0, 0.0513575, 0.972021, 0.000736985, 0, 0.0610046, 0.965274, 0.000773789, 0, 0.0714508, 0.958046, 0.000830852, 0, 0.0826877, 0.949333, 0.000875766, 0, 0.0947085, 0.939135, 0.000917088, 0, 0.107507, 0.927119, 0.000952244, 0, 0.121078, 0.91469, 0.000990626, 0, 0.135419, 0.903006, 0.00101304, 0, 0.150526, 0.892368, 0.00103834, 0, 0.166399, 0.880231, 0.00105002, 0, 0.183038, 0.867432, 0.00106331, 0, 0.200443, 0.853208, 0.00106783, 0, 0.218618, 0.837956, 0.00106458, 0, 0.237566, 0.821772, 0.00105945, 0, 0.257291, 0.804328, 0.00104685, 0, 0.2778, 0.786465, 0.00103178, 0, 0.2991, 0.768004, 0.00101077, 0, 0.321199, 0.74972, 0.000985504, 0, 0.344106, 0.731682, 0.000962893, 0, 0.36783, 0.712813, 0.000932146, 0, 0.392383, 0.693139, 0.00089871, 0, 0.417774, 0.673566, 0.000869678, 0, 0.444013, 0.653483, 0.000835525, 0, 0.471107, 0.633891, 0.000799853, 0, 0.49906, 0.614433, 0.000766838, 0, 0.527869, 0.594586, 0.000732227, 0, 0.557517, 0.574769, 0.000696442, 0, 0.587966, 0.555149, 0.000663935, 0, 0.61913, 0.535898, 0.000629826, 0, 0.650794, 0.516753, 0.000596486, 0, 0.68254, 0.497816, 0.000567078, 0, 0.714286, 0.479034, 0.000534399, 0, 0.746032, 0.460975, 0.000507013, 0, 0.777778, 0.442935, 0.000477421, 0, 0.809524, 0.425263, 0.000451101, 0, 0.84127, 0.408248, 0.000424964, 0, 0.873016, 0.391339, 0.00039993, 0, 0.904762, 0.37513, 0.000377619, 0, 0.936508, 0.359172, 0.000354418, 0, 0.968254, 0.343876, 0.000334823, 0, 1, 1, 0.000209042, 0, 0, 1, 0.000209045, 0, 0, 1, 0.000209093, 0, 0, 0.999999, 0.000209304, 0, 0, 0.999996, 0.000209871, 0, 0, 0.999991, 0.000211078, 0, 0, 0.999979, 0.000213304, 0, 0, 0.999963, 0.000217061, 0, 0, 0.999933, 0.000223042, 0, 0, 0.999894, 0.000232206, 0, 0, 0.999837, 0.000245901, 0, 0, 0.999756, 0.000266023, 0, 1.02927e-06, 0.999648, 0.000295204, 0, 0.000233468, 0.999499, 0.000336958, 0, 0.00108237, 0.999283, 0.000395563, 0, 0.00268832, 0.998896, 0.000473785, 0, 0.00511138, 0.997006, 0.000520008, 0, 0.00837705, 0.993819, 0.000497261, 0, 0.0124928, 0.991632, 0.000523722, 0, 0.0174561, 0.989875, 0.000587258, 0, 0.0232596, 0.988109, 0.000676329, 0, 0.0298932, 0.985155, 0.000747701, 0, 0.0373453, 0.980479, 0.000768803, 0, 0.0456045, 0.976271, 0.000841054, 0, 0.0546593, 0.971347, 0.000911469, 0, 0.0644994, 0.964528, 0.000953057, 0, 0.0751152, 0.957632, 0.00102221, 0, 0.0864981, 0.948681, 0.00106122, 0, 0.0986407, 0.938716, 0.00111857, 0, 0.111537, 0.926629, 0.00114762, 0, 0.125182, 0.914025, 0.00118995, 0, 0.139571, 0.901026, 0.00121228, 0, 0.154703, 0.890358, 0.00123946, 0, 0.170576, 0.878283, 0.0012527, 0, 0.18719, 0.865459, 0.00125536, 0, 0.204547, 0.851407, 0.00126134, 0, 0.222648, 0.836276, 0.00124759, 0, 0.241498, 0.820436, 0.00124443, 0, 0.261101, 0.803253, 0.00122071, 0, 0.281465, 0.785562, 0.00120107, 0, 0.302595, 0.76718, 0.00117762, 0, 0.324501, 0.748551, 0.00114289, 0, 0.347192, 0.730564, 0.00110872, 0, 0.370679, 0.712253, 0.00107636, 0, 0.394973, 0.692867, 0.00103646, 0, 0.420085, 0.673695, 0.000996793, 0, 0.446027, 0.653912, 0.00095675, 0, 0.47281, 0.634129, 0.000916739, 0, 0.500441, 0.615004, 0.000874401, 0, 0.528921, 0.595587, 0.000833411, 0, 0.558244, 0.575965, 0.000794556, 0, 0.588384, 0.5566, 0.00075196, 0, 0.619281, 0.537428, 0.000716381, 0, 0.650795, 0.518623, 0.000676558, 0, 0.68254, 0.499964, 0.00064074, 0, 0.714286, 0.481356, 0.000605984, 0, 0.746032, 0.463279, 0.000570256, 0, 0.777778, 0.445673, 0.000540138, 0, 0.809524, 0.428032, 0.000507299, 0, 0.84127, 0.411112, 0.000479553, 0, 0.873016, 0.394444, 0.000450737, 0, 0.904762, 0.378247, 0.000424269, 0, 0.936508, 0.362415, 0.000399111, 0, 0.968254, 0.347103, 0.000375274, 0, 1, 1, 0.000300729, 0, 0, 1, 0.000300733, 0, 0, 1, 0.000300797, 0, 0, 0.999998, 0.000301072, 0, 0, 0.999996, 0.000301817, 0, 0, 0.999989, 0.000303398, 0, 0, 0.999977, 0.000306309, 0, 0, 0.999958, 0.000311209, 0, 0, 0.999927, 0.000318975, 0, 0, 0.999884, 0.000330804, 0, 0, 0.99982, 0.00034834, 0, 0, 0.999733, 0.000373854, 0, 3.26995e-05, 0.999613, 0.000410424, 0, 0.000477174, 0.999447, 0.000462047, 0, 0.00161099, 0.999204, 0.000533322, 0, 0.00353153, 0.998725, 0.000624964, 0, 0.00627965, 0.995871, 0.000631786, 0, 0.0098693, 0.993194, 0.000632017, 0, 0.0143011, 0.991541, 0.00068923, 0, 0.019568, 0.989773, 0.000766892, 0, 0.0256593, 0.987647, 0.000863668, 0, 0.0325625, 0.984193, 0.000922089, 0, 0.0402647, 0.980016, 0.000970749, 0, 0.0487532, 0.975859, 0.00106027, 0, 0.058016, 0.970514, 0.00112239, 0, 0.0680419, 0.963625, 0.00117212, 0, 0.0788208, 0.956959, 0.00125211, 0, 0.0903439, 0.947956, 0.00129411, 0, 0.102604, 0.93809, 0.00135879, 0, 0.115594, 0.92659, 0.00139309, 0, 0.129309, 0.913829, 0.00143253, 0, 0.143745, 0.90005, 0.00145809, 0, 0.158901, 0.888129, 0.0014748, 0, 0.174774, 0.87607, 0.00148756, 0, 0.191365, 0.863461, 0.00148714, 0, 0.208674, 0.849594, 0.00148892, 0, 0.226705, 0.834531, 0.00146496, 0, 0.245461, 0.81903, 0.0014579, 0, 0.264947, 0.802122, 0.00143039, 0, 0.28517, 0.78445, 0.00139717, 0, 0.306137, 0.766434, 0.00136312, 0, 0.327857, 0.747816, 0.00132597, 0, 0.350341, 0.729519, 0.00128323, 0, 0.373598, 0.711454, 0.00123803, 0, 0.397642, 0.692699, 0.00119097, 0, 0.422485, 0.673723, 0.00114565, 0, 0.448139, 0.654386, 0.00109552, 0, 0.474619, 0.634673, 0.00104553, 0, 0.501933, 0.615554, 0.00099985, 0, 0.530089, 0.596462, 0.000948207, 0, 0.559087, 0.577385, 0.000902299, 0, 0.588913, 0.558257, 0.000856448, 0, 0.619525, 0.5392, 0.000810395, 0, 0.650826, 0.520543, 0.000768558, 0, 0.68254, 0.502206, 0.0007239, 0, 0.714286, 0.48402, 0.000685794, 0, 0.746032, 0.465779, 0.00064471, 0, 0.777778, 0.448455, 0.000609583, 0, 0.809524, 0.431091, 0.00057227, 0, 0.84127, 0.414147, 0.00054042, 0, 0.873016, 0.39765, 0.000506545, 0, 0.904762, 0.381576, 0.000477635, 0, 0.936508, 0.365881, 0.000448446, 0, 0.968254, 0.350582, 0.000421424, 0, 1, 1, 0.000427144, 0, 0, 1, 0.000427151, 0, 0, 1, 0.000427232, 0, 0, 0.999998, 0.00042759, 0, 0, 0.999995, 0.000428555, 0, 0, 0.999988, 0.000430603, 0, 0, 0.999976, 0.000434368, 0, 0, 0.999952, 0.000440688, 0, 0, 0.999919, 0.000450667, 0, 0, 0.999871, 0.00046578, 0, 0, 0.999801, 0.000488024, 0, 0, 0.999704, 0.000520092, 0, 0.000129791, 0.999572, 0.000565553, 0, 0.000821056, 0.999389, 0.000628906, 0, 0.00225241, 0.999114, 0.000714911, 0, 0.00449109, 0.998488, 0.000819218, 0, 0.00756249, 0.995234, 0.00080415, 0, 0.0114716, 0.993021, 0.000830181, 0, 0.0162131, 0.991407, 0.000902645, 0, 0.021776, 0.989625, 0.000996934, 0, 0.0281471, 0.987064, 0.00109707, 0, 0.0353118, 0.983265, 0.00114353, 0, 0.0432562, 0.979535, 0.0012272, 0, 0.0519665, 0.975224, 0.00132642, 0, 0.0614298, 0.969574, 0.00138092, 0, 0.0716348, 0.963021, 0.00145896, 0, 0.0825709, 0.956046, 0.00152834, 0, 0.094229, 0.947136, 0.00158217, 0, 0.106602, 0.937313, 0.0016347, 0, 0.119682, 0.926073, 0.00168383, 0, 0.133465, 0.913121, 0.00171627, 0, 0.147947, 0.899165, 0.00174229, 0, 0.163125, 0.885891, 0.00176137, 0, 0.178998, 0.873783, 0.00176406, 0, 0.195566, 0.861331, 0.00176156, 0, 0.21283, 0.847569, 0.00175346, 0, 0.230793, 0.832785, 0.00172753, 0, 0.249459, 0.817442, 0.00170204, 0, 0.268832, 0.800613, 0.00166576, 0, 0.28892, 0.783597, 0.00162909, 0, 0.30973, 0.76571, 0.0015826, 0, 0.331271, 0.747021, 0.00153106, 0, 0.353554, 0.728593, 0.00148036, 0, 0.37659, 0.710661, 0.00142808, 0, 0.400391, 0.692426, 0.00136906, 0, 0.424973, 0.673623, 0.00131066, 0, 0.450347, 0.65494, 0.00125569, 0, 0.476531, 0.635448, 0.00119517, 0, 0.503535, 0.616221, 0.00113828, 0, 0.531372, 0.597531, 0.0010816, 0, 0.560047, 0.578795, 0.00102673, 0, 0.589554, 0.559892, 0.000970985, 0, 0.619869, 0.541307, 0.000919773, 0, 0.650923, 0.522608, 0.000868479, 0, 0.68254, 0.504484, 0.00082137, 0, 0.714286, 0.486603, 0.000772916, 0, 0.746032, 0.468802, 0.000730353, 0, 0.777778, 0.451172, 0.000684955, 0, 0.809524, 0.434348, 0.000647565, 0, 0.84127, 0.417445, 0.000605863, 0, 0.873016, 0.401077, 0.000571885, 0, 0.904762, 0.385039, 0.000536034, 0, 0.936508, 0.369483, 0.000504227, 0, 0.968254, 0.354272, 0.000473165, 0, 1, 1, 0.000599525, 0, 0, 1, 0.000599533, 0, 0, 1, 0.000599639, 0, 0, 0.999998, 0.000600097, 0, 0, 0.999994, 0.000601336, 0, 0, 0.999987, 0.000603958, 0, 0, 0.999972, 0.000608775, 0, 0, 0.999949, 0.000616842, 0, 0, 0.999912, 0.000629534, 0, 0, 0.999857, 0.000648658, 0, 0, 0.999781, 0.000676615, 0, 5.38873e-06, 0.999674, 0.000716574, 0, 0.000308602, 0.999528, 0.000772641, 0, 0.00127003, 0.999326, 0.000849806, 0, 0.00300783, 0.999009, 0.000952682, 0, 0.00556637, 0.998112, 0.00106394, 0, 0.00895889, 0.994496, 0.00102228, 0, 0.0131827, 0.992806, 0.00108586, 0, 0.0182277, 0.991211, 0.0011759, 0, 0.0240795, 0.989415, 0.00128955, 0, 0.030723, 0.986499, 0.00139038, 0, 0.0381418, 0.982679, 0.00144539, 0, 0.046321, 0.978839, 0.00153954, 0, 0.0552459, 0.974295, 0.00164417, 0, 0.0649034, 0.968784, 0.00171517, 0, 0.0752814, 0.962324, 0.00180282, 0, 0.0863693, 0.954956, 0.00186387, 0, 0.0981578, 0.94624, 0.00193817, 0, 0.110639, 0.936517, 0.00198156, 0, 0.123806, 0.925186, 0.00203042, 0, 0.137655, 0.91252, 0.0020664, 0, 0.15218, 0.898441, 0.00207822, 0, 0.16738, 0.884394, 0.0020992, 0, 0.183253, 0.871273, 0.00208748, 0, 0.199799, 0.859057, 0.00208686, 0, 0.21702, 0.845243, 0.00205519, 0, 0.234918, 0.830723, 0.00202868, 0, 0.253496, 0.815801, 0.00199501, 0, 0.272761, 0.79914, 0.00194193, 0, 0.292719, 0.782372, 0.00188824, 0, 0.313377, 0.76482, 0.00183695, 0, 0.334745, 0.746586, 0.00177418, 0, 0.356833, 0.7281, 0.00170628, 0, 0.379654, 0.709842, 0.00164063, 0, 0.403221, 0.692019, 0.00157355, 0, 0.427548, 0.67364, 0.00150262, 0, 0.452651, 0.655277, 0.00143473, 0, 0.478545, 0.636438, 0.00136371, 0, 0.505246, 0.617364, 0.00129911, 0, 0.532768, 0.598603, 0.00123014, 0, 0.561122, 0.580195, 0.00116587, 0, 0.590309, 0.561786, 0.00110398, 0, 0.620318, 0.543377, 0.00104148, 0, 0.651102, 0.525093, 0.000983984, 0, 0.682545, 0.506791, 0.00092667, 0, 0.714286, 0.489291, 0.000874326, 0, 0.746032, 0.471811, 0.000821734, 0, 0.777778, 0.454435, 0.000774698, 0, 0.809524, 0.437493, 0.000727302, 0, 0.84127, 0.420977, 0.000684039, 0, 0.873016, 0.404729, 0.00064373, 0, 0.904762, 0.388756, 0.00060285, 0, 0.936508, 0.373344, 0.00056765, 0, 0.968254, 0.358191, 0.000531929, 0, 1, 1, 0.000832169, 0, 0, 1, 0.000832178, 0, 0, 1, 0.00083231, 0, 0, 0.999998, 0.000832893, 0, 0, 0.999995, 0.000834465, 0, 0, 0.999985, 0.000837791, 0, 0, 0.999969, 0.000843893, 0, 0, 0.999944, 0.000854086, 0, 0, 0.999903, 0.000870071, 0, 0, 0.999843, 0.000894042, 0, 0, 0.999759, 0.000928865, 0, 5.31805e-05, 0.999643, 0.000978242, 0, 0.000579365, 0.99948, 0.00104684, 0, 0.00182774, 0.999255, 0.00114012, 0, 0.00387804, 0.998885, 0.00126188, 0, 0.00675709, 0.997405, 0.00135888, 0, 0.010468, 0.99424, 0.00133626, 0, 0.0150018, 0.992458, 0.00140905, 0, 0.0203443, 0.990929, 0.00152305, 0, 0.0264786, 0.989116, 0.00165882, 0, 0.0333875, 0.985624, 0.00174128, 0, 0.0410536, 0.982003, 0.00182108, 0, 0.0494609, 0.978336, 0.00194498, 0, 0.0585941, 0.973184, 0.00202708, 0, 0.0684396, 0.9678, 0.00212166, 0, 0.0789851, 0.961348, 0.00221366, 0, 0.0902199, 0.953841, 0.00228219, 0, 0.102134, 0.94534, 0.00235662, 0, 0.114721, 0.935552, 0.00240572, 0, 0.127972, 0.924064, 0.00244405, 0, 0.141884, 0.911827, 0.00247557, 0, 0.156451, 0.897731, 0.00248374, 0, 0.171672, 0.883409, 0.00249863, 0, 0.187545, 0.868625, 0.00246688, 0, 0.20407, 0.856529, 0.00246523, 0, 0.221249, 0.842999, 0.00242368, 0, 0.239083, 0.828505, 0.00237354, 0, 0.257578, 0.813825, 0.00232588, 0, 0.276738, 0.797813, 0.00226731, 0, 0.296569, 0.781097, 0.00219704, 0, 0.31708, 0.764038, 0.00212394, 0, 0.338281, 0.746067, 0.00204786, 0, 0.360181, 0.727687, 0.00196728, 0, 0.382794, 0.709571, 0.00188779, 0, 0.406133, 0.691503, 0.00180532, 0, 0.430213, 0.673673, 0.00171849, 0, 0.45505, 0.655732, 0.00164147, 0, 0.480662, 0.637399, 0.00155858, 0, 0.507065, 0.618616, 0.00147641, 0, 0.534278, 0.60005, 0.00140125, 0, 0.562313, 0.581713, 0.00132441, 0, 0.59118, 0.563546, 0.00125014, 0, 0.620875, 0.545605, 0.00118249, 0, 0.651373, 0.527559, 0.0011116, 0, 0.682593, 0.509764, 0.00104979, 0, 0.714286, 0.49193, 0.000985977, 0, 0.746032, 0.475011, 0.000928592, 0, 0.777778, 0.457878, 0.000873466, 0, 0.809524, 0.440979, 0.000819585, 0, 0.84127, 0.424613, 0.000772365, 0, 0.873016, 0.408549, 0.000722195, 0, 0.904762, 0.392771, 0.000680014, 0, 0.936508, 0.377317, 0.000636797, 0, 0.968254, 0.362352, 0.000598318, 0, 1, 1, 0.00114313, 0, 0, 1, 0.00114314, 0, 0, 0.999999, 0.00114331, 0, 0, 0.999998, 0.00114404, 0, 0, 0.999994, 0.00114601, 0, 0, 0.999984, 0.00115019, 0, 0, 0.999967, 0.00115784, 0, 0, 0.999937, 0.0011706, 0, 0, 0.999894, 0.00119054, 0, 0, 0.999828, 0.00122031, 0, 0, 0.999735, 0.00126331, 0, 0.000169263, 0.999606, 0.00132382, 0, 0.000949167, 0.999426, 0.0014071, 0, 0.00249668, 0.999173, 0.00151895, 0, 0.00486392, 0.99873, 0.00166102, 0, 0.00806323, 0.996243, 0.0017023, 0, 0.0120895, 0.993779, 0.00172782, 0, 0.0169288, 0.9919, 0.0018108, 0, 0.0225633, 0.990524, 0.00196028, 0, 0.028974, 0.98868, 0.00212014, 0, 0.036142, 0.984663, 0.00217598, 0, 0.044049, 0.981457, 0.00230563, 0, 0.0526781, 0.977608, 0.00243966, 0, 0.0620137, 0.972215, 0.00251336, 0, 0.0720418, 0.966798, 0.0026285, 0, 0.0827499, 0.960241, 0.00271409, 0, 0.0941271, 0.952489, 0.00278381, 0, 0.106164, 0.944127, 0.00285399, 0, 0.118852, 0.934282, 0.00290994, 0, 0.132185, 0.923271, 0.00294558, 0, 0.146157, 0.910803, 0.00296269, 0, 0.160766, 0.896705, 0.00296803, 0, 0.176007, 0.88238, 0.00296637, 0, 0.19188, 0.867116, 0.00293163, 0, 0.208385, 0.853636, 0.00289418, 0, 0.225523, 0.840469, 0.00284663, 0, 0.243296, 0.82639, 0.00278594, 0, 0.261709, 0.811759, 0.00271618, 0, 0.280767, 0.796113, 0.00263187, 0, 0.300476, 0.779518, 0.00254589, 0, 0.320845, 0.763142, 0.00246003, 0, 0.341883, 0.745464, 0.00236529, 0, 0.363601, 0.727491, 0.00226536, 0, 0.386011, 0.709414, 0.00216375, 0, 0.409128, 0.691396, 0.00207127, 0, 0.432967, 0.67368, 0.00197106, 0, 0.457545, 0.656049, 0.00187022, 0, 0.482881, 0.638188, 0.00177605, 0, 0.508992, 0.620177, 0.00168482, 0, 0.535899, 0.601506, 0.00158909, 0, 0.563619, 0.58362, 0.00150583, 0, 0.592165, 0.565496, 0.00141791, 0, 0.621544, 0.54789, 0.00133693, 0, 0.651743, 0.530323, 0.00126038, 0, 0.682709, 0.512795, 0.00118556, 0, 0.714286, 0.495199, 0.00111527, 0, 0.746032, 0.478101, 0.0010489, 0, 0.777778, 0.461511, 0.000984264, 0, 0.809524, 0.444879, 0.00092591, 0, 0.84127, 0.428424, 0.000866582, 0, 0.873016, 0.412495, 0.000814463, 0, 0.904762, 0.396975, 0.000764498, 0, 0.936508, 0.381614, 0.000715967, 0, 0.968254, 0.366732, 0.000672483, 0, 1, 1, 0.00155501, 0, 0, 1, 0.00155503, 0, 0, 1, 0.00155524, 0, 0, 0.999998, 0.00155615, 0, 0, 0.999994, 0.0015586, 0, 0, 0.999983, 0.00156379, 0, 0, 0.999963, 0.0015733, 0, 0, 0.999932, 0.00158911, 0, 0, 0.999882, 0.00161376, 0, 0, 0.99981, 0.00165041, 0, 1.00875e-05, 0.999708, 0.00170304, 0, 0.000367658, 0.999565, 0.00177658, 0, 0.0014234, 0.999368, 0.00187688, 0, 0.00327939, 0.999081, 0.00200989, 0, 0.00596629, 0.99852, 0.00217177, 0, 0.0094852, 0.99549, 0.0021745, 0, 0.013824, 0.993252, 0.00222357, 0, 0.0189642, 0.991727, 0.00235022, 0, 0.0248856, 0.989951, 0.00250561, 0, 0.0315669, 0.988029, 0.00268829, 0, 0.0389882, 0.984029, 0.0027496, 0, 0.0471302, 0.980683, 0.00289793, 0, 0.0559754, 0.976554, 0.00303315, 0, 0.0655081, 0.97139, 0.00313257, 0, 0.0757138, 0.965544, 0.00323656, 0, 0.08658, 0.95912, 0.00333432, 0, 0.0980954, 0.951183, 0.0034039, 0, 0.110251, 0.942974, 0.00347515, 0, 0.123038, 0.932642, 0.00350381, 0, 0.13645, 0.922158, 0.00354519, 0, 0.150482, 0.909404, 0.00353851, 0, 0.165129, 0.896071, 0.0035435, 0, 0.18039, 0.881206, 0.00349936, 0, 0.196263, 0.866077, 0.00347256, 0, 0.212748, 0.85093, 0.003415, 0, 0.229847, 0.837703, 0.00333367, 0, 0.247561, 0.823878, 0.003249, 0, 0.265895, 0.809449, 0.00316347, 0, 0.284854, 0.794379, 0.00306351, 0, 0.304445, 0.778138, 0.0029499, 0, 0.324675, 0.761997, 0.00284099, 0, 0.345555, 0.744938, 0.00272104, 0, 0.367095, 0.727212, 0.00260715, 0, 0.389309, 0.709549, 0.00248855, 0, 0.41221, 0.691704, 0.00236783, 0, 0.435814, 0.673689, 0.00225178, 0, 0.460138, 0.656453, 0.00213765, 0, 0.485203, 0.639128, 0.00202178, 0, 0.511028, 0.621512, 0.00191443, 0, 0.537634, 0.603598, 0.00180977, 0, 0.565041, 0.58559, 0.00170456, 0, 0.593268, 0.567852, 0.00160927, 0, 0.622327, 0.5503, 0.00151395, 0, 0.652217, 0.533033, 0.00142499, 0, 0.682907, 0.515942, 0.00133955, 0, 0.714296, 0.498814, 0.0012602, 0, 0.746032, 0.481595, 0.00118188, 0, 0.777778, 0.465117, 0.00111171, 0, 0.809524, 0.448865, 0.00104091, 0, 0.84127, 0.432711, 0.000976618, 0, 0.873016, 0.416822, 0.00091859, 0, 0.904762, 0.401272, 0.000857704, 0, 0.936508, 0.386226, 0.000807172, 0, 0.968254, 0.371321, 0.00075464, 0, 1, 1, 0.00209596, 0, 0, 1, 0.00209598, 0, 0, 1, 0.00209624, 0, 0, 0.999997, 0.00209736, 0, 0, 0.999991, 0.00210039, 0, 0, 0.999979, 0.00210678, 0, 0, 0.999959, 0.00211847, 0, 0, 0.999925, 0.0021379, 0, 0, 0.99987, 0.00216809, 0, 0, 0.999791, 0.00221281, 0, 6.81487e-05, 0.999677, 0.00227669, 0, 0.000658161, 0.999521, 0.00236533, 0, 0.00200635, 0.999301, 0.00248514, 0, 0.0041779, 0.998977, 0.00264185, 0, 0.00718648, 0.998191, 0.00281695, 0, 0.0110239, 0.994801, 0.00278518, 0, 0.015672, 0.993091, 0.00288774, 0, 0.0211091, 0.991571, 0.00303931, 0, 0.0273123, 0.9897, 0.00321643, 0, 0.034259, 0.987023, 0.00337332, 0, 0.0419282, 0.983289, 0.00346146, 0, 0.0502998, 0.979892, 0.00363704, 0, 0.0593562, 0.975111, 0.00373601, 0, 0.069081, 0.970351, 0.0038842, 0, 0.0794598, 0.964131, 0.00397053, 0, 0.0904798, 0.957747, 0.00408078, 0, 0.10213, 0.949536, 0.00413533, 0, 0.1144, 0.941372, 0.00420305, 0, 0.127284, 0.931049, 0.00422815, 0, 0.140772, 0.920647, 0.00425048, 0, 0.154862, 0.908033, 0.0042281, 0, 0.169548, 0.895028, 0.00422026, 0, 0.184828, 0.879968, 0.00415042, 0, 0.200701, 0.864875, 0.00408821, 0, 0.217167, 0.84918, 0.00400909, 0, 0.234227, 0.834934, 0.00391178, 0, 0.251884, 0.821397, 0.00380066, 0, 0.270141, 0.807135, 0.00367974, 0, 0.289004, 0.792363, 0.00355172, 0, 0.308479, 0.776661, 0.003411, 0, 0.328575, 0.760705, 0.00328123, 0, 0.349301, 0.744408, 0.00314003, 0, 0.370668, 0.726994, 0.0029906, 0, 0.392689, 0.709598, 0.00285034, 0, 0.415379, 0.692112, 0.00271179, 0, 0.438754, 0.674435, 0.00257185, 0, 0.46283, 0.65676, 0.00243425, 0, 0.48763, 0.639982, 0.00230351, 0, 0.513173, 0.622983, 0.0021777, 0, 0.539482, 0.605471, 0.00204991, 0, 0.566579, 0.58796, 0.00193759, 0, 0.594488, 0.570463, 0.00181976, 0, 0.623226, 0.553058, 0.00171497, 0, 0.6528, 0.535894, 0.00161109, 0, 0.683198, 0.519089, 0.00151394, 0, 0.714354, 0.502454, 0.00142122, 0, 0.746032, 0.485681, 0.00133488, 0, 0.777778, 0.468935, 0.00124975, 0, 0.809524, 0.452951, 0.00117309, 0, 0.84127, 0.437139, 0.00110155, 0, 0.873016, 0.421446, 0.00103124, 0, 0.904762, 0.405951, 0.000966387, 0, 0.936508, 0.391003, 0.000908119, 0, 0.968254, 0.376198, 0.000848057, 0, 1, 1, 0.00280076, 0, 0, 1, 0.00280078, 0, 0, 0.999999, 0.00280109, 0, 0, 0.999997, 0.00280246, 0, 0, 0.999992, 0.00280616, 0, 0, 0.999979, 0.00281396, 0, 0, 0.999956, 0.00282822, 0, 0, 0.999916, 0.00285186, 0, 0, 0.999857, 0.0028885, 0, 0, 0.999768, 0.00294259, 0, 0.000196026, 0.999645, 0.00301946, 0, 0.00104842, 0.99947, 0.00312541, 0, 0.00270199, 0.999229, 0.00326733, 0, 0.00519449, 0.998852, 0.00344992, 0, 0.00852602, 0.997558, 0.00361052, 0, 0.0126804, 0.994417, 0.0035898, 0, 0.017635, 0.992824, 0.00372393, 0, 0.023365, 0.991344, 0.00390695, 0, 0.0298456, 0.989337, 0.00410392, 0, 0.0370529, 0.985811, 0.00420987, 0, 0.0449651, 0.982772, 0.00437488, 0, 0.0535615, 0.979001, 0.00455069, 0, 0.0628243, 0.974102, 0.00464462, 0, 0.0727368, 0.969197, 0.00480577, 0, 0.0832844, 0.962759, 0.00487818, 0, 0.0944545, 0.956207, 0.00498176, 0, 0.106236, 0.947909, 0.00503392, 0, 0.118619, 0.939596, 0.00507474, 0, 0.131595, 0.929642, 0.00509798, 0, 0.145159, 0.918807, 0.00508476, 0, 0.159305, 0.906921, 0.00505634, 0, 0.174028, 0.893312, 0.00498845, 0, 0.189327, 0.878933, 0.0049133, 0, 0.2052, 0.863986, 0.0048259, 0, 0.221647, 0.847936, 0.00470848, 0, 0.23867, 0.832253, 0.00456889, 0, 0.25627, 0.818619, 0.00442726, 0, 0.274453, 0.804788, 0.00427677, 0, 0.293222, 0.790241, 0.00411906, 0, 0.312585, 0.775162, 0.00394833, 0, 0.33255, 0.759463, 0.00377366, 0, 0.353126, 0.743598, 0.00361026, 0, 0.374324, 0.72697, 0.00343627, 0, 0.396158, 0.709646, 0.00326422, 0, 0.418641, 0.69277, 0.00309717, 0, 0.44179, 0.675371, 0.0029356, 0, 0.465624, 0.657863, 0.00277712, 0, 0.490163, 0.640772, 0.00261738, 0, 0.515429, 0.624441, 0.0024737, 0, 0.541445, 0.607497, 0.00233125, 0, 0.568236, 0.590438, 0.00218994, 0, 0.595828, 0.573224, 0.0020664, 0, 0.624242, 0.556168, 0.00193526, 0, 0.653496, 0.539232, 0.00182463, 0, 0.683588, 0.522352, 0.00170735, 0, 0.714482, 0.506172, 0.00160555, 0, 0.746032, 0.489842, 0.00150451, 0, 0.777778, 0.473463, 0.00140938, 0, 0.809524, 0.457266, 0.00132568, 0, 0.84127, 0.441609, 0.0012376, 0, 0.873016, 0.426348, 0.00116265, 0, 0.904762, 0.411002, 0.00108935, 0, 0.936508, 0.396045, 0.00101946, 0, 0.968254, 0.381448, 0.000955665, 0, 1, 1, 0.0037121, 0, 0, 1, 0.00371213, 0, 0, 1, 0.00371251, 0, 0, 0.999997, 0.00371417, 0, 0, 0.99999, 0.00371863, 0, 0, 0.999977, 0.00372807, 0, 0, 0.99995, 0.00374529, 0, 0, 0.999908, 0.0037738, 0, 0, 0.999843, 0.00381789, 0, 1.23596e-05, 0.999745, 0.00388273, 0, 0.000407442, 0.999608, 0.00397443, 0, 0.0015447, 0.999415, 0.00409998, 0, 0.00351385, 0.999143, 0.00426662, 0, 0.0063316, 0.9987, 0.00447625, 0, 0.00998679, 0.996363, 0.00455323, 0, 0.0144569, 0.994021, 0.00461052, 0, 0.0197151, 0.992372, 0.00476359, 0, 0.0257344, 0.991007, 0.00499101, 0, 0.0324882, 0.988767, 0.0051972, 0, 0.0399517, 0.984872, 0.00528407, 0, 0.0481022, 0.982004, 0.00548926, 0, 0.0569191, 0.977714, 0.00564385, 0, 0.0663839, 0.973076, 0.0057693, 0, 0.0764801, 0.967565, 0.0058924, 0, 0.0871928, 0.961384, 0.00599629, 0, 0.0985095, 0.954435, 0.00605998, 0, 0.110419, 0.946303, 0.0061133, 0, 0.122912, 0.937662, 0.00612028, 0, 0.13598, 0.927867, 0.00612209, 0, 0.149617, 0.916475, 0.00604813, 0, 0.163817, 0.90541, 0.00603088, 0, 0.178577, 0.891591, 0.00592218, 0, 0.193894, 0.877573, 0.00578854, 0, 0.209767, 0.862511, 0.00566648, 0, 0.226196, 0.846861, 0.00551481, 0, 0.243182, 0.83068, 0.00533754, 0, 0.260728, 0.815725, 0.00515487, 0, 0.278837, 0.802321, 0.0049655, 0, 0.297515, 0.787826, 0.00475421, 0, 0.316768, 0.773454, 0.00456002, 0, 0.336605, 0.758224, 0.00434727, 0, 0.357034, 0.74265, 0.00414444, 0, 0.378067, 0.726729, 0.00393738, 0, 0.399717, 0.710155, 0.00373575, 0, 0.421998, 0.693312, 0.00353736, 0, 0.444928, 0.67653, 0.00334368, 0, 0.468523, 0.659444, 0.00315981, 0, 0.492806, 0.642051, 0.00297809, 0, 0.517798, 0.625758, 0.00280592, 0, 0.543525, 0.609615, 0.00264254, 0, 0.570012, 0.592919, 0.00248459, 0, 0.597288, 0.576298, 0.00233327, 0, 0.625379, 0.559489, 0.00219519, 0, 0.654307, 0.542891, 0.00205441, 0, 0.684084, 0.526255, 0.00193385, 0, 0.714693, 0.509853, 0.00180745, 0, 0.746044, 0.494131, 0.00169817, 0, 0.777778, 0.478114, 0.0015913, 0, 0.809524, 0.462274, 0.00148981, 0, 0.84127, 0.446412, 0.00139537, 0, 0.873016, 0.431274, 0.00130984, 0, 0.904762, 0.41635, 0.00122403, 0, 0.936508, 0.401476, 0.00114809, 0, 0.968254, 0.386993, 0.00107563, 0, 1, 1, 0.00488216, 0, 0, 1, 0.0048822, 0, 0, 1, 0.00488265, 0, 0, 0.999997, 0.00488463, 0, 0, 0.999988, 0.00488999, 0, 0, 0.999974, 0.00490129, 0, 0, 0.999946, 0.00492191, 0, 0, 0.999897, 0.00495598, 0, 0, 0.999825, 0.00500855, 0, 7.44791e-05, 0.999718, 0.00508559, 0, 0.000712744, 0.999565, 0.005194, 0, 0.00215249, 0.999352, 0.00534147, 0, 0.00444576, 0.999046, 0.00553523, 0, 0.00759218, 0.998492, 0.00577016, 0, 0.0115714, 0.995564, 0.00578487, 0, 0.0163557, 0.993339, 0.00586414, 0, 0.021915, 0.991834, 0.00606002, 0, 0.0282201, 0.990496, 0.00633312, 0, 0.0352433, 0.987826, 0.00651941, 0, 0.042959, 0.98383, 0.00660842, 0, 0.0513439, 0.98109, 0.00685523, 0, 0.0603772, 0.976131, 0.00695778, 0, 0.0700402, 0.971922, 0.00714236, 0, 0.0803163, 0.965901, 0.00721437, 0, 0.0911908, 0.959606, 0.00732017, 0, 0.102651, 0.952504, 0.00735788, 0, 0.114686, 0.944365, 0.00738493, 0, 0.127286, 0.935652, 0.00737969, 0, 0.140443, 0.925813, 0.00733612, 0, 0.154151, 0.914397, 0.00723094, 0, 0.168405, 0.903257, 0.00714002, 0, 0.183201, 0.890015, 0.00700149, 0, 0.198536, 0.876014, 0.00682813, 0, 0.214409, 0.861436, 0.00665567, 0, 0.23082, 0.845752, 0.00644526, 0, 0.24777, 0.829169, 0.00621635, 0, 0.265263, 0.813435, 0.00597789, 0, 0.283301, 0.799701, 0.00575694, 0, 0.301889, 0.785726, 0.00549866, 0, 0.321035, 0.77152, 0.0052503, 0, 0.340746, 0.75683, 0.00499619, 0, 0.361032, 0.741951, 0.0047543, 0, 0.381904, 0.726367, 0.0045084, 0, 0.403374, 0.710537, 0.00426784, 0, 0.425457, 0.693965, 0.00403487, 0, 0.448169, 0.677724, 0.0038075, 0, 0.47153, 0.66117, 0.00359431, 0, 0.495561, 0.644274, 0.00338354, 0, 0.520284, 0.627449, 0.00318163, 0, 0.545725, 0.611645, 0.00299672, 0, 0.571911, 0.595614, 0.00281016, 0, 0.598873, 0.579426, 0.00264252, 0, 0.62664, 0.563016, 0.00247509, 0, 0.655239, 0.546728, 0.00232647, 0, 0.684692, 0.530539, 0.00217803, 0, 0.714999, 0.514164, 0.00204216, 0, 0.746106, 0.498344, 0.00191403, 0, 0.777778, 0.482957, 0.00179203, 0, 0.809524, 0.467336, 0.00167695, 0, 0.84127, 0.451994, 0.00157567, 0, 0.873016, 0.436514, 0.00147113, 0, 0.904762, 0.42178, 0.00138034, 0, 0.936508, 0.407271, 0.00129219, 0, 0.968254, 0.392822, 0.0012098, 0, 1, 1, 0.00637427, 0, 0, 1, 0.00637431, 0, 0, 0.999999, 0.00637485, 0, 0, 0.999996, 0.00637721, 0, 0, 0.999987, 0.00638357, 0, 0, 0.999971, 0.006397, 0, 0, 0.999939, 0.00642142, 0, 0, 0.999888, 0.00646177, 0, 0, 0.999807, 0.00652387, 0, 0.000207916, 0.999689, 0.00661454, 0, 0.00112051, 0.99952, 0.00674155, 0, 0.00287719, 0.999283, 0.00691313, 0, 0.00550145, 0.998936, 0.00713598, 0, 0.00897928, 0.998165, 0.00738501, 0, 0.0132829, 0.994847, 0.00734388, 0, 0.01838, 0.993182, 0.00749991, 0, 0.0242381, 0.991665, 0.0077246, 0, 0.030826, 0.989708, 0.00797579, 0, 0.0381152, 0.986663, 0.00813011, 0, 0.0460794, 0.983288, 0.00830365, 0, 0.0546951, 0.980104, 0.00853496, 0, 0.0639411, 0.974855, 0.00861045, 0, 0.0737988, 0.97045, 0.00879133, 0, 0.0842516, 0.964509, 0.00886377, 0, 0.0952848, 0.957594, 0.00890346, 0, 0.106886, 0.950546, 0.00893289, 0, 0.119044, 0.942225, 0.00890074, 0, 0.131749, 0.933365, 0.00886826, 0, 0.144994, 0.923202, 0.0087316, 0, 0.158772, 0.912605, 0.00863082, 0, 0.173078, 0.901099, 0.00847403, 0, 0.187908, 0.888177, 0.00825838, 0, 0.203261, 0.873955, 0.00801834, 0, 0.219134, 0.860091, 0.00779026, 0, 0.235527, 0.84434, 0.00752478, 0, 0.252443, 0.828517, 0.00724074, 0, 0.269883, 0.81239, 0.00693769, 0, 0.287851, 0.79721, 0.00664817, 0, 0.306352, 0.783489, 0.00634763, 0, 0.325393, 0.769514, 0.00604221, 0, 0.344981, 0.755419, 0.00573568, 0, 0.365126, 0.741083, 0.00544359, 0, 0.385839, 0.726059, 0.00515515, 0, 0.407132, 0.710809, 0.00487139, 0, 0.42902, 0.695052, 0.00459846, 0, 0.45152, 0.678886, 0.00433412, 0, 0.474651, 0.663042, 0.00407981, 0, 0.498433, 0.646634, 0.00384264, 0, 0.52289, 0.630117, 0.00360897, 0, 0.548048, 0.613804, 0.00338863, 0, 0.573936, 0.598338, 0.00318486, 0, 0.600584, 0.582687, 0.00298377, 0, 0.628027, 0.566809, 0.00280082, 0, 0.656295, 0.550817, 0.00262255, 0, 0.685417, 0.534937, 0.00245835, 0, 0.715406, 0.519151, 0.00230574, 0, 0.74624, 0.503118, 0.0021549, 0, 0.777778, 0.487723, 0.00202008, 0, 0.809524, 0.472725, 0.00189355, 0, 0.84127, 0.457599, 0.00177108, 0, 0.873016, 0.442558, 0.00165843, 0, 0.904762, 0.427624, 0.00155494, 0, 0.936508, 0.413171, 0.00145273, 0, 0.968254, 0.399122, 0.00136454, 0, 1, 1, 0.00826496, 0, 0, 1, 0.00826499, 0, 0, 1, 0.00826564, 0, 0, 0.999996, 0.00826842, 0, 0, 0.999987, 0.00827589, 0, 0, 0.999967, 0.00829167, 0, 0, 0.999933, 0.00832037, 0, 0, 0.999876, 0.00836768, 0, 1.09338e-05, 0.999786, 0.00844031, 0, 0.000427145, 0.999655, 0.00854603, 0, 0.0016384, 0.999468, 0.00869337, 0, 0.00372392, 0.999203, 0.008891, 0, 0.00668513, 0.998803, 0.00914387, 0, 0.0104968, 0.99748, 0.00935838, 0, 0.015125, 0.994446, 0.00933309, 0, 0.0205338, 0.99292, 0.00953084, 0, 0.0266884, 0.991414, 0.0097893, 0, 0.0335565, 0.989049, 0.0100228, 0, 0.0411086, 0.98582, 0.0101664, 0, 0.0493181, 0.982441, 0.0103582, 0, 0.0581613, 0.978595, 0.0105292, 0, 0.0676169, 0.973495, 0.0106274, 0, 0.0776661, 0.968405, 0.0107261, 0, 0.0882926, 0.962717, 0.0108234, 0, 0.0994817, 0.955478, 0.0108102, 0, 0.111221, 0.948275, 0.0107914, 0, 0.123499, 0.940006, 0.0107161, 0, 0.136308, 0.930831, 0.0106309, 0, 0.149639, 0.920648, 0.0104083, 0, 0.163485, 0.910205, 0.0102312, 0, 0.177843, 0.898445, 0.0100051, 0, 0.192707, 0.885986, 0.00971928, 0, 0.208077, 0.872204, 0.00940747, 0, 0.22395, 0.858436, 0.0091085, 0, 0.240326, 0.843454, 0.00876595, 0, 0.257208, 0.827437, 0.00839794, 0, 0.274596, 0.811488, 0.00803692, 0, 0.292496, 0.796039, 0.00767352, 0, 0.310911, 0.781083, 0.0073097, 0, 0.329849, 0.767642, 0.00694032, 0, 0.349316, 0.753901, 0.00657476, 0, 0.369323, 0.740131, 0.00622699, 0, 0.38988, 0.725845, 0.0058838, 0, 0.410999, 0.710991, 0.00555586, 0, 0.432696, 0.696002, 0.00523089, 0, 0.454987, 0.680461, 0.00492494, 0, 0.47789, 0.664875, 0.00463464, 0, 0.501426, 0.649273, 0.00435422, 0, 0.52562, 0.63302, 0.0040875, 0, 0.550498, 0.61705, 0.00384075, 0, 0.576089, 0.601154, 0.00359557, 0, 0.602427, 0.586008, 0.00337636, 0, 0.629544, 0.570699, 0.00316019, 0, 0.657479, 0.555166, 0.00296033, 0, 0.686264, 0.539645, 0.00277552, 0, 0.715924, 0.524159, 0.00259499, 0, 0.746459, 0.508682, 0.00243257, 0, 0.777789, 0.493163, 0.00227851, 0, 0.809524, 0.478004, 0.00213083, 0, 0.84127, 0.46347, 0.00199502, 0, 0.873016, 0.448778, 0.00186967, 0, 0.904762, 0.434105, 0.00174732, 0, 0.936508, 0.419576, 0.00163861, 0, 0.968254, 0.405541, 0.00153341, 0, 1, 1, 0.0106462, 0, 0, 1, 0.0106462, 0, 0, 0.999999, 0.010647, 0, 0, 0.999995, 0.0106502, 0, 0, 0.999985, 0.0106589, 0, 0, 0.999964, 0.0106773, 0, 0, 0.999925, 0.0107106, 0, 0, 0.999861, 0.0107655, 0, 7.12986e-05, 0.999763, 0.0108497, 0, 0.000743959, 0.999616, 0.0109716, 0, 0.00227361, 0.999408, 0.0111408, 0, 0.0046983, 0.999112, 0.0113659, 0, 0.00800158, 0.998637, 0.0116475, 0, 0.0121493, 0.996223, 0.0117231, 0, 0.0171023, 0.994006, 0.0118064, 0, 0.0228218, 0.992444, 0.0120254, 0, 0.0292711, 0.991028, 0.0123314, 0, 0.036417, 0.98803, 0.0124954, 0, 0.0442295, 0.984816, 0.0126538, 0, 0.0526815, 0.981399, 0.0128537, 0, 0.0617492, 0.977085, 0.0129694, 0, 0.0714114, 0.972154, 0.013091, 0, 0.0816495, 0.966617, 0.0131166, 0, 0.0924472, 0.960628, 0.0131583, 0, 0.10379, 0.953295, 0.0131094, 0, 0.115665, 0.94575, 0.0129966, 0, 0.128062, 0.937654, 0.0128796, 0, 0.140972, 0.927716, 0.0126477, 0, 0.154387, 0.917932, 0.0123889, 0, 0.168301, 0.907719, 0.012131, 0, 0.182709, 0.89584, 0.0118013, 0, 0.197608, 0.883526, 0.0114145, 0, 0.212994, 0.870301, 0.0110075, 0, 0.228867, 0.856272, 0.0106019, 0, 0.245227, 0.842251, 0.0101938, 0, 0.262074, 0.826466, 0.00973254, 0, 0.279412, 0.810859, 0.0092846, 0, 0.297244, 0.795051, 0.00883304, 0, 0.315575, 0.780053, 0.00840272, 0, 0.334412, 0.76575, 0.00796438, 0, 0.35376, 0.752298, 0.00752526, 0, 0.373631, 0.739153, 0.00711486, 0, 0.394034, 0.725514, 0.00670361, 0, 0.414983, 0.711473, 0.00632656, 0, 0.436491, 0.696936, 0.00595206, 0, 0.458575, 0.682126, 0.00559191, 0, 0.481253, 0.667027, 0.00525362, 0, 0.504547, 0.651875, 0.00493805, 0, 0.528481, 0.636463, 0.00462848, 0, 0.553081, 0.620641, 0.00433936, 0, 0.578377, 0.604931, 0.00407, 0, 0.604404, 0.589549, 0.00380864, 0, 0.631197, 0.574712, 0.00357049, 0, 0.658795, 0.559775, 0.00334466, 0, 0.687238, 0.544514, 0.00312505, 0, 0.716559, 0.529555, 0.00293199, 0, 0.746776, 0.514402, 0.00274204, 0, 0.777849, 0.499302, 0.00256647, 0, 0.809524, 0.484114, 0.00239901, 0, 0.84127, 0.469308, 0.00225148, 0, 0.873016, 0.455133, 0.00210178, 0, 0.904762, 0.440939, 0.0019727, 0, 0.936508, 0.426627, 0.00184382, 0, 0.968254, 0.412509, 0.00172548, 0, 1, 1, 0.013628, 0, 0, 1, 0.0136281, 0, 0, 0.999999, 0.0136289, 0, 0, 0.999995, 0.0136327, 0, 0, 0.999983, 0.0136427, 0, 0, 0.99996, 0.0136638, 0, 0, 0.999917, 0.0137022, 0, 0, 0.999846, 0.0137652, 0, 0.000204597, 0.999736, 0.0138615, 0, 0.00116837, 0.999573, 0.0140007, 0, 0.00303325, 0.99934, 0.0141927, 0, 0.00580613, 0.999004, 0.0144457, 0, 0.00945626, 0.998407, 0.0147489, 0, 0.0139421, 0.995464, 0.014731, 0, 0.0192202, 0.993328, 0.0148283, 0, 0.0252495, 0.991799, 0.0150797, 0, 0.0319921, 0.990397, 0.0154316, 0, 0.0394138, 0.986835, 0.0155005, 0, 0.0474843, 0.983938, 0.0157308, 0, 0.0561763, 0.980154, 0.0158753, 0, 0.0654661, 0.975659, 0.0159581, 0, 0.0753326, 0.970171, 0.0159832, 0, 0.0857571, 0.964803, 0.0160084, 0, 0.0967236, 0.958366, 0.0159484, 0, 0.108218, 0.950613, 0.0158001, 0, 0.120227, 0.942874, 0.0155845, 0, 0.132741, 0.935005, 0.0154292, 0, 0.145751, 0.924991, 0.0150742, 0, 0.159249, 0.914814, 0.0146757, 0, 0.17323, 0.904743, 0.0143097, 0, 0.187687, 0.893216, 0.0138695, 0, 0.202619, 0.880769, 0.0133706, 0, 0.218021, 0.868136, 0.0128606, 0, 0.233894, 0.85469, 0.0123403, 0, 0.250238, 0.840593, 0.0118091, 0, 0.267052, 0.825808, 0.011253, 0, 0.284341, 0.81009, 0.0107099, 0, 0.302106, 0.79504, 0.0101636, 0, 0.320354, 0.779757, 0.00964041, 0, 0.33909, 0.764697, 0.00911896, 0, 0.358322, 0.750913, 0.00859533, 0, 0.378059, 0.738175, 0.00811592, 0, 0.398311, 0.725242, 0.00764504, 0, 0.41909, 0.711864, 0.00718885, 0, 0.440412, 0.698009, 0.00675843, 0, 0.462292, 0.683841, 0.00634984, 0, 0.484748, 0.669391, 0.00595502, 0, 0.507802, 0.654731, 0.00558671, 0, 0.531477, 0.639805, 0.00523578, 0, 0.555802, 0.624789, 0.00490834, 0, 0.580805, 0.609325, 0.00459448, 0, 0.606522, 0.593975, 0.00430342, 0, 0.63299, 0.578983, 0.00403019, 0, 0.66025, 0.564442, 0.0037707, 0, 0.688346, 0.549835, 0.0035316, 0, 0.717319, 0.535039, 0.00330255, 0, 0.7472, 0.520403, 0.00308932, 0, 0.777982, 0.505687, 0.00289335, 0, 0.809524, 0.490939, 0.00270818, 0, 0.84127, 0.476233, 0.0025343, 0, 0.873016, 0.461624, 0.00237097, 0, 0.904762, 0.447833, 0.00222065, 0, 0.936508, 0.433992, 0.00207561, 0, 0.968254, 0.420147, 0.00194955, 0, 1, 1, 0.0173415, 0, 0, 1, 0.0173416, 0, 0, 0.999999, 0.0173426, 0, 0, 0.999995, 0.0173468, 0, 0, 0.999983, 0.0173582, 0, 0, 0.999954, 0.0173822, 0, 0, 0.999908, 0.0174258, 0, 6.69501e-06, 0.999828, 0.0174973, 0, 0.000427399, 0.999705, 0.0176063, 0, 0.00171019, 0.999524, 0.0177631, 0, 0.0039248, 0.999263, 0.0179781, 0, 0.00705382, 0.998878, 0.018258, 0, 0.0110552, 0.998012, 0.0185551, 0, 0.0158812, 0.994614, 0.0184264, 0, 0.0214852, 0.993132, 0.0186385, 0, 0.0278239, 0.991563, 0.0189067, 0, 0.0348585, 0.989298, 0.0191577, 0, 0.0425544, 0.986036, 0.0192522, 0, 0.050881, 0.982558, 0.0194063, 0, 0.059811, 0.978531, 0.019486, 0, 0.0693209, 0.974198, 0.0195847, 0, 0.0793895, 0.968148, 0.0194749, 0, 0.0899984, 0.962565, 0.0194277, 0, 0.101132, 0.956041, 0.0192991, 0, 0.112775, 0.947749, 0.0189893, 0, 0.124917, 0.94018, 0.018704, 0, 0.137547, 0.93165, 0.0183458, 0, 0.150655, 0.921798, 0.0178775, 0, 0.164236, 0.911573, 0.0173618, 0, 0.178281, 0.901569, 0.0168482, 0, 0.192788, 0.890341, 0.016265, 0, 0.207752, 0.877835, 0.0156199, 0, 0.223171, 0.865472, 0.0149516, 0, 0.239044, 0.852905, 0.0143274, 0, 0.255371, 0.838906, 0.0136643, 0, 0.272153, 0.824888, 0.0129903, 0, 0.289393, 0.809977, 0.0123218, 0, 0.307093, 0.794697, 0.0116572, 0, 0.325259, 0.780028, 0.0110307, 0, 0.343896, 0.765124, 0.0104236, 0, 0.363012, 0.750411, 0.0098219, 0, 0.382617, 0.737264, 0.00924397, 0, 0.402719, 0.724799, 0.00868719, 0, 0.423332, 0.712253, 0.00816476, 0, 0.444469, 0.699267, 0.00767262, 0, 0.466146, 0.685618, 0.00719746, 0, 0.488383, 0.671736, 0.00673916, 0, 0.511199, 0.657777, 0.00631937, 0, 0.534618, 0.643497, 0.00592411, 0, 0.558668, 0.62889, 0.00553928, 0, 0.58338, 0.614299, 0.0051934, 0, 0.608787, 0.599197, 0.00485985, 0, 0.634929, 0.584175, 0.00454357, 0, 0.661849, 0.569541, 0.00425787, 0, 0.689594, 0.555193, 0.00397905, 0, 0.718211, 0.540947, 0.00372364, 0, 0.747742, 0.526593, 0.00348599, 0, 0.778205, 0.512335, 0.00326103, 0, 0.80953, 0.498017, 0.00305137, 0, 0.84127, 0.483609, 0.00285485, 0, 0.873016, 0.469368, 0.00267472, 0, 0.904762, 0.455037, 0.00249945, 0, 0.936508, 0.441493, 0.00234792, 0, 0.968254, 0.428147, 0.00219936, 0, 1, 1, 0.0219422, 0, 0, 1, 0.0219423, 0, 0, 0.999998, 0.0219434, 0, 0, 0.999993, 0.0219481, 0, 0, 0.999981, 0.021961, 0, 0, 0.999949, 0.0219879, 0, 0, 0.999896, 0.0220367, 0, 5.93194e-05, 0.999808, 0.0221167, 0, 0.00075364, 0.99967, 0.0222383, 0, 0.00237884, 0.999466, 0.0224125, 0, 0.00495612, 0.999174, 0.0226495, 0, 0.00844887, 0.998725, 0.0229525, 0, 0.0128058, 0.996979, 0.0231123, 0, 0.0179742, 0.994317, 0.0230742, 0, 0.0239047, 0.992781, 0.0232895, 0, 0.0305526, 0.991191, 0.0235734, 0, 0.0378786, 0.987787, 0.0236152, 0, 0.0458475, 0.985092, 0.0237994, 0, 0.0544287, 0.981121, 0.0238553, 0, 0.0635952, 0.976924, 0.0238706, 0, 0.0733233, 0.97218, 0.0238704, 0, 0.0835922, 0.965956, 0.0236598, 0, 0.0943839, 0.959998, 0.0234735, 0, 0.105682, 0.953245, 0.0232277, 0, 0.117474, 0.944445, 0.0226973, 0, 0.129747, 0.937087, 0.0223527, 0, 0.142491, 0.928341, 0.0218144, 0, 0.155697, 0.9184, 0.0211516, 0, 0.169358, 0.907959, 0.0204553, 0, 0.183469, 0.89808, 0.0197673, 0, 0.198024, 0.887047, 0.0189915, 0, 0.21302, 0.875221, 0.0182082, 0, 0.228455, 0.86269, 0.0173584, 0, 0.244329, 0.850735, 0.0165718, 0, 0.260639, 0.837545, 0.0157524, 0, 0.277389, 0.823639, 0.0149482, 0, 0.29458, 0.809699, 0.0141431, 0, 0.312216, 0.794797, 0.0133527, 0, 0.3303, 0.780578, 0.0126193, 0, 0.34884, 0.766019, 0.0118914, 0, 0.367842, 0.751447, 0.0111839, 0, 0.387315, 0.737275, 0.010514, 0, 0.40727, 0.724545, 0.00987277, 0, 0.427717, 0.712644, 0.00926569, 0, 0.448671, 0.700432, 0.00869029, 0, 0.470149, 0.687664, 0.00814691, 0, 0.492167, 0.674288, 0.00763012, 0, 0.514746, 0.660966, 0.00714437, 0, 0.537911, 0.647264, 0.00668457, 0, 0.561688, 0.633431, 0.00626581, 0, 0.586108, 0.619133, 0.00585593, 0, 0.611206, 0.604935, 0.00548188, 0, 0.637022, 0.590236, 0.00513288, 0, 0.663599, 0.575473, 0.0047906, 0, 0.690989, 0.561228, 0.00448895, 0, 0.719242, 0.547054, 0.00420233, 0, 0.748411, 0.533175, 0.00392869, 0, 0.778531, 0.519163, 0.00367445, 0, 0.809583, 0.505328, 0.00344097, 0, 0.84127, 0.491446, 0.00322003, 0, 0.873016, 0.477356, 0.00301283, 0, 0.904762, 0.46356, 0.00282592, 0, 0.936508, 0.449623, 0.00264956, 0, 0.968254, 0.436068, 0.00246956, 0, 1, 1, 0.0276135, 0, 0, 1, 0.0276136, 0, 0, 0.999998, 0.0276148, 0, 0, 0.999993, 0.0276201, 0, 0, 0.999976, 0.0276342, 0, 0, 0.999945, 0.027664, 0, 0, 0.999884, 0.0277179, 0, 0.00018679, 0.999784, 0.027806, 0, 0.00119607, 0.99963, 0.0279394, 0, 0.00318407, 0.999401, 0.0281295, 0, 0.00613601, 0.999066, 0.0283858, 0, 0.00999963, 0.998524, 0.0287027, 0, 0.0147164, 0.995702, 0.0286256, 0, 0.0202295, 0.993593, 0.0286733, 0, 0.0264876, 0.992067, 0.0288989, 0, 0.0334452, 0.990548, 0.0292135, 0, 0.0410621, 0.986775, 0.0291296, 0, 0.0493032, 0.984054, 0.0293099, 0, 0.0581381, 0.979481, 0.0291881, 0, 0.0675397, 0.975297, 0.0291598, 0, 0.0774848, 0.96981, 0.028954, 0, 0.0879528, 0.963524, 0.028628, 0, 0.0989258, 0.957398, 0.0283135, 0, 0.110388, 0.950088, 0.0278469, 0, 0.122327, 0.941538, 0.0271798, 0, 0.134729, 0.933332, 0.0265388, 0, 0.147587, 0.924392, 0.0257776, 0, 0.160889, 0.914581, 0.024916, 0, 0.174631, 0.904347, 0.0240242, 0, 0.188806, 0.894324, 0.0231229, 0, 0.203409, 0.883724, 0.022153, 0, 0.218437, 0.872207, 0.0211355, 0, 0.233888, 0.859927, 0.0201048, 0, 0.249761, 0.848373, 0.0191263, 0, 0.266056, 0.836023, 0.0181306, 0, 0.282774, 0.82289, 0.0171718, 0, 0.299917, 0.809324, 0.0162196, 0, 0.317488, 0.795361, 0.0152622, 0, 0.335493, 0.781253, 0.01439, 0, 0.353936, 0.767338, 0.013533, 0, 0.372825, 0.753156, 0.0127244, 0, 0.392168, 0.739122, 0.0119454, 0, 0.411976, 0.725358, 0.0112054, 0, 0.432259, 0.712949, 0.010487, 0, 0.453032, 0.701621, 0.00984032, 0, 0.47431, 0.689703, 0.00921495, 0, 0.496111, 0.677216, 0.00862492, 0, 0.518456, 0.664217, 0.00806882, 0, 0.541367, 0.65137, 0.00755922, 0, 0.564872, 0.638, 0.00705705, 0, 0.589001, 0.62453, 0.00661266, 0, 0.613789, 0.610601, 0.00618432, 0, 0.639277, 0.59676, 0.00578033, 0, 0.66551, 0.582433, 0.00540927, 0, 0.692539, 0.568026, 0.00506104, 0, 0.720422, 0.55414, 0.0047353, 0, 0.749216, 0.540178, 0.00442889, 0, 0.778974, 0.526513, 0.00414363, 0, 0.809711, 0.512954, 0.00388237, 0, 0.84127, 0.499403, 0.00362875, 0, 0.873016, 0.486026, 0.00340827, 0, 0.904762, 0.472345, 0.00318598, 0, 0.936508, 0.458828, 0.00297635, 0, 0.968254, 0.445379, 0.00279447, 0, 1, 1, 0.0345716, 0, 0, 1, 0.0345717, 0, 0, 0.999999, 0.034573, 0, 0, 0.999991, 0.0345787, 0, 0, 0.999974, 0.0345941, 0, 0, 0.999937, 0.0346263, 0, 1.88589e-06, 0.999869, 0.0346847, 0, 0.000409238, 0.999757, 0.0347798, 0, 0.0017674, 0.999582, 0.0349233, 0, 0.00413658, 0.999322, 0.0351265, 0, 0.00747408, 0.998939, 0.0353967, 0, 0.0117157, 0.998219, 0.0357018, 0, 0.0167966, 0.994974, 0.0354726, 0, 0.0226572, 0.993201, 0.0355621, 0, 0.0292445, 0.991573, 0.0357641, 0, 0.0365123, 0.989301, 0.0359252, 0, 0.0444203, 0.985712, 0.0358017, 0, 0.0529334, 0.982411, 0.0358353, 0, 0.0620214, 0.977827, 0.035617, 0, 0.0716574, 0.973278, 0.0354398, 0, 0.0818186, 0.967397, 0.0350483, 0, 0.0924846, 0.960696, 0.0344795, 0, 0.103638, 0.954349, 0.0339861, 0, 0.115263, 0.946066, 0.0331323, 0, 0.127348, 0.938012, 0.032359, 0, 0.13988, 0.929413, 0.0314413, 0, 0.152849, 0.920355, 0.0304103, 0, 0.166248, 0.910586, 0.0292785, 0, 0.18007, 0.900609, 0.0281391, 0, 0.194308, 0.890093, 0.0269103, 0, 0.208958, 0.880013, 0.0257269, 0, 0.224018, 0.869001, 0.0244671, 0, 0.239485, 0.85751, 0.0232252, 0, 0.255359, 0.84582, 0.0220117, 0, 0.271638, 0.834383, 0.0208274, 0, 0.288324, 0.822158, 0.0196628, 0, 0.305419, 0.809056, 0.0185306, 0, 0.322927, 0.795832, 0.0174174, 0, 0.340851, 0.782547, 0.0163758, 0, 0.359199, 0.7689, 0.015391, 0, 0.377975, 0.755526, 0.0144488, 0, 0.397189, 0.741681, 0.0135372, 0, 0.416851, 0.728178, 0.0126957, 0, 0.436971, 0.714642, 0.0118812, 0, 0.457564, 0.702756, 0.0111165, 0, 0.478644, 0.69175, 0.0104145, 0, 0.500229, 0.680159, 0.00974439, 0, 0.522339, 0.668073, 0.00911926, 0, 0.544997, 0.655405, 0.00851393, 0, 0.56823, 0.642921, 0.00797637, 0, 0.592068, 0.629993, 0.00745119, 0, 0.616546, 0.616828, 0.00696972, 0, 0.641705, 0.603305, 0.00652425, 0, 0.66759, 0.589833, 0.00610188, 0, 0.694255, 0.575945, 0.00570834, 0, 0.72176, 0.561745, 0.00533384, 0, 0.750168, 0.548277, 0.00500001, 0, 0.779545, 0.534467, 0.00467582, 0, 0.809933, 0.521032, 0.00438092, 0, 0.841272, 0.507877, 0.00410348, 0, 0.873016, 0.494654, 0.00383618, 0, 0.904762, 0.481592, 0.00358699, 0, 0.936508, 0.468509, 0.00337281, 0, 0.968254, 0.455293, 0.00316196, 0, 1, 1, 0.0430698, 0, 0, 1, 0.0430699, 0, 0, 0.999998, 0.0430713, 0, 0, 0.999991, 0.0430773, 0, 0, 0.99997, 0.0430936, 0, 0, 0.999928, 0.0431277, 0, 4.06396e-05, 0.999852, 0.0431893, 0, 0.000744376, 0.999724, 0.0432895, 0, 0.0024806, 0.999527, 0.0434397, 0, 0.00524779, 0.99923, 0.0436507, 0, 0.00898164, 0.998783, 0.0439255, 0, 0.0136083, 0.997507, 0.0441104, 0, 0.0190582, 0.994418, 0.0438225, 0, 0.0252694, 0.992864, 0.0439396, 0, 0.0321879, 0.991127, 0.0440962, 0, 0.039767, 0.987331, 0.0438408, 0, 0.0479667, 0.984819, 0.0438991, 0, 0.056752, 0.980384, 0.0435906, 0, 0.0660929, 0.975846, 0.0432543, 0, 0.075963, 0.970748, 0.0428293, 0, 0.0863398, 0.964303, 0.042153, 0, 0.0972035, 0.95772, 0.0414111, 0, 0.108537, 0.950747, 0.0405893, 0, 0.120325, 0.942533, 0.0394887, 0, 0.132554, 0.934045, 0.0383544, 0, 0.145215, 0.924942, 0.037057, 0, 0.158296, 0.915811, 0.0356993, 0, 0.17179, 0.90612, 0.0342401, 0, 0.185691, 0.896434, 0.0328078, 0, 0.199993, 0.886021, 0.031288, 0, 0.214691, 0.876081, 0.0297776, 0, 0.229782, 0.865608, 0.0282334, 0, 0.245265, 0.854924, 0.026749, 0, 0.261138, 0.843607, 0.02526, 0, 0.277401, 0.832456, 0.0238214, 0, 0.294056, 0.821342, 0.0224682, 0, 0.311104, 0.809303, 0.0211297, 0, 0.328548, 0.796468, 0.0198387, 0, 0.346394, 0.784046, 0.0186227, 0, 0.364645, 0.771262, 0.0174561, 0, 0.38331, 0.758118, 0.0163806, 0, 0.402396, 0.745075, 0.0153287, 0, 0.421912, 0.731926, 0.0143647, 0, 0.44187, 0.71863, 0.0134363, 0, 0.462283, 0.705414, 0.0125603, 0, 0.483165, 0.693792, 0.0117508, 0, 0.504535, 0.683108, 0.0110016, 0, 0.52641, 0.67183, 0.0102757, 0, 0.548816, 0.66015, 0.00962044, 0, 0.571776, 0.647907, 0.00898031, 0, 0.595323, 0.635734, 0.00840811, 0, 0.619489, 0.623208, 0.00786211, 0, 0.644317, 0.610438, 0.00734953, 0, 0.669852, 0.597345, 0.00687688, 0, 0.696148, 0.584138, 0.00643469, 0, 0.723267, 0.5707, 0.00602236, 0, 0.75128, 0.556966, 0.0056324, 0, 0.780258, 0.543607, 0.00528277, 0, 0.810268, 0.530213, 0.00493999, 0, 0.841311, 0.516912, 0.00462265, 0, 0.873016, 0.503916, 0.0043307, 0, 0.904762, 0.491146, 0.00406858, 0, 0.936508, 0.478439, 0.00381436, 0, 0.968254, 0.465834, 0.00358003, 0, 1, 1, 0.0534039, 0, 0, 1, 0.053404, 0, 0, 0.999998, 0.0534055, 0, 0, 0.999989, 0.0534116, 0, 0, 0.999968, 0.0534283, 0, 0, 0.999918, 0.0534633, 0, 0.000155895, 0.99983, 0.0535262, 0, 0.00120914, 0.999685, 0.0536281, 0, 0.00334944, 0.999461, 0.0537799, 0, 0.00653077, 0.999119, 0.0539902, 0, 0.0106718, 0.998582, 0.0542524, 0, 0.0156907, 0.995919, 0.0540318, 0, 0.0215147, 0.993735, 0.0538914, 0, 0.0280801, 0.992126, 0.0539557, 0, 0.0353323, 0.990266, 0.0540401, 0, 0.0432247, 0.986317, 0.0536064, 0, 0.0517172, 0.983213, 0.0534425, 0, 0.0607754, 0.978303, 0.0528622, 0, 0.0703698, 0.973665, 0.0523363, 0, 0.0804742, 0.968091, 0.0516165, 0, 0.0910667, 0.961026, 0.0505434, 0, 0.102128, 0.954333, 0.049523, 0, 0.113641, 0.946372, 0.0481698, 0, 0.125591, 0.938254, 0.0467674, 0, 0.137965, 0.929516, 0.0452341, 0, 0.150754, 0.920106, 0.0435083, 0, 0.163947, 0.910899, 0.0417399, 0, 0.177537, 0.901532, 0.0399389, 0, 0.191516, 0.891919, 0.0380901, 0, 0.205881, 0.882006, 0.0362341, 0, 0.220626, 0.871965, 0.0343444, 0, 0.235749, 0.862145, 0.0324832, 0, 0.251248, 0.852058, 0.0306681, 0, 0.267121, 0.84161, 0.0289097, 0, 0.283368, 0.830806, 0.0272079, 0, 0.299992, 0.820476, 0.0256089, 0, 0.316992, 0.809514, 0.0240394, 0, 0.334374, 0.797865, 0.0225379, 0, 0.35214, 0.785621, 0.0211235, 0, 0.370296, 0.773765, 0.0197908, 0, 0.388849, 0.761629, 0.0185235, 0, 0.407807, 0.748891, 0.0173358, 0, 0.427178, 0.736437, 0.0162305, 0, 0.446974, 0.723707, 0.0151778, 0, 0.467207, 0.710606, 0.0141791, 0, 0.487892, 0.698019, 0.0132592, 0, 0.509046, 0.686203, 0.0123887, 0, 0.530687, 0.675692, 0.0115976, 0, 0.552839, 0.664826, 0.0108325, 0, 0.575527, 0.65349, 0.0101348, 0, 0.59878, 0.641774, 0.00947756, 0, 0.622634, 0.629794, 0.00886058, 0, 0.647128, 0.617647, 0.00828526, 0, 0.672308, 0.60534, 0.00775312, 0, 0.698231, 0.592718, 0.00726033, 0, 0.724958, 0.579746, 0.00679731, 0, 0.752563, 0.566763, 0.00636111, 0, 0.781127, 0.553515, 0.00595228, 0, 0.810733, 0.540118, 0.00556876, 0, 0.841426, 0.527325, 0.00523051, 0, 0.873016, 0.514265, 0.00490712, 0, 0.904762, 0.501406, 0.00460297, 0, 0.936508, 0.488922, 0.00431247, 0, 0.968254, 0.476541, 0.0040472, 0, 1, 1, 0.0659184, 0, 0, 1, 0.0659185, 0, 0, 0.999998, 0.06592, 0, 0, 0.999988, 0.0659259, 0, 0, 0.999963, 0.0659423, 0, 0, 0.999907, 0.0659764, 0, 0.000374198, 0.999806, 0.0660376, 0, 0.00182071, 0.999639, 0.0661361, 0, 0.0043894, 0.999378, 0.0662814, 0, 0.00800055, 0.998985, 0.0664779, 0, 0.0125594, 0.998285, 0.0666914, 0, 0.0179786, 0.995071, 0.0661989, 0, 0.0241822, 0.993172, 0.0660454, 0, 0.031106, 0.991438, 0.0660105, 0, 0.0386952, 0.988428, 0.0656875, 0, 0.0469032, 0.985218, 0.0652913, 0, 0.0556905, 0.981128, 0.0647107, 0, 0.065023, 0.976015, 0.0638491, 0, 0.0748717, 0.97097, 0.062993, 0, 0.0852112, 0.964582, 0.0617927, 0, 0.0960199, 0.957383, 0.0603626, 0, 0.107279, 0.949969, 0.0588128, 0, 0.118971, 0.941843, 0.0570274, 0, 0.131084, 0.933624, 0.0551885, 0, 0.143604, 0.924543, 0.053122, 0, 0.156521, 0.914919, 0.0508897, 0, 0.169825, 0.905773, 0.0486418, 0, 0.18351, 0.896434, 0.0463364, 0, 0.197569, 0.887195, 0.0440623, 0, 0.211997, 0.877706, 0.0417799, 0, 0.226789, 0.867719, 0.03945, 0, 0.241944, 0.858587, 0.037243, 0, 0.257458, 0.849317, 0.0350956, 0, 0.273331, 0.839585, 0.0329852, 0, 0.289563, 0.829856, 0.0310028, 0, 0.306154, 0.819589, 0.0290953, 0, 0.323108, 0.809714, 0.0272738, 0, 0.340426, 0.79934, 0.0255631, 0, 0.358113, 0.788224, 0.0239175, 0, 0.376175, 0.776619, 0.0223831, 0, 0.394616, 0.76521, 0.0209298, 0, 0.413445, 0.753716, 0.0195786, 0, 0.432671, 0.741564, 0.0183001, 0, 0.452305, 0.729413, 0.0171259, 0, 0.472358, 0.717146, 0.0159933, 0, 0.492845, 0.70436, 0.0149495, 0, 0.513783, 0.69219, 0.0139681, 0, 0.535189, 0.680289, 0.0130577, 0, 0.557087, 0.669611, 0.0122198, 0, 0.5795, 0.659113, 0.0114174, 0, 0.602459, 0.648148, 0.0106729, 0, 0.625997, 0.636905, 0.00998997, 0, 0.650154, 0.625154, 0.00934313, 0, 0.674976, 0.613481, 0.00874839, 0, 0.700518, 0.60154, 0.00818265, 0, 0.726845, 0.58943, 0.00766889, 0, 0.754032, 0.576828, 0.00717153, 0, 0.782167, 0.564194, 0.00672696, 0, 0.811344, 0.551501, 0.00630863, 0, 0.841644, 0.538635, 0.00592177, 0, 0.873016, 0.525724, 0.00554888, 0, 0.904762, 0.513209, 0.00520225, 0, 0.936508, 0.500457, 0.00488231, 0, 0.968254, 0.48799, 0.00457153, 0, 1, 1, 0.0810131, 0, 0, 1, 0.0810133, 0, 0, 0.999997, 0.0810145, 0, 0, 0.999985, 0.08102, 0, 0, 0.999956, 0.0810347, 0, 1.95026e-05, 0.999893, 0.0810656, 0, 0.000719316, 0.999777, 0.0811205, 0, 0.00259774, 0.999583, 0.081208, 0, 0.00561807, 0.999281, 0.0813343, 0, 0.00967472, 0.998813, 0.0814969, 0, 0.0146627, 0.997597, 0.0815217, 0, 0.0204902, 0.994379, 0.0808502, 0, 0.0270802, 0.992744, 0.0806792, 0, 0.0343674, 0.990745, 0.0804589, 0, 0.0422974, 0.986646, 0.0796107, 0, 0.0508242, 0.983611, 0.0790913, 0, 0.0599087, 0.978869, 0.0780746, 0, 0.0695175, 0.973475, 0.0768218, 0, 0.0796223, 0.967845, 0.0754926, 0, 0.0901983, 0.960778, 0.0737063, 0, 0.101224, 0.953333, 0.0718052, 0, 0.112682, 0.945274, 0.0695946, 0, 0.124555, 0.936955, 0.0672492, 0, 0.136831, 0.928319, 0.0647732, 0, 0.149496, 0.919075, 0.0620947, 0, 0.162542, 0.909114, 0.0591816, 0, 0.175958, 0.900137, 0.0563917, 0, 0.189739, 0.891069, 0.0535392, 0, 0.203877, 0.882262, 0.0507642, 0, 0.218368, 0.873232, 0.0479793, 0, 0.233208, 0.864042, 0.045226, 0, 0.248393, 0.855002, 0.0425413, 0, 0.263923, 0.846569, 0.0400126, 0, 0.279796, 0.837714, 0.0375269, 0, 0.296012, 0.828918, 0.0352027, 0, 0.312573, 0.819783, 0.0330011, 0, 0.329479, 0.810129, 0.0308908, 0, 0.346734, 0.800866, 0.0289112, 0, 0.364342, 0.79093, 0.0270255, 0, 0.382307, 0.780593, 0.0252758, 0, 0.400637, 0.769511, 0.0236178, 0, 0.419337, 0.758558, 0.0220652, 0, 0.438418, 0.747632, 0.0206289, 0, 0.457889, 0.736146, 0.0192873, 0, 0.477761, 0.724093, 0.0180333, 0, 0.49805, 0.71234, 0.0168264, 0, 0.51877, 0.700201, 0.015746, 0, 0.53994, 0.687949, 0.0147027, 0, 0.561581, 0.676163, 0.0137512, 0, 0.583718, 0.665001, 0.0128655, 0, 0.60638, 0.65472, 0.0120366, 0, 0.629599, 0.644213, 0.0112604, 0, 0.653415, 0.633382, 0.0105413, 0, 0.677874, 0.62212, 0.00986498, 0, 0.70303, 0.610631, 0.00923308, 0, 0.728948, 0.599078, 0.00864206, 0, 0.755706, 0.587519, 0.00811784, 0, 0.783396, 0.575505, 0.00761237, 0, 0.812121, 0.563148, 0.00713949, 0, 0.841989, 0.550828, 0.00668379, 0, 0.873035, 0.538458, 0.00627715, 0, 0.904762, 0.525905, 0.00588336, 0, 0.936508, 0.513517, 0.00552687, 0, 0.968254, 0.501395, 0.00519681, 0, 1, 1, 0.0991506, 0, 0, 1, 0.0991504, 0, 0, 0.999996, 0.0991515, 0, 0, 0.999984, 0.0991558, 0, 0, 0.999947, 0.0991672, 0, 0.000114389, 0.999874, 0.0991912, 0, 0.00121503, 0.999739, 0.0992331, 0, 0.00356108, 0.999514, 0.0992983, 0, 0.00705578, 0.999159, 0.0993877, 0, 0.011574, 0.998586, 0.0994837, 0, 0.017003, 0.995731, 0.0988425, 0, 0.0232484, 0.993384, 0.098276, 0, 0.0302318, 0.991615, 0.0979269, 0, 0.0378884, 0.989029, 0.0973432, 0, 0.0461641, 0.985373, 0.0963539, 0, 0.0550136, 0.981278, 0.0952306, 0, 0.0643988, 0.975777, 0.0936233, 0, 0.0742868, 0.970526, 0.0920219, 0, 0.0846501, 0.963755, 0.0898912, 0, 0.0954644, 0.956676, 0.0876064, 0, 0.106709, 0.948099, 0.0847751, 0, 0.118367, 0.939718, 0.0818638, 0, 0.130423, 0.931305, 0.078857, 0, 0.142862, 0.922342, 0.0756127, 0, 0.155674, 0.912842, 0.0721473, 0, 0.168849, 0.903304, 0.0686195, 0, 0.182378, 0.89411, 0.0650589, 0, 0.196255, 0.885512, 0.0616022, 0, 0.210473, 0.877193, 0.0582434, 0, 0.225027, 0.86877, 0.0548979, 0, 0.239915, 0.860267, 0.0516095, 0, 0.255132, 0.851915, 0.048468, 0, 0.270678, 0.843912, 0.0454447, 0, 0.286551, 0.83604, 0.0425612, 0, 0.302751, 0.828245, 0.0398752, 0, 0.31928, 0.820159, 0.0373198, 0, 0.336138, 0.81167, 0.034916, 0, 0.35333, 0.802659, 0.0326402, 0, 0.370858, 0.793921, 0.0304901, 0, 0.388728, 0.784713, 0.0284857, 0, 0.406944, 0.774946, 0.0266186, 0, 0.425515, 0.76448, 0.0248593, 0, 0.444449, 0.753793, 0.0232114, 0, 0.463756, 0.743506, 0.0217039, 0, 0.483447, 0.732555, 0.0202841, 0, 0.503535, 0.720965, 0.0189648, 0, 0.524036, 0.709422, 0.0177189, 0, 0.544968, 0.697756, 0.0165626, 0, 0.56635, 0.685565, 0.015483, 0, 0.588208, 0.673987, 0.0144892, 0, 0.610569, 0.66244, 0.0135607, 0, 0.633466, 0.651675, 0.0126956, 0, 0.656936, 0.641598, 0.0118788, 0, 0.681025, 0.63121, 0.0111261, 0, 0.705788, 0.620514, 0.010437, 0, 0.731289, 0.609366, 0.00978747, 0, 0.757606, 0.598137, 0.00917257, 0, 0.784834, 0.586966, 0.00859778, 0, 0.813085, 0.575549, 0.00806803, 0, 0.842485, 0.563797, 0.00757294, 0, 0.87313, 0.551758, 0.00710592, 0, 0.904762, 0.539894, 0.0066841, 0, 0.936508, 0.527901, 0.00627901, 0, 0.968254, 0.515819, 0.00590506, 0, 1, 1, 0.120864, 0, 0, 1, 0.120864, 0, 0, 0.999996, 0.120864, 0, 0, 0.99998, 0.120867, 0, 0, 0.99994, 0.120872, 0, 0.000323781, 0.999852, 0.120884, 0, 0.00188693, 0.999693, 0.120903, 0, 0.00473489, 0.999426, 0.120929, 0, 0.00872704, 0.999002, 0.120955, 0, 0.0137237, 0.998235, 0.120918, 0, 0.0196068, 0.994608, 0.119764, 0, 0.0262803, 0.992997, 0.119265, 0, 0.0336657, 0.990968, 0.11863, 0, 0.0416987, 0.987002, 0.117261, 0, 0.0503261, 0.983524, 0.116009, 0, 0.0595035, 0.97875, 0.114252, 0, 0.0691935, 0.972652, 0.11193, 0, 0.0793645, 0.966613, 0.109555, 0, 0.0899894, 0.959275, 0.106612, 0, 0.101045, 0.951272, 0.103375, 0, 0.112512, 0.942323, 0.0996594, 0, 0.124372, 0.933679, 0.0958841, 0, 0.136611, 0.924822, 0.0919265, 0, 0.149216, 0.915742, 0.0878061, 0, 0.162176, 0.906348, 0.0834894, 0, 0.175482, 0.896883, 0.079085, 0, 0.189125, 0.88774, 0.0746745, 0, 0.203098, 0.87986, 0.0705773, 0, 0.217396, 0.871998, 0.0665005, 0, 0.232015, 0.864325, 0.0625413, 0, 0.24695, 0.856685, 0.0586781, 0, 0.2622, 0.84925, 0.0550063, 0, 0.277761, 0.841719, 0.0514727, 0, 0.293634, 0.834755, 0.0481398, 0, 0.309819, 0.827853, 0.0450172, 0, 0.326315, 0.820888, 0.0420969, 0, 0.343126, 0.813616, 0.0393702, 0, 0.360254, 0.805767, 0.0367771, 0, 0.377701, 0.797338, 0.0343274, 0, 0.395474, 0.789122, 0.0320529, 0, 0.413577, 0.780601, 0.0299485, 0, 0.432018, 0.771424, 0.0279812, 0, 0.450804, 0.761502, 0.0261054, 0, 0.469944, 0.751166, 0.0243942, 0, 0.489451, 0.741276, 0.0228087, 0, 0.509337, 0.730898, 0.0213265, 0, 0.529617, 0.719878, 0.0199307, 0, 0.550307, 0.708379, 0.0186574, 0, 0.571428, 0.697165, 0.0174446, 0, 0.593003, 0.685554, 0.0163144, 0, 0.615059, 0.673631, 0.015276, 0, 0.637628, 0.662385, 0.0143003, 0, 0.660746, 0.651059, 0.0134112, 0, 0.68446, 0.640451, 0.0125794, 0, 0.70882, 0.630536, 0.011793, 0, 0.733893, 0.620316, 0.0110547, 0, 0.759756, 0.609722, 0.0103668, 0, 0.786505, 0.598804, 0.00973009, 0, 0.814259, 0.587871, 0.00912812, 0, 0.843157, 0.577121, 0.00858916, 0, 0.87334, 0.566019, 0.00807333, 0, 0.904762, 0.554664, 0.00759687, 0, 0.936508, 0.543101, 0.00714759, 0, 0.968254, 0.531558, 0.00673418, 0, 1, 1, 0.146767, 0, 0, 1, 0.146767, 0, 0, 0.999997, 0.146767, 0, 0, 0.999977, 0.146765, 0, 3.20658e-06, 0.999929, 0.146762, 0, 0.000682576, 0.999823, 0.146753, 0, 0.00276402, 0.999633, 0.146735, 0, 0.00614771, 0.999314, 0.146699, 0, 0.0106613, 0.998796, 0.14662, 0, 0.0161546, 0.997124, 0.146107, 0, 0.0225063, 0.994062, 0.144857, 0, 0.0296198, 0.992154, 0.144011, 0, 0.037417, 0.989186, 0.142712, 0, 0.0458348, 0.985279, 0.140926, 0, 0.0548211, 0.980826, 0.13885, 0, 0.0643326, 0.975056, 0.136168, 0, 0.074333, 0.969005, 0.133217, 0, 0.0847917, 0.961554, 0.12959, 0, 0.0956828, 0.954206, 0.125886, 0, 0.106984, 0.945046, 0.121335, 0, 0.118675, 0.935678, 0.116492, 0, 0.130741, 0.926748, 0.111635, 0, 0.143166, 0.917764, 0.106625, 0, 0.155939, 0.908358, 0.101325, 0, 0.169049, 0.899219, 0.0960249, 0, 0.182487, 0.890089, 0.0906527, 0, 0.196245, 0.881488, 0.0853905, 0, 0.210317, 0.874031, 0.0804177, 0, 0.224697, 0.866932, 0.0756005, 0, 0.23938, 0.859976, 0.0709019, 0, 0.254364, 0.853375, 0.0664391, 0, 0.269646, 0.846971, 0.0622012, 0, 0.285223, 0.840483, 0.058129, 0, 0.301096, 0.833969, 0.0542762, 0, 0.317265, 0.82806, 0.0507042, 0, 0.333729, 0.822128, 0.047368, 0, 0.350491, 0.815989, 0.044272, 0, 0.367554, 0.809336, 0.0413444, 0, 0.38492, 0.802177, 0.038601, 0, 0.402594, 0.79441, 0.0360227, 0, 0.420582, 0.786573, 0.0336383, 0, 0.438891, 0.778619, 0.0314321, 0, 0.457527, 0.77, 0.029362, 0, 0.476499, 0.760698, 0.0274102, 0, 0.49582, 0.750932, 0.0256146, 0, 0.5155, 0.740993, 0.023974, 0, 0.535555, 0.731159, 0.0224182, 0, 0.556, 0.720836, 0.0209889, 0, 0.576855, 0.709913, 0.0196411, 0, 0.598143, 0.698415, 0.0183824, 0, 0.619888, 0.68745, 0.0172222, 0, 0.642123, 0.676154, 0.0161509, 0, 0.664883, 0.664383, 0.0151397, 0, 0.688211, 0.6533, 0.0141873, 0, 0.71216, 0.642072, 0.0133105, 0, 0.736792, 0.631412, 0.0124932, 0, 0.762186, 0.621622, 0.0117408, 0, 0.788439, 0.611681, 0.0110358, 0, 0.815672, 0.60142, 0.0103775, 0, 0.844034, 0.59083, 0.00975623, 0, 0.873699, 0.580254, 0.00918084, 0, 0.904765, 0.569841, 0.00864721, 0, 0.936508, 0.559224, 0.00815731, 0, 0.968254, 0.548315, 0.00767924, 0, 1, 1, 0.177563, 0, 0, 1, 0.177563, 0, 0, 0.999994, 0.177562, 0, 0, 0.999972, 0.177555, 0, 6.64171e-05, 0.999914, 0.177536, 0, 0.0012276, 0.999787, 0.177496, 0, 0.00388025, 0.999556, 0.17742, 0, 0.00783463, 0.999165, 0.177285, 0, 0.0128953, 0.9985, 0.177037, 0, 0.0189053, 0.995388, 0.175634, 0, 0.025742, 0.993102, 0.174375, 0, 0.033309, 0.990992, 0.173121, 0, 0.0415298, 0.986932, 0.170896, 0, 0.0503425, 0.982786, 0.16847, 0, 0.0596964, 0.977592, 0.165455, 0, 0.0695498, 0.971075, 0.161676, 0, 0.0798676, 0.963967, 0.157458, 0, 0.0906201, 0.956397, 0.152836, 0, 0.101783, 0.947489, 0.147467, 0, 0.113333, 0.937564, 0.14145, 0, 0.125254, 0.928182, 0.135383, 0, 0.137529, 0.919027, 0.129212, 0, 0.150144, 0.909618, 0.12276, 0, 0.163088, 0.900492, 0.116273, 0, 0.176351, 0.891671, 0.1098, 0, 0.189924, 0.883146, 0.103362, 0, 0.203799, 0.875151, 0.0970799, 0, 0.21797, 0.868338, 0.0911732, 0, 0.232433, 0.862033, 0.0854966, 0, 0.247182, 0.856107, 0.0800691, 0, 0.262216, 0.850644, 0.0749618, 0, 0.27753, 0.845261, 0.070079, 0, 0.293124, 0.839885, 0.0654321, 0, 0.308997, 0.834609, 0.0610975, 0, 0.325149, 0.829083, 0.0569741, 0, 0.341581, 0.82404, 0.0531736, 0, 0.358294, 0.818968, 0.049665, 0, 0.37529, 0.813496, 0.0463856, 0, 0.392573, 0.807533, 0.0433217, 0, 0.410148, 0.80099, 0.0404402, 0, 0.428019, 0.793891, 0.0377578, 0, 0.446192, 0.786281, 0.0352616, 0, 0.464676, 0.778773, 0.0329577, 0, 0.483478, 0.770737, 0.030808, 0, 0.502608, 0.762094, 0.0287964, 0, 0.522079, 0.752898, 0.0269254, 0, 0.541905, 0.743306, 0.0251926, 0, 0.5621, 0.733416, 0.023595, 0, 0.582684, 0.723742, 0.0221155, 0, 0.603677, 0.713542, 0.0207435, 0, 0.625106, 0.702755, 0.019434, 0, 0.646998, 0.691484, 0.0182046, 0, 0.66939, 0.680531, 0.0170771, 0, 0.692324, 0.66953, 0.0160339, 0, 0.715849, 0.658126, 0.0150677, 0, 0.740028, 0.646933, 0.0141551, 0, 0.764937, 0.636107, 0.0133179, 0, 0.790673, 0.625271, 0.0125284, 0, 0.817358, 0.615225, 0.0117937, 0, 0.84515, 0.605678, 0.0111181, 0, 0.874244, 0.59583, 0.0104759, 0, 0.904828, 0.585704, 0.00986672, 0, 0.936508, 0.575413, 0.00929712, 0, 0.968254, 0.565373, 0.00876713, 0, 1, 1, 0.214058, 0, 0, 0.999999, 0.214058, 0, 0, 0.999994, 0.214055, 0, 0, 0.999966, 0.214039, 0, 0.000259642, 0.999893, 0.213998, 0, 0.00200075, 0.999737, 0.21391, 0, 0.00527775, 0.999449, 0.213745, 0, 0.00983959, 0.99896, 0.213458, 0, 0.0154755, 0.9979, 0.212855, 0, 0.0220249, 0.994278, 0.210779, 0, 0.0293654, 0.992254, 0.20926, 0, 0.0374021, 0.98881, 0.206908, 0, 0.0460604, 0.984715, 0.204009, 0, 0.0552802, 0.979738, 0.200471, 0, 0.0650127, 0.972884, 0.195813, 0, 0.0752175, 0.965996, 0.190856, 0, 0.0858612, 0.957974, 0.185077, 0, 0.0969155, 0.949155, 0.17868, 0, 0.108356, 0.939288, 0.171513, 0, 0.120163, 0.928996, 0.163838, 0, 0.132319, 0.919563, 0.156246, 0, 0.144808, 0.910004, 0.148359, 0, 0.157618, 0.900791, 0.140417, 0, 0.170737, 0.892135, 0.132569, 0, 0.184155, 0.883803, 0.124741, 0, 0.197866, 0.876034, 0.117091, 0, 0.211861, 0.869219, 0.109835, 0, 0.226134, 0.863062, 0.102859, 0, 0.240682, 0.857795, 0.0962928, 0, 0.255499, 0.853009, 0.0900725, 0, 0.270583, 0.848603, 0.0842101, 0, 0.285931, 0.844335, 0.0786527, 0, 0.301542, 0.840208, 0.0734397, 0, 0.317415, 0.836035, 0.0685334, 0, 0.33355, 0.83172, 0.0639275, 0, 0.349948, 0.827135, 0.0595909, 0, 0.36661, 0.822797, 0.0556204, 0, 0.383539, 0.818387, 0.0519394, 0, 0.400738, 0.813565, 0.0485317, 0, 0.41821, 0.808142, 0.0453138, 0, 0.435961, 0.802212, 0.0423354, 0, 0.453997, 0.79573, 0.0395553, 0, 0.472324, 0.788741, 0.036988, 0, 0.490951, 0.781093, 0.0345688, 0, 0.509887, 0.773597, 0.0323297, 0, 0.529144, 0.765622, 0.0302719, 0, 0.548735, 0.757083, 0.0283477, 0, 0.568674, 0.747992, 0.0265562, 0, 0.588979, 0.738591, 0.0248844, 0, 0.609671, 0.728719, 0.0233342, 0, 0.630773, 0.719146, 0.0219081, 0, 0.652314, 0.709165, 0.0205711, 0, 0.674328, 0.69875, 0.0193248, 0, 0.696854, 0.687884, 0.0181582, 0, 0.719942, 0.676818, 0.0170746, 0, 0.743651, 0.666247, 0.0160718, 0, 0.768057, 0.655284, 0.0151262, 0, 0.793253, 0.64401, 0.0142561, 0, 0.819363, 0.633353, 0.0134327, 0, 0.846547, 0.622674, 0.012653, 0, 0.875017, 0.612265, 0.0119354, 0, 0.905021, 0.602455, 0.0112533, 0, 0.936508, 0.593147, 0.0106234, 0, 0.968254, 0.583592, 0.0100213, 0, 1, 1, 0.25717, 0, 0, 1, 0.25717, 0, 0, 0.999992, 0.257164, 0, 0, 0.999958, 0.257135, 0, 0.000641715, 0.999864, 0.25706, 0, 0.00305314, 0.999666, 0.256897, 0, 0.00700975, 0.999302, 0.256596, 0, 0.0122194, 0.998663, 0.25607, 0, 0.0184622, 0.995607, 0.254123, 0, 0.0255773, 0.993094, 0.252081, 0, 0.0334439, 0.9907, 0.249867, 0, 0.0419696, 0.98594, 0.246118, 0, 0.0510823, 0.981214, 0.242049, 0, 0.0607242, 0.974966, 0.236869, 0, 0.0708486, 0.967589, 0.230724, 0, 0.081417, 0.95915, 0.223635, 0, 0.0923974, 0.950257, 0.21596, 0, 0.103763, 0.940165, 0.207296, 0, 0.115491, 0.929396, 0.197901, 0, 0.127562, 0.919288, 0.188437, 0, 0.13996, 0.909428, 0.178762, 0, 0.15267, 0.900105, 0.169072, 0, 0.165679, 0.891418, 0.159478, 0, 0.178979, 0.883347, 0.15002, 0, 0.192558, 0.875992, 0.140813, 0, 0.20641, 0.869466, 0.13196, 0, 0.220529, 0.863699, 0.123501, 0, 0.234907, 0.858553, 0.115436, 0, 0.249542, 0.854379, 0.107901, 0, 0.264428, 0.850894, 0.10088, 0, 0.279564, 0.847632, 0.0942296, 0, 0.294947, 0.844571, 0.0879861, 0, 0.310575, 0.84163, 0.0821534, 0, 0.326448, 0.838542, 0.0766409, 0, 0.342566, 0.835412, 0.0715322, 0, 0.358929, 0.831899, 0.0666883, 0, 0.37554, 0.828177, 0.0622175, 0, 0.392399, 0.82416, 0.0580452, 0, 0.409511, 0.820393, 0.054267, 0, 0.426878, 0.816068, 0.0507172, 0, 0.444506, 0.811201, 0.0474041, 0, 0.4624, 0.805785, 0.0443174, 0, 0.480566, 0.799878, 0.0414562, 0, 0.499013, 0.793469, 0.0388147, 0, 0.517749, 0.786473, 0.0363453, 0, 0.536785, 0.778874, 0.0340225, 0, 0.556134, 0.771277, 0.0318599, 0, 0.575809, 0.763426, 0.0298859, 0, 0.595827, 0.755044, 0.0280357, 0, 0.616207, 0.746161, 0.0262979, 0, 0.636973, 0.737124, 0.0247295, 0, 0.65815, 0.72761, 0.0232514, 0, 0.679772, 0.717822, 0.0218755, 0, 0.701876, 0.708279, 0.0205942, 0, 0.724509, 0.698333, 0.0193947, 0, 0.74773, 0.68802, 0.0182717, 0, 0.771609, 0.677321, 0.0172044, 0, 0.79624, 0.666504, 0.0162122, 0, 0.821743, 0.656184, 0.0152924, 0, 0.84828, 0.64556, 0.0144326, 0, 0.876069, 0.634636, 0.0136157, 0, 0.905404, 0.624124, 0.0128612, 0, 0.936508, 0.613914, 0.0121435, 0, 0.968254, 0.603589, 0.0114887, 0, 1, 1, 0.307946, 0, 0, 0.999999, 0.307945, 0, 0, 0.999988, 0.307934, 0, 2.04479e-05, 0.999944, 0.307886, 0, 0.00127833, 0.999824, 0.307756, 0, 0.00445047, 0.999565, 0.30748, 0, 0.00914673, 0.999085, 0.306966, 0, 0.0150498, 0.998103, 0.306004, 0, 0.0219367, 0.994249, 0.303028, 0, 0.0296485, 0.991807, 0.300435, 0, 0.038068, 0.987773, 0.296554, 0, 0.0471062, 0.982673, 0.2916, 0, 0.0566942, 0.976623, 0.285641, 0, 0.0667768, 0.968757, 0.27815, 0, 0.0773099, 0.959849, 0.269529, 0, 0.088257, 0.950663, 0.260248, 0, 0.0995879, 0.940129, 0.249704, 0, 0.111277, 0.92895, 0.238291, 0, 0.123304, 0.917996, 0.226501, 0, 0.13565, 0.907813, 0.214669, 0, 0.148299, 0.898305, 0.202835, 0, 0.161237, 0.889626, 0.191158, 0, 0.174455, 0.88175, 0.179695, 0, 0.187941, 0.874715, 0.168548, 0, 0.201687, 0.868746, 0.15792, 0, 0.215687, 0.863703, 0.147807, 0, 0.229933, 0.859315, 0.138149, 0, 0.24442, 0.855538, 0.128993, 0, 0.259145, 0.852428, 0.120414, 0, 0.274103, 0.850168, 0.112498, 0, 0.289293, 0.848132, 0.105054, 0, 0.304711, 0.846291, 0.0981087, 0, 0.320357, 0.844431, 0.0915942, 0, 0.33623, 0.842493, 0.0855056, 0, 0.35233, 0.840368, 0.0798204, 0, 0.368658, 0.83798, 0.0745097, 0, 0.385214, 0.83523, 0.0695424, 0, 0.402002, 0.832091, 0.0649092, 0, 0.419023, 0.828667, 0.0606291, 0, 0.436282, 0.824805, 0.0566523, 0, 0.453782, 0.820988, 0.0530229, 0, 0.471529, 0.816635, 0.0496364, 0, 0.489528, 0.811725, 0.0464658, 0, 0.507788, 0.806316, 0.0435082, 0, 0.526317, 0.800469, 0.0407873, 0, 0.545124, 0.794107, 0.038255, 0, 0.564221, 0.787218, 0.0358825, 0, 0.583621, 0.779872, 0.0336785, 0, 0.603341, 0.772097, 0.0316379, 0, 0.623397, 0.764484, 0.0297379, 0, 0.643812, 0.756428, 0.0279581, 0, 0.664611, 0.748022, 0.0263153, 0, 0.685824, 0.739268, 0.0247799, 0, 0.707488, 0.73024, 0.0233385, 0, 0.729646, 0.720893, 0.0220035, 0, 0.752354, 0.71119, 0.0207555, 0, 0.77568, 0.701791, 0.0195843, 0, 0.799715, 0.692184, 0.0184891, 0, 0.824574, 0.682258, 0.0174541, 0, 0.850417, 0.67206, 0.0164873, 0, 0.877466, 0.661717, 0.0155959, 0, 0.90604, 0.651462, 0.0147519, 0, 0.936528, 0.641467, 0.0139727, 0, 0.968254, 0.631229, 0.0132363, 0, 1, 1, 0.367573, 0, 0, 0.999999, 0.367571, 0, 0, 0.999984, 0.367553, 0, 0.000183382, 0.999925, 0.367473, 0, 0.00225254, 0.999759, 0.367259, 0, 0.00628165, 0.99941, 0.366801, 0, 0.0117858, 0.998739, 0.365946, 0, 0.0184359, 0.995529, 0.363191, 0, 0.0260114, 0.992875, 0.360171, 0, 0.0343581, 0.989135, 0.355981, 0, 0.0433637, 0.984166, 0.350401, 0, 0.0529438, 0.977871, 0.343348, 0, 0.0630334, 0.96951, 0.334341, 0, 0.0735805, 0.959964, 0.323862, 0, 0.0845437, 0.950162, 0.312521, 0, 0.095889, 0.938882, 0.299577, 0, 0.107588, 0.926992, 0.285573, 0, 0.119617, 0.915589, 0.271212, 0, 0.131957, 0.904791, 0.256611, 0, 0.144591, 0.895177, 0.242224, 0, 0.157503, 0.886403, 0.227952, 0, 0.170682, 0.878957, 0.214192, 0, 0.184117, 0.872418, 0.200795, 0, 0.197799, 0.867029, 0.188015, 0, 0.21172, 0.862835, 0.175975, 0, 0.225873, 0.859411, 0.164526, 0, 0.240253, 0.856655, 0.153693, 0, 0.254854, 0.854519, 0.14352, 0, 0.269673, 0.852828, 0.13397, 0, 0.284707, 0.851412, 0.124984, 0, 0.299953, 0.850609, 0.116748, 0, 0.315408, 0.849855, 0.10905, 0, 0.331073, 0.849017, 0.101839, 0, 0.346946, 0.848079, 0.0951359, 0, 0.363028, 0.846911, 0.0888774, 0, 0.379318, 0.845445, 0.0830375, 0, 0.395818, 0.84362, 0.0775844, 0, 0.41253, 0.841411, 0.0725054, 0, 0.429457, 0.838768, 0.0677691, 0, 0.446602, 0.835801, 0.0634016, 0, 0.463968, 0.832341, 0.0593095, 0, 0.481561, 0.828424, 0.0555121, 0, 0.499386, 0.824312, 0.052024, 0, 0.51745, 0.819918, 0.0487865, 0, 0.535761, 0.815072, 0.0457801, 0, 0.554328, 0.809863, 0.0430184, 0, 0.573162, 0.804164, 0.0404245, 0, 0.592275, 0.798034, 0.0380146, 0, 0.611681, 0.791436, 0.0357436, 0, 0.631398, 0.784498, 0.0336475, 0, 0.651445, 0.777125, 0.0316666, 0, 0.671845, 0.769365, 0.0298122, 0, 0.692628, 0.761579, 0.0281001, 0, 0.713827, 0.753746, 0.0265049, 0, 0.735484, 0.745573, 0.0250067, 0, 0.75765, 0.737083, 0.0236026, 0, 0.78039, 0.728545, 0.0223302, 0, 0.803789, 0.719691, 0.0211243, 0, 0.82796, 0.710569, 0.0199983, 0, 0.853056, 0.701216, 0.0189569, 0, 0.879298, 0.692094, 0.0179702, 0, 0.907014, 0.682909, 0.0170418, 0, 0.936691, 0.673509, 0.0161732, 0, 0.968254, 0.663863, 0.0153406, 0, 1, 1, 0.437395, 0, 0, 0.999998, 0.437394, 0, 0, 0.99998, 0.437363, 0, 0.000616704, 0.999891, 0.437232, 0, 0.00367925, 0.999656, 0.436877, 0, 0.00867446, 0.999148, 0.436121, 0, 0.0150679, 0.997959, 0.434564, 0, 0.022531, 0.993464, 0.430134, 0, 0.0308507, 0.990606, 0.426077, 0, 0.0398805, 0.985027, 0.419397, 0, 0.0495148, 0.978491, 0.41118, 0, 0.0596749, 0.969643, 0.40048, 0, 0.0703001, 0.959189, 0.38769, 0, 0.0813427, 0.948223, 0.373575, 0, 0.0927641, 0.935955, 0.357622, 0, 0.104533, 0.923237, 0.34043, 0, 0.116624, 0.911074, 0.322735, 0, 0.129015, 0.899724, 0.30479, 0, 0.141687, 0.890189, 0.287392, 0, 0.154626, 0.881796, 0.270248, 0, 0.167818, 0.874781, 0.253659, 0, 0.181252, 0.869166, 0.237786, 0, 0.194918, 0.864725, 0.222618, 0, 0.208807, 0.861565, 0.208356, 0, 0.222913, 0.859284, 0.194867, 0, 0.237229, 0.857677, 0.18212, 0, 0.25175, 0.856714, 0.17018, 0, 0.266473, 0.856155, 0.158969, 0, 0.281392, 0.8558, 0.148413, 0, 0.296505, 0.855672, 0.138578, 0, 0.311811, 0.855538, 0.129345, 0, 0.327306, 0.855689, 0.120861, 0, 0.342991, 0.855767, 0.112969, 0, 0.358864, 0.855618, 0.105593, 0, 0.374925, 0.85525, 0.0987451, 0, 0.391176, 0.854583, 0.0923727, 0, 0.407616, 0.853534, 0.0864143, 0, 0.424249, 0.852061, 0.0808338, 0, 0.441076, 0.850253, 0.0756771, 0, 0.4581, 0.848004, 0.0708612, 0, 0.475324, 0.845333, 0.0663784, 0, 0.492754, 0.842376, 0.0622631, 0, 0.510394, 0.838956, 0.0584112, 0, 0.528251, 0.835121, 0.0548328, 0, 0.546331, 0.830842, 0.0514838, 0, 0.564644, 0.826212, 0.048355, 0, 0.583198, 0.821522, 0.0454714, 0, 0.602005, 0.816551, 0.0428263, 0, 0.621078, 0.811211, 0.0403612, 0, 0.640434, 0.805479, 0.038039, 0, 0.660089, 0.799409, 0.0358739, 0, 0.680066, 0.79306, 0.0338727, 0, 0.70039, 0.786395, 0.0319985, 0, 0.721094, 0.779416, 0.030241, 0, 0.742215, 0.77214, 0.0285951, 0, 0.7638, 0.764636, 0.0270747, 0, 0.785912, 0.756836, 0.0256354, 0, 0.808628, 0.749315, 0.0243027, 0, 0.832055, 0.741561, 0.0230497, 0, 0.856338, 0.733589, 0.0218801, 0, 0.88169, 0.725479, 0.020784, 0, 0.908441, 0.717255, 0.0197702, 0, 0.937125, 0.708829, 0.0188168, 0, 0.968254, 0.700191, 0.0179113, 0, 1, 1, 0.518937, 0, 0, 0.999998, 0.518933, 0, 0, 0.999967, 0.518883, 0, 0.00147741, 0.999832, 0.51866, 0, 0.00573221, 0.999466, 0.518057, 0, 0.011826, 0.998644, 0.516752, 0, 0.0192116, 0.994458, 0.512347, 0, 0.027573, 0.991223, 0.507675, 0, 0.0367099, 0.985515, 0.500188, 0, 0.046487, 0.978308, 0.490408, 0, 0.0568071, 0.968359, 0.477357, 0, 0.0675984, 0.95682, 0.461752, 0, 0.0788059, 0.943929, 0.443796, 0, 0.090386, 0.930224, 0.423893, 0, 0.102304, 0.916514, 0.402682, 0, 0.114532, 0.903653, 0.380914, 0, 0.127047, 0.892315, 0.359212, 0, 0.139828, 0.882942, 0.338102, 0, 0.152861, 0.875438, 0.31773, 0, 0.16613, 0.869642, 0.298186, 0, 0.179624, 0.865304, 0.279491, 0, 0.193332, 0.862382, 0.261804, 0, 0.207247, 0.860666, 0.245146, 0, 0.22136, 0.859788, 0.229406, 0, 0.235666, 0.859608, 0.214605, 0, 0.250158, 0.859912, 0.200691, 0, 0.264832, 0.86053, 0.187623, 0, 0.279684, 0.861368, 0.17539, 0, 0.294711, 0.862237, 0.163901, 0, 0.309911, 0.863127, 0.153175, 0, 0.32528, 0.863923, 0.143147, 0, 0.340819, 0.864567, 0.133781, 0, 0.356524, 0.865013, 0.125042, 0, 0.372397, 0.86539, 0.116952, 0, 0.388438, 0.865591, 0.109476, 0, 0.404645, 0.865517, 0.102542, 0, 0.421022, 0.865084, 0.0960688, 0, 0.437569, 0.864309, 0.0900499, 0, 0.454287, 0.863151, 0.0844328, 0, 0.471181, 0.861649, 0.0792218, 0, 0.488253, 0.859742, 0.0743482, 0, 0.505507, 0.857446, 0.0697963, 0, 0.522947, 0.854757, 0.0655364, 0, 0.54058, 0.851783, 0.061608, 0, 0.558412, 0.848516, 0.0579701, 0, 0.576449, 0.844897, 0.0545742, 0, 0.594701, 0.840956, 0.0514167, 0, 0.613178, 0.836676, 0.0484598, 0, 0.631892, 0.832075, 0.0456934, 0, 0.650856, 0.827191, 0.0431178, 0, 0.670088, 0.822295, 0.0407718, 0, 0.689606, 0.817294, 0.0386032, 0, 0.709434, 0.812013, 0.0365675, 0, 0.7296, 0.806465, 0.0346547, 0, 0.750138, 0.800691, 0.0328717, 0, 0.771093, 0.794709, 0.031211, 0, 0.792519, 0.788493, 0.0296504, 0, 0.814488, 0.782049, 0.0281782, 0, 0.837097, 0.775403, 0.0267965, 0, 0.860481, 0.76857, 0.0255002, 0, 0.884842, 0.761536, 0.0242759, 0, 0.910494, 0.754303, 0.0231142, 0, 0.937985, 0.74692, 0.0220305, 0, 0.968254, 0.739745, 0.0210192, 0, 1, 1, 0.613914, 0, 0, 0.999996, 0.613907, 0, 9.63597e-05, 0.999942, 0.613814, 0, 0.00301247, 0.999704, 0.613407, 0, 0.00870385, 0.999046, 0.612302, 0, 0.0160714, 0.995516, 0.608266, 0, 0.0245899, 0.991726, 0.602863, 0, 0.0339681, 0.985157, 0.593956, 0, 0.0440254, 0.97642, 0.581748, 0, 0.0546409, 0.964404, 0.565183, 0, 0.0657284, 0.950601, 0.545273, 0, 0.0772246, 0.935158, 0.522129, 0, 0.0890812, 0.919364, 0.496782, 0, 0.10126, 0.904754, 0.470571, 0, 0.113731, 0.89176, 0.444037, 0, 0.126469, 0.881492, 0.418322, 0, 0.139454, 0.873656, 0.393522, 0, 0.15267, 0.868053, 0.369795, 0, 0.166101, 0.864336, 0.347171, 0, 0.179736, 0.862259, 0.325737, 0, 0.193565, 0.861556, 0.305532, 0, 0.207578, 0.861776, 0.286416, 0, 0.221769, 0.862661, 0.268355, 0, 0.23613, 0.864015, 0.251334, 0, 0.250656, 0.865711, 0.235352, 0, 0.265343, 0.867519, 0.220302, 0, 0.280187, 0.869351, 0.206161, 0, 0.295183, 0.871144, 0.192908, 0, 0.31033, 0.872839, 0.180505, 0, 0.325624, 0.874307, 0.168848, 0, 0.341065, 0.875667, 0.158021, 0, 0.35665, 0.876758, 0.147877, 0, 0.37238, 0.87764, 0.138441, 0, 0.388253, 0.878237, 0.129627, 0, 0.404269, 0.878563, 0.121415, 0, 0.42043, 0.878572, 0.113741, 0, 0.436735, 0.87842, 0.106652, 0, 0.453187, 0.878057, 0.100097, 0, 0.469786, 0.877413, 0.0940128, 0, 0.486536, 0.87646, 0.0883462, 0, 0.503439, 0.875233, 0.0830924, 0, 0.520498, 0.8737, 0.0781975, 0, 0.537717, 0.871873, 0.07364, 0, 0.555102, 0.86978, 0.0694103, 0, 0.572657, 0.867405, 0.0654696, 0, 0.59039, 0.864751, 0.0617914, 0, 0.608307, 0.861818, 0.0583491, 0, 0.626419, 0.858645, 0.0551443, 0, 0.644733, 0.855307, 0.0521894, 0, 0.663264, 0.851736, 0.0494334, 0, 0.682025, 0.847927, 0.0468504, 0, 0.701032, 0.843888, 0.0444261, 0, 0.720308, 0.839629, 0.0421497, 0, 0.739875, 0.835158, 0.0400082, 0, 0.759764, 0.830509, 0.0380076, 0, 0.780014, 0.825714, 0.0361488, 0, 0.800673, 0.820729, 0.0343956, 0, 0.821803, 0.815751, 0.0327781, 0, 0.843492, 0.810752, 0.031275, 0, 0.86586, 0.805587, 0.0298542, 0, 0.889087, 0.800317, 0.0285397, 0, 0.913466, 0.79489, 0.0272948, 0, 0.93952, 0.789314, 0.0261139, 0, 0.96835, 0.783593, 0.0249938, 0, 1, 1, 0.724258, 0, 0, 0.999992, 0.724243, 0, 0.000726889, 0.99987, 0.724044, 0, 0.00569574, 0.999336, 0.72317, 0, 0.0131702, 0.996271, 0.719432, 0, 0.0220738, 0.991159, 0.712576, 0, 0.0319405, 0.982465, 0.700927, 0, 0.0425202, 0.97049, 0.684297, 0, 0.0536599, 0.953973, 0.661244, 0, 0.065258, 0.935546, 0.633804, 0, 0.0772427, 0.916596, 0.603071, 0, 0.0895616, 0.899353, 0.57105, 0, 0.102175, 0.885216, 0.539206, 0, 0.11505, 0.875076, 0.508714, 0, 0.128164, 0.868334, 0.479571, 0, 0.141495, 0.864414, 0.451796, 0, 0.155026, 0.862678, 0.425328, 0, 0.168745, 0.862835, 0.400352, 0, 0.182639, 0.864067, 0.376532, 0, 0.196699, 0.866086, 0.35391, 0, 0.210915, 0.868557, 0.332424, 0, 0.225282, 0.871271, 0.312053, 0, 0.239792, 0.874058, 0.292764, 0, 0.25444, 0.8768, 0.27453, 0, 0.269223, 0.87939, 0.257297, 0, 0.284135, 0.8819, 0.24114, 0, 0.299174, 0.884187, 0.225934, 0, 0.314337, 0.886262, 0.211669, 0, 0.329622, 0.888119, 0.198311, 0, 0.345026, 0.889709, 0.185783, 0, 0.360549, 0.891054, 0.174063, 0, 0.376189, 0.892196, 0.163143, 0, 0.391946, 0.893101, 0.152952, 0, 0.407819, 0.893803, 0.143475, 0, 0.423808, 0.894277, 0.134647, 0, 0.439914, 0.894532, 0.126434, 0, 0.456137, 0.894576, 0.1188, 0, 0.472479, 0.894393, 0.111694, 0, 0.48894, 0.893976, 0.105069, 0, 0.505523, 0.893346, 0.0989077, 0, 0.52223, 0.892502, 0.0931724, 0, 0.539064, 0.891441, 0.0878276, 0, 0.556028, 0.890276, 0.082903, 0, 0.573125, 0.888972, 0.0783505, 0, 0.590361, 0.887469, 0.0741083, 0, 0.607741, 0.885785, 0.0701633, 0, 0.62527, 0.883914, 0.0664835, 0, 0.642957, 0.881872, 0.0630567, 0, 0.660809, 0.879651, 0.0598527, 0, 0.678836, 0.877267, 0.0568615, 0, 0.69705, 0.874717, 0.05406, 0, 0.715465, 0.872012, 0.0514378, 0, 0.734098, 0.869157, 0.0489805, 0, 0.752968, 0.866155, 0.0466727, 0, 0.772101, 0.863014, 0.0445056, 0, 0.791529, 0.859748, 0.0424733, 0, 0.81129, 0.856416, 0.0405957, 0, 0.831438, 0.852958, 0.0388273, 0, 0.852044, 0.849382, 0.0371619, 0, 0.87321, 0.845694, 0.0355959, 0, 0.89509, 0.841893, 0.0341155, 0, 0.917932, 0.837981, 0.0327141, 0, 0.942204, 0.833963, 0.0313856, 0, 0.968981, 0.829847, 0.0301275, 0, 1, 1, 0.85214, 0, 0, 0.999969, 0.852095, 0, 0.00279627, 0.999483, 0.851408, 0, 0.0107635, 0.994545, 0.84579, 0, 0.0206454, 0.986188, 0.835231, 0, 0.0315756, 0.969847, 0.814687, 0, 0.0432021, 0.945951, 0.783735, 0, 0.0553396, 0.91917, 0.746074, 0, 0.0678766, 0.895488, 0.706938, 0, 0.0807395, 0.878232, 0.669534, 0, 0.0938767, 0.868252, 0.635168, 0, 0.10725, 0.863873, 0.603069, 0, 0.120832, 0.863369, 0.572514, 0, 0.134598, 0.86545, 0.543169, 0, 0.148533, 0.868803, 0.514578, 0, 0.16262, 0.872794, 0.486762, 0, 0.176849, 0.87702, 0.459811, 0, 0.19121, 0.881054, 0.433654, 0, 0.205694, 0.884974, 0.408574, 0, 0.220294, 0.888587, 0.384525, 0, 0.235005, 0.891877, 0.36156, 0, 0.24982, 0.894793, 0.339661, 0, 0.264737, 0.89743, 0.318913, 0, 0.279751, 0.899796, 0.299302, 0, 0.294859, 0.901943, 0.280843, 0, 0.310058, 0.903858, 0.263481, 0, 0.325346, 0.905574, 0.247197, 0, 0.340721, 0.907069, 0.231915, 0, 0.356181, 0.908379, 0.217614, 0, 0.371725, 0.90952, 0.20425, 0, 0.387353, 0.910483, 0.191758, 0, 0.403063, 0.91128, 0.180092, 0, 0.418854, 0.911936, 0.169222, 0, 0.434727, 0.912454, 0.159098, 0, 0.450682, 0.912835, 0.149668, 0, 0.466718, 0.913078, 0.140884, 0, 0.482837, 0.913192, 0.132709, 0, 0.499038, 0.913175, 0.125095, 0, 0.515324, 0.91304, 0.118012, 0, 0.531695, 0.912781, 0.111417, 0, 0.548153, 0.91241, 0.105281, 0, 0.5647, 0.911924, 0.0995691, 0, 0.581338, 0.911331, 0.0942531, 0, 0.59807, 0.910637, 0.0893076, 0, 0.6149, 0.90984, 0.0846998, 0, 0.63183, 0.908941, 0.0804044, 0, 0.648865, 0.907944, 0.0763984, 0, 0.666011, 0.906857, 0.0726638, 0, 0.683273, 0.90568, 0.0691783, 0, 0.700659, 0.904416, 0.0659222, 0, 0.718176, 0.903067, 0.0628782, 0, 0.735834, 0.901637, 0.0600307, 0, 0.753646, 0.900128, 0.0573647, 0, 0.771625, 0.898544, 0.0548668, 0, 0.78979, 0.89689, 0.052527, 0, 0.808162, 0.895165, 0.0503306, 0, 0.826771, 0.893371, 0.0482668, 0, 0.845654, 0.891572, 0.0463605, 0, 0.864863, 0.889763, 0.0445998, 0, 0.884472, 0.887894, 0.0429451, 0, 0.904592, 0.885967, 0.0413884, 0, 0.925407, 0.883984, 0.0399225, 0, 0.947271, 0.881945, 0.0385405, 0, 0.97105, 0.879854, 0.0372362, 0, 1, 0.999804, 0.995833, 0, 0, 0.938155, 0.933611, 0, 0.0158731, 0.864755, 0.854311, 0, 0.0317461, 0.888594, 0.865264, 0, 0.0476191, 0.905575, 0.863922, 0, 0.0634921, 0.915125, 0.850558, 0, 0.0793651, 0.920665, 0.829254, 0, 0.0952381, 0.924073, 0.802578, 0, 0.111111, 0.926304, 0.772211, 0, 0.126984, 0.927829, 0.739366, 0, 0.142857, 0.928924, 0.705033, 0, 0.15873, 0.92973, 0.670019, 0, 0.174603, 0.930339, 0.634993, 0, 0.190476, 0.930811, 0.600485, 0, 0.206349, 0.931191, 0.566897, 0, 0.222222, 0.93149, 0.534485, 0, 0.238095, 0.931737, 0.503429, 0, 0.253968, 0.931939, 0.473811, 0, 0.269841, 0.932108, 0.445668, 0, 0.285714, 0.93225, 0.418993, 0, 0.301587, 0.932371, 0.393762, 0, 0.31746, 0.932474, 0.369939, 0, 0.333333, 0.932562, 0.347479, 0, 0.349206, 0.932638, 0.326336, 0, 0.365079, 0.932703, 0.306462, 0, 0.380952, 0.93276, 0.287805, 0, 0.396825, 0.932809, 0.270313, 0, 0.412698, 0.932851, 0.253933, 0, 0.428571, 0.932887, 0.23861, 0, 0.444444, 0.932917, 0.224289, 0, 0.460317, 0.932943, 0.210917, 0, 0.47619, 0.932965, 0.19844, 0, 0.492063, 0.932982, 0.186807, 0, 0.507937, 0.932995, 0.175966, 0, 0.52381, 0.933005, 0.165869, 0, 0.539683, 0.933011, 0.156468, 0, 0.555556, 0.933013, 0.147719, 0, 0.571429, 0.933013, 0.139579, 0, 0.587302, 0.93301, 0.132007, 0, 0.603175, 0.933004, 0.124965, 0, 0.619048, 0.932994, 0.118416, 0, 0.634921, 0.932982, 0.112326, 0, 0.650794, 0.932968, 0.106663, 0, 0.666667, 0.93295, 0.101397, 0, 0.68254, 0.932931, 0.0964993, 0, 0.698413, 0.932908, 0.0919438, 0, 0.714286, 0.932883, 0.0877057, 0, 0.730159, 0.932856, 0.0837623, 0, 0.746032, 0.932827, 0.0800921, 0, 0.761905, 0.932796, 0.0766754, 0, 0.777778, 0.932762, 0.0734936, 0, 0.793651, 0.932727, 0.0705296, 0, 0.809524, 0.932689, 0.0677676, 0, 0.825397, 0.93265, 0.0651929, 0, 0.84127, 0.932609, 0.0627917, 0, 0.857143, 0.932565, 0.0605515, 0, 0.873016, 0.932521, 0.0584606, 0, 0.888889, 0.932474, 0.0565082, 0, 0.904762, 0.932427, 0.0546841, 0, 0.920635, 0.932377, 0.0529793, 0, 0.936508, 0.932326, 0.0513851, 0, 0.952381, 0.932274, 0.0498936, 0, 0.968254, 0.93222, 0.0484975, 0, 0.984127, 0.932164, 0.0471899, 0, 1 ];\n\n\t\t// data textures\n\n\t\tvar ltc_1 = new DataTexture( new Float32Array( LTC_MAT_1 ), 64, 64, RGBAFormat, FloatType, UVMapping, ClampToEdgeWrapping, ClampToEdgeWrapping, LinearFilter, NearestFilter, 1 );\n\t\tvar ltc_2 = new DataTexture( new Float32Array( LTC_MAT_2 ), 64, 64, RGBAFormat, FloatType, UVMapping, ClampToEdgeWrapping, ClampToEdgeWrapping, LinearFilter, NearestFilter, 1 );\n\n\t\tUniformsLib.LTC_1 = ltc_1;\n\t\tUniformsLib.LTC_2 = ltc_2;\n\n\t\t// add ltc data textures to material uniforms\n\n\t\tvar ltc = { ltc_1: { value: null }, ltc_2: { value: null } };\n\n\t\tObject.assign( ShaderLib.standard.uniforms, ltc );\n\t\tObject.assign( ShaderLib.physical.uniforms, ltc );\n\n\t}\n\n};\n\nexport { RectAreaLightUniformsLib };\n","import {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {DirectionalLightHelper} from './utils/helpers/DirectionalLightHelper';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\n// import {NodeContext} from '../../poly/NodeContext';\n// import {BaseObjNodeType} from './_Base';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {HelperController, HelperConstructor} from './utils/HelperController';\nimport {BaseLightTransformedObjNode} from './_BaseLightTransformed';\nimport {TransformedParamConfig} from './utils/TransformController';\n\nexport function DirectionalLightParamConfig<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\t// transform = ParamConfig.FOLDER();\n\t\t// directional\n\t\t// position = ParamConfig.VECTOR3([0, 1, 0]);\n\t\t// target = ParamConfig.VECTOR3([0, 0, 0]);\n\t\t// lookat = ParamConfig.OPERATOR_PATH('', {dependent_on_found_node: false});\n\n\t\tlight = ParamConfig.FOLDER();\n\t\tcolor = ParamConfig.COLOR([1, 1, 1]);\n\t\tintensity = ParamConfig.FLOAT(1);\n\t\tdistance = ParamConfig.FLOAT(100, {range: [0, 100]});\n\t\t// shadows\n\t\tcast_shadows = ParamConfig.BOOLEAN(1);\n\t\tshadow_res = ParamConfig.VECTOR2([1024, 1024]);\n\t\tshadow_bias = ParamConfig.FLOAT(0.001);\n\n\t\t// helper\n\t\tshow_helper = ParamConfig.BOOLEAN(1);\n\t\thelper_size = ParamConfig.FLOAT(1, {visible_if: {show_helper: 1}});\n\t};\n}\n\nclass DirectionalLightObjParamsConfig extends DirectionalLightParamConfig(TransformedParamConfig(NodeParamsConfig)) {}\nconst ParamsConfig = new DirectionalLightObjParamsConfig();\n\nexport class DirectionalLightObjNode extends BaseLightTransformedObjNode<\n\tDirectionalLight,\n\tDirectionalLightObjParamsConfig\n> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'directional_light';\n\t}\n\tprivate _target_target!: Object3D;\n\tprivate _helper_controller = new HelperController<DirectionalLight>(\n\t\tthis,\n\t\t(<unknown>DirectionalLightHelper) as HelperConstructor<DirectionalLight>,\n\t\t'DirectionalLightHelper'\n\t);\n\tinitialize_node() {\n\t\t// this.io.inputs.set_count(0, 1);\n\t\t// this.io.inputs.set_depends_on_inputs(false);\n\n\t\tthis._helper_controller.initialize_node();\n\t}\n\n\tcreate_light() {\n\t\tconst light = new DirectionalLight();\n\n\t\tlight.castShadow = true;\n\t\tlight.shadow.bias = -0.001;\n\t\tlight.shadow.mapSize.x = 1024;\n\t\tlight.shadow.mapSize.y = 1024;\n\t\tlight.shadow.camera.near = 0.1;\n\n\t\tthis._target_target = light.target;\n\t\tthis._target_target.name = 'DirectionalLight Default Target';\n\t\tthis.object.add(this._target_target);\n\n\t\treturn light;\n\t}\n\t// add_object_to_parent(parent: Object3D) {\n\t// \tsuper.add_object_to_parent(parent);\n\t// \tparent.add(this._target_target);\n\t// }\n\t// remove_object_from_parent() {\n\t// \tsuper.remove_object_from_parent();\n\t// \tconst parent = this._target_target.parent;\n\t// \tif (parent) {\n\t// \t\tparent.remove(this._target_target);\n\t// \t}\n\t// }\n\n\tupdate_light_params() {\n\t\t// this.light.position.copy(this.pv.t);\n\t\tthis.light.color = this.pv.color;\n\t\tthis.light.intensity = this.pv.intensity;\n\t\tthis.light.shadow.camera.far = this.pv.distance;\n\n\t\tthis._helper_controller.update();\n\t}\n\tupdate_shadow_params() {\n\t\tthis.light.castShadow = this.pv.cast_shadows;\n\t\tthis.light.shadow.mapSize.copy(this.pv.shadow_res);\n\t\t// object.shadow.camera.near = this.pv.shadow_near\n\t\t// object.shadow.camera.far = this.pv.shadow_far\n\t\tthis.light.shadow.bias = this.pv.shadow_bias;\n\n\t\t// updating the camera matrix is not necessary for point light\n\t\t// so probably should not for this\n\t\tthis.light.shadow.camera.updateProjectionMatrix();\n\t}\n}\n","// import {Object3D} from 'three/src/core/Object3D';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {DirectionalLightObjNode} from '../../DirectionalLight';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {BaseLightHelper} from './_BaseLightHelper';\nimport {Line} from 'three/src/objects/Line';\n\nexport class DirectionalLightHelper extends BaseLightHelper<DirectionalLight, DirectionalLightObjNode> {\n\tprivate _square = new Line();\n\tprivate _line_material = new LineBasicMaterial({fog: false});\n\tprotected build_helper() {\n\t\tconst geometry = new BufferGeometry();\n\t\tconst size = 1;\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew Float32BufferAttribute(\n\t\t\t\t[-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0],\n\t\t\t\t3\n\t\t\t)\n\t\t);\n\n\t\tthis._square.geometry = geometry;\n\t\tthis._square.material = this._line_material;\n\t\tthis._square.rotateX(Math.PI * 0.5);\n\n\t\tthis.object.add(this._square);\n\t}\n\n\t// private _v1 = new Vector3();\n\t// private _v2 = new Vector3();\n\t// private _v3 = new Vector3();\n\tupdate() {\n\t\t// this._v1.copy(this.node.light.position);\n\t\t// this._v2.copy(this.node.light.target.position);\n\t\t// this._v3.subVectors(this._v2, this._v1);\n\n\t\t// this._object.position.copy(this.node.pv.position).multiplyScalar(-1);\n\t\t// this._quat.setFromUnitVectors(this._default_position, this.node.pv.position);\n\t\t// this._object.setRotationFromQuaternion(this._quat);\n\t\tthis._object.scale.setScalar(this.node.pv.helper_size);\n\n\t\tthis._line_material.color.copy(this.node.light.color);\n\t}\n}\n","import {HemisphereLight} from 'three/src/lights/HemisphereLight';\nimport {HemisphereLightHelper} from './utils/helpers/HemisphereLightHelper';\nimport {TypedLightObjNode} from './_BaseLight';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {HelperController, HelperConstructor} from './utils/HelperController';\nclass HemisphereLightObjParamsConfig extends NodeParamsConfig {\n\tsky_color = ParamConfig.COLOR([0.2, 0.7, 1]);\n\tground_color = ParamConfig.COLOR([0.1, 0.1, 0.25]);\n\tintensity = ParamConfig.FLOAT(1);\n\tposition = ParamConfig.VECTOR3([0, 1, 0]);\n\tshow_helper = ParamConfig.BOOLEAN(1);\n\thelper_size = ParamConfig.FLOAT(1, {visible_if: {show_helper: 1}});\n}\nconst ParamsConfig = new HemisphereLightObjParamsConfig();\n\nexport class HemisphereLightObjNode extends TypedLightObjNode<HemisphereLight, HemisphereLightObjParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'hemisphere_light';\n\t}\n\tprivate _helper_controller = new HelperController<HemisphereLight>(\n\t\tthis,\n\t\t(<unknown>HemisphereLightHelper) as HelperConstructor<HemisphereLight>,\n\t\t'HemisphereLightHelper'\n\t);\n\n\tcreate_light() {\n\t\tconst light = new HemisphereLight();\n\n\t\treturn light;\n\t}\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t\tthis._helper_controller.initialize_node();\n\t}\n\n\tupdate_light_params() {\n\t\tthis.light.color = this.pv.sky_color;\n\t\tthis.light.groundColor = this.pv.ground_color;\n\t\tthis.light.position.copy(this.pv.position);\n\t\tthis.light.intensity = this.pv.intensity;\n\n\t\tthis._helper_controller.update();\n\t}\n}\n","import {Color} from 'three/src/math/Color';\nimport {OctahedronBufferGeometry} from 'three/src/geometries/OctahedronGeometry';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\n\nimport {HemisphereLightObjNode} from '../../HemisphereLight';\nimport {Quaternion} from 'three/src/math/Quaternion';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {BaseLightHelper} from './_BaseLightHelper';\nimport {HemisphereLight} from 'three/src/lights/HemisphereLight';\n\nexport class HemisphereLightHelper extends BaseLightHelper<HemisphereLight, HemisphereLightObjNode> {\n\tprivate _geometry = new OctahedronBufferGeometry(1);\n\n\tprotected build_helper() {\n\t\tthis._geometry.rotateZ(Math.PI * 0.5);\n\n\t\tthis._material.vertexColors = true;\n\n\t\tconst position = this._geometry.getAttribute('position');\n\t\tconst colors = new Float32Array(position.count * 3);\n\n\t\tthis._geometry.setAttribute('color', new BufferAttribute(colors, 3));\n\t\tthis._object.geometry = this._geometry;\n\t\tthis._object.material = this._material;\n\t}\n\n\t// private _inverse_position = new Vector3();\n\tprivate _quat = new Quaternion();\n\tprivate _default_position = new Vector3(0, 1, 0);\n\tprivate _color1 = new Color();\n\tprivate _color2 = new Color();\n\tupdate() {\n\t\tif (!this.node.pv.position) {\n\t\t\treturn;\n\t\t}\n\t\t// this._inverse_position.copy(this.node.pv.position).multiplyScalar(-1)\n\t\tthis._object.position.copy(this.node.pv.position).multiplyScalar(-1);\n\t\tthis._quat.setFromUnitVectors(this._default_position, this.node.pv.position);\n\t\tthis._object.setRotationFromQuaternion(this._quat);\n\t\tthis._object.scale.setScalar(this.node.pv.helper_size);\n\n\t\tconst colors = this._geometry.getAttribute('color') as BufferAttribute;\n\n\t\tthis._color1.copy(this.node.light.color);\n\t\tthis._color2.copy(this.node.light.groundColor);\n\n\t\tfor (let i = 0, l = colors.count; i < l; i++) {\n\t\t\tconst color = i < l / 2 ? this._color1 : this._color2;\n\n\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t}\n\n\t\tcolors.needsUpdate = true;\n\t}\n}\n","import {PointLight} from 'three/src/lights/PointLight';\nimport {PointLightHelper} from './utils/helpers/PointLightHelper';\n\nimport {BaseLightTransformedObjNode} from './_BaseLightTransformed';\nimport {TransformedParamConfig} from './utils/TransformController';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {HelperController, HelperConstructor} from './utils/HelperController';\n// import {HelperController} from './utils/HelperController';\nclass PointLightObjParamsConfig extends TransformedParamConfig(NodeParamsConfig) {\n\tlight = ParamConfig.FOLDER();\n\tcolor = ParamConfig.COLOR([1, 1, 1]);\n\tintensity = ParamConfig.FLOAT(1);\n\tdecay = ParamConfig.FLOAT(0.1);\n\tdistance = ParamConfig.FLOAT(100);\n\t// shadows\n\tcast_shadows = ParamConfig.BOOLEAN(1);\n\tshadow_res = ParamConfig.VECTOR2([1024, 1024], {visible_if: {cast_shadows: 1}});\n\tshadow_bias = ParamConfig.FLOAT(0.001, {visible_if: {cast_shadows: 1}});\n\tshadow_near = ParamConfig.FLOAT(1, {visible_if: {cast_shadows: 1}});\n\tshadow_far = ParamConfig.FLOAT(100, {visible_if: {cast_shadows: 1}});\n\n\t// helper\n\tshow_helper = ParamConfig.BOOLEAN(1);\n\thelper_size = ParamConfig.FLOAT(1, {visible_if: {show_helper: 1}});\n}\nconst ParamsConfig = new PointLightObjParamsConfig();\n\nexport class PointLightObjNode extends BaseLightTransformedObjNode<PointLight, PointLightObjParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'point_light';\n\t}\n\tprivate _helper_controller = new HelperController<PointLight>(\n\t\tthis,\n\t\t(<unknown>PointLightHelper) as HelperConstructor<PointLight>,\n\t\t'PointLightHelper'\n\t);\n\tinitialize_node() {\n\t\tthis._helper_controller.initialize_node();\n\t}\n\n\tcreate_light() {\n\t\tconst light = new PointLight();\n\n\t\tlight.castShadow = true;\n\t\tlight.shadow.bias = -0.001;\n\t\tlight.shadow.mapSize.x = 1024;\n\t\tlight.shadow.mapSize.y = 1024;\n\t\tlight.shadow.camera.near = 0.1;\n\n\t\treturn light;\n\t}\n\n\tupdate_light_params() {\n\t\tthis.light.color = this.pv.color;\n\t\tthis.light.intensity = this.pv.intensity;\n\t\tthis.light.decay = this.pv.decay;\n\n\t\tthis.light.distance = this.pv.distance;\n\n\t\tthis._helper_controller.update();\n\t}\n\tupdate_shadow_params() {\n\t\tthis.light.castShadow = this.pv.cast_shadows;\n\t\tthis.light.shadow.mapSize.copy(this.pv.shadow_res);\n\t\tthis.light.shadow.camera.near = this.pv.shadow_near;\n\t\tthis.light.shadow.camera.far = this.pv.shadow_far;\n\t\tthis.light.shadow.bias = this.pv.shadow_bias;\n\t}\n}\n","import {PointLightObjNode} from '../../PointLight';\n// import {Mesh} from 'three/src/objects/Mesh';\n// import {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {SphereBufferGeometry} from 'three/src/geometries/SphereGeometry';\nimport {BaseLightHelper} from './_BaseLightHelper';\nimport {PointLight} from 'three/src/lights/PointLight';\n\nexport class PointLightHelper extends BaseLightHelper<PointLight, PointLightObjNode> {\n\tprotected build_helper() {\n\t\tconst size = 1;\n\t\tthis._object.geometry = new SphereBufferGeometry(size, 4, 2);\n\t\tthis._object.material = this._material;\n\t}\n\n\tupdate() {\n\t\tthis._object.scale.setScalar(this.node.pv.helper_size);\n\t\tthis._material.color.copy(this.node.light.color);\n\t}\n}\n","import {SpotLight} from 'three/src/lights/SpotLight';\n// import {SpotLightHelper} from 'three/src/helpers/SpotLightHelper';\nimport {BaseLightTransformedObjNode} from './_BaseLightTransformed';\nimport {TransformedParamConfig} from './utils/TransformController';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {HelperController, HelperConstructor} from './utils/HelperController';\nimport {SpotLightHelper} from './utils/helpers/SpotLightHelper';\nimport {Object3D} from 'three/src/core/Object3D';\n// import {HelperController} from './utils/HelperController';\nclass SpotLightObjParamsConfig extends TransformedParamConfig(NodeParamsConfig) {\n\tlight = ParamConfig.FOLDER();\n\tcolor = ParamConfig.COLOR([1, 1, 1]);\n\tintensity = ParamConfig.FLOAT(1);\n\tangle = ParamConfig.FLOAT(45, {range: [0, 180]});\n\tpenumbra = ParamConfig.FLOAT(0.1);\n\tdecay = ParamConfig.FLOAT(0.1, {range: [0, 1]});\n\tdistance = ParamConfig.FLOAT(100, {range: [0, 100]});\n\t// target = ParamConfig.OPERATOR_PATH('');\n\n\t// shadows\n\tcast_shadows = ParamConfig.BOOLEAN(1);\n\tshadow_res = ParamConfig.VECTOR2([1024, 1024]);\n\tshadow_bias = ParamConfig.FLOAT(0.001);\n\n\t// helper\n\tshow_helper = ParamConfig.BOOLEAN(1);\n\thelper_size = ParamConfig.FLOAT(1, {visible_if: {show_helper: 1}});\n}\nconst ParamsConfig = new SpotLightObjParamsConfig();\n\nexport class SpotLightObjNode extends BaseLightTransformedObjNode<SpotLight, SpotLightObjParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'spot_light';\n\t}\n\tprivate _target_target!: Object3D;\n\tprivate _helper_controller = new HelperController<SpotLight>(\n\t\tthis,\n\t\t(<unknown>SpotLightHelper) as HelperConstructor<SpotLight>,\n\t\t'SpotLightHelper'\n\t);\n\tinitialize_node() {\n\t\t// this.io.inputs.set_count(0, 1);\n\t\tthis._helper_controller.initialize_node();\n\t}\n\n\tcreate_light() {\n\t\tconst light = new SpotLight();\n\n\t\tlight.castShadow = true;\n\t\tlight.shadow.bias = -0.001;\n\t\tlight.shadow.mapSize.x = 1024;\n\t\tlight.shadow.mapSize.y = 1024;\n\t\tlight.shadow.camera.near = 0.1;\n\n\t\tthis._target_target = light.target;\n\t\tthis._target_target.name = 'SpotLight Default Target';\n\t\tthis.object.add(this._target_target);\n\n\t\treturn light;\n\t}\n\t// add_object_to_parent(parent: Object3D) {\n\t// \tsuper.add_object_to_parent(parent);\n\t// \tparent.add(this._target_target);\n\t// }\n\t// remove_object_from_parent() {\n\t// \tsuper.remove_object_from_parent();\n\t// \tconst parent = this._target_target.parent;\n\t// \tif (parent) {\n\t// \t\tparent.remove(this._target_target);\n\t// \t}\n\t// }\n\n\tupdate_light_params() {\n\t\tthis.light.color = this.pv.color;\n\t\tthis.light.intensity = this.pv.intensity;\n\t\tthis.light.angle = this.pv.angle * (Math.PI / 180);\n\t\tthis.light.penumbra = this.pv.penumbra;\n\t\tthis.light.decay = this.pv.decay;\n\t\tthis.light.distance = this.pv.distance;\n\n\t\tthis._helper_controller.update();\n\t}\n\tupdate_shadow_params() {\n\t\tthis.light.castShadow = this.pv.cast_shadows;\n\t\tthis.light.shadow.mapSize.copy(this.pv.shadow_res);\n\t\t// object.shadow.camera.near = this.pv.shadow_near\n\t\t// object.shadow.camera.far = this.pv.shadow_far\n\t\tthis.light.shadow.bias = this.pv.shadow_bias;\n\t}\n}\n","import {SpotLightObjNode} from '../../SpotLight';\n// import {Mesh} from 'three/src/objects/Mesh';\n// import {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {BaseLightHelper} from './_BaseLightHelper';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {LineSegments} from 'three/src/objects/LineSegments';\n\nexport class SpotLightHelper extends BaseLightHelper<SpotLight, SpotLightObjNode> {\n\tprivate _cone = new LineSegments();\n\tprivate _line_material = new LineBasicMaterial({fog: false});\n\tprotected build_helper() {\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\tconst p1 = (i / l) * Math.PI * 2;\n\t\t\tconst p2 = (j / l) * Math.PI * 2;\n\n\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t}\n\n\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\tthis._cone.geometry = geometry;\n\n\t\tthis._cone.material = this._line_material;\n\t\tthis._cone.rotateX(Math.PI * 0.5);\n\n\t\tthis.object.add(this._cone);\n\t}\n\n\tupdate() {\n\t\tconst coneLength = (this.node.light.distance ? this.node.light.distance : 1000) * this.node.pv.helper_size;\n\t\tconst coneWidth = coneLength * Math.tan(this.node.light.angle);\n\n\t\tthis._cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\tthis._line_material.color.copy(this.node.light.color);\n\t}\n}\n","import {BaseManagerObjNode} from './_BaseManager';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {ObjNodeRenderOrder} from './_Base';\nimport {EventNodeChildrenMap} from '../../poly/registers/Event';\nimport {BaseEventNodeType} from '../event/_Base';\n\nexport class EventsObjNode extends BaseManagerObjNode {\n\tpublic readonly render_order: number = ObjNodeRenderOrder.EVENT;\n\tstatic type() {\n\t\treturn 'events';\n\t}\n\n\tprotected _children_controller_context = NodeContext.EVENT;\n\tinitialize_node() {\n\t\tthis.children_controller?.init();\n\t}\n\n\tcreate_node<K extends keyof EventNodeChildrenMap>(type: K): EventNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as EventNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseEventNodeType[];\n\t}\n\tnodes_by_type<K extends keyof EventNodeChildrenMap>(type: K): EventNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as EventNodeChildrenMap[K][];\n\t}\n}\n","import {BaseManagerObjNode} from './_BaseManager';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {ObjNodeRenderOrder} from './_Base';\nimport {MatNodeChildrenMap} from '../../poly/registers/Mat';\nimport {BaseMatNodeType} from '../mat/_Base';\n\nexport class MaterialsObjNode extends BaseManagerObjNode {\n\tpublic readonly render_order: number = ObjNodeRenderOrder.MAT;\n\tstatic type() {\n\t\treturn 'materials';\n\t}\n\t// children_context(){ return NodeContext.MAT }\n\n\tprotected _children_controller_context = NodeContext.MAT;\n\tinitialize_node() {\n\t\tthis.children_controller?.init();\n\t}\n\n\tcreate_node<K extends keyof MatNodeChildrenMap>(type: K): MatNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as MatNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseMatNodeType[];\n\t}\n\tnodes_by_type<K extends keyof MatNodeChildrenMap>(type: K): MatNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as MatNodeChildrenMap[K][];\n\t}\n}\n","import {BaseManagerObjNode} from './_BaseManager';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {CopNodeChildrenMap} from '../../poly/registers/Cop';\nimport {BaseCopNodeType} from '../cop/_Base';\n\nexport class CopObjNode extends BaseManagerObjNode {\n\tstatic type() {\n\t\treturn 'cop';\n\t}\n\t// children_context(){ return NodeContext.COP }\n\n\tprotected _children_controller_context = NodeContext.COP;\n\tinitialize_node() {\n\t\tthis.children_controller?.init();\n\t\t// this._init_manager();\n\t}\n\n\tcreate_node<K extends keyof CopNodeChildrenMap>(type: K): CopNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as CopNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseCopNodeType[];\n\t}\n\tnodes_by_type<K extends keyof CopNodeChildrenMap>(type: K): CopNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as CopNodeChildrenMap[K][];\n\t}\n}\n","import {BaseManagerObjNode} from './_BaseManager';\nimport {NodeContext} from '../../poly/NodeContext';\n\nexport class PostProcessObjNode extends BaseManagerObjNode {\n\tstatic type() {\n\t\treturn 'post_process';\n\t}\n\t// children_context(){ return NodeContext.POST }\n\n\tprotected _children_controller_context = NodeContext.POST;\n\tinitialize_node() {\n\t\tthis.children_controller?.init();\n\t\t// this._init_manager();\n\t}\n}\n","import {TypedObjNode} from './_Base';\nimport {Group} from 'three/src/objects/Group';\n// const THREE = {Group};\n\n// import {CoreTransform} from '../../../core/Transform';\n\nimport {BaseNodeType} from '../_Base';\nimport {DisplayNodeController} from '../utils/DisplayNodeController';\nimport {NodeContext} from '../../poly/NodeContext';\n\n//import Layers from './Concerns/Layers'\n// import {Transformed} from './Concerns/Transformed';\n\n// sop map\nimport {BaseSopNodeType} from '../sop/_Base';\n// import {PolyScene} from '../../scene/PolyScene';\nimport {TransformedParamConfig, TransformController} from './utils/TransformController';\n\nimport {GeoNodeChildrenMap} from '../../poly/registers/Sop';\nimport {FlagsControllerD} from '../utils/FlagsController';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass GeoObjParamConfig extends TransformedParamConfig(NodeParamsConfig) {\n\tdisplay = ParamConfig.BOOLEAN(1);\n}\nconst ParamsConfig = new GeoObjParamConfig();\n\nexport class GeoObjNode extends TypedObjNode<Group, GeoObjParamConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'geo';\n\t}\n\treadonly transform_controller: TransformController = new TransformController(this);\n\tprotected _display_node_controller: DisplayNodeController = new DisplayNodeController(this);\n\tget display_node_controller() {\n\t\treturn this._display_node_controller;\n\t}\n\tpublic readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\n\tprivate _sop_group = this._create_sop_group();\n\tprivate _create_sop_group() {\n\t\treturn new Group();\n\t}\n\tget sop_group() {\n\t\treturn this._sop_group;\n\t}\n\tset_sop_group_name() {\n\t\tthis._sop_group.name = `${this.full_path()}:sop_group`;\n\t}\n\n\t// children_context() {\n\t// \treturn NodeContext.SOP;\n\t// }\n\n\tprotected _children_controller_context = NodeContext.SOP;\n\n\tprivate _on_create_bound = this._on_create.bind(this);\n\tprivate _on_child_add_bound = this._on_child_add.bind(this);\n\tinitialize_node() {\n\t\tthis.children_controller?.init();\n\t\tthis.lifecycle.add_on_create_hook(this._on_create_bound);\n\t\tthis.lifecycle.add_on_child_add_hook(this._on_child_add_bound);\n\n\t\tthis.display_node_controller.initialize_node();\n\t\tthis.transform_controller.initialize_node();\n\t\t// this.flags.display.add_hook(() => {\n\t\t// \tthis.set_used_in_scene(this.flags.display.active);\n\t\t// });\n\n\t\tthis.object.add(this.sop_group);\n\n\t\tthis.name_controller.add_post_set_full_path_hook(this.set_sop_group_name.bind(this));\n\t\tthis._create_sop_group();\n\t\t// this._init_display_flag({\n\t\t// \tmultiple_display_flags_allowed: false,\n\t\t// \taffects_hierarchy: true,\n\t\t// });\n\t\t// this._init_dirtyable_hook();\n\n\t\t// this.io.inputs.set_count(0, 1);\n\t\t// this.io.outputs.set_has_one_output();\n\t}\n\n\tcreate_object() {\n\t\treturn new Group();\n\t}\n\n\t//base_layers_included: -> false\n\n\t// create_params() {\n\t// \t// CoreTransform.create_params(this);\n\t// }\n\t//this.create_layers_params()\n\n\trequest_display_node() {\n\t\tif (!this.scene.loading_controller.auto_updating) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: typescript\n\t\t// if (this.is_displayed)\n\t\t// \tconst display_node = this.display_node();\n\t\t// \tif (display_node) {\n\t\t// \t\tdisplay_node.request_container_p().then(async (container) => {\n\t\t// \t\t\tif (!this._sop_loaded) {\n\t\t// \t\t\t\tthis.root().notify_geo_loaded(this);\n\t\t// \t\t\t}\n\t\t// \t\t\tthis._sop_loaded = true;\n\n\t\t// \t\t\tconst update_needed = await this.display_node_objects_changed(container);\n\t\t// \t\t\tif (update_needed) {\n\t\t// \t\t\t\tthis.remove_display_node_group();\n\t\t// \t\t\t\tawait this.add_display_node_group(container);\n\t\t// \t\t\t}\n\t\t// \t\t\t// this.set_needsUpdate(container)\n\t\t// \t\t});\n\t\t// \t} else {\n\t\t// \t\tthis.root().notify_geo_loaded(this);\n\t\t// \t\tthis._sop_loaded = true;\n\t\t// \t}\n\t\t// }\n\t}\n\n\tis_display_node_cooking(): boolean {\n\t\tif (this.flags.display.active) {\n\t\t\tconst display_node = this._display_node_controller.display_node;\n\t\t\treturn display_node ? display_node.is_dirty : false;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tcreate_node<K extends keyof GeoNodeChildrenMap>(type: K): GeoNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as GeoNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseSopNodeType[];\n\t}\n\tnodes_by_type<K extends keyof GeoNodeChildrenMap>(type: K): GeoNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as GeoNodeChildrenMap[K][];\n\t}\n\n\t//\n\t//\n\t// HOOK\n\t//\n\t//\n\t_on_create() {\n\t\tthis.create_node('text');\n\t}\n\t_on_child_add(node: BaseNodeType) {\n\t\tif (this.scene.loading_controller.loaded) {\n\t\t\tif (this.children().length == 1) {\n\t\t\t\tnode.flags?.display?.set(true);\n\t\t\t}\n\t\t}\n\t}\n\t// post_display_flag_node_set_dirty() {\n\t// \tthis.request_display_node();\n\t// }\n\n\t//\n\t//\n\t// COOK\n\t//\n\t//\n\tcook() {\n\t\tthis.transform_controller.update();\n\t\t//this.update_layers()\n\n\t\tthis.object.visible = this.pv.display;\n\n\t\tthis.cook_controller.end_cook();\n\t}\n}\n","import {GeoObjNode} from '../obj/Geo';\nimport {BaseSopNodeType} from '../sop/_Base';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n\nexport class DisplayNodeController {\n\t_graph_node: CoreGraphNode;\n\t_display_node: BaseSopNodeType | undefined;\n\t_children_uuids_dict: Dictionary<boolean> = {};\n\t_children_length: number = 0;\n\tprivate _request_display_node_container_bound = this.request_display_node_container.bind(this);\n\tconstructor(protected node: GeoObjNode) {\n\t\tthis._graph_node = new CoreGraphNode(node.scene, 'DisplayNodeController');\n\n\t\tthis._graph_node.dirty_controller.add_post_dirty_hook(\n\t\t\t'_request_display_node_container',\n\t\t\tthis._request_display_node_container_bound\n\t\t);\n\t}\n\n\tget display_node() {\n\t\treturn this._display_node;\n\t}\n\tprivate _parent_object: Object3D | undefined;\n\tset_parent_object(object: Object3D) {\n\t\tthis._parent_object = object;\n\t}\n\tget parent_object() {\n\t\treturn this._parent_object || this.node.object;\n\t}\n\n\tinitialize_node() {\n\t\tthis.set_parent_object(this.node.sop_group);\n\t\tthis.node.flags.display.add_hook(() => {\n\t\t\tthis.node.sop_group.visible = this.used_in_scene;\n\t\t\tif (this.node.flags.display.active) {\n\t\t\t\tthis.request_display_node_container();\n\t\t\t}\n\t\t});\n\n\t\tthis.node.lifecycle.add_on_child_add_hook((child_node) => {\n\t\t\tif (!this._display_node) {\n\t\t\t\tchild_node.flags?.display?.set(true);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync set_display_node(new_display_node: BaseSopNodeType) {\n\t\tif (this._display_node != new_display_node) {\n\t\t\tconst old_display_node = this._display_node;\n\t\t\tif (old_display_node) {\n\t\t\t\told_display_node.flags.display.set(false);\n\t\t\t\tthis._graph_node.remove_graph_input(old_display_node);\n\t\t\t\tthis.remove_children();\n\t\t\t}\n\t\t\tthis._display_node = new_display_node;\n\t\t\tif (this._display_node) {\n\t\t\t\tthis._graph_node.add_graph_input(this._display_node);\n\t\t\t}\n\t\t\tthis.request_display_node_container();\n\t\t}\n\t}\n\n\tremove_children() {\n\t\tlet child: Object3D | undefined;\n\t\twhile ((child = this.parent_object.children.pop())) {\n\t\t\tthis.parent_object.remove(child);\n\t\t}\n\t}\n\n\tget used_in_scene() {\n\t\treturn this.node.used_in_scene && this.node.flags.display.active && this.node.pv.display == true;\n\t}\n\n\tprivate async request_display_node_container() {\n\t\tif (!this.node.scene.loading_controller.loaded) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.used_in_scene) {\n\t\t\tif (this._display_node) {\n\t\t\t\tconst container = await this._display_node.request_container();\n\t\t\t\tconst core_group = container.core_content();\n\t\t\t\tif (core_group) {\n\t\t\t\t\t// check if the new objects are different\n\t\t\t\t\tconst new_objects = core_group.objects();\n\t\t\t\t\tlet new_objects_are_different = new_objects.length != this._children_length;\n\t\t\t\t\tif (!new_objects_are_different) {\n\t\t\t\t\t\tfor (let object of new_objects) {\n\t\t\t\t\t\t\tif (!(object.uuid in this._children_uuids_dict)) {\n\t\t\t\t\t\t\t\tnew_objects_are_different = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// update hierarchy if different\n\t\t\t\t\tif (new_objects_are_different) {\n\t\t\t\t\t\tthis.remove_children();\n\t\t\t\t\t\tthis._children_uuids_dict = {};\n\t\t\t\t\t\tfor (let object of new_objects) {\n\t\t\t\t\t\t\tthis.parent_object.add(object);\n\t\t\t\t\t\t\tthis._children_uuids_dict[object.uuid] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._children_length = new_objects.length;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.remove_children();\n\t\t\t\t\tthis._children_uuids_dict = {};\n\t\t\t\t\tthis._children_length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import {TypedObjNode} from './_Base';\nimport {Group} from 'three/src/objects/Group';\nimport {TransformedParamConfig, TransformController} from './utils/TransformController';\n// import {CoreTransform} from '../../../core/Transform';\nimport {FlagsControllerD} from '../utils/FlagsController';\nimport {AxesHelper} from 'three/src/helpers/AxesHelper';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nclass NullObjParamConfig extends TransformedParamConfig(NodeParamsConfig) {}\nconst ParamsConfig = new NullObjParamConfig();\n\nexport class NullObjNode extends TypedObjNode<Group, NullObjParamConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'null';\n\t}\n\treadonly transform_controller: TransformController = new TransformController(this);\n\tpublic readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\tprivate _helper = new AxesHelper(1);\n\n\tcreate_object() {\n\t\treturn new Group();\n\t}\n\tinitialize_node() {\n\t\tthis.transform_controller.initialize_node();\n\t\tthis.object.add(this._helper);\n\t\tthis.flags.display.add_hook(() => {\n\t\t\tthis._helper.visible = this.flags.display.active;\n\t\t});\n\t}\n\tcook() {\n\t\tthis.transform_controller.update();\n\t\tthis.cook_controller.end_cook();\n\t}\n}\n","// import {BaseNode} from '../_Base';\nimport {TypedObjNode, ObjNodeRenderOrder} from './_Base';\nimport {FogExp2} from 'three/src/scenes/FogExp2';\nimport {Fog} from 'three/src/scenes/Fog';\nimport {Color} from 'three/src/math/Color';\n\nconst DEFAULT = {\n\tcolor: new Color(1, 1, 1),\n\tnear: 0,\n\tfar: 100,\n\tdensity: 0.00025,\n};\n\n// export Fog = (function() {\n// \tlet DEFAULT = undefined;\n// \tFog = class Fog extends BaseModules {\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {FlagsControllerD} from '../utils/FlagsController';\nclass FogObjParamConfig extends NodeParamsConfig {\n\tcolor = ParamConfig.COLOR(DEFAULT.color.toArray() as [number, number, number]);\n\texponential = ParamConfig.BOOLEAN(0);\n\tdensity = ParamConfig.FLOAT(1);\n\tnear = ParamConfig.FLOAT(0, {range: [0, 100]});\n\tfar = ParamConfig.FLOAT(100, {range: [0, 100]});\n}\nconst ParamsConfig = new FogObjParamConfig();\nexport class FogObjNode extends TypedObjNode<Object3D, FogObjParamConfig> {\n\tparams_config = ParamsConfig;\n\tpublic readonly flags: FlagsControllerD = new FlagsControllerD(this);\n\tpublic readonly render_order: number = ObjNodeRenderOrder.MANAGER;\n\t// public readonly add_to_hierarchy: boolean = false;\n\tprotected _attachable_to_hierarchy: boolean = false;\n\n\tprotected _linear_fog!: Fog;\n\tprotected _linear_fogexp2!: FogExp2;\n\n\tinitialize_node() {\n\t\t// this._init_display_flag({\n\t\t// \tmultiple_display_flags_allowed: false,\n\t\t// });\n\n\t\t// this.set_inputs_count_to_zero();\n\t\t// this._init_dirtyable_hook();\n\n\t\tthis._linear_fog = new Fog(DEFAULT.color.getHex(), DEFAULT.near, DEFAULT.far);\n\t\tthis._linear_fogexp2 = new FogExp2(DEFAULT.color.getHex(), DEFAULT.density);\n\t}\n\tstatic type() {\n\t\treturn 'fog';\n\t}\n\n\t// create_params() {\n\t// \tthis.add_param(ParamType.COLOR, 'color', DEFAULT.color.toArray() as [number, number, number]);\n\t// \tthis.add_param(ParamType.BOOLEAN, 'exponential', 0);\n\t// \tthis.add_param(ParamType.FLOAT, 'density', DEFAULT.density);\n\t// \tthis.add_param(ParamType.FLOAT, 'near', DEFAULT.near, {\n\t// \t\trange: [0, 100],\n\t// \t});\n\t// \tthis.add_param(ParamType.FLOAT, 'far', DEFAULT.far, {\n\t// \t\trange: [0, 100],\n\t// \t});\n\t// }\n\n\t// get_fog: (callback)->\n\t// \tthis.param('exponential').eval (val)=>\n\t// \t\tfog = if val then @_exponential_fog else @_linear_fog\n\t// \t\tcallback(fog)\n\n\tcook() {\n\t\tlet fog: Fog | FogExp2;\n\t\tif (this.pv.exponential) {\n\t\t\tthis._linear_fogexp2.density = this.pv.density;\n\t\t\tfog = this._linear_fogexp2;\n\t\t} else {\n\t\t\tthis._linear_fog.near = this.pv.near;\n\t\t\tthis._linear_fog.far = this.pv.far; // * (1/@_param_intensity)\n\t\t\tfog = this._linear_fog;\n\t\t}\n\n\t\tfog.color.copy(this.pv.color);\n\n\t\tthis.scene.default_scene.fog = fog;\n\n\t\tthis.cook_controller.end_cook();\n\t}\n}\n","import {TypedObjNode} from './_Base';\nimport {Scene} from 'three/src/scenes/Scene';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass SceneObjParamConfig extends NodeParamsConfig {\n\tbg_color = ParamConfig.COLOR([0, 0, 0]);\n}\nconst ParamsConfig = new SceneObjParamConfig();\n\nexport class SceneObjNode extends TypedObjNode<Scene, SceneObjParamConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'scene';\n\t}\n\n\tcreate_object() {\n\t\treturn new Scene();\n\t}\n\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\t\tthis.io.outputs.set_has_one_output();\n\t}\n\n\tcook() {\n\t\tthis.cook_controller.end_cook();\n\t}\n}\n","// import {Vector2} from 'three/src/math/Vector2';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\n// import {Group} from 'three/src/objects/Group';\n// import {CameraHelper} from 'three/src/helpers/CameraHelper';\n// import lodash_clamp from 'lodash/clamp';\nimport {TypedCameraObjNode, BASE_CAMERA_DEFAULT, CameraTransformParamConfig} from './_BaseCamera';\n\nimport {OrthographicCameraBackgroundController} from './utils/cameras/background/OrthographicCameraController';\n// import {ParamType} from '../../poly/ParamType';\n\nconst DEFAULT = {\n\tleft: -0.5,\n\tright: 0.5,\n\ttop: 0.5,\n\tbottom: -0.5,\n};\n\nimport {ParamConfig, NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {CameraPostProcessParamConfig} from './utils/cameras/PostProcessController';\nimport {CameraBackgroundParamConfig} from './utils/cameras/background/_BaseController';\nimport {LayerParamConfig} from './utils/LayersController';\nimport {TransformedParamConfig} from './utils/TransformController';\nexport function OrthographicCameraObjParamConfigMixin<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tsize = ParamConfig.FLOAT(1);\n\t\t// vertical_size_range = ParamConfig.VECTOR2([-1, -1]);\n\t\t// horizontal_size_range = ParamConfig.VECTOR2([-1, -1]);\n\t};\n}\n\nclass OrthographicCameraObjParamConfig extends CameraPostProcessParamConfig(\n\tCameraBackgroundParamConfig(\n\t\tTransformedParamConfig(\n\t\t\tLayerParamConfig(OrthographicCameraObjParamConfigMixin(CameraTransformParamConfig(NodeParamsConfig)))\n\t\t)\n\t)\n) {}\nconst ParamsConfig = new OrthographicCameraObjParamConfig();\n\nexport class OrthographicCameraObjNode extends TypedCameraObjNode<\n\tOrthographicCamera,\n\tOrthographicCameraObjParamConfig\n> {\n\tparams_config = ParamsConfig;\n\n\tprotected get background_controller_constructor() {\n\t\treturn OrthographicCameraBackgroundController;\n\t}\n\n\tstatic type() {\n\t\treturn 'orthographic_camera';\n\t}\n\n\tcreate_object() {\n\t\treturn new OrthographicCamera(\n\t\t\tDEFAULT.left * 2,\n\t\t\tDEFAULT.right * 2,\n\t\t\tDEFAULT.top * 2,\n\t\t\tDEFAULT.bottom * 2,\n\t\t\tBASE_CAMERA_DEFAULT.near,\n\t\t\tBASE_CAMERA_DEFAULT.far\n\t\t);\n\t}\n\t//@_helper = new CameraHelper( @_camera )\n\t//group = new Group()\n\t//group.add(@_camera)\n\t//group.add(@_helper)\n\n\t//this.set_object(@_camera)\n\n\t// create_params() {\n\t// \t// this.create_common_params();\n\t// \t// this.add_param('float', 'left', DEFAULT.left)\n\t// \t// this.add_param('float', 'right', DEFAULT.right)\n\t// \t// this.add_param('float', 'top', DEFAULT.top)\n\t// \t// this.add_param('float', 'bottom', DEFAULT.bottom)\n\n\t// \t// this.within_param_folder('render', () => {\n\t// \tthis.add_param(ParamType.FLOAT, 'size', 2, {range: [0, 10]});\n\t// \t// left : Number, right : Number, top : Number, bottom : Number, near : Number, far : Number\n\t// \tthis.add_param(ParamType.VECTOR2, 'vertical_size_range', [0, 10], {visible_if: {lock_width: 1}});\n\t// \tthis.add_param(ParamType.VECTOR2, 'horizontal_size_range', [0, 10], {visible_if: {lock_width: 0}});\n\n\t// \t// this.create_player_camera_params();\n\t// \t// });\n\t// }\n\n\tupdate_camera() {\n\t\tthis._update_for_aspect_ratio();\n\t}\n\n\tprotected _update_for_aspect_ratio() {\n\t\tif (this._aspect) {\n\t\t\tconst size = this.pv.size || 1;\n\t\t\t// let lock_width = this.pv.lock_width;\n\t\t\t// if (lock_width == null) {\n\t\t\t// \tlock_width = true;\n\t\t\t// }\n\t\t\t// if (lock_width) {\n\t\t\t// \tconst vertical_size = size / this._aspect;\n\t\t\t// \tconst zoom = 1 //this.get_zoom(vertical_size, this.pv.vertical_size_range);\n\t\t\t// \tthis._object.left = DEFAULT.left * size * zoom;\n\t\t\t// \tthis._object.right = DEFAULT.right * size * zoom;\n\t\t\t// \tthis._object.top = DEFAULT.top * vertical_size * zoom;\n\t\t\t// \tthis._object.bottom = DEFAULT.bottom * vertical_size * zoom;\n\t\t\t// } else {\n\t\t\tconst horizontal_size = size * this._aspect;\n\t\t\tconst zoom = 1; //this.get_zoom(horizontal_size, this.pv.horizontal_size_range);\n\t\t\tthis._object.left = DEFAULT.left * horizontal_size * zoom;\n\t\t\tthis._object.right = DEFAULT.right * horizontal_size * zoom;\n\t\t\tthis._object.top = DEFAULT.top * size * zoom;\n\t\t\tthis._object.bottom = DEFAULT.bottom * size * zoom;\n\t\t\t// }\n\t\t\tthis._object.updateProjectionMatrix();\n\t\t}\n\t}\n\n\t// private get_zoom(size: number, range: Vector2) {\n\t// \tlet zoom = 1;\n\t// \tif (range) {\n\t// \t\tif (size < range.x || size > range.y) {\n\t// \t\t\tconst new_size = lodash_clamp(size, range.x, range.y);\n\t// \t\t\tzoom = new_size / size;\n\t// \t\t}\n\t// \t}\n\t// \treturn zoom;\n\t// }\n}\n","import {BaseCameraObjNodeType} from '../../_BaseCamera';\nimport {BaseCameraControlsEventNodeType, CameraControls} from '../../../event/_BaseCameraControls';\nimport {CameraControlsConfig} from '../../../event/utils/CameraControlConfig';\nimport {BaseParamType} from '../../../../params/_Base';\nimport {CameraOrbitControlsEventNode} from '../../../event/CameraOrbitControls';\n\nconst CONTROLS_PARAM_NAME = 'controls';\n\nexport class ControlsController {\n\t_applied_controls_by_element_id: Dictionary<Dictionary<boolean>> = {};\n\tprivate _controls_node: BaseCameraControlsEventNodeType | null = null;\n\tprivate controls_start_listener: (() => void) | undefined;\n\tprivate controls_end_listener: (() => void) | undefined;\n\n\tconstructor(private node: BaseCameraObjNodeType) {}\n\n\tcontrols_param(): BaseParamType | null {\n\t\tif (this.node.params.has(CONTROLS_PARAM_NAME)) {\n\t\t\treturn this.node.params.get(CONTROLS_PARAM_NAME);\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync controls_node(): Promise<BaseCameraControlsEventNodeType | null> {\n\t\tconst controls_param = this.node.p.controls;\n\t\tconst raw_input = controls_param.raw_input;\n\t\tif (raw_input && raw_input != '') {\n\t\t\tif (controls_param.is_dirty) {\n\t\t\t\tawait controls_param.compute();\n\t\t\t}\n\t\t\tconst node = controls_param.found_node();\n\t\t\tif (node) {\n\t\t\t\tif (node instanceof CameraOrbitControlsEventNode) {\n\t\t\t\t\treturn node;\n\t\t\t\t} else {\n\t\t\t\t\tthis.node.states.error.set('found node is not of a camera control type');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.node.states.error.set('no node has been found');\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync update_controls() {\n\t\tconst controls_node = await this.controls_node();\n\t\tif (controls_node) {\n\t\t\tif (this._controls_node != controls_node) {\n\t\t\t\tthis.dispose_control_refs();\n\t\t\t}\n\t\t}\n\n\t\tthis._controls_node = controls_node;\n\t}\n\n\tasync apply_controls(html_element: HTMLElement) {\n\t\tconst controls_node = await this.controls_node();\n\t\tif (controls_node) {\n\t\t\t// keep last_control_node_id to ensure we don't apply the controls more than once\n\t\t\t// OR it allow the viewer to remain in control of this\n\t\t\t//if !@_last_control_node_id? || (@_last_control_node_id != controls_node.graph_node_id)\n\t\t\t// but for now, the controls are still applied again after mouse up\n\t\t\tconst controls_id = controls_node.controls_id();\n\t\t\tlet controls_aleady_applied = false;\n\t\t\tif (\n\t\t\t\tthis._applied_controls_by_element_id[html_element.id] &&\n\t\t\t\tthis._applied_controls_by_element_id[html_element.id][controls_id]\n\t\t\t) {\n\t\t\t\tcontrols_aleady_applied = true;\n\t\t\t}\n\t\t\tif (!controls_aleady_applied) {\n\t\t\t\t// this._last_control_node_id = controls_id;\n\t\t\t\tthis._applied_controls_by_element_id[html_element.id] =\n\t\t\t\t\tthis._applied_controls_by_element_id[html_element.id] || {};\n\t\t\t\tthis._applied_controls_by_element_id[html_element.id][controls_id] = true;\n\n\t\t\t\t// request_container forces a cook\n\t\t\t\t//controls_node.request_container (controls_container)=>\n\t\t\t\tconst controls = await controls_node.apply_controls(this.node.object, html_element);\n\t\t\t\tconst config = new CameraControlsConfig(this.node.graph_node_id, controls_node, controls);\n\t\t\t\tcontrols_node.set_from_camera_node(controls, this.node);\n\t\t\t\tthis.set_controls_events(controls);\n\t\t\t\treturn config;\n\t\t\t}\n\t\t}\n\t}\n\tdispose_control_refs() {\n\t\tthis._applied_controls_by_element_id = {};\n\t}\n\n\t// calling dispose controls\n\t// ensure that we can set the camera menu to camera1, then camera2 and back to camera1\n\t// and controls will be cleared each time\n\tasync dispose_controls(html_element: HTMLElement) {\n\t\tdelete this._applied_controls_by_element_id[html_element.id];\n\t\t// if (this._applied_controls_by_element_id[html_element.id]) {\n\t\t// \tconst controls_node = await this.controls_node();\n\t\t// \tif (controls_node) {\n\t\t// \t\tconst controls_id = controls_node.controls_id();\n\t\t// \t\tdelete this._applied_controls_by_element_id[html_element.id][controls_id];\n\t\t// \t}\n\t\t// }\n\t\t// @_controls_node?.dispose_controls()\n\t\t// if(this._applied_controls_by_element_id[html_element.id]){\n\t\t// \tdelete this._applied_controls_by_element_id[html_element.id][controls_id]\n\t\t// }\n\t\t// this._last_control_node_id = null\n\t}\n\tset_controls_events(controls: CameraControls) {\n\t\t// restore target (for orbit controls only for now)\n\t\t// to ensure that camera does not reset its target on 0,0,0 on first move\n\t\t// const controls_node = this.controls_node()\n\t\t// if (controls_node){\n\t\t// \tcontrols_node.\n\t\t// }\n\t\t// if(controls.target){\n\t\t// \tcontrols.target.copy(this._param_target) //.clone()\n\t\t// }\n\n\t\tthis.controls_start_listener = () => {\n\t\t\tthis.on_controls_start(controls);\n\t\t};\n\t\tthis.controls_end_listener = () => {\n\t\t\tthis.on_controls_end(controls);\n\t\t};\n\t\tcontrols.addEventListener('start', this.controls_start_listener);\n\t\tcontrols.addEventListener('end', this.controls_end_listener);\n\t}\n\n\ton_controls_start(controls: CameraControls) {\n\t\t// this.param('is_updating').set(1)\n\t}\n\ton_controls_end(controls: CameraControls) {\n\t\t// this.param('is_updating').set(0)\n\t\tif (controls.target) {\n\t\t\tconst val = controls.target.toArray() as [number, number, number];\n\t\t\tthis.node.params.set_vector3('target', val);\n\t\t}\n\t\tthis.node.update_transform_params_from_object();\n\t}\n}\n","import {BaseCameraControlsEventNodeType, CameraControls} from '../_BaseCameraControls';\n\nexport class CameraControlsConfig {\n\tconstructor(\n\t\tprivate _camera_node_id: string,\n\t\tprivate _controls_node: BaseCameraControlsEventNodeType,\n\t\tprivate _controls: CameraControls\n\t) {}\n\n\tget camera_node_id() {\n\t\treturn this._camera_node_id;\n\t}\n\t// camera_controls_node_id(){\n\t// \treturn this._camera_controls_node_id\n\t// }\n\tget controls() {\n\t\treturn this._controls;\n\t}\n\tget controls_node() {\n\t\treturn this._controls_node;\n\t}\n\n\tis_equal(other_config: CameraControlsConfig): boolean {\n\t\treturn (\n\t\t\tother_config.camera_node_id == this._camera_node_id &&\n\t\t\tother_config.controls_node.graph_node_id == this._controls_node.graph_node_id\n\t\t);\n\t}\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n","import {PolyScene} from '../scene/PolyScene';\nimport {Vector2} from 'three/src/math/Vector2';\n// import {WebGLRenderer} from 'three/src/renderers/WebGLRenderer'\n// import {Color} from 'three/src/math/Color'\n\nimport {BaseViewer} from './_Base';\nimport {BaseCameraObjNodeType} from '../nodes/obj/_BaseCamera';\n\n// import 'src/engine/Poly';\n// import {POLY} from '../Poly';\n\nconst CSS_CLASS = 'CoreThreejsViewer';\n\ndeclare global {\n\tinterface HTMLCanvasElement {\n\t\tonwebglcontextlost: () => void;\n\t\tonwebglcontextrestored: () => void;\n\t}\n}\n\nexport class ThreejsViewer extends BaseViewer {\n\tprivate _request_animation_frame_id: number | undefined;\n\tprivate do_render: boolean = true;\n\n\tprivate _animate_method: () => void = this.animate.bind(this);\n\n\tconstructor(_container: HTMLElement, protected _scene: PolyScene, camera_node: BaseCameraObjNodeType) {\n\t\tsuper(_container, _scene, camera_node);\n\n\t\tthis._canvas = document.createElement('canvas');\n\t\tthis._canvas.id = `canvas_id_${Math.random()}`.replace('.', '_');\n\t\tthis._canvas.style.display = 'block';\n\t\tthis._canvas.style.outline = 'none';\n\n\t\tthis._container.appendChild(this._canvas);\n\t\tthis._container.classList.add(CSS_CLASS);\n\t\tthis._container.style.height = '100%';\n\n\t\tthis._set_events();\n\t}\n\n\tpublic _build() {\n\t\tthis._init_display();\n\t\tthis.activate();\n\t}\n\n\tdispose() {\n\t\tthis._cancel_animate();\n\t\tthis.controls_controller.dispose_controls();\n\t\t// this._dispose_graph_node()\n\t}\n\n\tprivate _set_events() {\n\t\tthis.events_controller.init();\n\t\tthis.webgl_controller.init();\n\n\t\t// if (POLY.player_mode()) {\n\t\twindow.onresize = () => {\n\t\t\tthis.cameras_controller.on_resize();\n\t\t};\n\t\t// }\n\t}\n\t// protected _on_touchmove(event: TouchEvent){\n\t// \tconsole.log(\"touch\", event)\n\t// }\n\n\tprivate _init_display() {\n\t\tif (!this._canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis.cameras_controller.compute_size_and_aspect();\n\t\tconst size: Vector2 = this.cameras_controller.size;\n\n\t\tthis.cameras_controller.camera_node?.post_process_controller.create_renderer(this._canvas, size);\n\t\t// this.canvas_context = canvas.getContext('2d')\n\n\t\t// init renderer\n\t\t// @renderer = new THREE.WebGLRenderer\n\t\t// \tcanvas: canvas\n\t\t// \tantialias: true\n\t\t// \talpha: true\n\n\t\t// @renderer.shadowMap.enabled = true\n\t\t// this.compute_size_and_aspect()\n\n\t\t//\n\t\t// https://stackoverflow.com/questions/31407778/display-scene-at-lower-resolution-in-three-js\n\t\t// TODO: this article mentions that setSize should be called after\n\t\t// @renderer.setSize(this._size[0], this._size[1])\n\t\t// @renderer.setPixelRatio(window.devicePixelRatio)\n\t\t// @renderer.setSize(size[0]*1.5, size[1]*1.5)\n\t\t// canvas.width = \"//{size[0]}px\"\n\t\t// canvas.height = \"//{size[1]}px\"\n\t\t// canvas.style.width = \"//{size[0]}px\"\n\t\t// canvas.style.height = \"//{size[1]}px\"\n\n\t\t// TODO: ensure the renderers get added to a list\n\t\t//if !this.player_mode\n\t\t//\tconsole.log(\"set window.viewer_renderer from Threejs.vue component\")\n\t\t// window.viewer_renderer = @renderer\n\t\t// POLY.renderers_controller.register_renderer(@renderer)\n\n\t\t//this._init_webgl_utils()\n\n\t\t// init scene\n\t\t// @display_scene.background = new THREE.Color(\"//111\")\n\n\t\t//window.display_scene = @display_scene\n\n\t\t// this._init_ray_helper(); // TODO: typescript\n\n\t\t//@cam_animation_helper = new CameraAnimationHelper(@ray_helper, @event_helper)\n\n\t\tthis.cameras_controller.prepare_current_camera();\n\t\t// this._add_helpers_to_scene()\n\n\t\tthis.animate();\n\t}\n\n\tanimate() {\n\t\tif (this.do_render) {\n\t\t\tthis._scene.time_controller.increment_time_if_playing();\n\t\t\tthis.render();\n\t\t\tthis._controls_controller?.update();\n\t\t\t// this.update_stats()\n\t\t\t// this._controls?.update(false)\n\n\t\t\t// @_renders_count ?= 0\n\t\t\t// @_renders_count += 1\n\t\t\t// if @_renders_count < 6\n\t\t\tthis._request_animation_frame_id = requestAnimationFrame(this._animate_method);\n\t\t}\n\t}\n\n\tprivate _cancel_animate() {\n\t\tthis.do_render = false;\n\t\tif (this._request_animation_frame_id) {\n\t\t\tcancelAnimationFrame(this._request_animation_frame_id);\n\t\t}\n\t\tif (this._canvas) {\n\t\t\tthis.cameras_controller.camera_node?.post_process_controller.delete_renderer(this._canvas);\n\t\t}\n\t\t// POLY.renderers_controller.deregister_renderer(@renderer)\n\t\t// this.dispose_camera()\n\t}\n\n\trender() {\n\t\tif (this.cameras_controller.camera_node && this._canvas) {\n\t\t\tconst size = this.cameras_controller.size;\n\t\t\tconst aspect = this.cameras_controller.aspect;\n\t\t\tthis.cameras_controller.camera_node.post_process_controller.render(this._canvas, size, aspect);\n\t\t} else {\n\t\t\tconsole.warn('no camera to render with');\n\t\t}\n\t}\n}\n","import {Scene} from 'three/src/scenes/Scene';\nimport {PolyScene} from '../scene/PolyScene';\nimport {BaseCameraObjNodeType} from '../nodes/obj/_BaseCamera';\n\n// import {CameraMixin} from './concerns/Camera';\n// import {Capturer} from './concerns/Capturer';\n// import {ContainerClass} from './concerns/ContainerClass';\n// import {Controls} from './concerns/Controls';\n// import {PickerForViewer} from './concerns/Picker';\n\nimport {CamerasController} from './utils/CamerasController';\nimport {ControlsController} from './utils/ControlsController';\nimport {ViewerEventsController} from './utils/EventsController';\nimport {WebGLController} from './utils/WebglController';\n\n// class AbstractViewer {}\n\nconst HOVERED_CLASS_NAME = 'hovered';\n\nexport abstract class BaseViewer {\n\tprotected _display_scene: Scene;\n\tprotected _canvas: HTMLCanvasElement | undefined;\n\tprotected _active: boolean = false;\n\n\tget active() {\n\t\treturn this._active;\n\t}\n\tactivate() {\n\t\tthis._active = true;\n\t}\n\tdeactivate() {\n\t\tthis._active = false;\n\t}\n\n\tprotected _cameras_controller: CamerasController | undefined;\n\tget cameras_controller() {\n\t\treturn (this._cameras_controller = this._cameras_controller || new CamerasController(this));\n\t}\n\tprotected _controls_controller: ControlsController | undefined;\n\tget controls_controller() {\n\t\treturn (this._controls_controller = this._controls_controller || new ControlsController(this));\n\t}\n\tprotected _events_controller: ViewerEventsController | undefined;\n\tget events_controller() {\n\t\treturn (this._events_controller = this._events_controller || new ViewerEventsController(this));\n\t}\n\tprotected _webgl_controller: WebGLController | undefined;\n\tget webgl_controller() {\n\t\treturn (this._webgl_controller = this._webgl_controller || new WebGLController(this));\n\t}\n\n\tconstructor(protected _container: HTMLElement, protected _scene: PolyScene, camera_node: BaseCameraObjNodeType) {\n\t\tthis._display_scene = this._scene.default_scene;\n\t\tthis._init_from_scene(camera_node).then(() => {\n\t\t\tthis._build();\n\t\t});\n\t}\n\tget container() {\n\t\treturn this._container;\n\t}\n\tget scene() {\n\t\treturn this._scene;\n\t}\n\tget canvas() {\n\t\treturn this._canvas;\n\t}\n\n\tprivate async _init_from_scene(camera_node: BaseCameraObjNodeType) {\n\t\tawait this.cameras_controller.set_camera_node(camera_node || this._scene.cameras_controller.master_camera_node);\n\t\t// await this.update_picker_nodes(); // TODO: typescript\n\t}\n\tprotected abstract _build(): void;\n\n\t// html container class\n\treset_container_class() {\n\t\tthis.container.classList.remove(HOVERED_CLASS_NAME);\n\t}\n\tset_container_class_hovered() {\n\t\tthis.container.classList.add(HOVERED_CLASS_NAME);\n\t}\n}\n","// import {Camera} from 'three/src/cameras/Camera';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {BaseCameraObjNodeType} from '../../nodes/obj/_BaseCamera';\nimport {BaseViewer} from '../_Base';\nimport {CoreGraphNode} from '../../../core/graph/CoreGraphNode';\n\nexport class CamerasController {\n\t// private _is_active: boolean = false;\n\tprivate _camera_node: BaseCameraObjNodeType | null = null;\n\t// private _camera: Camera;\n\n\tprivate _size: Vector2 = new Vector2(100, 100);\n\tprivate _aspect: number = 1;\n\t// private current_camera_controls_node_graph_id: number = null;\n\n\tconstructor(private viewer: BaseViewer) {}\n\n\t// activate() {\n\t// \tthis._is_active = true;\n\t// }\n\tasync set_camera_node(camera_node: BaseCameraObjNodeType) {\n\t\tif (!this._camera_node || camera_node.graph_node_id != this._camera_node.graph_node_id) {\n\t\t\tthis._camera_node = camera_node;\n\t\t\t// this._camera = camera_node.object;\n\t\t\tthis._update_graph_node();\n\t\t\tawait this.viewer.controls_controller.create_controls();\n\t\t}\n\t}\n\tprivate _graph_node: CoreGraphNode | undefined;\n\tprivate _update_graph_node() {\n\t\tif (!this._camera_node) {\n\t\t\treturn;\n\t\t}\n\t\tconst controls_param = this._camera_node.params.get_operator_path('controls');\n\t\tif (!controls_param) {\n\t\t\treturn;\n\t\t}\n\t\tthis._graph_node = this._graph_node || this._create_graph_node();\n\t\tif (!this._graph_node) {\n\t\t\treturn;\n\t\t}\n\t\tthis._graph_node.graph_disconnect_predecessors();\n\t\tthis._graph_node.add_graph_input(controls_param);\n\t}\n\tprivate _create_graph_node() {\n\t\tif (!this._camera_node) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst node = new CoreGraphNode(this._camera_node.scene, 'viewer-controls');\n\t\tnode.add_post_dirty_hook('this.viewer.controls_controller', async () => {\n\t\t\tawait this.viewer.controls_controller.create_controls();\n\t\t});\n\t\treturn node;\n\t}\n\n\tget camera_node() {\n\t\treturn this._camera_node;\n\t}\n\tget size() {\n\t\treturn this._size;\n\t}\n\tget aspect() {\n\t\treturn this._aspect;\n\t}\n\n\ton_resize() {\n\t\tif (!this.viewer.canvas) {\n\t\t\treturn;\n\t\t}\n\t\tthis.compute_size_and_aspect();\n\t\tthis._camera_node?.post_process_controller.set_renderer_size(this.viewer.canvas, this._size);\n\t\tthis.update_camera_aspect();\n\t}\n\tcompute_size_and_aspect() {\n\t\tthis._update_size();\n\t\tthis._camera_node?.scene.uniforms_controller.update_resolution_dependent_uniform_owners(this._size);\n\t\tthis._aspect = this._get_aspect();\n\t}\n\n\tprivate _update_size() {\n\t\tthis._size.x = this.viewer.container.offsetWidth;\n\t\tthis._size.y = this.viewer.container.offsetHeight;\n\t}\n\tprivate _get_aspect(): number {\n\t\treturn this._size.x / this._size.y;\n\t}\n\n\tupdate_camera_aspect() {\n\t\tthis._camera_node?.setup_for_aspect_ratio(this._aspect);\n\t}\n\t// dispose_camera: ->\n\t// \tthis.$emit('before_controls_apply', null)\n\t// \t// if @_controls?\n\t// \t// \t@_controls.dispose()\n\t// \t// camera_graph_node_id ?= this.current_camera_node_graph_id\n\t// \t// camera_node = this.$store.scene.graph().node_from_id(camera_graph_node_id)\n\t// \t// this.current_camera_node.dipose_controls()\n\t// \t//if this.current_camera_node?\n\t// \t//\tthis.current_camera_node.dispose_controls()\n\tasync prepare_current_camera() {\n\t\tif (this._camera_node) {\n\t\t\t// we dispose the controls first, so they can be applied\n\t\t\t// if they were not disposed properly when we closed the viewer\n\t\t\t// but I'm now trying in the destroyed callback\n\t\t\t//this.current_camera_node.dispose_controls()\n\n\t\t\t//this.current_camera_node.apply_controls()\n\t\t\t//this.current_camera_node.prepare_for_viewer(this.aspect())\n\t\t\t// const name = this.current_camera_node.name()\n\t\t\t// const graph_node_id = this._camera_node.graph_node_id\n\t\t\t/*const container = */ await this._camera_node.request_container(); // ensure the camera is cooked\n\t\t\tawait this._update_from_camera_container(); //container, graph_node_id)\n\t\t}\n\t}\n\t// remove_cloned_camera: ->\n\t// \tif @_current_camera?\n\t// \t\t@_current_camera.camera_source.node.remove_clone(@_current_camera)\n\n\tasync _update_from_camera_container() {\n\t\t//container, graph_node_id:number){\n\t\t// ensure that we get the same as we requested\n\t\t// if(graph_node_id == this._camera_node.graph_node_id){\n\n\t\t// this.remove_cloned_camera()\n\t\t// cloned_camera = this.current_camera_node.clone_camera()\n\t\t// @_current_camera = cloned_camera\n\t\tthis.update_camera_aspect();\n\n\t\t//this.dispose_camera()\n\n\t\t// @_is_active is use to check if the component has been destroyed\n\t\t// which can happen on app load, but also when user switches the camera menu\n\n\t\t// if this.current_camera_controls_node_graph_id == null || ()\n\n\t\t// if(@_is_active == true)\n\t\tawait this.viewer.controls_controller.create_controls();\n\n\t\t// }\n\t}\n}\n","import {BaseViewer} from '../_Base';\nimport {CameraControls} from '../../nodes/event/_BaseCameraControls';\n\nexport class ControlsController {\n\tprotected _active: boolean = false;\n\tprotected _controls: CameraControls | null = null;\n\t_bound_on_controls_start: () => void = this._on_controls_start.bind(this);\n\t_bound_on_controls_end: () => void = this._on_controls_end.bind(this);\n\tconstructor(private viewer: BaseViewer) {}\n\n\tget active() {\n\t\treturn this._active;\n\t}\n\tget camera_node() {\n\t\treturn this.viewer.cameras_controller.camera_node;\n\t}\n\tget controls() {\n\t\treturn this._controls;\n\t}\n\n\tasync create_controls() {\n\t\tthis.dispose_controls();\n\n\t\tif (!this.viewer.canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst config = await this.camera_node?.controls_controller.apply_controls(this.viewer.canvas);\n\t\tif (config) {\n\t\t\t// this.current_camera_controls_node_graph_id = config.camera_controls_node_id()\n\t\t\tthis._controls = config.controls;\n\t\t\t// this._controls_node = config.controls_node()\n\n\t\t\tif (this._controls) {\n\t\t\t\tif (this.viewer.active) {\n\t\t\t\t\tthis._controls.addEventListener('start', this._bound_on_controls_start);\n\t\t\t\t\tthis._controls.addEventListener('end', this._bound_on_controls_end);\n\t\t\t\t} else {\n\t\t\t\t\tthis.dispose_controls();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// test in case @_is_active has changed\n\t\t\t// if (this._is_active != true && this._controls){\n\t\t\t// \tthis._dispose_controls()\n\n\t\t\t// }\n\t\t\t// TODO\n\t\t\t// we have to reassign the camera here, as this method is called twice\n\t\t\t// and the first time without the controls being present apparently.. (more tests needed)\n\t\t\t// CURRENT ANSWER: the method this.prepare_current_camera() is called twice on app load\n\t\t\t// which only cause problems when switching back to perspective.\n\t\t\t// @_current_camera = cloned_camera\n\t\t\t//@_controls = controls\n\t\t\t// this.$emit('before_controls_apply', controls)\n\t\t}\n\t}\n\tupdate() {\n\t\tif (this._controls) {\n\t\t\tthis._controls.update();\n\t\t}\n\t}\n\n\tdispose_controls() {\n\t\tif (this._controls) {\n\t\t\tif (this.viewer.canvas) {\n\t\t\t\tthis.camera_node?.controls_controller.dispose_controls(this.viewer.canvas);\n\t\t\t}\n\n\t\t\tif (this._bound_on_controls_start) {\n\t\t\t\tthis._controls.removeEventListener('start', this._bound_on_controls_start);\n\t\t\t}\n\t\t\tif (this._bound_on_controls_end) {\n\t\t\t\tthis._controls.removeEventListener('end', this._bound_on_controls_end);\n\t\t\t}\n\n\t\t\tthis._controls.dispose();\n\t\t\tthis._controls = null;\n\t\t}\n\t}\n\tprivate _on_controls_start() {\n\t\tthis._active = true;\n\t}\n\tprivate _on_controls_end() {\n\t\tthis._active = false;\n\t}\n}\n","import {BaseViewer} from '../_Base';\n// import {Vector2} from 'three/src/math/Vector2';\n\n// const DIST_UNINITIALIZED = -1;\ntype MouseOrTouchEvent = MouseEvent | TouchEvent;\ntype MouseOrTouchEventCallback = (e: MouseOrTouchEvent) => void;\n\nexport class ViewerEventsController {\n\t// private _mousedown_pos = new Vector2();\n\t// private _mouse_distance_travelled: number = DIST_UNINITIALIZED;\n\tprotected _bound_on_mousedown: MouseOrTouchEventCallback = this._on_mousedown.bind(this);\n\tprotected _bound_on_mousemove: MouseOrTouchEventCallback = this._on_mousemove.bind(this);\n\tprotected _bound_on_mouseup: MouseOrTouchEventCallback = this._on_mouseup.bind(this);\n\t// protected _bound_on_click: MouseEventCallback\n\n\tconstructor(protected viewer: BaseViewer) {}\n\n\tget camera_node() {\n\t\treturn this.viewer.cameras_controller.camera_node;\n\t}\n\tget canvas() {\n\t\treturn this.viewer.canvas;\n\t}\n\n\tinit() {\n\t\tif (!this.canvas) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._bound_on_mousedown) {\n\t\t\tthis.canvas.removeEventListener('mousedown', this._bound_on_mousedown);\n\t\t}\n\t\tif (this._bound_on_mousemove) {\n\t\t\tthis.canvas.removeEventListener('mousemove', this._bound_on_mousemove);\n\t\t}\n\t\tif (this._bound_on_mouseup) {\n\t\t\tthis.canvas.removeEventListener('mouseup', this._bound_on_mouseup);\n\t\t}\n\t\tthis._bound_on_mousedown = this._bound_on_mousedown || this._on_mousedown.bind(this);\n\t\tthis._bound_on_mousemove = this._bound_on_mousemove || this._on_mousemove.bind(this);\n\t\tthis._bound_on_mouseup = this._bound_on_mouseup || this._on_mouseup.bind(this);\n\n\t\tthis.canvas.addEventListener('mousedown', this._bound_on_mousedown);\n\t\tthis.canvas.addEventListener('mousemove', this._bound_on_mousemove);\n\t\tthis.canvas.addEventListener('mouseup', this._bound_on_mouseup);\n\n\t\t// this._bound_on_touchmove = this._bound_on_touchmove || this._on_touchmove.bind(this)\n\t\tthis.canvas.addEventListener('touchstart', this._bound_on_mousedown, false);\n\t\tthis.canvas.addEventListener('touchmove', this._bound_on_mousemove, false);\n\t\tthis.canvas.addEventListener('touchend', this._bound_on_mouseup, false);\n\t\tthis.canvas.addEventListener('touchcancel', this._bound_on_mouseup, false);\n\t}\n\n\tprotected _on_mousedown(event: MouseOrTouchEvent) {\n\t\tthis.viewer.scene.events_controller.process_event(event, this.canvas!, this.camera_node!);\n\n\t\t// this._mouse_distance_travelled = 0;\n\t\t// if (event instanceof MouseEvent) {\n\t\t// \tthis._mousedown_pos.x = event.pageX;\n\t\t// \tthis._mousedown_pos.y = event.pageY;\n\t\t// } else {\n\t\t// \tconst touch = event.touches[0];\n\t\t// \tthis._mousedown_pos.x = touch.pageX;\n\t\t// \tthis._mousedown_pos.y = touch.pageY;\n\t\t// }\n\t}\n\n\tprotected _on_mousemove(event: MouseOrTouchEvent) {\n\t\tthis.viewer.scene.events_controller.process_event(event, this.canvas!, this.camera_node!);\n\t\t// if (this._mouse_distance_travelled !== DIST_UNINITIALIZED) {\n\t\t// \tlet distance: number = 0;\n\t\t// \tif (event instanceof MouseEvent) {\n\t\t// \t\tdistance = event.pageX - this._mousedown_pos.x + (event.pageY - this._mousedown_pos.y);\n\t\t// \t} else {\n\t\t// \t\tconst touch = event.touches[0];\n\t\t// \t\tdistance = touch.pageX - this._mousedown_pos.x + (touch.pageY - this._mousedown_pos.y);\n\t\t// \t}\n\t\t// \tthis._mouse_distance_travelled += Math.abs(distance);\n\t\t// }\n\n\t\t// if (!this.viewer.controls_controller.active) {\n\t\t// \t// this.viewer.process_picker_nodes_on_mouse_move(event, this.camera_node, this.ray_helper);\n\t\t// }\n\t}\n\n\tprotected _on_mouseup(event: MouseOrTouchEvent) {\n\t\tthis.viewer.scene.events_controller.process_event(event, this.canvas!, this.camera_node!);\n\t\t// if (this._mouse_distance_travelled < 2) {\n\t\t// \t// this.viewer.process_picker_nodes_on_click(event, this.camera_node, this.ray_helper);\n\t\t// }\n\t\t// this._mouse_distance_travelled = DIST_UNINITIALIZED;\n\t}\n}\n","import {BaseViewer} from '../_Base';\n\nexport class WebGLController {\n\tpublic request_animation_frame_id: number | undefined;\n\n\tconstructor(protected viewer: BaseViewer) {}\n\n\tinit() {\n\t\tconst canvas = this.viewer.canvas;\n\t\tif (canvas) {\n\t\t\tcanvas.onwebglcontextlost = this._on_webglcontextlost.bind(this);\n\t\t\tcanvas.onwebglcontextrestored = this._on_webglcontextrestored.bind(this);\n\t\t}\n\t}\n\n\tprotected _on_webglcontextlost() {\n\t\tconsole.warn('context lost at frame', this.viewer.scene.frame);\n\t\t// event.preventDefault();\n\t\tif (this.request_animation_frame_id) {\n\t\t\tcancelAnimationFrame(this.request_animation_frame_id);\n\t\t} else {\n\t\t\tconsole.warn('request_animation_frame_id not initialized');\n\t\t}\n\t\tconsole.warn('not canceled', this.request_animation_frame_id);\n\t}\n\tprotected _on_webglcontextrestored() {\n\t\tconsole.log('context restored');\n\t}\n}\n","import {BaseBackgroundController} from './_BaseController';\n\nimport lodash_isNaN from 'lodash/isNaN';\n\nexport class OrthographicCameraBackgroundController extends BaseBackgroundController {\n\tprotected update_screen_quad() {\n\t\tconst quad = this.screen_quad;\n\n\t\tlet width = this.node.params.float('size');\n\t\tlet height = width;\n\n\t\tconst far = this.node.params.float('far');\n\t\tif (far && !lodash_isNaN(width) && !lodash_isNaN(height)) {\n\t\t\tquad.scale.x = width;\n\t\t\tquad.scale.y = height;\n\t\t\tquad.position.z = -0.9999 * far; //.copy(this._bg_center)\n\t\t}\n\t}\n}\n","// import lodash_clamp from 'lodash/clamp';\n// import {Vector2} from 'three/src/math/Vector2';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {TypedCameraObjNode, BASE_CAMERA_DEFAULT, CameraTransformParamConfig} from './_BaseCamera';\nimport {PerspectiveCameraBackgroundController} from './utils/cameras/background/PerspectiveCameraController';\n// import {NodeParamsConfig} from '../utils/params/ParamsConfig';\n\nconst DEFAULT = {\n\tfov: 50,\n};\n\n// const EVENT_CHANGE = { type: 'change' };\nimport {ParamConfig, NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {CameraPostProcessParamConfig} from './utils/cameras/PostProcessController';\nimport {CameraBackgroundParamConfig} from './utils/cameras/background/_BaseController';\nimport {LayerParamConfig} from './utils/LayersController';\nimport {TransformedParamConfig} from './utils/TransformController';\nexport function PerspectiveCameraObjParamConfigMixin<TBase extends Constructor>(Base: TBase) {\n\treturn class Mixin extends Base {\n\t\tfov = ParamConfig.FLOAT(DEFAULT.fov, {range: [0, 100]});\n\t\t// vertical_fov_range = ParamConfig.VECTOR2([0, 100], {visible_if: {lock_width: 1}});\n\t\t// horizontal_fov_range = ParamConfig.VECTOR2([0, 100], {visible_if: {lock_width: 0}});\n\t};\n}\nclass PerspectiveCameraObjParamConfig extends CameraPostProcessParamConfig(\n\tCameraBackgroundParamConfig(\n\t\tTransformedParamConfig(\n\t\t\tLayerParamConfig(PerspectiveCameraObjParamConfigMixin(CameraTransformParamConfig(NodeParamsConfig)))\n\t\t)\n\t)\n) {}\nconst ParamsConfig = new PerspectiveCameraObjParamConfig();\n\nexport class PerspectiveCameraObjNode extends TypedCameraObjNode<PerspectiveCamera, PerspectiveCameraObjParamConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'perspective_camera';\n\t}\n\n\tprotected get background_controller_constructor() {\n\t\treturn PerspectiveCameraBackgroundController;\n\t}\n\n\tcreate_object() {\n\t\treturn new PerspectiveCamera(DEFAULT.fov, 1, BASE_CAMERA_DEFAULT.near, BASE_CAMERA_DEFAULT.far);\n\t}\n\n\t// create_params() {\n\t// \t// this.create_common_params();\n\t// \t// this.within_param_folder('render', () => {\n\t// \t// this.add_param(ParamType.FLOAT, 'fov', DEFAULT.fov, {\n\t// \t// \trange: [0, 180],\n\t// \t// \trange_locked: [true, true],\n\t// \t// });\n\t// \t// this.add_param(ParamType.VECTOR2, 'vertical_fov_range', [0, 100], {visible_if: {lock_width: 1}});\n\t// \t// this.add_param(ParamType.VECTOR2, 'horizontal_fov_range', [0, 100], {visible_if: {lock_width: 0}});\n\t// \t// this.create_player_camera_params();\n\t// \t// });\n\t// }\n\n\tupdate_camera() {\n\t\tif (this._object.fov != this.pv.fov) {\n\t\t\tthis._object.fov = this.pv.fov;\n\t\t\tthis._object.updateProjectionMatrix();\n\t\t}\n\t\tthis._update_for_aspect_ratio();\n\t}\n\n\tprotected _update_for_aspect_ratio() {\n\t\tif (this._aspect) {\n\t\t\t// let lock_width = true;//this.pv.lock_width;\n\n\t\t\tthis._object.aspect = this._aspect;\n\t\t\t// if (lock_width) {\n\t\t\t// \tconst other_fov = this.pv.fov / this._aspect;\n\t\t\t// \tthis._object.zoom = this.get_zoom(this._aspect, other_fov, this.pv.vertical_fov_range);\n\t\t\t// } else {\n\t\t\t// \tthis._object.zoom = 1;\n\t\t\t// }\n\t\t\tthis._object.updateProjectionMatrix();\n\t\t}\n\t}\n\t// private get_zoom(start_zoom: number, other_fov: number, range: Vector2) {\n\t// \tlet zoom = start_zoom;\n\t// \tif (range) {\n\t// \t\tif (other_fov < range.x || other_fov > range.y) {\n\t// \t\t\tconst new_other_fov = lodash_clamp(other_fov, range.x, range.y);\n\t// \t\t\tzoom = start_zoom * (other_fov / new_other_fov);\n\t// \t\t\t// zoom = Math.min(start_zoom, zoom)\n\t// \t\t}\n\t// \t}\n\t// \treturn zoom;\n\t// }\n}\n","import {BaseBackgroundController} from './_BaseController';\n\nimport {Vector3} from 'three/src/math/Vector3';\nimport lodash_isNaN from 'lodash/isNaN';\nimport lodash_sum from 'lodash/sum';\n// import { Vector2 } from 'three';\n\n// enum CornerNames {\n// \tbl = 'bl',\n// \tbr = 'br',\n// \ttl = 'tl',\n// \ttr = 'tr',\n// }\ninterface Corners2D {\n\tbl: Vector2Like;\n\tbr: Vector2Like;\n\ttl: Vector2Like;\n\ttr: Vector2Like;\n}\ninterface Corners3D {\n\tbl: Vector3;\n\tbr: Vector3;\n\ttl: Vector3;\n\ttr: Vector3;\n}\nconst SCREEN_COORD: Corners2D = {\n\tbl: {x: -1, y: -1},\n\tbr: {x: +1, y: -1},\n\ttl: {x: -1, y: +1},\n\ttr: {x: +1, y: +1},\n};\nconst CORNER_NAMES: Array<keyof Corners3D> = ['bl', 'br', 'tl', 'tr'];\n\nexport class PerspectiveCameraBackgroundController extends BaseBackgroundController {\n\tprivate _bg_corner: Corners3D = {\n\t\tbl: new Vector3(),\n\t\tbr: new Vector3(),\n\t\ttl: new Vector3(),\n\t\ttr: new Vector3(),\n\t};\n\tprivate _bg_center = new Vector3();\n\n\tprotected update_screen_quad() {\n\t\tconst quad = this.screen_quad;\n\n\t\tfor (let corner_name of CORNER_NAMES) {\n\t\t\tthis._update_corner_vector(this._bg_corner[corner_name], SCREEN_COORD[corner_name]);\n\t\t}\n\t\tlet width = this._bg_corner.bl.distanceTo(this._bg_corner.br);\n\t\tlet height = this._bg_corner.bl.distanceTo(this._bg_corner.tl);\n\n\t\tthis._bg_center.x = lodash_sum(CORNER_NAMES.map((name) => this._bg_corner[name].x)) / 4;\n\t\tthis._bg_center.y = lodash_sum(CORNER_NAMES.map((name) => this._bg_corner[name].y)) / 4;\n\t\tthis._bg_center.z = lodash_sum(CORNER_NAMES.map((name) => this._bg_corner[name].z)) / 4;\n\n\t\tconst far = this.node.params.float('far');\n\t\tconst background_ratio = this.node.params.float('background_ratio');\n\t\tif (far && !lodash_isNaN(width) && !lodash_isNaN(height)) {\n\t\t\tconst z = this._bg_center.distanceTo(this.node.object.position);\n\t\t\tconst z_ratio = far / z;\n\t\t\tconst desired_ratio = background_ratio || 1;\n\n\t\t\tif (width > height) {\n\t\t\t\theight = width / desired_ratio;\n\t\t\t} else {\n\t\t\t\theight = width * desired_ratio;\n\t\t\t}\n\n\t\t\tquad.scale.x = width * z_ratio;\n\t\t\tquad.scale.y = height * z_ratio;\n\t\t\tquad.position.z = -0.9999 * far; //.copy(this._bg_center)\n\t\t}\n\t}\n\t_update_corner_vector(vector: Vector3, coord: Vector2Like) {\n\t\tthis._bg_raycaster.setFromCamera(coord, this.node.object);\n\t\tvector\n\t\t\t.copy(this._bg_raycaster.ray.direction)\n\t\t\t.multiplyScalar(this.node.params.float('far'))\n\t\t\t.add(this._bg_raycaster.ray.origin);\n\t}\n}\n","import {CATEGORY_SOP} from './Category';\n\nimport {AddSopNode} from '../../nodes/sop/Add';\nimport {AnimationCopySopNode} from '../../nodes/sop/AnimationCopy';\nimport {AnimationMixerSopNode} from '../../nodes/sop/AnimationMixer';\nimport {AttribAddMultSopNode} from '../../nodes/sop/AttribAddMult';\nimport {AttribCopySopNode} from '../../nodes/sop/AttribCopy';\nimport {AttribCreateSopNode} from '../../nodes/sop/AttribCreate';\nimport {AttribDeleteSopNode} from '../../nodes/sop/AttribDelete';\nimport {AttribNormalizeSopNode} from '../../nodes/sop/AttribNormalize';\nimport {AttribPromoteSopNode} from '../../nodes/sop/AttribPromote';\nimport {AttribRemapSopNode} from '../../nodes/sop/AttribRemap';\nimport {AttribRenameSopNode} from '../../nodes/sop/AttribRename';\nimport {AttribTransferSopNode} from '../../nodes/sop/AttribTransfer';\nimport {BboxScatterSopNode} from '../../nodes/sop/BboxScatter';\nimport {BlendSopNode} from '../../nodes/sop/Blend';\nimport {BoxSopNode} from '../../nodes/sop/Box';\nimport {CacheSopNode} from '../../nodes/sop/Cache';\nimport {CircleSopNode} from '../../nodes/sop/Circle';\nimport {CodeSopNode} from '../../nodes/sop/Code';\nimport {ColorSopNode} from '../../nodes/sop/Color';\nimport {ConeSopNode} from '../../nodes/sop/Cone';\nimport {CopySopNode} from '../../nodes/sop/Copy';\nimport {DataSopNode} from '../../nodes/sop/Data';\nimport {DataUrlSopNode} from '../../nodes/sop/DataUrl';\nimport {DelaySopNode} from '../../nodes/sop/Delay';\nimport {DeleteSopNode} from '../../nodes/sop/Delete';\nimport {FaceSopNode} from '../../nodes/sop/Face';\nimport {FileSopNode} from '../../nodes/sop/File';\nimport {FuseSopNode} from '../../nodes/sop/Fuse';\nimport {HexagonsSopNode} from '../../nodes/sop/Hexagons';\nimport {HierarchySopNode} from '../../nodes/sop/Hierarchy';\n// TODO: heightmap\nimport {InstanceSopNode} from '../../nodes/sop/Instance';\nimport {JitterSopNode} from '../../nodes/sop/Jitter';\nimport {LayerSopNode} from '../../nodes/sop/Layer';\nimport {LineSopNode} from '../../nodes/sop/Line';\nimport {MaterialSopNode} from '../../nodes/sop/Material';\nimport {MergeSopNode} from '../../nodes/sop/Merge';\nimport {NoiseSopNode} from '../../nodes/sop/Noise';\nimport {NormalsSopNode} from '../../nodes/sop/Normals';\nimport {NullSopNode} from '../../nodes/sop/Null';\nimport {ObjectMergeSopNode} from '../../nodes/sop/ObjectMerge';\nimport {OcclusionSopNode} from '../../nodes/sop/Occlusion';\nimport {ParticlesSystemGpuSopNode} from '../../nodes/sop/ParticlesSystemGpu';\nimport {PeakSopNode} from '../../nodes/sop/Peak';\nimport {PlaneSopNode} from '../../nodes/sop/Plane';\nimport {PointSopNode} from '../../nodes/sop/Point';\nimport {PolywireSopNode} from '../../nodes/sop/Polywire';\nimport {RaySopNode} from '../../nodes/sop/Ray';\nimport {ResampleSopNode} from '../../nodes/sop/Resample';\nimport {ScatterSopNode} from '../../nodes/sop/Scatter';\nimport {ShadowsSopNode} from '../../nodes/sop/Shadows';\nimport {SkinSopNode} from '../../nodes/sop/Skin';\nimport {SphereSopNode} from '../../nodes/sop/Sphere';\nimport {SwitchSopNode} from '../../nodes/sop/Switch';\nimport {TextSopNode} from '../../nodes/sop/Text';\nimport {TorusSopNode} from '../../nodes/sop/Torus';\nimport {TorusKnotSopNode} from '../../nodes/sop/TorusKnot';\nimport {TransformSopNode} from '../../nodes/sop/Transform';\nimport {TubeSopNode} from '../../nodes/sop/Tube';\nimport {UvProjectSopNode} from '../../nodes/sop/UvProject';\n\nexport interface GeoNodeChildrenMap {\n\tadd: AddSopNode;\n\tanimation_copy: AnimationCopySopNode;\n\tanimation_mixer: AnimationMixerSopNode;\n\tattrib_add_mult: AttribAddMultSopNode;\n\tattrib_copy: AttribCopySopNode;\n\tattrib_create: AttribCreateSopNode;\n\tattrib_delete: AttribDeleteSopNode;\n\tattrib_normalize: AttribNormalizeSopNode;\n\tattrib_promote: AttribPromoteSopNode;\n\tattrib_remap: AttribRemapSopNode;\n\tattrib_rename: AttribRenameSopNode;\n\tattrib_transfer: AttribTransferSopNode;\n\tbbox_scatter: BboxScatterSopNode;\n\tblend: BlendSopNode;\n\tbox: BoxSopNode;\n\tcache: CacheSopNode;\n\tcircle: CircleSopNode;\n\tcode: CodeSopNode;\n\tcolor: ColorSopNode;\n\tcopy: CopySopNode;\n\tdata: DataSopNode;\n\tdata_url: DataUrlSopNode;\n\tdelay: DelaySopNode;\n\tdelete: DeleteSopNode;\n\tface: FaceSopNode;\n\tfile: FileSopNode;\n\tfuse: FuseSopNode;\n\thexagons: HexagonsSopNode;\n\thierarchy: HierarchySopNode;\n\tinstance: InstanceSopNode;\n\tjitter: JitterSopNode;\n\tlayer: LayerSopNode;\n\tline: LineSopNode;\n\tmaterial: MaterialSopNode;\n\tmerge: MergeSopNode;\n\tnoise: NoiseSopNode;\n\tnormals: NormalsSopNode;\n\tnull: NullSopNode;\n\tobject_merge: ObjectMergeSopNode;\n\tocclusion: OcclusionSopNode;\n\tparticles_system_gpu: ParticlesSystemGpuSopNode;\n\tpeak: PeakSopNode;\n\tplane: PlaneSopNode;\n\tpoint: PointSopNode;\n\tpolywire: PolywireSopNode;\n\tray: RaySopNode;\n\tresample: ResampleSopNode;\n\tscatter: ScatterSopNode;\n\tshadows: ShadowsSopNode;\n\tskin: SkinSopNode;\n\tsphere: SphereSopNode;\n\tswitch: SwitchSopNode;\n\ttext: TextSopNode;\n\ttorus: TorusSopNode;\n\ttorus_knot: TorusKnotSopNode;\n\ttransform: TransformSopNode;\n\ttube: TubeSopNode;\n\tuv_project: UvProjectSopNode;\n}\n\nimport {Poly} from '../../Poly';\nexport class SopRegister {\n\tstatic run(poly: Poly) {\n\t\tpoly.register_node(AddSopNode, CATEGORY_SOP.INPUT);\n\t\tpoly.register_node(AnimationCopySopNode, CATEGORY_SOP.ANIMATION);\n\t\tpoly.register_node(AnimationMixerSopNode, CATEGORY_SOP.ANIMATION);\n\t\tpoly.register_node(AttribAddMultSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribCopySopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribCreateSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribDeleteSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribNormalizeSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribPromoteSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribRemapSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribRenameSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(AttribTransferSopNode, CATEGORY_SOP.ATTRIBUTE);\n\t\tpoly.register_node(BboxScatterSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(BlendSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(BoxSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(CacheSopNode, CATEGORY_SOP.MISC);\n\t\tpoly.register_node(CodeSopNode, CATEGORY_SOP.ADVANCED);\n\t\tpoly.register_node(CircleSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(ColorSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(ConeSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(CopySopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(DataSopNode, CATEGORY_SOP.INPUT);\n\t\tpoly.register_node(DataUrlSopNode, CATEGORY_SOP.INPUT);\n\t\tpoly.register_node(DelaySopNode, CATEGORY_SOP.MISC);\n\t\tpoly.register_node(DeleteSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(FaceSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(FileSopNode, CATEGORY_SOP.INPUT);\n\t\tpoly.register_node(FuseSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(HexagonsSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(HierarchySopNode, CATEGORY_SOP.MISC);\n\t\tpoly.register_node(InstanceSopNode, CATEGORY_SOP.RENDER);\n\t\tpoly.register_node(JitterSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(LayerSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(LineSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(MaterialSopNode, CATEGORY_SOP.RENDER);\n\t\tpoly.register_node(MergeSopNode, CATEGORY_SOP.MISC);\n\t\tpoly.register_node(NoiseSopNode, CATEGORY_SOP.MISC);\n\t\tpoly.register_node(NormalsSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(NullSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(ObjectMergeSopNode, CATEGORY_SOP.INPUT);\n\t\tpoly.register_node(OcclusionSopNode, CATEGORY_SOP.RENDER);\n\t\tpoly.register_node(ParticlesSystemGpuSopNode, CATEGORY_SOP.DYNAMICS);\n\t\tpoly.register_node(PeakSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(PlaneSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(PointSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(PolywireSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(RaySopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(ResampleSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(ScatterSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(SkinSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(ShadowsSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(SphereSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(SwitchSopNode, CATEGORY_SOP.MISC);\n\t\tpoly.register_node(TextSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(TorusSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(TorusKnotSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(TransformSopNode, CATEGORY_SOP.MODIFIER);\n\t\tpoly.register_node(TubeSopNode, CATEGORY_SOP.PRIMITIVES);\n\t\tpoly.register_node(UvProjectSopNode, CATEGORY_SOP.MODIFIER);\n\t}\n}\n","// import lodash_flatten from 'lodash/flatten';\n// import lodash_last from 'lodash/last';\nimport lodash_times from 'lodash/times';\nimport {Object3D} from 'three/src/core/Object3D';\n// import {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {TypedSopNode} from './_Base';\n// import {Core} from '../../../Core/_Module';\nimport {CoreConstant} from '../../../core/geometry/Constant';\nimport {CoreGroup} from '../../../core/geometry/Group';\n// import {CoreGeometryUtilShape} from '../../../core/geometry/util/Shape';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AddSopParamsConfig extends NodeParamsConfig {\n\tcreate_point = ParamConfig.BOOLEAN(1);\n\tpoints_count = ParamConfig.INTEGER(1, {\n\t\trange: [1, 100],\n\t\trange_locked: [true, false],\n\t\tvisible_if: {create_point: true},\n\t});\n\tposition = ParamConfig.VECTOR3([0, 0, 0], {visible_if: {create_point: true}});\n\t// create_polygon = ParamConfig.BOOLEAN(0);\n\topen = ParamConfig.BOOLEAN(0);\n\tconnect_to_last_point = ParamConfig.BOOLEAN(0);\n}\nconst ParamsConfig = new AddSopParamsConfig();\n\nexport class AddSopNode extends TypedSopNode<AddSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'add';\n\t}\n\t_objects: Object3D[] | undefined;\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to create polygons from (optional)'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tthis._objects = [];\n\t\tthis._create_point();\n\t\t// if (this.pv.create_polygon) {\n\t\t// \tthis._create_polygon(input_contents[0]);\n\t\t// }\n\n\t\tthis.set_objects(this._objects);\n\t}\n\n\tprivate _create_point() {\n\t\tif (this.pv.create_point) {\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst positions: number[] = [];\n\t\t\tlodash_times(this.pv.points_count, (i) => {\n\t\t\t\tthis.pv.position.toArray(positions, i * 3);\n\t\t\t});\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(new Float32Array(positions), 3));\n\t\t\tconst object = this.create_object(geometry, CoreConstant.OBJECT_TYPE.POINTS);\n\n\t\t\tif (this._objects) {\n\t\t\t\tthis._objects.push(object);\n\t\t\t}\n\t\t}\n\t}\n\n\t// private _create_polygon(core_group: CoreGroup) {\n\t// \tconst points = core_group.points();\n\t// \tconst is_polygon_closed = !this.pv.open && points.length >= 3;\n\t// \tif (points.length > 0) {\n\t// \t\tif (is_polygon_closed) {\n\t// \t\t\tthis._create_polygon_closed(core_group);\n\t// \t\t} else {\n\t// \t\t\tthis._create_polygon_open(core_group);\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t// _create_polygon_closed(core_group: CoreGroup) {\n\t// \tconst points = core_group.points();\n\n\t// \tconst geometry = CoreGeometryUtilShape.geometry_from_points(points);\n\t// \tconst object = this.create_object(geometry);\n\t// \tthis._objects.push(object);\n\t// }\n\n\t// _create_polygon_open(core_group:CoreGroup) {\n\t// \tconst points = core_group.points();\n\n\t// \tlet positions:number[][] = [];\n\t// \tconst indices:number[] = [];\n\t// \tpoints.forEach((point, i) => {\n\t// \t\tpoint.position().toArray(positions, i * 3);\n\t// \t\t// positions.push(point.position().toArray());\n\n\t// \t\tif (i > 0) {\n\t// \t\t\tindices.push(i - 1);\n\t// \t\t\tindices.push(i);\n\t// \t\t}\n\t// \t});\n\n\t// \tif (points.length > 2 && this.pv.connect_to_last_point) {\n\t// \t\tpositions.push(points[0].position().toArray());\n\t// \t\tindices.push(lodash_last(indices));\n\t// \t\tindices.push(0);\n\t// \t}\n\n\t// \tpositions = lodash_flatten(positions);\n\t// \tconst geometry = new BufferGeometry();\n\t// \tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t// \tgeometry.setIndex(indices);\n\t// \tconst object = this.create_object(geometry, CoreConstant.OBJECT_TYPE.LINE_SEGMENTS);\n\t// \tthis._objects.push(object);\n\t// }\n}\n","import lodash_sum from 'lodash/sum';\n\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Triangle} from 'three/src/math/Triangle';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\n// const THREE = {BufferGeometry, Triangle, Vector2, Vector3}\nimport {CorePoint} from './Point';\nimport {CoreGeometry} from './Geometry';\nimport {CoreMath} from '../math/_Module';\n// import {CoreInterpolate} from '../Math/Interpolate'\n\ninterface FaceLike {\n\ta: number;\n\tb: number;\n\tc: number;\n}\n\ntype CorePointArray3 = [CorePoint, CorePoint, CorePoint];\ntype Vector3Array2 = [Vector3, Vector3];\ntype Vector3Array3 = [Vector3, Vector3, Vector3];\n\nexport class CoreFace {\n\t_geometry: BufferGeometry;\n\t_points: CorePointArray3 | undefined;\n\t_triangle: Triangle | undefined;\n\t_positions: Vector3Array3 | undefined;\n\t_deltas: Vector3Array2 | undefined;\n\n\tconstructor(private _core_geometry: CoreGeometry, private _index: number) {\n\t\tthis._geometry = this._core_geometry.geometry();\n\t}\n\tget index() {\n\t\treturn this._index;\n\t}\n\tget points() {\n\t\treturn (this._points = this._points || this._get_points());\n\t}\n\tprivate _get_points(): CorePointArray3 {\n\t\tconst index_array = this._geometry.index?.array || [];\n\t\tconst start = this._index * 3;\n\t\treturn [\n\t\t\tnew CorePoint(this._core_geometry, index_array[start + 0]),\n\t\t\tnew CorePoint(this._core_geometry, index_array[start + 1]),\n\t\t\tnew CorePoint(this._core_geometry, index_array[start + 2]),\n\t\t];\n\t}\n\tget positions() {\n\t\treturn (this._positions = this._positions || this._get_positions());\n\t}\n\tprivate _get_positions(): Vector3Array3 {\n\t\tconst points = this.points;\n\t\treturn [points[0].position(), points[1].position(), points[2].position()];\n\t}\n\tget triangle() {\n\t\treturn (this._triangle = this._triangle || this._get_triangle());\n\t}\n\tprivate _get_triangle(): Triangle {\n\t\tconst positions = this.positions;\n\t\treturn new Triangle(positions[0], positions[1], positions[2]);\n\t}\n\tget deltas() {\n\t\treturn (this._deltas = this._deltas || this._get_deltas());\n\t}\n\tprivate _get_deltas(): Vector3Array2 {\n\t\treturn [this.positions[1].clone().sub(this.positions[0]), this.positions[2].clone().sub(this.positions[0])];\n\t}\n\n\tget area(): number {\n\t\treturn this.triangle.getArea();\n\t}\n\tcenter(target: Vector3) {\n\t\tconst positions = this.positions;\n\t\ttarget.x = (positions[0].x + positions[1].x + positions[2].x) / 3;\n\t\ttarget.y = (positions[0].y + positions[1].y + positions[2].y) / 3;\n\t\ttarget.z = (positions[0].z + positions[1].z + positions[2].z) / 3;\n\n\t\treturn target;\n\t}\n\n\trandom_position(seed: number) {\n\t\tlet weights = [CoreMath.rand_float(seed), CoreMath.rand_float(seed * 6541)];\n\n\t\tif (weights[0] + weights[1] > 1) {\n\t\t\tweights[0] = 1 - weights[0];\n\t\t\tweights[1] = 1 - weights[1];\n\t\t}\n\n\t\treturn this.positions[0]\n\t\t\t.clone()\n\t\t\t.add(this.deltas[0].clone().multiplyScalar(weights[0]))\n\t\t\t.add(this.deltas[1].clone().multiplyScalar(weights[1]));\n\t}\n\t// random_position(seed: number){\n\t// \tlet weights = [\n\t// \t\tCoreMath.rand_float(seed),\n\t// \t\tCoreMath.rand_float(seed*524),\n\t// \t\tCoreMath.rand_float(seed*4631)\n\t// \t]\n\t// \tconst sum = lodash_sum(weights)\n\t// \tweights = weights.map(w=>w/sum)\n\t// \tconst pos = new Vector3()\n\t// \tlet positions = this.positions().map((p,i)=> p.multiplyScalar(weights[i]))\n\t// \tpositions.forEach(p=>{\n\t// \t\tpos.add(p)\n\t// \t})\n\t// \treturn pos\n\t// }\n\n\tattrib_value_at_position(attrib_name: string, position: Vector3) {\n\t\t// const weights = CoreInterpolate._weights_from_3(position, this._positions)\n\t\tconst barycentric_coordinates = new Vector3();\n\t\tthis.triangle.getBarycoord(position, barycentric_coordinates);\n\t\tconst weights = barycentric_coordinates.toArray();\n\n\t\tconst attrib = this._geometry.attributes[attrib_name];\n\t\tconst attrib_size = attrib.itemSize;\n\t\tconst point_values = this.points.map((point) => point.attrib_value(attrib_name));\n\n\t\tlet new_attrib_value;\n\t\tlet sum;\n\t\tlet index = 0;\n\t\tswitch (attrib_size) {\n\t\t\tcase 1: {\n\t\t\t\tsum = 0;\n\t\t\t\tfor (let point_value of point_values) {\n\t\t\t\t\tsum += point_value * weights[index];\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tnew_attrib_value = sum;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tfor (let point_value of point_values) {\n\t\t\t\t\tconst weighted_value = point_value.multiplyScalar(weights[index]);\n\t\t\t\t\tif (sum) {\n\t\t\t\t\t\tsum.add(weighted_value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsum = weighted_value;\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tnew_attrib_value = sum;\n\t\t\t}\n\t\t}\n\t\treturn new_attrib_value;\n\t}\n\n\tstatic interpolated_value(\n\t\tgeometry: BufferGeometry,\n\t\tface: FaceLike,\n\t\tintersect_point: Vector3,\n\t\tattrib: BufferAttribute\n\t) {\n\t\t// let point_index, i, sum\n\t\tconst point_indices = [face.a, face.b, face.c];\n\t\tconst position_attrib = geometry.getAttribute('position');\n\t\tconst position_attrib_array = position_attrib.array;\n\t\tconst point_positions = point_indices.map(\n\t\t\t(point_index) =>\n\t\t\t\tnew Vector3(\n\t\t\t\t\tposition_attrib_array[point_index * 3 + 0],\n\t\t\t\t\tposition_attrib_array[point_index * 3 + 1],\n\t\t\t\t\tposition_attrib_array[point_index * 3 + 2]\n\t\t\t\t)\n\t\t);\n\n\t\tconst attrib_size = attrib.itemSize;\n\t\tconst attrib_array = attrib.array;\n\t\tlet attrib_values: NumericAttribValue[] = [];\n\t\tswitch (attrib_size) {\n\t\t\tcase 1:\n\t\t\t\tattrib_values = point_indices.map((point_index) => attrib_array[point_index]);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tattrib_values = point_indices.map(\n\t\t\t\t\t(point_index) => new Vector2(attrib_array[point_index * 2 + 0], attrib_array[point_index * 2 + 1])\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tattrib_values = point_indices.map(\n\t\t\t\t\t(point_index) =>\n\t\t\t\t\t\tnew Vector3(\n\t\t\t\t\t\t\tattrib_array[point_index * 3 + 0],\n\t\t\t\t\t\t\tattrib_array[point_index * 3 + 1],\n\t\t\t\t\t\t\tattrib_array[point_index * 3 + 2]\n\t\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst dist_to_points = point_indices.map((point_index, i) => intersect_point.distanceTo(point_positions[i]));\n\n\t\t// https://math.stackexchange.com/questions/1336386/weighted-average-distance-between-3-or-more-points\n\t\t// TODO: replace this with Core.Math.Interpolate\n\t\tconst distance_total = lodash_sum([\n\t\t\tdist_to_points[0] * dist_to_points[1],\n\t\t\tdist_to_points[0] * dist_to_points[2],\n\t\t\tdist_to_points[1] * dist_to_points[2],\n\t\t]);\n\n\t\tconst weights = [\n\t\t\t(dist_to_points[1] * dist_to_points[2]) / distance_total,\n\t\t\t(dist_to_points[0] * dist_to_points[2]) / distance_total,\n\t\t\t(dist_to_points[0] * dist_to_points[1]) / distance_total,\n\t\t];\n\n\t\tlet new_attrib_value;\n\t\tswitch (attrib_size) {\n\t\t\tcase 1:\n\t\t\t\tnew_attrib_value = lodash_sum(\n\t\t\t\t\tpoint_indices.map((point_indx, i) => weights[i] * (attrib_values[i] as number))\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tvar values = point_indices.map((point_index, i) =>\n\t\t\t\t\t(attrib_values[i] as Vector3).multiplyScalar(weights[i])\n\t\t\t\t);\n\t\t\t\tnew_attrib_value = null;\n\t\t\t\tfor (let value of values) {\n\t\t\t\t\tif (new_attrib_value) {\n\t\t\t\t\t\tnew_attrib_value.add(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew_attrib_value = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\n\t\treturn new_attrib_value;\n\t}\n}\n","import {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute'\n\nexport class MonkeyPatcher {\n\t// this allows cloning of geometries containing InterleavedBufferAttribute such as soldier.glb\n\tstatic patch(attribute: InterleavedBufferAttribute) {\n\t\tObject.assign(attribute, {\n\t\t\tclone: function() {\n\t\t\t\treturn new InterleavedBufferAttribute(\n\t\t\t\t\tattribute.data.clone(),\n\t\t\t\t\tattribute.itemSize,\n\t\t\t\t\tattribute.offset,\n\t\t\t\t\tattribute.normalized\n\t\t\t\t)\n\t\t\t},\n\t\t})\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\n// import {Object3D} from 'three/src/core/Object3D'\n// import {Group} from 'three/src/objects/Group'\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {Box3} from 'three/src/math/Box3';\nimport {TypedContainer} from './_Base';\nimport {CoreGroup} from '../../core/geometry/Group';\n// import {CoreObject} from '../../core/geometry/Object'\nimport {CoreGeometry} from '../../core/geometry/Geometry';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {ContainableMap} from './utils/ContainableMap';\n// import {CoreConstant} from '../../core/geometry/Constant'\n\n// const CoreGeometryGroup = CoreGroup\n\n// export type RequestContainerGeometryCallback = (container: Geometry)=>void\n\n// interface GroupOptions {\n// \tclone?: boolean\n// }\n// interface BooleanByString {\n// \t[propName: string]: boolean\n// }\nexport class GeometryContainer extends TypedContainer<ContainableMap['GEOMETRY']> {\n\t// protected _group: Group = new Group()\n\t// private _objects_by_uuid: BooleanByString = {}\n\t// protected _content: Object3D[] = []\n\t// protected _core_group: CoreGroup | null;\n\n\t// _points_count: number | null;\n\t// _bounding_box: Box3 | null;\n\n\t// constructor() {\n\t// \tsuper();\n\t// \t// this._materials = [];\n\t// }\n\n\t// _post_set_content() {\n\t// \tthis._core_group = this._core_group || new CoreGroup();\n\t// \tthis._core_group.touch();\n\t// \tthis._core_group.set_objects(this._content);\n\t// }\n\tset_objects(objects: Object3D[]) {}\n\n\t// clone_content(){\n\t// \treturn this._content.map(object=>CoreObject.clone(object))\n\t// }\n\t// core_content(): CoreGroup | null {\n\t// \treturn this._core_group; //= this._core_group || this._create_core_group()\n\t// }\n\tcore_content_cloned(): CoreGroup | undefined {\n\t\tif (this._content) {\n\t\t\treturn this._content.clone();\n\t\t}\n\t}\n\t// private _create_core_group(){\n\t// \tif(this._content){\n\t// \t\tconst core_group = new CoreGroup()\n\t// \t\tcore_group.set_objects(this._content)\n\t// \t\treturn core_group\n\t// \t}\n\t// }\n\t// reset_caches() {\n\t// \tconsole.log('reset cache');\n\t// \t// this._content = null;\n\t// \t// this._points_count = null;\n\t// \t// this._bounding_box = null;\n\t// }\n\t// _default_content() {\n\t// \treturn new CoreGroup();\n\t// }\n\n\t// set_geometry: (geometry)->\n\t// \tif @_content?\n\t// \t\t@_content.dispose()\n\t// \tthis.set_content(geometry)\n\t// has_group: ->\n\t// \tthis.has_content()\n\t// group(options?: GroupOptions): Group | null{\n\t// \tlet src_group;\n\t// \tif (options == null) { options = {}; }\n\t// \tif ((options['clone'] == null)) {\n\t// \t\toptions['clone'] = true;\n\t// \t}\n\n\t// \tlet new_group = null;\n\t// \tif ((src_group = this.content()) != null) {\n\t// \t\tif (options['clone'] === true) {\n\t// \t\t\tnew_group = CoreGroup.clone(src_group);\n\t// \t\t} else {\n\t// \t\t\tnew_group = src_group;\n\t// \t\t}\n\t// \t}\n\n\t// \treturn new_group;\n\t// }\n\n\t// group_wrapper(options){\n\t// \t// if (options == null) { options = {}; }\n\t// \t// return new CoreGroup(this.group(options));\n\t// }\n\t// core_group() {\n\t// \treturn this._core_group; //this.group_wrapper(options)\n\t// }\n\tset_content(content: ContainableMap['GEOMETRY']) {\n\t\tsuper.set_content(content);\n\t}\n\t// object(options){\n\t// \tif (options == null) { options = {}; }\n\t// \treturn this.group(options);\n\t// }\n\t// _post_set_content(){\n\t// \t// const objects_to_remove = []\n\t// \t// const objects_to_add = []\n\t// \t// const new_objects_by_uuid = {}\n\t// \t// for(let object of this._content){\n\t// \t// \tif(!this._objects_by_uuid[object.uuid]){\n\t// \t// \t\tobjects_to_add.push(object)\n\t// \t// \t}\n\t// \t// \tnew_objects_by_uuid[object.uuid] = true\n\t// \t// }\n\t// \t// for(let uuid of Object.keys(this._objects_by_uuid)){\n\n\t// \t// }\n\t// \tlet child\n\t// \twhile(child = this._group.children[0]){\n\t// \t\tthis._group.remove(child)\n\t// \t}\n\t// \tfor(let object of this._content){\n\t// \t\tthis._group.add(object)\n\t// \t}\n\t// }\n\n\t//\n\t//\n\t// INFOS\n\t//\n\t//\n\t// infos() {\n\t// \tif (this._content != null) {\n\t// \t\tconst bbox = this.bounding_box();\n\t// \t\tconst center = this.center(); //bbox.min.clone().add(bbox.max).multiplyScalar(0.5)\n\t// \t\tconst size = this.size(); //bbox.max.clone().sub(bbox.min)\n\n\t// \t\tconst node = this.node();\n\t// \t\tconst part_1 = [\n\t// \t\t\t`time dependent: ${node.is_time_dependent()}`,\n\t// \t\t\t`${node.cooks_count()} cooks`,\n\t// \t\t\t`cook time: ${node.cook_time()}`,\n\t// \t\t\t`cook time with inputs: ${node.cook_time_with_inputs()}`,\n\t// \t\t\t`${this.points_count()} points`,\n\t// \t\t\t`${this.objects_count()} object(s)  (${this.objects_visible_count()} visible)`\n\t// \t\t];\n\n\t// \t\tconst part_2 = [];\n\t// \t\tconst count_by_type = this.objects_count_by_type();\n\t// \t\tObject.keys(count_by_type).forEach((type)=>{\n\n\t// \t\t\tconst count = count_by_type[type];\n\t// \t\t\treturn part_2.push(`${count} ${type}`);\n\t// \t\t});\n\n\t// \t\tconst vertex_attributes = this.vertex_attribute_names();\n\t// \t\tconst object_attributes = this.object_attribute_names();\n\t// \t\tpart_2.push(`vertex attributes (${vertex_attributes.length}): ${vertex_attributes.join(', ')}`);\n\t// \t\tpart_2.push(`object attributes (${object_attributes.length}): ${object_attributes.join(', ')}`);\n\n\t// \t\tconst part_3 = [\n\t// \t\t\t\"bbox:\",\n\t// \t\t\t[bbox.min.x, bbox.min.y, bbox.min.z],\n\t// \t\t\t[bbox.max.x, bbox.max.y, bbox.max.z],\n\t// \t\t\t\"center:\",\n\t// \t\t\t[center.x, center.y, center.z],\n\t// \t\t\t\"size:\",\n\t// \t\t\t[size.x, size.y, size.z],\n\t// \t\t\tthis._content\n\t// \t\t];\n\n\t// \t\treturn lodash_concat( part_1, part_2, part_3 );\n\t// \t}\n\t// }\n\n\tprivate first_object() {\n\t\tif (this._content) {\n\t\t\treturn this._content.objects()[0];\n\t\t}\n\t}\n\tprivate first_geometry(): BufferGeometry | null {\n\t\tconst object = this.first_object();\n\t\tif (object) {\n\t\t\treturn (object as Mesh).geometry as BufferGeometry;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tobjects_count(): number {\n\t\t// let count = 0\n\t\t// if(this._content){\n\t\t// \tcount = this._content.children.length\n\t\t// }\n\t\t// return count\n\t\tif (this._content) {\n\t\t\treturn this._content.objects().length;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\tobjects_visible_count(): number {\n\t\tlet count = 0;\n\t\tif (this._content) {\n\t\t\tcount = this._content.objects().filter((c) => c.visible).length; // lodash_filter(this._content, c=> c.visible).length;\n\t\t}\n\t\treturn count;\n\t}\n\tobjects_count_by_type() {\n\t\tconst count_by_type: Dictionary<number> = {};\n\t\tconst core_group = this._content;\n\t\tif (this._content && core_group) {\n\t\t\tfor (let core_object of core_group.core_objects()) {\n\t\t\t\tconst human_type = core_object.human_type();\n\t\t\t\tif (count_by_type[human_type] == null) {\n\t\t\t\t\tcount_by_type[human_type] = 0;\n\t\t\t\t}\n\t\t\t\tcount_by_type[human_type] += 1;\n\t\t\t}\n\t\t}\n\t\treturn count_by_type;\n\t}\n\tobjects_names_by_type() {\n\t\tconst names_by_type: Dictionary<string[]> = {};\n\t\tconst core_group = this._content;\n\t\tif (this._content && core_group) {\n\t\t\tfor (let core_object of core_group.core_objects()) {\n\t\t\t\tconst human_type = core_object.human_type();\n\t\t\t\tnames_by_type[human_type] = names_by_type[human_type] || [];\n\t\t\t\tnames_by_type[human_type].push(core_object.name());\n\t\t\t}\n\t\t}\n\t\treturn names_by_type;\n\t}\n\n\tvertex_attribute_names() {\n\t\tlet names: string[] = [];\n\t\tconst geometry = this.first_geometry();\n\t\tif (geometry) {\n\t\t\tnames = Object.keys(geometry.attributes);\n\t\t}\n\t\treturn names;\n\t}\n\tvertex_attribute_sizes_by_name() {\n\t\tlet sizes_by_name: Dictionary<number> = {};\n\t\tconst geometry = this.first_geometry();\n\t\tif (geometry) {\n\t\t\tObject.keys(geometry.attributes).forEach((attrib_name) => {\n\t\t\t\tconst attrib = geometry.attributes[attrib_name];\n\t\t\t\tsizes_by_name[attrib_name] = attrib.itemSize;\n\t\t\t});\n\t\t}\n\t\treturn sizes_by_name;\n\t}\n\tvertex_attribute_types_by_name() {\n\t\tlet types_by_name: Dictionary<number> = {};\n\t\tconst geometry = this.first_geometry();\n\t\tif (geometry) {\n\t\t\tconst core_geo = new CoreGeometry(geometry);\n\t\t\tObject.keys(geometry.attributes).forEach((attrib_name) => {\n\t\t\t\ttypes_by_name[attrib_name] = core_geo.attrib_type(attrib_name);\n\t\t\t});\n\t\t}\n\t\treturn types_by_name;\n\t}\n\tobject_attribute_names() {\n\t\tlet names: string[] = [];\n\t\tconst object = this.first_object();\n\t\tif (object) {\n\t\t\tnames = Object.keys(object.userData['attributes'] || {});\n\t\t}\n\t\treturn names;\n\t}\n\n\tpoints_count(): number {\n\t\tif (this._content) {\n\t\t\treturn this._content.points_count();\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// return this._points_count != null ? this._points_count : (this._points_count = this._compute_points_count());\n\t}\n\n\t// _compute_points_count() {\n\t// \tlet points_count = 0;\n\t// \tif (this._content) {\n\t// \t\tfor (let object of this._content.objects()) {\n\t// \t\t\tobject.traverse((object) => {\n\t// \t\t\t\tconst geometry = (object as Mesh).geometry as BufferGeometry;\n\t// \t\t\t\tif (geometry) {\n\t// \t\t\t\t\tpoints_count += CoreGeometry.points_count(geometry);\n\t// \t\t\t\t}\n\t// \t\t\t});\n\t// \t\t}\n\t// \t}\n\t// \treturn points_count;\n\t// }\n\t//@_content.userData['points_count']\n\t//Core.Geometry.Geometry.points_count(@_content)\n\t// count = 0\n\t// if (position = @_content.getAttribute('position'))?\n\t// \tif (array = position.array)?\n\t// \t\tcount = array.length / 3\n\n\t// count\n\n\t// points_for_geometry: (geometry)->\n\t// \tCore.Geometry.Geometry.points_from_geometry(geometry)\n\n\t// create_geometry_from_points: (points, index_mode)->\n\t// \tCore.Geometry.Geometry.geometry_from_points(points, index_mode)\n\n\t//\n\t//\n\t// BBOX\n\t//\n\t//\n\tbounding_box(): Box3 {\n\t\treturn this._content.bounding_box();\n\t\t// return this._bounding_box != null ? this._bounding_box : (this._bounding_box = this._compute_bounding_box());\n\t}\n\tcenter(): Vector3 {\n\t\treturn this._content.center();\n\t\t// const center = new Vector3();\n\t\t// this.bounding_box().getCenter(center);\n\t\t// return center;\n\t}\n\tsize(): Vector3 {\n\t\treturn this._content.size();\n\t\t// const size = new Vector3();\n\t\t// this.bounding_box().getSize(size);\n\t\t// return size;\n\t}\n\n\t// private _compute_bounding_box() {\n\t// \tconst bbox = new Box3();\n\t// \tif (this._content) {\n\t// \t\tfor (let object of this._content.objects()) {\n\t// \t\t\t// const box = new Box3()\n\t// \t\t\t// bbox.setFromObject(object);\n\t// \t\t\tbbox.expandByObject(object);\n\t// \t\t}\n\t// \t}\n\t// \treturn bbox;\n\t// }\n}\n","import {TypedSopNode} from './_Base';\n// import {CoreTransform} from '../../../Core/Transform';\n// import {ParamType} from '../../../Engine/Param/_Module'\n\n// interface ActionsByName {\n// \t[propName: string]: THREE.AnimationClip;\n// }\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {Object3DWithAnimation} from '../../../core/geometry/Animation';\nclass AnimationCopySopParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new AnimationCopySopParamsConfig();\n\nexport class AnimationCopySopNode extends TypedSopNode<AnimationCopySopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'animation_copy';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to copy animation to', 'geometry to copy animation from'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(2);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE, InputCloneMode.NEVER]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group_target = input_contents[0];\n\t\tconst core_group_src = input_contents[1];\n\n\t\tconst src_object = core_group_src.objects()[0] as Object3DWithAnimation;\n\t\tconst target_object = core_group_target.objects()[0] as Object3DWithAnimation;\n\n\t\tconst src_animations = src_object.animations;\n\t\tif (src_animations) {\n\t\t\ttarget_object.animations = src_animations.map((a) => a.clone());\n\t\t\tthis.set_core_group(core_group_target);\n\t\t} else {\n\t\t\tthis.states.error.set('no animation found');\n\t\t}\n\t}\n}\n","import {TypedSopNode} from './_Base';\nimport lodash_isArray from 'lodash/isArray';\n// import {Object3D} from 'three/src/core/Object3D';\nimport {AnimationMixer} from 'three/src/animation/AnimationMixer';\n// import {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {Object3DWithAnimation} from '../../../core/geometry/Animation';\nimport {ParamType} from '../../poly/ParamType';\nimport {AnimationAction} from 'three/src/animation/AnimationAction';\nimport {Mesh} from 'three/src/objects/Mesh';\n\nimport {Material} from 'three/src/materials/Materials';\nimport {MaterialWithSkinning} from '../../../core/geometry/Material';\nimport {NodeEvent} from '../../poly/NodeEvent';\nimport {BaseParamType} from '../../params/_Base';\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {BaseNodeType} from '../_Base';\nclass AnimationMixerSopParamsConfig extends NodeParamsConfig {\n\ttime = ParamConfig.FLOAT('$T', {range: [0, 10]});\n\tprepare = ParamConfig.BUTTON(null, {\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tAnimationMixerSopNode.PARAM_CALLBACK_prepare(node as AnimationMixerSopNode, param);\n\t\t},\n\t});\n}\nconst ParamsConfig = new AnimationMixerSopParamsConfig();\n\nexport class AnimationMixerSopNode extends TypedSopNode<AnimationMixerSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'animation_mixer';\n\t}\n\n\t_previous_time: number | null = null;\n\t_mixer: AnimationMixer | null = null;\n\t_actions_by_name: Dictionary<AnimationAction> = {};\n\t_values_by_param_name: Dictionary<number> = {};\n\t// _mixer_used_once: boolean = false\n\t_animation_target: Object3DWithAnimation | undefined;\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to be animated'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tif (!this._mixer) {\n\t\t\tthis.create_mixer(input_contents[0]);\n\t\t} else {\n\t\t\tthis._update_mixer();\n\t\t\tthis.cook_controller.end_cook();\n\t\t}\n\t}\n\n\tprivate create_mixer(core_group: CoreGroup) {\n\t\tthis._animation_target = core_group.objects()[0] as Object3DWithAnimation;\n\t\tthis._mixer = new AnimationMixer(this._animation_target);\n\n\t\tthis._remove_spare_params();\n\t\tthis._actions_by_name = {};\n\n\t\tif (this._animation_target.animations) {\n\t\t\tthis._animation_target.animations.forEach((animation, i) => {\n\t\t\t\tconst param_name = animation.name;\n\t\t\t\tconst previous_value = this._values_by_param_name[param_name];\n\t\t\t\tlet default_value = previous_value;\n\t\t\t\tif (default_value == null) {\n\t\t\t\t\tdefault_value = i == 0 ? 1 : 0;\n\t\t\t\t}\n\t\t\t\tconst param = this.add_param(ParamType.FLOAT, param_name, default_value, {spare: true});\n\t\t\t\tif (param) {\n\t\t\t\t\tconst prev_value = this._values_by_param_name[param_name];\n\t\t\t\t\tif (prev_value) {\n\t\t\t\t\t\tparam.set(prev_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._mixer) {\n\t\t\t\t\tconst action = this._mixer.clipAction(animation);\n\t\t\t\t\tthis._actions_by_name[animation.name] = action;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.emit(NodeEvent.PARAMS_UPDATED);\n\n\t\tObject.keys(this._actions_by_name).forEach((name) => {\n\t\t\tthis._actions_by_name[name].play();\n\t\t});\n\n\t\t// set material skinning\n\t\tconst materials_by_id: Dictionary<Material> = {};\n\t\tthis._animation_target.traverse((object3d: Object3D) => {\n\t\t\tconst child = object3d as Mesh;\n\t\t\tif (child.material) {\n\t\t\t\tif (!lodash_isArray(child.material)) {\n\t\t\t\t\tmaterials_by_id[child.material.uuid] = child.material;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.keys(materials_by_id).forEach((uuid) => {\n\t\t\tconst material = materials_by_id[uuid] as MaterialWithSkinning;\n\t\t\tmaterial.skinning = true;\n\t\t\tmaterial.morphTargets = true;\n\t\t});\n\t\tthis._previous_time = null;\n\t\tthis._update_mixer();\n\t\tthis._update_mixer_weights(); // might be redundant with _update_mixer, but ensures this is done on load\n\t\tthis.set_object(this._animation_target);\n\t}\n\n\tprivate _remove_spare_params() {\n\t\tthis._values_by_param_name = {};\n\t\tconst current_param_names: string[] = this.params.spare_names;\n\t\tconst names_to_delete: string[] = [];\n\t\tcurrent_param_names.forEach((param_name) => {\n\t\t\tconst param = this.params.get_float(param_name);\n\t\t\tif (param) {\n\t\t\t\tthis._values_by_param_name[param_name] = param.value;\n\t\t\t\tnames_to_delete.push(param_name);\n\t\t\t}\n\t\t});\n\t\tif (names_to_delete.length > 0) {\n\t\t\tthis.params.update_params({names_to_delete: names_to_delete});\n\t\t}\n\t}\n\n\tprivate _update_mixer() {\n\t\tif (this.pv.time != this._previous_time) {\n\t\t\tthis._update_mixer_time();\n\t\t} else {\n\t\t\tthis._update_mixer_weights();\n\t\t}\n\t}\n\tprivate _update_mixer_time() {\n\t\tconst delta = this.pv.time - (this._previous_time || 0);\n\t\tif (this._mixer) {\n\t\t\tthis._mixer.update(delta);\n\t\t}\n\t\tthis._previous_time = this.pv.time;\n\t}\n\n\tprivate _update_mixer_weights() {\n\t\tfor (let name of Object.keys(this._actions_by_name)) {\n\t\t\tconst action = this._actions_by_name[name];\n\t\t\tconst cache_value = this.params.get_float(name).value;\n\t\t\tif (cache_value != null) {\n\t\t\t\taction.setEffectiveWeight(cache_value);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic PARAM_CALLBACK_prepare(node: AnimationMixerSopNode, param: BaseParamType) {\n\t\tnode.prepare_animation_mixer();\n\t}\n\tasync prepare_animation_mixer() {\n\t\tthis._mixer = null;\n\t\tconst container = await this.io.inputs.eval_required_input(0);\n\t\tthis.create_mixer(container.core_content_cloned());\n\t\tthis.set_dirty();\n\t}\n}\n","import {TypedSopNode} from './_Base';\n// import {Core} from '../../../Core/_Module';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nclass AttribAddMultSopParamsConfig extends NodeParamsConfig {\n\tname = ParamConfig.STRING('');\n\tpre_add = ParamConfig.FLOAT(0, {range: [0, 1]});\n\tmult = ParamConfig.FLOAT(1, {range: [0, 1]});\n\tpost_add = ParamConfig.FLOAT(0, {range: [0, 1]});\n}\nconst ParamsConfig = new AttribAddMultSopParamsConfig();\n\nexport class AttribAddMultSopNode extends TypedSopNode<AttribAddMultSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_add_mult';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tconst attrib_names = core_group.attrib_names_matching_mask(this.pv.name);\n\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tconst geometries = core_group.geometries();\n\t\t\tfor (let geometry of geometries) {\n\t\t\t\tthis._update_attrib(attrib_name, geometry);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tprivate _update_attrib(attrib_name: string, geometry: BufferGeometry) {\n\t\tconst attribute = geometry.getAttribute(attrib_name) as BufferAttribute;\n\t\tif (attribute) {\n\t\t\tconst values = attribute.array as number[];\n\n\t\t\tconst pre_add = this.pv.pre_add;\n\t\t\tconst mult = this.pv.mult;\n\t\t\tconst post_add = this.pv.post_add;\n\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\tconst value = values[i];\n\t\t\t\tvalues[i] = (value + pre_add) * mult + post_add;\n\t\t\t}\n\t\t\tif (!this.io.inputs.input_cloned(0)) {\n\t\t\t\tattribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nclass AttribCopySopParamsConfig extends NodeParamsConfig {\n\t// class = ParamConfig.INTEGER(CoreConstant.ATTRIB_CLASS.VERTEX, {\n\t// \tmenu: {\n\t// \t\tentries: [\n\t// \t\t\t{name: 'vertex', value: CoreConstant.ATTRIB_CLASS.VERTEX},\n\t// \t\t\t{name: 'object', value: CoreConstant.ATTRIB_CLASS.OBJECT},\n\t// \t\t],\n\t// \t},\n\t// })\n\tname = ParamConfig.STRING('');\n\ttnew_name = ParamConfig.BOOLEAN(0);\n\tnew_name = ParamConfig.STRING('', {visible_if: {tnew_name: 1}});\n\t// to_all_components = ParamConfig.BOOLEAN(1)\n\t// src_component = ParamConfig.INTEGER(0, {\n\t// \trange: [0, 2],\n\t// \trange_locked: [true, true],\n\t// \tvisible_if: {to_all_components: 0},\n\t// })\n\t// dest_component = ParamConfig.INTEGER(0, {\n\t// \trange: [0, 2],\n\t// \trange_locked: [true, true],\n\t// \tvisible_if: {to_all_components: 0},\n\t// })\n}\nconst ParamsConfig = new AttribCopySopParamsConfig();\n\n// TODO: attrib copy should handle string attributes\nexport class AttribCopySopNode extends TypedSopNode<AttribCopySopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_copy';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to copy attributes to', 'geometry to copy attributes from'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(2);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE, InputCloneMode.NEVER]);\n\t}\n\n\tcreate_params() {}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group_dest = input_contents[0];\n\t\tconst core_group_src = input_contents[1];\n\n\t\tconst attrib_names = core_group_src.attrib_names_matching_mask(this.pv.name);\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tthis.copy_vertex_attribute_between_core_groups(core_group_dest, core_group_src, attrib_name);\n\t\t}\n\n\t\t// switch (this.pv.class) {\n\t\t// \tcase CoreConstant.ATTRIB_CLASS.VERTEX:\n\t\t// \t\tthis.copy_vertex_attribute(core_group_dest, core_group_src);\n\t\t// \t\tbreak;\n\t\t// \tcase CoreConstant.ATTRIB_CLASS.OBJECT:\n\t\t// \t\tthis.copy_object_attribute(core_group_dest, core_group_src);\n\t\t// \t\tbreak;\n\t\t// }\n\n\t\treturn this.set_core_group(core_group_dest);\n\t}\n\n\tprivate copy_vertex_attribute_between_core_groups(\n\t\tcore_group_dest: CoreGroup,\n\t\tcore_group_src: CoreGroup,\n\t\tattrib_name: string\n\t) {\n\t\tconst src_objects = core_group_src.objects();\n\t\tconst dest_objects = core_group_dest.objects();\n\n\t\tif (dest_objects.length > src_objects.length) {\n\t\t\tthis.states.error.set('second input does not have enough objects to copy attributes from');\n\t\t} else {\n\t\t\tfor (let i = 0; i < dest_objects.length; i++) {\n\t\t\t\tconst dest_geometry = dest_objects[i].geometry;\n\t\t\t\tconst src_geometry = dest_objects[i].geometry;\n\t\t\t\tthis.copy_vertex_attribute_between_geometries(dest_geometry, src_geometry, attrib_name);\n\t\t\t}\n\t\t}\n\t}\n\tprivate copy_vertex_attribute_between_geometries(\n\t\tdest_geometry: BufferGeometry,\n\t\tsrc_geometry: BufferGeometry,\n\t\tattrib_name: string\n\t) {\n\t\tconst src_attrib = src_geometry.getAttribute(attrib_name);\n\t\tif (src_attrib) {\n\t\t\tconst size = src_attrib.itemSize;\n\t\t\tconst src_points_count = src_geometry.getAttribute('position').array.length / 3;\n\t\t\tconst dest_points_count = dest_geometry.getAttribute('position').array.length / 3;\n\t\t\tif (dest_points_count > src_points_count) {\n\t\t\t\tthis.states.error.set('not enough points in second input');\n\t\t\t}\n\t\t\tconst src_array = src_attrib.array as number[];\n\t\t\tconst sub_array = src_array.slice(0, dest_points_count * size);\n\t\t\tconst dest_name = this.pv.tnew_name ? this.pv.new_name : attrib_name;\n\t\t\tdest_geometry.setAttribute(dest_name, new Float32BufferAttribute(sub_array, size));\n\t\t} else {\n\t\t\tthis.states.error.set(`attribute '${attrib_name}' does not exist on second input`);\n\t\t}\n\t}\n\n\t// _src_value_to_all_components(src_attrib_value: NumericAttribValue, dest_attrib_size) {\n\t// \tif (lodash_isNumber(src_attrib_value)) {\n\t// \t\tswitch (dest_attrib_size) {\n\t// \t\t\tcase 1:\n\t// \t\t\t\treturn src_attrib_value;\n\t// \t\t\tcase 2:\n\t// \t\t\t\treturn new THREE.Vector2(src_attrib_value, src_attrib_value);\n\t// \t\t\tcase 3:\n\t// \t\t\t\treturn new THREE.Vector3(src_attrib_value, src_attrib_value, src_attrib_value);\n\t// \t\t}\n\t// \t} else {\n\t// \t\tswitch (dest_attrib_size) {\n\t// \t\t\tcase 1:\n\t// \t\t\t\treturn src_attrib_value.x;\n\t// \t\t\tcase 2:\n\t// \t\t\t\treturn new THREE.Vector2(src_attrib_value.x, src_attrib_value.y);\n\t// \t\t\tcase 3:\n\t// \t\t\t\treturn new THREE.Vector3(\n\t// \t\t\t\t\tsrc_attrib_value.x,\n\t// \t\t\t\t\tsrc_attrib_value.y,\n\t// \t\t\t\t\tsrc_attrib_value.z || src_attrib_value.y\n\t// \t\t\t\t);\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t// _src_value_to_component(src_attrib_value, current_dest_value, src_component, dest_component) {\n\t// \tconst src_component_value = (() => {\n\t// \t\tswitch (src_component) {\n\t// \t\t\tcase 0:\n\t// \t\t\t\treturn src_attrib_value.x || src_attrib_value;\n\t// \t\t\tcase 1:\n\t// \t\t\t\treturn src_attrib_value.y;\n\t// \t\t\tcase 2:\n\t// \t\t\t\treturn src_attrib_value.z;\n\t// \t\t}\n\t// \t})();\n\n\t// \tconst dest_component_name = ['x', 'y', 'z'][dest_component];\n\t// \tif (current_dest_value[dest_component_name] != null) {\n\t// \t\tcurrent_dest_value[dest_component_name] = src_component_value;\n\t// \t\treturn current_dest_value;\n\t// \t} else {\n\t// \t\tconst src_component_name = ['x', 'y', 'z'][src_component];\n\t// \t\treturn src_attrib_value[src_component_name];\n\t// \t}\n\t// }\n\n\t// TODO: find a way to use the point method, but have the group api allow easy switch\n\t// private  copy_object_attribute(core_group_dest: CoreGroup, core_group_src:CoreGroup) {\n\t// \t// const objects_dest = core_group_dest.objects();\n\t// \t// const objects_src = core_group_src.objects();\n\n\t// \t//attribute_names = core_group_src.attrib_names_matching_mask(@_param_name)\n\n\t// \t//lodash_each attribute_names, (attrib_name) =>\n\t// \tconst attrib_name = this.pv.name;\n\n\t// \tif (!core_group_dest.has_attrib(attrib_name)) {\n\t// \t\tconst attrib_size = core_group_src.attrib_size(attrib_name);\n\t// \t\tcore_group_dest.add_numeric_vertex_attrib(attrib_name, attrib_size, 0);\n\t// \t}\n\n\t// \tlodash_each(points_dest, (point_dest, i) => {\n\t// \t\tlet point_src;\n\t// \t\tif ((point_src = points_src[i]) != null) {\n\t// \t\t\tconst attrib_value = point_src.attrib_value(attrib_name);\n\t// \t\t\tpoint_dest.set_attrib_value(attrib_name, attrib_value);\n\t// \t\t}\n\t// \t});\n\t// }\n}\n","import lodash_trim from 'lodash/trim';\n\nimport {TypedSopNode} from './_Base';\nimport {\n\tCoreConstant,\n\tAttribClassMenuEntries,\n\tAttribTypeMenuEntries,\n\tAttribClass,\n\tAttribType,\n} from '../../../core/geometry/Constant';\nimport {CoreAttribute} from '../../../core/geometry/Attribute';\n// import {CoreGeometry} from '../../../core/geometry/Geometry'\nimport {CoreObject} from '../../../core/geometry/Object';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\n// import {Vector3} from 'three/src/math/Vector3';\n// import {Vector2} from 'three/src/math/Vector2';\n\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n\n// const VALUE_PARAM = {\n// \tVALUEX: 'valuex',\n// \tVALUE: 'value',\n// \tSTRING: 'string',\n// };\n// const DEFAULT_VALUE = {\n// \tvaluex: 0,\n// \tvalue: [0, 0, 0],\n// \tstring: '',\n// };\n// type COMPONENT_INDEX = keyof Vector4Like;\n// const COMPONENT_INDEX: Array<COMPONENT_INDEX> = ['x', 'y', 'z', 'w'];\ntype ValueArrayByName = Dictionary<number[]>;\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AttribCreateSopParamsConfig extends NodeParamsConfig {\n\tgroup = ParamConfig.STRING('');\n\tclass = ParamConfig.INTEGER(AttribClass.VERTEX, {\n\t\tmenu: {\n\t\t\tentries: AttribClassMenuEntries,\n\t\t},\n\t});\n\ttype = ParamConfig.INTEGER(AttribType.NUMERIC, {\n\t\tmenu: {\n\t\t\tentries: AttribTypeMenuEntries,\n\t\t},\n\t});\n\tname = ParamConfig.STRING('new_attrib');\n\tsize = ParamConfig.INTEGER(1, {\n\t\trange: [1, 4],\n\t\trange_locked: [true, true],\n\t\tvisible_if: {type: CoreConstant.ATTRIB_TYPE.NUMERIC},\n\t});\n\tvalue1 = ParamConfig.FLOAT(0, {\n\t\tvisible_if: {type: CoreConstant.ATTRIB_TYPE.NUMERIC, size: 1},\n\t\texpression: {for_entities: true},\n\t});\n\tvalue2 = ParamConfig.VECTOR2([0, 0], {\n\t\tvisible_if: {type: CoreConstant.ATTRIB_TYPE.NUMERIC, size: 2},\n\t\texpression: {for_entities: true},\n\t});\n\tvalue3 = ParamConfig.VECTOR3([0, 0, 0], {\n\t\tvisible_if: {type: CoreConstant.ATTRIB_TYPE.NUMERIC, size: 3},\n\t\texpression: {for_entities: true},\n\t});\n\tvalue4 = ParamConfig.VECTOR4([0, 0, 0, 0], {\n\t\tvisible_if: {type: CoreConstant.ATTRIB_TYPE.NUMERIC, size: 4},\n\t\texpression: {for_entities: true},\n\t});\n\tstring = ParamConfig.STRING('', {\n\t\tvisible_if: {type: CoreConstant.ATTRIB_TYPE.STRING},\n\t\texpression: {for_entities: true},\n\t});\n}\nconst ParamsConfig = new AttribCreateSopParamsConfig();\nexport class AttribCreateSopNode extends TypedSopNode<AttribCreateSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_create';\n\t}\n\n\tprivate _x_arrays_by_geometry_uuid: ValueArrayByName = {};\n\tprivate _y_arrays_by_geometry_uuid: ValueArrayByName = {};\n\tprivate _z_arrays_by_geometry_uuid: ValueArrayByName = {};\n\tprivate _w_arrays_by_geometry_uuid: ValueArrayByName = {};\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tif (this.pv.name && lodash_trim(this.pv.name) != '') {\n\t\t\tswitch (this.pv.class) {\n\t\t\t\tcase AttribClass.VERTEX:\n\t\t\t\t\tthis.add_point_attribute(core_group);\n\t\t\t\t\tbreak;\n\t\t\t\tcase AttribClass.OBJECT:\n\t\t\t\t\tthis.add_object_attribute(core_group);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.states.error.set('attribute name is not valid');\n\t\t}\n\t}\n\n\tasync add_point_attribute(core_group: CoreGroup) {\n\t\tconst core_objects = core_group.core_objects();\n\t\tfor (let i = 0; i < core_objects.length; i++) {\n\t\t\tconst core_object = core_objects[i];\n\t\t\tswitch (this.pv.type) {\n\t\t\t\tcase CoreConstant.ATTRIB_TYPE.NUMERIC:\n\t\t\t\t\tawait this.add_numeric_attribute_to_points(core_object);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CoreConstant.ATTRIB_TYPE.STRING:\n\t\t\t\t\tawait this.add_string_attribute_to_points(core_object);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.set_core_group(core_group);\n\t}\n\tasync add_object_attribute(core_group: CoreGroup) {\n\t\tconst core_objects = core_group.core_objects_from_group(this.pv.group);\n\t\tswitch (this.pv.type) {\n\t\t\tcase CoreConstant.ATTRIB_TYPE.NUMERIC:\n\t\t\t\tawait this.add_numeric_attribute_to_object(core_objects);\n\t\t\t\tbreak;\n\t\t\tcase CoreConstant.ATTRIB_TYPE.STRING:\n\t\t\t\tawait this.add_string_attribute_to_object(core_objects);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tasync add_numeric_attribute_to_points(core_object: CoreObject) {\n\t\tconst core_geometry = core_object.core_geometry();\n\t\tif (!core_geometry) {\n\t\t\treturn;\n\t\t}\n\t\tconst points = core_object.points_from_group(this.pv.group);\n\n\t\tconst param = [this.p.value1, this.p.value2, this.p.value3, this.p.value4][this.pv.size - 1];\n\n\t\tif (param.has_expression()) {\n\t\t\tif (!core_geometry.has_attrib(this.pv.name)) {\n\t\t\t\tcore_geometry.add_numeric_attrib(this.pv.name, this.pv.size, param.value);\n\t\t\t}\n\n\t\t\tconst geometry = core_geometry.geometry();\n\t\t\tconst array = geometry.getAttribute(this.pv.name).array as number[];\n\t\t\tif (this.pv.size == 1) {\n\t\t\t\tif (this.p.value1.expression_controller) {\n\t\t\t\t\tawait this.p.value1.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\t\t\tarray[point.index * this.pv.size + 0] = value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst vparam = [this.p.value2, this.p.value3, this.p.value4][this.pv.size - 2];\n\t\t\t\tlet params = vparam.components;\n\t\t\t\tconst tmp_arrays = new Array(params.length);\n\t\t\t\tlet component_param;\n\n\t\t\t\tconst arrays_by_geometry_uuid = [\n\t\t\t\t\tthis._x_arrays_by_geometry_uuid,\n\t\t\t\t\tthis._y_arrays_by_geometry_uuid,\n\t\t\t\t\tthis._z_arrays_by_geometry_uuid,\n\t\t\t\t\tthis._w_arrays_by_geometry_uuid,\n\t\t\t\t];\n\n\t\t\t\tfor (let i = 0; i < params.length; i++) {\n\t\t\t\t\tcomponent_param = params[i];\n\t\t\t\t\tif (component_param.has_expression() && component_param.expression_controller) {\n\t\t\t\t\t\ttmp_arrays[i] = this._init_array_if_required(\n\t\t\t\t\t\t\tgeometry,\n\t\t\t\t\t\t\tarrays_by_geometry_uuid[i],\n\t\t\t\t\t\t\tpoints.length\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait component_param.expression_controller.compute_expression_for_points(\n\t\t\t\t\t\t\tpoints,\n\t\t\t\t\t\t\t(point, value) => {\n\t\t\t\t\t\t\t\t// array[point.index()*this.pv.size+i] = value\n\t\t\t\t\t\t\t\ttmp_arrays[i][point.index] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst value = component_param.value;\n\t\t\t\t\t\tfor (let point of points) {\n\t\t\t\t\t\t\tarray[point.index * this.pv.size + i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// commit the tmp values\n\t\t\t\tfor (let j = 0; j < tmp_arrays.length; j++) {\n\t\t\t\t\tconst tmp_array = tmp_arrays[j];\n\t\t\t\t\tif (tmp_array) {\n\t\t\t\t\t\tfor (let i = 0; i < tmp_array.length; i++) {\n\t\t\t\t\t\t\tarray[i * this.pv.size + j] = tmp_array[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// const value = await param.eval_p();\n\t\t\tcore_object.add_numeric_vertex_attrib(this.pv.name, this.pv.size, param.value);\n\t\t}\n\t}\n\n\tasync add_numeric_attribute_to_object(core_objects: CoreObject[]) {\n\t\tconst param = [this.p.value1, this.p.value2, this.p.value3, this.p.value4][this.pv.size - 1];\n\t\tif (param.has_expression()) {\n\t\t\tif (this.pv.size == 1) {\n\t\t\t\tif (this.p.value1.expression_controller) {\n\t\t\t\t\tawait this.p.value1.expression_controller.compute_expression_for_objects(\n\t\t\t\t\t\tcore_objects,\n\t\t\t\t\t\t(core_object, value) => {\n\t\t\t\t\t\t\tcore_object.set_attrib_value(this.pv.name, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst vparam = [this.p.value2, this.p.value3, this.p.value4][this.pv.size - 2];\n\t\t\t\tlet params = vparam.components;\n\t\t\t\tlet values_by_core_object_index: Dictionary<NumericAttribValueAsArray> = {};\n\t\t\t\t// for (let component_param of params) {\n\t\t\t\t// \tvalues.push(component_param.value);\n\t\t\t\t// }\n\t\t\t\tfor (let core_object of core_objects) {\n\t\t\t\t\tvalues_by_core_object_index[core_object.index] = (<unknown>[]) as NumericAttribValueAsArray;\n\t\t\t\t}\n\t\t\t\tfor (let component_index = 0; component_index < params.length; component_index++) {\n\t\t\t\t\tconst component_param = params[component_index];\n\t\t\t\t\tif (component_param.has_expression() && component_param.expression_controller) {\n\t\t\t\t\t\tawait component_param.expression_controller.compute_expression_for_objects(\n\t\t\t\t\t\t\tcore_objects,\n\t\t\t\t\t\t\t(core_object, value) => {\n\t\t\t\t\t\t\t\tvalues_by_core_object_index[core_object.index][component_index] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let core_object of core_objects) {\n\t\t\t\t\t\t\tvalues_by_core_object_index[core_object.index][component_index] = component_param.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < core_objects.length; i++) {\n\t\t\t\t\tconst core_object = core_objects[i];\n\t\t\t\t\tconst value = values_by_core_object_index[core_object.index];\n\t\t\t\t\tcore_object.set_attrib_value(this.pv.name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// let value = await param.eval_p();\n\t\t\t// if (this.pv.size > 1) {\n\t\t\t// \tvalue = this._convert_object_numeric_value(value);\n\t\t\t// }\n\t\t\tfor (let core_object of core_objects) {\n\t\t\t\tcore_object.set_attrib_value(this.pv.name, param.value);\n\t\t\t}\n\t\t}\n\t}\n\n\t// private _convert_object_numeric_value(value: Vector4) {\n\t// \tlet converted_value;\n\t// \tswitch (this.pv.size) {\n\t// \t\tcase 1: {\n\t// \t\t\tconverted_value = value.x;\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tcase 2: {\n\t// \t\t\tconverted_value = new Vector2(value.x, value.y);\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tcase 3: {\n\t// \t\t\tconverted_value = new Vector3(value.x, value.y, value.z);\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tcase 4: {\n\t// \t\t\tconverted_value = new Vector4(value.x, value.y, value.z, value.w);\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t}\n\t// \treturn converted_value;\n\t// }\n\n\tasync add_string_attribute_to_points(core_object: CoreObject) {\n\t\tconst points = core_object.points_from_group(this.pv.group);\n\t\tconst param = this.p.string;\n\n\t\tconst string_values: string[] = [];\n\t\tif (param.has_expression() && param.expression_controller) {\n\t\t\tawait param.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\tstring_values[point.index] = value;\n\t\t\t});\n\t\t} else {\n\t\t\tstring_values.push(param.value);\n\t\t}\n\n\t\tconst index_data = CoreAttribute.array_to_indexed_arrays(string_values);\n\t\tcore_object.core_geometry()?.set_indexed_attribute(this.pv.name, index_data['values'], index_data['indices']);\n\t}\n\n\tasync add_string_attribute_to_object(core_objects: CoreObject[]) {\n\t\tconst param = this.p.string;\n\t\tif (param.has_expression() && param.expression_controller) {\n\t\t\tawait param.expression_controller.compute_expression_for_objects(core_objects, (core_object, value) => {\n\t\t\t\tcore_object.set_attrib_value(this.pv.name, value);\n\t\t\t});\n\t\t} else {\n\t\t\tfor (let core_object of core_objects) {\n\t\t\t\tcore_object.set_attrib_value(this.pv.name, param.value);\n\t\t\t}\n\t\t}\n\t\t// this.context().set_entity(object);\n\n\t\t// const core_object = new CoreObject(object);\n\n\t\t// this.param('string').eval(val => {\n\t\t// \tcore_object.add_attribute(this.pv.name, val);\n\t\t// });\n\t}\n\n\t//\n\t//\n\t// PRIVATE\n\t//\n\t//\n\n\t// https://stackoverflow.com/questions/24586110/resolve-promises-one-after-another-i-e-in-sequence\n\t// async _eval_params_for_entities(entities){\n\t// \t// let p = Promise.resolve(); // Q() in q\n\n\t// \tconst param = this._value_param();\n\n\t// \tif (param.has_expression()) {\n\t// \t\t// const iterator = new CoreIterator()\n\t// \t\t// await iterator.start_with_array(entities, (element, index)=>{\n\n\t// \t\t// })\n\t// \t\tfor(let entity of entities){\n\t// \t\t\tawait this._eval_param_for_entity(param, entity);\n\t// \t\t}\n\n\t// \t\t// entities.forEach((entity, index)=> {\n\t// \t\t// \tp = p.then(() => {\n\t// \t\t// \t\treturn this._eval_param_for_entity(param, entity);\n\t// \t\t// \t});\n\t// \t\t// });\n\t// \t} else {\n\t// \t\tconst val = await param.eval_p();\n\t// \t\tfor(let entity of entities){\n\t// \t\t\tthis._values.push(val);\n\t// \t\t}\n\t// \t\t// entities.forEach(entity=> {\n\t// \t\t// \treturn this._values.push(val);\n\t// \t\t// });\n\t// \t}\n\n\t// \t// return p;\n\t// }\n\n\t// async _eval_param_for_entity(value_param, entity){\n\t// \tthis.context().set_entity(entity);\n\n\t// \tlet val = await value_param.eval_p()\n\n\t// \t // TODO: optimize. pass directly to the entity instead\n\t// \tif(val.clone){\n\t// \t\tval = val.clone()\n\t// \t}\n\t// \tthis._values.push(val);\n\t// }\n\n\t// private _default_attrib_value() {\n\t// \treturn DEFAULT_VALUE[this._value_param_name()];\n\t// }\n\n\t// private _value_param_name() {\n\t// \tif (this.pv.type == CoreConstant.ATTRIB_TYPE.NUMERIC) {\n\t// \t\tif (this.pv.size == 1) {\n\t// \t\t\treturn VALUE_PARAM.VALUEX;\n\t// \t\t} else {\n\t// \t\t\treturn VALUE_PARAM.VALUE;\n\t// \t\t}\n\t// \t} else {\n\t// \t\treturn VALUE_PARAM.STRING;\n\t// \t}\n\t// }\n\t// private _value_param() {\n\t// \treturn this.params.get(this._value_param_name());\n\t// }\n\n\tprivate _init_array_if_required(\n\t\tgeometry: BufferGeometry,\n\t\tarrays_by_geometry_uuid: ValueArrayByName,\n\t\tpoints_count: number\n\t) {\n\t\tconst uuid = geometry.uuid;\n\t\tconst current_array = arrays_by_geometry_uuid[uuid];\n\t\tif (current_array) {\n\t\t\t// only create new array if we need more point, or as soon as the length is different?\n\t\t\tif (current_array.length < points_count) {\n\t\t\t\tarrays_by_geometry_uuid[uuid] = new Array(points_count);\n\t\t\t}\n\t\t} else {\n\t\t\tarrays_by_geometry_uuid[uuid] = new Array(points_count);\n\t\t}\n\t\treturn arrays_by_geometry_uuid[uuid];\n\t}\n\n\t// private _commit_tmp_values(tmp_array: number[], target_array: number[], offset: number) {\n\t// \tfor (let i = 0; i < tmp_array.length; i++) {\n\t// \t\ttarget_array[i * 3 + offset] = tmp_array[i];\n\t// \t}\n\t// }\n}\n","import {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreObject} from '../../../core/geometry/Object';\nimport {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {AttribClassMenuEntries, AttribClass} from '../../../core/geometry/Constant';\n\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Mesh} from 'three/src/objects/Mesh';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AttribDeleteSopParamsConfig extends NodeParamsConfig {\n\tclass = ParamConfig.INTEGER(AttribClass.VERTEX, {\n\t\tmenu: {\n\t\t\tentries: AttribClassMenuEntries,\n\t\t},\n\t});\n\tname = ParamConfig.STRING('');\n}\nconst ParamsConfig = new AttribDeleteSopParamsConfig();\n\nexport class AttribDeleteSopNode extends TypedSopNode<AttribDeleteSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_delete';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to delete attributes from'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tconst attrib_names = core_group.attrib_names_matching_mask(this.pv.name);\n\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tswitch (this.pv.class) {\n\t\t\t\tcase AttribClass.VERTEX:\n\t\t\t\t\tthis.delete_vertex_attribute(core_group, attrib_name);\n\t\t\t\tcase AttribClass.OBJECT:\n\t\t\t\t\tthis.delete_object_attribute(core_group, attrib_name);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tdelete_vertex_attribute(core_group: CoreGroup, attrib_name: string) {\n\t\tfor (let object of core_group.objects()) {\n\t\t\tobject.traverse((object3d: Object3D) => {\n\t\t\t\tconst child = object3d as Mesh;\n\t\t\t\tif (child.geometry) {\n\t\t\t\t\tconst core_geometry = new CoreGeometry(child.geometry as BufferGeometry);\n\t\t\t\t\tcore_geometry.delete_attribute(attrib_name);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tdelete_object_attribute(core_group: CoreGroup, attrib_name: string) {\n\t\tfor (let object of core_group.objects()) {\n\t\t\tlet index = 0;\n\t\t\tobject.traverse((object3d: Object3D) => {\n\t\t\t\tconst child = object3d as Mesh;\n\t\t\t\tconst core_object = new CoreObject(child, index);\n\t\t\t\tcore_object.delete_attribute(attrib_name);\n\t\t\t\tindex++;\n\t\t\t});\n\t\t}\n\t}\n}\n","import {TypedSopNode} from './_Base';\nimport {Vector3} from 'three/src/math/Vector3';\nimport lodash_max from 'lodash/max';\nimport lodash_min from 'lodash/min';\nimport lodash_isNumber from 'lodash/isNumber';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AttribNormalizeSopParamsConfig extends NodeParamsConfig {\n\tname = ParamConfig.STRING('');\n\tchange_name = ParamConfig.BOOLEAN(false);\n\tnew_name = ParamConfig.STRING('', {visible_if: {change_name: 1}});\n}\nconst ParamsConfig = new AttribNormalizeSopParamsConfig();\n\nexport class AttribNormalizeSopNode extends TypedSopNode<AttribNormalizeSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_normalize';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tthis._normalize_attribute(core_group);\n\t\tthis.set_core_group(core_group);\n\t}\n\n\t_normalize_attribute(core_group: CoreGroup) {\n\t\tconst points = core_group.points();\n\t\tif (points.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.pv.name === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attrib_size = points[0].attrib_size(this.pv.name);\n\t\tconst values = points.map((point) => point.attrib_value(this.pv.name));\n\t\tlet normalized_values: NumericAttribValue[] = [];\n\t\tlet min: NumericAttribValue, max: NumericAttribValue;\n\t\tswitch (attrib_size) {\n\t\t\tcase 1:\n\t\t\t\t// if (this._param_only_integer_values) {\n\t\t\t\t// \tconst sorted_values = lodash_uniq(lodash_sortBy(values));\n\t\t\t\t// \tconst index_by_value = {};\n\t\t\t\t// \tlodash_each(sorted_values, (sorted_value, i)=> index_by_value[sorted_value] = i);\n\t\t\t\t// \tnormalized_values = lodash_map(values, value=> index_by_value[value]);\n\n\t\t\t\t// } else {\n\t\t\t\tmin = lodash_min(values);\n\t\t\t\tmax = lodash_max(values);\n\t\t\t\t//this._save_min_max(group, min, max)\n\t\t\t\tif (lodash_isNumber(min) && lodash_isNumber(max)) {\n\t\t\t\t\tfor (let value of values) {\n\t\t\t\t\t\tconst normalized_value = max > min ? (value - min) / (max - min) : 1;\n\t\t\t\t\t\tnormalized_values.push(normalized_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tmin = new Vector3(\n\t\t\t\t\tlodash_min(values.map((v) => v.x)),\n\t\t\t\t\tlodash_min(values.map((v) => v.y)),\n\t\t\t\t\tlodash_min(values.map((v) => v.z))\n\t\t\t\t);\n\t\t\t\tmax = new Vector3(\n\t\t\t\t\tlodash_max(values.map((v) => v.x)),\n\t\t\t\t\tlodash_max(values.map((v) => v.y)),\n\t\t\t\t\tlodash_max(values.map((v) => v.z))\n\t\t\t\t);\n\t\t\t\t//this._save_min_max(group, min, max)\n\t\t\t\tif (min instanceof Vector3 && max instanceof Vector3) {\n\t\t\t\t\tfor (let value of values) {\n\t\t\t\t\t\tconst normalized_value = new Vector3(\n\t\t\t\t\t\t\t(value.x - min.x) / (max.x - min.x),\n\t\t\t\t\t\t\t(value.y - min.y) / (max.y - min.y),\n\t\t\t\t\t\t\t(value.z - min.z) / (max.z - min.z)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnormalized_values.push(normalized_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet target_name = this.pv.name;\n\t\tif (this.pv.change_name) {\n\t\t\ttarget_name = this.pv.new_name;\n\t\t\tif (!core_group.has_attrib(target_name)) {\n\t\t\t\tcore_group.add_numeric_vertex_attrib(target_name, attrib_size, 0);\n\t\t\t}\n\t\t}\n\n\t\tnormalized_values.forEach((normalized_value, i) => {\n\t\t\tconst point = points[i];\n\t\t\tpoint.set_attrib_value(target_name, normalized_value);\n\t\t});\n\t}\n}\n\n// TODO: they should be saved as a detail, not per object\n// _save_min_max: (group, min, max)->\n// \tgroup.traverse (object)=>\n// \t\tobject_wrapper = new Core.Geometry.Object(object)\n// \t\tobject_wrapper.add_attribute(\"#{@pv.name}_min\", min)\n// \t\tobject_wrapper.add_attribute(\"#{@pv.name}_max\", max)\n","import lodash_max from 'lodash/max';\nimport lodash_min from 'lodash/min';\n\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {TypedSopNode} from './_Base';\nimport {AttribClass, AttribClassMenuEntries} from '../../../core/geometry/Constant';\nimport {CoreObject} from '../../../core/geometry/Object';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreString} from '../../../core/String';\n\nexport enum AttribPromoteMode {\n\tMIN = 0,\n\tMAX = 1,\n\tFIRST_FOUND = 2,\n}\n// const PROMOTE_MODE:PROMOTE_MODE = {\n// \tMIN: 0,\n// \tMAX: 1,\n// \t// AVERAGE: 2,\n// \tFIRST_FOUND: 3,\n// };\nconst PromoteModeMenuEntries = [\n\t{name: 'min', value: AttribPromoteMode.MIN},\n\t{name: 'max', value: AttribPromoteMode.MAX},\n\t{name: 'first_found', value: AttribPromoteMode.FIRST_FOUND},\n];\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AttribPromoteSopParamsConfig extends NodeParamsConfig {\n\tclass_from = ParamConfig.INTEGER(AttribClass.VERTEX, {\n\t\tmenu: {\n\t\t\tentries: AttribClassMenuEntries,\n\t\t},\n\t});\n\tclass_to = ParamConfig.INTEGER(AttribClass.OBJECT, {\n\t\tmenu: {\n\t\t\tentries: AttribClassMenuEntries,\n\t\t},\n\t});\n\tmode = ParamConfig.INTEGER(AttribPromoteMode.FIRST_FOUND, {\n\t\tmenu: {\n\t\t\tentries: PromoteModeMenuEntries,\n\t\t},\n\t});\n\tname = ParamConfig.STRING('');\n}\nconst ParamsConfig = new AttribPromoteSopParamsConfig();\n\nexport class AttribPromoteSopNode extends TypedSopNode<AttribPromoteSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_promote';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t\t// this.ui_data.set_icon('sort-amount-up');\n\t}\n\n\tcreate_params() {}\n\n\tprivate _core_group: CoreGroup | undefined;\n\tprivate _core_object: CoreObject | undefined;\n\tprivate _values_per_attrib_name: Dictionary<number[]> = {};\n\tprivate _filtered_values_per_attrib_name: Dictionary<number | undefined> = {};\n\tcook(input_contents: CoreGroup[]) {\n\t\tthis._core_group = input_contents[0];\n\n\t\tthis._values_per_attrib_name = {};\n\t\tthis._filtered_values_per_attrib_name = {};\n\n\t\tfor (let core_object of this._core_group.core_objects()) {\n\t\t\tthis._core_object = core_object;\n\t\t\tthis.find_values();\n\t\t\tthis.filter_values();\n\t\t\tthis.set_values();\n\t\t}\n\n\t\t// switch @_param_class_from\n\t\t// \twhen Core.Geometry.ATTRIB_CLASS.VERTEX then this.promote_attribute_from_vertex()\n\t\t// \twhen Core.Geometry.ATTRIB_CLASS.OBJECT then this.promote_attribute_from_object()\n\t\tthis.set_core_group(this._core_group);\n\t}\n\n\t// private promote_attribute_from_vertex() {\n\t// \t// switch (this.pv.class_to) {\n\t// \t// \tcase AttribClass.VERTEX:\n\t// \t\t\treturn this.promote_attribute_from_vertex_to_vertex();\n\t// \t\t// case AttribClass.OBJECT:\n\t// \t\t// return this.promote_attribute_from_vertex_to_object();\n\t// \t// }\n\t// }\n\n\t// private promote_attribute_from_object() {\n\t// \tswitch (this.pv.class_to) {\n\t// \t\tcase AttribClass.VERTEX:\n\t// \t\t// return this.promote_attribute_from_object_to_vertex();\n\t// \t\tcase AttribClass.OBJECT:\n\t// \t\t// return this.promote_attribute_from_object_to_object();\n\t// \t}\n\t// }\n\n\t// private promote_attribute_from_vertex_to_vertex() {\n\t// \tif (this._core_group) {\n\t// \t\tconst attrib_names = CoreString.attrib_names(this.pv.name);\n\t// \t\tconst points = this._core_group.points();\n\t// \t\tfor (let attrib_name of attrib_names) {\n\t// \t\t\tconst values = lodash_map(points, (point) => point.attrib_value(attrib_name));\n\t// \t\t\tconst new_value = (() => {\n\t// \t\t\t\tswitch (this.pv.mode) {\n\t// \t\t\t\t\tcase PromoteMode.MIN:\n\t// \t\t\t\t\t\treturn lodash_min(values);\n\t// \t\t\t\t\tcase PromoteMode.MAX:\n\t// \t\t\t\t\t\treturn lodash_max(values);\n\t// \t\t\t\t\t// case PROMOTE_MODE.AVERAGE: return lodash_average(values);\n\t// \t\t\t\t\tdefault:\n\t// \t\t\t\t\t\treturn null;\n\t// \t\t\t\t}\n\t// \t\t\t})();\n\n\t// \t\t\tif (new_value != null) {\n\t// \t\t\t\tlodash_each(points, (point) => point.set_attrib_value(attrib_name, new_value));\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tprivate find_values() {\n\t\tconst attrib_names = CoreString.attrib_names(this.pv.name);\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tswitch (this.pv.class_from) {\n\t\t\t\tcase AttribClass.VERTEX:\n\t\t\t\t\treturn this.find_values_from_points(attrib_name);\n\t\t\t\tcase AttribClass.OBJECT:\n\t\t\t\t\treturn this.find_values_from_object(attrib_name);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate find_values_from_points(attrib_name: string) {\n\t\tif (this._core_object) {\n\t\t\tconst points = this._core_object.points();\n\t\t\tthis._values_per_attrib_name[attrib_name] = points.map((point) => point.attrib_value(attrib_name));\n\t\t}\n\t}\n\n\tprivate find_values_from_object(attrib_name: string) {\n\t\tthis._values_per_attrib_name[attrib_name] = [];\n\t\tif (this._core_object) {\n\t\t\tthis._values_per_attrib_name[attrib_name].push(this._core_object.attrib_value(attrib_name) as number);\n\t\t}\n\t}\n\n\tprivate filter_values() {\n\t\tconst attrib_names = Object.keys(this._values_per_attrib_name);\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tconst values = this._values_per_attrib_name[attrib_name];\n\t\t\tswitch (this.pv.mode) {\n\t\t\t\tcase AttribPromoteMode.MIN:\n\t\t\t\t\tthis._filtered_values_per_attrib_name[attrib_name] = lodash_min(values);\n\t\t\t\t\tbreak;\n\t\t\t\tcase AttribPromoteMode.MAX:\n\t\t\t\t\tthis._filtered_values_per_attrib_name[attrib_name] = lodash_max(values);\n\t\t\t\t\tbreak;\n\t\t\t\t// case PROMOTE_MODE.AVERAGE: return lodash_average(values);\n\t\t\t\tcase AttribPromoteMode.FIRST_FOUND:\n\t\t\t\t\tthis._filtered_values_per_attrib_name[attrib_name] = values[0];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate set_values() {\n\t\tconst attrib_names = Object.keys(this._filtered_values_per_attrib_name);\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tconst new_value = this._filtered_values_per_attrib_name[attrib_name];\n\t\t\tif (new_value != null) {\n\t\t\t\tswitch (this.pv.class_to) {\n\t\t\t\t\tcase AttribClass.VERTEX:\n\t\t\t\t\t\tthis.set_values_to_points(attrib_name, new_value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase AttribClass.OBJECT:\n\t\t\t\t\t\tthis.set_values_to_object(attrib_name, new_value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate set_values_to_points(attrib_name: string, new_value: NumericAttribValue) {\n\t\tif (this._core_group && this._core_object) {\n\t\t\tconst attribute_exists = this._core_group.has_attrib(attrib_name);\n\t\t\tif (!attribute_exists) {\n\t\t\t\tconst param_size = 1; // TODO: allow size with larger params\n\t\t\t\tthis._core_group.add_numeric_vertex_attrib(attrib_name, param_size, new_value);\n\t\t\t}\n\n\t\t\tconst points = this._core_object.points();\n\t\t\tpoints.forEach((point) => point.set_attrib_value(attrib_name, new_value));\n\t\t}\n\t}\n\n\tprivate set_values_to_object(attrib_name: string, new_value: NumericAttribValue) {\n\t\tthis._core_object?.set_attrib_value(attrib_name, new_value);\n\t}\n}\n","import lodash_max from 'lodash/max';\nimport lodash_min from 'lodash/min';\nimport lodash_sortBy from 'lodash/sortBy';\nimport lodash_uniq from 'lodash/uniq';\nimport lodash_isNumber from 'lodash/isNumber';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass AttribRemapSopParamsConfig extends NodeParamsConfig {\n\tname = ParamConfig.STRING();\n\tramp = ParamConfig.RAMP();\n\tchange_name = ParamConfig.BOOLEAN(0);\n\tnew_name = ParamConfig.STRING('', {visible_if: {change_name: 1}});\n}\nconst ParamsConfig = new AttribRemapSopParamsConfig();\n\nexport class AttribRemapSopNode extends TypedSopNode<AttribRemapSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_remap';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tthis._remap_attribute(core_group);\n\t\tthis.set_core_group(core_group);\n\t}\n\n\t_remap_attribute(core_group: CoreGroup) {\n\t\tconst points = core_group.points();\n\t\tif (points.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.pv.name === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attrib_size = points[0].attrib_size(this.pv.name);\n\t\tconst values = points.map((point) => point.attrib_value(this.pv.name));\n\t\tlet min: NumericAttribValue, max: NumericAttribValue;\n\t\tlet normalized_values: NumericAttribValue[] = new Array(points.length);\n\t\tswitch (attrib_size) {\n\t\t\tcase 1:\n\t\t\t\tif (this.pv.only_integer_values) {\n\t\t\t\t\tconst sorted_values = lodash_uniq(lodash_sortBy(values));\n\t\t\t\t\tconst index_by_value: Dictionary<number> = {};\n\t\t\t\t\tsorted_values.forEach((sorted_value, i) => (index_by_value[sorted_value] = i));\n\t\t\t\t\tnormalized_values = values.map((value) => index_by_value[value]);\n\t\t\t\t} else {\n\t\t\t\t\tmin = lodash_min(values);\n\t\t\t\t\tmax = lodash_max(values);\n\t\t\t\t\t//this._save_min_max(group, min, max)\n\t\t\t\t\tif (lodash_isNumber(min) && lodash_isNumber(max)) {\n\t\t\t\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\t\t\t\tconst value = values[i];\n\t\t\t\t\t\t\tconst normalized_value = max > min ? (value - min) / (max - min) : 1;\n\t\t\t\t\t\t\tnormalized_values[i] = normalized_value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\tmin = new Vector3(\n\t\t\t\t\tlodash_min(values.map((v) => v.x)),\n\t\t\t\t\tlodash_min(values.map((v) => v.y)),\n\t\t\t\t\tlodash_min(values.map((v) => v.z))\n\t\t\t\t);\n\t\t\t\tmax = new Vector3(\n\t\t\t\t\tlodash_max(values.map((v) => v.x)),\n\t\t\t\t\tlodash_max(values.map((v) => v.y)),\n\t\t\t\t\tlodash_max(values.map((v) => v.z))\n\t\t\t\t);\n\t\t\t\t//this._save_min_max(group, min, max)\n\t\t\t\tif (min instanceof Vector3 && max instanceof Vector3) {\n\t\t\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\t\t\tconst value = values[i];\n\t\t\t\t\t\tconst normalized_value = new Vector3(\n\t\t\t\t\t\t\t(value.x - min.x) / (max.x - min.x),\n\t\t\t\t\t\t\t(value.y - min.y) / (max.y - min.y),\n\t\t\t\t\t\t\t(value.z - min.z) / (max.z - min.z)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tnormalized_values[i] = normalized_value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet target_name = this.pv.name;\n\t\tif (this.pv.change_name) {\n\t\t\ttarget_name = this.pv.new_name;\n\t\t\tif (!core_group.has_attrib(target_name)) {\n\t\t\t\tcore_group.add_numeric_vertex_attrib(target_name, attrib_size, 0);\n\t\t\t}\n\t\t}\n\n\t\tnormalized_values.forEach((normalized_value, i) => {\n\t\t\tconst point = points[i];\n\t\t\tpoint.set_attrib_value(target_name, normalized_value);\n\t\t});\n\t}\n}\n\n// TODO: they should be saved as a detail, not per object\n// _save_min_max: (group, min, max)->\n// \tgroup.traverse (object)=>\n// \t\tobject_wrapper = new Core.Geometry.Object(object)\n// \t\tobject_wrapper.add_attribute(\"#{@_param_name}_min\", min)\n// \t\tobject_wrapper.add_attribute(\"#{@_param_name}_max\", max)\n","import {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {AttribClassMenuEntries, AttribClass} from '../../../core/geometry/Constant';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nclass AttribRenameSopParamsConfig extends NodeParamsConfig {\n\tclass = ParamConfig.INTEGER(AttribClass.VERTEX, {\n\t\tmenu: {\n\t\t\tentries: AttribClassMenuEntries,\n\t\t},\n\t});\n\told_name = ParamConfig.STRING();\n\tnew_name = ParamConfig.STRING();\n}\nconst ParamsConfig = new AttribRenameSopParamsConfig();\n\nexport class AttribRenameSopNode extends TypedSopNode<AttribRenameSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_rename';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\t// const group = input_containers[0].group();\n\t\tconst core_group = input_contents[0];\n\n\t\tcore_group.rename_attrib(this.pv.old_name, this.pv.new_name, this.pv.class);\n\n\t\tthis.set_core_group(core_group);\n\t}\n}\n","import {TypedSopNode} from './_Base';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {CoreGroup} from '../../../core/geometry/Group';\n// import {CoreMath} from '../../../core/math/_Module';\nimport {CoreInterpolate} from '../../../core/math/Interpolate';\nimport {CoreOctree} from '../../../core/math/octree/Octree';\nimport {CoreIterator} from '../../../core/Iterator';\n// import lodash_sum from 'lodash/sum';\n\n// enum TransferMethod {\n// \tAUTO = 0,\n// \tARTISTIC = 1,\n// }\n// const TransferMethodMenuEntries = [\n// \t{name: 'auto', value: TransferMethod.AUTO},\n// \t{name: 'artistic', value: TransferMethod.ARTISTIC},\n// ];\n\n// const LATITUDE = 'Latitude'\n// const LONGITUDE = 'Longitude'\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nclass AttribTransferSopParamsConfig extends NodeParamsConfig {\n\tsrc_group = ParamConfig.STRING();\n\tdest_group = ParamConfig.STRING();\n\tname = ParamConfig.STRING();\n\tmax_samples_count = ParamConfig.INTEGER(1, {\n\t\trange: [1, 10],\n\t\trange_locked: [true, false],\n\t});\n\t// method = ParamConfig.INTEGER(TransferMethod.AUTO, {\n\t// \tmenu: {\n\t// \t\tentries: TransferMethodMenuEntries,\n\t// \t},\n\t// });\n\tdistance_threshold = ParamConfig.FLOAT(1);\n\tblend_width = ParamConfig.FLOAT(0);\n}\nconst ParamsConfig = new AttribTransferSopParamsConfig();\n\nexport class AttribTransferSopNode extends TypedSopNode<AttribTransferSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'attrib_transfer';\n\t}\n\n\t_core_group_dest!: CoreGroup;\n\t_core_group_src!: CoreGroup;\n\n\t// utils\n\t_attrib_names!: string[];\n\t_octree_timestamp: number | undefined;\n\t_prev_param_src_group: string | undefined;\n\t_octree: CoreOctree | undefined;\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to transfer attributes to', 'geometry to transfer attributes from'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(2);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE, InputCloneMode.NEVER]);\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\t// this._group_dest = input_containers[0].group();\n\t\t// const container1 = input_containers[1];\n\n\t\tthis._core_group_dest = input_contents[0]; //new CoreGroup(this._group_dest);\n\t\tconst dest_points = this._core_group_dest.points_from_group(this.pv.dest_group);\n\n\t\t// this._group_src = input_containers[1] //container1.group({ clone: false });\n\t\tthis._core_group_src = input_contents[1]; //new CoreGroup(this._group_src);\n\n\t\tthis._attrib_names = this._core_group_src.attrib_names_matching_mask(this.pv.name);\n\t\tthis._error_if_attribute_not_found_on_second_input();\n\t\tthis._build_octree_if_required(this._core_group_src);\n\t\tthis._add_attribute_if_required();\n\n\t\tawait this._transfer_attributes(dest_points);\n\t\tthis.set_core_group(this._core_group_dest);\n\t}\n\n\t_error_if_attribute_not_found_on_second_input() {\n\t\tfor (let attrib_name of this._attrib_names) {\n\t\t\tif (!this._core_group_src.has_attrib(attrib_name)) {\n\t\t\t\tthis.states.error.set(`attribute '${attrib_name}' not found on second input`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _build_octree_if_required(core_group: CoreGroup) {\n\t\tconst second_input_changed =\n\t\t\tthis._octree_timestamp == null || this._octree_timestamp !== core_group.timestamp();\n\t\tconst src_group_changed = this._prev_param_src_group !== this.pv.src_group;\n\n\t\tif (src_group_changed || second_input_changed) {\n\t\t\tthis._octree_timestamp = core_group.timestamp();\n\t\t\tthis._prev_param_src_group = this.pv.src_group;\n\n\t\t\tconst points_src = this._core_group_src.points_from_group(this.pv.src_group);\n\n\t\t\tthis._octree = new CoreOctree(this._core_group_src.bounding_box());\n\t\t\tthis._octree.set_points(points_src);\n\t\t}\n\t}\n\n\tprivate _add_attribute_if_required() {\n\t\tthis._attrib_names.forEach((attrib_name) => {\n\t\t\tif (!this._core_group_dest.has_attrib(attrib_name)) {\n\t\t\t\tconst attrib_size = this._core_group_src.attrib_size(attrib_name);\n\t\t\t\tthis._core_group_dest.add_numeric_vertex_attrib(attrib_name, attrib_size, 0);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _transfer_attributes(dest_points: CorePoint[]) {\n\t\t// const start_time = performance.now()\n\t\tconst iterator = new CoreIterator();\n\t\tawait iterator.start_with_array(dest_points, this._transfer_attributes_for_point.bind(this));\n\t\t// for(let dest_point of dest_points){\n\n\t\t// \tthis._transfer_attributes_for_point(dest_point)\n\n\t\t// }\n\t}\n\tprivate _transfer_attributes_for_point(dest_point: CorePoint) {\n\t\tconst total_dist = this.pv.distance_threshold + this.pv.blend_width;\n\t\tconst nearest_points: CorePoint[] =\n\t\t\tthis._octree?.find_points(dest_point.position(), total_dist, this.pv.max_samples_count) || [];\n\n\t\t// test[nearest_points.length] = test[nearest_points.length] || 0\n\t\t// test[nearest_points.length] += 1\n\n\t\tfor (let attrib_name of this._attrib_names) {\n\t\t\tthis._interpolate_points(dest_point, nearest_points, attrib_name);\n\t\t}\n\t}\n\n\t// if @_param_draw_connections\n\t// \tlodash_each nearest_points, (nearest_point)=>\n\t// \t\t@_connection_point_pairs.push([ nearest_point.position(), dest_point.position() ])\n\n\t// if @_param_draw_connections\n\t// \tthis._draw_connections()\n\n\tprivate _interpolate_points(point_dest: CorePoint, src_points: CorePoint[], attrib_name: string) {\n\t\tlet new_value: number;\n\t\t// if (this.pv.method == TransferMethod.ARTISTIC) {\n\n\t\tnew_value = CoreInterpolate.perform(\n\t\t\tpoint_dest,\n\t\t\tsrc_points,\n\t\t\tattrib_name,\n\t\t\tthis.pv.distance_threshold,\n\t\t\tthis.pv.blend_width\n\t\t);\n\t\t// } else {\n\t\t// \tnew_value = this._select(point_dest, src_points, attrib_name);\n\t\t// \tconsole.log('B new_value', new_value);\n\t\t// }\n\n\t\tif (new_value != null) {\n\t\t\tpoint_dest.set_attrib_value(attrib_name, new_value);\n\t\t}\n\t}\n\n\t// private _select(point_dest: CorePoint, src_points: CorePoint[], attrib_name: string) {\n\t// \tconst src_values = [];\n\t// \tconst inverse_distances = [];\n\t// \tconst dest_position = point_dest.position();\n\t// \tconst dest_lng_lat = {lng: dest_position.x, lat: dest_position.z};\n\t// \tfor (let src_point of src_points) {\n\t// \t\t// const dist = dest_position.distanceTo(src_point.position()) //* 0.1\n\t// \t\tconst src_position = src_point.position();\n\t// \t\tconst src_lng_lat = {lng: src_position.x, lat: src_position.z};\n\t// \t\tconst dist = CoreMath.geodesic_distance(src_lng_lat, dest_lng_lat);\n\t// \t\tconst dist_squared = dist * dist;\n\t// \t\tconst attrib_value = src_point.attrib_value(attrib_name);\n\n\t// \t\tsrc_values.push(attrib_value / dist_squared);\n\t// \t\tinverse_distances.push(1 / dist_squared);\n\t// \t}\n\n\t// \tconst sum = lodash_sum(src_values) / lodash_sum(inverse_distances);\n\t// \treturn sum;\n\t// }\n\n\t// ROUND(\n\n\t// \tSUM(\n\t// \t\tValue\n\t// \t\t/\n\t// \t\t(dist_meters*dist_meters)\n\t// \t\t)\n\t// \t/\n\t// \tSUM(\n\t// \t\t1\n\t// \t\t/\n\t// \t\t(dist_meters*dist_meters)\n\t// \t\t)\n\n\t// \t,1\n\n\t// )\n\n\t// _draw_connections() {\n\t// \tlet positions = [];\n\t// \tconst indices = [];\n\n\t// \tlodash_each(this._connection_point_pairs, function(current_positions, i) {\n\n\t// \t\tpositions.push(current_positions[0].toArray());\n\t// \t\tpositions.push(current_positions[1].toArray());\n\n\t// \t\tindices.push((2 * i) + 0);\n\t// \t\treturn indices.push((2 * i) + 1);\n\t// \t});\n\n\t// \tpositions = lodash_flatten(positions);\n\t// \tconst geometry = new THREE.BufferGeometry();\n\t// \tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\t// \tgeometry.setIndex(indices);\n\t// \tconst object = this.create_object(geometry, Core.Geometry.Constant.OBJECT_TYPE.LINE_SEGMENTS);\n\t// \treturn this._group_dest.add(object);\n\t// }\n}\n","import lodash_max from 'lodash/max';\n// import lodash_last from 'lodash/last'\nimport lodash_sum from 'lodash/sum';\n\nimport {Vector3} from 'three/src/math/Vector3';\n// import {Vector2} from 'three/src/math/Vector2';\n// import {_Math} from 'three/src/math/MathU';\n// const THREE = {Math: _Math, Vector2, Vector3}\nimport {CorePoint} from '../geometry/Point';\n\nexport class CoreInterpolate {\n\tstatic perform(\n\t\tpoint_dest: CorePoint,\n\t\tpoints_src: CorePoint[],\n\t\tattrib_name: string,\n\t\tdistance_threshold: number,\n\t\tblend_with: number\n\t): number {\n\t\tswitch (points_src.length) {\n\t\t\tcase 0:\n\t\t\t\treturn 0;\n\t\t\tcase 1:\n\t\t\t\treturn this._interpolate_with_1_point(\n\t\t\t\t\tpoint_dest,\n\t\t\t\t\tpoints_src[0],\n\t\t\t\t\tattrib_name,\n\t\t\t\t\tdistance_threshold,\n\t\t\t\t\tblend_with\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\t// positions_src = lodash_map(points_src, (point) -> point.position())\n\t\t\t\t// values_src = lodash_map(points_src, (point) -> point.attrib_value(attrib_name))\n\t\t\t\t// position_dest = point_dest.position()\n\t\t\t\t//if positions_src.length > 3\n\t\t\t\t//\tpositions_src = positions_src.slice(0,3)\n\t\t\t\t//this._interpolate_with_3_points_max(positions_src, values_src, position_dest, dest_value)\n\t\t\t\treturn this._interpolate_with_multiple_points(\n\t\t\t\t\tpoint_dest,\n\t\t\t\t\tpoints_src,\n\t\t\t\t\tattrib_name,\n\t\t\t\t\tdistance_threshold,\n\t\t\t\t\tblend_with\n\t\t\t\t);\n\t\t}\n\t}\n\n\tstatic _interpolate_with_1_point(\n\t\tpoint_dest: CorePoint,\n\t\tpoint_src: CorePoint,\n\t\tattrib_name: string,\n\t\tdistance_threshold: number,\n\t\tblend_with: number\n\t): number {\n\t\tconst position_dest = point_dest.position();\n\t\tconst position_src = point_src.position();\n\t\tconst distance = position_dest.distanceTo(position_src);\n\n\t\tconst value_src = point_src.attrib_value(attrib_name);\n\t\treturn this._weighted_value_from_distance(\n\t\t\tpoint_dest,\n\t\t\tvalue_src,\n\t\t\tattrib_name,\n\t\t\tdistance,\n\t\t\tdistance_threshold,\n\t\t\tblend_with\n\t\t);\n\t}\n\n\tstatic _weight_from_distance(distance: number, distance_threshold: number, blend_with: number) {\n\t\treturn (distance - distance_threshold) / blend_with;\n\t}\n\n\tstatic _weighted_value_from_distance(\n\t\tpoint_dest: CorePoint,\n\t\tvalue_src: number,\n\t\tattrib_name: string,\n\t\tdistance: number,\n\t\tdistance_threshold: number,\n\t\tblend_with: number\n\t): number {\n\t\tif (distance <= distance_threshold) {\n\t\t\treturn value_src;\n\t\t} else {\n\t\t\tconst value_dest = point_dest.attrib_value(attrib_name);\n\t\t\tconst blend = this._weight_from_distance(distance, distance_threshold, blend_with);\n\t\t\treturn blend * value_dest + (1 - blend) * value_src;\n\t\t\t// switch (point_dest.attrib_size(attrib_name)) {\n\t\t\t// \tcase 1:\n\t\t\t// \t\t// const value_src_as_number = value_src as number;\n\t\t\t// \t\treturn blend * value_dest + (1 - blend) * value_src;\n\t\t\t// \tcase 2:\n\t\t\t// \t\tconst value_src_as_vec2 = value_src as Vector2Like;\n\t\t\t// \t\treturn new Vector2(\n\t\t\t// \t\t\tblend * value_dest.x + (1 - blend) * value_src_as_vec2.x,\n\t\t\t// \t\t\tblend * value_dest.y + (1 - blend) * value_src_as_vec2.y\n\t\t\t// \t\t);\n\t\t\t// \tcase 3:\n\t\t\t// \t\tconst value_src_as_vec3 = value_src as Vector3Like;\n\t\t\t// \t\treturn new Vector3(\n\t\t\t// \t\t\tblend * value_dest.x + (1 - blend) * value_src_as_vec3.x,\n\t\t\t// \t\t\tblend * value_dest.y + (1 - blend) * value_src_as_vec3.y,\n\t\t\t// \t\t\tblend * value_dest.z + (1 - blend) * value_src_as_vec3.z\n\t\t\t// \t\t);\n\t\t\t// \tdefault:\n\t\t\t// \t\treturn 0;\n\t\t\t// }\n\t\t}\n\t}\n\n\t// @_interpolate_with_3_points_max: (positions_src, values_src, position_dest, dest_value)->\n\t// \tweights = this.weights( position_dest, positions_src )\n\t// \tinterpolated_value = lodash_sum lodash_map values_src, (src_value, i)=>\n\t// \t\tweights[i] * src_value\n\n\t// \tif dest_value?\n\t// \t\t0.5 * (dest_value + src_value)\n\t// \telse\n\t// \t\tinterpolated_value\n\n\t// weights: http://www.sidefx.com/docs/houdini/nodes/vop/pcfilter.html\n\t// w_i = 1-smooth(0, maxd*1.1, d_i);\n\t// maxd is the farthest point, and w_i is the weight for a given point at distance (d_i). Points that are closer to the center will be weighted higher with that formula, rather than it being an average.\n\tstatic _interpolate_with_multiple_points(\n\t\tpoint_dest: CorePoint,\n\t\tpoints_src: CorePoint[],\n\t\tattrib_name: string,\n\t\tdistance_threshold: number,\n\t\tblend_with: number\n\t): number {\n\t\t// let new_value\n\t\t// const positions_src = lodash_map(points_src, (point) =>\n\t\t// \tpoint.position()\n\t\t// )\n\t\t// const values_src = lodash_map(points_src, (point) =>\n\t\t// \tpoint.attrib_value(attrib_name)\n\t\t// )\n\t\t// const position_dest = point_dest.position()\n\t\t// const attrib_size = point_dest.attrib_size(attrib_name);\n\n\t\t// const distances = lodash_map(positions_src, (src_position) =>\n\t\t// \tsrc_position.distanceTo(position_dest)\n\t\t// )\n\t\t// distances = distances.sort()\n\t\t// max_dist = lodash_last(distances)\n\t\t// const max_dist = distance_threshold + blend_with\n\n\t\t// const weights = lodash_map(positions_src, (src_position, i) => {\n\t\t// \tconst distance = distances[i]\n\t\t// \t//1 - Math.smootherstep(distance, 0, max_dist*1.1)\n\t\t// \treturn this._weight_from_distance(\n\t\t// \t\tdistance,\n\t\t// \t\tdistance_threshold,\n\t\t// \t\tblend_with\n\t\t// \t)\n\t\t// })\n\n\t\t// const total_weight = lodash_sum(weights)\n\n\t\t// weighted_values = lodash_map values_src, (src_value, i)->\n\t\t// \tswitch attrib_size\n\t\t// \t\twhen 1 then src_value * weights[i]\n\t\t// \t\telse\n\t\t// \t\t\tsrc_value.clone().multiplyScalar(weights[i])\n\t\tconst weighted_values_src = points_src.map((point_src) => {\n\t\t\treturn this._interpolate_with_1_point(point_dest, point_src, attrib_name, distance_threshold, blend_with);\n\t\t});\n\t\treturn lodash_max(weighted_values_src) || 0;\n\n\t\t// // TODO: we could have 2 modes of interpolation?\n\t\t// // return (new_value = (() => {\n\t\t// switch (attrib_size) {\n\t\t// \t// when 1 then lodash_sum(weighted_values_src) / values_src.length # mode 1\n\t\t// \tcase 1:\n\t\t// \t\treturn lodash_max(weighted_values_src); // mode 2\n\t\t// \tdefault:\n\t\t// \t\tthrow 'interpolation with multiple vectors not implemented yet';\n\t\t// \t// var new_vector = weighted_values_src[0].clone();\n\t\t// \t// new_vector.x = lodash_sum(lodash_map(weighted_values, 'x')) / total_weight;\n\t\t// \t// new_vector.y = lodash_sum(lodash_map(weighted_values, 'y')) / total_weight;\n\t\t// \t// if (new_vector.z != null) {\n\t\t// \t// \tnew_vector.z = lodash_sum(lodash_map(weighted_values, 'z')) / total_weight;\n\t\t// \t// }\n\t\t// \t// return new_vector;\n\t\t// }\n\t\t// })())\n\t}\n\n\t// https://math.stackexchange.com/questions/1336386/weighted-average-distance-between-3-or-more-positions\n\tstatic weights(current_position: Vector3, other_positions: Vector3[]) {\n\t\tswitch (other_positions.length) {\n\t\t\tcase 1:\n\t\t\t\treturn 1;\n\t\t\tcase 2:\n\t\t\t\treturn this._weights_from_2(current_position, other_positions);\n\t\t\tdefault:\n\t\t\t\tother_positions = other_positions.slice(0, 3);\n\t\t\t\treturn this._weights_from_3(current_position, other_positions);\n\t\t}\n\t}\n\n\tstatic _weights_from_2(current_position: Vector3, other_positions: Vector3[]) {\n\t\tconst dist_to_positions = other_positions.map((other_position) => current_position.distanceTo(other_position));\n\n\t\tconst distance_total = lodash_sum(dist_to_positions);\n\n\t\treturn [dist_to_positions[1] / distance_total, dist_to_positions[0] / distance_total];\n\t}\n\n\tstatic _weights_from_3(current_position: Vector3, other_positions: Vector3[]) {\n\t\tconst dist_to_positions = other_positions.map((other_position) => current_position.distanceTo(other_position));\n\n\t\tconst distance_total = lodash_sum([\n\t\t\tdist_to_positions[0] * dist_to_positions[1],\n\t\t\tdist_to_positions[0] * dist_to_positions[2],\n\t\t\tdist_to_positions[1] * dist_to_positions[2],\n\t\t]);\n\n\t\treturn [\n\t\t\t(dist_to_positions[1] * dist_to_positions[2]) / distance_total,\n\t\t\t(dist_to_positions[0] * dist_to_positions[2]) / distance_total,\n\t\t\t(dist_to_positions[0] * dist_to_positions[1]) / distance_total,\n\t\t];\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Sphere} from 'three/src/math/Sphere';\nimport {Box3} from 'three/src/math/Box3';\nimport lodash_sortBy from 'lodash/sortBy';\nimport {CorePoint} from '../../geometry/Point';\n// import {CoreMath} from './_Module'\n// import OctreeModule from './Octree/_Module';\nimport {OctreeNode, OctreeNodeTraverseCallback} from './Node';\n\nexport class CoreOctree {\n\tprivate _root: OctreeNode;\n\n\tconstructor(bbox: Box3) {\n\t\tthis._root = new OctreeNode(bbox);\n\t}\n\n\t// set_bounding_box(bbox: Box3) {\n\t// \tthis._root.set_bounding_box(bbox)\n\t// }\n\n\tset_points(points: CorePoint[]) {\n\t\tthis._root.set_points(points);\n\t}\n\n\ttraverse(callback: OctreeNodeTraverseCallback) {\n\t\tthis._root.traverse(callback);\n\t}\n\n\t// TODO: I am tempted to stop going through the leaves if\n\t// the ones currently seen already have the required number of points.\n\t// but that probably doesn't work as those points may end up being further\n\t// than the ones from the following leaf\n\tfind_points(position: Vector3, distance: number, max_points_count?: number): CorePoint[] {\n\t\tconst sphere = new Sphere(position, distance);\n\t\tlet found_points: CorePoint[] = [];\n\n\t\tif (this._root.intersects_sphere(sphere)) {\n\t\t\tthis._root.points_in_sphere(sphere, found_points);\n\t\t}\n\n\t\tif (max_points_count == null) {\n\t\t\treturn found_points;\n\t\t} else {\n\t\t\tif (found_points.length > max_points_count) {\n\t\t\t\tfound_points = lodash_sortBy(found_points, (point) => {\n\t\t\t\t\treturn point.position().distanceTo(position);\n\t\t\t\t});\n\t\t\t\t// const lng_lat = {lng: position.x, lat: position.z}\n\t\t\t\t// found_points = lodash_sortBy(found_points, (point)=>{\n\t\t\t\t// \tconst src_position = point.position()\n\t\t\t\t// \tconst src_lng_lat = {lng: src_position.x, lat: src_position.z}\n\t\t\t\t// \treturn CoreMath.geodesic_distance(src_lng_lat, lng_lat)\n\t\t\t\t// });\n\n\t\t\t\tfound_points = found_points.slice(0, max_points_count);\n\t\t\t}\n\n\t\t\treturn found_points;\n\t\t}\n\t}\n}\n\n// Octree.Node = OctreeNode;\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Sphere} from 'three/src/math/Sphere';\nimport {Box3} from 'three/src/math/Box3';\nimport lodash_flatten from 'lodash/flatten';\nimport {CorePoint} from '../../geometry/Point';\n\nexport type OctreeNodeTraverseCallback = (node: OctreeNode) => void;\n\nexport class OctreeNode {\n\t_leaves_by_octant: Dictionary<OctreeNode> = {};\n\t_points_by_octant_id: Dictionary<CorePoint[]> = {};\n\t_leaves: OctreeNode[] = [];\n\t// _bbox: Box3 | undefined;\n\t_center: Vector3;\n\t_bounding_boxes_by_octant: Dictionary<Box3> = {};\n\t_bounding_boxes_by_octant_prepared: boolean = false;\n\n\tconstructor(private _bbox: Box3, private _level: number = 0) {\n\t\tthis._center = this._bbox.max\n\t\t\t.clone()\n\t\t\t.add(this._bbox.min)\n\t\t\t.multiplyScalar(0.5);\n\t}\n\t// set_bounding_box(bbox: Box3) {\n\t// \tthis._bbox = bbox;\n\t// }\n\n\tlevel() {\n\t\treturn this._level;\n\t}\n\n\ttraverse(callback: OctreeNodeTraverseCallback) {\n\t\tcallback(this);\n\t\tconst octants = Object.values(this._leaves_by_octant);\n\t\toctants.forEach((node) => {\n\t\t\tnode.traverse(callback);\n\t\t});\n\t}\n\n\tintersects_sphere(sphere: Sphere): boolean {\n\t\tif (this._bbox) {\n\t\t\treturn this._bbox.intersectsSphere(sphere);\n\t\t}\n\t\treturn false;\n\t}\n\n\t//@PERF = 0\n\tpoints_in_sphere(sphere: Sphere, accumulated_points: CorePoint[]): void {\n\t\tif (this._leaves.length == 0) {\n\t\t\tconst found_points = lodash_flatten(Object.values(this._points_by_octant_id));\n\t\t\tconst selected_points = found_points.filter((point) => sphere.containsPoint(point.position()));\n\t\t\tselected_points.forEach((point) => {\n\t\t\t\taccumulated_points.push(point);\n\t\t\t});\n\t\t} else {\n\t\t\t//start_time = performance.now()\n\t\t\tconst leaves_intersecting_with_sphere = this._leaves.filter((leaf) => leaf.intersects_sphere(sphere));\n\n\t\t\t//console.log(\"level: #{@_level}, found #{leaves_intersecting_with_sphere.length} leaves \")\n\t\t\tleaves_intersecting_with_sphere.forEach((leaf) => leaf.points_in_sphere(sphere, accumulated_points));\n\t\t}\n\t}\n\t//this.constructor.PERF += performance.now()-start_time\n\n\tbounding_box(): Box3 | undefined {\n\t\treturn this._bbox;\n\t}\n\n\t// points_count: ->\n\t// \t@_points_count\n\n\tset_points(points: CorePoint[]) {\n\t\t//@_points_count = points.length\n\n\t\tthis._points_by_octant_id = {};\n\t\tfor (let point of points) {\n\t\t\tthis.add_point(point);\n\t\t}\n\n\t\tconst octant_ids = Object.keys(this._points_by_octant_id);\n\t\tif (octant_ids.length > 1) {\n\t\t\toctant_ids.forEach((octant_id) => {\n\t\t\t\tthis.create_leaf(octant_id);\n\t\t\t});\n\t\t}\n\t}\n\n\tcreate_leaf(octant_id: string) {\n\t\tconst box = this._leaf_bbox(octant_id);\n\t\tconst leaf = new OctreeNode(box, this._level + 1);\n\t\tthis._leaves_by_octant[octant_id] = leaf;\n\t\tthis._leaves.push(leaf);\n\t\t//throw \"test #{@_level}\"\n\n\t\tleaf.set_points(this._points_by_octant_id[octant_id]);\n\t}\n\n\tadd_point(point: CorePoint) {\n\t\tconst octant_id = this._octant_id(point.position());\n\t\tif (this._points_by_octant_id[octant_id] == null) {\n\t\t\tthis._points_by_octant_id[octant_id] = [];\n\t\t}\n\t\tthis._points_by_octant_id[octant_id].push(point);\n\t}\n\n\tprivate _octant_id(position: Vector3): string {\n\t\tconst x_pos = position.x > this._center.x ? 1 : 0;\n\t\tconst y_pos = position.y > this._center.y ? 1 : 0;\n\t\tconst z_pos = position.z > this._center.z ? 1 : 0;\n\t\treturn `${x_pos}${y_pos}${z_pos}`;\n\t}\n\n\t_leaf_bbox(octant_id: string): Box3 {\n\t\tif (!this._bounding_boxes_by_octant_prepared) {\n\t\t\tthis._prepare_leaves_bboxes();\n\t\t\tthis._bounding_boxes_by_octant_prepared = true;\n\t\t}\n\t\treturn this._bounding_boxes_by_octant[octant_id];\n\t}\n\n\tprivate _bbox_center(x_pos: number, y_pos: number, z_pos: number) {\n\t\tconst corner = this._bbox.min.clone();\n\t\tif (x_pos) {\n\t\t\tcorner.x = this._bbox.max.x;\n\t\t}\n\t\tif (y_pos) {\n\t\t\tcorner.y = this._bbox.max.y;\n\t\t}\n\t\tif (z_pos) {\n\t\t\tcorner.z = this._bbox.max.z;\n\t\t}\n\n\t\treturn corner\n\t\t\t.clone()\n\t\t\t.add(this._center)\n\t\t\t.multiplyScalar(0.5);\n\t}\n\n\tprivate _prepare_leaves_bboxes() {\n\t\tconst bbox_centers = [];\n\t\tbbox_centers.push(this._bbox_center(0, 0, 0));\n\t\tbbox_centers.push(this._bbox_center(0, 0, 1));\n\t\tbbox_centers.push(this._bbox_center(0, 1, 0));\n\t\tbbox_centers.push(this._bbox_center(0, 1, 1));\n\t\tbbox_centers.push(this._bbox_center(1, 0, 0));\n\t\tbbox_centers.push(this._bbox_center(1, 0, 1));\n\t\tbbox_centers.push(this._bbox_center(1, 1, 0));\n\t\tbbox_centers.push(this._bbox_center(1, 1, 1));\n\n\t\tconst bbox_size_quarter = this._bbox.max\n\t\t\t.clone()\n\t\t\t.sub(this._bbox.min)\n\t\t\t.multiplyScalar(0.25);\n\t\tfor (let bbox_center of bbox_centers) {\n\t\t\tconst octant_id = this._octant_id(bbox_center);\n\t\t\tconst bbox = new Box3(\n\t\t\t\tbbox_center.clone().sub(bbox_size_quarter),\n\t\t\t\tbbox_center.clone().add(bbox_size_quarter)\n\t\t\t);\n\t\t\tthis._bounding_boxes_by_octant[octant_id] = bbox;\n\t\t}\n\t\t// this._bounding_boxes_by_octant;\n\t}\n}\n","import {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport lodash_range from 'lodash/range';\nimport {TypedSopNode} from './_Base';\nimport {CoreConstant} from '../../../core/geometry/Constant';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {CoreGroup} from '../../../core/geometry/Group';\nclass BboxScatterSopParamsConfig extends NodeParamsConfig {\n\tstep_size = ParamConfig.FLOAT(0.1);\n}\nconst ParamsConfig = new BboxScatterSopParamsConfig();\n\nexport class BboxScatterSopNode extends TypedSopNode<BboxScatterSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'bbox_scatter';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to create points from'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst container = input_contents[0];\n\t\t// const group = container.group();\n\n\t\tconst step_size = this.pv.step_size;\n\t\t// jitter = @_param_jitter\n\n\t\tconst bbox = container.bounding_box();\n\n\t\tconst range = {\n\t\t\tx: lodash_range(bbox.min.x, bbox.max.x, step_size),\n\t\t\ty: lodash_range(bbox.min.y, bbox.max.y, step_size),\n\t\t\tz: lodash_range(bbox.min.z, bbox.max.z, step_size),\n\t\t};\n\n\t\t// create buffer geometry\n\t\t// const vertices_count = range.x * range.y * range.z;\n\t\tconst positions: number[] = [];\n\t\trange.x.forEach((x) => {\n\t\t\trange.y.forEach((y) => {\n\t\t\t\trange.z.forEach((z) => {\n\t\t\t\t\tpositions.push(x);\n\t\t\t\t\tpositions.push(y);\n\t\t\t\t\tpositions.push(z);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute('position', new BufferAttribute(new Float32Array(positions), 3));\n\n\t\tthis.set_geometry(geometry, CoreConstant.OBJECT_TYPE.POINTS);\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {Object3D} from 'three/src/core/Object3D';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Mesh} from 'three/src/objects/Mesh';\n\nclass BlendSopParamsConfig extends NodeParamsConfig {\n\tattrib_name = ParamConfig.STRING();\n\tblend = ParamConfig.FLOAT(0.5, {\n\t\trange: [0, 1],\n\t\trange_locked: [true, true],\n\t});\n}\nconst ParamsConfig = new BlendSopParamsConfig();\n\nexport class BlendSopNode extends TypedSopNode<BlendSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'blend';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to blend from', 'geometry to blend to'];\n\t}\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(2);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE, InputCloneMode.NEVER]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\t// this.request_input_container 0, (container0)=>\n\t\t// \tif container0? && (group0 = container0.group())?\n\t\t// \t\tthis.request_input_container 1, (container1)=>\n\t\t// \t\t\tif container1? && (group1 = container1.group({clone: false}))?\n\n\t\t//this.eval_all_params =>\n\t\t// const container0 = input_containers[0];\n\t\t// const container1 = input_containers[1];\n\n\t\t// const group0 = container0.group();\n\t\t// const group1 = container1.group();\n\t\tconst core_group0 = input_contents[0];\n\t\tconst core_group1 = input_contents[1];\n\n\t\tconst objects0 = core_group0.objects();\n\t\tconst objects1 = core_group1.objects();\n\n\t\tlet object0, object1;\n\t\tfor (let i = 0; i < objects0.length; i++) {\n\t\t\tobject0 = objects0[i];\n\t\t\tobject1 = objects1[i];\n\t\t\tthis.blend(object0, object1, this.pv.blend);\n\t\t}\n\t\tthis.set_core_group(core_group0);\n\t}\n\n\t// \t\telse\n\t// \t\t\tthis.set_error(\"input 1 required\")\n\n\t// else\n\t// \tthis.set_error(\"input 0 required\")\n\tprivate blend(object0: Object3D, object1: Object3D, blend: number) {\n\t\tconst geometry0 = (object0 as Mesh).geometry as BufferGeometry;\n\t\tconst geometry1 = (object1 as Mesh).geometry as BufferGeometry;\n\t\tif (geometry0 == null || geometry1 == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attrib0 = geometry0.getAttribute(this.pv.attrib_name);\n\t\tconst attrib1 = geometry1.getAttribute(this.pv.attrib_name);\n\t\tif (attrib0 == null || attrib1 == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attrib0_array = attrib0.array as number[];\n\t\tconst attrib1_array = attrib1.array as number[];\n\n\t\tlet c0, c1;\n\t\tfor (let i = 0; i < attrib0_array.length; i++) {\n\t\t\tc0 = attrib0_array[i];\n\t\t\tc1 = attrib1_array[i];\n\t\t\tif (c1 != null) {\n\t\t\t\tattrib0_array[i] = (1 - blend) * c0 + blend * c1;\n\t\t\t}\n\t\t}\n\n\t\tgeometry0.computeVertexNormals();\n\t}\n}\n","import {TypedSopNode} from './_Base';\nimport {CoreTransform} from '../../../core/Transform';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\n// import {Vector3} from 'three/src/math/Vector3';\nimport {BoxBufferGeometry} from 'three/src/geometries/BoxGeometry';\n// import {CoreGeometry} from '../../../core/geometry/Geometry'\n// import {ParamType} from '../../poly/ParamType';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass BoxSopParamsConfig extends NodeParamsConfig {\n\tsize = ParamConfig.FLOAT(1);\n\tdivisions = ParamConfig.INTEGER(1, {\n\t\trange: [1, 10],\n\t\trange_locked: [true, false],\n\t});\n\tcenter = ParamConfig.VECTOR3([0, 0, 0]);\n}\nconst ParamsConfig = new BoxSopParamsConfig();\n\nexport class BoxSopNode extends TypedSopNode<BoxSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'box';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to create bounding box from (optional)'];\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\t// constructor(scene: PolyScene) {\n\t// \tsuper(scene);\n\t// }\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\t}\n\t// create_params() {\n\t// \tthis.add_param(ParamType.FLOAT, 'size', 1);\n\t// \tthis.add_param(ParamType.INTEGER, 'divisions', 1, {\n\t// \t\trange: [1, 10],\n\t// \t\trange_locked: [true, false],\n\t// \t});\n\t// \tthis.add_param(ParamType.VECTOR3, 'center', [0, 0, 0]);\n\t// }\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tif (core_group) {\n\t\t\tthis._cook_with_input(core_group);\n\t\t} else {\n\t\t\tthis._cook_without_input();\n\t\t}\n\t}\n\n\tprivate _cook_without_input() {\n\t\t//\t\tthis.eval_all_params =>\n\t\tconst divisions = this.pv.divisions;\n\t\tconst size = this.pv.size;\n\t\tconst geometry = new BoxBufferGeometry(size, size, size, divisions, divisions, divisions);\n\n\t\tgeometry.translate(this.pv.center.x, this.pv.center.y, this.pv.center.z);\n\n\t\tgeometry.computeVertexNormals();\n\n\t\t// const buffer_geometry = CoreGeometry.clone(geometry);\n\t\tthis.set_geometry(geometry);\n\t}\n\n\tprivate _cook_with_input(core_group: CoreGroup) {\n\t\tconst divisions = this.pv.divisions;\n\n\t\tconst bbox = core_group.bounding_box();\n\t\tconst size = bbox.max.clone().sub(bbox.min);\n\t\tconst center = bbox.max.clone().add(bbox.min).multiplyScalar(0.5);\n\n\t\tconst geometry = new BoxBufferGeometry(size.x, size.y, size.z, divisions, divisions, divisions);\n\t\tconst matrix = this._core_transform.translation_matrix(center);\n\t\tgeometry.applyMatrix4(matrix);\n\n\t\t// const buffer_geometry = CoreGeometry.clone(geometry);\n\t\tthis.set_geometry(geometry);\n\t}\n\n\t// else\n\t// \tthis.set_error(\"first input is invalid\")\n\n\t// _divisions() {\n\t// \treturn Math.max(1, this.pv.divisions);\n\t// }\n}\n","import {ObjectLoader} from 'three/src/loaders/ObjectLoader';\nimport {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {BaseNodeType} from '../_Base';\nimport {BaseParamType} from '../../params/_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nclass CacheSopParamsConfig extends NodeParamsConfig {\n\tcache = ParamConfig.STRING('', {hidden: true});\n\treset = ParamConfig.BUTTON(null, {\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tCacheSopNode.PARAM_CALLBACK_reset(node as CacheSopNode, param);\n\t\t},\n\t});\n}\nconst ParamsConfig = new CacheSopParamsConfig();\n\nexport class CacheSopNode extends TypedSopNode<CacheSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'cache';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to cache'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst is_cache_empty = this.pv.cache == '' || this.pv.cache == null;\n\t\tconst core_group = input_contents[0];\n\t\tif (is_cache_empty && core_group) {\n\t\t\tconst json = [];\n\t\t\tfor (let object of core_group.objects()) {\n\t\t\t\tjson.push(object.toJSON());\n\t\t\t}\n\t\t\tthis.set_core_group(core_group);\n\t\t\tthis.p.cache.set(JSON.stringify(json));\n\t\t} else {\n\t\t\tif (this.pv.cache) {\n\t\t\t\tconst obj_loader = new ObjectLoader();\n\t\t\t\tconst jsons = JSON.parse(this.pv.cache);\n\t\t\t\tconst all_objects = [];\n\t\t\t\tfor (let json of jsons) {\n\t\t\t\t\tconst parent = obj_loader.parse(json);\n\t\t\t\t\t// for(let child of parent.children){\n\t\t\t\t\tall_objects.push(parent);\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t\tthis.set_objects(all_objects);\n\t\t\t} else {\n\t\t\t\tthis.set_objects([]);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic PARAM_CALLBACK_reset(node: CacheSopNode, param: BaseParamType) {\n\t\tnode.param_callback_PARAM_CALLBACK_reset();\n\t}\n\tasync param_callback_PARAM_CALLBACK_reset() {\n\t\tthis.p.cache.set('');\n\t\tthis.request_container();\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {CircleBufferGeometry} from 'three/src/geometries/CircleGeometry';\nimport {TypedSopNode} from './_Base';\nimport {CoreGeometryUtilCircle} from '../../../core/geometry/util/Circle';\nimport {ObjectType} from '../../../core/geometry/Constant';\nimport {CoreTransform} from '../../../core/Transform';\n\nconst DEFAULT_UP = new Vector3(0, 0, 1);\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass CircleSopParamsConfig extends NodeParamsConfig {\n\tradius = ParamConfig.FLOAT(1);\n\tsegments = ParamConfig.INTEGER(12, {\n\t\trange: [1, 50],\n\t\trange_locked: [true, false],\n\t});\n\topen = ParamConfig.BOOLEAN(1);\n\tarc_angle = ParamConfig.FLOAT(360, {\n\t\trange: [0, 360],\n\t\trange_locked: [false, false],\n\t\tvisible_if: {open: 1},\n\t});\n\tdirection = ParamConfig.VECTOR3([0, 1, 0]);\n}\nconst ParamsConfig = new CircleSopParamsConfig();\n\nexport class CircleSopNode extends TypedSopNode<CircleSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'circle';\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\n\tinitialize_node() {\n\t\t// this.io.inputs.set_count(0);\n\t\t// this.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook() {\n\t\tif (this.pv.open) {\n\t\t\tthis._create_circle();\n\t\t} else {\n\t\t\tthis._create_disk();\n\t\t}\n\t}\n\n\t_create_circle() {\n\t\tconst geometry = CoreGeometryUtilCircle.create(this.pv.radius, this.pv.segments, this.pv.arc_angle);\n\n\t\tthis._core_transform.rotate_geometry(geometry, DEFAULT_UP, this.pv.direction);\n\n\t\tthis.set_geometry(geometry, ObjectType.LINE_SEGMENTS);\n\t}\n\n\t_create_disk() {\n\t\tconst geometry = new CircleBufferGeometry(this.pv.radius, this.pv.segments);\n\n\t\tthis._core_transform.rotate_geometry(geometry, DEFAULT_UP, this.pv.direction);\n\n\t\tthis.set_geometry(geometry);\n\t}\n}\n","import {TypedSopNode} from './_Base';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {StringParamLanguage} from '../../params/utils/OptionsController';\nimport {AsyncFunction} from '../../../core/AsyncFunction';\n\nconst DEFAULT_FUNCTION_CODE = `import {BaseCodeSopProcessor, CoreGroup} from 'polygonjs-engine'\nexport class CodeSopProcessor extends BaseCodeSopProcessor {\n\tconstructor(){\n\t\tsuper();\n\t}\n\tcook(core_groups: CoreGroup[]){\n\t\tconst core_group = core_groups[0];\n\t\tconst object = core_group.objects()[0];\n\t\tobject.position.y = 1;\n\t\tthis.set_core_group(core_groups[0]);\n\t}\n}\n\n\n`;\n\nexport class BaseCodeSopProcessor {\n\tprotected node!: CodeSopNode;\n\tconstructor() {}\n\tset_node(node: CodeSopNode) {\n\t\tthis.node = node;\n\t}\n\tcook(core_groups: CoreGroup[]) {}\n\tprotected set_core_group(core_group: CoreGroup) {\n\t\tthis.node.set_core_group(core_group);\n\t}\n}\n\ntype EvaluatedFunction = (base_processor_class: typeof BaseCodeSopProcessor) => typeof BaseCodeSopProcessor | undefined;\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {TranspiledFilter} from '../utils/code/controllers/TranspiledFilter';\nclass CodeSopParamsConfig extends NodeParamsConfig {\n\tcode_typescript = ParamConfig.STRING(DEFAULT_FUNCTION_CODE, {\n\t\tlabel: false,\n\t\tlanguage: StringParamLanguage.TYPESCRIPT,\n\t});\n\tcode_javascript = ParamConfig.STRING('', {hidden: true});\n}\nconst ParamsConfig = new CodeSopParamsConfig();\nexport class CodeSopNode extends TypedSopNode<CodeSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\n\tprivate _last_compiled_code: string | undefined;\n\tprivate _processor: BaseCodeSopProcessor | undefined;\n\n\tstatic type() {\n\t\treturn 'code';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 4);\n\t\tthis.ui_data.set_width(100);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(core_groups: CoreGroup[]) {\n\t\tthis._compile_if_required();\n\n\t\tif (this._processor) {\n\t\t\tthis._processor.cook(core_groups);\n\t\t} else {\n\t\t\tthis.set_core_group(core_groups[0]);\n\t\t}\n\t}\n\n\tprivate _compile_if_required() {\n\t\tif (!this._processor || this._last_compiled_code != this.pv.code_javascript) {\n\t\t\tthis._compile();\n\t\t}\n\t}\n\n\tprivate _compile() {\n\t\ttry {\n\t\t\tconst function_body = `try {\n\t\t\t\t${TranspiledFilter.filter(this.pv.code_javascript)}\n\t\t\t} catch(e) {\n\t\t\t\tthis.states.error.set(e)\n\t\t\t}`;\n\t\t\tconsole.log('function_body');\n\t\t\tconsole.log(function_body);\n\t\t\tconst processor_creator_function: EvaluatedFunction = new AsyncFunction(\n\t\t\t\t'BaseCodeSopProcessor',\n\t\t\t\tfunction_body\n\t\t\t);\n\t\t\tconst processor_class = processor_creator_function(BaseCodeSopProcessor);\n\t\t\tif (processor_class) {\n\t\t\t\tthis._processor = new processor_class();\n\t\t\t\tthis._processor.set_node(this);\n\t\t\t\tthis._last_compiled_code = this.pv.code_javascript;\n\t\t\t} else {\n\t\t\t\tthis.states.error.set(`cannot generate function`);\n\t\t\t\tthis._processor = undefined;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.warn(e);\n\t\t\tthis.states.error.set(`cannot generate function (${e})`);\n\t\t\tthis._processor = undefined;\n\t\t}\n\t}\n}\n","import {Color} from 'three/src/math/Color';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {CoreColor} from '../../../core/Color';\n// import lodash_times from 'lodash/times'\n// import lodash_each from 'lodash/each'\n// import {CoreGroup} from '../../../core/geometry/Group';\nimport {TypedSopNode} from './_Base';\n\nimport {CoreObject} from '../../../core/geometry/Object';\nimport {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {CorePoint} from '../../../core/geometry/Point';\n\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Mesh} from 'three/src/objects/Mesh';\n\nconst DEFAULT_COLOR = new Color(1, 1, 1);\nconst COLOR_ATTRIB_NAME = 'color';\n\ntype ValueArrayByName = Dictionary<number[]>;\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass ColorSopParamsConfig extends NodeParamsConfig {\n\tfrom_attribute = ParamConfig.BOOLEAN(0);\n\tattrib_name = ParamConfig.STRING('', {\n\t\tvisible_if: {from_attribute: 1},\n\t});\n\tcolor = ParamConfig.COLOR([1, 1, 1], {\n\t\tvisible_if: {from_attribute: 0},\n\t\texpression: {for_entities: true},\n\t});\n\tas_hsv = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {from_attribute: 0},\n\t});\n}\nconst ParamsConfig = new ColorSopParamsConfig();\n\nexport class ColorSopNode extends TypedSopNode<ColorSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'color';\n\t}\n\n\tprivate _r_arrays_by_geometry_uuid: ValueArrayByName = {};\n\tprivate _g_arrays_by_geometry_uuid: ValueArrayByName = {};\n\tprivate _b_arrays_by_geometry_uuid: ValueArrayByName = {};\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to update color of'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t\t// this.ui_data.set_icon('palette');\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tconst core_objects = core_group.core_objects();\n\n\t\tfor (let core_object of core_objects) {\n\t\t\tif (this.pv.from_attribute) {\n\t\t\t\tthis._set_from_attribute(core_object);\n\t\t\t} else {\n\t\t\t\tconst has_expression = this.p.color.has_expression();\n\t\t\t\tif (has_expression) {\n\t\t\t\t\tawait this._eval_expressions(core_object);\n\t\t\t\t} else {\n\t\t\t\t\tthis._eval_simple_values(core_object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// needs update required for when no cloning\n\t\tif (!this.io.inputs.input_cloned(0)) {\n\t\t\tconst geometries = core_group.geometries();\n\t\t\tfor (let geometry of geometries) {\n\t\t\t\t(geometry.getAttribute(COLOR_ATTRIB_NAME) as BufferAttribute).needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\t_set_from_attribute(core_object: CoreObject) {\n\t\tconst core_geometry = core_object.core_geometry();\n\t\tif (!core_geometry) {\n\t\t\treturn;\n\t\t}\n\t\tthis._create_init_color(core_geometry, DEFAULT_COLOR);\n\t\tconst points = core_geometry.points();\n\n\t\tconst src_attrib_size = core_geometry.attrib_size(this.pv.attrib_name);\n\t\tconst geometry = core_geometry.geometry();\n\t\tconst src_array = geometry.getAttribute(this.pv.attrib_name).array;\n\t\tconst dest_array = geometry.getAttribute(COLOR_ATTRIB_NAME).array as number[];\n\n\t\tswitch (src_attrib_size) {\n\t\t\tcase 1: {\n\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\tconst dest_i = i * 3;\n\t\t\t\t\tdest_array[dest_i + 0] = src_array[i];\n\t\t\t\t\tdest_array[dest_i + 1] = 1 - src_array[i];\n\t\t\t\t\tdest_array[dest_i + 2] = 0;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: {\n\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\tconst dest_i = i * 3;\n\t\t\t\t\tconst src_i = i * 2;\n\t\t\t\t\tdest_array[dest_i + 0] = src_array[src_i + 0];\n\t\t\t\t\tdest_array[dest_i + 1] = src_array[src_i + 1];\n\t\t\t\t\tdest_array[dest_i + 2] = 0;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: {\n\t\t\t\tfor (let i = 0; i < src_array.length; i++) {\n\t\t\t\t\tdest_array[i] = src_array[i];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4: {\n\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\tconst dest_i = i * 3;\n\t\t\t\t\tconst src_i = i * 4;\n\t\t\t\t\tdest_array[dest_i + 0] = src_array[src_i + 0];\n\t\t\t\t\tdest_array[dest_i + 1] = src_array[src_i + 1];\n\t\t\t\t\tdest_array[dest_i + 2] = src_array[src_i + 2];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _create_init_color(core_geometry: CoreGeometry, color: Color) {\n\t\tif (!core_geometry.has_attrib(COLOR_ATTRIB_NAME)) {\n\t\t\tcore_geometry.add_numeric_attrib(COLOR_ATTRIB_NAME, 3, DEFAULT_COLOR);\n\t\t}\n\t}\n\n\t_eval_simple_values(core_object: CoreObject) {\n\t\tconst core_geometry = core_object.core_geometry();\n\t\tif (!core_geometry) {\n\t\t\treturn;\n\t\t}\n\t\tthis._create_init_color(core_geometry, DEFAULT_COLOR);\n\n\t\tlet new_color: Color;\n\t\tif (this.pv.as_hsv) {\n\t\t\tnew_color = new Color();\n\t\t\tCoreColor.set_hsv(this.pv.color.r, this.pv.color.g, this.pv.color.b, new_color);\n\t\t} else {\n\t\t\tnew_color = this.pv.color; //.clone();\n\t\t}\n\t\tcore_geometry.add_numeric_attrib(COLOR_ATTRIB_NAME, 3, new_color);\n\t}\n\n\tasync _eval_expressions(core_object: CoreObject) {\n\t\tconst points = core_object.points();\n\t\tconst object = core_object.object();\n\t\tconst core_geometry = core_object.core_geometry();\n\t\tif (core_geometry) {\n\t\t\tthis._create_init_color(core_geometry, DEFAULT_COLOR);\n\t\t}\n\t\tconst geometry = (object as Mesh).geometry as BufferGeometry;\n\t\tif (geometry) {\n\t\t\tconst array = geometry.getAttribute(COLOR_ATTRIB_NAME).array as number[];\n\n\t\t\tconst tmp_array_r = await this._update_from_param(geometry, array, points, 0);\n\t\t\tconst tmp_array_g = await this._update_from_param(geometry, array, points, 1);\n\t\t\tconst tmp_array_b = await this._update_from_param(geometry, array, points, 2);\n\n\t\t\tif (tmp_array_r) {\n\t\t\t\tthis._commit_tmp_values(tmp_array_r, array, 0);\n\t\t\t}\n\t\t\tif (tmp_array_g) {\n\t\t\t\tthis._commit_tmp_values(tmp_array_g, array, 1);\n\t\t\t}\n\t\t\tif (tmp_array_b) {\n\t\t\t\tthis._commit_tmp_values(tmp_array_b, array, 2);\n\t\t\t}\n\n\t\t\t// to hsv\n\t\t\tif (this.pv.as_hsv) {\n\t\t\t\tlet current = new Color();\n\t\t\t\tlet target = new Color();\n\t\t\t\tlet index;\n\t\t\t\tfor (let point of points) {\n\t\t\t\t\tindex = point.index * 3;\n\t\t\t\t\tcurrent.fromArray(array, index);\n\t\t\t\t\tCoreColor.set_hsv(current.r, current.g, current.b, target);\n\t\t\t\t\ttarget.toArray(array, index);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// const colorr_param = this.param('colorr');\n\t\t// const colorg_param = this.param('colorg');\n\t\t// const colorb_param = this.param('colorb');\n\n\t\t// r\n\t\t// if(colorr_param.has_expression()){\n\t\t// \tawait colorr_param.eval_expression_for_entities(points, (point, value)=>{\n\t\t// \t\tarray[point.index()*3+0] = value\n\t\t// \t})\n\t\t// } else {\n\t\t// \tfor(let point of points){\n\t\t// \t\tarray[point.index()*3+0] = this.pv.color.r\n\t\t// \t}\n\t\t// }\n\t\t// g\n\t\t// if(colorg_param.has_expression()){\n\t\t// \tawait colorg_param.eval_expression_for_entities(points, (point, value)=>{\n\t\t// \t\tarray[point.index()*3+1] = value\n\t\t// \t})\n\t\t// } else {\n\t\t// \tfor(let point of points){\n\t\t// \t\tarray[point.index()*3+1] = this.pv.color.g\n\t\t// \t}\n\t\t// }\n\t\t// b\n\t\t// if(colorb_param.has_expression()){\n\t\t// \tawait colorb_param.eval_expression_for_entities(points, (point, value)=>{\n\t\t// \t\tarray[point.index()*3+2] = value\n\t\t// \t})\n\t\t// } else {\n\t\t// \tfor(let point of points){\n\t\t// \t\tarray[point.index()*3+2] = this.pv.color.b\n\t\t// \t}\n\t\t// }\n\t}\n\n\tprivate async _update_from_param(\n\t\tgeometry: BufferGeometry,\n\t\tarray: number[],\n\t\tpoints: CorePoint[],\n\t\toffset: number\n\t): Promise<number[] | undefined> {\n\t\t// const component_name = ['r', 'g', 'b'][offset];\n\t\tconst param = this.p.color.components[offset];\n\t\tconst param_value = [this.pv.color.r, this.pv.color.g, this.pv.color.b][offset];\n\t\tconst arrays_by_geometry_uuid = [\n\t\t\tthis._r_arrays_by_geometry_uuid,\n\t\t\tthis._g_arrays_by_geometry_uuid,\n\t\t\tthis._b_arrays_by_geometry_uuid,\n\t\t][offset];\n\n\t\tlet tmp_array: number[] | undefined;\n\t\tif (param.has_expression() && param.expression_controller) {\n\t\t\ttmp_array = this._init_array_if_required(geometry, arrays_by_geometry_uuid, points.length);\n\t\t\tawait param.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\t// array[point.index()*3+2] = value\n\t\t\t\t(tmp_array as number[])[point.index] = value;\n\t\t\t});\n\t\t} else {\n\t\t\tfor (let point of points) {\n\t\t\t\tarray[point.index * 3 + offset] = param_value;\n\t\t\t}\n\t\t}\n\t\treturn tmp_array;\n\t}\n\n\tprivate _init_array_if_required(\n\t\tgeometry: BufferGeometry,\n\t\tarrays_by_geometry_uuid: ValueArrayByName,\n\t\tpoints_count: number\n\t) {\n\t\tconst uuid = geometry.uuid;\n\t\tconst current_array = arrays_by_geometry_uuid[uuid];\n\t\tif (current_array) {\n\t\t\t// only create new array if we need more point, or as soon as the length is different?\n\t\t\tif (current_array.length < points_count) {\n\t\t\t\tarrays_by_geometry_uuid[uuid] = new Array(points_count);\n\t\t\t}\n\t\t} else {\n\t\t\tarrays_by_geometry_uuid[uuid] = new Array(points_count);\n\t\t}\n\t\treturn arrays_by_geometry_uuid[uuid];\n\t}\n\n\tprivate _commit_tmp_values(tmp_array: number[], target_array: number[], offset: number) {\n\t\tfor (let i = 0; i < tmp_array.length; i++) {\n\t\t\ttarget_array[i * 3 + offset] = tmp_array[i];\n\t\t}\n\t}\n}\n","import {MathUtils} from 'three/src/math/MathUtils';\nimport {Color} from 'three/src/math/Color';\n\nexport class CoreColor {\n\t// use color.toStyle() if needed\n\t// static to_css(color: Color): string {\n\t// \tconst color_elements = color.toArray().map((e) => e * 255)\n\t// \treturn `rgb(${color_elements.join(', ')})`\n\t// }\n\n\t// from THREE.js examples ColorConverter.js\n\tstatic set_hsv(h: number, s: number, v: number, target: Color) {\n\t\th = MathUtils.euclideanModulo(h, 1);\n\t\ts = MathUtils.clamp(s, 0, 1);\n\t\tv = MathUtils.clamp(v, 0, 1);\n\n\t\ttarget.setHSL(h, (s * v) / ((h = (2 - s) * v) < 1 ? h : 2 - h), h * 0.5);\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {Vector3} from 'three/src/math/Vector3';\nimport {ConeBufferGeometry} from 'three/src/geometries/ConeGeometry';\nimport {CoreTransform} from '../../../core/Transform';\n\nconst DEFAULT_UP = new Vector3(0, 1, 0);\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass ConeSopParamsConfig extends NodeParamsConfig {\n\tradius = ParamConfig.FLOAT(1, {range: [0, 1]});\n\theight = ParamConfig.FLOAT(1, {range: [0, 1]});\n\tsegments_radial = ParamConfig.INTEGER(12, {range: [3, 20], range_locked: [true, false]});\n\tsegments_height = ParamConfig.INTEGER(1, {range: [1, 20], range_locked: [true, false]});\n\tcap = ParamConfig.BOOLEAN(1);\n\ttheta_start = ParamConfig.FLOAT(1, {range: [0, 1]});\n\ttheta_length = ParamConfig.FLOAT('2*$PI', {range: [0, 1]});\n\tcenter = ParamConfig.VECTOR3([0, 0, 0]);\n\tdirection = ParamConfig.VECTOR3([0, 0, 1]);\n}\nconst ParamsConfig = new ConeSopParamsConfig();\n\nexport class ConeSopNode extends TypedSopNode<ConeSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'cone';\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\n\tcook() {\n\t\tconst geometry = new ConeBufferGeometry(\n\t\t\tthis.pv.radius,\n\t\t\tthis.pv.height,\n\t\t\tthis.pv.segments_radial,\n\t\t\tthis.pv.segments_height,\n\t\t\t!this.pv.cap,\n\t\t\tthis.pv.theta_start,\n\t\t\tthis.pv.theta_length\n\t\t);\n\n\t\tthis._core_transform.rotate_geometry(geometry, DEFAULT_UP, this.pv.direction);\n\t\tgeometry.translate(this.pv.center.x, this.pv.center.y, this.pv.center.z);\n\n\t\tthis.set_geometry(geometry);\n\t}\n}\n","import lodash_compact from 'lodash/compact';\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup, Object3DWithGeometry} from '../../../core/geometry/Group';\nimport {CoreObject} from '../../../core/geometry/Object';\n// import {CoreGeometry} from '../../../core/geometry/Geometry'\nimport {CoreInstancer} from '../../../core/geometry/Instancer';\nimport {CoreString} from '../../../core/String';\n// import {NodeSimple} from '../../../Core/Graph/NodeSimple'\nimport {CopyStamp} from './utils/CopyStamp';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {CorePoint} from '../../../core/geometry/Point';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {Object3D} from 'three/src/core/Object3D';\nclass CopySopParamsConfig extends NodeParamsConfig {\n\tcount = ParamConfig.INTEGER(1, {\n\t\trange: [1, 20],\n\t\trange_locked: [true, false],\n\t});\n\ttransform_only = ParamConfig.BOOLEAN(0);\n\tcopy_attributes = ParamConfig.BOOLEAN(0);\n\tattributes_to_copy = ParamConfig.STRING('', {\n\t\tvisible_if: {copy_attributes: true},\n\t});\n\tuse_copy_expr = ParamConfig.BOOLEAN(0);\n}\nconst ParamsConfig = new CopySopParamsConfig();\n\nexport class CopySopNode extends TypedSopNode<CopySopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'copy';\n\t}\n\n\tprivate _attribute_names_to_copy: string[] = [];\n\t// private _group: Group|undefined;\n\tprivate _objects: Object3D[] = [];\n\tprivate _stamp_node!: CopyStamp;\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to be copied', 'points to copy to'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1, 2);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.ALWAYS, InputCloneMode.NEVER]);\n\t}\n\n\t// async evaluate_inputs_and_params() {\n\t// \tawait this.eval_all_params()\n\t// }\n\n\tasync cook() {\n\t\tlet core_group0;\n\t\tconst container0 = await this.container_controller.request_input_container(0);\n\t\tif (container0 != null && (core_group0 = container0.core_content()) != null) {\n\t\t\tif (this.io.inputs.has_input(1)) {\n\t\t\t\tlet core_group1;\n\t\t\t\tconst container1 = await this.container_controller.request_input_container(1);\n\t\t\t\tif (container1 != null && (core_group1 = container1.core_content()) != null) {\n\t\t\t\t\tawait this.cook_with_template(core_group0, core_group1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set('second input required');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.cook_without_template(core_group0);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.states.error.set('first input required');\n\t\t}\n\t}\n\n\tprivate async cook_with_template(instance_core_group: CoreGroup, template_core_group: CoreGroup) {\n\t\tthis._objects = [];\n\n\t\tconst template_points = template_core_group.points();\n\n\t\tconst instancer = new CoreInstancer(template_core_group);\n\t\tlet instance_matrices = instancer.matrices();\n\n\t\tthis._attribute_names_to_copy = CoreString.attrib_names(this.pv.attributes_to_copy).filter((attrib_name) =>\n\t\t\ttemplate_core_group.has_attrib(attrib_name)\n\t\t);\n\t\tawait this._copy_moved_objects_on_template_points(instance_core_group, instance_matrices, template_points);\n\t\tthis.set_objects(this._objects);\n\t}\n\n\t// https://stackoverflow.com/questions/24586110/resolve-promises-one-after-another-i-e-in-sequence\n\tprivate async _copy_moved_objects_on_template_points(\n\t\tinstance_core_group: CoreGroup,\n\t\tinstance_matrices: Matrix4[],\n\t\ttemplate_points: CorePoint[]\n\t) {\n\t\tfor (let point_index = 0; point_index < template_points.length; point_index++) {\n\t\t\tawait this._copy_moved_object_on_template_point(\n\t\t\t\tinstance_core_group,\n\t\t\t\tinstance_matrices,\n\t\t\t\ttemplate_points,\n\t\t\t\tpoint_index\n\t\t\t);\n\t\t}\n\t\t// template_points.forEach((template_point, point_index) => {\n\t\t// \tp = p.then(() => {\n\t\t// \t\treturn this._copy_moved_object_on_template_point(\n\t\t// \t\t\tinstance_core_group,\n\t\t// \t\t\tinstance_matrices,\n\t\t// \t\t\ttemplate_points,\n\t\t// \t\t\tpoint_index\n\t\t// \t\t);\n\t\t// \t});\n\t\t// });\n\t}\n\n\tprivate _copy_moved_object_on_template_point(\n\t\tinstance_core_group: CoreGroup,\n\t\tinstance_matrices: Matrix4[],\n\t\ttemplate_points: CorePoint[],\n\t\tpoint_index: number\n\t) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst matrix = instance_matrices[point_index];\n\t\t\tconst template_point = template_points[point_index];\n\t\t\tthis.stamp_node.set_point(template_point);\n\n\t\t\tconst moved_objects = await this._get_moved_objects_for_template_point(instance_core_group, point_index);\n\n\t\t\tmoved_objects.forEach((moved_object) => {\n\t\t\t\tif (this.pv.copy_attributes) {\n\t\t\t\t\tthis._copy_attributes_from_template(moved_object, template_point);\n\t\t\t\t}\n\n\t\t\t\t// TODO: that node is getting inconsistent...\n\t\t\t\t// should I always only move the object?\n\t\t\t\t// and have a toggle to bake back to the geo?\n\t\t\t\t// or just enfore the use of a merge?\n\t\t\t\tif (this.pv.transform_only) {\n\t\t\t\t\tmoved_object.applyMatrix4(matrix);\n\t\t\t\t} else {\n\t\t\t\t\tconst geometry = moved_object.geometry;\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tmoved_object.geometry.applyMatrix4(matrix);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmoved_object.applyMatrix4(matrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn this._objects.push(moved_object);\n\t\t\t});\n\n\t\t\treturn resolve();\n\t\t});\n\t}\n\n\tprivate _get_moved_objects_for_template_point(\n\t\tinstance_core_group: CoreGroup,\n\t\tpoint_index: number\n\t): Promise<Object3DWithGeometry[]> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst stamped_instance_core_group = await this._stamp_instance_group_if_required(instance_core_group);\n\t\t\tif (stamped_instance_core_group) {\n\t\t\t\t// duplicate or select from instance children\n\t\t\t\tconst moved_objects = this.pv.transform_only\n\t\t\t\t\t? // TODO: why is doing a transform slower than cloning the input??\n\t\t\t\t\t  lodash_compact([instance_core_group.objects()[point_index]])\n\t\t\t\t\t: instance_core_group.clone().objects();\n\n\t\t\t\tresolve(moved_objects);\n\t\t\t} else {\n\t\t\t\tresolve([]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _stamp_instance_group_if_required(instance_core_group: CoreGroup): Promise<CoreGroup | undefined> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tif (this.pv.use_copy_expr) {\n\t\t\t\tconst container0 = await this.container_controller.request_input_container(0);\n\t\t\t\tlet core_group0: CoreGroup;\n\t\t\t\tif (container0 && (core_group0 = container0.core_content()) != null) {\n\t\t\t\t\t// this.stamp_node.increment_global_value()\n\t\t\t\t\tresolve(core_group0);\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set(`input failed for index ${this.stamp_value()}`);\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolve(instance_core_group);\n\t\t\t}\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/questions/24586110/resolve-promises-one-after-another-i-e-in-sequence\n\tprivate async _copy_moved_objects_for_each_instance(instance_core_group: CoreGroup) {\n\t\t// let p = Promise.resolve(); // Q() in q\n\n\t\tfor (let i = 0; i < this.pv.count; i++) {\n\t\t\tawait this._copy_moved_objects_for_instance(instance_core_group, i);\n\t\t}\n\t\t// lodash_times(this.pv.count, (i) => {\n\t\t// \tp = p.then(() => {\n\t\t// \t\treturn this._copy_moved_objects_for_instance(instance_core_group, i);\n\t\t// \t});\n\t\t// });\n\n\t\t// return p;\n\t}\n\n\tprivate _copy_moved_objects_for_instance(instance_core_group: CoreGroup, i: number) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tthis.stamp_node.set_global_index(i);\n\n\t\t\tconst stamped_instance_core_group = await this._stamp_instance_group_if_required(instance_core_group);\n\t\t\tif (stamped_instance_core_group) {\n\t\t\t\tstamped_instance_core_group.objects().forEach((object) => {\n\t\t\t\t\t// TODO: I should use the Group wrapper, to ensure that material.linewidth is properly cloned\n\t\t\t\t\tconst new_object = CoreObject.clone(object);\n\t\t\t\t\tthis._objects.push(new_object);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\t}\n\n\t// TODO: what if I combine both @_param_count and stamping?!\n\tprivate cook_without_template(instance_core_group: CoreGroup) {\n\t\tthis._objects = [];\n\t\tthis._copy_moved_objects_for_each_instance(instance_core_group).then(() => {\n\t\t\tthis.set_objects(this._objects);\n\t\t});\n\t}\n\n\tprivate _copy_attributes_from_template(object: Object3D, template_point: CorePoint) {\n\t\tthis._attribute_names_to_copy.forEach((attrib_name, i) => {\n\t\t\tconst attrib_value = template_point.attrib_value(attrib_name);\n\t\t\tconst object_wrapper = new CoreObject(object, i);\n\t\t\tobject_wrapper.add_attribute(attrib_name, attrib_value);\n\t\t});\n\t}\n\n\t//\n\t//\n\t// STAMP\n\t//\n\t//\n\tstamp_value(attrib_name?: string) {\n\t\treturn this.stamp_node.value(attrib_name);\n\t}\n\tget stamp_node() {\n\t\treturn (this._stamp_node = this._stamp_node || this.create_stamp_node());\n\t}\n\tprivate create_stamp_node() {\n\t\tconst stamp_node = new CopyStamp(this.scene);\n\t\tthis.dirty_controller.set_forbidden_trigger_nodes([stamp_node]);\n\t\treturn stamp_node;\n\t}\n\n\t// private set_dirty_allowed(original_trigger_graph_node: CoreGraphNode): boolean {\n\t// \treturn original_trigger_graph_node.graph_node_id !== this.stamp_node.graph_node_id;\n\t// }\n}\n","import {CorePoint} from '../../../../core/geometry/Point';\nimport {CoreGraphNode} from '../../../../core/graph/CoreGraphNode';\nimport {PolyScene} from '../../../scene/PolyScene';\n\nexport class CopyStamp extends CoreGraphNode {\n\tprivate _global_index: number = 0;\n\tprivate _point: CorePoint | undefined;\n\n\tconstructor(scene: PolyScene) {\n\t\tsuper(scene, 'CopyStamp');\n\t}\n\n\tset_point(point: CorePoint) {\n\t\tthis._point = point;\n\t\tthis.set_dirty();\n\t\tthis.remove_dirty_state();\n\t}\n\tset_global_index(index: number) {\n\t\tthis._global_index = index;\n\t\tthis.set_dirty();\n\t\tthis.remove_dirty_state();\n\t}\n\n\tvalue(attrib_name?: string) {\n\t\tif (this._point) {\n\t\t\tif (attrib_name) {\n\t\t\t\treturn this._point.attrib_value(attrib_name);\n\t\t\t} else {\n\t\t\t\treturn this._point.index;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._global_index;\n\t\t}\n\t}\n}\n","// import {Core} from '../../../Core/_Module';\nimport {TypedSopNode} from './_Base';\nimport {JsonDataLoader} from '../../../core/loader/geometry/JsonData';\n\nconst DEFAULT_DATA = [\n\t{value: -40},\n\t{value: -30},\n\t{value: -20},\n\t{value: -10},\n\t{value: 0},\n\t{value: 10},\n\t{value: 20},\n\t{value: 30},\n\t{value: 40},\n\t{value: 50},\n\t{value: 60},\n\t{value: 70},\n\t{value: 80},\n];\nconst DEFAULT_DATA_STR = JSON.stringify(DEFAULT_DATA);\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass DataSopParamsConfig extends NodeParamsConfig {\n\tdata = ParamConfig.STRING(DEFAULT_DATA_STR);\n}\nconst ParamsConfig = new DataSopParamsConfig();\n\nexport class DataSopNode extends TypedSopNode<DataSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'data';\n\t}\n\n\tcook() {\n\t\tlet json = null;\n\t\ttry {\n\t\t\tjson = JSON.parse(this.pv.data);\n\t\t} catch (e) {\n\t\t\tthis.states.error.set('could not parse json');\n\t\t}\n\n\t\tif (json) {\n\t\t\tconst loader = new JsonDataLoader();\n\t\t\tloader.set_json(json);\n\t\t\tconst object = loader.create_object();\n\t\t\tthis.set_object(object);\n\t\t} else {\n\t\t\tthis.cook_controller.end_cook();\n\t\t}\n\t}\n}\n","import lodash_isArray from 'lodash/isArray'\nimport lodash_isString from 'lodash/isString'\nimport {CoreConstant} from './Constant'\n\nexport class CoreAttributeData {\n\tconstructor(private _size: number, private _type: number) {}\n\n\tsize() {\n\t\treturn this._size\n\t}\n\ttype() {\n\t\treturn this._type\n\t}\n\n\tstatic from_value(attrib_value: any) {\n\t\tconst type = lodash_isString(attrib_value)\n\t\t\t? CoreConstant.ATTRIB_TYPE.STRING\n\t\t\t: CoreConstant.ATTRIB_TYPE.NUMERIC\n\t\tconst size = lodash_isArray(attrib_value) ? attrib_value.length : 1\n\n\t\treturn new this(size, type)\n\t}\n}\n","import {Object3D} from 'three/src/core/Object3D';\n// import lodash_flatten from 'lodash/flatten';\nimport {TypedSopNode} from './_Base';\n\n// import {CoreLoaderGeometry, LoaderType, LOADER_TYPES} from '../../../Core/Loader/Geometry';\nimport {JsonDataLoader} from '../../../core/loader/geometry/JsonData';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {BaseParamType} from '../../params/_Base';\nimport {BaseNodeType} from '../_Base';\nclass DataUrlSopParamsConfig extends NodeParamsConfig {\n\turl = ParamConfig.STRING('/examples/sop/data_url/basic.json');\n\tjson_data_keys_prefix = ParamConfig.STRING('');\n\tskip_entries = ParamConfig.STRING('');\n\tconvert = ParamConfig.BOOLEAN(0);\n\tconvert_to_numeric = ParamConfig.STRING('', {\n\t\tvisible_if: {convert: 1},\n\t});\n\treload = ParamConfig.BUTTON(null, {\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tDataUrlSopNode.PARAM_CALLBACK_reload(node as DataUrlSopNode, param);\n\t\t},\n\t});\n}\nconst ParamsConfig = new DataUrlSopParamsConfig();\n\nexport class DataUrlSopNode extends TypedSopNode<DataUrlSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'data_url';\n\t}\n\n\t// TODO: no error when trying to load a non existing zip file??\n\tasync cook() {\n\t\tconst loader = new JsonDataLoader({\n\t\t\tdata_keys_prefix: this.pv.json_data_keys_prefix,\n\t\t\tskip_entries: this.pv.skip_entries,\n\t\t\tdo_convert: this.pv.convert,\n\t\t\tconvert_to_numeric: this.pv.convert_to_numeric,\n\t\t});\n\t\tloader.load(this.pv.url, this._on_load.bind(this), undefined, this._on_error.bind(this));\n\t}\n\n\t_on_load(objects: Object3D) {\n\t\t// objects = lodash_flatten(objects);\n\t\tthis.set_objects([objects]);\n\t}\n\t_on_error(error: ErrorEvent) {\n\t\tthis.states.error.set(`could not load geometry from ${this.pv.url} (${error})`);\n\t\tthis.cook_controller.end_cook();\n\t}\n\n\t// async _on_open_url(){\n\t// \tconst url = await this.param('url').eval_p()\n\t// \tconst a = document.createElement('a')\n\t// \ta.href = url\n\t// \ta.setAttribute('target', '_blank')\n\t// \ta.click()\n\t// }\n\n\tstatic PARAM_CALLBACK_reload(node: DataUrlSopNode, param: BaseParamType) {\n\t\tnode.param_callback_reload();\n\t}\n\tparam_callback_reload() {\n\t\t// this._previous_param_url = null\n\n\t\t// set the param dirty is preferable, in case this is used to refresh a local asset\n\t\tthis.p.url.set_dirty();\n\t\t// this.set_dirty()\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nclass DelaySopParamsConfig extends NodeParamsConfig {\n\tduration = ParamConfig.INTEGER(1000);\n}\nconst ParamsConfig = new DelaySopParamsConfig();\n\nexport class DelaySopNode extends TypedSopNode<DelaySopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'delay';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.ALWAYS]);\n\t}\n\n\tcook(inputs_contents: CoreGroup[]) {\n\t\tconst core_group = inputs_contents[0];\n\t\tconst c = () => {\n\t\t\tthis.set_core_group(core_group);\n\t\t};\n\t\tsetTimeout(c, this.pv.duration);\n\t}\n}\n","import {Box3} from 'three/src/math/Box3';\nimport lodash_isString from 'lodash/isString';\nimport lodash_each from 'lodash/each';\nimport {TypedSopNode} from './_Base';\nimport {CoreString} from '../../../core/String';\nimport {\n\tAttribClass,\n\tAttribClassMenuEntries,\n\tObjectType,\n\tObjectTypeMenuEntries,\n\tObjectTypes,\n} from '../../../core/geometry/Constant';\nimport {CoreGroup, Object3DWithGeometry} from '../../../core/geometry/Group';\nimport {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {CoreObject} from '../../../core/geometry/Object';\n\nenum ComparisonOperator {\n\t'==' = 0,\n\t'<' = 1,\n\t'<=' = 2,\n\t'>=' = 3,\n\t'>' = 4,\n\t'!=' = 5,\n}\nconst ComparisonOperatorMenuEntries = [\n\t{name: '==', value: ComparisonOperator['==']},\n\t{name: '<', value: ComparisonOperator['<']},\n\t{name: '<=', value: ComparisonOperator['<=']},\n\t{name: '>=', value: ComparisonOperator['>=']},\n\t{name: '>', value: ComparisonOperator['>']},\n\t{name: '!=', value: ComparisonOperator['!=']},\n];\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass DeleteSopParamsConfig extends NodeParamsConfig {\n\tclass = ParamConfig.INTEGER(AttribClass.VERTEX, {\n\t\tmenu: {\n\t\t\tentries: AttribClassMenuEntries,\n\t\t},\n\t});\n\tinvert = ParamConfig.BOOLEAN(0);\n\thide_objects = ParamConfig.BOOLEAN(0);\n\n\t// by_object_type\n\tby_object_type = ParamConfig.BOOLEAN(0);\n\tobject_type = ParamConfig.INTEGER(ObjectTypes.indexOf(ObjectType.MESH), {\n\t\tmenu: {\n\t\t\tentries: ObjectTypeMenuEntries,\n\t\t},\n\t\tvisible_if: {by_object_type: true},\n\t});\n\n\t// by_expression\n\tby_expression = ParamConfig.BOOLEAN(0);\n\texpression = ParamConfig.BOOLEAN('@ptnum==0', {\n\t\tvisible_if: {by_expression: true},\n\t\texpression: {for_entities: true},\n\t});\n\n\t// by_attrib\n\tby_attrib = ParamConfig.BOOLEAN(0);\n\tattrib_name = ParamConfig.STRING('', {\n\t\tvisible_if: {by_attrib: true},\n\t});\n\tattrib_string = ParamConfig.STRING('', {\n\t\tvisible_if: {by_attrib: true},\n\t});\n\t// attrib_float = ParamConfig.FLOAT(0, {\n\t// \tvisible_if: {by_attrib: true},\n\t// })\n\tattrib_numeric = ParamConfig.VECTOR4([0, 0, 0, 0], {\n\t\tvisible_if: {by_attrib: true},\n\t});\n\tattrib_comparison_operator = ParamConfig.INTEGER(ComparisonOperator['=='], {\n\t\tmenu: {\n\t\t\tentries: ComparisonOperatorMenuEntries,\n\t\t},\n\t\tvisible_if: {by_attrib: true},\n\t});\n\n\t// by_bbox\n\tby_bbox = ParamConfig.BOOLEAN(0);\n\tbbox_size = ParamConfig.VECTOR3([1, 1, 1], {\n\t\tvisible_if: {by_bbox: true},\n\t});\n\tbbox_center = ParamConfig.VECTOR3([0, 0, 0], {\n\t\tvisible_if: {by_bbox: true},\n\t});\n\t//this.add_param( ParamType.STRING, 'index_mode', Core.Geometry.Geometry.INDEX_MODE_FACES )\n\n\t// by_visible\n\tby_visible = ParamConfig.BOOLEAN(0);\n\tkeep_points = ParamConfig.BOOLEAN(1, {\n\t\tvisible_if: {\n\t\t\tclass: AttribClass.OBJECT,\n\t\t},\n\t});\n}\nconst ParamsConfig = new DeleteSopParamsConfig();\n\nexport class DeleteSopNode extends TypedSopNode<DeleteSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'delete';\n\t}\n\n\t// _param_attrib_class: number;\n\t// _param_invert: boolean;\n\t// _param_hide_objects: boolean;\n\t// _param_by_object_type: boolean;\n\t// _param_object_type: number;\n\t// _param_by_attrib: boolean;\n\t// _param_attrib_name: string;\n\t// _param_attrib_float: number;\n\t// _param_attrib_string: string;\n\t// _param_attrib_vector: Vector3;\n\t// _param_attrib_ComparisonOperator: number;\n\t// _param_by_expression: boolean;\n\t// _param_expression: string;\n\t// _param_by_bbox: boolean;\n\t// _param_bbox_size: Vector3;\n\t// _param_bbox_center: Vector3;\n\t// _param_by_visible: boolean;\n\n\tprivate _bbox_cache: Box3 | undefined;\n\n\tprivate _marked_for_deletion_per_object_index: Map<number, boolean> = new Map();\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to delete from'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tthis._bbox_cache = undefined;\n\t\tswitch (this.pv.class) {\n\t\t\tcase AttribClass.VERTEX:\n\t\t\t\tawait this._eval_for_points(core_group);\n\t\t\t\tbreak;\n\t\t\tcase AttribClass.OBJECT:\n\t\t\t\tawait this._eval_for_objects(core_group);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate async _eval_for_objects(core_group: CoreGroup) {\n\t\t// const objects_to_delete = [];\n\t\tconst objects_to_keep = [];\n\t\tconst core_objects = core_group.core_objects();\n\n\t\tthis._marked_for_deletion_per_object_index = new Map();\n\t\tfor (let core_object of core_objects) {\n\t\t\tthis._marked_for_deletion_per_object_index.set(core_object.index, false);\n\t\t}\n\n\t\tif (this.pv.by_expression) {\n\t\t\tawait this._eval_expressions_for_objects(core_objects);\n\t\t}\n\n\t\tif (this.pv.by_object_type) {\n\t\t\tthis._eval_type_for_objects(core_objects);\n\t\t}\n\n\t\tif (this.pv.by_attrib && this.pv.attrib_name !== '') {\n\t\t\tthis._eval_attrib_for_objects(core_objects);\n\n\t\t\t// \tif !is_deleted && @_param_by_bbox\n\t\t\t// \t\tis_deleted = this._eval_bbox_for_object(object)\n\n\t\t\t// \tif !is_deleted && @_param_by_visible\n\t\t\t// \t\tis_deleted = !object.visible\n\n\t\t\t// \tif @_param_invert\n\t\t\t// \t\tis_deleted = !is_deleted\n\n\t\t\t// \tif @_param_hide_objects\n\t\t\t// \t\tobject.visible = !is_deleted\n\t\t\t// \telse\n\t\t\t// \t\tif is_deleted\n\t\t\t// \t\t\tobjects_to_delete.push(object)\n\n\t\t\t// true; // to ensure the loop isn't breaking, which is what happens when setting the object.visible to false...\n\t\t}\n\n\t\tif (this.pv.invert) {\n\t\t\tthis._marked_for_deletion_per_object_index.forEach((marked_for_deletion, object_index) => {\n\t\t\t\tthis._marked_for_deletion_per_object_index.set(object_index, !marked_for_deletion);\n\t\t\t});\n\t\t}\n\n\t\tlet core_object, object;\n\t\tconst point_objects_from_deleted_objects: Object3DWithGeometry[] = [];\n\t\t// for (let object_index of Object.keys(this._marked_for_deletion_per_object_index)) {\n\t\tthis._marked_for_deletion_per_object_index.forEach((marked_for_deletion, object_index) => {\n\t\t\tcore_object = core_objects[object_index];\n\t\t\tobject = core_object.object();\n\n\t\t\tif (this.pv.hide_objects) {\n\t\t\t\tobjects_to_keep.push(object);\n\t\t\t\tif (marked_for_deletion) {\n\t\t\t\t\tobject.visible = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!marked_for_deletion) {\n\t\t\t\t\tobjects_to_keep.push(object);\n\t\t\t\t}\n\t\t\t\tif (marked_for_deletion) {\n\t\t\t\t\tpoint_objects_from_deleted_objects.push(this._point_object(core_object));\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if (marked_for_deletion) {\n\t\t\t// \tcmptr += 1;\n\t\t\t// \tif (this.pv.hide_objects) {\n\t\t\t// \t\tobject.visible = true;\n\n\t\t\t// \t} else {\n\t\t\t// \t\t// object.parent.remove(object);\n\t\t\t// \t\t// const c = () =>\n\t\t\t// \t\t// \tobject.traverse(function(object_child) {\n\t\t\t// \t\t// \t\tif (object_child.geometry != null) {\n\t\t\t// \t\t// \t\t\tobject_child.geometry.dispose();\n\t\t\t// \t\t// \t\t}\n\t\t\t// \t\t// \t\t// const material = object_child.material\n\t\t\t// \t\t// \t\t// if(material){ material.dispose() }\n\t\t\t// \t\t// \t})\n\t\t\t// \t\t// ;\n\t\t\t// \t\t// setTimeout(c, 25);\n\t\t\t// \t}\n\t\t\t// }\n\t\t});\n\n\t\tfor (let object of point_objects_from_deleted_objects) {\n\t\t\tobjects_to_keep.push(object);\n\t\t}\n\n\t\tthis.set_objects(objects_to_keep);\n\t}\n\n\t//console.log(\"#{cmptr} marked for deletion\")\n\n\t// TODO: ensure that geometries with no remaining points are removed from the group\n\tprivate async _eval_for_points(core_group: CoreGroup) {\n\t\tconst core_objects = core_group.core_objects();\n\t\tlet core_object;\n\t\tfor (let i = 0; i < core_objects.length; i++) {\n\t\t\tcore_object = core_objects[i];\n\t\t\tlet core_geometry = core_object.core_geometry();\n\t\t\tif (core_geometry) {\n\t\t\t\tlet points = core_geometry.points_from_geometry();\n\t\t\t\tconst init_points_count = points.length;\n\t\t\t\tif (this.pv.by_expression) {\n\t\t\t\t\tpoints = await this._eval_expressions_for_points(points);\n\t\t\t\t}\n\n\t\t\t\tif (this.pv.by_attrib && this.pv.attrib_name !== '') {\n\t\t\t\t\tpoints = this._eval_attrib_for_points(points);\n\t\t\t\t}\n\t\t\t\tif (this.pv.by_bbox) {\n\t\t\t\t\tpoints = this._eval_bbox_for_points(points);\n\t\t\t\t}\n\n\t\t\t\tif (points.length != init_points_count) {\n\t\t\t\t\tconst object = core_object.object() as Object3DWithGeometry;\n\t\t\t\t\tcore_geometry.geometry().dispose();\n\t\t\t\t\tif (points.length > 0) {\n\t\t\t\t\t\t// TODO: if the new geo only has unconnected points, how do I know it and how do I change the material if it was previously a mesh?\n\t\t\t\t\t\tobject.geometry = CoreGeometry.geometry_from_points(\n\t\t\t\t\t\t\tpoints,\n\t\t\t\t\t\t\t(<unknown>object.constructor) as ObjectType\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// TODO: do not dispose material if not cloned\n\t\t\t\t\t\t// if (object.material != null) {\n\t\t\t\t\t\t// \tobject.material.dispose();\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tobject.parent != null ? object.parent.remove(object) : undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tprivate async _eval_expressions_for_points(points: CorePoint[]) {\n\t\tconst kept_points = [];\n\n\t\t// const promises = points.map((point, i)=> {\n\t\t// \treturn new Promise( async (resolve, reject)=> {\n\t\t// \t\tthis.context().set_entity(point);\n\t\t// \t\tconst val = await(this.param('expression').eval_p());\n\t\t// \t\tconst keep_point = this.pv.invert ?\n\t\t// \t\t\tval === true\n\t\t// \t\t:\n\t\t// \t\t\tval === false;\n\n\t\t// \t\tif (keep_point) {\n\t\t// \t\t\tkept_points.push(point);\n\t\t// \t\t}\n\t\t// \t\tresolve();\n\t\t// \t});\n\t\t// });\n\n\t\t// await(Promise.all(promises));\n\t\tconst param = this.p.expression;\n\t\tif (this.p.expression.has_expression() && param.expression_controller) {\n\t\t\tawait param.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\tlet keep_point = !value;\n\t\t\t\tif (this.pv.invert) {\n\t\t\t\t\tkeep_point = !keep_point;\n\t\t\t\t}\n\t\t\t\tif (keep_point) {\n\t\t\t\t\tkept_points.push(point);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst value = this.pv.expression;\n\t\t\tlet keep_point = !value;\n\t\t\tif (this.pv.invert) {\n\t\t\t\tkeep_point = !keep_point;\n\t\t\t}\n\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\tif (keep_point) {\n\t\t\t\t\tkept_points.push(points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconsole.log(kept_points);\n\t\treturn kept_points;\n\t}\n\n\tprivate async _eval_expressions_for_objects(core_objects: CoreObject[]) {\n\t\tconst param = this.p.expression;\n\n\t\tif (param.has_expression() && param.expression_controller) {\n\t\t\tawait param.expression_controller.compute_expression_for_objects(core_objects, (core_object, value) => {\n\t\t\t\tconst is_marked_for_deletion = this._marked_for_deletion_per_object_index.get(core_object.index);\n\t\t\t\tif (!is_marked_for_deletion) {\n\t\t\t\t\tthis._marked_for_deletion_per_object_index.set(core_object.index, value);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tfor (let core_object of core_objects) {\n\t\t\t\tthis._marked_for_deletion_per_object_index.set(core_object.index, param.value);\n\t\t\t}\n\t\t}\n\n\t\t// for (let core_object of core_objects) {\n\t\t// \tconst is_marked_for_deletion = this._marked_for_deletion_per_object_index.get(core_object.index);\n\n\t\t// \tif (!is_marked_for_deletion) {\n\t\t// \t\tthis.processing_context.set_entity(core_object);\n\t\t// \t\t// param.set_dirty();\n\t\t// \t\tawait param.compute();\n\t\t// \t\tthis._marked_for_deletion_per_object_index.set(core_object.index, param.value);\n\t\t// \t}\n\t\t// }\n\t}\n\n\tprivate _eval_attrib_for_points(points: CorePoint[]) {\n\t\tconst kept_points: CorePoint[] = [];\n\n\t\tif (points.length > 0) {\n\t\t\tconst first_attrib_value = points[0].attrib_value(this.pv.attrib_name);\n\t\t\t// TODO: should I just have @_param_attrib_string?\n\t\t\t// although I may need a vector one... maybe a multiple string?\n\t\t\tconst comparison_attrib_values = lodash_isString(first_attrib_value)\n\t\t\t\t? //@_param_attrib_string\n\t\t\t\t  CoreString.attrib_names(this.pv.attrib_string)\n\t\t\t\t: [this.pv.attrib_numeric.x];\n\n\t\t\tcomparison_attrib_values.forEach((comparison_attrib_value: string | number) => {\n\t\t\t\treturn points.forEach((point) => {\n\t\t\t\t\tconst attrib_value = point.attrib_value(this.pv.attrib_name);\n\n\t\t\t\t\t// TODO: and for vectors? should I have a point.attrib(name).is_equal(value)\n\t\t\t\t\t// or point.is_attrib_equal(name, value) ?\n\t\t\t\t\t//keep_point = (attrib_value != comparison_attrib_value)\n\t\t\t\t\tlet keep_point = !this._comparison(attrib_value, comparison_attrib_value);\n\n\t\t\t\t\tif (this.pv.invert) {\n\t\t\t\t\t\tkeep_point = !keep_point;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (keep_point) {\n\t\t\t\t\t\treturn kept_points.push(point);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn kept_points;\n\t}\n\n\tprivate _comparison(attrib_value: number | string, comparison_attrib_value: number | string) {\n\t\tswitch (this.pv.attrib_ComparisonOperator) {\n\t\t\tcase ComparisonOperator['==']:\n\t\t\t\treturn attrib_value === comparison_attrib_value;\n\t\t\tcase ComparisonOperator['<=']:\n\t\t\t\treturn attrib_value <= comparison_attrib_value;\n\t\t\tcase ComparisonOperator['<']:\n\t\t\t\treturn attrib_value < comparison_attrib_value;\n\t\t\tcase ComparisonOperator['>']:\n\t\t\t\treturn attrib_value > comparison_attrib_value;\n\t\t\tcase ComparisonOperator['>=']:\n\t\t\t\treturn attrib_value >= comparison_attrib_value;\n\t\t\tcase ComparisonOperator['!=']:\n\t\t\t\treturn attrib_value !== comparison_attrib_value;\n\t\t}\n\t}\n\n\tprivate _eval_type_for_objects(core_objects: CoreObject[]) {\n\t\tconst object_type_name = ObjectTypes[this.pv.object_type];\n\n\t\tfor (let core_object of core_objects) {\n\t\t\tconst is_marked_for_deletion = this._marked_for_deletion_per_object_index.get(core_object.index);\n\n\t\t\tif (!is_marked_for_deletion) {\n\t\t\t\tconst object = core_object.object();\n\n\t\t\t\tif (object.constructor.name === object_type_name) {\n\t\t\t\t\tthis._marked_for_deletion_per_object_index.set(core_object.index, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _eval_attrib_for_objects(core_objects: CoreObject[]) {\n\t\tfor (let core_object of core_objects) {\n\t\t\tconst is_marked_for_deletion = this._marked_for_deletion_per_object_index.get(core_object.index);\n\n\t\t\tif (!is_marked_for_deletion) {\n\t\t\t\t// const object = core_object.object();\n\t\t\t\tconst attrib_value = core_object.attrib_value(this.pv.attrib_name);\n\n\t\t\t\tconst comparison_attrib_value = lodash_isString(attrib_value)\n\t\t\t\t\t? this.pv.attrib_string\n\t\t\t\t\t: this.pv.attrib_float;\n\n\t\t\t\tif (attrib_value === comparison_attrib_value) {\n\t\t\t\t\tthis._marked_for_deletion_per_object_index.set(core_object.index, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _eval_bbox_for_points(points: CorePoint[]) {\n\t\tconst kept_points: CorePoint[] = [];\n\n\t\tlodash_each(points, (point, i) => {\n\t\t\tconst in_bbox = this._bbox.containsPoint(point.position());\n\n\t\t\tconst keep_point = this.pv.invert ? in_bbox : !in_bbox;\n\n\t\t\tif (keep_point) {\n\t\t\t\treturn kept_points.push(point);\n\t\t\t}\n\t\t});\n\n\t\treturn kept_points;\n\t}\n\n\t// private _eval_bbox_for_object(object: Object3D): boolean {\n\t// \tconst object_bbox = new Box3().setFromObject(object);\n\t// \tconst center = new Vector3();\n\t// \tobject_bbox.getCenter(center);\n\n\t// \treturn this.pv.bbox().containsPoint(center);\n\t// }\n\n\tprivate get _bbox() {\n\t\treturn this._bbox_cache != null\n\t\t\t? this._bbox_cache\n\t\t\t: (this._bbox_cache = new Box3(\n\t\t\t\t\tthis.pv.bbox_center.clone().sub(this.pv.bbox_size.clone().multiplyScalar(0.5)),\n\t\t\t\t\tthis.pv.bbox_center.clone().add(this.pv.bbox_size.clone().multiplyScalar(0.5))\n\t\t\t  ));\n\t}\n\n\tprivate _point_object(core_object: CoreObject) {\n\t\tconst core_points = core_object.points();\n\t\tconst geometry = CoreGeometry.geometry_from_points(\n\t\t\tcore_points,\n\t\t\t(<unknown>core_object.object().constructor) as ObjectType\n\t\t);\n\t\treturn this.create_object(geometry, ObjectType.POINTS);\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport lodash_range from 'lodash/range';\nimport lodash_times from 'lodash/times';\nimport lodash_chunk from 'lodash/chunk';\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {CoreFace} from '../../../core/geometry/Face';\nclass FaceSopParamsConfig extends NodeParamsConfig {\n\tmake_faces_unique = ParamConfig.BOOLEAN(0);\n\tadd_face_center_attribute = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {make_faces_unique: 1},\n\t});\n\tadd_face_id = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {make_faces_unique: 1},\n\t});\n\ttransform = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {make_faces_unique: 1},\n\t});\n\tscale = ParamConfig.FLOAT(1, {\n\t\tvisible_if: {make_faces_unique: 1, transform: 1},\n\t});\n}\nconst ParamsConfig = new FaceSopParamsConfig();\n\nexport class FaceSopNode extends TypedSopNode<FaceSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'face';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tif (this.pv.make_faces_unique) {\n\t\t\tthis._make_faces_unique(core_group);\n\n\t\t\t// we can only add face_center attrib\n\t\t\t// if the faces have been split\n\t\t\t// otherwise a point may belong to multiple faces\n\t\t\tif (this.pv.add_face_center_attribute) {\n\t\t\t\tthis._add_face_center_attribute(core_group);\n\t\t\t}\n\t\t\tif (this.pv.add_face_id) {\n\t\t\t\tthis._add_face_id(core_group);\n\t\t\t}\n\t\t\tif (this.pv.transform) {\n\t\t\t\tthis._transform_faces(core_group);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tprivate _make_faces_unique(core_group: CoreGroup) {\n\t\tfor (let object of core_group.objects()) {\n\t\t\tif ((object as Mesh).isMesh) {\n\t\t\t\tconst geometry = (object as Mesh).geometry as BufferGeometry;\n\t\t\t\tconst faces = lodash_chunk(geometry.index?.array || [], 3);\n\t\t\t\tconst points_count = faces.length * 3;\n\t\t\t\tfor (let attrib_name of Object.keys(geometry.attributes)) {\n\t\t\t\t\tconst attrib = geometry.attributes[attrib_name];\n\t\t\t\t\tconst attrib_size = attrib.itemSize;\n\t\t\t\t\tconst new_values = new Float32Array(points_count * attrib_size);\n\t\t\t\t\tlet new_value_index = 0;\n\t\t\t\t\tfaces.forEach((face) => {\n\t\t\t\t\t\tface.forEach((index) => {\n\t\t\t\t\t\t\tlodash_times(attrib_size, (i) => {\n\t\t\t\t\t\t\t\tconst current_value = attrib.array[index * attrib_size + i];\n\t\t\t\t\t\t\t\tnew_values[new_value_index] = current_value;\n\t\t\t\t\t\t\t\tnew_value_index += 1;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tgeometry.setAttribute(attrib_name, new BufferAttribute(new_values, attrib_size));\n\t\t\t\t}\n\t\t\t\tconst new_indices = lodash_range(points_count);\n\t\t\t\tgeometry.setIndex(new_indices);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _add_face_center_attribute(core_group: CoreGroup) {\n\t\tconst attrib_name = 'face_center';\n\t\tconst face_center = new Vector3();\n\t\tlet faces: CoreFace[], face: CoreFace, points: CorePoint[], point: CorePoint;\n\n\t\tcore_group.core_objects().forEach((core_object) => {\n\t\t\tconst object = core_object.object();\n\t\t\tconst core_geometry = core_object.core_geometry();\n\t\t\tif ((object as Mesh).isMesh && core_geometry) {\n\t\t\t\tfaces = core_geometry.faces();\n\t\t\t\tif (!core_geometry.has_attrib(attrib_name)) {\n\t\t\t\t\tcore_geometry.add_numeric_attrib(attrib_name, 3, -1);\n\t\t\t\t}\n\n\t\t\t\tfor (let fi = 0; fi < faces.length; fi++) {\n\t\t\t\t\tface = faces[fi];\n\t\t\t\t\tface.center(face_center);\n\n\t\t\t\t\tpoints = face.points;\n\t\t\t\t\tfor (let pi = 0; pi < points.length; pi++) {\n\t\t\t\t\t\tpoint = points[pi];\n\t\t\t\t\t\tpoint.set_attrib_value(attrib_name, face_center);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _add_face_id(core_group: CoreGroup) {\n\t\tconst attrib_name = 'face_id';\n\n\t\tcore_group.core_objects().forEach((core_object) => {\n\t\t\tconst object = core_object.object();\n\t\t\tconst core_geometry = core_object.core_geometry();\n\t\t\tif ((object as Mesh).isMesh && core_geometry) {\n\t\t\t\tconst faces = core_geometry.faces();\n\t\t\t\t// const points_count = core_geometry.points_count();\n\n\t\t\t\tif (!core_geometry.has_attrib(attrib_name)) {\n\t\t\t\t\tcore_geometry.add_numeric_attrib(attrib_name, 1, -1);\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < faces.length; i++) {\n\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\tconst points = face.points;\n\t\t\t\t\tfor (let j = 0; j < points.length; j++) {\n\t\t\t\t\t\tconst point = points[j];\n\t\t\t\t\t\tpoint.set_attrib_value(attrib_name, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _transform_faces(core_group: CoreGroup) {\n\t\tconst attrib_name = 'position';\n\t\tconst face_center = new Vector3();\n\t\tconst new_position = new Vector3();\n\t\tconst scale = this.pv.scale;\n\t\tlet faces: CoreFace[], face: CoreFace, points: CorePoint[], point: CorePoint;\n\n\t\tcore_group.core_objects().forEach((core_object) => {\n\t\t\tconst object = core_object.object();\n\t\t\tconst core_geometry = core_object.core_geometry();\n\t\t\tif ((object as Mesh).isMesh && core_geometry) {\n\t\t\t\tfaces = core_geometry.faces();\n\t\t\t\tif (!core_geometry.has_attrib(attrib_name)) {\n\t\t\t\t\tcore_geometry.add_numeric_attrib(attrib_name, 3, -1);\n\t\t\t\t}\n\n\t\t\t\tfor (let fi = 0; fi < faces.length; fi++) {\n\t\t\t\t\tface = faces[fi];\n\t\t\t\t\tface.center(face_center);\n\n\t\t\t\t\tpoints = face.points;\n\t\t\t\t\tfor (let pi = 0; pi < points.length; pi++) {\n\t\t\t\t\t\tpoint = points[pi];\n\t\t\t\t\t\tconst position = point.position();\n\t\t\t\t\t\tnew_position.x = position.x * scale + face_center.x * (1 - scale);\n\t\t\t\t\t\tnew_position.y = position.y * scale + face_center.y * (1 - scale);\n\t\t\t\t\t\tnew_position.z = position.z * scale + face_center.z * (1 - scale);\n\t\t\t\t\t\tpoint.set_attrib_value(attrib_name, new_position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import lodash_flatten from 'lodash/flatten';\n// import lodash_clone from 'lodash/clone';\n// import lodash_merge from 'lodash/merge';\nimport {TypedSopNode} from './_Base';\nimport {Object3D} from 'three/src/core/Object3D';\n\nimport {CoreLoaderGeometry} from '../../../core/loader/Geometry';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {BaseParamType} from '../../params/_Base';\nimport {BaseNodeType} from '../_Base';\nclass FileSopParamsConfig extends NodeParamsConfig {\n\turl = ParamConfig.STRING('', {\n\t\tdesktop_browse: {file_type: 'geometry'},\n\t\talways_reference_asset: true,\n\t});\n\treload = ParamConfig.BUTTON(null, {\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tFileSopNode.PARAM_CALLBACK_reload(node as FileSopNode);\n\t\t},\n\t});\n}\nconst ParamsConfig = new FileSopParamsConfig();\n\nexport class FileSopNode extends TypedSopNode<FileSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'file';\n\t}\n\n\tinitialize_node() {\n\t\t// this.io.inputs.set_count_to_zero();\n\t}\n\n\t// TODO: no error when trying to load a non existing zip file??\n\tcook() {\n\t\tconst loader = new CoreLoaderGeometry(this.pv.url);\n\t\tloader.load(this._on_load.bind(this), this._on_error.bind(this));\n\t}\n\n\tprivate _on_load(objects: Object3D[]) {\n\t\tconsole.log('objects', objects);\n\t\tobjects = lodash_flatten(objects);\n\t\tthis.set_objects(objects);\n\t}\n\tprivate _on_error(message: string) {\n\t\tthis.states.error.set(`could not load geometry from ${this.pv.url} (${message})`);\n\t}\n\n\t// if I add this again, check if it can also work for desktop\n\t// async _on_open_url() {\n\t// \tconst url = this.pv.url\n\t// \tconst a = document.createElement('a');\n\t// \ta.href = url;\n\t// \ta.setAttribute('target', '_blank');\n\t// \ta.click();\n\t// }\n\n\tstatic PARAM_CALLBACK_reload(node: FileSopNode) {\n\t\tnode.param_callback_reload();\n\t}\n\tprivate param_callback_reload() {\n\t\t// this._previous_param_url = null\n\n\t\t// set the param dirty is preferable, in case this is used to refresh a local asset\n\t\tthis.p.url.set_dirty();\n\t\t// this.set_dirty()\n\t}\n\t// json_data_keys_prefix(){ return this.pv.json_data_keys_prefix }\n\t// json_skip_entries(){ return this.pv.skip_entries }\n\t// json_convert(){ return this.pv.convert }\n\t// json_convert_to_numeric(){ return this.pv.convert_to_numeric }\n}\n","import {ObjectLoader} from 'three/src/loaders/ObjectLoader';\nimport {Object3D} from 'three/src/core/Object3D';\n// import lodash_isArray from 'lodash/isArray';\n// import {CoreString} from '../String';\n\n// import {GeometryLoaderModule} from './Geometry/_Module';\n// import {DRACOLoader} from './Geometry/DRACOLoader';\n// import {JsonData} from './Geometry/JsonData'\n// import {CoreScriptLoader} from './Script';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshLambertMaterial} from 'three/src/materials/MeshLambertMaterial';\n\n// import {DDSLoader} from '../../../modules/three/examples/jsm/loaders/DDSLoader';\n// import {DRACOLoader} from '../../../modules/three/examples/jsm/loaders/DRACOLoader';\n// import {GLTFLoader} from '../../../modules/three/examples/jsm/loaders/GLTFLoader';\n// import {OBJLoader} from '../../../modules/three/examples/jsm/loaders/OBJLoader';\n\n// const GLTFLoaders = ['DDSLoader', 'DRACOLoader', 'GLTFLoader'];\n// const SCRIPT_URLS_BY_EXT = {\n// \tgltf: GLTFLoaders,\n// \tglb: GLTFLoaders,\n// \tobj: 'OBJLoader',\n// };\n// const THREE_LOADER_BY_EXT = {\n// \tgltf: 'GLTFLoader',\n// \tglb: 'GLTFLoader',\n// \tobj: 'OBJLoader',\n// };\n// const DRACO_EXTENSIONS = ['gltf', 'glb']\n// const DRACO_EXTENSIONS = ['drc'];\n\n// export enum LoaderType {\n// \tAUTO = 'auto',\n// \tJSON_DATA = 'json_data',\n// \t// THREEJS_JSON = 'threejs_json',\n// }\n// export const LOADER_TYPES = [\n// \tLoaderType.AUTO,\n// \tLoaderType.JSON_DATA,\n// \t// LoaderType.THREEJS_JSON,\n// ];\n\nexport class CoreLoaderGeometry {\n\tprivate ext: string;\n\n\tconstructor(\n\t\tprivate url: string // private type: LoaderType, // private requester: any\n\t) {\n\t\tconst elements = this.url.split('.');\n\t\tthis.ext = elements[elements.length - 1].toLowerCase();\n\t\tif (this.ext === 'zip') {\n\t\t\tthis.ext = elements[elements.length - 2];\n\t\t}\n\t\t// if(!this.type){\n\t\t// \tconsole.error(\"CoreLoaderGeometry type is not valid\", this.type)\n\t\t// }\n\t}\n\n\tload(on_success: (objects: Object3D[]) => void, on_error: (error: string) => void) {\n\t\tthis.load_auto()\n\t\t\t.then((object) => {\n\t\t\t\ton_success(object);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\ton_error(error);\n\t\t\t});\n\t}\n\n\tprivate load_auto(): Promise<any> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tconst url = this.url; //.includes('?') ? this.url : `${this.url}?${Date.now()}`;\n\n\t\t\tif (this.ext == 'json') {\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then(async (response) => {\n\t\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\t\tconst obj_loader = new ObjectLoader();\n\t\t\t\t\t\tobj_loader.parse(data, (obj) => {\n\t\t\t\t\t\t\tresolve(this.on_load_success(obj.children[0]));\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst loader = await this.loader_for_ext();\n\t\t\t\tif (loader) {\n\t\t\t\t\tloader.load(\n\t\t\t\t\t\turl,\n\t\t\t\t\t\t(object: any) => {\n\t\t\t\t\t\t\tconsole.log(object);\n\t\t\t\t\t\t\tthis.on_load_success(object).then((object2) => {\n\t\t\t\t\t\t\t\tresolve(object2);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t(error_message: ErrorEvent) => {\n\t\t\t\t\t\t\treject(error_message);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst error_message = `format not supported (${this.ext})`;\n\t\t\t\t\treject(error_message);\n\t\t\t\t}\n\t\t\t\t// CoreLoaderGeometry.loader_for_ext().then((loader) => {\n\t\t\t\t// \tif (loader) {\n\t\t\t\t// \t\tloader.load(\n\t\t\t\t// \t\t\turl,\n\t\t\t\t// \t\t\t(object: Object3D) => {\n\t\t\t\t// \t\t\t\tthis.on_load_success(object).then((object2) => {\n\t\t\t\t// \t\t\t\t\tresolve(object2);\n\t\t\t\t// \t\t\t\t});\n\t\t\t\t// \t\t\t},\n\t\t\t\t// \t\t\tnull,\n\t\t\t\t// \t\t\t(error_message: string) => {\n\t\t\t\t// \t\t\t\treject(error_message);\n\t\t\t\t// \t\t\t}\n\t\t\t\t// \t\t);\n\t\t\t\t// \t} else {\n\t\t\t\t// \t\tconst error_message = `format not supported (${this.ext})`;\n\t\t\t\t// \t\tconsole.warn(error_message);\n\t\t\t\t// \t\treject(error_message);\n\t\t\t\t// \t}\n\t\t\t\t// });\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async on_load_success(object: Object3D | BufferGeometry | object): Promise<Object3D[]> {\n\t\t// console.log(\"animation?\", object.animations)\n\t\t// if(object.animations){\n\t\t// \tawait CoreScriptLoader.load('/three/js/utils/SkeletonUtils')\n\t\t// }\n\t\tif (object instanceof Object3D) {\n\t\t\tswitch (this.ext) {\n\t\t\t\tcase 'gltf':\n\t\t\t\t\treturn this.on_load_succes_gltf(object);\n\t\t\t\tcase 'glb':\n\t\t\t\t\treturn this.on_load_succes_gltf(object);\n\t\t\t\t// case 'drc':\n\t\t\t\t// \treturn this.on_load_succes_drc(object);\n\t\t\t\tcase 'obj':\n\t\t\t\t\treturn [object]; // [object] //.children\n\t\t\t\tcase 'json':\n\t\t\t\t\treturn [object]; // [object] //.children\n\t\t\t\tdefault:\n\t\t\t\t\treturn [object];\n\t\t\t}\n\t\t}\n\t\tif (object instanceof BufferGeometry) {\n\t\t\tswitch (this.ext) {\n\t\t\t\tcase 'drc':\n\t\t\t\t\treturn this.on_load_succes_drc(object);\n\t\t\t\tdefault:\n\t\t\t\t\treturn [new Mesh(object)];\n\t\t\t}\n\t\t}\n\n\t\t// if it's an object, such as returned by glb\n\t\tswitch (this.ext) {\n\t\t\tcase 'gltf':\n\t\t\t\treturn this.on_load_succes_gltf(object);\n\t\t\tcase 'glb':\n\t\t\t\treturn this.on_load_succes_gltf(object);\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate on_load_succes_gltf(gltf: any): Object3D[] {\n\t\tconst scene = gltf['scene'];\n\t\tscene.animations = gltf.animations;\n\n\t\tconsole.log('[scene]', [scene]);\n\t\treturn [scene]; //.children\n\t}\n\tprivate on_load_succes_drc(geometry: BufferGeometry): Object3D[] {\n\t\tconst mat = new MeshLambertMaterial();\n\t\tconst mesh = new Mesh(geometry, mat);\n\n\t\treturn [mesh]; //.children\n\t}\n\n\tasync loader_for_ext() {\n\t\tswitch (this.ext.toLowerCase()) {\n\t\t\tcase 'gltf':\n\t\t\t\treturn this.loader_for_gltf();\n\t\t\tcase 'glb':\n\t\t\t\treturn this.loader_for_glb();\n\t\t\tcase 'drc':\n\t\t\t\treturn this.loader_for_drc();\n\t\t\tcase 'obj':\n\t\t\t\treturn this.loader_for_obj();\n\t\t}\n\t}\n\n\tasync loader_for_gltf() {\n\t\t// 'DDSLoader', 'DRACOLoader', 'GLTFLoader'\n\t\t// const {DDSLoader} = await import(`modules/three/examples/jsm/loaders/DDSLoader`);\n\t\t// const {DRACOLoader} = await import(`modules/three/examples/jsm/loaders/DRACOLoader`);\n\t\tconst {GLTFLoader} = await import(`../../../modules/three/examples/jsm/loaders/GLTFLoader`);\n\t\treturn new GLTFLoader();\n\t}\n\tasync loader_for_glb() {\n\t\tconst {GLTFLoader} = await import(`../../../modules/three/examples/jsm/loaders/GLTFLoader`);\n\t\tconst {DRACOLoader} = await import(`../../../modules/three/examples/jsm/loaders/DRACOLoader`);\n\n\t\tconst loader = new GLTFLoader();\n\t\tconst draco_loader = new DRACOLoader();\n\t\tconst decoder_path = '/three/js/libs/draco/gltf/';\n\t\t// DRACOLoader.setDecoderPath( decoder_path );\n\t\tdraco_loader.setDecoderPath(decoder_path);\n\t\tdraco_loader.setDecoderConfig({type: 'js'});\n\t\tloader.setDRACOLoader(draco_loader);\n\n\t\treturn loader;\n\t}\n\tasync loader_for_drc() {\n\t\t// const {DDSLoader} = await import(`modules/three/examples/jsm/loaders/DDSLoader`);\n\t\tconst {DRACOLoader} = await import(`../../../modules/three/examples/jsm/loaders/DRACOLoader`);\n\t\t// const {GLTFLoader} = await import(`modules/three/examples/jsm/loaders/GLTFLoader`);\n\n\t\t// const loader = new GLTFLoader();\n\t\tconst draco_loader = new DRACOLoader();\n\t\tconst decoder_path = '/three/js/libs/draco/';\n\t\t// DRACOLoader.setDecoderPath( decoder_path );\n\t\tdraco_loader.setDecoderPath(decoder_path);\n\t\tdraco_loader.setDecoderConfig({type: 'js'});\n\t\t// loader.setDRACOLoader(draco_loader);\n\t\t// console.log('loader', loader);\n\t\treturn draco_loader;\n\t}\n\tasync loader_for_obj() {\n\t\tconst {OBJLoader} = await import(`../../../modules/three/examples/jsm/loaders/OBJLoader`);\n\t\treturn new OBJLoader();\n\t}\n\n\t// \tconst ext_lowercase = this.ext.toLowerCase();\n\t// \tlet script_names = SCRIPT_URLS_BY_EXT[ext_lowercase];\n\t// \tif (script_names) {\n\t// \t\tif (!lodash_isArray(script_names)) {\n\t// \t\t\tscript_names = [script_names];\n\t// \t\t}\n\t// \t\tlet imported_modules = {};\n\t// \t\tlet imported_module;\n\t// \t\tfor (let script_name of script_names) {\n\t// \t\t\timported_module = await CoreScriptLoader.load_module_three_loader(script_name);\n\t// \t\t\timported_modules[script_name] = imported_module;\n\t// \t\t}\n\n\t// \t\tconst loader_class_name = THREE_LOADER_BY_EXT[ext_lowercase];\n\t// \t\tconst loader_class = imported_module[loader_class_name];\n\t// \t\tif (loader_class) {\n\t// \t\t\tconst loader = new loader_class();\n\n\t// \t\t\tif (DRACO_EXTENSIONS.includes(ext_lowercase)) {\n\t// \t\t\t\tconst DRACOLoader = imported_modules.DRACOLoader.DRACOLoader;\n\t// \t\t\t\tconst draco_loader = new DRACOLoader();\n\t// \t\t\t\t// const decoder_path = '/three/js/libs/draco/gltf/'\n\t// \t\t\t\t// DRACOLoader.setDecoderPath( decoder_path );\n\t// \t\t\t\t// draco_loader.setDecoderPath( decoder_path );\n\t// \t\t\t\tloader.setDRACOLoader(draco_loader);\n\t// \t\t\t}\n\n\t// \t\t\treturn loader;\n\t// \t\t}\n\t// \t}\n\t// }\n}\n","import {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Group} from 'three/src/objects/Group';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {Material} from 'three/src/materials/Material';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshPhongMaterial} from 'three/src/materials/MeshPhongMaterial';\nimport {Points} from 'three/src/objects/Points';\nimport {PointsMaterial} from 'three/src/materials/PointsMaterial';\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nvar OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tvar object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tvar material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tvar material_use_pattern = /^usemtl /;\n\t// usemap map_name\n\tvar map_use_pattern = /^usemap /;\n\n\tfunction ParserState() {\n\n\t\tvar state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterials: {},\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: []\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tvar previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tvar cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tvar lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tvar declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tvar index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tvar src = this.vertices;\n\t\t\t\tvar dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.normals;\n\t\t\t\tvar dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.colors;\n\t\t\t\tvar dst = this.object.geometry.colors;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tvar src = this.uvs;\n\t\t\t\tvar dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tvar ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tvar ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tvar ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\n\t\t\t\tif ( this.colors.length > 0 ) {\n\n\t\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tvar uvLen = this.uvs.length;\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\t// Normals are many times the same. If so, skip function call and parseInt.\n\t\t\t\t\tvar nLen = this.normals.length;\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\n\t\t\t\t\tib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tvar vLen = this.vertices.length;\n\t\t\t\tvar uvLen = this.uvs.length;\n\n\t\t\t\tfor ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tvar state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tvar lines = text.split( '\\n' );\n\t\t\tvar line = '', lineFirstChar = '';\n\t\t\tvar lineLength = 0;\n\t\t\tvar result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tvar trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tvar data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tvar faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tvar vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tvar v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar v2 = faceVertices[ j ];\n\t\t\t\t\t\tvar v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tvar lineParts = line.substring( 1 ).trim().split( \" \" );\n\t\t\t\t\tvar lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( \"/\" ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tvar parts = lineParts[ li ].split( \"/\" );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tvar lineData = line.substr( 1 ).trim();\n\t\t\t\t\tvar pointData = lineData.split( \" \" );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// var name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tvar name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( map_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tvar value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\t\t\t\t\tvar material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tvar container = new Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tfor ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tvar object = state.objects[ i ];\n\t\t\t\tvar geometry = object.geometry;\n\t\t\t\tvar materials = object.materials;\n\t\t\t\tvar isLine = ( geometry.type === 'Line' );\n\t\t\t\tvar isPoints = ( geometry.type === 'Points' );\n\t\t\t\tvar hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tvar buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbuffergeometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tvar createdMaterials = [];\n\n\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\tvar materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tvar material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tvar materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tvar sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t\treturn container;\n\n\t\t}\n\n\t} );\n\n\treturn OBJLoader;\n\n} )();\n\nexport { OBJLoader };\n","import {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreObject} from '../../../core/geometry/Object';\nimport {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Mesh} from 'three/src/objects/Mesh';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {ObjectType} from '../../../core/geometry/Constant';\nclass FuseSopParamsConfig extends NodeParamsConfig {\n\tdist = ParamConfig.FLOAT(0.1, {\n\t\trange: [0, 1],\n\t\trange_locked: [true, false],\n\t});\n}\nconst ParamsConfig = new FuseSopParamsConfig();\n\nexport class FuseSopNode extends TypedSopNode<FuseSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'fuse';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['points to fuse together'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tconst new_objects = [];\n\t\tlet new_object;\n\t\tfor (let core_object of core_group.core_objects()) {\n\t\t\tnew_object = this._fuse_core_object(core_object);\n\t\t\tif (new_object) {\n\t\t\t\tnew_objects.push(new_object);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_objects(new_objects);\n\t}\n\n\tprivate _fuse_core_object(core_object: CoreObject) {\n\t\tconst object = core_object.object();\n\t\tif (!object) {\n\t\t\treturn;\n\t\t}\n\t\tconst points = core_object.points();\n\n\t\tconst precision = this.pv.dist;\n\t\tconst points_by_position: Dictionary<CorePoint[]> = {};\n\t\tfor (let point of points) {\n\t\t\tconst position = point.position();\n\t\t\tconst rounded_position = new Vector3(\n\t\t\t\tMath.round(position.x / precision),\n\t\t\t\tMath.round(position.y / precision),\n\t\t\t\tMath.round(position.z / precision)\n\t\t\t);\n\t\t\tconst key = rounded_position.toArray().join('-');\n\t\t\tpoints_by_position[key] = points_by_position[key] || [];\n\t\t\tpoints_by_position[key].push(point);\n\t\t}\n\n\t\tconst kept_points: CorePoint[] = [];\n\t\tObject.keys(points_by_position).forEach((key) => {\n\t\t\tkept_points.push(points_by_position[key][0]);\n\t\t});\n\n\t\t(object as Mesh).geometry.dispose();\n\t\tif (kept_points.length > 0) {\n\t\t\t(object as Mesh).geometry = CoreGeometry.geometry_from_points(\n\t\t\t\tkept_points,\n\t\t\t\t(<unknown>object.constructor) as ObjectType\n\t\t\t);\n\t\t\treturn object;\n\t\t} else {\n\t\t\t// if(object.material){ object.material.dispose() }\n\t\t\t// if(object.parent){ object.parent.remove(object) }\n\t\t}\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {TypedSopNode} from './_Base';\nimport {CoreTransform} from '../../../core/Transform';\nimport {CoreConstant} from '../../../core/geometry/Constant';\n\nimport {CoreGeometryOperationHexagon} from '../../../core/geometry/operation/Hexagon';\n\nconst DEFAULT_UP = new Vector3(0, 1, 0);\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass HexagonsSopParamsConfig extends NodeParamsConfig {\n\tsize = ParamConfig.VECTOR2([1, 1]);\n\thexagon_radius = ParamConfig.FLOAT(0.1);\n\tdirection = ParamConfig.VECTOR3([0, 1, 0]);\n\tpoints_only = ParamConfig.BOOLEAN(0);\n\t// no need to have centers, as all points are centers anyway\n\t//this.add_param( ParamType.TOGGLE, 'centers_only', 0, {visible_if: {points_only: 1}})\n}\nconst ParamsConfig = new HexagonsSopParamsConfig();\n\nexport class HexagonsSopNode extends TypedSopNode<HexagonsSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'hexagons';\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\n\tinitialize_node() {}\n\n\tcook() {\n\t\tconst operation = new CoreGeometryOperationHexagon(this.pv.size, this.pv.hexagon_radius, this.pv.points_only);\n\t\tconst geometry = operation.process();\n\n\t\tthis._core_transform.rotate_geometry(geometry, DEFAULT_UP, this.pv.direction);\n\n\t\tif (this.pv.points_only) {\n\t\t\tthis.set_geometry(geometry, CoreConstant.OBJECT_TYPE.POINTS);\n\t\t} else {\n\t\t\tthis.set_geometry(geometry);\n\t\t}\n\t}\n}\n","import {Vector2} from 'three/src/math/Vector2'\nimport {BufferGeometry} from 'three/src/core/BufferGeometry'\nimport {BufferAttribute} from 'three/src/core/BufferAttribute'\nconst THREE = {BufferAttribute, BufferGeometry, Vector2}\nimport lodash_flatten from 'lodash/flatten'\n// import {CoreGeometry} from '../Geometry';\n\nexport class CoreGeometryOperationHexagon {\n\tconstructor(\n\t\tprivate _param_size: THREE.Vector2,\n\t\tprivate _param_hexagon_radius: number,\n\t\tprivate _param_points_only: boolean\n\t) {}\n\n\tprocess(): THREE.BufferGeometry {\n\t\tconst side_length = this._param_hexagon_radius\n\t\tconst half_side_length = side_length * 0.5\n\t\tconst step_size = {\n\t\t\tx: side_length,\n\t\t\ty: Math.cos(Math.PI / 6) * this._param_hexagon_radius,\n\t\t}\n\t\tconst steps_count = {\n\t\t\tx: Math.floor(this._param_size.x / step_size.x),\n\t\t\ty: Math.floor(this._param_size.y / step_size.y),\n\t\t}\n\t\tlet positions = []\n\t\tlet indices = []\n\t\tfor (let y = 0; y < steps_count.y; y++) {\n\t\t\tfor (let x = 0; x < steps_count.x; x++) {\n\t\t\t\tpositions.push([\n\t\t\t\t\t-(this._param_size.x * 0.5) +\n\t\t\t\t\t\tx * step_size.x +\n\t\t\t\t\t\t(y % 2 == 0 ? half_side_length : 0),\n\t\t\t\t\t0,\n\t\t\t\t\t-(this._param_size.y * 0.5) + y * step_size.y,\n\t\t\t\t])\n\n\t\t\t\tif (!this._param_points_only) {\n\t\t\t\t\tif (y >= 1) {\n\t\t\t\t\t\tif (x == 0 || x == steps_count.x - 1) {\n\t\t\t\t\t\t\tif (x == 0) {\n\t\t\t\t\t\t\t\tindices.push([\n\t\t\t\t\t\t\t\t\tx + 1 + (y - 1) * steps_count.x,\n\t\t\t\t\t\t\t\t\tx + (y - 1) * steps_count.x,\n\t\t\t\t\t\t\t\t\tx + y * steps_count.x,\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindices.push([\n\t\t\t\t\t\t\t\t\tx + y * steps_count.x,\n\t\t\t\t\t\t\t\t\tx + (y - 1) * steps_count.x,\n\t\t\t\t\t\t\t\t\tx - 1 + y * steps_count.x,\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices.push([\n\t\t\t\t\t\t\t\tx + y * steps_count.x,\n\t\t\t\t\t\t\t\tx + (y - 1) * steps_count.x,\n\t\t\t\t\t\t\t\tx - 1 + y * steps_count.x,\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\tindices.push([\n\t\t\t\t\t\t\t\tx + y * steps_count.x,\n\t\t\t\t\t\t\t\tx + 1 + (y - 1) * steps_count.x,\n\t\t\t\t\t\t\t\tx + (y - 1) * steps_count.x,\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpositions = lodash_flatten(positions)\n\n\t\tconst geometry = new THREE.BufferGeometry()\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(new Float32Array(positions), 3)\n\t\t)\n\n\t\tif (!this._param_points_only) {\n\t\t\tindices = lodash_flatten(indices)\n\t\t\tgeometry.setIndex(indices)\n\t\t\tgeometry.computeVertexNormals()\n\t\t}\n\n\t\treturn geometry\n\t}\n}\n","import {Object3D} from 'three/src/core/Object3D';\nimport {Group} from 'three/src/objects/Group';\nconst THREE = {Group, Object3D};\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\n// import {CoreGroup} from '../../../Core/Geometry/Group';\n// import {CoreConstant} from '../../../Core/Geometry/Constant'\n\nexport enum HierarchyMode {\n\tADD_PARENT = 'add_parent',\n\tREMOVE_PARENT = 'remove_parent',\n}\nexport const HIERARCHY_MODES: Array<HierarchyMode> = [HierarchyMode.ADD_PARENT, HierarchyMode.REMOVE_PARENT];\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass HierarchySopParamsConfig extends NodeParamsConfig {\n\tmode = ParamConfig.INTEGER(0, {\n\t\tmenu: {\n\t\t\tentries: HIERARCHY_MODES.map((m, i) => {\n\t\t\t\treturn {name: m, value: i};\n\t\t\t}),\n\t\t},\n\t});\n\tlevels = ParamConfig.INTEGER(1, {range: [0, 5]});\n}\nconst ParamsConfig = new HierarchySopParamsConfig();\n\nexport class HierarchySopNode extends TypedSopNode<HierarchySopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'hierarchy';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to add or remove parents to/from'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\t// const group_wrapper = new CoreGroup(group);\n\n\t\tif (HIERARCHY_MODES[this.pv.mode] == HierarchyMode.ADD_PARENT) {\n\t\t\tconst objects = this._add_parent_to_core_group(core_group);\n\t\t\tthis.set_objects(objects);\n\t\t} else {\n\t\t\tconst objects = this._remove_parent_from_core_group(core_group);\n\t\t\tthis.set_objects(objects);\n\t\t}\n\t}\n\n\tprivate _add_parent_to_core_group(core_group: CoreGroup): THREE.Object3D[] {\n\t\tif (this.pv.levels == 0) {\n\t\t\treturn core_group.objects();\n\t\t} else {\n\t\t\tconst new_objects: Object3D[] = [];\n\t\t\tlet new_object;\n\t\t\tfor (let object of core_group.objects()) {\n\t\t\t\tnew_object = this._add_parent_to_object(object);\n\t\t\t\tif (new_object) {\n\t\t\t\t\tnew_objects.push(new_object);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new_objects;\n\t\t}\n\t}\n\tprivate _add_parent_to_object(object: THREE.Object3D): THREE.Object3D {\n\t\tlet new_parent = new THREE.Group();\n\n\t\t// while(child = object.children[0]){\n\t\tnew_parent.add(object);\n\t\t// }\n\n\t\tif (this.pv.levels > 0) {\n\t\t\tfor (let i = 0; i < this.pv.levels - 1; i++) {\n\t\t\t\t// for (let i of lodash_range(this.pv.levels - 1)) {\n\t\t\t\tnew_parent = this._add_new_parent(new_parent);\n\t\t\t}\n\t\t}\n\n\t\treturn new_parent;\n\t}\n\n\tprivate _add_new_parent(object: THREE.Object3D): THREE.Group {\n\t\tconst new_parent2 = new THREE.Group();\n\t\tnew_parent2.add(object);\n\t\treturn new_parent2;\n\t}\n\n\tprivate _remove_parent_from_core_group(core_group: CoreGroup): THREE.Object3D[] {\n\t\tif (this.pv.levels == 0) {\n\t\t\treturn core_group.objects();\n\t\t} else {\n\t\t\tconst new_objects: Object3D[] = [];\n\t\t\tfor (let object of core_group.objects()) {\n\t\t\t\tconst new_children = this._remove_parent_from_object(object);\n\t\t\t\tfor (let new_child of new_children) {\n\t\t\t\t\tnew_objects.push(new_child);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new_objects;\n\t\t}\n\t}\n\n\tprivate _remove_parent_from_object(object: THREE.Object3D): THREE.Object3D[] {\n\t\tlet current_children = object.children;\n\n\t\tfor (let i = 0; i < this.pv.levels - 1; i++) {\n\t\t\tcurrent_children = this._get_children_from_objects(current_children);\n\t\t}\n\n\t\treturn current_children;\n\t}\n\n\tprivate _get_children_from_objects(objects: THREE.Object3D[]): THREE.Object3D[] {\n\t\tlet object;\n\t\tconst children: Object3D[] = [];\n\t\twhile ((object = objects.pop())) {\n\t\t\tif (object.children) {\n\t\t\t\tfor (let child of object.children) {\n\t\t\t\t\tchildren.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreInstancer} from '../../../core/geometry/Instancer';\nimport {CoreMaterial} from '../../../core/geometry/Material';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {GlobalsGeometryHandler} from '../gl/code/globals/Geometry';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {BaseBuilderMatNodeType} from '../mat/_BaseBuilder';\nimport {BaseMatNodeType} from '../mat/_Base';\nimport {Material} from 'three/src/materials/Material';\nimport {Mesh} from 'three/src/objects/Mesh';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {MaterialsObjNode} from '../obj/Materials';\nimport {ObjectTypeByObject} from '../../../core/geometry/Constant';\nclass InstanceSopParamsConfig extends NodeParamsConfig {\n\tattributes_to_copy = ParamConfig.STRING('instance*');\n\tapply_material = ParamConfig.BOOLEAN(1);\n\tmaterial = ParamConfig.OPERATOR_PATH('', {\n\t\tvisible_if: {apply_material: 1},\n\t\tnode_selection: {\n\t\t\tcontext: NodeContext.MAT,\n\t\t},\n\t\tdependent_on_found_node: false,\n\t});\n}\nconst ParamsConfig = new InstanceSopParamsConfig();\n\nexport class InstanceSopNode extends TypedSopNode<InstanceSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'instance';\n\t}\n\n\tprivate _globals_handler: GlobalsGeometryHandler | undefined;\n\tprivate _geometry: BufferGeometry | undefined;\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to be instanciated', 'points to instance to'];\n\t}\n\n\tprivate _on_create_bound = this._on_create.bind(this);\n\tinitialize_node() {\n\t\tsuper.initialize_node();\n\n\t\tthis.lifecycle.add_on_create_hook(this._on_create_bound);\n\n\t\tthis.io.inputs.set_count(2);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.ALWAYS, InputCloneMode.NEVER]);\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group_to_instance = input_contents[0];\n\t\tthis._geometry = undefined;\n\n\t\tconst object_to_instance = core_group_to_instance.objects()[0];\n\t\tif (object_to_instance) {\n\t\t\tconst geometry_to_instance = object_to_instance.geometry;\n\t\t\tif (geometry_to_instance) {\n\t\t\t\tconst core_group = input_contents[1];\n\t\t\t\tthis._create_instance(geometry_to_instance, core_group);\n\t\t\t}\n\t\t}\n\n\t\t// const type = object_to_instance.constructor.name;\n\t\tif (this._geometry) {\n\t\t\tconst type = ObjectTypeByObject(object_to_instance);\n\t\t\tif (type) {\n\t\t\t\tconst object = this.create_object(this._geometry, type);\n\t\t\t\t// object.customDepthMaterial = this._create_depth_material();\n\n\t\t\t\tif (this.pv.apply_material) {\n\t\t\t\t\tawait this._apply_material(object as Mesh);\n\t\t\t\t}\n\n\t\t\t\tthis.set_object(object);\n\t\t\t} else {\n\t\t\t\tthis.cook_controller.end_cook();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.cook_controller.end_cook();\n\t\t}\n\t}\n\n\tasync _apply_material(object: Mesh) {\n\t\tconst found_node = this.p.material.found_node();\n\t\tif (found_node) {\n\t\t\tif (found_node.node_context() == NodeContext.MAT) {\n\t\t\t\tconst material_node = found_node as BaseMatNodeType;\n\t\t\t\tthis._globals_handler = this._globals_handler || new GlobalsGeometryHandler();\n\t\t\t\tconst mat_builder_node = material_node as BaseBuilderMatNodeType;\n\t\t\t\tif (mat_builder_node.assembler_controller) {\n\t\t\t\t\tmat_builder_node.assembler_controller.set_assembler_globals_handler(this._globals_handler);\n\t\t\t\t}\n\n\t\t\t\tconst container = await material_node.request_container();\n\t\t\t\tconst material: Material = container.material();\n\t\t\t\tif (material) {\n\t\t\t\t\tobject.material = material;\n\t\t\t\t\tCoreMaterial.apply_custom_materials(object, material);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.states.error.set('found node is not a material');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.states.error.set('material node invalid');\n\t\t}\n\t}\n\n\t_create_instance(geometry_to_instance: BufferGeometry, template_core_group: CoreGroup) {\n\t\tthis._geometry = CoreInstancer.create_instance_buffer_geo(\n\t\t\tgeometry_to_instance,\n\t\t\ttemplate_core_group,\n\t\t\tthis.pv.attributes_to_copy\n\t\t);\n\t}\n\n\tprivate _on_create() {\n\t\tconst root = this.scene.root;\n\t\tconst mat_type = 'materials';\n\t\tconst mesh_lambert_builder_type = 'mesh_lambert_builder';\n\t\tconst mat_name = 'MAT';\n\t\tconst mesh_lambert_mat_name = 'mesh_lambert_builder1';\n\t\tlet MAT: MaterialsObjNode | undefined;\n\t\tconst node_with_mat_name = root.node(mat_name);\n\t\tif (node_with_mat_name && node_with_mat_name.type == mat_type) {\n\t\t\tMAT = node_with_mat_name as MaterialsObjNode;\n\t\t} else {\n\t\t\tMAT = root.create_node('materials');\n\t\t\tMAT.set_name(mat_name);\n\t\t}\n\n\t\tconst create_mesh_lambert = (MAT: MaterialsObjNode, mesh_lambert_mat_name: string) => {\n\t\t\tconst mat_node = MAT.create_node(mesh_lambert_builder_type);\n\t\t\tmat_node.set_name(mesh_lambert_mat_name);\n\n\t\t\tconst instance_transform1 = mat_node.create_node('instance_transform');\n\t\t\tlet output1 = mat_node.node('output1');\n\t\t\tif (!output1) {\n\t\t\t\toutput1 = mat_node.create_node('output');\n\t\t\t}\n\t\t\toutput1.set_input('position', instance_transform1, 'position');\n\t\t\toutput1.set_input('normal', instance_transform1, 'normal');\n\n\t\t\treturn mat_node;\n\t\t};\n\t\tconst mesh_lambert_mat = MAT.node(mesh_lambert_mat_name) || create_mesh_lambert(MAT, mesh_lambert_mat_name);\n\n\t\tthis.p.material.set(mesh_lambert_mat.full_path());\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\nconst THREE = {Vector3};\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreMath} from '../../../core/math/_Module';\nimport {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nclass JitterSopParamsConfig extends NodeParamsConfig {\n\tamount = ParamConfig.FLOAT(1);\n\tseed = ParamConfig.INTEGER(1, {range: [0, 100]});\n}\nconst ParamsConfig = new JitterSopParamsConfig();\n\nexport class JitterSopNode extends TypedSopNode<JitterSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'jitter';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to jitter points of'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tcore_group.points().forEach((point, i) => {\n\t\t\t// TODO: replace by a pseudo random\n\t\t\tconst offset = new THREE.Vector3(\n\t\t\t\t2 * (CoreMath.rand(i * 75 + 764 + this.pv.seed) - 0.5),\n\t\t\t\t2 * (CoreMath.rand(i * 5678 + 3653 + this.pv.seed) - 0.5),\n\t\t\t\t2 * (CoreMath.rand(i * 657 + 48464 + this.pv.seed) - 0.5)\n\t\t\t);\n\t\t\toffset.normalize();\n\t\t\toffset.multiplyScalar(this.pv.amount);\n\n\t\t\tconst new_position = point\n\t\t\t\t.position()\n\t\t\t\t.clone()\n\t\t\t\t.add(offset);\n\t\t\tpoint.set_position(new_position);\n\t\t});\n\n\t\tthis.set_core_group(core_group);\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nclass LayerSopParamsConfig extends NodeParamsConfig {\n\tlayer = ParamConfig.INTEGER(0, {\n\t\trange: [0, 31],\n\t\trange_locked: [true, true],\n\t});\n}\nconst ParamsConfig = new LayerSopParamsConfig();\n\nexport class LayerSopNode extends TypedSopNode<LayerSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'layer';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['objects to change layers of'];\n\t}\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tfor (let object of core_group.objects()) {\n\t\t\tobject.layers.set(this.pv.layer);\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n}\n","import {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport lodash_times from 'lodash/times';\n\nimport {TypedSopNode} from './_Base';\nimport {CoreConstant} from '../../../core/geometry/Constant';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass LineSopParamsConfig extends NodeParamsConfig {\n\tlength = ParamConfig.FLOAT(1, {range: [0, 10]});\n\tpoints_count = ParamConfig.INTEGER(1, {\n\t\trange: [2, 100],\n\t\trange_locked: [true, false],\n\t});\n\torigin = ParamConfig.VECTOR3([0, 0, 0]);\n\tdirection = ParamConfig.VECTOR3([0, 1, 0]);\n}\nconst ParamsConfig = new LineSopParamsConfig();\n\nexport class LineSopNode extends TypedSopNode<LineSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'line';\n\t}\n\n\tinitialize_node() {}\n\n\tcook() {\n\t\tconst points_count = Math.max(2, this.pv.points_count);\n\n\t\tconst positions: number[] = new Array(points_count * 3);\n\t\tconst indices: number[] = new Array(points_count);\n\n\t\tconst last_pt = this.pv.direction\n\t\t\t.clone()\n\t\t\t.normalize()\n\t\t\t.multiplyScalar(this.pv.length);\n\n\t\tlodash_times(points_count, (i) => {\n\t\t\tconst i_n = i / (points_count - 1);\n\t\t\tconst point = last_pt.clone().multiplyScalar(i_n);\n\t\t\tpoint.add(this.pv.origin);\n\t\t\tpoint.toArray(positions, i * 3);\n\n\t\t\tif (i > 0) {\n\t\t\t\tindices[(i - 1) * 2] = i - 1;\n\t\t\t\tindices[(i - 1) * 2 + 1] = i;\n\t\t\t}\n\t\t});\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\tgeometry.setIndex(indices);\n\t\tthis.set_geometry(geometry, CoreConstant.OBJECT_TYPE.LINE_SEGMENTS);\n\t}\n}\n","import {TypedSopNode} from './_Base';\n// import {BaseNodeMat} from '../Mat/_Base'\n\nimport {CoreMaterial} from '../../../core/geometry/Material';\nimport {GlobalsGeometryHandler} from '../gl/code/globals/Geometry';\n\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {BaseMatNodeType} from '../mat/_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {Material} from 'three/src/materials/Material';\nimport {Object3D} from 'three/src/core/Object3D';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {BaseBuilderMatNodeType} from '../mat/_BaseBuilder';\nclass MaterialSopParamsConfig extends NodeParamsConfig {\n\tgroup = ParamConfig.STRING('');\n\tmaterial = ParamConfig.OPERATOR_PATH('/MAT/mesh_standard1', {\n\t\tnode_selection: {\n\t\t\tcontext: NodeContext.MAT,\n\t\t},\n\t\tdependent_on_found_node: false,\n\t});\n\tapply_to_children = ParamConfig.BOOLEAN(1);\n}\nconst ParamsConfig = new MaterialSopParamsConfig();\n\nexport class MaterialSopNode extends TypedSopNode<MaterialSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'material';\n\t}\n\n\t_param_material: BaseMatNodeType | undefined;\n\t_globals_handler: GlobalsGeometryHandler = new GlobalsGeometryHandler();\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['objects to assign material to'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\t// TODO: optimize by not fetching the material node everytime\n\t// and maybe have a method in all operator_path params to do that quickly\n\t// TODO: does this apply the material to only 1 node?\n\tasync cook(core_groups: CoreGroup[]) {\n\t\t// let container = input_containers[0];\n\t\t// const group =\tcontainer.group(); // {clone: this.do_clone_inputs()})\n\t\tconst core_group = core_groups[0];\n\n\t\tconst node = this.p.material.found_node();\n\t\tif (node) {\n\t\t\tif (node.node_context() != NodeContext.MAT) {\n\t\t\t\tthis.states.error.set('node is not a material');\n\t\t\t} else {\n\t\t\t\tconst material_node = node as BaseMatNodeType;\n\t\t\t\tconst material = material_node.material;\n\t\t\t\tif (material instanceof ShaderMaterial) {\n\t\t\t\t\tconst material_builder_node = node as BaseBuilderMatNodeType;\n\t\t\t\t\tmaterial_builder_node.assembler_controller.set_assembler_globals_handler(this._globals_handler);\n\t\t\t\t}\n\n\t\t\t\tawait material_node.request_container();\n\t\t\t\tif (material) {\n\t\t\t\t\tfor (let object of core_group.objects_from_group(this.pv.group)) {\n\t\t\t\t\t\tif (this.pv.apply_to_children) {\n\t\t\t\t\t\t\tobject.traverse((grand_child) => {\n\t\t\t\t\t\t\t\tthis.apply_material(grand_child, material);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.apply_material(object, material);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.set_core_group(core_group);\n\t\t\t\t} else {\n\t\t\t\t\tthis.states.error.set(`material invalid. (error: '${material_node.states.error.message}')`);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.states.error.set(`node '${this.pv.material}' not found`);\n\t\t}\n\t}\n\n\tapply_material(object: Object3D, material: Material) {\n\t\tconst object_with_material = object as Mesh;\n\t\t// if (object.material != null) {\n\t\t// \tobject.material.dispose();\n\t\t// }\n\t\t// TODO: do I really need to clone this material?\n\t\t// does it get cloned when a node fetches the container?\n\t\t// I may only need to clone it for the copy SOP\n\t\tobject_with_material.material = material;\n\t\tCoreMaterial.apply_custom_materials(object, material);\n\t}\n}\n","// import lodash_times from 'lodash/times';\n// import lodash_each from 'lodash/each';\n// import lodash_difference from 'lodash/difference';\n// import lodash_keys from 'lodash/keys';\n// import {Object3D} from 'three/src/core/Object3D';\n// import {Group} from 'three/src/objects/Group';\n// import {BufferAttribute} from 'three/src/core/BufferAttribute';\n// const THREE = {BufferAttribute, Group, Object3D};\nimport {TypedSopNode} from './_Base';\n// import {ParamType} from '../../../Engine/Param/_Module';\n\n// import {CoreGroup} from '../../../Core/Geometry/Group';\nimport {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {CoreGroup, Object3DWithGeometry} from '../../../core/geometry/Group';\nimport {Object3D} from 'three/src/core/Object3D';\n// import {CoreConstant} from '../../../Core/Geometry/Constant';\nimport {ObjectType} from '../../../core/geometry/Constant';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {Points} from 'three/src/objects/Points';\ntype ObjectsByType = {[key in ObjectType]: Object3DWithGeometry[]};\ntype ObjectTypes = Array<ObjectType>;\n\nconst INPUT_NAME = 'geometry to merge';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass MergeSopParamsConfig extends NodeParamsConfig {\n\tcompact = ParamConfig.BOOLEAN(1);\n}\nconst ParamsConfig = new MergeSopParamsConfig();\n\nexport class MergeSopNode extends TypedSopNode<MergeSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'merge';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn [INPUT_NAME, INPUT_NAME, INPUT_NAME, INPUT_NAME];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1, 4);\n\n\t\tthis.ui_data.set_width(100);\n\t\t// this.ui_data.set_icon('compress-arrows-alt');\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tlet all_objects: Object3DWithGeometry[] = []; //new Group()\n\t\tfor (let input_core_group of input_contents) {\n\t\t\tif (input_core_group) {\n\t\t\t\tconst objects = input_core_group.objects();\n\t\t\t\tfor (let object of objects) {\n\t\t\t\t\tobject.traverse((child) => {\n\t\t\t\t\t\tall_objects.push(child as Object3DWithGeometry);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.pv.compact) {\n\t\t\tall_objects = this._make_compact(all_objects);\n\t\t}\n\t\tthis.set_objects(all_objects);\n\t}\n\n\t_make_compact(all_objects: Object3DWithGeometry[]): Object3DWithGeometry[] {\n\t\tconst objects_by_type: ObjectsByType = {\n\t\t\t[ObjectType.MESH]: [],\n\t\t\t[ObjectType.POINTS]: [],\n\t\t\t[ObjectType.LINE_SEGMENTS]: [],\n\t\t};\n\t\tconst merged_objects: Object3DWithGeometry[] = [];\n\n\t\tfor (let object of all_objects) {\n\t\t\tobject.traverse((object3d: Object3D) => {\n\t\t\t\tconst object = object3d as Object3DWithGeometry;\n\t\t\t\tif (object.geometry) {\n\t\t\t\t\t// const type = child.constructor.name;\n\t\t\t\t\tif ((object as Mesh).isMesh) {\n\t\t\t\t\t\tobjects_by_type[ObjectType.MESH].push(object);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ((object as LineSegments).isLineSegments) {\n\t\t\t\t\t\t\tobjects_by_type[ObjectType.LINE_SEGMENTS].push(object);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ((object as Points).isPoints) {\n\t\t\t\t\t\t\t\tobjects_by_type[ObjectType.POINTS].push(object);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (let type of Object.keys(objects_by_type) as ObjectTypes) {\n\t\t\tconst objects = objects_by_type[type];\n\n\t\t\tconst geometries = [];\n\t\t\tfor (let object of objects) {\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tgeometry.applyMatrix4(object.matrix);\n\t\t\t\tgeometries.push(geometry);\n\t\t\t}\n\n\t\t\t// TODO: test that this works with geometries with same attributes\n\t\t\tconst merged_geometry = CoreGeometry.merge_geometries(geometries);\n\t\t\tif (merged_geometry) {\n\t\t\t\tconst object = this.create_object(merged_geometry, type);\n\t\t\t\tmerged_objects.push(object);\n\t\t\t}\n\n\t\t\t// objects.forEach( object=> {\n\t\t\t// \tif (object.parent != null) {\n\t\t\t// \t\tobject.parent.remove(object);\n\t\t\t// \t}\n\t\t\t// \tif (object.geometry != null) {\n\t\t\t// \t\tobject.geometry.dispose();\n\t\t\t// \t}\n\t\t\t// \t(object.material != null ? object.material.dispose() : undefined);\n\t\t\t// });\n\t\t}\n\t\treturn merged_objects;\n\t}\n}\n\n// _add_missing_attributes: (geo0, geo1)->\n// \tgeo0_attribute_names = lodash_keys(geo0.attributes)\n// \tgeo1_attribute_names = lodash_keys(geo1.attributes)\n\n// \tattributes_not_in_geo0 = lodash_difference(geo1_attribute_names, geo0_attribute_names)\n// \tattributes_not_in_geo1 = lodash_difference(geo0_attribute_names, geo1_attribute_names)\n\n// \tlodash_each attributes_not_in_geo0, (attribute_not_in_geo0)=>\n// \t\tthis._add_attribute(geo0, attribute_not_in_geo0, geo1.attributes[attribute_not_in_geo0])\n// \tlodash_each attributes_not_in_geo1, (attribute_not_in_geo1)=>\n// \t\tthis._add_attribute(geo1, attribute_not_in_geo1, geo0.attributes[attribute_not_in_geo1])\n\n// _add_attribute: (geo, attrib_name, attribute_template)->\n\n// \titem_size = attribute_template['itemSize']\n// \tnormalized = attribute_template['normalized']\n// \tpoints_count = geo.getAttribute('position').array.length / 3\n\n// \traw_values = []\n// \tlodash_times points_count, (i)->\n// \t\tlodash_times item_size, (j)->\n// \t\t\traw_values.push(0)\n\n// \tvalues = new Float32Array(raw_values)\n// \tgeo.setAttribute( attrib_name, new BufferAttribute( values, item_size, normalized) )\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {CoreMath} from '../../../core/math/_Module';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {TypeAssert} from '../../poly/Assert';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {SimplexNoise} from '../../../../modules/three/examples/jsm/math/SimplexNoise';\n\nenum Operation {\n\tADD = 'add',\n\tSET = 'set',\n\tMULT = 'mult',\n\tSUBSTRACT = 'substract',\n\tDIVIDE = 'divide',\n}\ntype Operations = Array<Operation>;\nconst Operations: Operations = [Operation.ADD, Operation.SET, Operation.MULT, Operation.SUBSTRACT, Operation.DIVIDE];\n\n// const COMPONENT_OFFSETS = [\n// \tnew Vector3(545, 125454, 2142),\n// \tnew Vector3(425, 25746, 95242),\n// \tnew Vector3(765132, 21, 9245),\n// ]\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass NoiseSopParamsConfig extends NodeParamsConfig {\n\tamount = ParamConfig.FLOAT(1);\n\tfreq = ParamConfig.VECTOR3([1, 1, 1]);\n\toffset = ParamConfig.VECTOR3([0, 0, 0]);\n\toctaves = ParamConfig.INTEGER(3, {\n\t\trange: [1, 8],\n\t\trange_locked: [true, false],\n\t});\n\tamp_attenuation = ParamConfig.FLOAT(0.5, {range: [0, 1]});\n\tfreq_increase = ParamConfig.FLOAT(2, {range: [0, 10]});\n\tseed = ParamConfig.INTEGER(0, {range: [0, 100]});\n\tseparator = ParamConfig.SEPARATOR();\n\tuse_normals = ParamConfig.BOOLEAN(0);\n\tattrib_name = ParamConfig.STRING('position');\n\toperation = ParamConfig.INTEGER(Operations.indexOf(Operation.ADD), {\n\t\tmenu: {\n\t\t\tentries: Operations.map((operation) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: operation,\n\t\t\t\t\tvalue: Operations.indexOf(operation),\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\tcompute_normals = ParamConfig.BOOLEAN(1);\n}\nconst ParamsConfig = new NoiseSopParamsConfig();\n\nexport class NoiseSopNode extends TypedSopNode<NoiseSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'noise';\n\t}\n\n\t// _param_amount: number;\n\t// _param_offset: Vector3;\n\t// _param_freq: Vector3;\n\t// _param_seed: number;\n\t// _param_use_normals: boolean;\n\t// _param_attrib_name: string;\n\t// _param_operation: number;\n\t// _param_compute_normals: boolean;\n\n\tprivate _simplex_by_seed: Map<number, SimplexNoise> = new Map();\n\n\tprivate _rest_core_group_timestamp: number | undefined;\n\tprivate _rest_points: CorePoint[] = [];\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to add noise to', 'rest geometry'];\n\t}\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1, 2);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE, InputCloneMode.NEVER]);\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tconst core_group_rest = input_contents[1];\n\n\t\tconst dest_points = core_group.points();\n\t\tif (core_group_rest) {\n\t\t\tif (\n\t\t\t\tthis._rest_core_group_timestamp == null ||\n\t\t\t\tthis._rest_core_group_timestamp != core_group_rest.timestamp()\n\t\t\t) {\n\t\t\t\tthis._rest_points = core_group_rest.points();\n\t\t\t\tthis._rest_core_group_timestamp = core_group_rest.timestamp();\n\t\t\t}\n\t\t}\n\n\t\t// const {SimplexNoise} = await import(`three/examples/jsm/math/SimplexNoise`)\n\t\tconst simplex = this._get_simplex();\n\n\t\tconst use_normals = this.pv.use_normals && core_group.has_attrib('normal');\n\t\tconst target_attrib_size = core_group.attrib_size(this.pv.attrib_name);\n\n\t\tfor (let i = 0; i < dest_points.length; i++) {\n\t\t\tconst dest_point = dest_points[i];\n\t\t\tlet rest_point = core_group_rest ? this._rest_points[i] : dest_point;\n\t\t\tconst current_attrib_value = rest_point.attrib_value(this.pv.attrib_name);\n\t\t\tconst pos = rest_point\n\t\t\t\t.position()\n\t\t\t\t.add(this.pv.offset)\n\t\t\t\t.multiply(this.pv.freq);\n\n\t\t\tlet noise_value = (() => {\n\t\t\t\tif (use_normals) {\n\t\t\t\t\tconst normal = rest_point.attrib_value('normal');\n\t\t\t\t\tconst noise = this.pv.amount * this._fbm(simplex, pos.x, pos.y, pos.z);\n\t\t\t\t\treturn normal.clone().multiplyScalar(noise);\n\t\t\t\t\t//vertex.add(noise_vector)\n\t\t\t\t} else {\n\t\t\t\t\treturn new Vector3(\n\t\t\t\t\t\tthis.pv.amount * this._fbm(simplex, pos.x + 545, pos.y + 125454, pos.z + 2142),\n\t\t\t\t\t\tthis.pv.amount * this._fbm(simplex, pos.x - 425, pos.y - 25746, pos.z + 95242),\n\t\t\t\t\t\tthis.pv.amount * this._fbm(simplex, pos.x + 765132, pos.y + 21, pos.z - 9245)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tnoise_value = (() => {\n\t\t\t\tswitch (target_attrib_size) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn noise_value.x;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn new Vector2(noise_value.x, noise_value.y);\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturn noise_value;\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst new_attrib_value = (() => {\n\t\t\t\tconst operation = Operations[this.pv.operation];\n\t\t\t\tswitch (target_attrib_size) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tswitch (operation) {\n\t\t\t\t\t\t\tcase Operation.ADD:\n\t\t\t\t\t\t\t\treturn current_attrib_value + noise_value;\n\t\t\t\t\t\t\tcase Operation.SET:\n\t\t\t\t\t\t\t\treturn noise_value;\n\t\t\t\t\t\t\tcase Operation.MULT:\n\t\t\t\t\t\t\t\treturn current_attrib_value * noise_value;\n\t\t\t\t\t\t\tcase Operation.DIVIDE:\n\t\t\t\t\t\t\t\treturn current_attrib_value / noise_value;\n\t\t\t\t\t\t\tcase Operation.SUBSTRACT:\n\t\t\t\t\t\t\t\treturn current_attrib_value - noise_value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tTypeAssert.unreachable(operation);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tswitch (operation) {\n\t\t\t\t\t\t\tcase Operation.ADD:\n\t\t\t\t\t\t\t\treturn current_attrib_value.add(noise_value);\n\t\t\t\t\t\t\tcase Operation.SET:\n\t\t\t\t\t\t\t\treturn noise_value;\n\t\t\t\t\t\t\tcase Operation.MULT:\n\t\t\t\t\t\t\t\treturn current_attrib_value.multiply(noise_value);\n\t\t\t\t\t\t\tcase Operation.DIVIDE:\n\t\t\t\t\t\t\t\treturn current_attrib_value.divide(noise_value);\n\t\t\t\t\t\t\tcase Operation.SUBSTRACT:\n\t\t\t\t\t\t\t\treturn current_attrib_value.sub(noise_value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tTypeAssert.unreachable(operation);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tdest_point.set_attrib_value(this.pv.attrib_name, new_attrib_value);\n\t\t}\n\n\t\tif (!this.io.inputs.input_cloned(0)) {\n\t\t\tfor (let geometry of core_group.geometries()) {\n\t\t\t\t(geometry.getAttribute(this.pv.attrib_name) as BufferAttribute).needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.pv.compute_normals) {\n\t\t\tcore_group.compute_vertex_normals();\n\t\t}\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tprivate _fbm(simplex: SimplexNoise, x: number, y: number, z: number): number {\n\t\tlet value = 0.0;\n\t\tlet amplitude = 1.0;\n\t\tfor (let i = 0; i < this.pv.octaves; i++) {\n\t\t\tvalue += amplitude * simplex.noise3d(x, y, z);\n\t\t\tx *= this.pv.freq_increase;\n\t\t\ty *= this.pv.freq_increase;\n\t\t\tz *= this.pv.freq_increase;\n\t\t\tamplitude *= this.pv.amp_attenuation;\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate _get_simplex(): SimplexNoise {\n\t\tconst simplex = this._simplex_by_seed.get(this.pv.seed);\n\t\tif (simplex) {\n\t\t\treturn simplex;\n\t\t} else {\n\t\t\tconst simplex = this._create_simplex();\n\t\t\tthis._simplex_by_seed.set(this.pv.seed, simplex);\n\t\t\treturn simplex;\n\t\t}\n\t}\n\tprivate _create_simplex(): SimplexNoise {\n\t\tconst seed = this.pv.seed;\n\t\tconst random_generator = {\n\t\t\trandom: function() {\n\t\t\t\treturn CoreMath.rand_float(seed);\n\t\t\t},\n\t\t};\n\t\tconst simplex = new SimplexNoise(random_generator);\n\t\t// for (let key of Object.keys(this._simplex_by_seed)) {\n\t\tthis._simplex_by_seed.delete(seed);\n\t\t// }\n\t\treturn simplex;\n\t}\n}\n","// Ported from Stefan Gustavson's java implementation\n// http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf\n// Read Stefan's excellent paper for details on how this code works.\n//\n// Sean McCullough banksean@gmail.com\n//\n// Added 4D noise\n// Joshua Koo zz85nus@gmail.com\n\n/**\n * You can pass in a random number generator object if you like.\n * It is assumed to have a random() method.\n */\nvar SimplexNoise = function ( r ) {\n\n\tif ( r == undefined ) r = Math;\n\tthis.grad3 = [[ 1, 1, 0 ], [ - 1, 1, 0 ], [ 1, - 1, 0 ], [ - 1, - 1, 0 ],\n\t\t[ 1, 0, 1 ], [ - 1, 0, 1 ], [ 1, 0, - 1 ], [ - 1, 0, - 1 ],\n\t\t[ 0, 1, 1 ], [ 0, - 1, 1 ], [ 0, 1, - 1 ], [ 0, - 1, - 1 ]];\n\n\tthis.grad4 = [[ 0, 1, 1, 1 ], [ 0, 1, 1, - 1 ], [ 0, 1, - 1, 1 ], [ 0, 1, - 1, - 1 ],\n\t     [ 0, - 1, 1, 1 ], [ 0, - 1, 1, - 1 ], [ 0, - 1, - 1, 1 ], [ 0, - 1, - 1, - 1 ],\n\t     [ 1, 0, 1, 1 ], [ 1, 0, 1, - 1 ], [ 1, 0, - 1, 1 ], [ 1, 0, - 1, - 1 ],\n\t     [ - 1, 0, 1, 1 ], [ - 1, 0, 1, - 1 ], [ - 1, 0, - 1, 1 ], [ - 1, 0, - 1, - 1 ],\n\t     [ 1, 1, 0, 1 ], [ 1, 1, 0, - 1 ], [ 1, - 1, 0, 1 ], [ 1, - 1, 0, - 1 ],\n\t     [ - 1, 1, 0, 1 ], [ - 1, 1, 0, - 1 ], [ - 1, - 1, 0, 1 ], [ - 1, - 1, 0, - 1 ],\n\t     [ 1, 1, 1, 0 ], [ 1, 1, - 1, 0 ], [ 1, - 1, 1, 0 ], [ 1, - 1, - 1, 0 ],\n\t     [ - 1, 1, 1, 0 ], [ - 1, 1, - 1, 0 ], [ - 1, - 1, 1, 0 ], [ - 1, - 1, - 1, 0 ]];\n\n\tthis.p = [];\n\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\tthis.p[ i ] = Math.floor( r.random() * 256 );\n\n\t}\n\t// To remove the need for index wrapping, double the permutation table length\n\tthis.perm = [];\n\tfor ( var i = 0; i < 512; i ++ ) {\n\n\t\tthis.perm[ i ] = this.p[ i & 255 ];\n\n\t}\n\n\t// A lookup table to traverse the simplex around a given point in 4D.\n\t// Details can be found where this table is used, in the 4D noise method.\n\tthis.simplex = [\n\t\t[ 0, 1, 2, 3 ], [ 0, 1, 3, 2 ], [ 0, 0, 0, 0 ], [ 0, 2, 3, 1 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 1, 2, 3, 0 ],\n\t\t[ 0, 2, 1, 3 ], [ 0, 0, 0, 0 ], [ 0, 3, 1, 2 ], [ 0, 3, 2, 1 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 1, 3, 2, 0 ],\n\t\t[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],\n\t\t[ 1, 2, 0, 3 ], [ 0, 0, 0, 0 ], [ 1, 3, 0, 2 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 2, 3, 0, 1 ], [ 2, 3, 1, 0 ],\n\t\t[ 1, 0, 2, 3 ], [ 1, 0, 3, 2 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 2, 0, 3, 1 ], [ 0, 0, 0, 0 ], [ 2, 1, 3, 0 ],\n\t\t[ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ],\n\t\t[ 2, 0, 1, 3 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 3, 0, 1, 2 ], [ 3, 0, 2, 1 ], [ 0, 0, 0, 0 ], [ 3, 1, 2, 0 ],\n\t\t[ 2, 1, 0, 3 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ], [ 3, 1, 0, 2 ], [ 0, 0, 0, 0 ], [ 3, 2, 0, 1 ], [ 3, 2, 1, 0 ]];\n\n};\n\nSimplexNoise.prototype.dot = function ( g, x, y ) {\n\n\treturn g[ 0 ] * x + g[ 1 ] * y;\n\n};\n\nSimplexNoise.prototype.dot3 = function ( g, x, y, z ) {\n\n\treturn g[ 0 ] * x + g[ 1 ] * y + g[ 2 ] * z;\n\n};\n\nSimplexNoise.prototype.dot4 = function ( g, x, y, z, w ) {\n\n\treturn g[ 0 ] * x + g[ 1 ] * y + g[ 2 ] * z + g[ 3 ] * w;\n\n};\n\nSimplexNoise.prototype.noise = function ( xin, yin ) {\n\n\tvar n0, n1, n2; // Noise contributions from the three corners\n\t// Skew the input space to determine which simplex cell we're in\n\tvar F2 = 0.5 * ( Math.sqrt( 3.0 ) - 1.0 );\n\tvar s = ( xin + yin ) * F2; // Hairy factor for 2D\n\tvar i = Math.floor( xin + s );\n\tvar j = Math.floor( yin + s );\n\tvar G2 = ( 3.0 - Math.sqrt( 3.0 ) ) / 6.0;\n\tvar t = ( i + j ) * G2;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y) space\n\tvar Y0 = j - t;\n\tvar x0 = xin - X0; // The x,y distances from the cell origin\n\tvar y0 = yin - Y0;\n\t// For the 2D case, the simplex shape is an equilateral triangle.\n\t// Determine which simplex we are in.\n\tvar i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n\tif ( x0 > y0 ) {\n\n\t\ti1 = 1; j1 = 0;\n\n\t\t// lower triangle, XY order: (0,0)->(1,0)->(1,1)\n\n\t}\telse {\n\n\t\ti1 = 0; j1 = 1;\n\n\t} // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n\t// A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n\t// a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n\t// c = (3-sqrt(3))/6\n\tvar x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n\tvar y1 = y0 - j1 + G2;\n\tvar x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n\tvar y2 = y0 - 1.0 + 2.0 * G2;\n\t// Work out the hashed gradient indices of the three simplex corners\n\tvar ii = i & 255;\n\tvar jj = j & 255;\n\tvar gi0 = this.perm[ ii + this.perm[ jj ] ] % 12;\n\tvar gi1 = this.perm[ ii + i1 + this.perm[ jj + j1 ] ] % 12;\n\tvar gi2 = this.perm[ ii + 1 + this.perm[ jj + 1 ] ] % 12;\n\t// Calculate the contribution from the three corners\n\tvar t0 = 0.5 - x0 * x0 - y0 * y0;\n\tif ( t0 < 0 ) n0 = 0.0;\n\telse {\n\n\t\tt0 *= t0;\n\t\tn0 = t0 * t0 * this.dot( this.grad3[ gi0 ], x0, y0 ); // (x,y) of grad3 used for 2D gradient\n\n\t}\n\tvar t1 = 0.5 - x1 * x1 - y1 * y1;\n\tif ( t1 < 0 ) n1 = 0.0;\n\telse {\n\n\t\tt1 *= t1;\n\t\tn1 = t1 * t1 * this.dot( this.grad3[ gi1 ], x1, y1 );\n\n\t}\n\tvar t2 = 0.5 - x2 * x2 - y2 * y2;\n\tif ( t2 < 0 ) n2 = 0.0;\n\telse {\n\n\t\tt2 *= t2;\n\t\tn2 = t2 * t2 * this.dot( this.grad3[ gi2 ], x2, y2 );\n\n\t}\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to return values in the interval [-1,1].\n\treturn 70.0 * ( n0 + n1 + n2 );\n\n};\n\n// 3D simplex noise\nSimplexNoise.prototype.noise3d = function ( xin, yin, zin ) {\n\n\tvar n0, n1, n2, n3; // Noise contributions from the four corners\n\t// Skew the input space to determine which simplex cell we're in\n\tvar F3 = 1.0 / 3.0;\n\tvar s = ( xin + yin + zin ) * F3; // Very nice and simple skew factor for 3D\n\tvar i = Math.floor( xin + s );\n\tvar j = Math.floor( yin + s );\n\tvar k = Math.floor( zin + s );\n\tvar G3 = 1.0 / 6.0; // Very nice and simple unskew factor, too\n\tvar t = ( i + j + k ) * G3;\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n\tvar Y0 = j - t;\n\tvar Z0 = k - t;\n\tvar x0 = xin - X0; // The x,y,z distances from the cell origin\n\tvar y0 = yin - Y0;\n\tvar z0 = zin - Z0;\n\t// For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n\t// Determine which simplex we are in.\n\tvar i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n\tvar i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n\tif ( x0 >= y0 ) {\n\n\t\tif ( y0 >= z0 ) {\n\n\t\t\ti1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n\t\t\t// X Y Z order\n\n\t\t} else if ( x0 >= z0 ) {\n\n\t\t\ti1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1;\n\n\t\t\t// X Z Y order\n\n\t\t} else {\n\n\t\t\ti1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1;\n\n\t\t} // Z X Y order\n\n\t} else { // x0<y0\n\n\t\tif ( y0 < z0 ) {\n\n\t\t\ti1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1;\n\n\t\t\t// Z Y X order\n\n\t\t} else if ( x0 < z0 ) {\n\n\t\t\ti1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1;\n\n\t\t\t// Y Z X order\n\n\t\t} else {\n\n\t\t\ti1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0;\n\n\t\t} // Y X Z order\n\n\t}\n\t// A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n\t// a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n\t// a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n\t// c = 1/6.\n\tvar x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n\tvar y1 = y0 - j1 + G3;\n\tvar z1 = z0 - k1 + G3;\n\tvar x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n\tvar y2 = y0 - j2 + 2.0 * G3;\n\tvar z2 = z0 - k2 + 2.0 * G3;\n\tvar x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n\tvar y3 = y0 - 1.0 + 3.0 * G3;\n\tvar z3 = z0 - 1.0 + 3.0 * G3;\n\t// Work out the hashed gradient indices of the four simplex corners\n\tvar ii = i & 255;\n\tvar jj = j & 255;\n\tvar kk = k & 255;\n\tvar gi0 = this.perm[ ii + this.perm[ jj + this.perm[ kk ] ] ] % 12;\n\tvar gi1 = this.perm[ ii + i1 + this.perm[ jj + j1 + this.perm[ kk + k1 ] ] ] % 12;\n\tvar gi2 = this.perm[ ii + i2 + this.perm[ jj + j2 + this.perm[ kk + k2 ] ] ] % 12;\n\tvar gi3 = this.perm[ ii + 1 + this.perm[ jj + 1 + this.perm[ kk + 1 ] ] ] % 12;\n\t// Calculate the contribution from the four corners\n\tvar t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n\tif ( t0 < 0 ) n0 = 0.0;\n\telse {\n\n\t\tt0 *= t0;\n\t\tn0 = t0 * t0 * this.dot3( this.grad3[ gi0 ], x0, y0, z0 );\n\n\t}\n\tvar t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n\tif ( t1 < 0 ) n1 = 0.0;\n\telse {\n\n\t\tt1 *= t1;\n\t\tn1 = t1 * t1 * this.dot3( this.grad3[ gi1 ], x1, y1, z1 );\n\n\t}\n\tvar t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n\tif ( t2 < 0 ) n2 = 0.0;\n\telse {\n\n\t\tt2 *= t2;\n\t\tn2 = t2 * t2 * this.dot3( this.grad3[ gi2 ], x2, y2, z2 );\n\n\t}\n\tvar t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n\tif ( t3 < 0 ) n3 = 0.0;\n\telse {\n\n\t\tt3 *= t3;\n\t\tn3 = t3 * t3 * this.dot3( this.grad3[ gi3 ], x3, y3, z3 );\n\n\t}\n\t// Add contributions from each corner to get the final noise value.\n\t// The result is scaled to stay just inside [-1,1]\n\treturn 32.0 * ( n0 + n1 + n2 + n3 );\n\n};\n\n// 4D simplex noise\nSimplexNoise.prototype.noise4d = function ( x, y, z, w ) {\n\n\t// For faster and easier lookups\n\tvar grad4 = this.grad4;\n\tvar simplex = this.simplex;\n\tvar perm = this.perm;\n\n\t// The skewing and unskewing factors are hairy again for the 4D case\n\tvar F4 = ( Math.sqrt( 5.0 ) - 1.0 ) / 4.0;\n\tvar G4 = ( 5.0 - Math.sqrt( 5.0 ) ) / 20.0;\n\tvar n0, n1, n2, n3, n4; // Noise contributions from the five corners\n\t// Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n\tvar s = ( x + y + z + w ) * F4; // Factor for 4D skewing\n\tvar i = Math.floor( x + s );\n\tvar j = Math.floor( y + s );\n\tvar k = Math.floor( z + s );\n\tvar l = Math.floor( w + s );\n\tvar t = ( i + j + k + l ) * G4; // Factor for 4D unskewing\n\tvar X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n\tvar Y0 = j - t;\n\tvar Z0 = k - t;\n\tvar W0 = l - t;\n\tvar x0 = x - X0; // The x,y,z,w distances from the cell origin\n\tvar y0 = y - Y0;\n\tvar z0 = z - Z0;\n\tvar w0 = w - W0;\n\n\t// For the 4D case, the simplex is a 4D shape I won't even try to describe.\n\t// To find out which of the 24 possible simplices we're in, we need to\n\t// determine the magnitude ordering of x0, y0, z0 and w0.\n\t// The method below is a good way of finding the ordering of x,y,z,w and\n\t// then find the correct traversal order for the simplex we’re in.\n\t// First, six pair-wise comparisons are performed between each possible pair\n\t// of the four coordinates, and the results are used to add up binary bits\n\t// for an integer index.\n\tvar c1 = ( x0 > y0 ) ? 32 : 0;\n\tvar c2 = ( x0 > z0 ) ? 16 : 0;\n\tvar c3 = ( y0 > z0 ) ? 8 : 0;\n\tvar c4 = ( x0 > w0 ) ? 4 : 0;\n\tvar c5 = ( y0 > w0 ) ? 2 : 0;\n\tvar c6 = ( z0 > w0 ) ? 1 : 0;\n\tvar c = c1 + c2 + c3 + c4 + c5 + c6;\n\tvar i1, j1, k1, l1; // The integer offsets for the second simplex corner\n\tvar i2, j2, k2, l2; // The integer offsets for the third simplex corner\n\tvar i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n\t// simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n\t// Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n\t// impossible. Only the 24 indices which have non-zero entries make any sense.\n\t// We use a thresholding to set the coordinates in turn from the largest magnitude.\n\t// The number 3 in the \"simplex\" array is at the position of the largest coordinate.\n\ti1 = simplex[ c ][ 0 ] >= 3 ? 1 : 0;\n\tj1 = simplex[ c ][ 1 ] >= 3 ? 1 : 0;\n\tk1 = simplex[ c ][ 2 ] >= 3 ? 1 : 0;\n\tl1 = simplex[ c ][ 3 ] >= 3 ? 1 : 0;\n\t// The number 2 in the \"simplex\" array is at the second largest coordinate.\n\ti2 = simplex[ c ][ 0 ] >= 2 ? 1 : 0;\n\tj2 = simplex[ c ][ 1 ] >= 2 ? 1 : 0; k2 = simplex[ c ][ 2 ] >= 2 ? 1 : 0;\n\tl2 = simplex[ c ][ 3 ] >= 2 ? 1 : 0;\n\t// The number 1 in the \"simplex\" array is at the second smallest coordinate.\n\ti3 = simplex[ c ][ 0 ] >= 1 ? 1 : 0;\n\tj3 = simplex[ c ][ 1 ] >= 1 ? 1 : 0;\n\tk3 = simplex[ c ][ 2 ] >= 1 ? 1 : 0;\n\tl3 = simplex[ c ][ 3 ] >= 1 ? 1 : 0;\n\t// The fifth corner has all coordinate offsets = 1, so no need to look that up.\n\tvar x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n\tvar y1 = y0 - j1 + G4;\n\tvar z1 = z0 - k1 + G4;\n\tvar w1 = w0 - l1 + G4;\n\tvar x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n\tvar y2 = y0 - j2 + 2.0 * G4;\n\tvar z2 = z0 - k2 + 2.0 * G4;\n\tvar w2 = w0 - l2 + 2.0 * G4;\n\tvar x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n\tvar y3 = y0 - j3 + 3.0 * G4;\n\tvar z3 = z0 - k3 + 3.0 * G4;\n\tvar w3 = w0 - l3 + 3.0 * G4;\n\tvar x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n\tvar y4 = y0 - 1.0 + 4.0 * G4;\n\tvar z4 = z0 - 1.0 + 4.0 * G4;\n\tvar w4 = w0 - 1.0 + 4.0 * G4;\n\t// Work out the hashed gradient indices of the five simplex corners\n\tvar ii = i & 255;\n\tvar jj = j & 255;\n\tvar kk = k & 255;\n\tvar ll = l & 255;\n\tvar gi0 = perm[ ii + perm[ jj + perm[ kk + perm[ ll ] ] ] ] % 32;\n\tvar gi1 = perm[ ii + i1 + perm[ jj + j1 + perm[ kk + k1 + perm[ ll + l1 ] ] ] ] % 32;\n\tvar gi2 = perm[ ii + i2 + perm[ jj + j2 + perm[ kk + k2 + perm[ ll + l2 ] ] ] ] % 32;\n\tvar gi3 = perm[ ii + i3 + perm[ jj + j3 + perm[ kk + k3 + perm[ ll + l3 ] ] ] ] % 32;\n\tvar gi4 = perm[ ii + 1 + perm[ jj + 1 + perm[ kk + 1 + perm[ ll + 1 ] ] ] ] % 32;\n\t// Calculate the contribution from the five corners\n\tvar t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n\tif ( t0 < 0 ) n0 = 0.0;\n\telse {\n\n\t\tt0 *= t0;\n\t\tn0 = t0 * t0 * this.dot4( grad4[ gi0 ], x0, y0, z0, w0 );\n\n\t}\n\tvar t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n\tif ( t1 < 0 ) n1 = 0.0;\n\telse {\n\n\t\tt1 *= t1;\n\t\tn1 = t1 * t1 * this.dot4( grad4[ gi1 ], x1, y1, z1, w1 );\n\n\t}\n\tvar t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n\tif ( t2 < 0 ) n2 = 0.0;\n\telse {\n\n\t\tt2 *= t2;\n\t\tn2 = t2 * t2 * this.dot4( grad4[ gi2 ], x2, y2, z2, w2 );\n\n\t} var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n\tif ( t3 < 0 ) n3 = 0.0;\n\telse {\n\n\t\tt3 *= t3;\n\t\tn3 = t3 * t3 * this.dot4( grad4[ gi3 ], x3, y3, z3, w3 );\n\n\t}\n\tvar t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n\tif ( t4 < 0 ) n4 = 0.0;\n\telse {\n\n\t\tt4 *= t4;\n\t\tn4 = t4 * t4 * this.dot4( grad4[ gi4 ], x4, y4, z4, w4 );\n\n\t}\n\t// Sum up and scale the result to cover the range [-1,1]\n\treturn 27.0 * ( n0 + n1 + n2 + n3 + n4 );\n\n};\n\nexport { SimplexNoise };\n","// import {Vector3} from 'three/src/math/Vector3';\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\n// import {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreObject} from '../../../core/geometry/Object';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n\n// const DEFAULT_NORMAL = new Vector3(0, 0, 1);\nconst NORMAL_ATTRIB_NAME = 'normal';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass NormalsSopParamsConfig extends NodeParamsConfig {\n\tedit = ParamConfig.BOOLEAN(0);\n\tupdate_x = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {edit: 1},\n\t});\n\tx = ParamConfig.FLOAT('@N.x', {\n\t\tvisible_if: {update_x: 1, edit: 1},\n\t\texpression: {for_entities: true},\n\t});\n\tupdate_y = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {edit: 1},\n\t});\n\ty = ParamConfig.FLOAT('@N.y', {\n\t\tvisible_if: {update_y: 1, edit: 1},\n\t\texpression: {for_entities: true},\n\t});\n\tupdate_z = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {edit: 1},\n\t});\n\tz = ParamConfig.FLOAT('@N.z', {\n\t\tvisible_if: {update_z: 1, edit: 1},\n\t\texpression: {for_entities: true},\n\t});\n\n\trecompute = ParamConfig.BOOLEAN(0, {\n\t\tvisible_if: {edit: 0},\n\t});\n\tinvert = ParamConfig.BOOLEAN(0);\n}\nconst ParamsConfig = new NormalsSopParamsConfig();\n\nexport class NormalsSopNode extends TypedSopNode<NormalsSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'normals';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to update normals of'];\n\t}\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tif (this.pv.edit) {\n\t\t\tawait this._eval_expressions_for_core_group(core_group);\n\t\t} else {\n\t\t\tcore_group.compute_vertex_normals();\n\t\t}\n\t\tif (this.pv.invert) {\n\t\t\tthis._invert_normals(core_group);\n\t\t}\n\n\t\t// add attr if not present\n\t\t// for(let object of core_group.objects()){\n\t\t// \tlet geometry;\n\t\t// \tif ((geometry = object.geometry) != null) {\n\t\t// \t\tif(!geometry.getAttribute('normal')){\n\t\t// \t\t\tconst position_values = geometry.attributes['position'].array;\n\t\t// \t\t\tconst normal_values = [];\n\t\t// \t\t\tposition_values.forEach(p=> normal_values.push(0));\n\t\t// \t\t\tgeometry.setAttribute('normal', new Float32BufferAttribute(normal_values, 3));\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\t// if (this.pv.edit) {\n\t\t// \tthis._eval_expressions(core_group);\n\t\t// } else {\n\t\t// \tif(this.pv.recompute){\n\t\t// \t\tcore_group.compute_vertex_normals()\n\t\t// \t}\n\t\t// }\n\n\t\t// for(let object of core_group.objects()){\n\t\t// \tlet geometry;\n\t\t// \tif ((geometry = object.geometry) != null) {\n\n\t\t// \t\tif (this.pv.invert) {\n\t\t// \t\t\tthis._invert_normals(geometry);\n\t\t// \t\t}\n\n\t\t// \t\tif (!this.pv.edit) {\n\t\t// \t\t\tgeometry.computeVertexNormals();\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tprivate async _eval_expressions_for_core_group(core_group: CoreGroup) {\n\t\t// const points = core_group.points();\n\n\t\t// const attrib_name = 'normal';\n\t\t// for(let point of points){\n\n\t\t// \tthis.context().set_entity(point);\n\n\t\t// \tthis.param(attrib_name).eval(val=> {\n\t\t// \t\tval.normalize();\n\t\t// \t\tpoint.set_attrib_value(attrib_name, val);\n\t\t// \t});\n\t\t// }\n\t\tconst core_objects = core_group.core_objects();\n\t\tfor (let i = 0; i < core_objects.length; i++) {\n\t\t\tawait this._eval_expressions_for_core_object(core_objects[i]);\n\t\t}\n\t}\n\tprivate async _eval_expressions_for_core_object(core_object: CoreObject) {\n\t\tconst object = core_object.object();\n\t\tconst geometry = (object as Mesh).geometry as BufferGeometry;\n\t\tconst points = core_object.points();\n\n\t\tconst array = geometry.getAttribute(NORMAL_ATTRIB_NAME).array as number[];\n\n\t\t// x\n\t\tif (this.pv.update_x) {\n\t\t\tif (this.p.x.has_expression() && this.p.x.expression_controller) {\n\t\t\t\tawait this.p.x.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\t\tarray[point.index * 3 + 0] = value;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet point;\n\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tarray[point.index * 3 + 0] = this.pv.x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// y\n\t\tif (this.pv.update_y) {\n\t\t\tif (this.p.y.has_expression() && this.p.y.expression_controller) {\n\t\t\t\tawait this.p.y.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\t\tarray[point.index * 3 + 1] = value;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet point;\n\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tarray[point.index * 3 + 1] = this.pv.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// z\n\t\tif (this.pv.update_z) {\n\t\t\tif (this.p.z.has_expression() && this.p.z.expression_controller) {\n\t\t\t\tawait this.p.z.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\t\tarray[point.index * 3 + 2] = value;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet point;\n\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tarray[point.index * 3 + 2] = this.pv.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// private _create_init_normal(core_geometry: CoreGeometry) {\n\t// \tif (!core_geometry.has_attrib(NORMAL_ATTRIB_NAME)) {\n\t// \t\tcore_geometry.add_numeric_attrib(NORMAL_ATTRIB_NAME, 3, DEFAULT_NORMAL);\n\t// \t}\n\t// }\n\n\tprivate _invert_normals(core_group: CoreGroup) {\n\t\t// this._create_init_normal();\n\n\t\tfor (let core_object of core_group.core_objects()) {\n\t\t\tconst geometry = core_object.core_geometry()?.geometry();\n\t\t\tif (geometry) {\n\t\t\t\tconst normal_attrib = geometry.attributes[NORMAL_ATTRIB_NAME];\n\t\t\t\tif (normal_attrib) {\n\t\t\t\t\tconst array = normal_attrib.array as number[];\n\t\t\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\t\t\tarray[i] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// let index_attrib;\n\t\t// if ((index_attrib = geometry.getIndex()) != null) {\n\t\t// \tconst { array } = index_attrib;\n\n\t\t// \tconst faces_count = array.length / 3;\n\t\t// \tfor(let i=0; i<faces_count; i++){\n\t\t// \t\tconst tmp = array[i*3];\n\t\t// \t\tarray[i*3] = array[(i*3)+2];\n\t\t// \t\tarray[(i*3)+2] = tmp;\n\t\t// \t}\n\n\t\t// } else {\n\t\t// \tconst geometry_wrapper = new CoreGeometry(geometry);\n\t\t// \tconst points = geometry_wrapper.points();\n\n\t\t// \tconst attrib_name = 'normal';\n\t\t// \tfor(let point of points){\n\t\t// \t\tconst normal = point.normal();\n\t\t// \t\tnormal.multiplyScalar(-1);\n\t\t// \t\tpoint.set_attrib_value(attrib_name, normal);\n\t\t// \t}\n\t\t// }\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nclass NullSopParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new NullSopParamsConfig();\n\nexport class NullSopNode extends TypedSopNode<NullSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'null';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t\tthis.ui_data.set_border_radius(1000);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tif (core_group) {\n\t\t\tthis.set_core_group(core_group);\n\t\t} else {\n\t\t\tthis.set_objects([]);\n\t\t}\n\t}\n}\n","import {TypedSopNode, BaseSopNodeType} from './_Base';\nimport {NodeContext} from '../../poly/NodeContext';\n// import {CoreWalker} from '../../../Core/Walker';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {GeometryContainer} from '../../containers/Geometry';\nclass ObjectMergeSopParamsConfig extends NodeParamsConfig {\n\tgeometry = ParamConfig.OPERATOR_PATH('', {\n\t\tnode_selection: {\n\t\t\tcontext: NodeContext.SOP,\n\t\t},\n\t});\n}\nconst ParamsConfig = new ObjectMergeSopParamsConfig();\n\nexport class ObjectMergeSopNode extends TypedSopNode<ObjectMergeSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'object_merge';\n\t}\n\n\t// _param_apply_parent_transform: boolean\n\tinitialize_node() {}\n\n\tasync cook(input_containers: CoreGroup[]) {\n\t\tconst geometry_node = this.p.geometry.found_node();\n\t\tif (geometry_node) {\n\t\t\tif (geometry_node.node_context() == NodeContext.SOP) {\n\t\t\t\tconst container = await geometry_node.request_container();\n\t\t\t\tthis.import_input(geometry_node as BaseSopNodeType, container);\n\t\t\t} else {\n\t\t\t\tthis.states.error.set('found node is not a geometry');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.states.error.set(`node not found at path '${this.pv.geometry}'`);\n\t\t}\n\t}\n\n\timport_input(geometry_node: BaseSopNodeType, container: GeometryContainer) {\n\t\tlet core_group;\n\t\t// I unfortunately need to do a clone here,\n\t\t// because if 2 objectmerge nodes import the same geometry,\n\t\t// they would try to place it under 2 different geo nodes\n\t\t// which is not possible\n\t\tif ((core_group = container.core_content_cloned()) != null) {\n\t\t\t// cannot do that until i know how to make it recook\n\t\t\t// when the obj changes\n\t\t\t// if (this._param_apply_parent_transform){\n\t\t\t// \tconst matrix = geometry_node.parent().object().matrixWorld\n\t\t\t// \tgroup.children.forEach(child=>{\n\t\t\t// \t\tconsole.log(child)\n\t\t\t// \t\tconst geometry = child.geometry\n\t\t\t// \t\tif(geometry){\n\t\t\t// \t\t\tgeometry.applyMatrix(matrix)\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// }\n\n\t\t\tthis.set_core_group(core_group);\n\t\t} else {\n\t\t\tthis.states.error.set('invalid target');\n\t\t}\n\t}\n\n\t// geometry_node() {\n\t// \tif ((this._param_geometry != null) && (this._param_geometry !== '')) {\n\t// \t\tCoreWalker.find_node(this, this._param_geometry);\n\t// \t}\n\t// }\n}\n","/// <reference path=\"./types/occlusion.d.ts\" />\n// https://github.com/wwwtyro/geo-ambient-occlusion\nimport geoao from 'geo-ambient-occlusion';\n\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nconst THREE = {Float32BufferAttribute};\nimport {TypedSopNode} from './_Base';\n\n// import {CoreGroup} from '../../../Core/Geometry/Group';\nimport {CoreObject} from '../../../core/geometry/Object';\n// import {CoreGeometry} from '../../../Core/Geometry/Geometry'\n// import {CorePoint} from '../../../Core/Geometry/Point'\n\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass OcclusionSopParamsConfig extends NodeParamsConfig {\n\tattrib_name = ParamConfig.STRING('occlusion');\n\tsamples = ParamConfig.INTEGER(256, {\n\t\trange: [1, 256],\n\t\trange_locked: [true, false],\n\t});\n\tsep = ParamConfig.SEPARATOR();\n\tbuffer_resolution = ParamConfig.INTEGER(512);\n\tbias = ParamConfig.FLOAT(0.01);\n}\nconst ParamsConfig = new OcclusionSopParamsConfig();\n\nexport class OcclusionSopNode extends TypedSopNode<OcclusionSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'occlusion';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t\t// this.ui_data.set_icon('palette');\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tconst core_objects = core_group.core_objects();\n\n\t\tfor (let core_object of core_objects) {\n\t\t\tawait this._process_occlusion_on_object(core_object);\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\tprivate async _process_occlusion_on_object(core_object: CoreObject) {\n\t\tconst geometry = core_object.core_geometry()?.geometry();\n\t\tif (!geometry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst position_array = geometry.attributes.position.array;\n\t\tconst normal_array = geometry.attributes.normal.array;\n\t\tconst index_array = geometry.getIndex()?.array;\n\t\tconst aoSampler = geoao(position_array, {\n\t\t\tcells: index_array,\n\t\t\tnormals: normal_array,\n\t\t\tresolution: this.pv.buffer_resolution,\n\t\t\tbias: this.pv.bias,\n\t\t});\n\n\t\tfor (let i = 0; i < this.pv.samples; i++) {\n\t\t\taoSampler.sample();\n\t\t}\n\t\tconst ao = aoSampler.report();\n\n\t\tgeometry.setAttribute(this.pv.attrib_name, new THREE.Float32BufferAttribute(ao, 1));\n\n\t\taoSampler.dispose();\n\t}\n}\n","import {TypedSopNode} from './_Base';\n// import {ParamType} from '../../../Engine/Param/_Module'\n\n// import {Lifespan} from './Concerns/ParticlesSystemGPU/Lifespan';\n// import {GPUCompute} from './Concerns/ParticlesSystemGPU/GPUCompute';\n// import {RenderMaterial} from './Concerns/ParticlesSystemGPU/RenderMaterial';\n// import {ParticleShaderBuilder} from './Concerns/ParticlesSystemGPU/ParticleShaderBuilder'\n// import {AssemblerOwner} from '../../../Engine/Node/Gl/Assembler/Owner';\nimport {ShaderAssemblerParticles} from '../gl/code/assemblers/particles/Particles';\nimport {GlobalsTextureHandler} from '../gl/code/globals/Texture';\n\n// SPECS:\n// - simulation shaders should update the particles at any frame, and resimulate accordingly when at later frames\n// - render material should update at any frame, without having to resimulate\n// - changing the input will recompute, when on first frame only (otherwise an animated geo could make it recompute all the time)\n\n// AssemblerOwner(\n// \tRenderMaterial(\n// \tLifespan(\n// \tGPUCompute(\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {BaseNodeType} from '../_Base';\nimport {BaseParamType} from '../../params/_Base';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {GlAssemblerController} from '../gl/code/Controller';\nimport {MaterialsObjNode} from '../obj/Materials';\nimport {GlNodeChildrenMap} from '../../poly/registers/Gl';\nimport {BaseGlNodeType} from '../gl/_Base';\nimport {ParticlesSystemGpuRenderController} from './utils/ParticlesSystemGPU/RenderController';\nimport {ParticlesSystemGpuComputeController} from './utils/ParticlesSystemGPU/GPUComputeController';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {ShaderName} from '../utils/shaders/ShaderName';\nimport {GlNodeFinder} from '../gl/code/utils/NodeFinder';\nimport {PointsBuilderMatNode} from '../mat/PointsBuilder';\nimport {ConstantGlNode} from '../gl/Constant';\nclass ParticlesSystemGpuSopParamsConfig extends NodeParamsConfig {\n\t// gpu compute\n\tstart_frame = ParamConfig.FLOAT(1, {range: [1, 100]});\n\tauto_textures_size = ParamConfig.BOOLEAN(1);\n\tmax_textures_size = ParamConfig.VECTOR2([1024, 1024], {visible_if: {auto_textures_size: 1}});\n\ttextures_size = ParamConfig.VECTOR2([64, 64], {visible_if: {auto_textures_size: 0}});\n\treset = ParamConfig.BUTTON(null, {\n\t\tcallback: (node: BaseNodeType, param: BaseParamType) => {\n\t\t\tParticlesSystemGpuSopNode.PARAM_CALLBACK_reset(node as ParticlesSystemGpuSopNode);\n\t\t},\n\t});\n\n\t// render\n\t// this.self.within_param_folder(\"setup\", () => {\n\tmaterial = ParamConfig.OPERATOR_PATH('', {\n\t\tnode_selection: {\n\t\t\tcontext: NodeContext.MAT,\n\t\t},\n\t\tdependent_on_found_node: false,\n\t});\n}\nconst ParamsConfig = new ParticlesSystemGpuSopParamsConfig();\nexport class ParticlesSystemGpuSopNode extends TypedSopNode<ParticlesSystemGpuSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'particles_system_gpu';\n\t}\n\tprotected _assembler_controller: GlAssemblerController<ShaderAssemblerParticles> = new GlAssemblerController<\n\t\tShaderAssemblerParticles\n\t>(this, ShaderAssemblerParticles);\n\tget assembler_controller() {\n\t\treturn this._assembler_controller;\n\t}\n\n\tpublic readonly gpu_controller = new ParticlesSystemGpuComputeController(this);\n\tpublic readonly render_controller = new ParticlesSystemGpuRenderController(this);\n\n\tstatic require_webgl2() {\n\t\treturn true;\n\t}\n\tstatic PARAM_CALLBACK_reset(node: ParticlesSystemGpuSopNode) {\n\t\tnode.PARAM_CALLBACK_reset();\n\t}\n\tPARAM_CALLBACK_reset() {\n\t\tthis.gpu_controller.reset_gpu_compute_and_set_dirty();\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['points to emit particles from'];\n\t}\n\n\tprivate _reset_material_if_dirty_bound = this._reset_material_if_dirty.bind(this);\n\tprotected _children_controller_context = NodeContext.GL;\n\tprivate _on_create_prepare_material_bound = this._on_create_prepare_material.bind(this);\n\tinitialize_node() {\n\t\t// this._init_common_shader_builder(ShaderAssemblerParticles, {\n\t\t// \thas_display_flag: true,\n\t\t// \tupdate_on_dirty: false,\n\t\t// });\n\n\t\tthis.io.inputs.set_count(1);\n\t\t// set to never at the moment\n\t\t// otherwise the input is cloned on every frame inside cook_main()\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\n\t\tthis.add_post_dirty_hook('_reset_material_if_dirty', this._reset_material_if_dirty_bound);\n\n\t\tthis.lifecycle.add_on_create_hook(this.assembler_controller.on_create.bind(this.assembler_controller));\n\t\tthis.lifecycle.add_on_create_hook(this._on_create_prepare_material_bound);\n\t\tthis.children_controller?.init();\n\t}\n\n\tcreate_node<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K] {\n\t\treturn super.create_node(type) as GlNodeChildrenMap[K];\n\t}\n\tchildren() {\n\t\treturn super.children() as BaseGlNodeType[];\n\t}\n\tnodes_by_type<K extends keyof GlNodeChildrenMap>(type: K): GlNodeChildrenMap[K][] {\n\t\treturn super.nodes_by_type(type) as GlNodeChildrenMap[K][];\n\t}\n\n\t// create_params() {\n\t// \t// this._create_gpu_compute_params();\n\t// \t// this._create_render_params();\n\t// \tthis._create_lifespan_params();\n\t// }\n\n\tasync _reset_material_if_dirty() {\n\t\t// if(\n\t\t// \tdirty_trigger.graph_node_id &&\n\t\t// \tthis._render_material_node &&\n\t\t// \tdirty_trigger.graph_node_id() == this._render_material_node.graph_node_id()\n\t\t// ){\n\t\t// \tthis.remove_dirty_state()\n\t\t// } else {\n\t\tif (this.p.material.is_dirty) {\n\t\t\tthis.render_controller.reset_render_material();\n\t\t\tif (!this.is_on_frame_start()) {\n\t\t\t\tawait this.render_controller.init_render_material();\n\t\t\t}\n\t\t}\n\t\t// }\n\t\t// that seems to create an infinite loop\n\t\t// maybe only check if the type of geo has changed?\n\t\t// if(this.input_graph_node(0).is_dirty()){\n\t\t// \tthis.set_compilation_required()\n\t\t// }\n\t}\n\n\tis_on_frame_start(): boolean {\n\t\treturn this.scene.frame == this.pv.start_frame;\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tthis.gpu_controller.set_restart_not_required();\n\t\tconst core_group = input_contents[0];\n\t\t// this._simulation_restart_required = false;\n\t\t// let set_group_required = false;\n\t\t// let points:CorePoint[] = [];\n\t\tconsole.log('particles cook');\n\t\tawait this.compile_if_required();\n\n\t\tif (this.is_on_frame_start()) {\n\t\t\tthis.gpu_controller.reset_particle_groups();\n\t\t}\n\n\t\tif (!this.gpu_controller.initialized) {\n\t\t\tawait this.gpu_controller.init(core_group);\n\t\t\t// this.gpu_controller.init_particle_group_points(core_group)\n\t\t\t// await this.gpu_controller.create_gpu_compute();\n\t\t}\n\n\t\t// if (!this._gpu_compute) {\n\t\t// \tawait this.gpu_controller.create_gpu_compute(points);\n\t\t// \t// set_group_required = true\n\t\t// }\n\t\tif (!this.render_controller.initialized) {\n\t\t\tthis.render_controller.init_core_group(core_group);\n\t\t\tawait this.render_controller.init_render_material();\n\t\t}\n\n\t\tthis.gpu_controller.restart_simulation_if_required();\n\t\tthis.gpu_controller.compute_similation_if_required();\n\t\t// if (frame >= this.pv.start_frame) {\n\t\t// \tif (this._last_simulated_frame == null) {\n\t\t// \t\tthis._last_simulated_frame = this._param_start_frame - 1;\n\t\t// \t}\n\t\t// \tif (frame > this._last_simulated_frame) {\n\t\t// \t\tthis._compute_simulation(frame - this._last_simulated_frame);\n\t\t// \t}\n\t\t// }\n\n\t\tif (this.is_on_frame_start()) {\n\t\t\tthis.set_core_group(core_group);\n\t\t} else {\n\t\t\tthis.cook_controller.end_cook();\n\t\t}\n\t}\n\tasync compile_if_required() {\n\t\tif (this.assembler_controller.compile_required()) {\n\t\t\tawait this.run_assembler();\n\t\t}\n\t}\n\tasync run_assembler() {\n\t\tconst root_nodes = this._find_root_nodes();\n\t\tconsole.log('root_nodes', root_nodes);\n\t\tif (root_nodes.length > 0) {\n\t\t\tconst globals_handler = new GlobalsTextureHandler(GlobalsTextureHandler.PARTICLE_SIM_UV);\n\t\t\tthis.assembler_controller.set_assembler_globals_handler(globals_handler);\n\t\t\tthis.assembler_controller.assembler.set_root_nodes(root_nodes);\n\n\t\t\tawait this.assembler_controller.assembler.compile();\n\t\t\tawait this.assembler_controller.post_compile();\n\t\t}\n\n\t\tconst shaders_by_name: Map<ShaderName, string> = this.assembler_controller.assembler.shaders_by_name();\n\t\tthis.gpu_controller.set_shaders_by_name(shaders_by_name);\n\t\tthis.render_controller.set_shaders_by_name(shaders_by_name);\n\t\t// if (shaders_by_name) {\n\t\t// \tawait this.eval_params(this._new_params);\n\t\t// \tthis._shaders_by_name = lodash_cloneDeep(shaders_by_name);\n\t\t// } else {\n\t\t// \tconsole.warn('no shaders by name from assembler');\n\t\t// }\n\t\tthis.gpu_controller.reset_gpu_compute();\n\t\tthis.gpu_controller.reset_particle_groups(); // this\n\n\t\tawait this.assembler_controller.assign_uniform_values(); // TODO: needed?\n\t}\n\t// shaders_by_name() {\n\t// \treturn this._shaders_by_name;\n\t// }\n\t// shaders(): string[] {\n\t// \treturn Object.keys(this._shaders_by_name).map((k) => this._shaders_by_name[k]);\n\t// }\n\n\tprivate _find_root_nodes() {\n\t\tconst nodes: BaseGlNodeType[] = GlNodeFinder.find_attribute_export_nodes(this);\n\t\tconst output_nodes = GlNodeFinder.find_output_nodes(this);\n\t\tif (output_nodes.length > 1) {\n\t\t\tthis.states.error.set('only one output node is allowed');\n\t\t\treturn [];\n\t\t}\n\t\tconst output_node = output_nodes[0];\n\t\tif (output_node) {\n\t\t\tnodes.push(output_node);\n\t\t}\n\t\treturn nodes;\n\t}\n\t// set_compilation_required_and_dirty() {\n\t// \tthis.assembler_controller.set_compilation_required_and_dirty();\n\t// }\n\n\tprivate _on_create_prepare_material() {\n\t\t// that's mostly to have the default shader work when creating the node\n\t\t// output.set_input('position', globals, 'position')\n\t\t// or instead we could create the default shader\n\t\tconst root = this.scene.root;\n\t\tconst mat_name = 'MAT';\n\t\tconst particles_mat_name = 'points_particles';\n\t\tconst MAT: MaterialsObjNode = root.nodes_by_type('materials')[0] || this.scene.root.create_node('materials');\n\t\tMAT.set_name(mat_name);\n\n\t\tconst create_points_mat = (MAT: MaterialsObjNode, name: string) => {\n\t\t\tlet points_mat = MAT.node('points_builder1') as PointsBuilderMatNode;\n\t\t\tif (!(points_mat && points_mat.type == PointsBuilderMatNode.type())) {\n\t\t\t\tpoints_mat = MAT.create_node('points_builder');\n\t\t\t}\n\t\t\tpoints_mat.set_name(name);\n\n\t\t\tlet points_mat_constant_point_size = points_mat.node('constant') as ConstantGlNode;\n\t\t\tif (!(points_mat_constant_point_size && points_mat_constant_point_size.type == ConstantGlNode.type())) {\n\t\t\t\tpoints_mat_constant_point_size = points_mat.create_node('constant');\n\t\t\t\tpoints_mat_constant_point_size.set_name('constant_point_size');\n\t\t\t}\n\t\t\tpoints_mat_constant_point_size.p.float.set(4); // to match the default point material\n\t\t\tconst points_mat_output1 = points_mat.node('output1');\n\t\t\tif (points_mat_output1) {\n\t\t\t\tpoints_mat_output1.set_input(\n\t\t\t\t\t'gl_PointSize',\n\t\t\t\t\tpoints_mat_constant_point_size,\n\t\t\t\t\tConstantGlNode.OUTPUT_NAME\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn points_mat;\n\t\t};\n\t\tconst points_mat = MAT.node(particles_mat_name) || create_points_mat(MAT, particles_mat_name);\n\t\tif (points_mat) {\n\t\t\tconst new_path = points_mat.full_path();\n\t\t\tif (this.p.material.raw_input != new_path) {\n\t\t\t\tthis.p.material.set(new_path);\n\t\t\t}\n\t\t}\n\t}\n}\n","import {BaseGlShaderAssembler} from '../_Base';\n// import {GlobalsTextureHandler} from '../../Assembler/Globals/Texture';\n\nimport TemplateDefault from '../../templates/particles/Default.glsl';\n// import TemplatePosition from './Template/Particle/Position.glsl'\n// import TemplateVelocity from './Template/Particle/Velocity.glsl'\n// import TemplateAcceleration from './Template/Particle/Acceleration.glsl'\n\n// import {ShaderConfig} from './Config/ShaderConfig';\n// import {VariableConfig} from './Config/VariableConfig';\n// import {ShaderName, LineType} from '../../../../../Engine/Node/Gl/Assembler/Util/CodeBuilder';\nimport {AttributeGlNode} from '../../../Attribute';\nimport {TextureAllocationsController} from '../../utils/TextureAllocationsController';\nimport {ThreeToGl} from '../../../../../../core/ThreeToGl';\nimport {BaseGlNodeType} from '../../../_Base';\nimport {GlobalsGlNode} from '../../../Globals';\nimport {TypedNodeTraverser} from '../../../../utils/shaders/NodeTraverser';\nimport {ShaderName} from '../../../../utils/shaders/ShaderName';\nimport {OutputGlNode} from '../../../Output';\nimport {ParamType} from '../../../../../poly/ParamType';\nimport {TypedNamedConnectionPoint} from '../../../../utils/connections/NamedConnectionPoint';\nimport {ConnectionPointType} from '../../../../utils/connections/ConnectionPointType';\nimport {UniformGLDefinition} from '../../../utils/GLDefinition';\nimport {GlobalsTextureHandler} from '../../globals/Texture';\nimport {ShadersCollectionController} from '../../utils/ShadersCollectionController';\n\nexport class ShaderAssemblerParticles extends BaseGlShaderAssembler {\n\tprivate _texture_allocations_controller: TextureAllocationsController | undefined;\n\n\tget _template_shader() {\n\t\treturn undefined;\n\t}\n\tprotected _template_shader_for_shader_name(shader_name: ShaderName) {\n\t\treturn TemplateDefault;\n\t}\n\t// async get_shaders(){\n\t// \tawait this.update_shaders()\n\t// \treturn this._shaders_by_name\n\t// }\n\n\tasync compile() {\n\t\tawait this.setup_shader_names_and_variables();\n\t\tawait this.update_shaders();\n\t}\n\n\troot_nodes_by_shader_name(shader_name: ShaderName): BaseGlNodeType[] {\n\t\t// return this._root_nodes\n\t\tconst list = [];\n\t\tfor (let node of this._root_nodes) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'output': {\n\t\t\t\t\tlist.push(node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'attribute': {\n\t\t\t\t\t// TODO: typescript - gl - why is there a texture allocation controller in the base assembler?\n\t\t\t\t\tconst attrib_name = (node as AttributeGlNode).attribute_name;\n\t\t\t\t\tconst variable = this._texture_allocations_controller?.variable(attrib_name);\n\t\t\t\t\tif (variable && variable.allocation) {\n\t\t\t\t\t\tconst allocation_shader_name = variable.allocation.shader_name;\n\t\t\t\t\t\tif (allocation_shader_name == shader_name) {\n\t\t\t\t\t\t\tlist.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tleaf_nodes_by_shader_name(shader_name: ShaderName): BaseGlNodeType[] {\n\t\tconst list = [];\n\t\tfor (let node of this._leaf_nodes) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'globals': {\n\t\t\t\t\tlist.push(node);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'attribute': {\n\t\t\t\t\t// TODO: typescript - gl - why is there a texture allocation controller in the base assembler? AND especially since there is no way to assign it?\n\t\t\t\t\tconst attrib_name: string = (node as AttributeGlNode).attribute_name;\n\t\t\t\t\tconst variable = this._texture_allocations_controller?.variable(attrib_name);\n\t\t\t\t\tif (variable && variable.allocation) {\n\t\t\t\t\t\tconst allocation_shader_name = variable.allocation.shader_name;\n\t\t\t\t\t\tif (allocation_shader_name == shader_name) {\n\t\t\t\t\t\t\tlist.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\tasync setup_shader_names_and_variables() {\n\t\tconst node_traverser = new TypedNodeTraverser<BaseGlNodeType>(this, this._gl_parent_node);\n\t\tthis._leaf_nodes = node_traverser.leaves_from_nodes(this._root_nodes);\n\n\t\tfor (let node of this._root_nodes) {\n\t\t\tawait node.params.eval_all();\n\t\t}\n\t\tfor (let node of this._leaf_nodes) {\n\t\t\tawait node.params.eval_all();\n\t\t}\n\n\t\tconsole.log('root and leaf:', this._root_nodes, this._leaf_nodes);\n\t\tthis._texture_allocations_controller = new TextureAllocationsController();\n\t\tthis._texture_allocations_controller.allocate_connections_from_root_nodes(this._root_nodes, this._leaf_nodes);\n\n\t\t// const globals_handler = new GlobalsTextureHandler()\n\t\t// this.set_assembler_globals_handler(globals_handler)\n\t\tif (this.globals_handler) {\n\t\t\t((<unknown>this.globals_handler) as GlobalsTextureHandler)?.set_texture_allocations_controller(\n\t\t\t\tthis._texture_allocations_controller\n\t\t\t);\n\t\t}\n\n\t\tthis._reset_shader_configs();\n\t}\n\tasync update_shaders() {\n\t\tthis._shaders_by_name = new Map();\n\t\tthis._lines = new Map();\n\t\tconsole.log('this.shader_names', this.shader_names);\n\t\tfor (let shader_name of this.shader_names) {\n\t\t\tconst template = this._template_shader_for_shader_name(shader_name);\n\t\t\tthis._lines.set(shader_name, template.split('\\n'));\n\t\t}\n\t\tif (this._root_nodes.length > 0) {\n\t\t\t// this._output_node.set_assembler(this)\n\t\t\tawait this.build_code_from_nodes(this._root_nodes);\n\n\t\t\tthis._build_lines();\n\t\t}\n\t\t// this._material.uniforms = this.build_uniforms(template_shader)\n\t\tfor (let shader_name of this.shader_names) {\n\t\t\tconst lines = this._lines.get(shader_name);\n\t\t\tif (lines) {\n\t\t\t\tconsole.log(shader_name, lines.join('\\n'));\n\t\t\t\tthis._shaders_by_name.set(shader_name, lines.join('\\n'));\n\t\t\t}\n\t\t}\n\t}\n\n\t//\n\t//\n\t// CHILDREN NODES PARAMS\n\t//\n\t//\n\tadd_output_params(output_child: OutputGlNode) {\n\t\toutput_child.add_param(ParamType.VECTOR3, 'position', [0, 0, 0]);\n\t\toutput_child.add_param(ParamType.VECTOR3, 'velocity', [0, 0, 0]);\n\t\t// output_child.add_param(ParamType.VECTOR3, 'accacceleration', [0, 0, 0]);\n\t}\n\tadd_globals_params(globals_node: GlobalsGlNode) {\n\t\tglobals_node.io.outputs.set_named_output_connection_points([\n\t\t\tnew TypedNamedConnectionPoint('position', ConnectionPointType.VEC3),\n\t\t\tnew TypedNamedConnectionPoint('velocity', ConnectionPointType.VEC3),\n\t\t\t// new TypedNamedConnectionPoint('acceleration', ConnectionPointType.VEC3),\n\t\t\tnew TypedNamedConnectionPoint('time', ConnectionPointType.FLOAT),\n\t\t]);\n\t}\n\tallow_attribute_exports() {\n\t\treturn true;\n\t}\n\n\tget texture_allocations_controller() {\n\t\treturn (this._texture_allocations_controller =\n\t\t\tthis._texture_allocations_controller || new TextureAllocationsController());\n\t}\n\n\t//\n\t//\n\t// CONFIGS\n\t//\n\t//\n\tcreate_shader_configs() {\n\t\treturn this._texture_allocations_controller?.create_shader_configs() || [];\n\t\t// [\n\t\t// \tnew ShaderConfig('position', ['position'], []),\n\t\t// \t// new ShaderConfig('fragment', ['color', 'alpha'], ['vertex']),\n\t\t// ]\n\t}\n\tcreate_variable_configs() {\n\t\treturn [\n\t\t\t// new VariableConfig('position', {\n\t\t\t// \tdefault: 'vec3( position )',\n\t\t\t// \tprefix: 'vec3 transformed = '\n\t\t\t// }),\n\t\t];\n\t}\n\tget shader_names(): ShaderName[] {\n\t\treturn this.texture_allocations_controller.shader_names() || [];\n\t}\n\tinput_names_for_shader_name(root_node: BaseGlNodeType, shader_name: ShaderName) {\n\t\treturn this.texture_allocations_controller.input_names_for_shader_name(root_node, shader_name) || [];\n\t\t// return this.shader_config(shader_name).input_names()\n\t}\n\n\t//\n\t//\n\t// TEMPLATE HOOKS\n\t//\n\t//\n\tprotected insert_define_after(shader_name: ShaderName) {\n\t\treturn '// INSERT DEFINE';\n\t}\n\tprotected insert_body_after(shader_name: ShaderName) {\n\t\treturn '// INSERT BODY';\n\t}\n\tprotected lines_to_remove(shader_name: ShaderName) {\n\t\treturn ['// INSERT DEFINE', '// INSERT BODY'];\n\t}\n\n\t//\n\t//\n\t// TEMPLATE CODE REPLACEMENT\n\t//\n\t//\n\tadd_export_body_line(\n\t\texport_node: BaseGlNodeType,\n\t\tinput_name: string,\n\t\tinput: BaseGlNodeType,\n\t\tvariable_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\tif (input) {\n\t\t\tconst var_input = export_node.variable_for_input(input_name);\n\t\t\tconst new_var = ThreeToGl.vector3(var_input);\n\t\t\tif (new_var) {\n\t\t\t\tconst texture_variable = this.texture_allocations_controller.variable(variable_name);\n\n\t\t\t\t// if we are in the texture this variable is allocated to, we write it back\n\t\t\t\tconst shader_name = shaders_collection_controller.current_shader_name;\n\t\t\t\tif (texture_variable && texture_variable.allocation?.shader_name == shader_name) {\n\t\t\t\t\tconst component = texture_variable.component;\n\n\t\t\t\t\tconst line = `gl_FragColor.${component} = ${new_var}`;\n\t\t\t\t\tshaders_collection_controller.add_body_lines(export_node, [line], shader_name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_node_lines_output(output_node: BaseGlNodeType, shaders_collection_controller: ShadersCollectionController) {\n\t\tconst shader_name = shaders_collection_controller.current_shader_name;\n\t\tconst input_names = this.texture_allocations_controller.input_names_for_shader_name(output_node, shader_name);\n\t\tif (input_names) {\n\t\t\tfor (let input_name of input_names) {\n\t\t\t\tconst input = output_node.io.inputs.named_input(input_name);\n\n\t\t\t\tif (input) {\n\t\t\t\t\tconst variable_name = input_name;\n\t\t\t\t\tthis.add_export_body_line(\n\t\t\t\t\t\toutput_node,\n\t\t\t\t\t\tinput_name,\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tvariable_name,\n\t\t\t\t\t\tshaders_collection_controller\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// position reads the default attribute position\n\t\t\t\t\t// or maybe there is no need?\n\t\t\t\t\t// if(input_name == 'position'){\n\t\t\t\t\t// \tthis.globals_handler().read_attribute(output_node, 'vec3', 'position')\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tset_node_lines_attribute(\n\t\tattribute_node: AttributeGlNode,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\tif (attribute_node.is_importing) {\n\t\t\tconst gl_type = attribute_node.gl_type();\n\t\t\tconst attribute_name = attribute_node.attribute_name;\n\t\t\tconst new_value = this.globals_handler?.read_attribute(\n\t\t\t\tattribute_node,\n\t\t\t\tgl_type,\n\t\t\t\tattribute_name,\n\t\t\t\tshaders_collection_controller\n\t\t\t);\n\t\t\tconst var_name = attribute_node.gl_var_name(attribute_node.output_name);\n\t\t\tconst body_line = `${gl_type} ${var_name} = ${new_value}`;\n\t\t\tshaders_collection_controller.add_body_lines(attribute_node, [body_line]);\n\n\t\t\t// re-export to ensure it is available on next frame\n\t\t\tconst texture_variable = this.texture_allocations_controller.variable(attribute_name);\n\t\t\tconst shader_name = shaders_collection_controller.current_shader_name;\n\t\t\tif (texture_variable && texture_variable.allocation?.shader_name == shader_name) {\n\t\t\t\tconst variable = this.texture_allocations_controller.variable(attribute_name);\n\t\t\t\tif (variable) {\n\t\t\t\t\tconst component = variable.component;\n\t\t\t\t\tconst body_line = `gl_FragColor.${component} = ${var_name}`;\n\t\t\t\t\tshaders_collection_controller.add_body_lines(attribute_node, [body_line]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// this.add_import_body_line(\n\t\t\t// \tattribute_node,\n\t\t\t// \tshader_name,\n\t\t\t// \tAttribute.output_name(),\n\t\t\t// \tattribute_node.attribute_name()\n\t\t\t// \t)\n\t\t}\n\t\tif (attribute_node.is_exporting) {\n\t\t\tconst input = attribute_node.connected_input_node();\n\t\t\tif (input) {\n\t\t\t\tconst variable_name = attribute_node.attribute_name;\n\n\t\t\t\tthis.add_export_body_line(\n\t\t\t\t\tattribute_node,\n\t\t\t\t\tattribute_node.input_name,\n\t\t\t\t\tinput,\n\t\t\t\t\tvariable_name,\n\t\t\t\t\tshaders_collection_controller\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tset_node_lines_globals(globals_node: GlobalsGlNode, shaders_collection_controller: ShadersCollectionController) {\n\t\tfor (let output_name of globals_node.io.outputs.used_output_names()) {\n\t\t\tswitch (output_name) {\n\t\t\t\tcase 'time':\n\t\t\t\t\tthis._handle_globals_time(globals_node, output_name, shaders_collection_controller);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis._handle_globals_default(globals_node, output_name, shaders_collection_controller);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _handle_globals_time(\n\t\tglobals_node: GlobalsGlNode,\n\t\toutput_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\tconst definition = new UniformGLDefinition(globals_node, ConnectionPointType.FLOAT, output_name);\n\t\tshaders_collection_controller.add_definitions(globals_node, [definition]);\n\n\t\tconst var_name = globals_node.gl_var_name(output_name);\n\t\tconst body_line = `float ${var_name} = ${output_name}`;\n\t\tshaders_collection_controller.add_body_lines(globals_node, [body_line]);\n\t\tthis.set_uniforms_time_dependent();\n\t}\n\n\tprivate _handle_globals_default(\n\t\tglobals_node: GlobalsGlNode,\n\t\toutput_name: string,\n\t\tshaders_collection_controller: ShadersCollectionController\n\t) {\n\t\tconst output_connection_point = globals_node.io.outputs.named_output_connection_points_by_name(output_name);\n\t\tif (output_connection_point) {\n\t\t\tconst gl_type = output_connection_point.type;\n\n\t\t\tconst attrib_read = this.globals_handler?.read_attribute(\n\t\t\t\tglobals_node,\n\t\t\t\tgl_type,\n\t\t\t\toutput_name,\n\t\t\t\tshaders_collection_controller\n\t\t\t);\n\t\t\tconst var_name = globals_node.gl_var_name(output_name);\n\t\t\tconst body_line = `${gl_type} ${var_name} = ${attrib_read}`;\n\t\t\tshaders_collection_controller.add_body_lines(globals_node, [body_line]);\n\t\t}\n\t}\n}\n","export default \"#include <common>\\n\\n// INSERT DEFINE\\n\\nvoid main() {\\n\\n\\tvec2 particleUV = (gl_FragCoord.xy / resolution.xy);\\n\\n\\t// INSERT BODY\\n\\n}\"","import lodash_flatten from 'lodash/flatten';\nimport lodash_uniq from 'lodash/uniq';\nimport lodash_sortBy from 'lodash/sortBy';\nimport lodash_includes from 'lodash/includes';\nimport {TextureAllocation} from './TextureAllocation';\nimport {BaseGlNodeType} from '../../_Base';\n\n// import {TypedConnection, COMPONENTS_COUNT_BY_TYPE} from '../../../../../Engine/Node/Gl/GlData';\nimport {TextureVariable, TextureVariableData} from './TextureVariable';\nimport {ShaderConfig} from '../configs/ShaderConfig';\nimport {ShaderName, ParticleShaderNames} from '../../../utils/shaders/ShaderName';\nimport {PolyScene} from '../../../../scene/PolyScene';\nimport {ConnectionPointComponentsCountMap} from '../../../utils/connections/ConnectionPointType';\nimport {AttributeGlNode} from '../../Attribute';\nimport {BaseNamedConnectionPointType} from '../../../utils/connections/NamedConnectionPoint';\nimport {GlobalsGlNode} from '../../Globals';\n\nexport type TextureAllocationsControllerData = Dictionary<TextureVariableData[] | undefined>[];\n\nexport class TextureAllocationsController {\n\tprivate _allocations: TextureAllocation[] = [];\n\tprivate _next_allocation_index: number = 0;\n\n\tconstructor() {}\n\tallocate_connections_from_root_nodes(root_nodes: BaseGlNodeType[], leaf_nodes: BaseGlNodeType[]) {\n\t\t// const connections_by_node_id = {}\n\t\tconst variables = [];\n\n\t\t// TODO: let's go through the output node first, in case there is a name conflict, it will have priority\n\t\tfor (let node of root_nodes) {\n\t\t\tconst node_id = node.graph_node_id;\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'output': {\n\t\t\t\t\tfor (let connection_point of node.io.inputs.named_input_connection_points) {\n\t\t\t\t\t\tconst input = node.io.inputs.named_input(connection_point.name);\n\t\t\t\t\t\tif (input) {\n\t\t\t\t\t\t\t// connections_by_node_id[node_id] = connections_by_node_id[node_id] || []\n\t\t\t\t\t\t\t// connections_by_node_id[node_id].push(named_input)\n\t\t\t\t\t\t\tconst variable = new TextureVariable(\n\t\t\t\t\t\t\t\tconnection_point.name,\n\t\t\t\t\t\t\t\tConnectionPointComponentsCountMap[connection_point.type]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tvariable.add_graph_node_id(node_id);\n\t\t\t\t\t\t\tvariables.push(variable);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'attribute': {\n\t\t\t\t\tconst attrib_node = node as AttributeGlNode;\n\t\t\t\t\tconst named_input: BaseGlNodeType | null = attrib_node.connected_input_node();\n\t\t\t\t\tconst connection_point:\n\t\t\t\t\t\t| BaseNamedConnectionPointType\n\t\t\t\t\t\t| undefined = attrib_node.connected_input_connection_point();\n\t\t\t\t\tif (named_input && connection_point) {\n\t\t\t\t\t\t// connections_by_node_id[node_id] = connections_by_node_id[node_id] || []\n\t\t\t\t\t\t// connections_by_node_id[node_id].push(named_input)\n\t\t\t\t\t\tconst variable = new TextureVariable(\n\t\t\t\t\t\t\tattrib_node.attribute_name,\n\t\t\t\t\t\t\tConnectionPointComponentsCountMap[connection_point.type]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tvariable.add_graph_node_id(node_id);\n\t\t\t\t\t\tvariables.push(variable);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let node of leaf_nodes) {\n\t\t\tconst node_id = node.graph_node_id;\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'globals': {\n\t\t\t\t\tconst globals_node = node as GlobalsGlNode;\n\t\t\t\t\tconst output_names_attributes = ['position', 'normal', 'color', 'uv'];\n\t\t\t\t\t// const output_names_not_attributes = ['frame', 'gl_FragCoord', 'gl_PointCoord'];\n\t\t\t\t\tfor (let output_name of globals_node.io.outputs.used_output_names()) {\n\t\t\t\t\t\t// const is_attribute = !lodash_includes(output_names_not_attributes, output_name)\n\n\t\t\t\t\t\t// is_attribute, as opposed to frame, gl_FragCoord and gl_PointCoord which are either uniforms or provided by the renderer\n\t\t\t\t\t\tconst is_attribute = output_names_attributes.includes(output_name);\n\n\t\t\t\t\t\tif (is_attribute) {\n\t\t\t\t\t\t\tconst connection_point = globals_node.io.outputs.named_output_connection_points_by_name(\n\t\t\t\t\t\t\t\toutput_name\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (connection_point) {\n\t\t\t\t\t\t\t\tconst gl_type = connection_point.type;\n\t\t\t\t\t\t\t\tconst variable = new TextureVariable(\n\t\t\t\t\t\t\t\t\toutput_name,\n\t\t\t\t\t\t\t\t\tConnectionPointComponentsCountMap[gl_type]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tvariable.add_graph_node_id(node_id);\n\t\t\t\t\t\t\t\tvariables.push(variable);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'attribute': {\n\t\t\t\t\tconst attribute_node = node as AttributeGlNode;\n\t\t\t\t\tconst connection_point = attribute_node.output_connection_point();\n\t\t\t\t\tif (connection_point) {\n\t\t\t\t\t\t// connections_by_node_id[node_id] = connections_by_node_id[node_id] || []\n\t\t\t\t\t\t// connections_by_node_id[node_id].push(named_output)\n\t\t\t\t\t\tconst variable = new TextureVariable(\n\t\t\t\t\t\t\tattribute_node.attribute_name,\n\t\t\t\t\t\t\tConnectionPointComponentsCountMap[connection_point.type]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tvariable.add_graph_node_id(node_id);\n\t\t\t\t\t\tvariables.push(variable);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.allocate_variables(variables);\n\t}\n\tallocate_variables(variables: TextureVariable[]) {\n\t\tconst variables_by_size_inverse = lodash_sortBy(variables, (variable) => {\n\t\t\treturn -variable.size;\n\t\t});\n\t\tfor (let variable of variables_by_size_inverse) {\n\t\t\tthis.allocate_variable(variable);\n\t\t}\n\t}\n\tallocate_variable(new_variable: TextureVariable) {\n\t\tlet allocated = this.has_variable(new_variable.name);\n\t\tif (allocated) {\n\t\t\tconst allocated_variable = this.variables().filter((v) => v.name == new_variable.name)[0];\n\t\t\tnew_variable.graph_node_ids?.forEach((boolean, graph_node_id: string) => {\n\t\t\t\tallocated_variable.add_graph_node_id(graph_node_id);\n\t\t\t});\n\t\t} else {\n\t\t\tif (!allocated) {\n\t\t\t\tfor (let allocation of this._allocations) {\n\t\t\t\t\tif (!allocated && allocation.has_space_for_variable(new_variable)) {\n\t\t\t\t\t\tallocation.add_variable(new_variable);\n\t\t\t\t\t\tallocated = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!allocated) {\n\t\t\t\tconst new_allocation = new TextureAllocation(this.next_allocation_name());\n\t\t\t\tthis._allocations.push(new_allocation);\n\t\t\t\tnew_allocation.add_variable(new_variable);\n\t\t\t}\n\t\t}\n\t}\n\n\tnext_allocation_name(): ShaderName {\n\t\tconst name = ParticleShaderNames[this._next_allocation_index];\n\t\tthis._next_allocation_index += 1;\n\t\treturn name;\n\t}\n\n\tshader_names(): ShaderName[] {\n\t\tconst explicit_shader_names = this._allocations.map((a) => a.shader_name);\n\n\t\t// include dependencies if needed\n\t\t// TODO: typescript - do I need those?\n\t\t// if (lodash_includes(explicit_shader_names, 'acceleration')) {\n\t\t// \texplicit_shader_names.push('velocity');\n\t\t// }\n\t\t// if (lodash_includes(explicit_shader_names, 'velocity')) {\n\t\t// \texplicit_shader_names.push('position');\n\t\t// }\n\n\t\treturn lodash_uniq(explicit_shader_names);\n\t}\n\tcreate_shader_configs(): ShaderConfig[] {\n\t\treturn [\n\t\t\t// new ShaderConfig('position', ['position'], []),\n\t\t\t// new ShaderConfig('fragment', ['color', 'alpha'], ['vertex']),\n\t\t];\n\t}\n\tallocation_for_shader_name(shader_name: ShaderName): TextureAllocation {\n\t\treturn this._allocations.filter((a) => a.shader_name == shader_name)[0];\n\t}\n\tinput_names_for_shader_name(root_node: BaseGlNodeType, shader_name: ShaderName) {\n\t\tconst allocation = this.allocation_for_shader_name(shader_name);\n\t\tif (allocation) {\n\t\t\treturn allocation.input_names_for_node(root_node);\n\t\t}\n\t}\n\t// find_variable(root_node: BaseNodeGl, shader_name: ShaderName, input_name: string): TextureVariable{\n\t// \tconst allocation = this.allocation_for_shader_name(shader_name)\n\t// \tif(allocation){\n\t// \t\treturn allocation.find_variable_with_node(root_node, input_name)\n\t// \t}\n\t// }\n\tvariable(variable_name: string): TextureVariable | undefined {\n\t\tfor (let allocation of this._allocations) {\n\t\t\tconst variable = allocation.variable(variable_name);\n\t\t\tif (variable) {\n\t\t\t\treturn variable;\n\t\t\t}\n\t\t}\n\t}\n\tvariables(): TextureVariable[] {\n\t\treturn lodash_flatten(this._allocations.map((a) => a.variables || []));\n\t}\n\thas_variable(name: string): boolean {\n\t\tconst names = this.variables().map((v) => v.name);\n\t\treturn lodash_includes(names, name);\n\t}\n\t// allocation_for_variable(name:string):TextureAllocation{\n\t// \tfor(let allocation of this._allocations){\n\t// \t\tconst variables = allocation.variables()\n\t// \t\tfor(let variable of variables){\n\t// \t\t\tif(variable.name() == name){\n\t// \t\t\t\treturn allocation\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// }\n\tto_json(scene: PolyScene): TextureAllocationsControllerData {\n\t\treturn this._allocations.map((allocation: TextureAllocation) => {\n\t\t\tconst data = {\n\t\t\t\t[allocation.texture_name]: allocation.to_json(scene),\n\t\t\t};\n\t\t\treturn data;\n\t\t});\n\t}\n\tprint(scene: PolyScene) {\n\t\tconsole.log(JSON.stringify(this.to_json(scene), [''], 2));\n\t}\n}\n","import {TextureVariable, TextureVariableData} from './TextureVariable';\nimport {BaseGlNodeType} from '../../_Base';\nimport {PolyScene} from '../../../../scene/PolyScene';\nimport {ShaderName} from '../../../utils/shaders/ShaderName';\n\nexport class TextureAllocation {\n\tprivate _variables: TextureVariable[] | undefined;\n\tprivate _size: number = 0;\n\n\tconstructor(private _shader_name: ShaderName) {}\n\n\tadd_variable(variable: TextureVariable) {\n\t\tthis._variables = this._variables || [];\n\t\tthis._variables.push(variable);\n\t\tvariable.set_position(this._size);\n\t\tvariable.set_allocation(this);\n\t\tthis._size += variable.size;\n\t}\n\n\thas_space_for_variable(variable: TextureVariable): boolean {\n\t\treturn this._size + variable.size <= 4;\n\t}\n\tget shader_name() {\n\t\treturn this._shader_name; //this._variables[0].name()\n\t}\n\tget texture_name(): string {\n\t\treturn `texture_${this._shader_name}`;\n\t}\n\n\tget variables(): TextureVariable[] | undefined {\n\t\treturn this._variables;\n\t}\n\tvariables_for_input_node(root_node: BaseGlNodeType): TextureVariable[] | undefined {\n\t\treturn this._variables?.filter((variable) => variable.graph_node_ids?.has(root_node.graph_node_id) || false);\n\t}\n\tinput_names_for_node(root_node: BaseGlNodeType): string[] | undefined {\n\t\treturn this.variables_for_input_node(root_node)?.map((v) => v.name);\n\t}\n\t// find_variable_with_node(root_node: BaseNodeGl, input_name: string): TextureVariable{\n\t// \treturn this.variables_for_input_node(root_node).filter(v=>v.name() == input_name)[0]\n\t// }\n\t// find_variable_without_node(input_name: string): TextureVariable{\n\t// \treturn this._variables.filter(v=>v.name() == input_name)[0]\n\t// }\n\tvariable(variable_name: string) {\n\t\tif (this._variables) {\n\t\t\tfor (let variable of this._variables) {\n\t\t\t\tif (variable.name == variable_name) {\n\t\t\t\t\treturn variable;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tto_json(scene: PolyScene): TextureVariableData[] | undefined {\n\t\treturn this._variables?.map((v) => v.to_json(scene));\n\t\t// for(let variable of this._variables){\n\t\t// \tdata[variable.name()] = variable.to_json(scene)\n\t\t// }\n\t\t// return data\n\t}\n}\n","import {TextureAllocation} from './TextureAllocation';\nimport {PolyScene} from '../../../../scene/PolyScene';\n\nexport interface TextureVariableData {\n\tname: string;\n\tnodes: string[];\n}\n\nexport class TextureVariable {\n\tprivate _allocation: TextureAllocation | undefined;\n\tprivate _position: number = -1;\n\n\tprivate _graph_node_ids: Map<string, boolean> | undefined;\n\n\tconstructor(private _name: string, private _size: number) {\n\t\tif (!_name) {\n\t\t\tthrow 'TextureVariable requires a name';\n\t\t}\n\t}\n\n\tset_allocation(allocation: TextureAllocation) {\n\t\tthis._allocation = allocation;\n\t}\n\tget allocation() {\n\t\treturn this._allocation;\n\t}\n\n\tget graph_node_ids() {\n\t\treturn this._graph_node_ids;\n\t}\n\tadd_graph_node_id(id: string) {\n\t\tthis._graph_node_ids = this._graph_node_ids || new Map();\n\t\tthis._graph_node_ids.set(id, true);\n\t}\n\tget name() {\n\t\treturn this._name;\n\t}\n\tget size() {\n\t\treturn this._size;\n\t}\n\n\tset_position(position: number) {\n\t\tthis._position = position;\n\t}\n\tget position() {\n\t\treturn this._position;\n\t}\n\tget component(): string {\n\t\treturn 'xyzw'\n\t\t\t.split('')\n\t\t\t.splice(this._position, this._size)\n\t\t\t.join('');\n\t}\n\tto_json(scene: PolyScene): TextureVariableData {\n\t\tconst names: string[] = [];\n\t\tif (this._graph_node_ids) {\n\t\t\tthis._graph_node_ids.forEach((boolean, node_id: string) => {\n\t\t\t\tconst name = scene.graph.node_from_id(node_id).name;\n\t\t\t\tnames.push(name);\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tnodes: names.sort(),\n\t\t};\n\t}\n}\n","import lodash_cloneDeep from 'lodash/cloneDeep';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\n// import {BaseNodeSop} from '../_Base'\nimport {Object3D} from 'three/src/core/Object3D';\nimport {BaseBuilderMatNodeType} from '../../../mat/_BaseBuilder';\n\n// import computeShaderPosition from 'src/Engine/Node/Gl/Assembler/Template/Particle/Position.glsl'\n// import computeShaderVelocity from 'src/Engine/Node/Gl/Assembler/Template/Particle/Particle.v.glsl'\n// import particleVertexShader from 'src/Engine/Node/Gl/Assembler/Template/Particle/Particle.vert.glsl'\n// import particleFragmentShader from 'src/Engine/Node/Gl/Assembler/Template/Particle/Particle.frag.glsl'\nimport {GlobalsTextureHandler} from '../../../gl/code/globals/Texture';\n\nimport {ParticlesSystemGpuSopNode} from '../../ParticlesSystemGpu';\nimport {CoreMaterial, ShaderMaterialWithCustomMaterials} from '../../../../../core/geometry/Material';\nimport {CoreGroup} from '../../../../../core/geometry/Group';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {ShaderName} from '../../../utils/shaders/ShaderName';\nimport {TextureAllocationsControllerData} from '../../../gl/code/utils/TextureAllocationsController';\n\nexport class ParticlesSystemGpuRenderController {\n\tprivate _render_material: ShaderMaterial | undefined;\n\tprotected _particles_group_objects: Object3D[] = [];\n\tprivate _shaders_by_name: Map<ShaderName, string> | undefined;\n\tprivate _texture_allocations_json: TextureAllocationsControllerData | undefined;\n\n\tconstructor(private node: ParticlesSystemGpuSopNode) {}\n\n\t// _create_render_params() {\n\t// \tthis.self.within_param_folder(\"setup\", () => {\n\t// \t\tthis.self.add_param(ParamType.OPERATOR_PATH, \"material\", \"\", {\n\t// \t\t\tnode_selection: {\n\t// \t\t\t\tcontext: NodeContext.MAT\n\t// \t\t\t},\n\t// \t\t\tdependent_on_found_node: false\n\t// \t\t});\n\t// \t});\n\t// }\n\tset_shaders_by_name(shaders_by_name: Map<ShaderName, string>) {\n\t\tthis._shaders_by_name = shaders_by_name;\n\t\tthis.reset_render_material();\n\t}\n\n\tassign_render_material() {\n\t\tif (!this._render_material) {\n\t\t\t// throw 'cannot assign non existing material';\n\t\t\treturn;\n\t\t}\n\t\tfor (let object3d of this._particles_group_objects) {\n\t\t\tconst object = object3d as Mesh;\n\t\t\tif (object.geometry) {\n\t\t\t\tobject.material = this._render_material;\n\t\t\t\tCoreMaterial.apply_custom_materials(object, this._render_material as ShaderMaterialWithCustomMaterials);\n\t\t\t\tobject.matrixAutoUpdate = false;\n\t\t\t\tobject.updateMatrix();\n\t\t\t}\n\t\t}\n\t\t// if this material is recomputed on a frame after the frame_start\n\t\t// we need to:\n\t\t// - mark the material as needsUpdate (to ensure it gets recompiled by the renderer)\n\t\t// - update the uniforms (to ensure the material gets the right values, as the uniforms have been reset)\n\t\tthis._render_material.needsUpdate = true;\n\t\tthis.update_render_material_uniforms();\n\t}\n\tupdate_render_material_uniforms() {\n\t\tif (!this._render_material) {\n\t\t\treturn;\n\t\t}\n\t\t// if (!this.self._gpu_compute) {\n\t\t// \treturn;\n\t\t// }\n\n\t\t// for (let shader_name of Object.keys(this._shaders_by_name)) {\n\t\tthis._shaders_by_name?.forEach((string, shader_name) => {\n\t\t\tconst texture = this.node.gpu_controller.getCurrentRenderTarget(shader_name)?.texture;\n\t\t\tif (texture) {\n\t\t\t\tconst uniform_name = `texture_${shader_name}`;\n\t\t\t\tif (this._render_material) {\n\t\t\t\t\tthis._render_material.uniforms[uniform_name].value = texture;\n\t\t\t\t\tCoreMaterial.assign_custom_uniforms(this._render_material, uniform_name, texture);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// console.log(this._render_material.vertexShader);\n\t\t// console.log(this._render_material.fragmentShader);\n\t}\n\n\treset_render_material() {\n\t\tthis._render_material = undefined;\n\t\tthis._particles_group_objects = []; //this._particles_core_group.objects()\n\t}\n\tget initialized(): boolean {\n\t\treturn this._render_material != null;\n\t}\n\n\tinit_core_group(core_group: CoreGroup) {\n\t\tfor (let child of core_group.objects()) {\n\t\t\tthis._particles_group_objects.push(child);\n\t\t}\n\t}\n\tasync init_render_material() {\n\t\t// if (this.self.compile_required()) {\n\t\t// \treturn;\n\t\t// }\n\t\tif (this._render_material) {\n\t\t\treturn;\n\t\t}\n\n\t\t// const uniforms_particles = {\n\t\t// \t\"texture_position\": { value: null },\n\t\t// \t// \"debugX\": { value: 0 },\n\t\t// \t// \"textureVelocity\": { value: null },\n\t\t// \t// \"cameraConstant\": { value: 1 }, //( camera ) },\n\t\t// \t// \"density\": { value: 1.0 }\n\t\t// };\n\n\t\t// ShaderMaterial\n\t\tif (this.node.p.material.is_dirty) {\n\t\t\tawait this.node.p.material.compute();\n\t\t}\n\t\tconst mat_node = this.node.p.material.found_node() as BaseBuilderMatNodeType; // TODO: typescript - ensure node selection is safe, as it would currently crash with a non builder mat selected\n\n\t\tif (mat_node) {\n\t\t\tconst new_texture_allocations_json: TextureAllocationsControllerData = this.node.assembler_controller.assembler.texture_allocations_controller.to_json(\n\t\t\t\tthis.node.scene\n\t\t\t);\n\n\t\t\tconst globals_handler = new GlobalsTextureHandler(GlobalsTextureHandler.UV_VARYING);\n\t\t\tglobals_handler.set_texture_allocations_controller(\n\t\t\t\tthis.node.assembler_controller.assembler.texture_allocations_controller\n\t\t\t);\n\t\t\tmat_node.assembler_controller.set_assembler_globals_handler(globals_handler);\n\t\t\tif (\n\t\t\t\t!this._texture_allocations_json ||\n\t\t\t\tJSON.stringify(this._texture_allocations_json) != JSON.stringify(new_texture_allocations_json)\n\t\t\t) {\n\t\t\t\t// we need to set the node to dirty if a recompile is needed\n\t\t\t\t// otherwise it won't cook\n\t\t\t\t// but we also need to check if the texture_allocation has changed,\n\t\t\t\t// otherwise we'll have an infinite loop\n\t\t\t\tthis._texture_allocations_json = lodash_cloneDeep(new_texture_allocations_json);\n\t\t\t\tmat_node.set_dirty();\n\t\t\t}\n\t\t\t// set compilation required in case the texture allocation has changed\n\t\t\t// but not needed as it is done by set_assembler_globals_handler\n\t\t\t//found_node.set_compilation_required() //_and_dirty()\n\t\t\tconst container = await mat_node.request_container();\n\t\t\tthis._render_material = container.material() as ShaderMaterial; //.clone()\n\t\t\t// this._render_material.needsUpdate = true\n\t\t\t// this.self._assembler.texture_allocations_controller().print()\n\t\t\t// throw \"DEBUGGIN...\"\n\t\t} else {\n\t\t\tthis.node.states.error.set('render material not valid');\n\t\t\t// this._render_material = this._render_material || new ShaderMaterial( {\n\t\t\t// \tuniforms: {},\n\t\t\t// \tvertexShader: particleVertexShader,\n\t\t\t// \tfragmentShader: particleFragmentShader\n\t\t\t// } );\n\t\t}\n\n\t\t// add uniforms\n\t\tif (this._render_material) {\n\t\t\tconst uniforms = this._render_material.uniforms;\n\t\t\t// for (let shader_name of Object.keys(this._shaders_by_name)) {\n\t\t\tthis._shaders_by_name?.forEach((shader, shader_name) => {\n\t\t\t\tconst uniform_name = `texture_${shader_name}`;\n\t\t\t\tconst uniform_value = {value: null};\n\t\t\t\tuniforms[uniform_name] = uniform_value;\n\t\t\t\tif (this._render_material) {\n\t\t\t\t\tCoreMaterial.init_custom_material_uniforms(this._render_material, uniform_name, uniform_value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// this._render_material.extensions.drawBuffers = true;\n\t\tthis.assign_render_material();\n\t}\n}\n","import {Vector2} from 'three/src/math/Vector2';\n\nimport {MathUtils} from 'three/src/math/MathUtils';\nimport {InstancedBufferAttribute} from 'three/src/core/InstancedBufferAttribute';\nimport {DataTexture} from 'three/src/textures/DataTexture';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\n\n// import {BaseNodeSop} from '../_Base'\n\n// import {CoreConstant} from '../../../../../Core/Geometry/Constant'\n\nimport {CoreGroup} from '../../../../../core/geometry/Group';\nimport {CoreMath} from '../../../../../core/math/_Module';\n\n// import computeShaderPosition from 'src/Engine/Node/Gl/Assembler/Template/Particle/Position.glsl'\n// import computeShaderVelocity from 'src/Engine/Node/Gl/Assembler/Template/Particle/Particle.v.glsl'\n// import particleVertexShader from 'src/Engine/Node/Gl/Assembler/Template/Particle/Particle.vert.glsl'\n// import particleFragmentShader from 'src/Engine/Node/Gl/Assembler/Template/Particle/Particle.frag.glsl'\nimport {GlobalsTextureHandler} from '../../../gl/code/globals/Texture';\nimport {GPUComputationRenderer} from './GPUComputationRenderer';\nimport {ParticlesSystemGpuSopNode} from '../../ParticlesSystemGpu';\nimport {WebGLRenderer} from 'three/src/renderers/WebGLRenderer';\nimport {WebGLRenderTarget} from 'three/src/renderers/WebGLRenderTarget';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {Poly} from '../../../../Poly';\nimport {CorePoint} from '../../../../../core/geometry/Point';\nimport {ShaderName} from '../../../utils/shaders/ShaderName';\n\ninterface GPUComputationRendererVariable {\n\tname: string;\n\trenderTargets: WebGLRenderTarget[];\n\tmaterial: ShaderMaterial;\n}\ninterface GPUComputationRenderer {\n\tnew (x: number, y: number, renderer: WebGLRenderer): GPUComputationRenderer;\n\tcompute(): void;\n\tinit(): string | null;\n\taddVariable(name: string, fragment_shader: string, variable: DataTexture): GPUComputationRendererVariable;\n\tsetVariableDependencies(variable: GPUComputationRendererVariable, vars: GPUComputationRendererVariable[]): void;\n\trenderTexture(texture: DataTexture, render_target: WebGLRenderTarget): void;\n\tcreateTexture(): DataTexture;\n\tgetCurrentRenderTarget(variable: GPUComputationRendererVariable): WebGLRenderTarget;\n}\n\nexport class ParticlesSystemGpuComputeController {\n\tprotected _gpu_compute: GPUComputationRenderer | undefined;\n\tprotected _simulation_restart_required: boolean = false;\n\n\tprotected _renderer: WebGLRenderer | undefined;\n\t// private _particles_group: CoreGroup\n\n\tprotected _particles_core_group: CoreGroup | undefined;\n\tprotected _points: CorePoint[] = [];\n\n\tprivate variables_by_name: Map<ShaderName, GPUComputationRendererVariable> = new Map();\n\tprivate _created_textures_by_name: Map<ShaderName, DataTexture> = new Map();\n\tprivate _shaders_by_name: Map<ShaderName, string> | undefined;\n\tprotected _last_simulated_frame: number | undefined;\n\t// private _use_instancing: boolean = false\n\n\t// private _param_auto_textures_size: boolean;\n\t// private _param_max_textures_size: Vector2;\n\t// private _param_textures_sizes: Vector2;\n\tprivate _used_textures_size: Vector2 = new Vector2();\n\n\tconstructor(private node: ParticlesSystemGpuSopNode) {}\n\n\t// protected _create_gpu_compute_params() {\n\t// \tthis.self.within_param_folder('setup', () => {\n\t// \t\tthis.self.add_param(ParamType.INTEGER, 'start_frame', 1, {\n\t// \t\t\trange: [1, 100],\n\t// \t\t});\n\t// \t\tthis.self.add_param(ParamType.TOGGLE, 'auto_textures_size', 1);\n\t// \t\tthis.self.add_param(ParamType.VECTOR2, 'max_textures_size', [1024, 1024], {\n\t// \t\t\tvisible_if: {auto_textures_size: 1},\n\t// \t\t});\n\t// \t\tthis.self.add_param(ParamType.VECTOR2, 'textures_size', [64, 64], {\n\t// \t\t\tvisible_if: {auto_textures_size: 0},\n\t// \t\t});\n\t// \t\tthis.self.add_param(ParamType.BUTTON, 'reset', '', {\n\t// \t\t\tcallback: this._reset_gpu_compute_and_set_dirty.bind(this),\n\t// \t\t});\n\t// \t});\n\t// \t// this.self.add_param(ParamType.BUTTON, 'force_compute', '', {callback: this._force_compute.bind(this)})\n\t// }\n\n\tset_shaders_by_name(shaders_by_name: Map<ShaderName, string>) {\n\t\tthis._shaders_by_name = shaders_by_name;\n\t\tthis.reset_gpu_compute();\n\t}\n\tasync init(core_group: CoreGroup) {\n\t\tthis.init_particle_group_points(core_group);\n\t\tawait this.create_gpu_compute();\n\t}\n\n\tgetCurrentRenderTarget(shader_name: ShaderName) {\n\t\tconst variable = this.variables_by_name.get(shader_name);\n\t\tif (variable) {\n\t\t\treturn this._gpu_compute?.getCurrentRenderTarget(variable);\n\t\t}\n\t}\n\n\tinit_particle_group_points(core_group: CoreGroup) {\n\t\tthis.reset_gpu_compute();\n\n\t\tif (!core_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._particles_core_group = core_group;\n\t\t// this._particles_group_objects = []; //this._particles_core_group.objects()\n\n\t\t// in order to have proper copy on each children, I need to do .push for each\n\t\t// and not just my_array = group.children, as the array would then be empty\n\t\t// after have done .set_group(group)\n\t\t// I may need to rethink the whole\n\t\t// for (let child of this._particles_core_group.objects()) {\n\t\t// \tthis._particles_group_objects.push(child);\n\t\t// }\n\t\t// this._particles_core_group = new CoreGroup(this._particles_group)\n\t\tthis._points = this._get_points() || [];\n\t}\n\n\tcompute_similation_if_required() {\n\t\tconst frame = this.node.scene.frame;\n\t\tconst start_frame: number = this.node.pv.start_frame;\n\t\tif (frame >= start_frame) {\n\t\t\tif (this._last_simulated_frame == null) {\n\t\t\t\tthis._last_simulated_frame = start_frame - 1;\n\t\t\t}\n\t\t\tif (frame > this._last_simulated_frame) {\n\t\t\t\tthis._compute_simulation(frame - this._last_simulated_frame);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _compute_simulation(count = 1) {\n\t\tif (!this._gpu_compute) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.update_simulation_material_uniforms();\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tthis._gpu_compute.compute();\n\t\t}\n\t\tthis.node.render_controller.update_render_material_uniforms();\n\t\tthis._last_simulated_frame = this.node.scene.frame;\n\n\t\t// this._renderer.render(this._gpu_scene, this._gpu_camera)\n\t}\n\n\tasync create_gpu_compute() {\n\t\tif (this.node.pv.auto_textures_size) {\n\t\t\tconst nearest_power_of_two = CoreMath.nearestPower2(Math.sqrt(this._points.length));\n\t\t\tthis._used_textures_size.x = Math.min(nearest_power_of_two, this.node.pv.max_textures_size.x);\n\t\t\tthis._used_textures_size.y = Math.min(nearest_power_of_two, this.node.pv.max_textures_size.y);\n\t\t} else {\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\tMathUtils.isPowerOfTwo(this.node.pv.textures_size.x) &&\n\t\t\t\t\tMathUtils.isPowerOfTwo(this.node.pv.textures_size.y)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.node.states.error.set('texture size must be a power of 2');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst max_particles_count = this.node.pv.textures_size.x * this.node.pv.textures_size.y;\n\t\t\tif (this._points.length > max_particles_count) {\n\t\t\t\tthis.node.states.error.set(\n\t\t\t\t\t`max particles is set to (${this.node.pv.textures_size.x}x${this.node.pv.textures_size.y}=) ${max_particles_count}`\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._used_textures_size.copy(this.node.pv.textures_size);\n\t\t}\n\n\t\tthis.node.states.time_dependent.force_time_dependent();\n\t\tthis._init_particles_uvs();\n\t\t// we need to recreate the material if the texture allocation changes\n\t\tthis.node.render_controller.reset_render_material();\n\t\t// await this.node.render_controller.init_render_material();\n\n\t\tconst renderer = await Poly.instance().renderers_controller.wait_for_renderer(); //new WebGLRenderer();\n\t\tif (renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t} else {\n\t\t\tthis.node.states.error.set('no renderer found');\n\t\t}\n\t\t// console.log(this._renderer.extensions, this._renderer.capabilities)\n\t\t// if(!this._renderer.extensions.get( 'WEBGL_draw_buffers' )){\n\t\t// \tthis.self.set_error(\"this operator requires the browser extension WEBGL_draw_buffers\")\n\t\t// \talert(\"no extension found\")\n\t\t// \treturn\n\t\t// }\n\t\t// this._renderer = new WebGLRenderer();\n\t\t// this._gpu_scene = new Scene()\n\t\t// this._gpu_camera = new Camera()\n\t\t// this._renderer.setPixelRatio( window.devicePixelRatio );\n\t\t// this._renderer.setSize( this.node.pv.textures_size.x, this.node.pv.textures_size.y );\n\n\t\tconst compute = new GPUComputationRenderer(\n\t\t\tthis._used_textures_size.x,\n\t\t\tthis._used_textures_size.y,\n\t\t\tthis._renderer\n\t\t);\n\t\tthis._gpu_compute = (<unknown>compute) as GPUComputationRenderer;\n\n\t\tif (!this._gpu_compute) {\n\t\t\tthis.node.states.error.set('failed to create the GPUComputationRenderer');\n\t\t\treturn;\n\t\t}\n\n\t\tthis._last_simulated_frame = undefined;\n\n\t\t// document.body.style = ''\n\t\t// document.body.appendChild( renderer.domElement );\n\n\t\tthis.variables_by_name.forEach((variable, shader_name) => {\n\t\t\tvariable.renderTargets[0].dispose();\n\t\t\tvariable.renderTargets[1].dispose();\n\t\t\tthis.variables_by_name.delete(shader_name);\n\t\t});\n\t\t// for (let shader_name of Object.keys(this._shaders_by_name)) {\n\t\tconst all_variables: GPUComputationRendererVariable[] = [];\n\t\tthis._shaders_by_name?.forEach((shader, shader_name) => {\n\t\t\tif (this._gpu_compute) {\n\t\t\t\tconst variable = this._gpu_compute.addVariable(\n\t\t\t\t\t`texture_${shader_name}`,\n\t\t\t\t\tshader,\n\t\t\t\t\tthis._created_textures_by_name.get(shader_name)!\n\t\t\t\t);\n\t\t\t\tthis.variables_by_name.set(shader_name, variable);\n\t\t\t\tall_variables.push(variable);\n\t\t\t}\n\t\t});\n\n\t\t// this._gpu_compute.setVariableDependencies( this.var_v, [ this.var_P, this.var_v ] );\n\t\t// for (let shader_name of Object.keys(this._shaders_by_name)) {\n\t\tthis.variables_by_name?.forEach((variable, shader_name) => {\n\t\t\tif (this._gpu_compute) {\n\t\t\t\tthis._gpu_compute.setVariableDependencies(\n\t\t\t\t\tvariable,\n\t\t\t\t\tall_variables // currently all depend on all\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tthis._create_texture_render_targets();\n\t\tthis._fill_textures();\n\t\tthis.create_simulation_material_uniforms();\n\n\t\tvar error = this._gpu_compute.init();\n\n\t\tif (error !== null) {\n\t\t\tconsole.error(error);\n\t\t\tthis.node.states.error.set(error);\n\t\t}\n\t}\n\n\tprivate create_simulation_material_uniforms() {\n\t\tthis.variables_by_name.forEach((variable, shader_name) => {\n\t\t\tconst uniforms = variable.material.uniforms;\n\t\t\tuniforms['frame'] = {value: this.node.scene.frame};\n\n\t\t\tfor (let param_config of this.node.assembler_controller.assembler.param_configs()) {\n\t\t\t\tuniforms[param_config.uniform_name] = param_config.uniform;\n\t\t\t}\n\t\t});\n\t}\n\tprivate update_simulation_material_uniforms() {\n\t\tthis.variables_by_name.forEach((variable, shader_name) => {\n\t\t\tvariable.material.uniforms['frame'].value = this.node.scene.frame;\n\t\t});\n\t}\n\n\tprivate _init_particles_uvs() {\n\t\t// var uvs = new Float32Array( this.node.pv.textures_size.x * this.node.pv.textures_size.y * 2 );\n\t\tvar uvs = new Float32Array(this._points.length * 2);\n\t\t// const rows_count = Math.ceil(Math.min(\n\t\t// \tthis.node.pv.textures_size.y, (points.length / this.node.pv.textures_size.y)\n\t\t// ))\n\t\t// const columns_count = Math.ceil(Math.min(\n\t\t// \tthis.node.pv.textures_size.x, (points.length / rows_count)\n\t\t// ))\n\t\tlet p = 0;\n\t\tvar cmptr = 0;\n\t\tfor (var j = 0; j < this._used_textures_size.x; j++) {\n\t\t\tfor (var i = 0; i < this._used_textures_size.y; i++) {\n\t\t\t\tuvs[p++] = i / (this._used_textures_size.x - 1);\n\t\t\t\tuvs[p++] = j / (this._used_textures_size.y - 1);\n\n\t\t\t\tcmptr += 2;\n\t\t\t\tif (cmptr >= uvs.length) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst uv_attrib_name = GlobalsTextureHandler.UV_ATTRIB;\n\t\tif (this._particles_core_group) {\n\t\t\tfor (let core_geometry of this._particles_core_group.core_geometries()) {\n\t\t\t\t// geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\t\t\t\tconst geometry = core_geometry.geometry();\n\t\t\t\tconst attribute_constructor = core_geometry.marked_as_instance()\n\t\t\t\t\t? InstancedBufferAttribute\n\t\t\t\t\t: BufferAttribute;\n\t\t\t\tgeometry.setAttribute(uv_attrib_name, new attribute_constructor(uvs, 2));\n\t\t\t}\n\t\t}\n\t}\n\n\tcreated_textures_by_name() {\n\t\treturn this._created_textures_by_name;\n\t}\n\n\tprivate _fill_textures() {\n\t\tthis._created_textures_by_name.forEach((texture, shader_name) => {\n\t\t\tconst assembler = this.node.assembler_controller.assembler;\n\t\t\tconst texture_allocations_controller = assembler.texture_allocations_controller;\n\n\t\t\tconst texture_allocation = texture_allocations_controller.allocation_for_shader_name(shader_name);\n\t\t\tif (!texture_allocation) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst texture_variables = texture_allocation.variables;\n\t\t\tif (!texture_variables) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst array = texture.image.data;\n\n\t\t\tfor (let texture_variable of texture_variables) {\n\t\t\t\tconst texture_position = texture_variable.position;\n\t\t\t\tlet variable_name = texture_variable.name;\n\t\t\t\t// if(this._use_instancing){\n\t\t\t\t// \tvariable_name = GlobalsTextureHandler.variable_name_to_instance_attrib(variable_name)\n\t\t\t\t// }\n\n\t\t\t\tconst first_point = this._points[0];\n\t\t\t\tif (first_point) {\n\t\t\t\t\tconst has_attrib = first_point.has_attrib(variable_name);\n\t\t\t\t\tif (has_attrib) {\n\t\t\t\t\t\tconst attrib_size = first_point.attrib_size(variable_name);\n\t\t\t\t\t\tlet cmptr = texture_position;\n\t\t\t\t\t\tfor (let point of this._points) {\n\t\t\t\t\t\t\tif (attrib_size == 1) {\n\t\t\t\t\t\t\t\tconst val = point.attrib_value(variable_name);\n\t\t\t\t\t\t\t\tarray[cmptr] = val;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpoint.attrib_value(variable_name).toArray(array, cmptr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcmptr += 4;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// var posArray = texture_P.image.data;\n\t\t// var velArray = texture_v.image.data;\n\n\t\t// let cmptr = 0\n\t\t// for(let point of points){\n\t\t// \tpoint.position().toArray(posArray, cmptr)\n\t\t// \tposArray[ cmptr + 3 ] = 1;\n\t\t// \tcmptr += 4\n\t\t// }\n\t}\n\n\treset_gpu_compute() {\n\t\tthis._gpu_compute = undefined;\n\t\tthis._simulation_restart_required = true;\n\t}\n\tset_restart_not_required() {\n\t\tthis._simulation_restart_required = false;\n\t}\n\treset_gpu_compute_and_set_dirty() {\n\t\tthis.reset_gpu_compute();\n\t\tthis.node.set_dirty();\n\t}\n\treset_particle_groups() {\n\t\t// this._particles_group = null\n\t\t// this._particles_group_objects = [];\n\t\tthis._particles_core_group = undefined;\n\t}\n\tget initialized(): boolean {\n\t\treturn this._particles_core_group != null && this._gpu_compute != null;\n\t}\n\t// private _force_compute(){\n\t// \tthis.self.run_assembler()\n\t// }\n\n\tprivate _create_texture_render_targets() {\n\t\tthis._created_textures_by_name.forEach((texture, shader_name) => {\n\t\t\ttexture.dispose();\n\t\t});\n\n\t\tthis._created_textures_by_name.clear();\n\t\tthis.variables_by_name.forEach((texture_variable, shader_name) => {\n\t\t\tif (this._gpu_compute) {\n\t\t\t\tthis._created_textures_by_name.set(shader_name, this._gpu_compute.createTexture());\n\t\t\t}\n\t\t});\n\t}\n\trestart_simulation_if_required() {\n\t\tif (this._simulation_restart_required) {\n\t\t\tthis._restart_simulation();\n\t\t}\n\t}\n\tprivate _restart_simulation() {\n\t\tthis._last_simulated_frame = undefined;\n\n\t\tthis._create_texture_render_targets();\n\t\tconst points = this._get_points(); // TODO: typescript - not sure that's right\n\t\tif (!points) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._fill_textures();\n\n\t\t// for (let variable_name of Object.keys(this.variables_by_name)) {\n\t\tthis.variables_by_name.forEach((variable, shader_name) => {\n\t\t\tconst texture = this._created_textures_by_name.get(shader_name);\n\t\t\tif (this._gpu_compute && texture) {\n\t\t\t\tthis._gpu_compute.renderTexture(texture, variable.renderTargets[0]);\n\t\t\t\tthis._gpu_compute.renderTexture(texture, variable.renderTargets[1]);\n\t\t\t}\n\t\t});\n\t}\n\n\t// if we have a mix of marked_as_instance and non marked_as_instance\n\t// we take all geos that are the type that comes first\n\tprivate _get_points() {\n\t\tif (!this._particles_core_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet geometries = this._particles_core_group.core_geometries();\n\t\tconst first_geometry = geometries[0];\n\t\tif (first_geometry) {\n\t\t\tconst type = first_geometry.marked_as_instance();\n\t\t\t// this._use_instancing = type\n\t\t\tconst selected_geometries = [];\n\t\t\tfor (let geometry of geometries) {\n\t\t\t\tif (geometry.marked_as_instance() == type) {\n\t\t\t\t\tselected_geometries.push(geometry);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst points = [];\n\t\t\tfor (let geometry of selected_geometries) {\n\t\t\t\tfor (let point of geometry.points()) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn points;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n}\n","/**\n * @author yomboprime https://github.com/yomboprime\n *\n * GPUComputationRenderer, based on SimulationRenderer by zz85\n *\n * The GPUComputationRenderer uses the concept of variables. These variables are RGBA float textures that hold 4 floats\n * for each compute element (texel)\n *\n * Each variable has a fragment shader that defines the computation made to obtain the variable in question.\n * You can use as many variables you need, and make dependencies so you can use textures of other variables in the shader\n * (the sampler uniforms are added automatically) Most of the variables will need themselves as dependency.\n *\n * The renderer has actually two render targets per variable, to make ping-pong. Textures from the current frame are used\n * as inputs to render the textures of the next frame.\n *\n * The render targets of the variables can be used as input textures for your visualization shaders.\n *\n * Variable names should be valid identifiers and should not collide with THREE GLSL used identifiers.\n * a common approach could be to use 'texture' prefixing the variable name; i.e texturePosition, textureVelocity...\n *\n * The size of the computation (sizeX * sizeY) is defined as 'resolution' automatically in the shader. For example:\n * #DEFINE resolution vec2( 1024.0, 1024.0 )\n *\n * -------------\n *\n * Basic use:\n *\n * // Initialization...\n *\n * // Create computation renderer\n * var gpuCompute = new GPUComputationRenderer( 1024, 1024, renderer );\n *\n * // Create initial state float textures\n * var pos0 = gpuCompute.createTexture();\n * var vel0 = gpuCompute.createTexture();\n * // and fill in here the texture data...\n *\n * // Add texture variables\n * var velVar = gpuCompute.addVariable( \"textureVelocity\", fragmentShaderVel, pos0 );\n * var posVar = gpuCompute.addVariable( \"texturePosition\", fragmentShaderPos, vel0 );\n *\n * // Add variable dependencies\n * gpuCompute.setVariableDependencies( velVar, [ velVar, posVar ] );\n * gpuCompute.setVariableDependencies( posVar, [ velVar, posVar ] );\n *\n * // Add custom uniforms\n * velVar.material.uniforms.time = { value: 0.0 };\n *\n * // Check for completeness\n * var error = gpuCompute.init();\n * if ( error !== null ) {\n *\t\tconsole.error( error );\n  * }\n *\n *\n * // In each frame...\n *\n * // Compute!\n * gpuCompute.compute();\n *\n * // Update texture uniforms in your visualization materials with the gpu renderer output\n * myMaterial.uniforms.myTexture.value = gpuCompute.getCurrentRenderTarget( posVar ).texture;\n *\n * // Do your rendering\n * renderer.render( myScene, myCamera );\n *\n * -------------\n *\n * Also, you can use utility functions to create ShaderMaterial and perform computations (rendering between textures)\n * Note that the shaders can have multiple input textures.\n *\n * var myFilter1 = gpuCompute.createShaderMaterial( myFilterFragmentShader1, { theTexture: { value: null } } );\n * var myFilter2 = gpuCompute.createShaderMaterial( myFilterFragmentShader2, { theTexture: { value: null } } );\n *\n * var inputTexture = gpuCompute.createTexture();\n *\n * // Fill in here inputTexture...\n *\n * myFilter1.uniforms.theTexture.value = inputTexture;\n *\n * var myRenderTarget = gpuCompute.createRenderTarget();\n * myFilter2.uniforms.theTexture.value = myRenderTarget.texture;\n *\n * var outputRenderTarget = gpuCompute.createRenderTarget();\n *\n * // Now use the output texture where you want:\n * myMaterial.uniforms.map.value = outputRenderTarget.texture;\n *\n * // And compute each frame, before rendering to screen:\n * gpuCompute.doRenderTarget( myFilter1, myRenderTarget );\n * gpuCompute.doRenderTarget( myFilter2, outputRenderTarget );\n *\n *\n *\n * @param {int} sizeX Computation problem size is always 2d: sizeX * sizeY elements.\n * @param {int} sizeY Computation problem size is always 2d: sizeX * sizeY elements.\n * @param {WebGLRenderer} renderer The renderer\n*/\n\nimport {Camera} from 'three/src/cameras/Camera'\nimport {ClampToEdgeWrapping, FloatType, HalfFloatType, NearestFilter, RGBAFormat} from 'three/src/constants'\nimport {DataTexture} from 'three/src/textures/DataTexture'\nimport {Mesh} from 'three/src/objects/Mesh'\nimport {PlaneBufferGeometry} from 'three/src/geometries/PlaneGeometry'\nimport {Scene} from 'three/src/scenes/Scene'\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial'\nimport {WebGLRenderTarget} from 'three/src/renderers/WebGLRenderTarget'\n// const THREE = {Camera, ClampToEdgeWrapping, FloatType, HalfFloatType, NearestFilter, RGBAFormat, DataTexture, mesh, PlaneBufferGeometry, Scene, ShaderMaterial, WebGLRenderTarget}\n\nvar GPUComputationRenderer = function ( sizeX, sizeY, renderer ) {\n\n\tthis.variables = [];\n\n\tthis.currentTextureIndex = 0;\n\n\tvar scene = new Scene();\n\n\tvar camera = new Camera();\n\tcamera.position.z = 1;\n\n\tvar passThruUniforms = {\n\t\tpassThruTexture: { value: null }\n\t};\n\n\tvar passThruShader = createShaderMaterial( getPassThroughFragmentShader(), passThruUniforms );\n\n\tvar mesh = new Mesh( new PlaneBufferGeometry( 2, 2 ), passThruShader );\n\tscene.add( mesh );\n\n\n\tthis.addVariable = function ( variableName, computeFragmentShader, initialValueTexture ) {\n\n\t\tvar material = this.createShaderMaterial( computeFragmentShader );\n\n\t\tvar variable = {\n\t\t\tname: variableName,\n\t\t\tinitialValueTexture: initialValueTexture,\n\t\t\tmaterial: material,\n\t\t\tdependencies: null,\n\t\t\trenderTargets: [],\n\t\t\twrapS: null,\n\t\t\twrapT: null,\n\t\t\tminFilter: NearestFilter,\n\t\t\tmagFilter: NearestFilter\n\t\t};\n\n\t\tthis.variables.push( variable );\n\n\t\treturn variable;\n\n\t};\n\n\tthis.setVariableDependencies = function ( variable, dependencies ) {\n\n\t\tvariable.dependencies = dependencies;\n\n\t};\n\n\tthis.init = function () {\n\n\t\tif ( ! renderer.capabilities.isWebGL2 &&\n\t\t\t ! renderer.extensions.get( \"OES_texture_float\" ) ) {\n\n\t\t\treturn \"No OES_texture_float support for float textures.\";\n\n\t\t}\n\n\t\tif ( renderer.capabilities.maxVertexTextures === 0 ) {\n\n\t\t\treturn \"No support for vertex shader textures.\";\n\n\t\t}\n\n\t\tfor ( var i = 0; i < this.variables.length; i ++ ) {\n\n\t\t\tvar variable = this.variables[ i ];\n\n\t\t\t// Creates rendertargets and initialize them with input texture\n\t\t\tvariable.renderTargets[ 0 ] = this.createRenderTarget( sizeX, sizeY, variable.wrapS, variable.wrapT, variable.minFilter, variable.magFilter );\n\t\t\tvariable.renderTargets[ 1 ] = this.createRenderTarget( sizeX, sizeY, variable.wrapS, variable.wrapT, variable.minFilter, variable.magFilter );\n\t\t\tthis.renderTexture( variable.initialValueTexture, variable.renderTargets[ 0 ] );\n\t\t\tthis.renderTexture( variable.initialValueTexture, variable.renderTargets[ 1 ] );\n\n\t\t\t// Adds dependencies uniforms to the ShaderMaterial\n\t\t\tvar material = variable.material;\n\t\t\tvar uniforms = material.uniforms;\n\t\t\tif ( variable.dependencies !== null ) {\n\n\t\t\t\tfor ( var d = 0; d < variable.dependencies.length; d ++ ) {\n\n\t\t\t\t\tvar depVar = variable.dependencies[ d ];\n\n\t\t\t\t\tif ( depVar.name !== variable.name ) {\n\n\t\t\t\t\t\t// Checks if variable exists\n\t\t\t\t\t\tvar found = false;\n\t\t\t\t\t\tfor ( var j = 0; j < this.variables.length; j ++ ) {\n\n\t\t\t\t\t\t\tif ( depVar.name === this.variables[ j ].name ) {\n\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ! found ) {\n\n\t\t\t\t\t\t\treturn \"Variable dependency not found. Variable=\" + variable.name + \", dependency=\" + depVar.name;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms[ depVar.name ] = { value: null };\n\n\t\t\t\t\t// material.fragmentShader = \"\\nuniform sampler2D \" + depVar.name + \";\\n\" + material.fragmentShader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.currentTextureIndex = 0;\n\n\t\treturn null;\n\n\t};\n\n\tthis.compute = function () {\n\n\t\tvar currentTextureIndex = this.currentTextureIndex;\n\t\tvar nextTextureIndex = this.currentTextureIndex === 0 ? 1 : 0;\n\n\t\tfor ( var i = 0, il = this.variables.length; i < il; i ++ ) {\n\n\t\t\tvar variable = this.variables[ i ];\n\n\t\t\t// Sets texture dependencies uniforms\n\t\t\tif ( variable.dependencies !== null ) {\n\n\t\t\t\tvar uniforms = variable.material.uniforms;\n\t\t\t\tfor ( var d = 0, dl = variable.dependencies.length; d < dl; d ++ ) {\n\n\t\t\t\t\tvar depVar = variable.dependencies[ d ];\n\n\t\t\t\t\tuniforms[ depVar.name ].value = depVar.renderTargets[ currentTextureIndex ].texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Performs the computation for this variable\n\t\t\tthis.doRenderTarget( variable.material, variable.renderTargets[ nextTextureIndex ] );\n\n\t\t}\n\n\t\tthis.currentTextureIndex = nextTextureIndex;\n\n\t};\n\n\tthis.getCurrentRenderTarget = function ( variable ) {\n\n\t\treturn variable.renderTargets[ this.currentTextureIndex ];\n\n\t};\n\n\tthis.getAlternateRenderTarget = function ( variable ) {\n\n\t\treturn variable.renderTargets[ this.currentTextureIndex === 0 ? 1 : 0 ];\n\n\t};\n\n\tfunction addResolutionDefine( materialShader ) {\n\n\t\tmaterialShader.defines.resolution = 'vec2( ' + sizeX.toFixed( 1 ) + ', ' + sizeY.toFixed( 1 ) + \" )\";\n\n\t}\n\tthis.addResolutionDefine = addResolutionDefine;\n\n\n\t// The following functions can be used to compute things manually\n\n\tfunction createShaderMaterial( computeFragmentShader, uniforms ) {\n\n\t\tuniforms = uniforms || {};\n\n\t\tvar material = new ShaderMaterial( {\n\t\t\tuniforms: uniforms,\n\t\t\tvertexShader: getPassThroughVertexShader(),\n\t\t\tfragmentShader: computeFragmentShader\n\t\t} );\n\n\t\taddResolutionDefine( material );\n\n\t\treturn material;\n\n\t}\n\n\tthis.createShaderMaterial = createShaderMaterial;\n\n\tthis.createRenderTarget = function ( sizeXTexture, sizeYTexture, wrapS, wrapT, minFilter, magFilter ) {\n\n\t\tsizeXTexture = sizeXTexture || sizeX;\n\t\tsizeYTexture = sizeYTexture || sizeY;\n\n\t\twrapS = wrapS || ClampToEdgeWrapping;\n\t\twrapT = wrapT || ClampToEdgeWrapping;\n\n\t\tminFilter = minFilter || NearestFilter;\n\t\tmagFilter = magFilter || NearestFilter;\n\n\t\tvar renderTarget = new WebGLRenderTarget( sizeXTexture, sizeYTexture, {\n\t\t\twrapS: wrapS,\n\t\t\twrapT: wrapT,\n\t\t\tminFilter: minFilter,\n\t\t\tmagFilter: magFilter,\n\t\t\tformat: RGBAFormat,\n\t\t\ttype: ( /(iPad|iPhone|iPod)/g.test( navigator.userAgent ) ) ? HalfFloatType : FloatType,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthBuffer: false\n\t\t} );\n\n\t\treturn renderTarget;\n\n\t};\n\n\tthis.createTexture = function () {\n\n\t\tvar data = new Float32Array( sizeX * sizeY * 4 );\n\t\treturn new DataTexture( data, sizeX, sizeY, RGBAFormat, FloatType );\n\n\t};\n\n\tthis.renderTexture = function ( input, output ) {\n\n\t\t// Takes a texture, and render out in rendertarget\n\t\t// input = Texture\n\t\t// output = RenderTarget\n\n\t\tpassThruUniforms.passThruTexture.value = input;\n\n\t\tthis.doRenderTarget( passThruShader, output );\n\n\t\tpassThruUniforms.passThruTexture.value = null;\n\n\t};\n\n\tthis.doRenderTarget = function ( material, output ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tmesh.material = material;\n\t\trenderer.setRenderTarget( output );\n\t\trenderer.render( scene, camera );\n\t\tmesh.material = passThruShader;\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\t// Shaders\n\n\tfunction getPassThroughVertexShader() {\n\n\t\treturn\t\"void main()\t{\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"\tgl_Position = vec4( position, 1.0 );\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"}\\n\";\n\n\t}\n\n\tfunction getPassThroughFragmentShader() {\n\n\t\treturn\t\"uniform sampler2D passThruTexture;\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"void main() {\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"\tvec2 uv = gl_FragCoord.xy / resolution.xy;\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"\tgl_FragColor = texture2D( passThruTexture, uv );\\n\" +\n\t\t\t\t\"\\n\" +\n\t\t\t\t\"}\\n\";\n\n\t}\n\n};\n\nexport { GPUComputationRenderer };\n","import {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {TypedSopNode} from './_Base';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Mesh} from 'three/src/objects/Mesh';\n\nconst POSITION = 'position';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass PeakSopParamsConfig extends NodeParamsConfig {\n\tamount = ParamConfig.FLOAT(1, {range: [-1, 1]});\n}\nconst ParamsConfig = new PeakSopParamsConfig();\n\nexport class PeakSopNode extends TypedSopNode<PeakSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'peak';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tlet core_geometry, point;\n\t\tfor (let object of core_group.objects()) {\n\t\t\tobject.traverse((child_object) => {\n\t\t\t\tlet geometry;\n\t\t\t\tif ((geometry = (child_object as Mesh).geometry as BufferGeometry) != null) {\n\t\t\t\t\tcore_geometry = new CoreGeometry(geometry);\n\t\t\t\t\tfor (point of core_geometry.points()) {\n\t\t\t\t\t\tconst normal = point.normal();\n\t\t\t\t\t\tconst position = point.position();\n\t\t\t\t\t\tconst new_position = position.clone().add(normal.multiplyScalar(this.pv.amount));\n\t\t\t\t\t\tpoint.set_position(new_position);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.io.inputs.input_cloned(0)) {\n\t\t\t\t\t\tconst attrib = core_geometry.geometry().getAttribute(POSITION) as BufferAttribute;\n\t\t\t\t\t\tattrib.needsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.set_core_group(core_group);\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {PlaneBufferGeometry} from 'three/src/geometries/PlaneGeometry';\nimport {TypedSopNode} from './_Base';\nimport {CoreTransform} from '../../../core/Transform';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nconst DEFAULT_UP = new Vector3(0, 0, 1);\nconst ROTATE_START = new Vector3(0, 0, 1);\nconst ROTATE_END = new Vector3(0, 1, 0);\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass PlaneSopParamsConfig extends NodeParamsConfig {\n\tsize = ParamConfig.VECTOR2([1, 1]);\n\tuse_segments_count = ParamConfig.BOOLEAN(0);\n\tstep_size = ParamConfig.FLOAT(1, {visible_if: {use_segments_count: 0}});\n\tsegments = ParamConfig.VECTOR2([1, 1], {visible_if: {use_segments_count: 1}});\n\tdirection = ParamConfig.VECTOR3([0, 1, 0]);\n\tcenter = ParamConfig.VECTOR3([0, 0, 0]);\n}\nconst ParamsConfig = new PlaneSopParamsConfig();\n\nexport class PlaneSopNode extends TypedSopNode<PlaneSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'plane';\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to create plane from (optional)'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tif (core_group) {\n\t\t\tthis._cook_with_input(core_group);\n\t\t} else {\n\t\t\tthis._cook_without_input();\n\t\t}\n\t}\n\t_cook_without_input() {\n\t\tconst geometry = this._create_plane(this.pv.size);\n\n\t\t// convert to buffer geo, as some render problems can occur otherwise\n\t\t// geometry = BufferGeometryUtils.mergeBufferGeometries([geometry])\n\t\t// console.log(geometry, geometry.isBufferGeometry)\n\t\tthis._core_transform.rotate_geometry(geometry, DEFAULT_UP, this.pv.direction);\n\n\t\tconst matrix = this._core_transform.translation_matrix(this.pv.center);\n\t\tgeometry.applyMatrix4(matrix);\n\n\t\tthis.set_geometry(geometry);\n\t}\n\t_cook_with_input(core_group: CoreGroup) {\n\t\tconst bbox = core_group.bounding_box();\n\t\tconst size = new Vector3();\n\t\tbbox.getSize(size);\n\t\tconst center = new Vector3();\n\t\tbbox.getCenter(center);\n\n\t\t// TODO: rotate the input geo to get the accurate bbox\n\t\tconst size2d = new Vector2(size.x, size.z);\n\t\tconst geometry = this._create_plane(size2d);\n\n\t\tthis._core_transform.rotate_geometry(geometry, ROTATE_START, ROTATE_END);\n\n\t\tconst matrix = this._core_transform.translation_matrix(center);\n\t\tgeometry.applyMatrix4(matrix);\n\n\t\t// const buffer_geometry = CoreGeometry.clone(geometry);\n\t\tthis.set_geometry(geometry);\n\t}\n\n\t_create_plane(size: Vector2) {\n\t\tlet segments_count;\n\t\tsize = size.clone();\n\t\tif (this.pv.use_segments_count) {\n\t\t\tsegments_count = {\n\t\t\t\tx: Math.floor(this.pv.segments.x),\n\t\t\t\ty: Math.floor(this.pv.segments.y),\n\t\t\t};\n\t\t} else {\n\t\t\tsegments_count = {\n\t\t\t\tx: Math.floor(size.x / this.pv.step_size),\n\t\t\t\ty: Math.floor(size.y / this.pv.step_size),\n\t\t\t};\n\t\t\tsize.x = segments_count.x * this.pv.step_size;\n\t\t\tsize.y = segments_count.y * this.pv.step_size;\n\t\t}\n\t\treturn new PlaneBufferGeometry(size.x, size.y, segments_count.x, segments_count.y);\n\t}\n}\n","// import lodash_map from 'lodash/map'\n\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreObject} from '../../../core/geometry/Object';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {BooleanParam} from '../../params/Boolean';\nimport {FloatParam} from '../../params/Float';\n\nconst POSITION_ATTRIB_NAME = 'position';\n\ntype ValueArrayByName = Map<string, number[]>;\ntype ComponentOffset = 0 | 1 | 2;\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass PointSopParamsConfig extends NodeParamsConfig {\n\tupdate_x = ParamConfig.BOOLEAN(0);\n\tx = ParamConfig.FLOAT('@P.x', {\n\t\tvisible_if: {update_x: 1},\n\t\texpression: {for_entities: true},\n\t});\n\tupdate_y = ParamConfig.BOOLEAN(0);\n\ty = ParamConfig.FLOAT('@P.y', {\n\t\tvisible_if: {update_y: 1},\n\t\texpression: {for_entities: true},\n\t});\n\tupdate_z = ParamConfig.BOOLEAN(0);\n\tz = ParamConfig.FLOAT('@P.z', {\n\t\tvisible_if: {update_z: 1},\n\t\texpression: {for_entities: true},\n\t});\n\tupdate_normals = ParamConfig.BOOLEAN(1);\n}\nconst ParamsConfig = new PointSopParamsConfig();\n\nexport class PointSopNode extends TypedSopNode<PointSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'point';\n\t}\n\n\tprivate _x_arrays_by_geometry_uuid: ValueArrayByName = new Map();\n\tprivate _y_arrays_by_geometry_uuid: ValueArrayByName = new Map();\n\tprivate _z_arrays_by_geometry_uuid: ValueArrayByName = new Map();\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['points to move'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t\t// this.ui_data.set_icon('dot-circle');\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tawait this._eval_expressions_for_core_group(core_group);\n\t}\n\n\t// group.traverse (object)=>\n\t// \tif (geometry = object.geometry)?\n\t// \t\tthis._eval_expressions(geometry)\n\t// \t\tgeometry.computeVertexNormals()\n\n\tasync _eval_expressions_for_core_group(core_group: CoreGroup) {\n\t\tconst core_objects = core_group.core_objects();\n\t\t// this._allocate_arrays(core_objects)\n\n\t\tfor (let i = 0; i < core_objects.length; i++) {\n\t\t\tawait this._eval_expressions_for_core_object(core_objects[i]);\n\t\t}\n\n\t\tif (this.pv.update_normals) {\n\t\t\tcore_group.compute_vertex_normals();\n\t\t}\n\n\t\tconst geometries = core_group.geometries();\n\t\tfor (let geometry of geometries) {\n\t\t\tgeometry.computeBoundingBox();\n\t\t}\n\n\t\t// needs update required for when no cloning\n\t\tif (!this.io.inputs.input_cloned(0)) {\n\t\t\tconst geometries = core_group.geometries();\n\t\t\tfor (let geometry of geometries) {\n\t\t\t\tconst attrib = geometry.getAttribute(POSITION_ATTRIB_NAME) as BufferAttribute;\n\t\t\t\tattrib.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\tasync _eval_expressions_for_core_object(core_object: CoreObject) {\n\t\tconst object = core_object.object();\n\t\tconst geometry = (object as Mesh).geometry as BufferGeometry;\n\t\tconst points = core_object.points();\n\n\t\tconst array = geometry.getAttribute(POSITION_ATTRIB_NAME).array as number[];\n\n\t\tconst tmp_array_x = await this._update_from_param(\n\t\t\tgeometry,\n\t\t\tarray,\n\t\t\tpoints,\n\t\t\tthis.p.update_x,\n\t\t\tthis.p.x,\n\t\t\tthis.pv.x,\n\t\t\tthis._x_arrays_by_geometry_uuid,\n\t\t\t0\n\t\t);\n\t\tconst tmp_array_y = await this._update_from_param(\n\t\t\tgeometry,\n\t\t\tarray,\n\t\t\tpoints,\n\t\t\tthis.p.update_y,\n\t\t\tthis.p.y,\n\t\t\tthis.pv.y,\n\t\t\tthis._y_arrays_by_geometry_uuid,\n\t\t\t1\n\t\t);\n\t\tconst tmp_array_z = await this._update_from_param(\n\t\t\tgeometry,\n\t\t\tarray,\n\t\t\tpoints,\n\t\t\tthis.p.update_z,\n\t\t\tthis.p.z,\n\t\t\tthis.pv.z,\n\t\t\tthis._z_arrays_by_geometry_uuid,\n\t\t\t2\n\t\t);\n\n\t\tif (tmp_array_x) {\n\t\t\tthis._commit_tmp_values(tmp_array_x, array, 0);\n\t\t}\n\t\tif (tmp_array_y) {\n\t\t\tthis._commit_tmp_values(tmp_array_y, array, 1);\n\t\t}\n\t\tif (tmp_array_z) {\n\t\t\tthis._commit_tmp_values(tmp_array_z, array, 2);\n\t\t}\n\t}\n\n\tprivate async _update_from_param(\n\t\tgeometry: BufferGeometry,\n\t\tarray: number[],\n\t\tpoints: CorePoint[],\n\t\tdo_update_param: BooleanParam,\n\t\tvalue_param: FloatParam,\n\t\tparam_value: number,\n\t\tarrays_by_geometry_uuid: ValueArrayByName,\n\t\toffset: ComponentOffset\n\t) {\n\t\tconst do_update = do_update_param;\n\t\tconst param = value_param;\n\n\t\tlet tmp_array = this._init_array_if_required(geometry, arrays_by_geometry_uuid, points.length, offset);\n\t\tif (do_update.value) {\n\t\t\tif (param.has_expression() && param.expression_controller) {\n\t\t\t\tawait param.expression_controller.compute_expression_for_points(points, (point, value) => {\n\t\t\t\t\ttmp_array[point.index] = value;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet point;\n\t\t\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\ttmp_array[point.index] = param_value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tmp_array;\n\t}\n\n\tprivate _init_array_if_required(\n\t\tgeometry: BufferGeometry,\n\t\tarrays_by_geometry_uuid: ValueArrayByName,\n\t\tpoints_count: number,\n\t\toffset: ComponentOffset\n\t) {\n\t\tconst uuid = geometry.uuid;\n\t\tconst current_array = arrays_by_geometry_uuid.get(uuid);\n\t\tif (current_array) {\n\t\t\t// only create new array if we need more point, or as soon as the length is different?\n\t\t\tif (current_array.length < points_count) {\n\t\t\t\tconst new_array = this._array_for_component(geometry, points_count, offset);\n\t\t\t\tarrays_by_geometry_uuid.set(uuid, new_array);\n\t\t\t\treturn new_array;\n\t\t\t} else {\n\t\t\t\treturn current_array;\n\t\t\t}\n\t\t} else {\n\t\t\tconst new_array = this._array_for_component(geometry, points_count, offset);\n\t\t\tarrays_by_geometry_uuid.set(uuid, new_array);\n\t\t\treturn new_array;\n\t\t}\n\t}\n\n\tprivate _array_for_component(geometry: BufferGeometry, points_count: number, offset: ComponentOffset) {\n\t\tconst new_array = new Array<number>(points_count);\n\t\tconst src_array = geometry.getAttribute(POSITION_ATTRIB_NAME).array;\n\t\tfor (let i = 0; i < new_array.length; i++) {\n\t\t\tnew_array[i] = src_array[i * 3 + offset];\n\t\t}\n\t\treturn new_array;\n\t}\n\n\tprivate _commit_tmp_values(tmp_array: number[], target_array: number[], offset: number) {\n\t\tfor (let i = 0; i < tmp_array.length; i++) {\n\t\t\ttarget_array[i * 3 + offset] = tmp_array[i];\n\t\t}\n\t}\n}\n","import {TypedSopNode} from './_Base';\nimport {CoreGeometry} from '../../../core/geometry/Geometry';\nimport {CoreTransform} from '../../../core/Transform';\nimport {CoreGeometryUtilCircle} from '../../../core/geometry/util/Circle';\nimport {CoreGeometryUtilCurve} from '../../../core/geometry/util/Curve';\nimport {CoreGeometryOperationSkin} from '../../../core/geometry/operation/Skin';\n\nimport {Vector3} from 'three/src/math/Vector3';\n// import {TubeBufferGeometry} from 'three/src/geometries/TubeGeometry';\nimport {LineSegments} from 'three/src/objects/LineSegments';\n// import {CatmullRomCurve3} from 'three/src/extras/curves/CatmullRomCurve3';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nconst DEFAULT_R = new Vector3(0, 0, 0);\nconst DEFAULT_S = new Vector3(1, 1, 1);\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CorePoint} from '../../../core/geometry/Point';\nclass PolywireSopParamsConfig extends NodeParamsConfig {\n\tradius = ParamConfig.FLOAT(1);\n\tsegments_radial = ParamConfig.INTEGER(8, {\n\t\trange: [3, 20],\n\t\trange_locked: [true, false],\n\t});\n\tclosed = ParamConfig.BOOLEAN(0);\n}\nconst ParamsConfig = new PolywireSopParamsConfig();\n\nexport class PolywireSopNode extends TypedSopNode<PolywireSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'polywire';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['lines to create tubes from'];\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\t}\n\n\tprivate _geometries: BufferGeometry[] = [];\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tthis._geometries = [];\n\t\tfor (let object of core_group.objects()) {\n\t\t\tif (object instanceof LineSegments) {\n\t\t\t\tthis._create_tube(object);\n\t\t\t}\n\t\t}\n\n\t\t//if @_param_merge\n\t\t//geometries = lodash_map @_geometries, (object)->object.geometry\n\t\tconst merged_geometry = CoreGeometry.merge_geometries(this._geometries);\n\t\tfor (let geometry of this._geometries) {\n\t\t\tgeometry.dispose();\n\t\t}\n\t\tif (merged_geometry) {\n\t\t\tconst object = this.create_object(merged_geometry);\n\n\t\t\tthis.set_object(object);\n\t\t} else {\n\t\t\tthis.set_objects([]);\n\t\t}\n\t}\n\t//else\n\t//\tthis.set_objects( @_objects )\n\n\t_create_tube(line_segment: LineSegments) {\n\t\tconst geometry = line_segment.geometry as BufferGeometry;\n\t\tconst wrapper = new CoreGeometry(geometry);\n\t\tconst points = wrapper.points();\n\t\tconst indices = geometry.getIndex()?.array as number[];\n\n\t\tconst accumulated_curve_point_indices = CoreGeometryUtilCurve.accumulated_curve_point_indices(indices);\n\n\t\tfor (let curve_point_indices of accumulated_curve_point_indices) {\n\t\t\tconst current_points = curve_point_indices.map((index) => points[index]);\n\t\t\tthis._create_tube_from_points(current_points);\n\t\t}\n\t}\n\n\t_create_tube_from_points(points: CorePoint[]) {\n\t\tif (points.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst positions = points.map((point) => point.attrib_value('position'));\n\n\t\tconst circle_template = CoreGeometryUtilCircle.create(this.pv.radius, this.pv.segments_radial);\n\t\tconst circles: BufferGeometry[] = [];\n\t\tconst scale = 1;\n\t\tfor (let position of positions) {\n\t\t\tconst t = position;\n\t\t\tconst matrix = this._core_transform.matrix(t, DEFAULT_R, DEFAULT_S, scale);\n\n\t\t\tconst new_circle = circle_template.clone();\n\t\t\tnew_circle.applyMatrix4(matrix);\n\t\t\tcircles.push(new_circle);\n\t\t}\n\n\t\tfor (let i = 0; i < circles.length; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\tconst circle = circles[i];\n\t\t\t\tconst prev_circle = circles[i - 1];\n\n\t\t\t\tconst geometry = this._skin(prev_circle, circle);\n\t\t\t\tthis._geometries.push(geometry);\n\t\t\t}\n\t\t}\n\t}\n\n\t//this.set_geometries(circles, Core.Geometry.Constant.OBJECT_TYPE.LINE_SEGMENTS)\n\n\t// curve = new CatmullRomCurve3(positions)\n\t// segments_count = positions.length-1\n\n\t// geometry = new TubeBufferGeometry(\n\t// \tcurve,\n\t// \tsegments_count,\n\t// \t@_param_radius,\n\t// \t@_param_segments_radial,\n\t// \t@_param_closed\n\t// \t)\n\n\t// object = this.create_object(geometry)\n\t// @_objects.push(object)\n\t_skin(geometry1: BufferGeometry, geometry0: BufferGeometry) {\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst operation = new CoreGeometryOperationSkin(geometry, geometry1, geometry0);\n\t\toperation.process();\n\n\t\treturn geometry;\n\t}\n}\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Raycaster, Intersection} from 'three/src/core/Raycaster';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {DoubleSide} from 'three/src/constants';\n\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\nconst MAT_DOUBLE_SIDED = new MeshBasicMaterial({\n\tside: DoubleSide,\n});\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass RaySopParamsConfig extends NodeParamsConfig {\n\tuse_normals = ParamConfig.BOOLEAN(1);\n\tdirection = ParamConfig.VECTOR3([0, -1, 0], {\n\t\tvisible_if: {use_normals: 0},\n\t});\n\ttransfer_face_normals = ParamConfig.BOOLEAN(1);\n}\nconst ParamsConfig = new RaySopParamsConfig();\n\nexport class RaySopNode extends TypedSopNode<RaySopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'ray';\n\t}\n\n\t// _material_by_object_uuid: MaterialByString\n\tprivate _bound_assign_mat = this._assign_double_sided_material_to_object.bind(this); //(Object3D)=>void;\n\tprivate _raycaster = new Raycaster();\n\n\tstatic double_sided_material() {\n\t\treturn MAT_DOUBLE_SIDED;\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to move', 'geometry to ray onto'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(2);\n\t\tthis.io.inputs.init_inputs_clonable_state([\n\t\t\tInputCloneMode.FROM_NODE,\n\t\t\tInputCloneMode.ALWAYS, // to assign double sided mat\n\t\t]);\n\t}\n\n\tcreate_params() {}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tconst core_group_collision = input_contents[1];\n\n\t\tthis.ray(core_group, core_group_collision);\n\t}\n\n\tray(core_group: CoreGroup, core_group_collision: CoreGroup) {\n\t\t// this._material_by_object_uuid = {}\n\t\tthis._assign_double_sided_material_to_core_group(core_group_collision);\n\n\t\tlet direction: Vector3, first_intersect: Intersection;\n\t\tfor (let point of core_group.points()) {\n\t\t\tdirection = this.pv.use_normals ? point.normal() : this.pv.direction;\n\t\t\tthis._raycaster.set(point.position(), direction);\n\n\t\t\tfirst_intersect = this._raycaster.intersectObjects(core_group_collision.objects(), true)[0];\n\t\t\tif (first_intersect) {\n\t\t\t\tpoint.set_position(first_intersect.point);\n\t\t\t\tif (this.pv.transfer_face_normals && first_intersect.face) {\n\t\t\t\t\tpoint.set_normal(first_intersect.face.normal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.set_core_group(core_group);\n\t}\n\n\t_assign_double_sided_material_to_core_group(core_group: CoreGroup) {\n\t\tfor (let object of core_group.objects()) {\n\t\t\tobject.traverse(this._bound_assign_mat);\n\t\t}\n\t}\n\t_assign_double_sided_material_to_object(object: Object3D) {\n\t\t// this._material_by_object_uuid[object.uuid] = object.material\n\t\t(object as Mesh).material = RaySopNode.double_sided_material();\n\t}\n\n\t// average_normals(geometry){\n\t// \tconst normals = [];\n\t// \tconst vertex_index_names = ['a', 'b', 'c'];\n\t// \tlodash_each(geometry.faces, face=> {\n\t// \t\treturn lodash_each(vertex_index_names, (vertex_index_name, i)=> {\n\t// \t\t\tconst vertex_index = face[vertex_index_name];\n\t// \t\t\tif (normals[vertex_index] == null) { normals[vertex_index] = []; }\n\t// \t\t\treturn normals[vertex_index].push(face.vertexNormals[i].clone());\n\t// \t\t});\n\t// \t});\n\n\t// \tlodash_each(normals, function(normal_group, i){\n\t// \t\tconst average = new Vector3(\n\t// \t\t\t(lodash_sum(lodash_map(normal_group, 'x')) / normal_group.length),\n\t// \t\t\t(lodash_sum(lodash_map(normal_group, 'y')) / normal_group.length),\n\t// \t\t\t(lodash_sum(lodash_map(normal_group, 'z')) / normal_group.length)\n\t// \t\t);\n\t// \t\treturn normals[i] = average;\n\t// \t});\n\n\t// \treturn normals;\n\t// }\n}\n","import {LineSegments} from 'three/src/objects/LineSegments';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\n\nimport {CatmullRomCurve3} from 'three/src/extras/curves/CatmullRomCurve3';\n// import {CubicBezierCurve3} from 'three/src/extras/curves/CubicBezierCurve3';\n// import {LineCurve3} from 'three/src/extras/curves/LineCurve3';\n// import {QuadraticBezierCurve3} from 'three/src/extras/curves/QuadraticBezierCurve3';\nimport {BufferGeometryUtils} from '../../../../modules/three/examples/jsm/utils/BufferGeometryUtils';\n\nimport lodash_flatten from 'lodash/flatten';\nimport lodash_map from 'lodash/map';\nimport {TypedSopNode} from './_Base';\nimport {CoreConstant} from '../../../core/geometry/Constant';\nimport {CoreGeometryUtilCurve} from '../../../core/geometry/util/Curve';\nimport {CoreGeometry} from '../../../core/geometry/Geometry';\n\nexport enum METHOD {\n\tPOINTS_COUNT = 'points_count',\n\tSEGMENT_LENGTH = 'segment_length',\n}\nexport const METHODS = [METHOD.POINTS_COUNT, METHOD.SEGMENT_LENGTH];\n\n// matches threejs curve type in CatmullRomCurve3.js\nexport enum CURVE_TYPE {\n\tCENTRIPETAL = 'centripetal',\n\tCHORDAL = 'chordal',\n\tCATMULLROM = 'catmullrom',\n}\nexport const CURVE_TYPES = [CURVE_TYPE.CENTRIPETAL, CURVE_TYPE.CHORDAL, CURVE_TYPE.CATMULLROM];\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CorePoint} from '../../../core/geometry/Point';\nimport {TypeAssert} from '../../poly/Assert';\nclass ResampleSopParamsConfig extends NodeParamsConfig {\n\tmethod = ParamConfig.INTEGER(METHODS.indexOf(METHOD.POINTS_COUNT), {\n\t\tmenu: {\n\t\t\tentries: METHODS.map((name, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\tcurve_type = ParamConfig.INTEGER(CURVE_TYPES.indexOf(CURVE_TYPE.CATMULLROM), {\n\t\trange: [0, 2],\n\t\trange_locked: [true, true],\n\t\tmenu: {\n\t\t\tentries: CURVE_TYPES.map((name, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\ttension = ParamConfig.FLOAT(0.01, {\n\t\trange: [0, 1],\n\t\trange_locked: [true, true],\n\t});\n\tpoints_count = ParamConfig.INTEGER(100, {\n\t\tvisible_if: {method: METHODS.indexOf(METHOD.POINTS_COUNT)},\n\t});\n\tsegment_length = ParamConfig.FLOAT(1, {\n\t\tvisible_if: {method: METHODS.indexOf(METHOD.SEGMENT_LENGTH)},\n\t});\n}\nconst ParamsConfig = new ResampleSopParamsConfig();\n\nexport class ResampleSopNode extends TypedSopNode<ResampleSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'resample';\n\t}\n\n\t// private _objects: Object3D\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\t// this._objects = [];\n\t\tconst resampled_objects = [];\n\t\tif (this.pv.points_count >= 2) {\n\t\t\tconst core_objects = core_group.core_objects();\n\t\t\tfor (let i = 0; i < core_objects.length; i++) {\n\t\t\t\tconst core_object = core_objects[i];\n\t\t\t\tconst object = core_object.object();\n\t\t\t\tif (object instanceof LineSegments) {\n\t\t\t\t\tconst resampled_object = this._resample(object);\n\t\t\t\t\tresampled_objects.push(resampled_object);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if (this.pv.merge) {\n\t\t// \tconst geometries = lodash_map(this._objects, object => object.geometry);\n\t\t// \tconst merged_geometry = CoreGeometry.merge_geometries(geometries);\n\t\t// \tlodash_each(geometries, geometry => geometry.dispose());\n\t\t// \tconst object = this.create_object(merged_geometry, CoreConstant.OBJECT_TYPE.LINE_SEGMENTS);\n\t\t// \tthis.set_object( object );\n\t\t// } else {\n\t\tthis.set_objects(resampled_objects);\n\t\t// }\n\t}\n\n\t_resample(line_segment: LineSegments) {\n\t\tconst geometry = line_segment.geometry as BufferGeometry;\n\t\tconst core_geometry = new CoreGeometry(geometry);\n\t\tconst points = core_geometry.points();\n\t\tconst indices = geometry.getIndex()?.array as number[];\n\n\t\tconst accumulated_curve_point_indices = CoreGeometryUtilCurve.accumulated_curve_point_indices(indices);\n\t\t// accumulated_curve_point_indices = [accumulated_curve_point_indices[0]]\n\t\tconst geometries: BufferGeometry[] = [];\n\t\tfor (let i = 0; i < accumulated_curve_point_indices.length; i++) {\n\t\t\tconst curve_point_indices = accumulated_curve_point_indices[i];\n\t\t\tconst current_points = curve_point_indices.map((index) => points[index]);\n\t\t\tconst geometry = this._create_curve_from_points(current_points);\n\t\t\tif (geometry) {\n\t\t\t\tgeometries.push(geometry);\n\t\t\t}\n\t\t}\n\t\tconst merged_geometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n\t\tconst object = this.create_object(merged_geometry, CoreConstant.OBJECT_TYPE.LINE_SEGMENTS);\n\t\treturn object;\n\t}\n\n\t_create_curve_from_points(points: CorePoint[]) {\n\t\tif (points.length <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst old_curve_positions = lodash_map(points, (point) => point.attrib_value('position'));\n\t\tconst closed = false;\n\t\tconst curve_type = CURVE_TYPES[this.pv.curve_type];\n\t\tconst tension = this.pv.tension;\n\t\tconst curve = new CatmullRomCurve3(old_curve_positions, closed, curve_type, tension);\n\t\t// const curve = new LineCurve3(old_curve_positions);\n\t\t// const curve = new CubicBezierCurve3(old_curve_positions);\n\t\t// const curve = new QuadraticBezierCurve3(old_curve_positions);\n\n\t\t// TODO: could I detect when a curve has points that are very close\n\t\t// and prevent a curve to go too far\n\t\tconst new_curve_points = this._get_points_from_curve(curve);\n\n\t\tlet positions = [];\n\t\tconst indices = [];\n\n\t\tfor (let i = 0; i < new_curve_points.length; i++) {\n\t\t\tconst point_position = new_curve_points[i];\n\n\t\t\tconst position = point_position.toArray();\n\t\t\tpositions.push(position);\n\n\t\t\tif (i > 0) {\n\t\t\t\tindices.push(i - 1);\n\t\t\t\tindices.push(i);\n\t\t\t}\n\t\t}\n\n\t\tpositions = lodash_flatten(positions);\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\tgeometry.setIndex(indices);\n\n\t\treturn geometry;\n\t\t// const object = this.create_object(geometry, CoreConstant.OBJECT_TYPE.LINE_SEGMENTS);\n\t\t// this._objects.push(object);\n\t}\n\n\t_get_points_from_curve(curve: CatmullRomCurve3) {\n\t\tconst method = METHODS[this.pv.method];\n\t\tswitch (method) {\n\t\t\tcase METHOD.POINTS_COUNT:\n\t\t\t\treturn curve.getSpacedPoints(Math.max(2, this.pv.points_count));\n\t\t\tcase METHOD.SEGMENT_LENGTH:\n\t\t\t\tvar length = curve.getLength();\n\n\t\t\t\tvar points_count = this.pv.segment_length !== 0 ? 1 + length / this.pv.segment_length : 2;\n\n\t\t\t\tpoints_count = Math.max(2, points_count);\n\n\t\t\t\treturn curve.getSpacedPoints(points_count);\n\t\t}\n\t\tTypeAssert.unreachable(method);\n\t}\n}\n","import {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nconst THREE = {BufferAttribute, BufferGeometry};\nimport lodash_range from 'lodash/range';\nimport lodash_isNumber from 'lodash/isNumber';\nimport lodash_sortBy from 'lodash/sortBy';\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreConstant} from '../../../core/geometry/Constant';\nimport {CoreMath} from '../../../core/math/_Module';\nimport {CoreIterator} from '../../../core/Iterator';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nclass ScatterSopParamsConfig extends NodeParamsConfig {\n\tpoints_count = ParamConfig.INTEGER(100, {\n\t\trange: [0, 100],\n\t\trange_locked: [true, false],\n\t});\n\tseed = ParamConfig.INTEGER(0, {\n\t\trange: [0, 100],\n\t\trange_locked: [false, false],\n\t});\n\ttransfer_attributes = ParamConfig.BOOLEAN(0);\n\tattributes_to_transfer = ParamConfig.STRING('normal', {\n\t\tvisible_if: {transfer_attributes: 1},\n\t});\n\tadd_id_attribute = ParamConfig.BOOLEAN(1);\n}\nconst ParamsConfig = new ScatterSopParamsConfig();\n\nexport class ScatterSopNode extends TypedSopNode<ScatterSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'scatter';\n\t}\n\n\t// private _positions: number[];\n\t// private _areas_thresholds: number[];\n\t// private _attrib_values_by_name = {};\n\t// private _area_sum: number;\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to scatter points onto'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\t// const objects = input_contents[0] //.group({clone: false})\n\t\tconst core_group = input_contents[0]; //CoreGroup.from_objects(objects)\n\t\tlet faces = core_group.faces();\n\t\t// const areas_by_face_index = []\n\t\tconst areas_thresholds: number[] = [];\n\t\tlet area_sum = 0;\n\t\tconst area_by_face_index: Map<number, number> = new Map();\n\n\t\tfor (let face of faces) {\n\t\t\tconst area = face.area;\n\t\t\tarea_by_face_index.set(face.index, area);\n\t\t}\n\t\tconst sorted_faces = lodash_sortBy(faces, (f) => {\n\t\t\treturn area_by_face_index.get(f.index);\n\t\t});\n\n\t\tlet i = 0;\n\t\tfor (let face of sorted_faces) {\n\t\t\tarea_sum += area_by_face_index.get(face.index) as number;\n\t\t\tareas_thresholds[i] = area_sum;\n\t\t\ti++;\n\t\t}\n\n\t\tconst positions: number[] = [];\n\t\tlet attrib_names: string[] = [];\n\t\tif (this.pv.transfer_attributes) {\n\t\t\tattrib_names = core_group.attrib_names_matching_mask(this.pv.attributes_to_transfer);\n\t\t}\n\n\t\tconst attrib_values_by_name: Map<string, number[]> = new Map();\n\t\tconst attrib_sizes_by_name: Map<string, number> = new Map();\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tattrib_values_by_name.set(attrib_name, []);\n\t\t\tattrib_sizes_by_name.set(attrib_name, core_group.attrib_size(attrib_name));\n\t\t}\n\n\t\tconst iterator = new CoreIterator();\n\t\t// await iterator.start_with_count(this.pv.points_count, this._add_point.bind(this))\n\t\tawait iterator.start_with_count(this.pv.points_count, (point_index: number) => {\n\t\t\tconst rand = CoreMath.rand_float(this.pv.seed + point_index) * area_sum;\n\n\t\t\tfor (let face_index = 0; face_index < areas_thresholds.length; face_index++) {\n\t\t\t\tconst areas_threshold = areas_thresholds[face_index];\n\n\t\t\t\tif (rand <= areas_threshold) {\n\t\t\t\t\tconst face = sorted_faces[face_index];\n\t\t\t\t\tconst position = face.random_position(rand);\n\t\t\t\t\tposition.toArray(positions, positions.length);\n\n\t\t\t\t\tfor (let attrib_name of attrib_names) {\n\t\t\t\t\t\tconst attrib_value = face.attrib_value_at_position(attrib_name, position);\n\t\t\t\t\t\tif (lodash_isNumber(attrib_value)) {\n\t\t\t\t\t\t\tattrib_values_by_name.get(attrib_name)!.push(attrib_value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tattrib_value.toArray(\n\t\t\t\t\t\t\t\tattrib_values_by_name.get(attrib_name),\n\t\t\t\t\t\t\t\tattrib_values_by_name.get(attrib_name)!.length\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// for(let point_index=0; point_index<this.pv.points_count; point_index++){\n\n\t\t// \tconst rand = CoreMath.rand_float(this.pv.seed+point_index) * area_sum\n\n\t\t// \tfor(let face_index=0; face_index<areas_thresholds.length; face_index++){\n\n\t\t// \t\tconst areas_threshold = areas_thresholds[face_index]\n\n\t\t// \t\tif(rand <= areas_threshold){\n\t\t// \t\t\tconst face = sorted_faces[face_index]\n\t\t// \t\t\tconst position = face.random_position(rand)\n\t\t// \t\t\tposition.toArray(positions, positions.length)\n\n\t\t// \t\t\tfor(let attrib_name of attrib_names){\n\t\t// \t\t\t\tconst attrib_value = face.attrib_value_at_position(attrib_name, position)\n\t\t// \t\t\t\tif (lodash_isNumber(attrib_value)){\n\t\t// \t\t\t\t\tattrib_values_by_name[attrib_name].push(attrib_value)\n\t\t// \t\t\t\t} else {\n\t\t// \t\t\t\t\tattrib_value.toArray(\n\t\t// \t\t\t\t\t\tattrib_values_by_name[attrib_name],\n\t\t// \t\t\t\t\t\tattrib_values_by_name[attrib_name].length\n\t\t// \t\t\t\t\t)\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\n\t\t// \t\t\tbreak;\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\t\tgeometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positions), 3));\n\t\tfor (let attrib_name of attrib_names) {\n\t\t\tgeometry.setAttribute(\n\t\t\t\tattrib_name,\n\t\t\t\tnew THREE.BufferAttribute(\n\t\t\t\t\tnew Float32Array(attrib_values_by_name.get(attrib_name)!),\n\t\t\t\t\tattrib_sizes_by_name.get(attrib_name)!\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif (this.pv.add_id_attribute) {\n\t\t\tconst ids = lodash_range(this.pv.points_count);\n\t\t\tgeometry.setAttribute('id', new THREE.BufferAttribute(new Float32Array(ids), 1));\n\t\t}\n\n\t\tthis.set_geometry(geometry, CoreConstant.OBJECT_TYPE.POINTS);\n\t}\n\n\t// private _add_point(point_index: number) {\n\t// \tconst rand = CoreMath.rand_float(this.pv.seed + point_index) * this._area_sum;\n\n\t// \tfor (let face_index = 0; face_index < this._areas_thresholds.length; face_index++) {\n\t// \t\tconst areas_threshold = this._areas_thresholds[face_index];\n\n\t// \t\tif (rand <= areas_threshold) {\n\t// \t\t\tconst face = this._sorted_faces[face_index];\n\t// \t\t\tconst position = face.random_position(rand);\n\t// \t\t\tposition.toArray(positions, positions.length);\n\n\t// \t\t\tfor (let attrib_name of attrib_names) {\n\t// \t\t\t\tconst attrib_value = face.attrib_value_at_position(attrib_name, position);\n\t// \t\t\t\tif (lodash_isNumber(attrib_value)) {\n\t// \t\t\t\t\tthis._attrib_values_by_name[attrib_name].push(attrib_value);\n\t// \t\t\t\t} else {\n\t// \t\t\t\t\tattrib_value.toArray(\n\t// \t\t\t\t\t\tthis._attrib_values_by_name[attrib_name],\n\t// \t\t\t\t\t\tthis._attrib_values_by_name[attrib_name].length\n\t// \t\t\t\t\t);\n\t// \t\t\t\t}\n\t// \t\t\t}\n\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t}\n\t// }\n}\n","import {TypedSopNode} from './_Base';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass ShadowsSopParamsConfig extends NodeParamsConfig {\n\tcast_shadow = ParamConfig.BOOLEAN(1);\n\treceive_shadow = ParamConfig.BOOLEAN(1);\n\tapply_to_children = ParamConfig.BOOLEAN(0);\n}\nconst ParamsConfig = new ShadowsSopParamsConfig();\n\nexport class ShadowsSopNode extends TypedSopNode<ShadowsSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'shadows';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['objects to change shadows properties of'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tasync cook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\n\t\tfor (let object of core_group.objects()) {\n\t\t\tif (this.pv.apply_to_children) {\n\t\t\t\tobject.traverse((child) => {\n\t\t\t\t\tchild.castShadow = this.pv.cast_shadow;\n\t\t\t\t\tchild.receiveShadow = this.pv.receive_shadow;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tobject.castShadow = this.pv.cast_shadow;\n\t\t\t\tobject.receiveShadow = this.pv.receive_shadow;\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(core_group.objects());\n\t\tthis.set_core_group(core_group);\n\t}\n}\n","import {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport lodash_sortBy from 'lodash/sortBy';\nimport lodash_reverse from 'lodash/reverse';\nimport lodash_compact from 'lodash/compact';\nimport {TypedSopNode} from './_Base';\n\nimport {CoreGeometryUtilCurve} from '../../../core/geometry/util/Curve';\nimport {CoreGeometryOperationSkin} from '../../../core/geometry/operation/Skin';\nimport {CoreGroup} from '../../../core/geometry/Group';\n\nimport {NodeParamsConfig} from '../utils/params/ParamsConfig';\nclass SkinSopParamsConfig extends NodeParamsConfig {}\nconst ParamsConfig = new SkinSopParamsConfig();\n\nexport class SkinSopNode extends TypedSopNode<SkinSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'skin';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['lines to create polygons from', 'if used, lines from both inputs will be used'];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1, 2);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tswitch (lodash_compact(this.io.inputs.inputs()).length) {\n\t\t\tcase 1:\n\t\t\t\treturn this.process_one_input(input_contents);\n\t\t\tcase 2:\n\t\t\t\treturn this.process_two_inputs(input_contents);\n\t\t\tdefault:\n\t\t\t\treturn this.states.error.set('inputs count not valid');\n\t\t}\n\t}\n\n\tprocess_one_input(input_contents: CoreGroup[]) {\n\t\tconst core_group0 = input_contents[0];\n\t\tconst line_segments0 = this._get_line_segments(core_group0);\n\n\t\tconst geometries: BufferGeometry[] = [];\n\t\tif (line_segments0) {\n\t\t\tconst first_line_segment = line_segments0[0] as Mesh;\n\t\t\tif (first_line_segment) {\n\t\t\t\tconst src_geometries = CoreGeometryUtilCurve.line_segment_to_geometries(\n\t\t\t\t\tfirst_line_segment.geometry as BufferGeometry\n\t\t\t\t);\n\t\t\t\tsrc_geometries.forEach((src_geometry, i) => {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tconst prev_src_geometry = src_geometries[i - 1];\n\n\t\t\t\t\t\tconst geometry = this._skin(prev_src_geometry, src_geometry);\n\t\t\t\t\t\tgeometries.push(geometry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.set_geometries(geometries);\n\t}\n\n\tprocess_two_inputs(input_contents: CoreGroup[]) {\n\t\tconst core_group0 = input_contents[0];\n\t\tconst core_group1 = input_contents[1];\n\t\tconst line_segments0 = this._get_line_segments(core_group0);\n\t\tconst line_segments1 = this._get_line_segments(core_group1);\n\t\tconst line_segments = lodash_reverse(lodash_sortBy([line_segments0, line_segments1], (array) => array.length));\n\t\tconst smallest_array = line_segments[0];\n\t\tconst largest_array = line_segments[1];\n\n\t\tconst geometries: BufferGeometry[] = [];\n\t\tsmallest_array.forEach((line_segment, i) => {\n\t\t\tconst other_line_segment = largest_array[i];\n\n\t\t\tif (line_segment != null && other_line_segment != null) {\n\t\t\t\tconst geo = (line_segment as Mesh).geometry as BufferGeometry;\n\t\t\t\tconst other_geo = (other_line_segment as Mesh).geometry as BufferGeometry;\n\t\t\t\tconst geometry = this._skin(geo, other_geo);\n\t\t\t\tgeometries.push(geometry);\n\t\t\t}\n\t\t});\n\n\t\tthis.set_geometries(geometries);\n\t}\n\n\t_get_line_segments(core_group: CoreGroup) {\n\t\treturn core_group.objects().filter((child) => (child as LineSegments).isLineSegments);\n\t}\n\n\t_skin(geometry1: BufferGeometry, geometry0: BufferGeometry) {\n\t\t// TODO: maybe instead of doing this,\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst operation = new CoreGeometryOperationSkin(geometry, geometry1, geometry0);\n\t\toperation.process();\n\n\t\treturn geometry;\n\t}\n}\n","import {SphereBufferGeometry} from 'three/src/geometries/SphereGeometry';\nimport {IcosahedronBufferGeometry} from 'three/src/geometries/IcosahedronGeometry';\nimport {TypedSopNode} from './_Base';\n\nenum SphereType {\n\tDEFAULT = 'default',\n\tISOCAHEDRON = 'isocahedron',\n}\ntype SphereTypes = {[key in SphereType]: number};\nconst SPHERE_TYPE: SphereTypes = {\n\tdefault: 0,\n\tisocahedron: 1,\n};\nconst SPHERE_TYPES: Array<SphereType> = [SphereType.DEFAULT, SphereType.ISOCAHEDRON];\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {CoreGroup} from '../../../core/geometry/Group';\nclass SphereSopParamsConfig extends NodeParamsConfig {\n\ttype = ParamConfig.INTEGER(SPHERE_TYPE.default, {\n\t\tmenu: {\n\t\t\tentries: SPHERE_TYPES.map((name) => {\n\t\t\t\treturn {name: name, value: SPHERE_TYPE[name]};\n\t\t\t}),\n\t\t},\n\t});\n\tradius = ParamConfig.FLOAT(1, {visible_if: {type: SPHERE_TYPE.default}});\n\tresolution = ParamConfig.VECTOR2([8, 6], {visible_if: {type: SPHERE_TYPE.default}});\n\topen = ParamConfig.BOOLEAN(0, {visible_if: {type: SPHERE_TYPE.default}});\n\tangle_range_x = ParamConfig.VECTOR2([0, '$PI*2'], {visible_if: {type: SPHERE_TYPE.default, open: true}});\n\tangle_range_y = ParamConfig.VECTOR2([0, '$PI*2'], {visible_if: {type: SPHERE_TYPE.default, open: true}});\n\tdetail = ParamConfig.INTEGER(1, {\n\t\trange: [0, 5],\n\t\trange_locked: [true, false],\n\t\tvisible_if: {type: SPHERE_TYPE.isocahedron},\n\t});\n\tcenter = ParamConfig.VECTOR3([0, 0, 0]);\n}\nconst ParamsConfig = new SphereSopParamsConfig();\n\nexport class SphereSopNode extends TypedSopNode<SphereSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'sphere';\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.NEVER]);\n\t}\n\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst core_group = input_contents[0];\n\t\tif (core_group) {\n\t\t\tthis._cook_with_input(core_group);\n\t\t} else {\n\t\t\tthis._cook_without_input();\n\t\t}\n\t}\n\tprivate _cook_without_input() {\n\t\tconst geometry = this._create_required_geometry();\n\t\tgeometry.translate(this.pv.center.x, this.pv.center.y, this.pv.center.z);\n\t\tthis.set_geometry(geometry);\n\t}\n\tprivate _cook_with_input(core_group: CoreGroup) {\n\t\tconst bbox = core_group.bounding_box();\n\t\tconst size = bbox.max.clone().sub(bbox.min);\n\t\tconst center = bbox.max\n\t\t\t.clone()\n\t\t\t.add(bbox.min)\n\t\t\t.multiplyScalar(0.5);\n\n\t\tconst geometry = this._create_required_geometry();\n\t\tgeometry.translate(this.pv.center.x, this.pv.center.y, this.pv.center.z);\n\t\tgeometry.translate(center.x, center.y, center.z);\n\t\tgeometry.scale(size.x, size.y, size.z);\n\t\tthis.set_geometry(geometry);\n\t}\n\n\tprivate _create_required_geometry() {\n\t\tif (this.pv.type == SPHERE_TYPE.default) {\n\t\t\treturn this._create_default_sphere();\n\t\t} else {\n\t\t\treturn this._create_default_isocahedron();\n\t\t}\n\t}\n\n\tprivate _create_default_sphere() {\n\t\tif (this.pv.open) {\n\t\t\treturn new SphereBufferGeometry(\n\t\t\t\tthis.pv.radius,\n\t\t\t\tthis.pv.resolution.x,\n\t\t\t\tthis.pv.resolution.y,\n\t\t\t\tthis.pv.angle_range_x.x,\n\t\t\t\tthis.pv.angle_range_x.y,\n\t\t\t\tthis.pv.angle_range_y.x,\n\t\t\t\tthis.pv.angle_range_y.y\n\t\t\t);\n\t\t} else {\n\t\t\treturn new SphereBufferGeometry(this.pv.radius, this.pv.resolution.x, this.pv.resolution.y);\n\t\t}\n\t}\n\t_create_default_isocahedron() {\n\t\treturn new IcosahedronBufferGeometry(this.pv.radius, this.pv.detail);\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nconst INPUT_NAME = 'geometry to switch to';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nclass SwitchSopParamsConfig extends NodeParamsConfig {\n\tinput = ParamConfig.INTEGER(0, {\n\t\trange: [0, 3],\n\t\trange_locked: [true, true],\n\t});\n}\nconst ParamsConfig = new SwitchSopParamsConfig();\n\nexport class SwitchSopNode extends TypedSopNode<SwitchSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'switch';\n\t}\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn [INPUT_NAME, INPUT_NAME, INPUT_NAME, INPUT_NAME];\n\t}\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(0, 4);\n\t\tthis.io.inputs.init_inputs_clonable_state([\n\t\t\tInputCloneMode.NEVER,\n\t\t\tInputCloneMode.NEVER,\n\t\t\tInputCloneMode.NEVER,\n\t\t\tInputCloneMode.NEVER,\n\t\t]);\n\t\tthis.ui_data.set_width(100);\n\t\t// this.ui_data.set_icon('code-branch');\n\n\t\tthis.cook_controller.disallow_inputs_evaluation();\n\t}\n\n\tasync cook() {\n\t\tconst input_index = this.pv.input;\n\t\tif (this.io.inputs.has_input(input_index)) {\n\t\t\tconst container = await this.container_controller.request_input_container(input_index);\n\t\t\tthis.set_core_group(container.core_content());\n\t\t} else {\n\t\t\tthis.states.error.set(`no input ${input_index}`);\n\t\t}\n\t}\n}\n","import lodash_range from 'lodash/range';\n\n// import {CoreFont} from '../../../Core/Font'\nimport {TypedSopNode} from './_Base';\nimport {CoreConstant} from '../../../core/geometry/Constant';\n\nimport {TextBufferGeometry} from 'three/src/geometries/TextGeometry';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ShapeBufferGeometry} from 'three/src/geometries/ShapeGeometry';\nimport {FontLoader} from 'three/src/loaders/FontLoader';\nimport {Font} from 'three/src/extras/core/Font';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Path} from 'three/src/extras/core/Path';\nimport {Shape} from 'three/src/extras/core/Shape';\n\nimport {BufferGeometryUtils} from '../../../../modules/three/examples/jsm/utils/BufferGeometryUtils';\n\nvar opentype = require('opentype.js');\n\nimport {TTFLoader} from '../../../../modules/three/examples/jsm/loaders/TTFLoader';\nimport {SVGLoader} from '../../../../modules/three/examples/jsm/loaders/SVGLoader';\n\nconst DEFAULT_URL = '/fonts/droid_sans_regular.typeface.json';\n\ndeclare global {\n\tinterface Window {\n\t\topentype: any;\n\t}\n}\n\n// const DEFAULT_PARAMS = {\n// \tsize: 1,\n// \theight: 0.1,\n// \tcurveSegments: 1\n// };\n\nexport enum TEXT_TYPE {\n\tMESH = 'mesh',\n\tFLAT = 'flat',\n\tLINE = 'line',\n\tSTROKE = 'stroke',\n}\nexport const TEXT_TYPES: Array<TEXT_TYPE> = [TEXT_TYPE.MESH, TEXT_TYPE.FLAT, TEXT_TYPE.LINE, TEXT_TYPE.STROKE];\n\ninterface FontByUrl {\n\t[propName: string]: Font;\n}\n\nconst GENERATION_ERROR_MESSAGE = `failed to generate geometry. Try to remove some characters`;\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass TextSopParamsConfig extends NodeParamsConfig {\n\tfont = ParamConfig.STRING('');\n\ttext = ParamConfig.STRING('polygonjs', {multiline: true});\n\ttype = ParamConfig.INTEGER(0, {\n\t\tmenu: {\n\t\t\tentries: TEXT_TYPES.map((type, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tname: type,\n\t\t\t\t\tvalue: i,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t});\n\tsize = ParamConfig.FLOAT(1, {\n\t\trange: [0, 1],\n\t\trange_locked: [true, false],\n\t});\n\textrude = ParamConfig.FLOAT(0.1, {\n\t\tvisible_if: {\n\t\t\ttype: TEXT_TYPES.indexOf(TEXT_TYPE.MESH),\n\t\t},\n\t});\n\tsegments = ParamConfig.INTEGER(1, {\n\t\trange: [1, 20],\n\t\trange_locked: [true, false],\n\t\tvisible_if: {\n\t\t\ttype: TEXT_TYPES.indexOf(TEXT_TYPE.MESH),\n\t\t},\n\t});\n\tstroke_width = ParamConfig.FLOAT(0.02, {\n\t\tvisible_if: {\n\t\t\ttype: TEXT_TYPES.indexOf(TEXT_TYPE.STROKE),\n\t\t},\n\t});\n}\n\nconst ParamsConfig = new TextSopParamsConfig();\n\nexport class TextSopNode extends TypedSopNode<TextSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'text';\n\t}\n\t// static required_three_imports() {\n\t// \treturn ['loaders/TTFLoader', 'loaders/SVGLoader'];\n\t// }\n\n\tprivate _font_loader: FontLoader = new FontLoader();\n\tprivate _ttf_loader: TTFLoader | undefined;\n\tprivate _svg_loader: typeof SVGLoader | undefined;\n\tprivate _loaded_fonts: FontByUrl = {};\n\n\tinitialize_node() {}\n\n\tasync cook() {\n\t\ttry {\n\t\t\tthis._loaded_fonts[this.pv.font] = this._loaded_fonts[this.pv.font] || (await this._load_url(this.pv.font));\n\t\t} catch (err) {\n\t\t\tthis.states.error.set(`count not load font (${this.pv.font})`);\n\t\t\treturn;\n\t\t}\n\t\tconst font = this._loaded_fonts[this.pv.font];\n\t\tif (font) {\n\t\t\tswitch (TEXT_TYPES[this.pv.type]) {\n\t\t\t\tcase TEXT_TYPE.MESH:\n\t\t\t\t\treturn this._create_geometry_from_type_mesh(font);\n\t\t\t\tcase TEXT_TYPE.FLAT:\n\t\t\t\t\treturn this._create_geometry_from_type_flat(font);\n\t\t\t\tcase TEXT_TYPE.LINE:\n\t\t\t\t\treturn this._create_geometry_from_type_line(font);\n\t\t\t\tcase TEXT_TYPE.STROKE:\n\t\t\t\t\treturn this._create_geometry_from_type_stroke(font);\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('type is not valid');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _create_geometry_from_type_mesh(font: Font) {\n\t\tconst text = this.displayed_text();\n\n\t\tconst parameters = {\n\t\t\tfont: font,\n\t\t\tsize: this.pv.size,\n\t\t\theight: this.pv.extrude,\n\t\t\tcurveSegments: this.pv.segments,\n\t\t};\n\n\t\ttry {\n\t\t\tconst geometry = new TextBufferGeometry(text, parameters);\n\t\t\tif (!geometry.index) {\n\t\t\t\tconst position_array = geometry.getAttribute('position').array;\n\t\t\t\tgeometry.setIndex(lodash_range(position_array.length / 3));\n\t\t\t}\n\t\t\tthis.set_geometry(geometry);\n\t\t} catch (err) {\n\t\t\tthis.states.error.set(GENERATION_ERROR_MESSAGE);\n\t\t}\n\t}\n\n\tprivate _create_geometry_from_type_flat(font: Font) {\n\t\tconst shapes = this._get_shapes(font);\n\t\tif (shapes) {\n\t\t\tvar geometry = new ShapeBufferGeometry(shapes);\n\t\t\tthis.set_geometry(geometry);\n\t\t}\n\t}\n\tprivate _create_geometry_from_type_line(font: Font) {\n\t\tconst shapes = this.shapes_from_font(font);\n\t\tif (shapes) {\n\t\t\tconst positions = [];\n\t\t\tconst indices = [];\n\t\t\tlet current_index = 0;\n\n\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tconst points = shape.getPoints();\n\t\t\t\tfor (let j = 0; j < points.length; j++) {\n\t\t\t\t\tconst point = points[j];\n\t\t\t\t\tpositions.push(point.x);\n\t\t\t\t\tpositions.push(point.y);\n\t\t\t\t\tpositions.push(0);\n\t\t\t\t\tindices.push(current_index);\n\t\t\t\t\tif (j > 0 && j < points.length - 1) {\n\t\t\t\t\t\tindices.push(current_index);\n\t\t\t\t\t}\n\t\t\t\t\tcurrent_index += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.setIndex(indices);\n\t\t\tthis.set_geometry(geometry, CoreConstant.OBJECT_TYPE.LINE_SEGMENTS);\n\t\t}\n\t}\n\tprivate async _create_geometry_from_type_stroke(font: Font) {\n\t\tconst shapes = this.shapes_from_font(font);\n\t\tif (shapes) {\n\t\t\t// const color = new Color( 0xffffff );\n\t\t\tthis._svg_loader = this._svg_loader || (await this._load_svg_loader());\n\t\t\t// TODO: typescript: correct definition for last 3 optional args\n\t\t\tvar style = this._svg_loader.getStrokeStyle(this.pv.stroke_width, 'white', 'miter', 'butt', 4);\n\t\t\tconst geometries = [];\n\n\t\t\t// const positions = [];\n\t\t\t// const indices = [];\n\t\t\t// let current_index = 0;\n\n\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tconst points = shape.getPoints();\n\t\t\t\t// TODO: typescript: correct definition for points, arcDivisions, and minDistance\n\t\t\t\tconst arcDivisions = 12;\n\t\t\t\tconst minDistance = 0.001;\n\t\t\t\tconst geometry = this._svg_loader.pointsToStroke(\n\t\t\t\t\t(<unknown>points) as Vector3[],\n\t\t\t\t\tstyle,\n\t\t\t\t\tarcDivisions,\n\t\t\t\t\tminDistance\n\t\t\t\t);\n\t\t\t\tgeometries.push(geometry);\n\t\t\t}\n\t\t\tconst merged_geometry = BufferGeometryUtils.mergeBufferGeometries(geometries);\n\t\t\tthis.set_geometry(merged_geometry); //, CoreConstant.OBJECT_TYPE.LINE_SEGMENTS);\n\t\t}\n\t}\n\n\tprivate shapes_from_font(font: Font) {\n\t\tconst shapes = this._get_shapes(font);\n\t\tif (shapes) {\n\t\t\tconst holeShapes: Path[] = [];\n\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tif (shape.holes && shape.holes.length > 0) {\n\t\t\t\t\tfor (let j = 0; j < shape.holes.length; j++) {\n\t\t\t\t\t\tconst hole = shape.holes[j];\n\t\t\t\t\t\tholeShapes.push(hole);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tshapes.push.apply(shapes, holeShapes as Shape[]);\n\t\t\treturn shapes;\n\t\t}\n\t}\n\n\tprivate _get_shapes(font: Font) {\n\t\tconst text = this.displayed_text();\n\t\ttry {\n\t\t\tconst shapes = font.generateShapes(text, this.pv.size);\n\t\t\treturn shapes;\n\t\t} catch (err) {\n\t\t\tthis.states.error.set(GENERATION_ERROR_MESSAGE);\n\t\t}\n\t}\n\n\tprivate displayed_text(): string {\n\t\treturn this.pv.text || '';\n\t}\n\n\t// _create_shape(font){\n\t// \tconst shapes = font.generateShapes( this.displayed_text(), 100 );\n\t// \tvar geometry = new ShapeBufferGeometry( shapes );\n\t// \treturn geometry\n\t// \t// geometry.computeBoundingBox();\n\t// \t// xMid = - 0.5 * ( geometry.boundingBox.max.x - geometry.boundingBox.min.x );\n\t// \t// geometry.translate( xMid, 0, 0 );\n\t// \t// make shape ( N.B. edge view not visible )\n\t// \t// text = new Mesh( geometry, matLite );\n\t// \t// text.position.z = - 150;\n\t// }\n\n\tprivate _load_url(url: string) {\n\t\tif (url === '') {\n\t\t\turl = DEFAULT_URL;\n\t\t}\n\t\tconst elements1 = url.split('?')[0];\n\t\tconst elements2 = elements1.split('.');\n\t\tconst ext = elements2[elements2.length - 1];\n\t\turl = `${url}?${Date.now()}`;\n\t\tswitch (ext) {\n\t\t\tcase 'ttf': {\n\t\t\t\treturn this._load_ttf(url);\n\t\t\t}\n\t\t\tcase 'json': {\n\t\t\t\treturn this._load_json(url);\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _load_ttf(url: string): Promise<Font> {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tthis._ttf_loader = this._ttf_loader || (await this._load_ttf_loader());\n\t\t\twindow.opentype = opentype;\n\t\t\tthis._ttf_loader.load(\n\t\t\t\turl,\n\t\t\t\t(fnt: object) => {\n\t\t\t\t\tconst parsed = this._font_loader.parse(fnt);\n\t\t\t\t\t// make sure not to delete opentype from window, as it may be required by other nodes\n\t\t\t\t\t// delete window.opentype;\n\t\t\t\t\tresolve(parsed);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\t() => {\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\tprivate _load_json(url: string): Promise<Font> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._font_loader.load(\n\t\t\t\turl,\n\t\t\t\t(font) => {\n\t\t\t\t\tresolve(font);\n\t\t\t\t},\n\t\t\t\tundefined,\n\t\t\t\t() => {\n\t\t\t\t\treject();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t// private _default_font_parameters(options){\n\t// \tif (options == null) { options = {}; }\n\t// \tconst default_options = lodash_clone(DEFAULT_PARAMS);\n\t// \tif (options['font'] == null) { options['font'] = this.font(); }\n\n\t// \tfor(let key of Object.keys(options)){\n\t// \t\tdefault_options[key] = options[key];\n\t// \t}\n\n\t// \treturn default_options;\n\t// }\n\tprivate async _load_ttf_loader(): Promise<TTFLoader> {\n\t\tconst {TTFLoader} = await import(`../../../../modules/three/examples/jsm/loaders/TTFLoader`);\n\t\tconst loader_constructor = (<unknown>TTFLoader) as typeof TTFLoader;\n\t\treturn new loader_constructor();\n\t}\n\tprivate async _load_svg_loader(): Promise<typeof SVGLoader> {\n\t\tconst {SVGLoader} = await import(`../../../../modules/three/examples/jsm/loaders/SVGLoader`);\n\t\treturn (<unknown>SVGLoader) as typeof SVGLoader;\n\t}\n}\n","import {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Loader} from 'three/src/loaders/Loader';\n/**\n * @author gero3 / https://github.com/gero3\n * @author tentone / https://github.com/tentone\n * @author troy351 / https://github.com/troy351\n *\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\n\nvar TTFLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.reversed = false;\n\n};\n\n\nTTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: TTFLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tonLoad( scope.parse( buffer ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( arraybuffer ) {\n\n\t\tfunction convert( font, reversed ) {\n\n\t\t\tvar round = Math.round;\n\n\t\t\tvar glyphs = {};\n\t\t\tvar scale = ( 100000 ) / ( ( font.unitsPerEm || 2048 ) * 72 );\n\n\t\t\tvar glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n\t\t\tvar unicodes = Object.keys( glyphIndexMap );\n\n\t\t\tfor ( var i = 0; i < unicodes.length; i ++ ) {\n\n\t\t\t\tvar unicode = unicodes[ i ];\n\t\t\t\tvar glyph = font.glyphs.glyphs[ glyphIndexMap[ unicode ] ];\n\n\t\t\t\tif ( unicode !== undefined ) {\n\n\t\t\t\t\tvar token = {\n\t\t\t\t\t\tha: round( glyph.advanceWidth * scale ),\n\t\t\t\t\t\tx_min: round( glyph.xMin * scale ),\n\t\t\t\t\t\tx_max: round( glyph.xMax * scale ),\n\t\t\t\t\t\to: ''\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\tglyph.path.commands = reverseCommands( glyph.path.commands );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tglyph.path.commands.forEach( function ( command ) {\n\n\t\t\t\t\t\tif ( command.type.toLowerCase() === 'c' ) {\n\n\t\t\t\t\t\t\tcommand.type = 'b';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoken.o += command.type.toLowerCase() + ' ';\n\n\t\t\t\t\t\tif ( command.x !== undefined && command.y !== undefined ) {\n\n\t\t\t\t\t\t\ttoken.o += round( command.x * scale ) + ' ' + round( command.y * scale ) + ' ';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( command.x1 !== undefined && command.y1 !== undefined ) {\n\n\t\t\t\t\t\t\ttoken.o += round( command.x1 * scale ) + ' ' + round( command.y1 * scale ) + ' ';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( command.x2 !== undefined && command.y2 !== undefined ) {\n\n\t\t\t\t\t\t\ttoken.o += round( command.x2 * scale ) + ' ' + round( command.y2 * scale ) + ' ';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tglyphs[ String.fromCodePoint( glyph.unicode ) ] = token;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tglyphs: glyphs,\n\t\t\t\tfamilyName: font.getEnglishName( 'fullName' ),\n\t\t\t\tascender: round( font.ascender * scale ),\n\t\t\t\tdescender: round( font.descender * scale ),\n\t\t\t\tunderlinePosition: font.tables.post.underlinePosition,\n\t\t\t\tunderlineThickness: font.tables.post.underlineThickness,\n\t\t\t\tboundingBox: {\n\t\t\t\t\txMin: font.tables.head.xMin,\n\t\t\t\t\txMax: font.tables.head.xMax,\n\t\t\t\t\tyMin: font.tables.head.yMin,\n\t\t\t\t\tyMax: font.tables.head.yMax\n\t\t\t\t},\n\t\t\t\tresolution: 1000,\n\t\t\t\toriginal_font_information: font.tables.name\n\t\t\t};\n\n\t\t}\n\n\t\tfunction reverseCommands( commands ) {\n\n\t\t\tvar paths = [];\n\t\t\tvar path;\n\n\t\t\tcommands.forEach( function ( c ) {\n\n\t\t\t\tif ( c.type.toLowerCase() === 'm' ) {\n\n\t\t\t\t\tpath = [ c ];\n\t\t\t\t\tpaths.push( path );\n\n\t\t\t\t} else if ( c.type.toLowerCase() !== 'z' ) {\n\n\t\t\t\t\tpath.push( c );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar reversed = [];\n\n\t\t\tpaths.forEach( function ( p ) {\n\n\t\t\t\tvar result = {\n\t\t\t\t\ttype: 'm',\n\t\t\t\t\tx: p[ p.length - 1 ].x,\n\t\t\t\t\ty: p[ p.length - 1 ].y\n\t\t\t\t};\n\n\t\t\t\treversed.push( result );\n\n\t\t\t\tfor ( var i = p.length - 1; i > 0; i -- ) {\n\n\t\t\t\t\tvar command = p[ i ];\n\t\t\t\t\tvar result = { type: command.type };\n\n\t\t\t\t\tif ( command.x2 !== undefined && command.y2 !== undefined ) {\n\n\t\t\t\t\t\tresult.x1 = command.x2;\n\t\t\t\t\t\tresult.y1 = command.y2;\n\t\t\t\t\t\tresult.x2 = command.x1;\n\t\t\t\t\t\tresult.y2 = command.y1;\n\n\t\t\t\t\t} else if ( command.x1 !== undefined && command.y1 !== undefined ) {\n\n\t\t\t\t\t\tresult.x1 = command.x1;\n\t\t\t\t\t\tresult.y1 = command.y1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.x = p[ i - 1 ].x;\n\t\t\t\t\tresult.y = p[ i - 1 ].y;\n\t\t\t\t\treversed.push( result );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn reversed;\n\n\t\t}\n\n\t\tif ( typeof opentype === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.TTFLoader: The loader requires opentype.js. Make sure it\\'s included before using the loader.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn convert( opentype.parse( arraybuffer ), this.reversed );\n\n\t}\n\n} );\n\nexport { TTFLoader };\n","import {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {Matrix3} from 'three/src/math/Matrix3';\nimport {Path} from 'three/src/extras/core/Path';\nimport {ShapePath} from 'three/src/extras/core/ShapePath';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author zz85 / http://joshuakoo.com/\n * @author yomboprime / https://yombo.org\n */\n\n\nvar SVGLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\t// Default dots per inch\n\tthis.defaultDPI = 90;\n\n\t// Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\n\tthis.defaultUnit = \"px\";\n\n};\n\nSVGLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: SVGLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( text ) {\n\n\t\tvar scope = this;\n\n\t\tfunction parseNode( node, style ) {\n\n\t\t\tif ( node.nodeType !== 1 ) return;\n\n\t\t\tvar transform = getNodeTransform( node );\n\n\t\t\tvar path = null;\n\n\t\t\tswitch ( node.nodeName ) {\n\n\t\t\t\tcase 'svg':\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'path':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tif ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rect':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseRectNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polygon':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parsePolygonNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polyline':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parsePolylineNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'circle':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseCircleNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ellipse':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseEllipseNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'line':\n\t\t\t\t\tstyle = parseStyle( node, style );\n\t\t\t\t\tpath = parseLineNode( node );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log( node );\n\n\t\t\t}\n\n\t\t\tif ( path ) {\n\n\t\t\t\tif ( style.fill !== undefined && style.fill !== 'none' ) {\n\n\t\t\t\t\tpath.color.setStyle( style.fill );\n\n\t\t\t\t}\n\n\t\t\t\ttransformPath( path, currentTransform );\n\n\t\t\t\tpaths.push( path );\n\n\t\t\t\tpath.userData = { node: node, style: style };\n\n\t\t\t}\n\n\t\t\tvar nodes = node.childNodes;\n\n\t\t\tfor ( var i = 0; i < nodes.length; i ++ ) {\n\n\t\t\t\tparseNode( nodes[ i ], style );\n\n\t\t\t}\n\n\t\t\tif ( transform ) {\n\n\t\t\t\ttransformStack.pop();\n\n\t\t\t\tif ( transformStack.length > 0 ) {\n\n\t\t\t\t\tcurrentTransform.copy( transformStack[ transformStack.length - 1 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentTransform.identity();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parsePathNode( node ) {\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar point = new Vector2();\n\t\t\tvar control = new Vector2();\n\n\t\t\tvar firstPoint = new Vector2();\n\t\t\tvar isFirstPoint = true;\n\t\t\tvar doSetFirstPoint = false;\n\n\t\t\tvar d = node.getAttribute( 'd' );\n\n\t\t\t// console.log( d );\n\n\t\t\tvar commands = d.match( /[a-df-z][^a-df-z]*/ig );\n\n\t\t\tfor ( var i = 0, l = commands.length; i < l; i ++ ) {\n\n\t\t\t\tvar command = commands[ i ];\n\n\t\t\t\tvar type = command.charAt( 0 );\n\t\t\t\tvar data = command.substr( 1 ).trim();\n\n\t\t\t\tif ( isFirstPoint === true ) {\n\n\t\t\t\t\tdoSetFirstPoint = true;\n\t\t\t\t\tisFirstPoint = false;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'M':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\n\t\t\t\t\t\t\tif ( j === 0 ) {\n\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'H':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.y = numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'C':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 6 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 4 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 5 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 3 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 4 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 5 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'S':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Q':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tvar rx = getReflection( point.x, control.x );\n\t\t\t\t\t\t\tvar ry = getReflection( point.y, control.y );\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\trx,\n\t\t\t\t\t\t\t\try,\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 7 ) {\n\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 5 ];\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 6 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\n\t\t\t\t\t\t\tif ( j === 0 ) {\n\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'h':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpoint.y += numbers[ j ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 6 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 4 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 5 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 2 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 3 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 4 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 5 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.bezierCurveTo(\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\n\n\t\t\t\t\t\t\tvar rx = getReflection( point.x, control.x );\n\t\t\t\t\t\t\tvar ry = getReflection( point.y, control.y );\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\n\t\t\t\t\t\t\t\trx,\n\t\t\t\t\t\t\t\try,\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\t\tpoint.x = point.x + numbers[ j + 0 ];\n\t\t\t\t\t\t\tpoint.y = point.y + numbers[ j + 1 ];\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'a':\n\t\t\t\t\t\tvar numbers = parseFloats( data );\n\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 7 ) {\n\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 5 ];\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 6 ];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\tcase 'z':\n\t\t\t\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\t\t\t\tif ( path.currentPath.curves.length > 0 ) {\n\n\t\t\t\t\t\t\t// Reset point to beginning of Path\n\t\t\t\t\t\t\tpoint.copy( firstPoint );\n\t\t\t\t\t\t\tpath.currentPath.currentPoint.copy( point );\n\t\t\t\t\t\t\tisFirstPoint = true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( command );\n\n\t\t\t\t}\n\n\t\t\t\t// console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\n\t\t\t\tdoSetFirstPoint = false;\n\n\t\t\t}\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\t/**\n\t\t * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n\t\t * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n\t\t * From\n\t\t * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n\t\t * To\n\t\t * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n\t\t */\n\n\t\tfunction parseArcCommand( path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end ) {\n\n\t\t\tx_axis_rotation = x_axis_rotation * Math.PI / 180;\n\n\t\t\t// Ensure radii are positive\n\t\t\trx = Math.abs( rx );\n\t\t\try = Math.abs( ry );\n\n\t\t\t// Compute (x1′, y1′)\n\t\t\tvar dx2 = ( start.x - end.x ) / 2.0;\n\t\t\tvar dy2 = ( start.y - end.y ) / 2.0;\n\t\t\tvar x1p = Math.cos( x_axis_rotation ) * dx2 + Math.sin( x_axis_rotation ) * dy2;\n\t\t\tvar y1p = - Math.sin( x_axis_rotation ) * dx2 + Math.cos( x_axis_rotation ) * dy2;\n\n\t\t\t// Compute (cx′, cy′)\n\t\t\tvar rxs = rx * rx;\n\t\t\tvar rys = ry * ry;\n\t\t\tvar x1ps = x1p * x1p;\n\t\t\tvar y1ps = y1p * y1p;\n\n\t\t\t// Ensure radii are large enough\n\t\t\tvar cr = x1ps / rxs + y1ps / rys;\n\n\t\t\tif ( cr > 1 ) {\n\n\t\t\t\t// scale up rx,ry equally so cr == 1\n\t\t\t\tvar s = Math.sqrt( cr );\n\t\t\t\trx = s * rx;\n\t\t\t\try = s * ry;\n\t\t\t\trxs = rx * rx;\n\t\t\t\trys = ry * ry;\n\n\t\t\t}\n\n\t\t\tvar dq = ( rxs * y1ps + rys * x1ps );\n\t\t\tvar pq = ( rxs * rys - dq ) / dq;\n\t\t\tvar q = Math.sqrt( Math.max( 0, pq ) );\n\t\t\tif ( large_arc_flag === sweep_flag ) q = - q;\n\t\t\tvar cxp = q * rx * y1p / ry;\n\t\t\tvar cyp = - q * ry * x1p / rx;\n\n\t\t\t// Step 3: Compute (cx, cy) from (cx′, cy′)\n\t\t\tvar cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\n\t\t\tvar cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\n\n\t\t\t// Step 4: Compute θ1 and Δθ\n\t\t\tvar theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\n\t\t\tvar delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\n\n\t\t\tpath.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\n\n\t\t}\n\n\t\tfunction svgAngle( ux, uy, vx, vy ) {\n\n\t\t\tvar dot = ux * vx + uy * vy;\n\t\t\tvar len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\n\t\t\tvar ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\n\t\t\tif ( ( ux * vy - uy * vx ) < 0 ) ang = - ang;\n\t\t\treturn ang;\n\n\t\t}\n\n\t\t/*\n\t\t* According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n\t\t* rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n\t\t*/\n\t\tfunction parseRectNode( node ) {\n\n\t\t\tvar x = parseFloatWithUnits( node.getAttribute( 'x' ) || 0 );\n\t\t\tvar y = parseFloatWithUnits( node.getAttribute( 'y' ) || 0 );\n\t\t\tvar rx = parseFloatWithUnits( node.getAttribute( 'rx' ) || 0 );\n\t\t\tvar ry = parseFloatWithUnits( node.getAttribute( 'ry' ) || 0 );\n\t\t\tvar w = parseFloatWithUnits( node.getAttribute( 'width' ) );\n\t\t\tvar h = parseFloatWithUnits( node.getAttribute( 'height' ) );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.moveTo( x + 2 * rx, y );\n\t\t\tpath.lineTo( x + w - 2 * rx, y );\n\t\t\tif ( rx !== 0 || ry !== 0 ) path.bezierCurveTo( x + w, y, x + w, y, x + w, y + 2 * ry );\n\t\t\tpath.lineTo( x + w, y + h - 2 * ry );\n\t\t\tif ( rx !== 0 || ry !== 0 ) path.bezierCurveTo( x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h );\n\t\t\tpath.lineTo( x + 2 * rx, y + h );\n\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo( x, y + h, x, y + h, x, y + h - 2 * ry );\n\n\t\t\t}\n\n\t\t\tpath.lineTo( x, y + 2 * ry );\n\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\n\n\t\t\t\tpath.bezierCurveTo( x, y, x, y, x + 2 * rx, y );\n\n\t\t\t}\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parsePolygonNode( node ) {\n\n\t\t\tfunction iterator( match, a, b ) {\n\n\t\t\t\tvar x = parseFloatWithUnits( a );\n\t\t\t\tvar y = parseFloatWithUnits( b );\n\n\t\t\t\tif ( index === 0 ) {\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\n\n\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parsePolylineNode( node ) {\n\n\t\t\tfunction iterator( match, a, b ) {\n\n\t\t\t\tvar x = parseFloatWithUnits( a );\n\t\t\t\tvar y = parseFloatWithUnits( b );\n\n\t\t\t\tif ( index === 0 ) {\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\n\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseCircleNode( node ) {\n\n\t\t\tvar x = parseFloatWithUnits( node.getAttribute( 'cx' ) );\n\t\t\tvar y = parseFloatWithUnits( node.getAttribute( 'cy' ) );\n\t\t\tvar r = parseFloatWithUnits( node.getAttribute( 'r' ) );\n\n\t\t\tvar subpath = new Path();\n\t\t\tsubpath.absarc( x, y, r, 0, Math.PI * 2 );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.subPaths.push( subpath );\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseEllipseNode( node ) {\n\n\t\t\tvar x = parseFloatWithUnits( node.getAttribute( 'cx' ) );\n\t\t\tvar y = parseFloatWithUnits( node.getAttribute( 'cy' ) );\n\t\t\tvar rx = parseFloatWithUnits( node.getAttribute( 'rx' ) );\n\t\t\tvar ry = parseFloatWithUnits( node.getAttribute( 'ry' ) );\n\n\t\t\tvar subpath = new Path();\n\t\t\tsubpath.absellipse( x, y, rx, ry, 0, Math.PI * 2 );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.subPaths.push( subpath );\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\tfunction parseLineNode( node ) {\n\n\t\t\tvar x1 = parseFloatWithUnits( node.getAttribute( 'x1' ) );\n\t\t\tvar y1 = parseFloatWithUnits( node.getAttribute( 'y1' ) );\n\t\t\tvar x2 = parseFloatWithUnits( node.getAttribute( 'x2' ) );\n\t\t\tvar y2 = parseFloatWithUnits( node.getAttribute( 'y2' ) );\n\n\t\t\tvar path = new ShapePath();\n\t\t\tpath.moveTo( x1, y1 );\n\t\t\tpath.lineTo( x2, y2 );\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction parseStyle( node, style ) {\n\n\t\t\tstyle = Object.assign( {}, style ); // clone style\n\n\t\t\tfunction addStyle( svgName, jsName, adjustFunction ) {\n\n\t\t\t\tif ( adjustFunction === undefined ) adjustFunction = function copy( v ) {\n\n\t\t\t\t\treturn v;\n\n\t\t\t\t};\n\n\t\t\t\tif ( node.hasAttribute( svgName ) ) style[ jsName ] = adjustFunction( node.getAttribute( svgName ) );\n\t\t\t\tif ( node.style && node.style[ svgName ] !== '' ) style[ jsName ] = adjustFunction( node.style[ svgName ] );\n\n\t\t\t}\n\n\t\t\tfunction clamp( v ) {\n\n\t\t\t\treturn Math.max( 0, Math.min( 1, parseFloatWithUnits( v ) ) );\n\n\t\t\t}\n\n\t\t\tfunction positive( v ) {\n\n\t\t\t\treturn Math.max( 0, parseFloatWithUnits( v ) );\n\n\t\t\t}\n\n\t\t\taddStyle( 'fill', 'fill' );\n\t\t\taddStyle( 'fill-opacity', 'fillOpacity', clamp );\n\t\t\taddStyle( 'stroke', 'stroke' );\n\t\t\taddStyle( 'stroke-opacity', 'strokeOpacity', clamp );\n\t\t\taddStyle( 'stroke-width', 'strokeWidth', positive );\n\t\t\taddStyle( 'stroke-linejoin', 'strokeLineJoin' );\n\t\t\taddStyle( 'stroke-linecap', 'strokeLineCap' );\n\t\t\taddStyle( 'stroke-miterlimit', 'strokeMiterLimit', positive );\n\n\t\t\treturn style;\n\n\t\t}\n\n\t\t// http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n\t\tfunction getReflection( a, b ) {\n\n\t\t\treturn a - ( b - a );\n\n\t\t}\n\n\t\tfunction parseFloats( string ) {\n\n\t\t\tvar array = string.split( /[\\s,]+|(?=\\s?[+\\-])/ );\n\n\t\t\tfor ( var i = 0; i < array.length; i ++ ) {\n\n\t\t\t\tvar number = array[ i ];\n\n\t\t\t\t// Handle values like 48.6037.7.8\n\t\t\t\t// TODO Find a regex for this\n\n\t\t\t\tif ( number.indexOf( '.' ) !== number.lastIndexOf( '.' ) ) {\n\n\t\t\t\t\tvar split = number.split( '.' );\n\n\t\t\t\t\tfor ( var s = 2; s < split.length; s ++ ) {\n\n\t\t\t\t\t\tarray.splice( i + s - 1, 0, '0.' + split[ s ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tarray[ i ] = parseFloatWithUnits( number );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\n\t\t}\n\n\t\t// Units\n\n\t\tvar units = [ 'mm', 'cm', 'in', 'pt', 'pc', 'px' ];\n\n\t\t// Conversion: [ fromUnit ][ toUnit ] (-1 means dpi dependent)\n\t\tvar unitConversion = {\n\n\t\t\t\"mm\": {\n\t\t\t\t\"mm\": 1,\n\t\t\t\t\"cm\": 0.1,\n\t\t\t\t\"in\": 1 / 25.4,\n\t\t\t\t\"pt\": 72 / 25.4,\n\t\t\t\t\"pc\": 6 / 25.4,\n\t\t\t\t\"px\": - 1\n\t\t\t},\n\t\t\t\"cm\": {\n\t\t\t\t\"mm\": 10,\n\t\t\t\t\"cm\": 1,\n\t\t\t\t\"in\": 1 / 2.54,\n\t\t\t\t\"pt\": 72 / 2.54,\n\t\t\t\t\"pc\": 6 / 2.54,\n\t\t\t\t\"px\": - 1\n\t\t\t},\n\t\t\t\"in\": {\n\t\t\t\t\"mm\": 25.4,\n\t\t\t\t\"cm\": 2.54,\n\t\t\t\t\"in\": 1,\n\t\t\t\t\"pt\": 72,\n\t\t\t\t\"pc\": 6,\n\t\t\t\t\"px\": - 1\n\t\t\t},\n\t\t\t\"pt\": {\n\t\t\t\t\"mm\": 25.4 / 72,\n\t\t\t\t\"cm\": 2.54 / 72,\n\t\t\t\t\"in\": 1 / 72,\n\t\t\t\t\"pt\": 1,\n\t\t\t\t\"pc\": 6 / 72,\n\t\t\t\t\"px\": - 1\n\t\t\t},\n\t\t\t\"pc\": {\n\t\t\t\t\"mm\": 25.4 / 6,\n\t\t\t\t\"cm\": 2.54 / 6,\n\t\t\t\t\"in\": 1 / 6,\n\t\t\t\t\"pt\": 72 / 6,\n\t\t\t\t\"pc\": 1,\n\t\t\t\t\"px\": - 1\n\t\t\t},\n\t\t\t\"px\": {\n\t\t\t\t\"px\": 1\n\t\t\t}\n\n\t\t};\n\n\t\tfunction parseFloatWithUnits( string ) {\n\n\t\t\tvar theUnit = \"px\";\n\n\t\t\tif ( typeof string === 'string' || string instanceof String ) {\n\n\t\t\t\tfor ( var i = 0, n = units.length; i < n; i ++ ) {\n\n\t\t\t\t\tvar u = units[ i ];\n\n\t\t\t\t\tif ( string.endsWith( u ) ) {\n\n\t\t\t\t\t\ttheUnit = u;\n\t\t\t\t\t\tstring = string.substring( 0, string.length - u.length );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar scale = undefined;\n\n\t\t\tif ( theUnit === \"px\" && scope.defaultUnit !== \"px\" ) {\n\n\t\t\t\t// Conversion scale from  pixels to inches, then to default units\n\n\t\t\t\tscale = unitConversion[ \"in\" ][ scope.defaultUnit ] / scope.defaultDPI;\n\n\t\t\t} else {\n\n\t\t\t\tscale = unitConversion[ theUnit ][ scope.defaultUnit ];\n\n\t\t\t\tif ( scale < 0 ) {\n\n\t\t\t\t\t// Conversion scale to pixels\n\n\t\t\t\t\tscale = unitConversion[ theUnit ][ \"in\" ] * scope.defaultDPI;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn scale * parseFloat( string );\n\n\t\t}\n\n\t\t// Transforms\n\n\t\tfunction getNodeTransform( node ) {\n\n\t\t\tif ( ! node.hasAttribute( 'transform' ) ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar transform = parseNodeTransform( node );\n\n\t\t\tif ( transformStack.length > 0 ) {\n\n\t\t\t\ttransform.premultiply( transformStack[ transformStack.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tcurrentTransform.copy( transform );\n\t\t\ttransformStack.push( transform );\n\n\t\t\treturn transform;\n\n\t\t}\n\n\t\tfunction parseNodeTransform( node ) {\n\n\t\t\tvar transform = new Matrix3();\n\t\t\tvar currentTransform = tempTransform0;\n\t\t\tvar transformsTexts = node.getAttribute( 'transform' ).split( ')' );\n\n\t\t\tfor ( var tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\n\n\t\t\t\tvar transformText = transformsTexts[ tIndex ].trim();\n\n\t\t\t\tif ( transformText === '' ) continue;\n\n\t\t\t\tvar openParPos = transformText.indexOf( '(' );\n\t\t\t\tvar closeParPos = transformText.length;\n\n\t\t\t\tif ( openParPos > 0 && openParPos < closeParPos ) {\n\n\t\t\t\t\tvar transformType = transformText.substr( 0, openParPos );\n\n\t\t\t\t\tvar array = parseFloats( transformText.substr( openParPos + 1, closeParPos - openParPos - 1 ) );\n\n\t\t\t\t\tcurrentTransform.identity();\n\n\t\t\t\t\tswitch ( transformType ) {\n\n\t\t\t\t\t\tcase \"translate\":\n\n\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\tvar tx = array[ 0 ];\n\t\t\t\t\t\t\t\tvar ty = tx;\n\n\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\n\n\t\t\t\t\t\t\t\t\tty = array[ 1 ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcurrentTransform.translate( tx, ty );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"rotate\":\n\n\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\tvar angle = 0;\n\t\t\t\t\t\t\t\tvar cx = 0;\n\t\t\t\t\t\t\t\tvar cy = 0;\n\n\t\t\t\t\t\t\t\t// Angle\n\t\t\t\t\t\t\t\tangle = - array[ 0 ] * Math.PI / 180;\n\n\t\t\t\t\t\t\t\tif ( array.length >= 3 ) {\n\n\t\t\t\t\t\t\t\t\t// Center x, y\n\t\t\t\t\t\t\t\t\tcx = array[ 1 ];\n\t\t\t\t\t\t\t\t\tcy = array[ 2 ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Rotate around center (cx, cy)\n\t\t\t\t\t\t\t\ttempTransform1.identity().translate( - cx, - cy );\n\t\t\t\t\t\t\t\ttempTransform2.identity().rotate( angle );\n\t\t\t\t\t\t\t\ttempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\n\t\t\t\t\t\t\t\ttempTransform1.identity().translate( cx, cy );\n\t\t\t\t\t\t\t\tcurrentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"scale\":\n\n\t\t\t\t\t\t\tif ( array.length >= 1 ) {\n\n\t\t\t\t\t\t\t\tvar scaleX = array[ 0 ];\n\t\t\t\t\t\t\t\tvar scaleY = scaleX;\n\n\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\n\n\t\t\t\t\t\t\t\t\tscaleY = array[ 1 ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcurrentTransform.scale( scaleX, scaleY );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"skewX\":\n\n\t\t\t\t\t\t\tif ( array.length === 1 ) {\n\n\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\t1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\n\t\t\t\t\t\t\t\t\t0, 1, 0,\n\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"skewY\":\n\n\t\t\t\t\t\t\tif ( array.length === 1 ) {\n\n\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\t1, 0, 0,\n\t\t\t\t\t\t\t\t\tMath.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\n\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"matrix\":\n\n\t\t\t\t\t\t\tif ( array.length === 6 ) {\n\n\t\t\t\t\t\t\t\tcurrentTransform.set(\n\t\t\t\t\t\t\t\t\tarray[ 0 ], array[ 2 ], array[ 4 ],\n\t\t\t\t\t\t\t\t\tarray[ 1 ], array[ 3 ], array[ 5 ],\n\t\t\t\t\t\t\t\t\t0, 0, 1\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttransform.premultiply( currentTransform );\n\n\t\t\t}\n\n\t\t\treturn transform;\n\n\t\t}\n\n\t\tfunction transformPath( path, m ) {\n\n\t\t\tfunction transfVec2( v2 ) {\n\n\t\t\t\ttempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\n\n\t\t\t\tv2.set( tempV3.x, tempV3.y );\n\n\t\t\t}\n\n\t\t\tvar isRotated = isTransformRotated( m );\n\n\t\t\tvar subPaths = path.subPaths;\n\n\t\t\tfor ( var i = 0, n = subPaths.length; i < n; i ++ ) {\n\n\t\t\t\tvar subPath = subPaths[ i ];\n\t\t\t\tvar curves = subPath.curves;\n\n\t\t\t\tfor ( var j = 0; j < curves.length; j ++ ) {\n\n\t\t\t\t\tvar curve = curves[ j ];\n\n\t\t\t\t\tif ( curve.isLineCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\n\t\t\t\t\t} else if ( curve.isCubicBezierCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v0 );\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\t\t\t\t\t\ttransfVec2( curve.v3 );\n\n\t\t\t\t\t} else if ( curve.isQuadraticBezierCurve ) {\n\n\t\t\t\t\t\ttransfVec2( curve.v0 );\n\t\t\t\t\t\ttransfVec2( curve.v1 );\n\t\t\t\t\t\ttransfVec2( curve.v2 );\n\n\t\t\t\t\t} else if ( curve.isEllipseCurve ) {\n\n\t\t\t\t\t\tif ( isRotated ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented.\" );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttempV2.set( curve.aX, curve.aY );\n\t\t\t\t\t\ttransfVec2( tempV2 );\n\t\t\t\t\t\tcurve.aX = tempV2.x;\n\t\t\t\t\t\tcurve.aY = tempV2.y;\n\n\t\t\t\t\t\tcurve.xRadius *= getTransformScaleX( m );\n\t\t\t\t\t\tcurve.yRadius *= getTransformScaleY( m );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTransformRotated( m ) {\n\n\t\t\treturn m.elements[ 1 ] !== 0 || m.elements[ 3 ] !== 0;\n\n\t\t}\n\n\t\tfunction getTransformScaleX( m ) {\n\n\t\t\tvar te = m.elements;\n\t\t\treturn Math.sqrt( te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] );\n\n\t\t}\n\n\t\tfunction getTransformScaleY( m ) {\n\n\t\t\tvar te = m.elements;\n\t\t\treturn Math.sqrt( te[ 3 ] * te[ 3 ] + te[ 4 ] * te[ 4 ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar paths = [];\n\n\t\tvar transformStack = [];\n\n\t\tvar tempTransform0 = new Matrix3();\n\t\tvar tempTransform1 = new Matrix3();\n\t\tvar tempTransform2 = new Matrix3();\n\t\tvar tempTransform3 = new Matrix3();\n\t\tvar tempV2 = new Vector2();\n\t\tvar tempV3 = new Vector3();\n\n\t\tvar currentTransform = new Matrix3();\n\n\t\tvar xml = new DOMParser().parseFromString( text, 'image/svg+xml' ); // application/xml\n\n\t\tparseNode( xml.documentElement, {\n\t\t\tfill: '#000',\n\t\t\tfillOpacity: 1,\n\t\t\tstrokeOpacity: 1,\n\t\t\tstrokeWidth: 1,\n\t\t\tstrokeLineJoin: 'miter',\n\t\t\tstrokeLineCap: 'butt',\n\t\t\tstrokeMiterLimit: 4\n\t\t} );\n\n\t\tvar data = { paths: paths, xml: xml.documentElement };\n\n\t\t// console.log( paths );\n\t\treturn data;\n\n\t}\n\n} );\n\nSVGLoader.getStrokeStyle = function ( width, color, lineJoin, lineCap, miterLimit ) {\n\n\t// Param width: Stroke width\n\t// Param color: As returned by THREE.Color.getStyle()\n\t// Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\n\t// Param lineCap: One of \"round\", \"square\" or \"butt\"\n\t// Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\n\t// Returns style object\n\n\twidth = width !== undefined ? width : 1;\n\tcolor = color !== undefined ? color : '#000';\n\tlineJoin = lineJoin !== undefined ? lineJoin : 'miter';\n\tlineCap = lineCap !== undefined ? lineCap : 'butt';\n\tmiterLimit = miterLimit !== undefined ? miterLimit : 4;\n\n\treturn {\n\t\tstrokeColor: color,\n\t\tstrokeWidth: width,\n\t\tstrokeLineJoin: lineJoin,\n\t\tstrokeLineCap: lineCap,\n\t\tstrokeMiterLimit: miterLimit\n\t};\n\n};\n\nSVGLoader.pointsToStroke = function ( points, style, arcDivisions, minDistance ) {\n\n\t// Generates a stroke with some witdh around the given path.\n\t// The path can be open or closed (last point equals to first point)\n\t// Param points: Array of Vector2D (the path). Minimum 2 points.\n\t// Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\n\t// Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\n\t// Param minDistance: Points closer to this distance will be merged. (Optional)\n\t// Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tif ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\n\n\t\treturn null;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\treturn geometry;\n\n};\n\nSVGLoader.pointsToStrokeWithBuffers = function () {\n\n\tvar tempV2_1 = new Vector2();\n\tvar tempV2_2 = new Vector2();\n\tvar tempV2_3 = new Vector2();\n\tvar tempV2_4 = new Vector2();\n\tvar tempV2_5 = new Vector2();\n\tvar tempV2_6 = new Vector2();\n\tvar tempV2_7 = new Vector2();\n\tvar lastPointL = new Vector2();\n\tvar lastPointR = new Vector2();\n\tvar point0L = new Vector2();\n\tvar point0R = new Vector2();\n\tvar currentPointL = new Vector2();\n\tvar currentPointR = new Vector2();\n\tvar nextPointL = new Vector2();\n\tvar nextPointR = new Vector2();\n\tvar innerPoint = new Vector2();\n\tvar outerPoint = new Vector2();\n\n\treturn function ( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset ) {\n\n\t\t// This function can be called to update existing arrays or buffers.\n\t\t// Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\n\t\t// Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\n\t\t// Returns number of written vertices / normals / uvs pairs\n\t\t// if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\n\t\t// 'normals' and 'uvs' buffers are optional\n\n\t\tarcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\n\t\tminDistance = minDistance !== undefined ? minDistance : 0.001;\n\t\tvertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\n\n\t\t// First ensure there are no duplicated points\n\t\tpoints = removeDuplicatedPoints( points );\n\n\t\tvar numPoints = points.length;\n\n\t\tif ( numPoints < 2 ) return 0;\n\n\t\tvar isClosed = points[ 0 ].equals( points[ numPoints - 1 ] );\n\n\t\tvar currentPoint;\n\t\tvar previousPoint = points[ 0 ];\n\t\tvar nextPoint;\n\n\t\tvar strokeWidth2 = style.strokeWidth / 2;\n\n\t\tvar deltaU = 1 / ( numPoints - 1 );\n\t\tvar u0 = 0;\n\n\t\tvar innerSideModified;\n\t\tvar joinIsOnLeftSide;\n\t\tvar isMiter;\n\t\tvar initialJoinIsOnLeftSide = false;\n\n\t\tvar numVertices = 0;\n\t\tvar currentCoordinate = vertexOffset * 3;\n\t\tvar currentCoordinateUV = vertexOffset * 2;\n\n\t\t// Get initial left and right stroke points\n\t\tgetNormal( points[ 0 ], points[ 1 ], tempV2_1 ).multiplyScalar( strokeWidth2 );\n\t\tlastPointL.copy( points[ 0 ] ).sub( tempV2_1 );\n\t\tlastPointR.copy( points[ 0 ] ).add( tempV2_1 );\n\t\tpoint0L.copy( lastPointL );\n\t\tpoint0R.copy( lastPointR );\n\n\t\tfor ( var iPoint = 1; iPoint < numPoints; iPoint ++ ) {\n\n\t\t\tcurrentPoint = points[ iPoint ];\n\n\t\t\t// Get next point\n\t\t\tif ( iPoint === numPoints - 1 ) {\n\n\t\t\t\tif ( isClosed ) {\n\n\t\t\t\t\t// Skip duplicated initial point\n\t\t\t\t\tnextPoint = points[ 1 ];\n\n\t\t\t\t} else nextPoint = undefined;\n\n\t\t\t} else {\n\n\t\t\t\tnextPoint = points[ iPoint + 1 ];\n\n\t\t\t}\n\n\t\t\t// Normal of previous segment in tempV2_1\n\t\t\tvar normal1 = tempV2_1;\n\t\t\tgetNormal( previousPoint, currentPoint, normal1 );\n\n\t\t\ttempV2_3.copy( normal1 ).multiplyScalar( strokeWidth2 );\n\t\t\tcurrentPointL.copy( currentPoint ).sub( tempV2_3 );\n\t\t\tcurrentPointR.copy( currentPoint ).add( tempV2_3 );\n\n\t\t\tvar u1 = u0 + deltaU;\n\n\t\t\tinnerSideModified = false;\n\n\t\t\tif ( nextPoint !== undefined ) {\n\n\t\t\t\t// Normal of next segment in tempV2_2\n\t\t\t\tgetNormal( currentPoint, nextPoint, tempV2_2 );\n\n\t\t\t\ttempV2_3.copy( tempV2_2 ).multiplyScalar( strokeWidth2 );\n\t\t\t\tnextPointL.copy( currentPoint ).sub( tempV2_3 );\n\t\t\t\tnextPointR.copy( currentPoint ).add( tempV2_3 );\n\n\t\t\t\tjoinIsOnLeftSide = true;\n\t\t\t\ttempV2_3.subVectors( nextPoint, previousPoint );\n\t\t\t\tif ( normal1.dot( tempV2_3 ) < 0 ) {\n\n\t\t\t\t\tjoinIsOnLeftSide = false;\n\n\t\t\t\t}\n\t\t\t\tif ( iPoint === 1 ) initialJoinIsOnLeftSide = joinIsOnLeftSide;\n\n\t\t\t\ttempV2_3.subVectors( nextPoint, currentPoint );\n\t\t\t\ttempV2_3.normalize();\n\t\t\t\tvar dot = Math.abs( normal1.dot( tempV2_3 ) );\n\n\t\t\t\t// If path is straight, don't create join\n\t\t\t\tif ( dot !== 0 ) {\n\n\t\t\t\t\t// Compute inner and outer segment intersections\n\t\t\t\t\tvar miterSide = strokeWidth2 / dot;\n\t\t\t\t\ttempV2_3.multiplyScalar( - miterSide );\n\t\t\t\t\ttempV2_4.subVectors( currentPoint, previousPoint );\n\t\t\t\t\ttempV2_5.copy( tempV2_4 ).setLength( miterSide ).add( tempV2_3 );\n\t\t\t\t\tinnerPoint.copy( tempV2_5 ).negate();\n\t\t\t\t\tvar miterLength2 = tempV2_5.length();\n\t\t\t\t\tvar segmentLengthPrev = tempV2_4.length();\n\t\t\t\t\ttempV2_4.divideScalar( segmentLengthPrev );\n\t\t\t\t\ttempV2_6.subVectors( nextPoint, currentPoint );\n\t\t\t\t\tvar segmentLengthNext = tempV2_6.length();\n\t\t\t\t\ttempV2_6.divideScalar( segmentLengthNext );\n\t\t\t\t\t// Check that previous and next segments doesn't overlap with the innerPoint of intersection\n\t\t\t\t\tif ( tempV2_4.dot( innerPoint ) < segmentLengthPrev && tempV2_6.dot( innerPoint ) < segmentLengthNext ) {\n\n\t\t\t\t\t\tinnerSideModified = true;\n\n\t\t\t\t\t}\n\t\t\t\t\touterPoint.copy( tempV2_5 ).add( currentPoint );\n\t\t\t\t\tinnerPoint.add( currentPoint );\n\n\t\t\t\t\tisMiter = false;\n\n\t\t\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\tnextPointR.copy( innerPoint );\n\t\t\t\t\t\t\tcurrentPointR.copy( innerPoint );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tnextPointL.copy( innerPoint );\n\t\t\t\t\t\t\tcurrentPointL.copy( innerPoint );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// The segment triangles are generated here if there was overlapping\n\n\t\t\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch ( style.strokeLineJoin ) {\n\n\t\t\t\t\t\tcase 'bevel':\n\n\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'round':\n\n\t\t\t\t\t\t\t// Segment triangles\n\n\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\n\n\t\t\t\t\t\t\t// Join triangles\n\n\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, currentPointL, nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, nextPointR, currentPointR, u1, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'miter':\n\t\t\t\t\t\tcase 'miter-clip':\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tvar miterFraction = ( strokeWidth2 * style.strokeMiterLimit ) / miterLength2;\n\n\t\t\t\t\t\t\tif ( miterFraction < 1 ) {\n\n\t\t\t\t\t\t\t\t// The join miter length exceeds the miter limit\n\n\t\t\t\t\t\t\t\tif ( style.strokeLineJoin !== 'miter-clip' ) {\n\n\t\t\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// Segment triangles\n\n\t\t\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\n\n\t\t\t\t\t\t\t\t\t// Miter-clip join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointL ).multiplyScalar( miterFraction ).add( currentPointL );\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointL ).multiplyScalar( miterFraction ).add( nextPointL );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointR ).multiplyScalar( miterFraction ).add( currentPointR );\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointR ).multiplyScalar( miterFraction ).add( nextPointR );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Miter join segment triangles\n\n\t\t\t\t\t\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t\t\t\t\t\t// Optimized segment + join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\tnextPointL.copy( outerPoint );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tnextPointR.copy( outerPoint );\n\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t// Add extra miter join triangles\n\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tisMiter = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// The segment triangles are generated here when two consecutive points are collinear\n\n\t\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The segment triangles are generated here if it is the ending segment\n\n\t\t\t\tmakeSegmentTriangles();\n\n\t\t\t}\n\n\t\t\tif ( ! isClosed && iPoint === numPoints - 1 ) {\n\n\t\t\t\t// Start line endcap\n\t\t\t\taddCapGeometry( points[ 0 ], point0L, point0R, joinIsOnLeftSide, true, u0 );\n\n\t\t\t}\n\n\t\t\t// Increment loop variables\n\n\t\t\tu0 = u1;\n\n\t\t\tpreviousPoint = currentPoint;\n\n\t\t\tlastPointL.copy( nextPointL );\n\t\t\tlastPointR.copy( nextPointR );\n\n\t\t}\n\n\t\tif ( ! isClosed ) {\n\n\t\t\t// Ending line endcap\n\t\t\taddCapGeometry( currentPoint, currentPointL, currentPointR, joinIsOnLeftSide, false, u1 );\n\n\t\t} else if ( innerSideModified && vertices ) {\n\n\t\t\t// Modify path first segment vertices to adjust to the segments inner and outer intersections\n\n\t\t\tvar lastOuter = outerPoint;\n\t\t\tvar lastInner = innerPoint;\n\n\t\t\tif ( initialJoinIsOnLeftSide !== joinIsOnLeftSide ) {\n\n\t\t\t\tlastOuter = innerPoint;\n\t\t\t\tlastInner = outerPoint;\n\n\t\t\t}\n\n\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\tif ( isMiter || initialJoinIsOnLeftSide ) {\n\n\t\t\t\t\tlastInner.toArray( vertices, 0 * 3 );\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\n\n\t\t\t\t\tif ( isMiter ) {\n\n\t\t\t\t\t\tlastOuter.toArray( vertices, 1 * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( isMiter || ! initialJoinIsOnLeftSide ) {\n\n\t\t\t\t\tlastInner.toArray( vertices, 1 * 3 );\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\n\n\t\t\t\t\tif ( isMiter ) {\n\n\t\t\t\t\t\tlastOuter.toArray( vertices, 0 * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn numVertices;\n\n\t\t// -- End of algorithm\n\n\t\t// -- Functions\n\n\t\tfunction getNormal( p1, p2, result ) {\n\n\t\t\tresult.subVectors( p2, p1 );\n\t\t\treturn result.set( - result.y, result.x ).normalize();\n\n\t\t}\n\n\t\tfunction addVertex( position, u, v ) {\n\n\t\t\tif ( vertices ) {\n\n\t\t\t\tvertices[ currentCoordinate ] = position.x;\n\t\t\t\tvertices[ currentCoordinate + 1 ] = position.y;\n\t\t\t\tvertices[ currentCoordinate + 2 ] = 0;\n\n\t\t\t\tif ( normals ) {\n\n\t\t\t\t\tnormals[ currentCoordinate ] = 0;\n\t\t\t\t\tnormals[ currentCoordinate + 1 ] = 0;\n\t\t\t\t\tnormals[ currentCoordinate + 2 ] = 1;\n\n\t\t\t\t}\n\n\t\t\t\tcurrentCoordinate += 3;\n\n\t\t\t\tif ( uvs ) {\n\n\t\t\t\t\tuvs[ currentCoordinateUV ] = u;\n\t\t\t\t\tuvs[ currentCoordinateUV + 1 ] = v;\n\n\t\t\t\t\tcurrentCoordinateUV += 2;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnumVertices += 3;\n\n\t\t}\n\n\t\tfunction makeCircularSector( center, p1, p2, u, v ) {\n\n\t\t\t// param p1, p2: Points in the circle arc.\n\t\t\t// p1 and p2 are in clockwise direction.\n\n\t\t\ttempV2_1.copy( p1 ).sub( center ).normalize();\n\t\t\ttempV2_2.copy( p2 ).sub( center ).normalize();\n\n\t\t\tvar angle = Math.PI;\n\t\t\tvar dot = tempV2_1.dot( tempV2_2 );\n\t\t\tif ( Math.abs( dot ) < 1 ) angle = Math.abs( Math.acos( dot ) );\n\n\t\t\tangle /= arcDivisions;\n\n\t\t\ttempV2_3.copy( p1 );\n\n\t\t\tfor ( var i = 0, il = arcDivisions - 1; i < il; i ++ ) {\n\n\t\t\t\ttempV2_4.copy( tempV2_3 ).rotateAround( center, angle );\n\n\t\t\t\taddVertex( tempV2_3, u, v );\n\t\t\t\taddVertex( tempV2_4, u, v );\n\t\t\t\taddVertex( center, u, 0.5 );\n\n\t\t\t\ttempV2_3.copy( tempV2_4 );\n\n\t\t\t}\n\n\t\t\taddVertex( tempV2_4, u, v );\n\t\t\taddVertex( p2, u, v );\n\t\t\taddVertex( center, u, 0.5 );\n\n\t\t}\n\n\t\tfunction makeSegmentTriangles() {\n\n\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\taddVertex( currentPointL, u1, 1 );\n\t\t\taddVertex( currentPointR, u1, 0 );\n\n\t\t}\n\n\t\tfunction makeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u ) {\n\n\t\t\tif ( innerSideModified ) {\n\n\t\t\t\t// Optimized segment + bevel triangles\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t// Path segments triangles\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\t// Bevel join triangle\n\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Path segments triangles\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\t// Bevel join triangle\n\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bevel join triangle. The segment triangles are done in the main loop\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified ) {\n\n\t\t\tif ( innerSideModified ) {\n\n\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( nextPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\n\n\t\t\t\t\taddVertex( currentPointR, u0, 1 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\n\t\t\t\t\taddVertex( nextPointR, u0, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addCapGeometry( center, p1, p2, joinIsOnLeftSide, start, u ) {\n\n\t\t\t// param center: End point of the path\n\t\t\t// param p1, p2: Left and right cap points\n\n\t\t\tswitch ( style.strokeLineCap ) {\n\n\t\t\t\tcase 'round':\n\n\t\t\t\t\tif ( start ) {\n\n\t\t\t\t\t\tmakeCircularSector( center, p2, p1, u, 0.5 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmakeCircularSector( center, p1, p2, u, 0.5 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'square':\n\n\t\t\t\t\tif ( start ) {\n\n\t\t\t\t\t\ttempV2_1.subVectors( p1, center );\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\n\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\n\n\t\t\t\t\t\t// Modify already existing vertices\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 3 * 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 3 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttempV2_1.subVectors( p2, center );\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\n\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\n\n\t\t\t\t\t\tvar vl = vertices.length;\n\n\t\t\t\t\t\t// Modify already existing vertices\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 2 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 2 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 1 * 3 );\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'butt':\n\t\t\t\tdefault:\n\n\t\t\t\t\t// Nothing to do here\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction removeDuplicatedPoints( points ) {\n\n\t\t\t// Creates a new array if necessary with duplicated points removed.\n\t\t\t// This does not remove duplicated initial and ending points of a closed path.\n\n\t\t\tvar dupPoints = false;\n\t\t\tfor ( var i = 1, n = points.length - 1; i < n; i ++ ) {\n\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) < minDistance ) {\n\n\t\t\t\t\tdupPoints = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! dupPoints ) return points;\n\n\t\t\tvar newPoints = [];\n\t\t\tnewPoints.push( points[ 0 ] );\n\n\t\t\tfor ( var i = 1, n = points.length - 1; i < n; i ++ ) {\n\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) >= minDistance ) {\n\n\t\t\t\t\tnewPoints.push( points[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tnewPoints.push( points[ points.length - 1 ] );\n\n\t\t\treturn newPoints;\n\n\t\t}\n\n\t};\n\n}();\n\nexport { SVGLoader };\n","import {TorusBufferGeometry} from 'three/src/geometries/TorusGeometry';\nimport {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass TorusSopParamsConfig extends NodeParamsConfig {\n\tradius = ParamConfig.FLOAT(1, {range: [0, 1]});\n\tradius_tube = ParamConfig.FLOAT(1, {range: [0, 1]});\n\tsegments_radial = ParamConfig.INTEGER(20, {\n\t\trange: [1, 50],\n\t\trange_locked: [true, false],\n\t});\n\tsegments_tube = ParamConfig.INTEGER(12, {\n\t\trange: [1, 50],\n\t\trange_locked: [true, false],\n\t});\n}\nconst ParamsConfig = new TorusSopParamsConfig();\n\nexport class TorusSopNode extends TypedSopNode<TorusSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'torus';\n\t}\n\tinitialize_node() {}\n\n\tcook() {\n\t\tconst radius = this.pv.radius;\n\t\tconst radius_tube = this.pv.radius_tube;\n\t\tconst segments_radial = this.pv.segments_radial;\n\t\tconst segments_tube = this.pv.segments_tube;\n\t\t//radius : Float, tube : Float, radialSegments : Integer, tubularSegments : Integer, arc : Float\n\n\t\tconst geometry = new TorusBufferGeometry(radius, radius_tube, segments_radial, segments_tube);\n\t\tthis.set_geometry(geometry);\n\t}\n}\n","import {TorusKnotBufferGeometry} from 'three/src/geometries/TorusKnotGeometry';\nconst THREE = {TorusKnotBufferGeometry};\nimport {TypedSopNode} from './_Base';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass TorusKnotSopParamsConfig extends NodeParamsConfig {\n\tradius = ParamConfig.FLOAT(1);\n\tradius_tube = ParamConfig.FLOAT(1);\n\tsegments_radial = ParamConfig.INTEGER(64, {range: [1, 128]});\n\tsegments_tube = ParamConfig.INTEGER(8, {range: [1, 32]});\n\tp = ParamConfig.INTEGER(2, {range: [1, 10]});\n\tq = ParamConfig.INTEGER(3, {range: [1, 10]});\n}\nconst ParamsConfig = new TorusKnotSopParamsConfig();\n\nexport class TorusKnotSopNode extends TypedSopNode<TorusKnotSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'torus_knot';\n\t}\n\tinitialize_node() {}\n\n\tcook() {\n\t\tconst radius = this.pv.radius;\n\t\tconst radius_tube = this.pv.radius_tube;\n\t\tconst segments_radial = this.pv.segments_radial;\n\t\tconst segments_tube = this.pv.segments_tube;\n\t\tconst p = this.pv.p;\n\t\tconst q = this.pv.q;\n\n\t\tconst geometry = new THREE.TorusKnotBufferGeometry(radius, radius_tube, segments_radial, segments_tube, p, q);\n\t\tthis.set_geometry(geometry);\n\t}\n}\n","import {TypedSopNode} from './_Base';\n// import {GroupParamController} from './utils/GroupParamController';\n\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CoreTransform} from '../../../core/Transform';\n// import {ParamType} from '../../poly/ParamType';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\n\n// const DEFAULT_PARAMS = {\n// \tPIVOT: [0, 0, 0] as [number, number, number],\n// };\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass TransformSopParamConfig extends NodeParamsConfig {\n\tgroup = ParamConfig.STRING('');\n\n\t// transform\n\tt = ParamConfig.VECTOR3([0, 0, 0]);\n\tr = ParamConfig.VECTOR3([0, 0, 0]);\n\ts = ParamConfig.VECTOR3([1, 1, 1]);\n\tscale = ParamConfig.FLOAT(1);\n\tlook_at = ParamConfig.OPERATOR_PATH('');\n\tup = ParamConfig.VECTOR3([0, 1, 0]);\n\tpivot = ParamConfig.VECTOR3([0, 0, 0]);\n}\nconst ParamsConfig = new TransformSopParamConfig();\n\nexport class TransformSopNode extends TypedSopNode<TransformSopParamConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'transform';\n\t}\n\t// allow_eval_key_check() {\n\t// \treturn true;\n\t// }\n\n\tstatic displayed_input_names(): string[] {\n\t\treturn ['geometry to transform'];\n\t}\n\n\t// constructor(scene: PolyScene) {\n\t// \tsuper(scene);\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\tcook(input_contents: CoreGroup[]) {\n\t\tconst objects = input_contents[0].objects();\n\t\tconst matrix = this._core_transform.matrix(this.pv.t, this.pv.r, this.pv.s, this.pv.scale);\n\n\t\tif (this.pv.group === '') {\n\t\t\tfor (let object of objects) {\n\t\t\t\tlet geometry;\n\t\t\t\tif ((geometry = object.geometry) != null) {\n\t\t\t\t\tgeometry.translate(-this.pv.pivot.x, -this.pv.pivot.y, -this.pv.pivot.z);\n\t\t\t\t\tgeometry.applyMatrix4(matrix);\n\t\t\t\t\tgeometry.translate(this.pv.pivot.x, this.pv.pivot.y, this.pv.pivot.z);\n\t\t\t\t} else {\n\t\t\t\t\tobject.applyMatrix4(matrix);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst core_group = CoreGroup.from_objects(objects);\n\t\t\tconst points = core_group.points_from_group(this.pv.group);\n\t\t\tfor (let point of points) {\n\t\t\t\tconst position = point.position().sub(this.pv.pivot);\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tpoint.set_position(position.add(this.pv.pivot));\n\t\t\t}\n\t\t}\n\n\t\tthis.set_objects(objects);\n\t}\n}\n","import {TypedSopNode} from './_Base';\n\nimport {Vector3} from 'three/src/math/Vector3';\nimport {CylinderBufferGeometry} from 'three/src/geometries/CylinderGeometry';\nimport {CoreTransform} from '../../../core/Transform';\n\nconst DEFAULT_UP = new Vector3(0, 1, 0);\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nclass TubeSopParamsConfig extends NodeParamsConfig {\n\tradius = ParamConfig.FLOAT(1, {range: [0, 1]});\n\theight = ParamConfig.FLOAT(1, {range: [0, 1]});\n\tsegments_radial = ParamConfig.INTEGER(12, {range: [3, 20], range_locked: [true, false]});\n\tsegments_height = ParamConfig.INTEGER(1, {range: [1, 20], range_locked: [true, false]});\n\tcap = ParamConfig.BOOLEAN(1);\n\tcenter = ParamConfig.VECTOR3([0, 0, 0]);\n\tdirection = ParamConfig.VECTOR3([0, 0, 1]);\n}\nconst ParamsConfig = new TubeSopParamsConfig();\n\nexport class TubeSopNode extends TypedSopNode<TubeSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'tube';\n\t}\n\n\tprivate _core_transform = new CoreTransform();\n\n\tcook() {\n\t\tconst geometry = new CylinderBufferGeometry(\n\t\t\tthis.pv.radius,\n\t\t\tthis.pv.radius,\n\t\t\tthis.pv.height,\n\t\t\tthis.pv.segments_radial,\n\t\t\tthis.pv.segments_height,\n\t\t\t!this.pv.cap\n\t\t);\n\n\t\tthis._core_transform.rotate_geometry(geometry, DEFAULT_UP, this.pv.direction);\n\t\tgeometry.translate(this.pv.center.x, this.pv.center.y, this.pv.center.z);\n\n\t\tthis.set_geometry(geometry);\n\t}\n}\n","import {Camera} from 'three/src/cameras/Camera';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {TypedSopNode} from './_Base';\nimport {CoreGroup} from '../../../core/geometry/Group';\nimport {CameraController} from '../../../core/CameraController';\nimport {BaseCameraObjNodeType} from '../obj/_BaseCamera';\n\n// const MODE = [];\nconst UV_NAME = 'uv';\n\nimport {NodeParamsConfig, ParamConfig} from '../utils/params/ParamsConfig';\nimport {InputCloneMode} from '../../poly/InputCloneMode';\nimport {NodeContext} from '../../poly/NodeContext';\nimport {BaseObjNodeType} from '../obj/_Base';\nclass UvProjectSopParamsConfig extends NodeParamsConfig {\n\tcamera = ParamConfig.OPERATOR_PATH('/perspective_camera1', {\n\t\tnode_selection: {\n\t\t\tcontext: NodeContext.OBJ,\n\t\t},\n\t});\n\t// force_aspect = ParamConfig.BOOLEAN(0)\n\t// aspect = ParamConfig.FLOAT(1, {\n\t// \trange: [0, 2],\n\t// \tvisible_if: {force_aspect: 1},\n\t// })\n}\nconst ParamsConfig = new UvProjectSopParamsConfig();\n\nexport class UvProjectSopNode extends TypedSopNode<UvProjectSopParamsConfig> {\n\tparams_config = ParamsConfig;\n\tstatic type() {\n\t\treturn 'uv_project';\n\t}\n\n\tprivate _camera_controller: CameraController = new CameraController(this._update_uvs_from_camera.bind(this));\n\t// private _param_camera: string\n\tprivate _processed_core_group: CoreGroup | undefined;\n\t// private _camera_node: BaseCameraObjNodeType | undefined;\n\tprivate _camera_object: Camera | undefined;\n\n\tinitialize_node() {\n\t\tthis.io.inputs.set_count(1);\n\t\tthis.io.inputs.init_inputs_clonable_state([InputCloneMode.FROM_NODE]);\n\t}\n\n\tcook(core_groups: CoreGroup[]) {\n\t\tthis._processed_core_group = core_groups[0];\n\n\t\tconst camera_node = this.p.camera.found_node();\n\t\tif (camera_node != null) {\n\t\t\tthis._camera_object = (camera_node as BaseCameraObjNodeType).object;\n\t\t\tthis._camera_controller.set_target(this._camera_object);\n\t\t\t// this._add_camera_event()\n\t\t} else {\n\t\t\tthis._camera_object = undefined;\n\t\t\t//this._remove_camera_event()\n\t\t\tthis._camera_controller.remove_target();\n\t\t}\n\n\t\tthis.set_core_group(this._processed_core_group);\n\t}\n\n\t_update_uvs_from_camera(look_at_target: Object3D) {\n\t\t// let old_aspect;\n\t\t// if (this.pv.force_aspect) {\n\t\t// \told_aspect = this._camera_object.aspect;\n\t\t// \tthis._camera_node.setup_for_aspect_ratio(this.pv.aspect);\n\t\t// }\n\n\t\tif (this._processed_core_group && this.parent) {\n\t\t\tconst points = this._processed_core_group.points();\n\t\t\tconst obj_world_matrix = (this.parent as BaseObjNodeType).object.matrixWorld;\n\t\t\tpoints.forEach((point) => {\n\t\t\t\tconst position = point.position();\n\t\t\t\tconst uvw = this._vector_in_camera_space(position, obj_world_matrix);\n\t\t\t\tif (uvw) {\n\t\t\t\t\tconst uv = {\n\t\t\t\t\t\tx: 1 - (uvw[0] * 0.5 + 0.5),\n\t\t\t\t\t\ty: uvw[1] * 0.5 + 0.5,\n\t\t\t\t\t};\n\t\t\t\t\tpoint.set_attrib_value(UV_NAME, uv);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// if (this.pv.force_aspect) {\n\t\t\t// \tthis._camera_node.setup_for_aspect_ratio(old_aspect);\n\t\t\t// }\n\t\t}\n\t}\n\n\tprivate _vector_in_camera_space(vector: Vector3, obj_world_matrix: Matrix4) {\n\t\tif (this._camera_object) {\n\t\t\tvector.applyMatrix4(obj_world_matrix);\n\t\t\treturn vector.project(this._camera_object).toArray();\n\t\t}\n\t}\n}\n","import {Object3D} from 'three/src/core/Object3D';\n\nenum EVENT {\n\tCHANGE = 'change',\n\tMOVEEND = 'moveend',\n}\n\ntype CameraControllerCallback = (target: Object3D) => void;\n\nexport class CameraController {\n\tprivate _update_always: boolean = true;\n\tprivate _listener: any;\n\tprivate _target: Object3D | undefined;\n\tprivate _listener_added: boolean = false;\n\n\tconstructor(private _callback: CameraControllerCallback) {\n\t\tthis._listener = this._execute_callback.bind(this);\n\t}\n\n\tremove_target() {\n\t\tthis.set_target(undefined);\n\t}\n\tset_target(target: Object3D | undefined) {\n\t\tif (!target) {\n\t\t\tthis._remove_camera_event();\n\t\t}\n\n\t\tconst old_target = this._target;\n\t\tthis._target = target;\n\n\t\tif (this._target != null) {\n\t\t\tthis._execute_callback();\n\t\t}\n\n\t\tif (\n\t\t\t(this._target != null ? this._target.uuid : undefined) !==\n\t\t\t(old_target != null ? old_target.uuid : undefined)\n\t\t) {\n\t\t\tthis._add_camera_event();\n\t\t}\n\t}\n\n\tset_update_always(new_update_always: boolean) {\n\t\tthis._remove_camera_event();\n\n\t\tthis._update_always = new_update_always;\n\n\t\tthis._add_camera_event();\n\t}\n\n\tprivate _current_event_name() {\n\t\tif (this._update_always) {\n\t\t\treturn EVENT.CHANGE;\n\t\t} else {\n\t\t\treturn EVENT.MOVEEND;\n\t\t}\n\t}\n\n\tprivate _add_camera_event() {\n\t\tif (this._listener_added) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._target != null) {\n\t\t\tthis._target.addEventListener(this._current_event_name(), this._listener);\n\t\t\tthis._listener_added = true;\n\t\t}\n\t}\n\n\tprivate _remove_camera_event() {\n\t\tif (this._listener_added !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._target != null) {\n\t\t\tthis._target.removeEventListener(this._current_event_name(), this._listener);\n\t\t\tthis._listener_added = false;\n\t\t}\n\t}\n\n\tprivate _execute_callback() {\n\t\tif (this._target != null) {\n\t\t\tthis._callback(this._target);\n\t\t}\n\t}\n}\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\n\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\": { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\"\tgl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { CopyShader };\n","import {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar ShaderPass = function ( shader, textureID ) {\n\n\tPass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { ShaderPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar MaskPass = function ( scene, camera ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.getContext();\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n} );\n\n\nvar ClearMaskPass = function () {\n\n\tPass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nClearMaskPass.prototype = Object.create( Pass.prototype );\n\nObject.assign( ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\nexport { MaskPass, ClearMaskPass };\n","import {Clock} from 'three/src/core/Clock';\nimport {LinearFilter} from 'three/src/constants';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PlaneBufferGeometry} from 'three/src/geometries/PlaneGeometry';\nimport {RGBAFormat} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {WebGLRenderTarget} from 'three/src/renderers/WebGLRenderTarget';\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nimport { ShaderPass } from \"../postprocessing/ShaderPass.js\";\nimport { MaskPass } from \"../postprocessing/MaskPass.js\";\nimport { ClearMaskPass } from \"../postprocessing/MaskPass.js\";\n\nvar EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: LinearFilter,\n\t\t\tmagFilter: LinearFilter,\n\t\t\tformat: RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getSize( new Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\n\n\t}\n\n\tif ( ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new ShaderPass( CopyShader );\n\n\tthis.clock = new Clock();\n\n};\n\nObject.assign( EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.getContext();\n\t\t\t\t\tvar stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nvar Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { EffectComposer, Pass };\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\n}}var A=0,y=1,B={t:A,s:y};\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\nvar Zlib=mod.Zlib;\nexport { Zlib }","import {DataTextureLoader} from 'three/src/loaders/DataTextureLoader';\nimport {FloatType} from 'three/src/constants';\nimport {HalfFloatType} from 'three/src/constants';\nimport {LinearEncoding} from 'three/src/constants';\nimport {LinearFilter} from 'three/src/constants';\nimport {RGBAFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\n/**\n * @author Richard M. / https://github.com/richardmonette\n * @author ScieCode / http://github.com/sciecode\n *\n * OpenEXR loader which, currently, supports uncompressed, ZIP(S), RLE and PIZ wavelet compression.\n * Supports reading 16 and 32 bit data format.\n *\n * Referred to the original Industrial Light & Magic OpenEXR implementation and the TinyEXR / Syoyo Fujita\n * implementation, so I have preserved their copyright notices.\n */\n\nimport { Zlib } from \"../libs/inflate.module.min.js\";\n\n// /*\n// Copyright (c) 2014 - 2017, Syoyo Fujita\n// All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Syoyo Fujita nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// */\n\n// // TinyEXR contains some OpenEXR code, which is licensed under ------------\n\n// ///////////////////////////////////////////////////////////////////////////\n// //\n// // Copyright (c) 2002, Industrial Light & Magic, a division of Lucas\n// // Digital Ltd. LLC\n// //\n// // All rights reserved.\n// //\n// // Redistribution and use in source and binary forms, with or without\n// // modification, are permitted provided that the following conditions are\n// // met:\n// // *       Redistributions of source code must retain the above copyright\n// // notice, this list of conditions and the following disclaimer.\n// // *       Redistributions in binary form must reproduce the above\n// // copyright notice, this list of conditions and the following disclaimer\n// // in the documentation and/or other materials provided with the\n// // distribution.\n// // *       Neither the name of Industrial Light & Magic nor the names of\n// // its contributors may be used to endorse or promote products derived\n// // from this software without specific prior written permission.\n// //\n// // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// // \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// //\n// ///////////////////////////////////////////////////////////////////////////\n\n// // End of OpenEXR license -------------------------------------------------\n\nvar EXRLoader = function ( manager ) {\n\n\tDataTextureLoader.call( this, manager );\n\n\tthis.type = FloatType;\n\n};\n\nEXRLoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\n\n\tconstructor: EXRLoader,\n\n\tparse: function ( buffer ) {\n\n\t\tconst USHORT_RANGE = ( 1 << 16 );\n\t\tconst BITMAP_SIZE = ( USHORT_RANGE >> 3 );\n\n\t\tconst HUF_ENCBITS = 16; // literal (value) bit length\n\t\tconst HUF_DECBITS = 14; // decoding bit size (>= 8)\n\n\t\tconst HUF_ENCSIZE = ( 1 << HUF_ENCBITS ) + 1; // encoding table size\n\t\tconst HUF_DECSIZE = 1 << HUF_DECBITS; // decoding table size\n\t\tconst HUF_DECMASK = HUF_DECSIZE - 1;\n\n\t\tconst SHORT_ZEROCODE_RUN = 59;\n\t\tconst LONG_ZEROCODE_RUN = 63;\n\t\tconst SHORTEST_LONG_RUN = 2 + LONG_ZEROCODE_RUN - SHORT_ZEROCODE_RUN;\n\n\t\tconst ULONG_SIZE = 8;\n\t\tconst FLOAT32_SIZE = 4;\n\t\tconst INT32_SIZE = 4;\n\t\tconst INT16_SIZE = 2;\n\t\tconst INT8_SIZE = 1;\n\n\t\tconst STATIC_HUFFMAN = 0;\n\t\tconst DEFLATE = 1;\n\n\t\tconst UNKNOWN = 0;\n\t\tconst LOSSY_DCT = 1;\n\t\tconst RLE = 2;\n\n\t\tconst logBase = Math.pow( 2.7182818, 2.2 );\n\n\t\tfunction reverseLutFromBitmap( bitmap, lut ) {\n\n\t\t\tvar k = 0;\n\n\t\t\tfor ( var i = 0; i < USHORT_RANGE; ++ i ) {\n\n\t\t\t\tif ( ( i == 0 ) || ( bitmap[ i >> 3 ] & ( 1 << ( i & 7 ) ) ) ) {\n\n\t\t\t\t\tlut[ k ++ ] = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar n = k - 1;\n\n\t\t\twhile ( k < USHORT_RANGE ) lut[ k ++ ] = 0;\n\n\t\t\treturn n;\n\n\t\t}\n\n\t\tfunction hufClearDecTable( hdec ) {\n\n\t\t\tfor ( var i = 0; i < HUF_DECSIZE; i ++ ) {\n\n\t\t\t\thdec[ i ] = {};\n\t\t\t\thdec[ i ].len = 0;\n\t\t\t\thdec[ i ].lit = 0;\n\t\t\t\thdec[ i ].p = null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst getBitsReturn = { l: 0, c: 0, lc: 0 };\n\n\t\tfunction getBits( nBits, c, lc, uInt8Array, inOffset ) {\n\n\t\t\twhile ( lc < nBits ) {\n\n\t\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\t\t\tlc += 8;\n\n\t\t\t}\n\n\t\t\tlc -= nBits;\n\n\t\t\tgetBitsReturn.l = ( c >> lc ) & ( ( 1 << nBits ) - 1 );\n\t\t\tgetBitsReturn.c = c;\n\t\t\tgetBitsReturn.lc = lc;\n\n\t\t}\n\n\t\tconst hufTableBuffer = new Array( 59 );\n\n\t\tfunction hufCanonicalCodeTable( hcode ) {\n\n\t\t\tfor ( var i = 0; i <= 58; ++ i ) hufTableBuffer[ i ] = 0;\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) hufTableBuffer[ hcode[ i ] ] += 1;\n\n\t\t\tvar c = 0;\n\n\t\t\tfor ( var i = 58; i > 0; -- i ) {\n\n\t\t\t\tvar nc = ( ( c + hufTableBuffer[ i ] ) >> 1 );\n\t\t\t\thufTableBuffer[ i ] = c;\n\t\t\t\tc = nc;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) {\n\n\t\t\t\tvar l = hcode[ i ];\n\t\t\t\tif ( l > 0 ) hcode[ i ] = l | ( hufTableBuffer[ l ] ++ << 6 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction hufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, hcode ) {\n\n\t\t\tvar p = inOffset;\n\t\t\tvar c = 0;\n\t\t\tvar lc = 0;\n\n\t\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\t\tif ( p.value - inOffset.value > ni ) return false;\n\n\t\t\t\tgetBits( 6, c, lc, uInt8Array, p );\n\n\t\t\t\tvar l = getBitsReturn.l;\n\t\t\t\tc = getBitsReturn.c;\n\t\t\t\tlc = getBitsReturn.lc;\n\n\t\t\t\thcode[ im ] = l;\n\n\t\t\t\tif ( l == LONG_ZEROCODE_RUN ) {\n\n\t\t\t\t\tif ( p.value - inOffset.value > ni ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgetBits( 8, c, lc, uInt8Array, p );\n\n\t\t\t\t\tvar zerun = getBitsReturn.l + SHORTEST_LONG_RUN;\n\t\t\t\t\tc = getBitsReturn.c;\n\t\t\t\t\tlc = getBitsReturn.lc;\n\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\t\tim --;\n\n\t\t\t\t} else if ( l >= SHORT_ZEROCODE_RUN ) {\n\n\t\t\t\t\tvar zerun = l - SHORT_ZEROCODE_RUN + 2;\n\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\t\tim --;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thufCanonicalCodeTable( hcode );\n\n\t\t}\n\n\t\tfunction hufLength( code ) {\n\n\t\t\treturn code & 63;\n\n\t\t}\n\n\t\tfunction hufCode( code ) {\n\n\t\t\treturn code >> 6;\n\n\t\t}\n\n\t\tfunction hufBuildDecTable( hcode, im, iM, hdecod ) {\n\n\t\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\t\tvar c = hufCode( hcode[ im ] );\n\t\t\t\tvar l = hufLength( hcode[ im ] );\n\n\t\t\t\tif ( c >> l ) {\n\n\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t}\n\n\t\t\t\tif ( l > HUF_DECBITS ) {\n\n\t\t\t\t\tvar pl = hdecod[ ( c >> ( l - HUF_DECBITS ) ) ];\n\n\t\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpl.lit ++;\n\n\t\t\t\t\tif ( pl.p ) {\n\n\t\t\t\t\t\tvar p = pl.p;\n\t\t\t\t\t\tpl.p = new Array( pl.lit );\n\n\t\t\t\t\t\tfor ( var i = 0; i < pl.lit - 1; ++ i ) {\n\n\t\t\t\t\t\t\tpl.p[ i ] = p[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpl.p = new Array( 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpl.p[ pl.lit - 1 ] = im;\n\n\t\t\t\t} else if ( l ) {\n\n\t\t\t\t\tvar plOffset = 0;\n\n\t\t\t\t\tfor ( var i = 1 << ( HUF_DECBITS - l ); i > 0; i -- ) {\n\n\t\t\t\t\t\tvar pl = hdecod[ ( c << ( HUF_DECBITS - l ) ) + plOffset ];\n\n\t\t\t\t\t\tif ( pl.len || pl.p ) {\n\n\t\t\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpl.len = l;\n\t\t\t\t\t\tpl.lit = im;\n\n\t\t\t\t\t\tplOffset ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst getCharReturn = { c: 0, lc: 0 };\n\n\t\tfunction getChar( c, lc, uInt8Array, inOffset ) {\n\n\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\t\tlc += 8;\n\n\t\t\tgetCharReturn.c = c;\n\t\t\tgetCharReturn.lc = lc;\n\n\t\t}\n\n\t\tconst getCodeReturn = { c: 0, lc: 0 };\n\n\t\tfunction getCode( po, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outBufferOffset, outBufferEndOffset ) {\n\n\t\t\tif ( po == rlc ) {\n\n\t\t\t\tif ( lc < 8 ) {\n\n\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\t\t\t\t\tc = getCharReturn.c;\n\t\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\t}\n\n\t\t\t\tlc -= 8;\n\n\t\t\t\tvar cs = ( c >> lc );\n\t\t\t\tvar cs = new Uint8Array( [ cs ] )[ 0 ];\n\n\t\t\t\tif ( outBufferOffset.value + cs > outBufferEndOffset ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t\tvar s = outBuffer[ outBufferOffset.value - 1 ];\n\n\t\t\t\twhile ( cs -- > 0 ) {\n\n\t\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = s;\n\n\t\t\t\t}\n\n\t\t\t} else if ( outBufferOffset.value < outBufferEndOffset ) {\n\n\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = po;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tgetCodeReturn.c = c;\n\t\t\tgetCodeReturn.lc = lc;\n\n\t\t}\n\n\t\tfunction UInt16( value ) {\n\n\t\t\treturn ( value & 0xFFFF );\n\n\t\t}\n\n\t\tfunction Int16( value ) {\n\n\t\t\tvar ref = UInt16( value );\n\t\t\treturn ( ref > 0x7FFF ) ? ref - 0x10000 : ref;\n\n\t\t}\n\n\t\tconst wdec14Return = { a: 0, b: 0 };\n\n\t\tfunction wdec14( l, h ) {\n\n\t\t\tvar ls = Int16( l );\n\t\t\tvar hs = Int16( h );\n\n\t\t\tvar hi = hs;\n\t\t\tvar ai = ls + ( hi & 1 ) + ( hi >> 1 );\n\n\t\t\tvar as = ai;\n\t\t\tvar bs = ai - hi;\n\n\t\t\twdec14Return.a = as;\n\t\t\twdec14Return.b = bs;\n\n\t\t}\n\n\t\tfunction wav2Decode( buffer, j, nx, ox, ny, oy ) {\n\n\t\t\tvar n = ( nx > ny ) ? ny : nx;\n\t\t\tvar p = 1;\n\t\t\tvar p2;\n\n\t\t\twhile ( p <= n ) p <<= 1;\n\n\t\t\tp >>= 1;\n\t\t\tp2 = p;\n\t\t\tp >>= 1;\n\n\t\t\twhile ( p >= 1 ) {\n\n\t\t\t\tvar py = 0;\n\t\t\t\tvar ey = py + oy * ( ny - p2 );\n\t\t\t\tvar oy1 = oy * p;\n\t\t\t\tvar oy2 = oy * p2;\n\t\t\t\tvar ox1 = ox * p;\n\t\t\t\tvar ox2 = ox * p2;\n\t\t\t\tvar i00, i01, i10, i11;\n\n\t\t\t\tfor ( ; py <= ey; py += oy2 ) {\n\n\t\t\t\t\tvar px = py;\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\t\tvar p01 = px + ox1;\n\t\t\t\t\t\tvar p10 = px + oy1;\n\t\t\t\t\t\tvar p11 = p10 + ox1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\ti10 = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( buffer[ p01 + j ], buffer[ p11 + j ] );\n\n\t\t\t\t\t\ti01 = wdec14Return.a;\n\t\t\t\t\t\ti11 = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( i00, i01 );\n\n\t\t\t\t\t\tbuffer[ px + j ] = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\twdec14( i10, i11 );\n\n\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p11 + j ] = wdec14Return.b;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nx & p ) {\n\n\t\t\t\t\t\tvar p10 = px + oy1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ny & p ) {\n\n\t\t\t\t\tvar px = py;\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\t\tvar p01 = px + ox1;\n\n\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p01 + j ] );\n\n\t\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tp2 = p;\n\t\t\t\tp >>= 1;\n\n\t\t\t}\n\n\t\t\treturn py;\n\n\t\t}\n\n\t\tfunction hufDecode( encodingTable, decodingTable, uInt8Array, inDataView, inOffset, ni, rlc, no, outBuffer, outOffset ) {\n\n\t\t\tvar c = 0;\n\t\t\tvar lc = 0;\n\t\t\tvar outBufferEndOffset = no;\n\t\t\tvar inOffsetEnd = Math.trunc( inOffset.value + ( ni + 7 ) / 8 );\n\n\t\t\twhile ( inOffset.value < inOffsetEnd ) {\n\n\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\t\tc = getCharReturn.c;\n\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\twhile ( lc >= HUF_DECBITS ) {\n\n\t\t\t\t\tvar index = ( c >> ( lc - HUF_DECBITS ) ) & HUF_DECMASK;\n\t\t\t\t\tvar pl = decodingTable[ index ];\n\n\t\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\t\tlc -= pl.len;\n\n\t\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! pl.p ) {\n\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar j;\n\n\t\t\t\t\t\tfor ( j = 0; j < pl.lit; j ++ ) {\n\n\t\t\t\t\t\t\tvar l = hufLength( encodingTable[ pl.p[ j ] ] );\n\n\t\t\t\t\t\t\twhile ( lc < l && inOffset.value < inOffsetEnd ) {\n\n\t\t\t\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\t\t\t\t\t\tc = getCharReturn.c;\n\t\t\t\t\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( lc >= l ) {\n\n\t\t\t\t\t\t\t\tif ( hufCode( encodingTable[ pl.p[ j ] ] ) == ( ( c >> ( lc - l ) ) & ( ( 1 << l ) - 1 ) ) ) {\n\n\t\t\t\t\t\t\t\t\tlc -= l;\n\n\t\t\t\t\t\t\t\t\tgetCode( pl.p[ j ], rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( j == pl.lit ) {\n\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar i = ( 8 - ni ) & 7;\n\n\t\t\tc >>= i;\n\t\t\tlc -= i;\n\n\t\t\twhile ( lc > 0 ) {\n\n\t\t\t\tvar pl = decodingTable[ ( c << ( HUF_DECBITS - lc ) ) & HUF_DECMASK ];\n\n\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\tlc -= pl.len;\n\n\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction hufUncompress( uInt8Array, inDataView, inOffset, nCompressed, outBuffer, nRaw ) {\n\n\t\t\tvar outOffset = { value: 0 };\n\t\t\tvar initialInOffset = inOffset.value;\n\n\t\t\tvar im = parseUint32( inDataView, inOffset );\n\t\t\tvar iM = parseUint32( inDataView, inOffset );\n\n\t\t\tinOffset.value += 4;\n\n\t\t\tvar nBits = parseUint32( inDataView, inOffset );\n\n\t\t\tinOffset.value += 4;\n\n\t\t\tif ( im < 0 || im >= HUF_ENCSIZE || iM < 0 || iM >= HUF_ENCSIZE ) {\n\n\t\t\t\tthrow 'Something wrong with HUF_ENCSIZE';\n\n\t\t\t}\n\n\t\t\tvar freq = new Array( HUF_ENCSIZE );\n\t\t\tvar hdec = new Array( HUF_DECSIZE );\n\n\t\t\thufClearDecTable( hdec );\n\n\t\t\tvar ni = nCompressed - ( inOffset.value - initialInOffset );\n\n\t\t\thufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, freq );\n\n\t\t\tif ( nBits > 8 * ( nCompressed - ( inOffset.value - initialInOffset ) ) ) {\n\n\t\t\t\tthrow 'Something wrong with hufUncompress';\n\n\t\t\t}\n\n\t\t\thufBuildDecTable( freq, im, iM, hdec );\n\n\t\t\thufDecode( freq, hdec, uInt8Array, inDataView, inOffset, nBits, iM, nRaw, outBuffer, outOffset );\n\n\t\t}\n\n\t\tfunction applyLut( lut, data, nData ) {\n\n\t\t\tfor ( var i = 0; i < nData; ++ i ) {\n\n\t\t\t\tdata[ i ] = lut[ data[ i ] ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction predictor( source ) {\n\n\t\t\tfor ( var t = 1; t < source.length; t ++ ) {\n\n\t\t\t\tvar d = source[ t - 1 ] + source[ t ] - 128;\n\t\t\t\tsource[ t ] = d;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction interleaveScalar( source, out ) {\n\n\t\t\tvar t1 = 0;\n\t\t\tvar t2 = Math.floor( ( source.length + 1 ) / 2 );\n\t\t\tvar s = 0;\n\t\t\tvar stop = source.length - 1;\n\n\t\t\twhile ( true ) {\n\n\t\t\t\tif ( s > stop ) break;\n\t\t\t\tout[ s ++ ] = source[ t1 ++ ];\n\n\t\t\t\tif ( s > stop ) break;\n\t\t\t\tout[ s ++ ] = source[ t2 ++ ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction decodeRunLength( source ) {\n\n\t\t\tvar size = source.byteLength;\n\t\t\tvar out = new Array();\n\t\t\tvar p = 0;\n\n\t\t\tvar reader = new DataView( source );\n\n\t\t\twhile ( size > 0 ) {\n\n\t\t\t\tvar l = reader.getInt8( p ++ );\n\n\t\t\t\tif ( l < 0 ) {\n\n\t\t\t\t\tvar count = - l;\n\t\t\t\t\tsize -= count + 1;\n\n\t\t\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\tout.push( reader.getUint8( p ++ ) );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar count = l;\n\t\t\t\t\tsize -= 2;\n\n\t\t\t\t\tvar value = reader.getUint8( p ++ );\n\n\t\t\t\t\tfor ( var i = 0; i < count + 1; i ++ ) {\n\n\t\t\t\t\t\tout.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn out;\n\n\t\t}\n\n\t\tfunction lossyDctDecode( cscSet, rowPtrs, channelData, acBuffer, dcBuffer, outBuffer ) {\n\n\t\t\tvar dataView = new DataView( outBuffer.buffer );\n\n\t\t\tvar width = channelData[ cscSet.idx[ 0 ] ].width;\n\t\t\tvar height = channelData[ cscSet.idx[ 0 ] ].height;\n\n\t\t\tvar numComp = 3;\n\n\t\t\tvar numFullBlocksX = Math.floor( width / 8.0 );\n\t\t\tvar numBlocksX = Math.ceil( width / 8.0 );\n\t\t\tvar numBlocksY = Math.ceil( height / 8.0 );\n\t\t\tvar leftoverX = width - ( numBlocksX - 1 ) * 8;\n\t\t\tvar leftoverY = height - ( numBlocksY - 1 ) * 8;\n\n\t\t\tvar currAcComp = { value: 0 };\n\t\t\tvar currDcComp = new Array( numComp );\n\t\t\tvar dctData = new Array( numComp );\n\t\t\tvar halfZigBlock = new Array( numComp );\n\t\t\tvar rowBlock = new Array( numComp );\n\t\t\tvar rowOffsets = new Array( numComp );\n\n\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\trowOffsets[ comp ] = rowPtrs[ cscSet.idx[ comp ] ];\n\t\t\t\tcurrDcComp[ comp ] = ( comp < 1 ) ? 0 : currDcComp[ comp - 1 ] + numBlocksX * numBlocksY;\n\t\t\t\tdctData[ comp ] = new Float32Array( 64 );\n\t\t\t\thalfZigBlock[ comp ] = new Uint16Array( 64 );\n\t\t\t\trowBlock[ comp ] = new Uint16Array( numBlocksX * 64 );\n\n\t\t\t}\n\n\t\t\tfor ( let blocky = 0; blocky < numBlocksY; ++ blocky ) {\n\n\t\t\t\tvar maxY = 8;\n\n\t\t\t\tif ( blocky == numBlocksY - 1 )\n\t\t\t\t\tmaxY = leftoverY;\n\n\t\t\t\tvar maxX = 8;\n\n\t\t\t\tfor ( let blockx = 0; blockx < numBlocksX; ++ blockx ) {\n\n\t\t\t\t\tif ( blockx == numBlocksX - 1 )\n\t\t\t\t\t\tmaxX = leftoverX;\n\n\t\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\t\t\thalfZigBlock[ comp ].fill( 0 );\n\n\t\t\t\t\t\t// set block DC component\n\t\t\t\t\t\thalfZigBlock[ comp ][ 0 ] = dcBuffer[ currDcComp[ comp ] ++ ];\n\t\t\t\t\t\t// set block AC components\n\t\t\t\t\t\tunRleAC( currAcComp, acBuffer, halfZigBlock[ comp ] );\n\n\t\t\t\t\t\t// UnZigZag block to float\n\t\t\t\t\t\tunZigZag( halfZigBlock[ comp ], dctData[ comp ] );\n\t\t\t\t\t\t// decode float dct\n\t\t\t\t\t\tdctInverse( dctData[ comp ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( numComp == 3 ) {\n\n\t\t\t\t\t\tcsc709Inverse( dctData );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\t\t\tconvertToHalf( dctData[ comp ], rowBlock[ comp ], blockx * 64 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // blockx\n\n\t\t\t\tlet offset = 0;\n\n\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\t\tlet type = channelData[ cscSet.idx[ comp ] ].type;\n\n\t\t\t\t\tfor ( let y = 8 * blocky; y < 8 * blocky + maxY; ++ y ) {\n\n\t\t\t\t\t\toffset = rowOffsets[ comp ][ y ];\n\n\t\t\t\t\t\tfor ( let blockx = 0; blockx < numFullBlocksX; ++ blockx ) {\n\n\t\t\t\t\t\t\tlet src = blockx * 64 + ( ( y & 0x7 ) * 8 );\n\n\t\t\t\t\t\t\tdataView.setUint16( offset + 0 * INT16_SIZE * type, rowBlock[ comp ][ src + 0 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 1 * INT16_SIZE * type, rowBlock[ comp ][ src + 1 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 2 * INT16_SIZE * type, rowBlock[ comp ][ src + 2 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 3 * INT16_SIZE * type, rowBlock[ comp ][ src + 3 ], true );\n\n\t\t\t\t\t\t\tdataView.setUint16( offset + 4 * INT16_SIZE * type, rowBlock[ comp ][ src + 4 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 5 * INT16_SIZE * type, rowBlock[ comp ][ src + 5 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 6 * INT16_SIZE * type, rowBlock[ comp ][ src + 6 ], true );\n\t\t\t\t\t\t\tdataView.setUint16( offset + 7 * INT16_SIZE * type, rowBlock[ comp ][ src + 7 ], true );\n\n\t\t\t\t\t\t\toffset += 8 * INT16_SIZE * type;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle partial X blocks\n\t\t\t\t\tif ( numFullBlocksX != numBlocksX ) {\n\n\t\t\t\t\t\tfor ( let y = 8 * blocky; y < 8 * blocky + maxY; ++ y ) {\n\n\t\t\t\t\t\t\tlet offset = rowOffsets[ comp ][ y ] + 8 * numFullBlocksX * INT16_SIZE * type;\n\t\t\t\t\t\t\tlet src = numFullBlocksX * 64 + ( ( y & 0x7 ) * 8 );\n\n\t\t\t\t\t\t\tfor ( let x = 0; x < maxX; ++ x ) {\n\n\t\t\t\t\t\t\t\tdataView.setUint16( offset + x * INT16_SIZE * type, rowBlock[ comp ][ src + x ], true );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} // comp\n\n\t\t\t} // blocky\n\n\t\t\tvar halfRow = new Uint16Array( width );\n\t\t\tvar dataView = new DataView( outBuffer.buffer );\n\n\t\t\t// convert channels back to float, if needed\n\t\t\tfor ( var comp = 0; comp < numComp; ++ comp ) {\n\n\t\t\t\tchannelData[ cscSet.idx[ comp ] ].decoded = true;\n\t\t\t\tvar type = channelData[ cscSet.idx[ comp ] ].type;\n\n\t\t\t\tif ( channelData[ comp ].type != 2 ) continue;\n\n\t\t\t\tfor ( var y = 0; y < height; ++ y ) {\n\n\t\t\t\t\tlet offset = rowOffsets[ comp ][ y ];\n\n\t\t\t\t\tfor ( var x = 0; x < width; ++ x ) {\n\n\t\t\t\t\t\thalfRow[ x ] = dataView.getUint16( offset + x * INT16_SIZE * type, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var x = 0; x < width; ++ x ) {\n\n\t\t\t\t\t\tdataView.setFloat32( offset + x * INT16_SIZE * type, decodeFloat16( halfRow[ x ] ), true );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unRleAC( currAcComp, acBuffer, halfZigBlock ) {\n\n\t\t\tvar acValue;\n\t\t\tvar dctComp = 1;\n\n\t\t\twhile ( dctComp < 64 ) {\n\n\t\t\t\tacValue = acBuffer[ currAcComp.value ];\n\n\t\t\t\tif ( acValue == 0xff00 ) {\n\n\t\t\t\t\tdctComp = 64;\n\n\t\t\t\t} else if ( acValue >> 8 == 0xff ) {\n\n\t\t\t\t\tdctComp += acValue & 0xff;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thalfZigBlock[ dctComp ] = acValue;\n\t\t\t\t\tdctComp ++;\n\n\t\t\t\t}\n\n\t\t\t\tcurrAcComp.value ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unZigZag( src, dst ) {\n\n\t\t\tdst[ 0 ] = decodeFloat16( src[ 0 ] );\n\t\t\tdst[ 1 ] = decodeFloat16( src[ 1 ] );\n\t\t\tdst[ 2 ] = decodeFloat16( src[ 5 ] );\n\t\t\tdst[ 3 ] = decodeFloat16( src[ 6 ] );\n\t\t\tdst[ 4 ] = decodeFloat16( src[ 14 ] );\n\t\t\tdst[ 5 ] = decodeFloat16( src[ 15 ] );\n\t\t\tdst[ 6 ] = decodeFloat16( src[ 27 ] );\n\t\t\tdst[ 7 ] = decodeFloat16( src[ 28 ] );\n\t\t\tdst[ 8 ] = decodeFloat16( src[ 2 ] );\n\t\t\tdst[ 9 ] = decodeFloat16( src[ 4 ] );\n\n\t\t\tdst[ 10 ] = decodeFloat16( src[ 7 ] );\n\t\t\tdst[ 11 ] = decodeFloat16( src[ 13 ] );\n\t\t\tdst[ 12 ] = decodeFloat16( src[ 16 ] );\n\t\t\tdst[ 13 ] = decodeFloat16( src[ 26 ] );\n\t\t\tdst[ 14 ] = decodeFloat16( src[ 29 ] );\n\t\t\tdst[ 15 ] = decodeFloat16( src[ 42 ] );\n\t\t\tdst[ 16 ] = decodeFloat16( src[ 3 ] );\n\t\t\tdst[ 17 ] = decodeFloat16( src[ 8 ] );\n\t\t\tdst[ 18 ] = decodeFloat16( src[ 12 ] );\n\t\t\tdst[ 19 ] = decodeFloat16( src[ 17 ] );\n\n\t\t\tdst[ 20 ] = decodeFloat16( src[ 25 ] );\n\t\t\tdst[ 21 ] = decodeFloat16( src[ 30 ] );\n\t\t\tdst[ 22 ] = decodeFloat16( src[ 41 ] );\n\t\t\tdst[ 23 ] = decodeFloat16( src[ 43 ] );\n\t\t\tdst[ 24 ] = decodeFloat16( src[ 9 ] );\n\t\t\tdst[ 25 ] = decodeFloat16( src[ 11 ] );\n\t\t\tdst[ 26 ] = decodeFloat16( src[ 18 ] );\n\t\t\tdst[ 27 ] = decodeFloat16( src[ 24 ] );\n\t\t\tdst[ 28 ] = decodeFloat16( src[ 31 ] );\n\t\t\tdst[ 29 ] = decodeFloat16( src[ 40 ] );\n\n\t\t\tdst[ 30 ] = decodeFloat16( src[ 44 ] );\n\t\t\tdst[ 31 ] = decodeFloat16( src[ 53 ] );\n\t\t\tdst[ 32 ] = decodeFloat16( src[ 10 ] );\n\t\t\tdst[ 33 ] = decodeFloat16( src[ 19 ] );\n\t\t\tdst[ 34 ] = decodeFloat16( src[ 23 ] );\n\t\t\tdst[ 35 ] = decodeFloat16( src[ 32 ] );\n\t\t\tdst[ 36 ] = decodeFloat16( src[ 39 ] );\n\t\t\tdst[ 37 ] = decodeFloat16( src[ 45 ] );\n\t\t\tdst[ 38 ] = decodeFloat16( src[ 52 ] );\n\t\t\tdst[ 39 ] = decodeFloat16( src[ 54 ] );\n\n\t\t\tdst[ 40 ] = decodeFloat16( src[ 20 ] );\n\t\t\tdst[ 41 ] = decodeFloat16( src[ 22 ] );\n\t\t\tdst[ 42 ] = decodeFloat16( src[ 33 ] );\n\t\t\tdst[ 43 ] = decodeFloat16( src[ 38 ] );\n\t\t\tdst[ 44 ] = decodeFloat16( src[ 46 ] );\n\t\t\tdst[ 45 ] = decodeFloat16( src[ 51 ] );\n\t\t\tdst[ 46 ] = decodeFloat16( src[ 55 ] );\n\t\t\tdst[ 47 ] = decodeFloat16( src[ 60 ] );\n\t\t\tdst[ 48 ] = decodeFloat16( src[ 21 ] );\n\t\t\tdst[ 49 ] = decodeFloat16( src[ 34 ] );\n\n\t\t\tdst[ 50 ] = decodeFloat16( src[ 37 ] );\n\t\t\tdst[ 51 ] = decodeFloat16( src[ 47 ] );\n\t\t\tdst[ 52 ] = decodeFloat16( src[ 50 ] );\n\t\t\tdst[ 53 ] = decodeFloat16( src[ 56 ] );\n\t\t\tdst[ 54 ] = decodeFloat16( src[ 59 ] );\n\t\t\tdst[ 55 ] = decodeFloat16( src[ 61 ] );\n\t\t\tdst[ 56 ] = decodeFloat16( src[ 35 ] );\n\t\t\tdst[ 57 ] = decodeFloat16( src[ 36 ] );\n\t\t\tdst[ 58 ] = decodeFloat16( src[ 48 ] );\n\t\t\tdst[ 59 ] = decodeFloat16( src[ 49 ] );\n\n\t\t\tdst[ 60 ] = decodeFloat16( src[ 57 ] );\n\t\t\tdst[ 61 ] = decodeFloat16( src[ 58 ] );\n\t\t\tdst[ 62 ] = decodeFloat16( src[ 62 ] );\n\t\t\tdst[ 63 ] = decodeFloat16( src[ 63 ] );\n\n\t\t}\n\n\t\tfunction dctInverse( data ) {\n\n\t\t\tconst a = 0.5 * Math.cos( 3.14159 / 4.0 );\n\t\t\tconst b = 0.5 * Math.cos( 3.14159 / 16.0 );\n\t\t\tconst c = 0.5 * Math.cos( 3.14159 / 8.0 );\n\t\t\tconst d = 0.5 * Math.cos( 3.0 * 3.14159 / 16.0 );\n\t\t\tconst e = 0.5 * Math.cos( 5.0 * 3.14159 / 16.0 );\n\t\t\tconst f = 0.5 * Math.cos( 3.0 * 3.14159 / 8.0 );\n\t\t\tconst g = 0.5 * Math.cos( 7.0 * 3.14159 / 16.0 );\n\n\t\t\tvar alpha = new Array( 4 );\n\t\t\tvar beta = new Array( 4 );\n\t\t\tvar theta = new Array( 4 );\n\t\t\tvar gamma = new Array( 4 );\n\n\t\t\tfor ( var row = 0; row < 8; ++ row ) {\n\n\t\t\t\tvar rowPtr = row * 8;\n\n\t\t\t\talpha[ 0 ] = c * data[ rowPtr + 2 ];\n\t\t\t\talpha[ 1 ] = f * data[ rowPtr + 2 ];\n\t\t\t\talpha[ 2 ] = c * data[ rowPtr + 6 ];\n\t\t\t\talpha[ 3 ] = f * data[ rowPtr + 6 ];\n\n\t\t\t\tbeta[ 0 ] = b * data[ rowPtr + 1 ] + d * data[ rowPtr + 3 ] + e * data[ rowPtr + 5 ] + g * data[ rowPtr + 7 ];\n\t\t\t\tbeta[ 1 ] = d * data[ rowPtr + 1 ] - g * data[ rowPtr + 3 ] - b * data[ rowPtr + 5 ] - e * data[ rowPtr + 7 ];\n\t\t\t\tbeta[ 2 ] = e * data[ rowPtr + 1 ] - b * data[ rowPtr + 3 ] + g * data[ rowPtr + 5 ] + d * data[ rowPtr + 7 ];\n\t\t\t\tbeta[ 3 ] = g * data[ rowPtr + 1 ] - e * data[ rowPtr + 3 ] + d * data[ rowPtr + 5 ] - b * data[ rowPtr + 7 ];\n\n\t\t\t\ttheta[ 0 ] = a * ( data[ rowPtr + 0 ] + data[ rowPtr + 4 ] );\n\t\t\t\ttheta[ 3 ] = a * ( data[ rowPtr + 0 ] - data[ rowPtr + 4 ] );\n\t\t\t\ttheta[ 1 ] = alpha[ 0 ] + alpha[ 3 ];\n\t\t\t\ttheta[ 2 ] = alpha[ 1 ] - alpha[ 2 ];\n\n\t\t\t\tgamma[ 0 ] = theta[ 0 ] + theta[ 1 ];\n\t\t\t\tgamma[ 1 ] = theta[ 3 ] + theta[ 2 ];\n\t\t\t\tgamma[ 2 ] = theta[ 3 ] - theta[ 2 ];\n\t\t\t\tgamma[ 3 ] = theta[ 0 ] - theta[ 1 ];\n\n\t\t\t\tdata[ rowPtr + 0 ] = gamma[ 0 ] + beta[ 0 ];\n\t\t\t\tdata[ rowPtr + 1 ] = gamma[ 1 ] + beta[ 1 ];\n\t\t\t\tdata[ rowPtr + 2 ] = gamma[ 2 ] + beta[ 2 ];\n\t\t\t\tdata[ rowPtr + 3 ] = gamma[ 3 ] + beta[ 3 ];\n\n\t\t\t\tdata[ rowPtr + 4 ] = gamma[ 3 ] - beta[ 3 ];\n\t\t\t\tdata[ rowPtr + 5 ] = gamma[ 2 ] - beta[ 2 ];\n\t\t\t\tdata[ rowPtr + 6 ] = gamma[ 1 ] - beta[ 1 ];\n\t\t\t\tdata[ rowPtr + 7 ] = gamma[ 0 ] - beta[ 0 ];\n\n\t\t\t}\n\n\t\t\tfor ( var column = 0; column < 8; ++ column ) {\n\n\t\t\t\talpha[ 0 ] = c * data[ 16 + column ];\n\t\t\t\talpha[ 1 ] = f * data[ 16 + column ];\n\t\t\t\talpha[ 2 ] = c * data[ 48 + column ];\n\t\t\t\talpha[ 3 ] = f * data[ 48 + column ];\n\n\t\t\t\tbeta[ 0 ] = b * data[ 8 + column ] + d * data[ 24 + column ] + e * data[ 40 + column ] + g * data[ 56 + column ];\n\t\t\t\tbeta[ 1 ] = d * data[ 8 + column ] - g * data[ 24 + column ] - b * data[ 40 + column ] - e * data[ 56 + column ];\n\t\t\t\tbeta[ 2 ] = e * data[ 8 + column ] - b * data[ 24 + column ] + g * data[ 40 + column ] + d * data[ 56 + column ];\n\t\t\t\tbeta[ 3 ] = g * data[ 8 + column ] - e * data[ 24 + column ] + d * data[ 40 + column ] - b * data[ 56 + column ];\n\n\t\t\t\ttheta[ 0 ] = a * ( data[ column ] + data[ 32 + column ] );\n\t\t\t\ttheta[ 3 ] = a * ( data[ column ] - data[ 32 + column ] );\n\n\t\t\t\ttheta[ 1 ] = alpha[ 0 ] + alpha[ 3 ];\n\t\t\t\ttheta[ 2 ] = alpha[ 1 ] - alpha[ 2 ];\n\n\t\t\t\tgamma[ 0 ] = theta[ 0 ] + theta[ 1 ];\n\t\t\t\tgamma[ 1 ] = theta[ 3 ] + theta[ 2 ];\n\t\t\t\tgamma[ 2 ] = theta[ 3 ] - theta[ 2 ];\n\t\t\t\tgamma[ 3 ] = theta[ 0 ] - theta[ 1 ];\n\n\t\t\t\tdata[ 0 + column ] = gamma[ 0 ] + beta[ 0 ];\n\t\t\t\tdata[ 8 + column ] = gamma[ 1 ] + beta[ 1 ];\n\t\t\t\tdata[ 16 + column ] = gamma[ 2 ] + beta[ 2 ];\n\t\t\t\tdata[ 24 + column ] = gamma[ 3 ] + beta[ 3 ];\n\n\t\t\t\tdata[ 32 + column ] = gamma[ 3 ] - beta[ 3 ];\n\t\t\t\tdata[ 40 + column ] = gamma[ 2 ] - beta[ 2 ];\n\t\t\t\tdata[ 48 + column ] = gamma[ 1 ] - beta[ 1 ];\n\t\t\t\tdata[ 56 + column ] = gamma[ 0 ] - beta[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction csc709Inverse( data ) {\n\n\t\t\tfor ( var i = 0; i < 64; ++ i ) {\n\n\t\t\t\tvar y = data[ 0 ][ i ];\n\t\t\t\tvar cb = data[ 1 ][ i ];\n\t\t\t\tvar cr = data[ 2 ][ i ];\n\n\t\t\t\tdata[ 0 ][ i ] = y + 1.5747 * cr;\n\t\t\t\tdata[ 1 ][ i ] = y - 0.1873 * cb - 0.4682 * cr;\n\t\t\t\tdata[ 2 ][ i ] = y + 1.8556 * cb;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction convertToHalf( src, dst, idx ) {\n\n\t\t\tfor ( var i = 0; i < 64; ++ i ) {\n\n\t\t\t\tdst[ idx + i ] = encodeFloat16( toLinear( src[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction toLinear( float ) {\n\n\t\t\tif ( float <= 1 ) {\n\n\t\t\t\treturn Math.sign( float ) * Math.pow( Math.abs( float ), 2.2 );\n\n\t\t\t} else {\n\n\t\t\t\treturn Math.sign( float ) * Math.pow( logBase, Math.abs( float ) - 1.0 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uncompressRAW( info ) {\n\n\t\t\treturn new DataView( info.array.buffer, info.offset.value, info.size );\n\n\t\t}\n\n\t\tfunction uncompressRLE( info ) {\n\n\t\t\tvar compressed = info.viewer.buffer.slice( info.offset.value, info.offset.value + info.size );\n\n\t\t\tvar rawBuffer = new Uint8Array( decodeRunLength( compressed ) );\n\t\t\tvar tmpBuffer = new Uint8Array( rawBuffer.length );\n\n\t\t\tpredictor( rawBuffer ); // revert predictor\n\n\t\t\tinterleaveScalar( rawBuffer, tmpBuffer ); // interleave pixels\n\n\t\t\treturn new DataView( tmpBuffer.buffer );\n\n\t\t}\n\n\t\tfunction uncompressZIP( info ) {\n\n\t\t\tvar compressed = info.array.slice( info.offset.value, info.offset.value + info.size );\n\n\t\t\tif ( typeof Zlib === 'undefined' ) {\n\n\t\t\t\tconsole.error( 'THREE.EXRLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t}\n\n\t\t\tvar inflate = new Zlib.Inflate( compressed, { resize: true, verify: true } ); // eslint-disable-line no-undef\n\n\t\t\tvar rawBuffer = new Uint8Array( inflate.decompress().buffer );\n\t\t\tvar tmpBuffer = new Uint8Array( rawBuffer.length );\n\n\t\t\tpredictor( rawBuffer ); // revert predictor\n\n\t\t\tinterleaveScalar( rawBuffer, tmpBuffer ); // interleave pixels\n\n\t\t\treturn new DataView( tmpBuffer.buffer );\n\n\t\t}\n\n\t\tfunction uncompressPIZ( info ) {\n\n\t\t\tvar inDataView = info.viewer;\n\t\t\tvar inOffset = { value: info.offset.value };\n\n\t\t\tvar tmpBufSize = info.width * scanlineBlockSize * ( EXRHeader.channels.length * info.type );\n\t\t\tvar outBuffer = new Uint16Array( tmpBufSize );\n\t\t\tvar bitmap = new Uint8Array( BITMAP_SIZE );\n\n\t\t\t// Setup channel info\n\t\t\tvar outBufferEnd = 0;\n\t\t\tvar pizChannelData = new Array( info.channels );\n\t\t\tfor ( var i = 0; i < info.channels; i ++ ) {\n\n\t\t\t\tpizChannelData[ i ] = {};\n\t\t\t\tpizChannelData[ i ][ 'start' ] = outBufferEnd;\n\t\t\t\tpizChannelData[ i ][ 'end' ] = pizChannelData[ i ][ 'start' ];\n\t\t\t\tpizChannelData[ i ][ 'nx' ] = info.width;\n\t\t\t\tpizChannelData[ i ][ 'ny' ] = info.lines;\n\t\t\t\tpizChannelData[ i ][ 'size' ] = info.type;\n\n\t\t\t\toutBufferEnd += pizChannelData[ i ].nx * pizChannelData[ i ].ny * pizChannelData[ i ].size;\n\n\t\t\t}\n\n\t\t\t// Read range compression data\n\t\t\tvar minNonZero = parseUint16( inDataView, inOffset );\n\t\t\tvar maxNonZero = parseUint16( inDataView, inOffset );\n\n\t\t\tif ( maxNonZero >= BITMAP_SIZE ) {\n\n\t\t\t\tthrow 'Something is wrong with PIZ_COMPRESSION BITMAP_SIZE';\n\n\t\t\t}\n\n\t\t\tif ( minNonZero <= maxNonZero ) {\n\n\t\t\t\tfor ( var i = 0; i < maxNonZero - minNonZero + 1; i ++ ) {\n\n\t\t\t\t\tbitmap[ i + minNonZero ] = parseUint8( inDataView, inOffset );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Reverse LUT\n\t\t\tvar lut = new Uint16Array( USHORT_RANGE );\n\t\t\treverseLutFromBitmap( bitmap, lut );\n\n\t\t\tvar length = parseUint32( inDataView, inOffset );\n\n\t\t\t// Huffman decoding\n\t\t\thufUncompress( info.array, inDataView, inOffset, length, outBuffer, outBufferEnd );\n\n\t\t\t// Wavelet decoding\n\t\t\tfor ( var i = 0; i < info.channels; ++ i ) {\n\n\t\t\t\tvar cd = pizChannelData[ i ];\n\n\t\t\t\tfor ( var j = 0; j < pizChannelData[ i ].size; ++ j ) {\n\n\t\t\t\t\twav2Decode(\n\t\t\t\t\t\toutBuffer,\n\t\t\t\t\t\tcd.start + j,\n\t\t\t\t\t\tcd.nx,\n\t\t\t\t\t\tcd.size,\n\t\t\t\t\t\tcd.ny,\n\t\t\t\t\t\tcd.nx * cd.size\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Expand the pixel data to their original range\n\t\t\tapplyLut( lut, outBuffer, outBufferEnd );\n\n\t\t\t// Rearrange the pixel data into the format expected by the caller.\n\t\t\tvar tmpOffset = 0;\n\t\t\tvar tmpBuffer = new Uint8Array( outBuffer.buffer.byteLength );\n\t\t\tfor ( var y = 0; y < info.lines; y ++ ) {\n\n\t\t\t\tfor ( var c = 0; c < info.channels; c ++ ) {\n\n\t\t\t\t\tvar cd = pizChannelData[ c ];\n\n\t\t\t\t\tvar n = cd.nx * cd.size;\n\t\t\t\t\tvar cp = new Uint8Array( outBuffer.buffer, cd.end * INT16_SIZE, n * INT16_SIZE );\n\n\t\t\t\t\ttmpBuffer.set( cp, tmpOffset );\n\t\t\t\t\ttmpOffset += n * INT16_SIZE;\n\t\t\t\t\tcd.end += n;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new DataView( tmpBuffer.buffer );\n\n\t\t}\n\n\t\tfunction uncompressDWA( info ) {\n\n\t\t\tvar inDataView = info.viewer;\n\t\t\tvar inOffset = { value: info.offset.value };\n\t\t\tvar outBuffer = new Uint8Array( info.width * info.lines * ( EXRHeader.channels.length * info.type * INT16_SIZE ) );\n\n\t\t\t// Read compression header information\n\t\t\tvar dwaHeader = {\n\n\t\t\t\tversion: parseInt64( inDataView, inOffset ),\n\t\t\t\tunknownUncompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\tunknownCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\tacCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\tdcCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\trleCompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\trleUncompressedSize: parseInt64( inDataView, inOffset ),\n\t\t\t\trleRawSize: parseInt64( inDataView, inOffset ),\n\t\t\t\ttotalAcUncompressedCount: parseInt64( inDataView, inOffset ),\n\t\t\t\ttotalDcUncompressedCount: parseInt64( inDataView, inOffset ),\n\t\t\t\tacCompression: parseInt64( inDataView, inOffset )\n\n\t\t\t};\n\n\t\t\tif ( dwaHeader.version < 2 )\n\t\t\t\tthrow 'EXRLoader.parse: ' + EXRHeader.compression + ' version ' + dwaHeader.version + ' is unsupported';\n\n\t\t\t// Read channel ruleset information\n\t\t\tvar channelRules = new Array();\n\t\t\tvar ruleSize = parseUint16( inDataView, inOffset ) - INT16_SIZE;\n\n\t\t\twhile ( ruleSize > 0 ) {\n\n\t\t\t\tvar name = parseNullTerminatedString( inDataView.buffer, inOffset );\n\t\t\t\tvar value = parseUint8( inDataView, inOffset );\n\t\t\t\tvar compression = ( value >> 2 ) & 3;\n\t\t\t\tvar csc = ( value >> 4 ) - 1;\n\t\t\t\tvar index = new Int8Array( [ csc ] )[ 0 ];\n\t\t\t\tvar type = parseUint8( inDataView, inOffset );\n\n\t\t\t\tchannelRules.push( {\n\t\t\t\t\tname: name,\n\t\t\t\t\tindex: index,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tcompression: compression,\n\t\t\t\t} );\n\n\t\t\t\truleSize -= name.length + 3;\n\n\t\t\t}\n\n\t\t\t// Classify channels\n\t\t\tvar channels = EXRHeader.channels;\n\t\t\tvar channelData = new Array( info.channels );\n\n\t\t\tfor ( var i = 0; i < info.channels; ++ i ) {\n\n\t\t\t\tvar cd = channelData[ i ] = {};\n\t\t\t\tvar channel = channels[ i ];\n\n\t\t\t\tcd.name = channel.name;\n\t\t\t\tcd.compression = UNKNOWN;\n\t\t\t\tcd.decoded = false;\n\t\t\t\tcd.type = channel.pixelType;\n\t\t\t\tcd.pLinear = channel.pLinear;\n\t\t\t\tcd.width = info.width;\n\t\t\t\tcd.height = info.lines;\n\n\t\t\t}\n\n\t\t\tvar cscSet = {\n\t\t\t\tidx: new Array( 3 )\n\t\t\t};\n\n\t\t\tfor ( var offset = 0; offset < info.channels; ++ offset ) {\n\n\t\t\t\tvar cd = channelData[ offset ];\n\n\t\t\t\tfor ( var i = 0; i < channelRules.length; ++ i ) {\n\n\t\t\t\t\tvar rule = channelRules[ i ];\n\n\t\t\t\t\tif ( cd.name == rule.name ) {\n\n\t\t\t\t\t\tcd.compression = rule.compression;\n\n\t\t\t\t\t\tif ( rule.index >= 0 ) {\n\n\t\t\t\t\t\t\tcscSet.idx[ rule.index ] = offset;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcd.offset = offset;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Read DCT - AC component data\n\t\t\tif ( dwaHeader.acCompressedSize > 0 ) {\n\n\t\t\t\tswitch ( dwaHeader.acCompression ) {\n\n\t\t\t\t\tcase STATIC_HUFFMAN:\n\n\t\t\t\t\t\tvar acBuffer = new Uint16Array( dwaHeader.totalAcUncompressedCount );\n\t\t\t\t\t\thufUncompress( info.array, inDataView, inOffset, dwaHeader.acCompressedSize, acBuffer, dwaHeader.totalAcUncompressedCount );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase DEFLATE:\n\n\t\t\t\t\t\tvar compressed = info.array.slice( inOffset.value, inOffset.value + dwaHeader.totalAcUncompressedCount );\n\t\t\t\t\t\tvar inflate = new Zlib.Inflate( compressed, { resize: true, verify: true } );\n\t\t\t\t\t\tvar acBuffer = new Uint16Array( inflate.decompress().buffer );\n\t\t\t\t\t\tinOffset.value += dwaHeader.totalAcUncompressedCount;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\t// Read DCT - DC component data\n\t\t\tif ( dwaHeader.dcCompressedSize > 0 ) {\n\n\t\t\t\tvar zlibInfo = {\n\t\t\t\t\tarray: info.array,\n\t\t\t\t\toffset: inOffset,\n\t\t\t\t\tsize: dwaHeader.dcCompressedSize\n\t\t\t\t};\n\t\t\t\tvar dcBuffer = new Uint16Array( uncompressZIP( zlibInfo ).buffer );\n\t\t\t\tinOffset.value += dwaHeader.dcCompressedSize;\n\n\t\t\t}\n\n\t\t\t// Read RLE compressed data\n\t\t\tif ( dwaHeader.rleRawSize > 0 ) {\n\n\t\t\t\tvar compressed = info.array.slice( inOffset.value, inOffset.value + dwaHeader.rleCompressedSize );\n\t\t\t\tvar inflate = new Zlib.Inflate( compressed, { resize: true, verify: true } );\n\t\t\t\tvar rleBuffer = decodeRunLength( inflate.decompress().buffer );\n\n\t\t\t\tinOffset.value += dwaHeader.rleCompressedSize;\n\n\t\t\t}\n\n\t\t\t// Prepare outbuffer data offset\n\t\t\tvar outBufferEnd = 0;\n\t\t\tvar rowOffsets = new Array( channelData.length );\n\t\t\tfor ( var i = 0; i < rowOffsets.length; ++ i ) {\n\n\t\t\t\trowOffsets[ i ] = new Array();\n\n\t\t\t}\n\n\t\t\tfor ( var y = 0; y < info.lines; ++ y ) {\n\n\t\t\t\tfor ( var chan = 0; chan < channelData.length; ++ chan ) {\n\n\t\t\t\t\trowOffsets[ chan ].push( outBufferEnd );\n\t\t\t\t\toutBufferEnd += channelData[ chan ].width * info.type * INT16_SIZE;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Lossy DCT decode RGB channels\n\t\t\tlossyDctDecode( cscSet, rowOffsets, channelData, acBuffer, dcBuffer, outBuffer );\n\n\t\t\t// Decode other channels\n\t\t\tfor ( var i = 0; i < channelData.length; ++ i ) {\n\n\t\t\t\tvar cd = channelData[ i ];\n\n\t\t\t\tif ( cd.decoded ) continue;\n\n\t\t\t\tswitch ( cd.compression ) {\n\n\t\t\t\t\tcase RLE:\n\n\t\t\t\t\t\tvar row = 0;\n\t\t\t\t\t\tvar rleOffset = 0;\n\n\t\t\t\t\t\tfor ( var y = 0; y < info.lines; ++ y ) {\n\n\t\t\t\t\t\t\tvar rowOffsetBytes = rowOffsets[ i ][ row ];\n\n\t\t\t\t\t\t\tfor ( var x = 0; x < cd.width; ++ x ) {\n\n\t\t\t\t\t\t\t\tfor ( var byte = 0; byte < INT16_SIZE * cd.type; ++ byte ) {\n\n\t\t\t\t\t\t\t\t\toutBuffer[ rowOffsetBytes ++ ] = rleBuffer[ rleOffset + byte * cd.width * cd.height ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\trleOffset ++;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trow ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase LOSSY_DCT: // skip\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow 'EXRLoader.parse: unsupported channel compression';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new DataView( outBuffer.buffer );\n\n\t\t}\n\n\t\tfunction parseNullTerminatedString( buffer, offset ) {\n\n\t\t\tvar uintBuffer = new Uint8Array( buffer );\n\t\t\tvar endOffset = 0;\n\n\t\t\twhile ( uintBuffer[ offset.value + endOffset ] != 0 ) {\n\n\t\t\t\tendOffset += 1;\n\n\t\t\t}\n\n\t\t\tvar stringValue = new TextDecoder().decode(\n\t\t\t\tuintBuffer.slice( offset.value, offset.value + endOffset )\n\t\t\t);\n\n\t\t\toffset.value = offset.value + endOffset + 1;\n\n\t\t\treturn stringValue;\n\n\t\t}\n\n\t\tfunction parseFixedLengthString( buffer, offset, size ) {\n\n\t\t\tvar stringValue = new TextDecoder().decode(\n\t\t\t\tnew Uint8Array( buffer ).slice( offset.value, offset.value + size )\n\t\t\t);\n\n\t\t\toffset.value = offset.value + size;\n\n\t\t\treturn stringValue;\n\n\t\t}\n\n\t\tfunction parseUlong( dataView, offset ) {\n\n\t\t\tvar uLong = dataView.getUint32( 0, true );\n\n\t\t\toffset.value = offset.value + ULONG_SIZE;\n\n\t\t\treturn uLong;\n\n\t\t}\n\n\t\tfunction parseUint32( dataView, offset ) {\n\n\t\t\tvar Uint32 = dataView.getUint32( offset.value, true );\n\n\t\t\toffset.value = offset.value + INT32_SIZE;\n\n\t\t\treturn Uint32;\n\n\t\t}\n\n\t\tfunction parseUint8Array( uInt8Array, offset ) {\n\n\t\t\tvar Uint8 = uInt8Array[ offset.value ];\n\n\t\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\t\treturn Uint8;\n\n\t\t}\n\n\t\tfunction parseUint8( dataView, offset ) {\n\n\t\t\tvar Uint8 = dataView.getUint8( offset.value );\n\n\t\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\t\treturn Uint8;\n\n\t\t}\n\n\t\tfunction parseInt64( dataView, offset ) {\n\n\t\t\tvar int = Number( dataView.getBigInt64( offset.value, true ) );\n\n\t\t\toffset.value += ULONG_SIZE;\n\n\t\t\treturn int;\n\n\t\t}\n\n\t\tfunction parseFloat32( dataView, offset ) {\n\n\t\t\tvar float = dataView.getFloat32( offset.value, true );\n\n\t\t\toffset.value += FLOAT32_SIZE;\n\n\t\t\treturn float;\n\n\t\t}\n\n\t\t// https://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript\n\t\tfunction decodeFloat16( binary ) {\n\n\t\t\tvar exponent = ( binary & 0x7C00 ) >> 10,\n\t\t\t\tfraction = binary & 0x03FF;\n\n\t\t\treturn ( binary >> 15 ? - 1 : 1 ) * (\n\t\t\t\texponent ?\n\t\t\t\t\t(\n\t\t\t\t\t\texponent === 0x1F ?\n\t\t\t\t\t\t\tfraction ? NaN : Infinity :\n\t\t\t\t\t\t\tMath.pow( 2, exponent - 15 ) * ( 1 + fraction / 0x400 )\n\t\t\t\t\t) :\n\t\t\t\t\t6.103515625e-5 * ( fraction / 0x400 )\n\t\t\t);\n\n\t\t}\n\n\t\tvar encodeFloat16 = ( function () {\n\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\tvar floatView = new Float32Array( 1 );\n\t\t\tvar int32View = new Int32Array( floatView.buffer );\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t * by James Tursa?s half-precision code. */\n\t\t\treturn function toHalf( val ) {\n\n\t\t\t\tfloatView[ 0 ] = val;\n\t\t\t\tvar x = int32View[ 0 ];\n\n\t\t\t\tvar bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\t\t\tvar m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\t\t\tvar e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t * half, return signed zero. */\n\t\t\t\tif ( e < 103 ) return bits;\n\n\t\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\t\t\tif ( e > 142 ) {\n\n\t\t\t\t\tbits |= 0x7c00;\n\t\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\t/* If exponent underflows but not too much, return a denormal */\n\t\t\t\tif ( e < 113 ) {\n\n\t\t\t\t\tm |= 0x0800;\n\t\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t * to 1, which is OK. */\n\t\t\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\t\t\treturn bits;\n\n\t\t\t\t}\n\n\t\t\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t * the exponent, which is OK. */\n\t\t\t\tbits += m & 1;\n\t\t\t\treturn bits;\n\n\t\t\t};\n\n\t\t} )();\n\n\t\tfunction parseUint16( dataView, offset ) {\n\n\t\t\tvar Uint16 = dataView.getUint16( offset.value, true );\n\n\t\t\toffset.value += INT16_SIZE;\n\n\t\t\treturn Uint16;\n\n\t\t}\n\n\t\tfunction parseFloat16( buffer, offset ) {\n\n\t\t\treturn decodeFloat16( parseUint16( buffer, offset ) );\n\n\t\t}\n\n\t\tfunction parseChlist( dataView, buffer, offset, size ) {\n\n\t\t\tvar startOffset = offset.value;\n\t\t\tvar channels = [];\n\n\t\t\twhile ( offset.value < ( startOffset + size - 1 ) ) {\n\n\t\t\t\tvar name = parseNullTerminatedString( buffer, offset );\n\t\t\t\tvar pixelType = parseUint32( dataView, offset ); // TODO: Cast this to UINT, HALF or FLOAT\n\t\t\t\tvar pLinear = parseUint8( dataView, offset );\n\t\t\t\toffset.value += 3; // reserved, three chars\n\t\t\t\tvar xSampling = parseUint32( dataView, offset );\n\t\t\t\tvar ySampling = parseUint32( dataView, offset );\n\n\t\t\t\tchannels.push( {\n\t\t\t\t\tname: name,\n\t\t\t\t\tpixelType: pixelType,\n\t\t\t\t\tpLinear: pLinear,\n\t\t\t\t\txSampling: xSampling,\n\t\t\t\t\tySampling: ySampling\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\toffset.value += 1;\n\n\t\t\treturn channels;\n\n\t\t}\n\n\t\tfunction parseChromaticities( dataView, offset ) {\n\n\t\t\tvar redX = parseFloat32( dataView, offset );\n\t\t\tvar redY = parseFloat32( dataView, offset );\n\t\t\tvar greenX = parseFloat32( dataView, offset );\n\t\t\tvar greenY = parseFloat32( dataView, offset );\n\t\t\tvar blueX = parseFloat32( dataView, offset );\n\t\t\tvar blueY = parseFloat32( dataView, offset );\n\t\t\tvar whiteX = parseFloat32( dataView, offset );\n\t\t\tvar whiteY = parseFloat32( dataView, offset );\n\n\t\t\treturn { redX: redX, redY: redY, greenX: greenX, greenY: greenY, blueX: blueX, blueY: blueY, whiteX: whiteX, whiteY: whiteY };\n\n\t\t}\n\n\t\tfunction parseCompression( dataView, offset ) {\n\n\t\t\tvar compressionCodes = [\n\t\t\t\t'NO_COMPRESSION',\n\t\t\t\t'RLE_COMPRESSION',\n\t\t\t\t'ZIPS_COMPRESSION',\n\t\t\t\t'ZIP_COMPRESSION',\n\t\t\t\t'PIZ_COMPRESSION',\n\t\t\t\t'PXR24_COMPRESSION',\n\t\t\t\t'B44_COMPRESSION',\n\t\t\t\t'B44A_COMPRESSION',\n\t\t\t\t'DWAA_COMPRESSION',\n\t\t\t\t'DWAB_COMPRESSION'\n\t\t\t];\n\n\t\t\tvar compression = parseUint8( dataView, offset );\n\n\t\t\treturn compressionCodes[ compression ];\n\n\t\t}\n\n\t\tfunction parseBox2i( dataView, offset ) {\n\n\t\t\tvar xMin = parseUint32( dataView, offset );\n\t\t\tvar yMin = parseUint32( dataView, offset );\n\t\t\tvar xMax = parseUint32( dataView, offset );\n\t\t\tvar yMax = parseUint32( dataView, offset );\n\n\t\t\treturn { xMin: xMin, yMin: yMin, xMax: xMax, yMax: yMax };\n\n\t\t}\n\n\t\tfunction parseLineOrder( dataView, offset ) {\n\n\t\t\tvar lineOrders = [\n\t\t\t\t'INCREASING_Y'\n\t\t\t];\n\n\t\t\tvar lineOrder = parseUint8( dataView, offset );\n\n\t\t\treturn lineOrders[ lineOrder ];\n\n\t\t}\n\n\t\tfunction parseV2f( dataView, offset ) {\n\n\t\t\tvar x = parseFloat32( dataView, offset );\n\t\t\tvar y = parseFloat32( dataView, offset );\n\n\t\t\treturn [ x, y ];\n\n\t\t}\n\n\t\tfunction parseValue( dataView, buffer, offset, type, size ) {\n\n\t\t\tif ( type === 'string' || type === 'stringvector' || type === 'iccProfile' ) {\n\n\t\t\t\treturn parseFixedLengthString( buffer, offset, size );\n\n\t\t\t} else if ( type === 'chlist' ) {\n\n\t\t\t\treturn parseChlist( dataView, buffer, offset, size );\n\n\t\t\t} else if ( type === 'chromaticities' ) {\n\n\t\t\t\treturn parseChromaticities( dataView, offset );\n\n\t\t\t} else if ( type === 'compression' ) {\n\n\t\t\t\treturn parseCompression( dataView, offset );\n\n\t\t\t} else if ( type === 'box2i' ) {\n\n\t\t\t\treturn parseBox2i( dataView, offset );\n\n\t\t\t} else if ( type === 'lineOrder' ) {\n\n\t\t\t\treturn parseLineOrder( dataView, offset );\n\n\t\t\t} else if ( type === 'float' ) {\n\n\t\t\t\treturn parseFloat32( dataView, offset );\n\n\t\t\t} else if ( type === 'v2f' ) {\n\n\t\t\t\treturn parseV2f( dataView, offset );\n\n\t\t\t} else if ( type === 'int' ) {\n\n\t\t\t\treturn parseUint32( dataView, offset );\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Cannot parse value for unsupported type: ' + type;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bufferDataView = new DataView( buffer );\n\t\tvar uInt8Array = new Uint8Array( buffer );\n\n\t\tvar EXRHeader = {};\n\n\t\tbufferDataView.getUint32( 0, true ); // magic\n\t\tbufferDataView.getUint8( 4, true ); // versionByteZero\n\t\tbufferDataView.getUint8( 5, true ); // fullMask\n\n\t\t// start of header\n\n\t\tvar offset = { value: 8 }; // start at 8, after magic stuff\n\n\t\tvar keepReading = true;\n\n\t\twhile ( keepReading ) {\n\n\t\t\tvar attributeName = parseNullTerminatedString( buffer, offset );\n\n\t\t\tif ( attributeName == 0 ) {\n\n\t\t\t\tkeepReading = false;\n\n\t\t\t} else {\n\n\t\t\t\tvar attributeType = parseNullTerminatedString( buffer, offset );\n\t\t\t\tvar attributeSize = parseUint32( bufferDataView, offset );\n\t\t\t\tvar attributeValue = parseValue( bufferDataView, buffer, offset, attributeType, attributeSize );\n\n\t\t\t\tEXRHeader[ attributeName ] = attributeValue;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// offsets\n\t\tvar dataWindowHeight = EXRHeader.dataWindow.yMax + 1;\n\n\t\tvar uncompress;\n\t\tvar scanlineBlockSize;\n\n\t\tswitch ( EXRHeader.compression ) {\n\n\t\t\tcase 'NO_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 1;\n\t\t\t\tuncompress = uncompressRAW;\n\t\t\t\tbreak;\n\n\t\t\tcase 'RLE_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 1;\n\t\t\t\tuncompress = uncompressRLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZIPS_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 1;\n\t\t\t\tuncompress = uncompressZIP;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZIP_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 16;\n\t\t\t\tuncompress = uncompressZIP;\n\t\t\t\tbreak;\n\n\t\t\tcase 'PIZ_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 32;\n\t\t\t\tuncompress = uncompressPIZ;\n\t\t\t\tbreak;\n\n\t\t\tcase 'DWAA_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 32;\n\t\t\t\tuncompress = uncompressDWA;\n\t\t\t\tbreak;\n\n\t\t\tcase 'DWAB_COMPRESSION':\n\n\t\t\t\tscanlineBlockSize = 256;\n\t\t\t\tuncompress = uncompressDWA;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow 'EXRLoader.parse: ' + EXRHeader.compression + ' is unsupported';\n\n\t\t}\n\n\t\tvar size_t;\n\t\tvar getValue;\n\n\t\t// mixed pixelType not supported\n\t\tvar pixelType = EXRHeader.channels[ 0 ].pixelType;\n\n\t\tif ( pixelType === 1 ) { // half\n\n\t\t\tswitch ( this.type ) {\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\tgetValue = parseFloat16;\n\t\t\t\t\tsize_t = INT16_SIZE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\tgetValue = parseUint16;\n\t\t\t\t\tsize_t = INT16_SIZE;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( pixelType === 2 ) { // float\n\n\t\t\tswitch ( this.type ) {\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\tgetValue = parseFloat32;\n\t\t\t\t\tsize_t = FLOAT32_SIZE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\tthrow 'EXRLoader.parse: unsupported HalfFloatType texture for FloatType image file.';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow 'EXRLoader.parse: unsupported pixelType ' + pixelType + ' for ' + EXRHeader.compression + '.';\n\n\t\t}\n\n\t\tvar numBlocks = dataWindowHeight / scanlineBlockSize;\n\n\t\tfor ( var i = 0; i < numBlocks; i ++ ) {\n\n\t\t\tparseUlong( bufferDataView, offset ); // scanlineOffset\n\n\t\t}\n\n\t\t// we should be passed the scanline offset table, start reading pixel data\n\n\t\tvar width = EXRHeader.dataWindow.xMax - EXRHeader.dataWindow.xMin + 1;\n\t\tvar height = EXRHeader.dataWindow.yMax - EXRHeader.dataWindow.yMin + 1;\n\t\t// Firefox only supports RGBA (half) float textures\n\t\t// var numChannels = EXRHeader.channels.length;\n\t\tvar numChannels = 4;\n\t\tvar size = width * height * numChannels;\n\n\t\t// Fill initially with 1s for the alpha value if the texture is not RGBA, RGB values will be overwritten\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tvar byteArray = new Float32Array( size );\n\n\t\t\t\tif ( EXRHeader.channels.length < numChannels ) {\n\n\t\t\t\t\tbyteArray.fill( 1, 0, size );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tvar byteArray = new Uint16Array( size );\n\n\t\t\t\tif ( EXRHeader.channels.length < numChannels ) {\n\n\t\t\t\t\tbyteArray.fill( 0x3C00, 0, size ); // Uint16Array holds half float data, 0x3C00 is 1\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.error( 'THREE.EXRLoader: unsupported type: ', this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tvar channelOffsets = {\n\t\t\tR: 0,\n\t\t\tG: 1,\n\t\t\tB: 2,\n\t\t\tA: 3\n\t\t};\n\n\t\tvar compressionInfo = {\n\n\t\t\tsize: 0,\n\t\t\twidth: width,\n\t\t\tlines: scanlineBlockSize,\n\n\t\t\toffset: offset,\n\t\t\tarray: uInt8Array,\n\t\t\tviewer: bufferDataView,\n\n\t\t\ttype: pixelType,\n\t\t\tchannels: EXRHeader.channels.length,\n\n\t\t};\n\n\t\tvar line;\n\t\tvar size;\n\t\tvar viewer;\n\t\tvar tmpOffset = { value: 0 };\n\n\t\tfor ( var scanlineBlockIdx = 0; scanlineBlockIdx < height / scanlineBlockSize; scanlineBlockIdx ++ ) {\n\n\t\t\tline = parseUint32( bufferDataView, offset ); // line_no\n\t\t\tsize = parseUint32( bufferDataView, offset ); // data_len\n\n\t\t\tcompressionInfo.lines = ( line + scanlineBlockSize > height ) ? height - line : scanlineBlockSize;\n\t\t\tcompressionInfo.offset = offset;\n\t\t\tcompressionInfo.size = size;\n\n\t\t\tviewer = uncompress( compressionInfo );\n\n\t\t\toffset.value += size;\n\n\t\t\tfor ( var line_y = 0; line_y < scanlineBlockSize; line_y ++ ) {\n\n\t\t\t\tvar true_y = line_y + ( scanlineBlockIdx * scanlineBlockSize );\n\n\t\t\t\tif ( true_y >= height ) break;\n\n\t\t\t\tfor ( var channelID = 0; channelID < EXRHeader.channels.length; channelID ++ ) {\n\n\t\t\t\t\tvar cOff = channelOffsets[ EXRHeader.channels[ channelID ].name ];\n\n\t\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\t\tvar idx = ( line_y * ( EXRHeader.channels.length * width ) ) + ( channelID * width ) + x;\n\t\t\t\t\t\ttmpOffset.value = idx * size_t;\n\n\t\t\t\t\t\tvar val = getValue( viewer, tmpOffset );\n\n\t\t\t\t\t\tbyteArray[ ( ( ( height - 1 - true_y ) * ( width * numChannels ) ) + ( x * numChannels ) ) + cOff ] = val;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\theader: EXRHeader,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdata: byteArray,\n\t\t\tformat: numChannels === 4 ? RGBAFormat : RGBFormat,\n\t\t\ttype: this.type\n\t\t};\n\n\t},\n\n\tsetDataType: function ( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.encoding = LinearEncoding;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = false;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\n\n\t}\n\n} );\n\nexport { EXRLoader };\n"],"sourceRoot":""}