{"version":3,"sources":["webpack:///./modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["GLTFLoader","manager","call","this","dracoLoader","ddsLoader","GLTFRegistry","objects","get","key","add","object","remove","removeAll","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","undefined","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","name","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","fromArray","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","parser","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","scale","clearcoatNormalScale","BINARY_EXTENSION_CHUNK_TYPES","body","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","repeat","texCoord","needsUpdate","copy","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","il","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","options","cache","primitiveCache","textureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","indices","setIndex","box","min","max","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","getX","newGeometry","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","y","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","transparent","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","depthTest","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","camera","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","o","light","sanitizeNodeName","matrix","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","file":"modules_three-polygonjs-engine-GLTFLoader.js.js","sourcesContent":["import {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Bone} from 'three/src/objects/Bone';\nimport {Box3} from 'three/src/math/Box3';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Color} from 'three/src/math/Color';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {DoubleSide} from 'three/src/constants';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {FrontSide} from 'three/src/constants';\nimport {Group} from 'three/src/objects/Group';\nimport {InterleavedBuffer} from 'three/src/core/InterleavedBuffer';\nimport {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute';\nimport {Interpolant} from 'three/src/math/Interpolant';\nimport {InterpolateDiscrete} from 'three/src/constants';\nimport {InterpolateLinear} from 'three/src/constants';\nimport {Line} from 'three/src/objects/Line';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {LineLoop} from 'three/src/objects/LineLoop';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {LinearFilter} from 'three/src/constants';\nimport {LinearMipmapLinearFilter} from 'three/src/constants';\nimport {LinearMipmapNearestFilter} from 'three/src/constants';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {LoaderUtils} from 'three/src/loaders/LoaderUtils';\nimport {Material} from 'three/src/materials/Material';\nimport {MathUtils} from 'three/src/math/MathUtils';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {MeshPhysicalMaterial} from 'three/src/materials/MeshPhysicalMaterial';\nimport {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\nimport {MirroredRepeatWrapping} from 'three/src/constants';\nimport {NearestFilter} from 'three/src/constants';\nimport {NearestMipmapLinearFilter} from 'three/src/constants';\nimport {NearestMipmapNearestFilter} from 'three/src/constants';\nimport {NumberKeyframeTrack} from 'three/src/animation/tracks/NumberKeyframeTrack';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {PointLight} from 'three/src/lights/PointLight';\nimport {Points} from 'three/src/objects/Points';\nimport {PointsMaterial} from 'three/src/materials/PointsMaterial';\nimport {PropertyBinding} from 'three/src/animation/PropertyBinding';\nimport {QuaternionKeyframeTrack} from 'three/src/animation/tracks/QuaternionKeyframeTrack';\nimport {RGBAFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\nimport {RepeatWrapping} from 'three/src/constants';\nimport {Skeleton} from 'three/src/objects/Skeleton';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {Sphere} from 'three/src/math/Sphere';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {TangentSpaceNormalMap} from 'three/src/constants';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {TriangleFanDrawMode} from 'three/src/constants';\nimport {TriangleStripDrawMode} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {VectorKeyframeTrack} from 'three/src/animation/tracks/VectorKeyframeTrack';\nimport {sRGBEncoding} from 'three/src/constants';\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsClearcoatExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', new BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ] ) {\n\n\t\t\tvar clearcoatExtension = extensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ];\n\t\t\tmaterialType = clearcoatExtension.getMaterialType();\n\t\t\tpending.push( clearcoatExtension.extendParams( materialParams, { extensions: materialExtensions }, parser ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"sourceRoot":""}