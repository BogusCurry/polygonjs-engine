{"version":3,"sources":["webpack:///./modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["GLTFLoader","manager","call","this","dracoLoader","ddsLoader","GLTFRegistry","objects","get","key","add","object","remove","removeAll","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","undefined","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","GLTFParser","name","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","fromArray","range","type","target","position","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","parser","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_CHUNK_TYPES","body","headerView","DataView","header","magic","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","specularGlossinessParams","pbrSpecularGlossiness","shader","uniforms","clone","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","value","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","params","material","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","isColor","refreshUniforms","renderer","scene","camera","geometry","uvScaleMap","diffuse","copy","multiplyScalar","isWebGLRenderTarget","texture","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","transform","offset","rotation","scale","repeat","texCoord","needsUpdate","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","options","cache","primitiveCache","textureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","indices","setIndex","box","min","max","targets","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","getX","newGeometry","markDefs","getDependencies","dependencies","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","onBeforeRender","y","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","depthTest","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","children","o","light","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","matrixWorld","child","sceneIndex","sceneDef","nodeIds"],"mappings":"0FAAA,8aAyEIA,EAAa,WAEhB,SAASA,EAAYC,GAEpB,IAAOC,KAAMC,KAAMF,GAEnBE,KAAKC,YAAc,KACnBD,KAAKE,UAAY,KAiNlB,SAASC,IAER,IAAIC,EAAU,GAEd,MAAO,CAENC,IAAK,SAAWC,GAEf,OAAOF,EAASE,IAIjBC,IAAK,SAAWD,EAAKE,GAEpBJ,EAASE,GAAQE,GAIlBC,OAAQ,SAAWH,UAEXF,EAASE,IAIjBI,UAAW,WAEVN,EAAU,KAvObP,EAAWc,UAAYC,OAAOC,OAAQD,OAAOE,OAAQ,IAAOH,WAAa,CAExEI,YAAalB,EAEbmB,KAAM,SAAWC,EAAKC,EAAQC,EAAYC,GAEzC,IAEIC,EAFAC,EAAQtB,KAMXqB,EAF0B,KAAtBrB,KAAKqB,aAEMrB,KAAKqB,aAEK,KAAdrB,KAAKuB,KAEDvB,KAAKuB,KAIL,IAAYC,eAAgBP,GAO5CK,EAAMxB,QAAQ2B,UAAWR,GAEzB,IAAIS,EAAW,SAAWC,GAEpBP,EAEJA,EAASO,GAITC,QAAQC,MAAOF,GAIhBL,EAAMxB,QAAQgC,UAAWb,GACzBK,EAAMxB,QAAQiC,QAASd,IAIpBe,EAAS,IAAI,IAAYV,EAAMxB,SAEnCkC,EAAOC,QAASjC,KAAKuB,MACrBS,EAAOE,gBAAiB,eAEG,oBAAtBZ,EAAMa,aAEVH,EAAOI,oBAAoB,GAI5BJ,EAAOhB,KAAMC,GAAK,SAAWoB,GAE5B,IAECf,EAAMgB,MAAOD,EAAMhB,GAAc,SAAWkB,GAE3CrB,EAAQqB,GAERjB,EAAMxB,QAAQiC,QAASd,KAErBS,GAEF,MAAQC,GAETD,EAAUC,MAITR,EAAYO,IAIhBc,eAAgB,SAAWvC,GAG1B,OADAD,KAAKC,YAAcA,EACZD,MAIRyC,aAAc,SAAWvC,GAGxB,OADAF,KAAKE,UAAYA,EACVF,MAIRsC,MAAO,SAAWD,EAAMd,EAAML,EAAQE,GAErC,IAAIsB,EACAC,EAAa,GAEjB,GAAqB,iBAATN,EAEXK,EAAUL,OAMV,GAFY,IAAYO,WAAY,IAAIC,WAAYR,EAAM,EAAG,MAE9CS,EAAgC,CAE9C,IAECH,EAAYI,EAAWC,iBAAoB,IAAIC,GAAqBZ,GAEnE,MAAQR,GAGT,YADKT,GAAUA,EAASS,IAKzBa,EAAUC,EAAYI,EAAWC,iBAAkBN,aAInDA,EAAU,IAAYE,WAAY,IAAIC,WAAYR,IAMpD,IAAIa,EAAOC,KAAKb,MAAOI,GAEvB,QAAoBU,IAAfF,EAAKG,OAAuBH,EAAKG,MAAMC,QAAS,GAAM,EAErDlC,GAAUA,EAAS,IAAImC,MAAO,gFAFpC,CAOA,GAAKL,EAAKM,eAET,IAAM,IAAIC,EAAI,EAAGA,EAAIP,EAAKM,eAAeE,SAAWD,EAAI,CAEvD,IAAIE,EAAgBT,EAAKM,eAAgBC,GACrCG,EAAqBV,EAAKU,oBAAsB,GAEpD,OAASD,GAER,KAAKZ,EAAWc,oBACflB,EAAYgB,GAAkB,IAAIG,EAAqBZ,GACvD,MAED,KAAKH,EAAWgB,oBACfpB,EAAYgB,GAAkB,IAAIK,EAClC,MAED,KAAKjB,EAAWkB,sCACftB,EAAYgB,GAAkB,IAAIO,GAClC,MAED,KAAKnB,EAAWoB,2BACfxB,EAAYgB,GAAkB,IAAIS,GAAmClB,EAAMlD,KAAKC,aAChF,MAED,KAAK8C,EAAWsB,iBACf1B,EAAYgB,GAAkB,IAAIW,EAAyBtE,KAAKE,WAChE,MAED,KAAK6C,EAAWwB,sBACf5B,EAAYgB,GAAkB,IAAIa,GAClC,MAED,KAAKzB,EAAW0B,sBACf9B,EAAYgB,GAAkB,IAAIe,GAClC,MAED,QAEMd,EAAmBe,QAAShB,IAAmB,GAEnD/B,QAAQgD,KAAM,wCAA0CjB,EAAgB,OAUhE,IAAIkB,GAAY3B,EAAMP,EAAY,CAE9CpB,KAAMA,GAAQvB,KAAKqB,cAAgB,GACnCc,YAAanC,KAAKmC,YAClBrC,QAASE,KAAKF,UAIRwC,MAAOpB,EAAQE,OA8CxB,IAAI2B,EAAa,CAChBC,gBAAiB,kBACjBmB,2BAA4B,6BAC5BN,oBAAqB,sBACrBI,sCAAuC,sCACvCF,oBAAqB,sBACrBQ,sBAAuB,wBACvBE,sBAAuB,wBACvBJ,iBAAkB,oBASnB,SAASC,EAAyBpE,GAEjC,IAAOA,EAEN,MAAM,IAAIqD,MAAO,iFAIlBvD,KAAK8E,KAAO/B,EAAWsB,iBACvBrE,KAAKE,UAAYA,EASlB,SAAS4D,EAAqBZ,GAE7BlD,KAAK8E,KAAO/B,EAAWc,oBAEvB,IAAIkB,EAAc7B,EAAKP,YAAcO,EAAKP,WAAYI,EAAWc,sBAA2B,GAC5F7D,KAAKgF,UAAYD,EAAUE,QAAU,GAgEtC,SAASjB,IAERhE,KAAK8E,KAAO/B,EAAWgB,oBA9DxBD,EAAoBnD,UAAUuE,UAAY,SAAWC,GAEpD,IACIC,EADAC,EAAWrF,KAAKgF,UAAWG,GAG3BG,EAAQ,IAAI,QAAO,eACClC,IAAnBiC,EAASC,OAAsBA,EAAMC,UAAWF,EAASC,OAE9D,IAAIE,OAA2BpC,IAAnBiC,EAASG,MAAsBH,EAASG,MAAQ,EAE5D,OAASH,EAASI,MAEjB,IAAK,eACJL,EAAY,IAAI,mBAAkBE,IACxBI,OAAOC,SAASC,IAAK,EAAG,GAAK,GACvCR,EAAU7E,IAAK6E,EAAUM,QACzB,MAED,IAAK,SACJN,EAAY,IAAI,aAAYE,IAClBO,SAAWL,EACrB,MAED,IAAK,QACJJ,EAAY,IAAI,YAAWE,IACjBO,SAAWL,EAErBH,EAASS,KAAOT,EAASS,MAAQ,GACjCT,EAASS,KAAKC,oBAAkD3C,IAAjCiC,EAASS,KAAKC,eAA+BV,EAASS,KAAKC,eAAiB,EAC3GV,EAASS,KAAKE,oBAAkD5C,IAAjCiC,EAASS,KAAKE,eAA+BX,EAASS,KAAKE,eAAiBC,KAAKC,GAAK,EACrHd,EAAUe,MAAQd,EAASS,KAAKE,eAChCZ,EAAUgB,SAAW,EAAMf,EAASS,KAAKC,eAAiBV,EAASS,KAAKE,eACxEZ,EAAUM,OAAOC,SAASC,IAAK,EAAG,GAAK,GACvCR,EAAU7E,IAAK6E,EAAUM,QACzB,MAED,QACC,MAAM,IAAInC,MAAO,6CAA+C8B,EAASI,KAAO,MAclF,OARAL,EAAUO,SAASC,IAAK,EAAG,EAAG,GAE9BR,EAAUiB,MAAQ,OAEUjD,IAAvBiC,EAASiB,YAA0BlB,EAAUkB,UAAYjB,EAASiB,WAEvElB,EAAUN,KAAOO,EAASP,MAAU,SAAWK,EAExCoB,QAAQC,QAASpB,IAezBpB,EAA4BrD,UAAU8F,gBAAkB,WAEvD,OAAO,qBAIRzC,EAA4BrD,UAAU+F,aAAe,SAAWC,EAAgBC,EAAaC,GAE5F,IAAIC,EAAU,GAEdH,EAAerB,MAAQ,IAAI,QAAO,EAAK,EAAK,GAC5CqB,EAAeI,QAAU,EAEzB,IAAIC,EAAoBJ,EAAYK,qBAEpC,GAAKD,EAAoB,CAExB,GAAKE,MAAMC,QAASH,EAAkBI,iBAAoB,CAEzD,IAAIC,EAAQL,EAAkBI,gBAE9BT,EAAerB,MAAMC,UAAW8B,GAChCV,EAAeI,QAAUM,EAAO,QAIWjE,IAAvC4D,EAAkBM,kBAEtBR,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,MAAOK,EAAkBM,mBAM/E,OAAOf,QAAQkB,IAAKX,IAKrB,IAAIhE,EAAgC,OAEhC4E,EAAuC,WAAvCA,GAAwD,QAE5D,SAASzE,GAAqBZ,GAE7BrC,KAAK8E,KAAO/B,EAAWC,gBACvBhD,KAAK0C,QAAU,KACf1C,KAAK2H,KAAO,KAEZ,IAAIC,EAAa,IAAIC,SAAUxF,EAAM,EATD,IAiBpC,GANArC,KAAK8H,OAAS,CACbC,MAAO,IAAYnF,WAAY,IAAIC,WAAYR,EAAK2F,MAAO,EAAG,KAC9D1E,QAASsE,EAAWK,UAAW,GAAG,GAClCvE,OAAQkE,EAAWK,UAAW,GAAG,IAG7BjI,KAAK8H,OAAOC,QAAUjF,EAE1B,MAAM,IAAIS,MAAO,qDAEX,GAAKvD,KAAK8H,OAAOxE,QAAU,EAEjC,MAAM,IAAIC,MAAO,kDAOlB,IAHA,IAAI2E,EAAY,IAAIL,SAAUxF,EA3BM,IA4BhC8F,EAAa,EAETA,EAAaD,EAAUE,YAAa,CAE3C,IAAIC,EAAcH,EAAUD,UAAWE,GAAY,GACnDA,GAAc,EAEd,IAAIG,EAAYJ,EAAUD,UAAWE,GAAY,GAGjD,GAFAA,GAAc,EAETG,IAAcZ,EAAoC,CAEtD,IAAIa,EAAe,IAAI1F,WAAYR,EAxCD,GAwCwC8F,EAAYE,GACtFrI,KAAK0C,QAAU,IAAYE,WAAY2F,QAEjC,GAAKD,IAAcZ,GAAmC,CAE5D,IAAIc,EA7C8B,GA6CgBL,EAClDnI,KAAK2H,KAAOtF,EAAK2F,MAAOQ,EAAYA,EAAaH,GAMlDF,GAAcE,EAIf,GAAsB,OAAjBrI,KAAK0C,QAET,MAAM,IAAIa,MAAO,6CAWnB,SAASa,GAAmClB,EAAMjD,GAEjD,IAAOA,EAEN,MAAM,IAAIsD,MAAO,uDAIlBvD,KAAK8E,KAAO/B,EAAWoB,2BACvBnE,KAAKkD,KAAOA,EACZlD,KAAKC,YAAcA,EACnBD,KAAKC,YAAYwI,UAoElB,SAASjE,KAERxE,KAAK8E,KAAO/B,EAAWwB,sBA2CxB,SAASL,KAER,MAAO,CAENY,KAAM/B,EAAWkB,sCAEjByE,yBAA0B,CACzB,QACA,MACA,WACA,oBACA,QACA,iBACA,WACA,oBACA,cACA,UACA,YACA,YACA,kBACA,oBACA,mBACA,cACA,WACA,gBACA,aACA,WACA,SACA,kBACA,mBAGDjC,gBAAiB,WAEhB,OAAO,kBAIRC,aAAc,SAAWC,EAAgBC,EAAaC,GAErD,IAAI8B,EAAwB/B,EAAYjE,WAAY3C,KAAK8E,MAErD8D,EAAS,YAAsB,SAE/BC,EAAW,gBAAcC,MAAOF,EAAOC,UAEvCE,EAA+B,CAClC,yBACA,mCACA,UACCC,KAAM,MAEJC,EAAiC,CACpC,2BACA,qCACA,UACCD,KAAM,MAEJE,EAA2B,CAC9B,kCACA,yBACA,wDACA,mDACA,oFACA,yCACA,UACCF,KAAM,MAEJG,EAA6B,CAChC,uCACA,2BACA,4DACA,kFACA,2CACA,UACCH,KAAM,MAEJI,EAA6B,CAChC,6BACA,4CACA,2EACA,gDACCJ,KAAM,MAEJK,EAAiBT,EAAOS,eAC1BC,QAAS,2BAA4B,0BACrCA,QAAS,2BAA4B,6BACrCA,QAAS,wCAAyCP,GAClDO,QAAS,wCAAyCL,GAClDK,QAAS,mCAAoCJ,GAC7CI,QAAS,mCAAoCH,GAC7CG,QAAS,sCAAuCF,UAE3CP,EAASU,iBACTV,EAASW,iBACTX,EAASY,oBACTZ,EAASa,aAEhBb,EAASc,SAAW,CAAEC,OAAO,IAAI,SAAQC,OAAQ,UACjDhB,EAASiB,WAAa,CAAEF,MAAO,IAC/Bf,EAASkB,YAAc,CAAEH,MAAO,MAChCf,EAASmB,cAAgB,CAAEJ,MAAO,MAElCjD,EAAesD,aAAerB,EAAOqB,aACrCtD,EAAe0C,eAAiBA,EAChC1C,EAAekC,SAAWA,EAC1BlC,EAAeuD,QAAU,CAAE,SAAY,IAEvCvD,EAAerB,MAAQ,IAAI,QAAO,EAAK,EAAK,GAC5CqB,EAAeI,QAAU,EAEzB,IAAID,EAAU,GAEd,GAAKI,MAAMC,QAASwB,EAAsBwB,eAAkB,CAE3D,IAAI9C,EAAQsB,EAAsBwB,cAElCxD,EAAerB,MAAMC,UAAW8B,GAChCV,EAAeI,QAAUM,EAAO,GAoBjC,QAhB8CjE,IAAzCuF,EAAsByB,gBAE1BtD,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,MAAOgC,EAAsByB,iBAIlFzD,EAAe0D,SAAW,IAAI,QAAO,EAAK,EAAK,GAC/C1D,EAAemD,gBAAwD1G,IAA3CuF,EAAsB2B,iBAAiC3B,EAAsB2B,iBAAmB,EAC5H3D,EAAegD,SAAW,IAAI,QAAO,EAAK,EAAK,GAE1CzC,MAAMC,QAASwB,EAAsB4B,iBAEzC5D,EAAegD,SAASpE,UAAWoD,EAAsB4B,qBAIDnH,IAApDuF,EAAsB6B,0BAA0C,CAEpE,IAAIC,EAAkB9B,EAAsB6B,0BAC5C1D,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,gBAAiB8D,IACrE3D,EAAQS,KAAMV,EAAOW,cAAeb,EAAgB,cAAe8D,IAIpE,OAAOlE,QAAQkB,IAAKX,IAIrB4D,eAAgB,SAAWC,GAI1B,IAAIC,EAAW,IAAI,iBAAgB,CAClCV,QAASS,EAAOT,QAChBD,aAAcU,EAAOV,aACrBZ,eAAgBsB,EAAOtB,eACvBR,SAAU8B,EAAO9B,SACjBgC,KAAK,EACL5F,QAAQ,EACR8B,QAAS4D,EAAO5D,QAChB+D,YAAaH,EAAOG,cA6CrB,OA1CAF,EAASG,kCAAmC,EAE5CH,EAAStF,MAAQqF,EAAOrF,MAExBsF,EAASI,SAAqB5H,IAAfuH,EAAOK,IAAoB,KAAOL,EAAOK,IAExDJ,EAASK,SAAW,KACpBL,EAASM,kBAAoB,EAE7BN,EAASO,WAAyB/H,IAAjBuH,EAAOQ,MAAsB,KAAOR,EAAOQ,MAC5DP,EAASQ,eAAiB,EAE1BR,EAASP,SAAWM,EAAON,SAC3BO,EAASS,kBAAoB,EAC7BT,EAASU,iBAAqClI,IAAvBuH,EAAOW,YAA4B,KAAOX,EAAOW,YAExEV,EAASW,aAA6BnI,IAAnBuH,EAAOY,QAAwB,KAAOZ,EAAOY,QAChEX,EAASY,UAAY,EAErBZ,EAASa,eAAiCrI,IAArBuH,EAAOc,UAA0B,KAAOd,EAAOc,UAE/Dd,EAAOe,cAAcd,EAASc,YAAcf,EAAOe,aAExDd,EAASe,gBAAkB,KAC3Bf,EAASgB,kBAAoB,EAC7BhB,EAASiB,iBAAmB,EAE5BjB,EAASb,iBAAqC3G,IAAvBuH,EAAOZ,YAA4B,KAAOY,EAAOZ,YACxEa,EAASjB,SAAWgB,EAAOhB,SAE3BiB,EAASZ,mBAAyC5G,IAAzBuH,EAAOX,cAA8B,KAAOW,EAAOX,cAC5EY,EAASd,WAAaa,EAAOb,WAE7Bc,EAASkB,SAAW,KAEpBlB,EAASmB,YAA2B3I,IAAlBuH,EAAOoB,OAAuB,KAAOpB,EAAOoB,OAC9DnB,EAASoB,gBAAkB,EAE3BpB,EAASqB,gBAAkB,IAE3BrB,EAASjI,WAAWuJ,aAAc,EAE3BtB,GAgBRuB,cAAe,SAAWC,GAEzB,IAAI1G,EAAS0G,EAAOtD,QAEpBpD,EAAOqF,kCAAmC,EAI1C,IAFA,IAAIJ,EAAS3K,KAAK0I,yBAERjF,EAAI,EAAG4I,EAAK1B,EAAOjH,OAAQD,EAAI4I,EAAI5I,IAAO,CAEnD,IAAImG,EAAQwC,EAAQzB,EAAQlH,IAC5BiC,EAAQiF,EAAQlH,IAAUmG,GAASA,EAAM0C,QAAY1C,EAAMd,QAAUc,EAItE,OAAOlE,GAKR6G,gBAAiB,SAAWC,EAAUC,EAAOC,EAAQC,EAAU/B,GAE9D,IAAmD,IAA9CA,EAASG,iCAAd,CAMA,IA0BI6B,EA1BA/D,EAAW+B,EAAS/B,SACpBqB,EAAUU,EAASV,QAEvBrB,EAAS9B,QAAQ6C,MAAQgB,EAAS7D,QAElC8B,EAASgE,QAAQjD,MAAMkD,KAAMlC,EAAStF,OACtCuD,EAASwB,SAAST,MAAMkD,KAAMlC,EAASP,UAAW0C,eAAgBnC,EAASS,mBAE3ExC,EAASmC,IAAIpB,MAAQgB,EAASI,IAC9BnC,EAASkB,YAAYH,MAAQgB,EAASb,YACtClB,EAASiD,SAASlC,MAAQgB,EAASkB,SAEnCjD,EAASoC,SAASrB,MAAQgB,EAASK,SACnCpC,EAASqC,kBAAkBtB,MAAQgB,EAASM,kBAE5CrC,EAASsC,MAAMvB,MAAQgB,EAASO,MAChCtC,EAASuC,eAAexB,MAAQgB,EAASQ,eAYpCR,EAASI,IAEb4B,EAAahC,EAASI,IAEXJ,EAASb,YAEpB6C,EAAahC,EAASb,YAEXa,EAASe,gBAEpBiB,EAAahC,EAASe,gBAEXf,EAASa,UAEpBmB,EAAahC,EAASa,UAEXb,EAASW,QAEpBqB,EAAahC,EAASW,QAEXX,EAASZ,cAEpB4C,EAAahC,EAASZ,cAEXY,EAASkB,SAEpBc,EAAahC,EAASkB,SAEXlB,EAASU,cAEpBsB,EAAahC,EAASU,kBAIHlI,IAAfwJ,IAGCA,EAAWI,sBAEfJ,EAAaA,EAAWK,UAIY,IAAhCL,EAAWM,kBAEfN,EAAWO,eAIZtE,EAASuE,YAAYxD,MAAMkD,KAAMF,EAAWS,SAIxCzC,EAASmB,SAEblD,EAASkD,OAAOnC,MAAQgB,EAASmB,OACjClD,EAASmD,gBAAgBpC,MAAQgB,EAASoB,gBAM1CnD,EAASyE,WAAW1D,MAAQgB,EAASmB,OAAOwB,eAAkB,EAAI,EAElE1E,EAAS2E,aAAa5D,MAAQgB,EAAS4C,aACvC3E,EAASoD,gBAAgBrC,MAAQgB,EAASqB,gBAE1CpD,EAAS4E,YAAY7D,MAAQ4C,EAASkB,WAAWrN,IAAKuK,EAASmB,QAAS4B,eAIzE9E,EAASc,SAASC,MAAMkD,KAAMlC,EAASjB,UACvCd,EAASiB,WAAWF,MAAQgB,EAASd,WAErCjB,EAASmB,cAAcJ,MAAQgB,EAASZ,cAExCnB,EAASyC,YAAY1B,MAAQgB,EAASU,YACtCzC,EAAS0C,QAAQ3B,MAAQgB,EAASW,QAClC1C,EAAS4C,UAAU7B,MAAQgB,EAASa,UAEpC5C,EAAS8C,gBAAgB/B,MAAQgB,EAASe,gBAC1C9C,EAAS+C,kBAAkBhC,MAAQgB,EAASgB,kBAC5C/C,EAASgD,iBAAiBjC,MAAQgB,EAASiB,iBAEL,OAAjChD,EAASmB,cAAcJ,YAAgDxG,IAA9B8G,EAAQ0D,oBAErD1D,EAAQ0D,kBAAoB,GAE5B1D,EAAQ2D,iBAAmB,IAIU,OAAjChF,EAASmB,cAAcJ,YAAgDxG,IAA9B8G,EAAQ0D,2BAE9C1D,EAAQ0D,yBACR1D,EAAQ2D,qBAenB,SAASnJ,KAER1E,KAAK8E,KAAO/B,EAAW0B,sBAUxB,SAASqJ,GAA4BC,EAAoBC,EAAcC,EAAYC,GAElF,IAAYnO,KAAMC,KAAM+N,EAAoBC,EAAcC,EAAYC,GAhgBvE9J,GAAkCzD,UAAUwN,gBAAkB,SAAWC,EAAWvH,GAEnF,IAAI3D,EAAOlD,KAAKkD,KACZjD,EAAcD,KAAKC,YACnBoO,EAAkBD,EAAUzL,WAAY3C,KAAK8E,MAAOwJ,WACpDC,EAAmBH,EAAUzL,WAAY3C,KAAK8E,MAAO0J,WACrDC,EAAoB,GACpBC,EAAyB,GACzBC,EAAmB,GAEvB,IAAM,IAAIC,KAAiBL,EAAmB,CAE7C,IAAIM,EAAqBC,GAAYF,IAAmBA,EAAcG,cAEtEN,EAAmBI,GAAuBN,EAAkBK,GAI7D,IAAMA,KAAiBR,EAAUI,WAAa,CAEzCK,EAAqBC,GAAYF,IAAmBA,EAAcG,cAEtE,QAA2C3L,IAAtCmL,EAAkBK,GAAgC,CAEtD,IAAII,EAAc9L,EAAK+L,UAAWb,EAAUI,WAAYI,IACpDM,EAAgBC,GAAuBH,EAAYE,eAEvDP,EAAkBE,GAAuBK,EACzCR,EAAwBG,IAAkD,IAA3BG,EAAYI,YAM7D,OAAOvI,EAAOwI,cAAe,aAAchB,GAAkBiB,MAAM,SAAWhB,GAE7E,OAAO,IAAI/H,SAAS,SAAWC,GAE9BvG,EAAYsP,gBAAiBjB,GAAY,SAAW3B,GAEnD,IAAM,IAAIiC,KAAiBjC,EAAS6B,WAAa,CAEhD,IAAIgB,EAAY7C,EAAS6B,WAAYI,GACjCQ,EAAaV,EAAwBE,QAErBxL,IAAfgM,IAA2BI,EAAUJ,WAAaA,GAIxD5I,EAASmG,KAEP8B,EAAmBE,UAmBzBnK,GAA8B7D,UAAU8O,cAAgB,SAAWxC,EAASyC,GA8B3E,OA5BAzC,EAAUA,EAAQnE,aAEQ1F,IAArBsM,EAAUC,QAEd1C,EAAQ0C,OAAOpK,UAAWmK,EAAUC,aAITvM,IAAvBsM,EAAUE,WAEd3C,EAAQ2C,SAAWF,EAAUE,eAILxM,IAApBsM,EAAUG,OAEd5C,EAAQ6C,OAAOvK,UAAWmK,EAAUG,YAITzM,IAAvBsM,EAAUK,UAEdnO,QAAQgD,KAAM,wCAA0C5E,KAAK8E,KAAO,kCAIrEmI,EAAQ+C,aAAc,EAEf/C,GAgaRa,GAA2BnN,UAAYC,OAAOE,OAAQ,IAAYH,WAClEmN,GAA2BnN,UAAUI,YAAc+M,GAEnDA,GAA2BnN,UAAUsP,iBAAmB,SAAWC,GAUlE,IALA,IAAIC,EAASnQ,KAAKkO,aACjBkC,EAASpQ,KAAKgO,aACdqC,EAAYrQ,KAAKqQ,UACjBV,EAASO,EAAQG,EAAY,EAAIA,EAExB5M,EAAI,EAAGA,IAAM4M,EAAW5M,IAEjC0M,EAAQ1M,GAAM2M,EAAQT,EAASlM,GAIhC,OAAO0M,GAIRrC,GAA2BnN,UAAU2P,aAAexC,GAA2BnN,UAAUsP,iBAEzFnC,GAA2BnN,UAAU4P,UAAYzC,GAA2BnN,UAAUsP,iBAEtFnC,GAA2BnN,UAAU6P,aAAe,SAAWC,EAAIC,EAAIC,EAAGC,GAyBzE,IAvBA,IAAIT,EAASnQ,KAAKkO,aACdkC,EAASpQ,KAAKgO,aACd6C,EAAS7Q,KAAKqQ,UAEdS,EAAmB,EAATD,EACVE,EAAmB,EAATF,EAEVG,EAAKJ,EAAKF,EAEVO,GAAMN,EAAID,GAAOM,EACjBE,EAAKD,EAAIA,EACTE,EAAMD,EAAKD,EAEXG,EAAUX,EAAKM,EACfM,EAAUD,EAAUL,EAEpBO,GAAO,EAAIH,EAAM,EAAID,EACrBK,EAAKJ,EAAMD,EACXM,EAAK,EAAIF,EACTG,EAAKF,EAAKL,EAAKD,EAITxN,EAAI,EAAGA,IAAMoN,EAAQpN,IAAO,CAErC,IAAIiO,EAAKtB,EAAQiB,EAAU5N,EAAIoN,GAC3Bc,EAAKvB,EAAQiB,EAAU5N,EAAIqN,GAAYE,EACvCY,EAAKxB,EAAQgB,EAAU3N,EAAIoN,GAC3BgB,EAAKzB,EAAQgB,EAAU3N,GAAMuN,EAEjCb,EAAQ1M,GAAM+N,EAAKE,EAAKD,EAAKE,EAAKL,EAAKM,EAAKL,EAAKM,EAIlD,OAAO1B,GAUR,IAAI2B,GAWK,EAXLA,GAYI,EAZJA,GAaQ,EAbRA,GAcS,EAdTA,GAeQ,EAfRA,GAgBa,EAhBbA,GAiBW,EAKX3C,GAAwB,CAC3B4C,KAAMC,UACNC,KAAMpP,WACNqP,KAAMC,WACNC,KAAMC,YACNC,KAAMC,YACNC,KAAMC,cAGHC,GAAgB,CACnBC,KAAM,gBACNC,KAAM,eACNC,KAAM,6BACNC,KAAM,4BACNC,KAAM,4BACNC,KAAM,4BAGHC,GAAkB,CACrBC,MAAO,sBACPC,MAAO,yBACPC,MAAO,kBAGJC,GAAmB,CACtB,OAAU,EACV,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,IAGLvE,GAAa,CAChBwE,SAAU,WACVC,OAAQ,SACRC,QAAS,UACTC,WAAY,KACZC,WAAY,MACZC,QAAS,QACTC,UAAW,aACXC,SAAU,aAGPC,GAAkB,CACrBjE,MAAO,QACPkE,YAAa,WACbnE,SAAU,aACVoE,QAAS,yBAGNC,GAAgB,CACnBC,iBAAa9Q,EAEb+Q,OAAQ,oBACRC,KAAM,uBAGHC,GACK,SADLA,GAEG,OAFHA,GAGI,QAGJC,GAAoB,CACvB,YAAa,aACb,aAAc,aAKf,SAASC,GAAYtT,EAAKM,GAGzB,MAAoB,iBAARN,GAA4B,KAARA,EAAoB,IAG/C,gBAAgBuT,KAAMjT,IAAU,MAAMiT,KAAMvT,KAEhDM,EAAOA,EAAK+H,QAAS,0BAA2B,OAK5C,mBAAmBkL,KAAMvT,IAGzB,gBAAgBuT,KAAMvT,IAGtB,aAAauT,KAAMvT,GANqBA,EAStCM,EAAON,GA2Bf,SAASwT,GAAgCC,EAAiBlU,EAAQmU,GAIjE,IAAM,IAAI7P,KAAQ6P,EAAUhS,gBAEMS,IAA5BsR,EAAiB5P,KAErBtE,EAAOoU,SAASC,eAAiBrU,EAAOoU,SAASC,gBAAkB,GACnErU,EAAOoU,SAASC,eAAgB/P,GAAS6P,EAAUhS,WAAYmC,IAYlE,SAASgQ,GAAwBtU,EAAQuU,QAEhB3R,IAAnB2R,EAAQC,SAEmB,iBAAnBD,EAAQC,OAEnBpU,OAAOC,OAAQL,EAAOoU,SAAUG,EAAQC,QAIxCpT,QAAQgD,KAAM,sDAAwDmQ,EAAQC,SAqFjF,SAASC,GAAoBC,EAAMC,GAIlC,GAFAD,EAAKD,0BAEoB7R,IAApB+R,EAAQnB,QAEZ,IAAM,IAAIvQ,EAAI,EAAG4I,EAAK8I,EAAQnB,QAAQtQ,OAAQD,EAAI4I,EAAI5I,IAErDyR,EAAKE,sBAAuB3R,GAAM0R,EAAQnB,QAASvQ,GAOrD,GAAK0R,EAAQH,QAAU9N,MAAMC,QAASgO,EAAQH,OAAOK,aAAgB,CAEpE,IAAIA,EAAcF,EAAQH,OAAOK,YAEjC,GAAKH,EAAKE,sBAAsB1R,SAAW2R,EAAY3R,OAAS,CAE/DwR,EAAKI,sBAAwB,GAE7B,IAAU7R,EAAI,EAAG4I,EAAKgJ,EAAY3R,OAAQD,EAAI4I,EAAI5I,IAEjDyR,EAAKI,sBAAuBD,EAAa5R,IAAQA,OAMlD7B,QAAQgD,KAAM,yEA6BjB,SAAS2Q,GAAqB/G,GAM7B,IAJA,IAAIgH,EAAgB,GAEhBC,EAAO7U,OAAO6U,KAAMjH,GAAakH,OAE3BjS,EAAI,EAAG4I,EAAKoJ,EAAK/R,OAAQD,EAAI4I,EAAI5I,IAE1C+R,GAAiBC,EAAMhS,GAAM,IAAM+K,EAAYiH,EAAMhS,IAAQ,IAI9D,OAAO+R,EAMR,SAAS3Q,GAAY3B,EAAMP,EAAYgT,GAEtC3V,KAAKkD,KAAOA,GAAQ,GACpBlD,KAAK2C,WAAaA,GAAc,GAChC3C,KAAK2V,QAAUA,GAAW,GAG1B3V,KAAK4V,MAAQ,IAAIzV,EAGjBH,KAAK6V,eAAiB,GAEtB7V,KAAK8V,cAAgB,IAAI,gBAAe9V,KAAK2V,QAAQ7V,SACrDE,KAAK8V,cAAcC,eAAgB/V,KAAK2V,QAAQxT,aAEhDnC,KAAKgW,WAAa,IAAI,IAAYhW,KAAK2V,QAAQ7V,SAC/CE,KAAKgW,WAAW9T,gBAAiB,eAEC,oBAA7BlC,KAAK2V,QAAQxT,aAEjBnC,KAAKgW,WAAW5T,oBAAoB,GA46BtC,SAAS6T,GAAwBtJ,EAAUuJ,EAAcrP,GAExD,IAAI2H,EAAa0H,EAAa1H,WAE1B1H,EAAU,GAEd,SAASqP,EAAyBC,EAAexH,GAEhD,OAAO/H,EAAOwI,cAAe,WAAY+G,GACvC9G,MAAM,SAAW+G,GAEjB1J,EAAS2J,aAAc1H,EAAeyH,MAMzC,IAAM,IAAIE,KAAqB/H,EAAa,CAE3C,IAAIK,EAAqBC,GAAYyH,IAAuBA,EAAkBxH,cAGzEF,KAAsBlC,EAAS6B,YAEpC1H,EAAQS,KAAM4O,EAAyB3H,EAAY+H,GAAqB1H,IAIzE,QAA8BzL,IAAzB8S,EAAaM,UAA2B7J,EAASuD,MAAQ,CAE7D,IAAImG,EAAWxP,EAAOwI,cAAe,WAAY6G,EAAaM,SAAUlH,MAAM,SAAW+G,GAExF1J,EAAS8J,SAAUJ,MAIpBvP,EAAQS,KAAM8O,GAQf,OAJAvB,GAAwBnI,EAAUuJ,GAnInC,SAAwBvJ,EAAUuJ,EAAcrP,GAE/C,IAAI2H,EAAa0H,EAAa1H,WAE1BkI,EAAM,IAAI,OAEd,QAA6BtT,IAAxBoL,EAAW8E,SAAhB,CAEC,IAEIqD,GAFAN,EAAWxP,EAAO3D,KAAK+L,UAAWT,EAAW8E,WAE9BqD,IACfC,EAAMP,EAASO,IAInB,QAAaxT,IAARuT,QAA6BvT,IAARwT,EAA1B,CAECF,EAAI9Q,IACH,IAAI,UAAS+Q,EAAK,GAAKA,EAAK,GAAKA,EAAK,IACtC,IAAI,UAASC,EAAK,GAAKA,EAAK,GAAKA,EAAK,KAgBzC,IAAIC,EAAUX,EAAaW,QAE3B,QAAiBzT,IAAZyT,EAIJ,IAFA,IAAIC,EAAS,IAAI,UAEPrT,EAAI,EAAG4I,EAAKwK,EAAQnT,OAAQD,EAAI4I,EAAI5I,IAAO,CAEpD,IAAIiC,EAASmR,EAASpT,GAEtB,QAAyBL,IAApBsC,EAAO4N,SAAyB,CAEpC,IAAI+C,EACAM,GADAN,EAAWxP,EAAO3D,KAAK+L,UAAWvJ,EAAO4N,WAC1BqD,IACfC,EAAMP,EAASO,SAINxT,IAARuT,QAA6BvT,IAARwT,GAGzBE,EAAOC,KAAM9Q,KAAK2Q,IAAK3Q,KAAK+Q,IAAKL,EAAK,IAAO1Q,KAAK+Q,IAAKJ,EAAK,MAC5DE,EAAOG,KAAMhR,KAAK2Q,IAAK3Q,KAAK+Q,IAAKL,EAAK,IAAO1Q,KAAK+Q,IAAKJ,EAAK,MAC5DE,EAAOI,KAAMjR,KAAK2Q,IAAK3Q,KAAK+Q,IAAKL,EAAK,IAAO1Q,KAAK+Q,IAAKJ,EAAK,MAE5DF,EAAIS,eAAgBL,IAIpBlV,QAAQgD,KAAM,wEAUlB+H,EAASyK,YAAcV,EAEvB,IAAIW,EAAS,IAAI,SAEjBX,EAAIY,UAAWD,EAAOE,QACtBF,EAAOG,OAASd,EAAIC,IAAIc,WAAYf,EAAIE,KAAQ,EAEhDjK,EAAS+K,eAAiBL,OA1DxBzV,QAAQgD,KAAM,wEA8GhB+S,CAAehL,EAAUuJ,EAAcrP,GAEhCN,QAAQkB,IAAKX,GAAUwI,MAAM,WAEnC,YAAgClM,IAAzB8S,EAAaW,QAjoCtB,SAA0BlK,EAAUkK,EAAShQ,GAK5C,IAHA,IAAI+Q,GAAmB,EACnBC,GAAiB,EAEXpU,EAAI,EAAG4I,EAAKwK,EAAQnT,OAAQD,EAAI4I,EAAI5I,IAAO,CAOpD,QAHyBL,KAFrBsC,EAASmR,EAASpT,IAEV6P,WAAyBsE,GAAmB,QACjCxU,IAAlBsC,EAAO6N,SAAuBsE,GAAiB,GAE/CD,GAAoBC,EAAiB,MAI3C,IAAOD,IAAsBC,EAAiB,OAAOtR,QAAQC,QAASmG,GAEtE,IAAImL,EAA2B,GAC3BC,EAAyB,GAE7B,IAAUtU,EAAI,EAAG4I,EAAKwK,EAAQnT,OAAQD,EAAI4I,EAAI5I,IAAO,CAEpD,IAAIiC,EAASmR,EAASpT,GAEtB,GAAKmU,EAAmB,CAEvB,IAAII,OAAsC5U,IAApBsC,EAAO4N,SAC1BzM,EAAOwI,cAAe,WAAY3J,EAAO4N,UACzC3G,EAAS6B,WAAW7I,SAEvBmS,EAAyBvQ,KAAMyQ,GAIhC,GAAKH,EAAiB,CAEjBG,OAAoC5U,IAAlBsC,EAAO6N,OAC1B1M,EAAOwI,cAAe,WAAY3J,EAAO6N,QACzC5G,EAAS6B,WAAWyJ,OAEvBF,EAAuBxQ,KAAMyQ,IAM/B,OAAOzR,QAAQkB,IAAK,CACnBlB,QAAQkB,IAAKqQ,GACbvR,QAAQkB,IAAKsQ,KACVzI,MAAM,SAAWL,GAEpB,IAAIiJ,EAAiBjJ,EAAW,GAC5BkJ,EAAelJ,EAAW,GAM9B,OAJK2I,IAAmBjL,EAASyL,gBAAgBzS,SAAWuS,GACvDL,IAAiBlL,EAASyL,gBAAgBH,OAASE,GACxDxL,EAAS0L,sBAAuB,EAEzB1L,KAukCJ2L,CAAiB3L,EAAUuJ,EAAaW,QAAShQ,GACjD8F,KAWL,SAAS4L,GAAqB5L,EAAU6L,GAEvC,IAAItI,EAAQvD,EAAS8L,WAIrB,GAAe,OAAVvI,EAAiB,CAErB,IAAIsG,EAAU,GAEV7Q,EAAWgH,EAAS+L,aAAc,YAEtC,QAAkBtV,IAAbuC,EAcJ,OADA/D,QAAQC,MAAO,kGACR8K,EAZP,IAAM,IAAIlJ,EAAI,EAAGA,EAAIkC,EAASgT,MAAOlV,IAEpC+S,EAAQjP,KAAM9D,GAIfkJ,EAAS8J,SAAUD,GACnBtG,EAAQvD,EAAS8L,WAanB,IAAIG,EAAoB1I,EAAMyI,MAAQ,EAClCE,EAAa,GAEjB,GAAKL,IAAa,sBAIjB,IAAU/U,EAAI,EAAGA,GAAKmV,EAAmBnV,IAExCoV,EAAWtR,KAAM2I,EAAM4I,KAAM,IAC7BD,EAAWtR,KAAM2I,EAAM4I,KAAMrV,IAC7BoV,EAAWtR,KAAM2I,EAAM4I,KAAMrV,EAAI,SAQlC,IAAUA,EAAI,EAAGA,EAAImV,EAAmBnV,IAElCA,EAAI,GAAM,GAEdoV,EAAWtR,KAAM2I,EAAM4I,KAAMrV,IAC7BoV,EAAWtR,KAAM2I,EAAM4I,KAAMrV,EAAI,IACjCoV,EAAWtR,KAAM2I,EAAM4I,KAAMrV,EAAI,MAKjCoV,EAAWtR,KAAM2I,EAAM4I,KAAMrV,EAAI,IACjCoV,EAAWtR,KAAM2I,EAAM4I,KAAMrV,EAAI,IACjCoV,EAAWtR,KAAM2I,EAAM4I,KAAMrV,KAQzBoV,EAAWnV,OAAS,IAAQkV,GAElChX,QAAQC,MAAO,2FAMhB,IAAIkX,EAAcpM,EAAS7D,QAG3B,OAFAiQ,EAAYtC,SAAUoC,GAEfE,EAiwBR,OAvzDAlU,GAAWlE,UAAU2B,MAAQ,SAAWpB,EAAQE,GAE/C,IAAIyF,EAAS7G,KACTkD,EAAOlD,KAAKkD,KACZP,EAAa3C,KAAK2C,WAGtB3C,KAAK4V,MAAMlV,YAGXV,KAAKgZ,WAELzS,QAAQkB,IAAK,CAEZzH,KAAKiZ,gBAAiB,SACtBjZ,KAAKiZ,gBAAiB,aACtBjZ,KAAKiZ,gBAAiB,YAEnB3J,MAAM,SAAW4J,GAEpB,IAAI/I,EAAS,CACZ1D,MAAOyM,EAAc,GAAKhW,EAAKuJ,OAAS,GACxC0M,OAAQD,EAAc,GACtBE,WAAYF,EAAc,GAC1BG,QAASH,EAAc,GACvB7V,MAAOH,EAAKG,MACZwD,OAAQA,EACR+N,SAAU,IAGXH,GAAgC9R,EAAYwN,EAAQjN,GAEpD4R,GAAwB3E,EAAQjN,GAEhChC,EAAQiP,MAELmJ,MAAOlY,IAOZyD,GAAWlE,UAAUqY,SAAW,WAW/B,IATA,IAAIO,EAAWvZ,KAAKkD,KAAKsW,OAAS,GAC9BC,EAAWzZ,KAAKkD,KAAKwW,OAAS,GAC9BC,EAAW3Z,KAAKkD,KAAK0W,QAAU,GAE/BC,EAAiB,GACjBC,EAAW,GAILC,EAAY,EAAGC,EAAaP,EAAS/V,OAAQqW,EAAYC,EAAYD,IAI9E,IAFA,IAAIE,EAASR,EAAUM,GAAYE,OAEzBxW,EAAI,EAAG4I,EAAK4N,EAAOvW,OAAQD,EAAI4I,EAAI5I,IAE5C8V,EAAUU,EAAQxW,IAAMyW,QAAS,EAWnC,IAAM,IAAIC,EAAY,EAAGC,EAAab,EAAS7V,OAAQyW,EAAYC,EAAYD,IAAe,CAE7F,IAAIE,EAAUd,EAAUY,QAEF/W,IAAjBiX,EAAQnF,YAE4B9R,IAAnCyW,EAAgBQ,EAAQnF,QAE5B2E,EAAgBQ,EAAQnF,MAAS4E,EAAUO,EAAQnF,MAAS,GAI7D2E,EAAgBQ,EAAQnF,aAKF9R,IAAjBiX,EAAQC,OAEZX,EAAUU,EAAQnF,MAAOqF,eAAgB,IAQ5Cva,KAAKkD,KAAK2W,eAAiBA,EAC3B7Z,KAAKkD,KAAK4W,SAAWA,GAUtBjV,GAAWlE,UAAU0O,cAAgB,SAAW5J,EAAMyK,GAErD,IAAIsK,EAAW/U,EAAO,IAAMyK,EACxBuK,EAAaza,KAAK4V,MAAMvV,IAAKma,GAEjC,IAAOC,EAAa,CAEnB,OAAShV,GAER,IAAK,QACJgV,EAAaza,KAAK0a,UAAWxK,GAC7B,MAED,IAAK,OACJuK,EAAaza,KAAK2a,SAAUzK,GAC5B,MAED,IAAK,OACJuK,EAAaza,KAAK4a,SAAU1K,GAC5B,MAED,IAAK,WACJuK,EAAaza,KAAK6a,aAAc3K,GAChC,MAED,IAAK,aACJuK,EAAaza,KAAK8a,eAAgB5K,GAClC,MAED,IAAK,SACJuK,EAAaza,KAAK+a,WAAY7K,GAC9B,MAED,IAAK,WACJuK,EAAaza,KAAKgb,aAAc9K,GAChC,MAED,IAAK,UACJuK,EAAaza,KAAKib,YAAa/K,GAC/B,MAED,IAAK,OACJuK,EAAaza,KAAKkb,SAAUhL,GAC5B,MAED,IAAK,YACJuK,EAAaza,KAAKmb,cAAejL,GACjC,MAED,IAAK,SACJuK,EAAaza,KAAKob,WAAYlL,GAC9B,MAED,IAAK,QACJuK,EAAaza,KAAK2C,WAAYI,EAAWc,qBAAsBqB,UAAWgL,GAC1E,MAED,QACC,MAAM,IAAI3M,MAAO,iBAAmBkC,GAItCzF,KAAK4V,MAAMrV,IAAKia,EAAUC,GAI3B,OAAOA,GASR5V,GAAWlE,UAAUsY,gBAAkB,SAAWxT,GAEjD,IAAIyT,EAAelZ,KAAK4V,MAAMvV,IAAKoF,GAEnC,IAAOyT,EAAe,CAErB,IAAIrS,EAAS7G,KACTqb,EAAOrb,KAAKkD,KAAMuC,GAAkB,SAATA,EAAkB,KAAO,OAAW,GAEnEyT,EAAe3S,QAAQkB,IAAK4T,EAAKrQ,KAAK,SAAWsQ,EAAKpL,GAErD,OAAOrJ,EAAOwI,cAAe5J,EAAMyK,OAIpClQ,KAAK4V,MAAMrV,IAAKkF,EAAMyT,GAIvB,OAAOA,GASRrU,GAAWlE,UAAUoa,WAAa,SAAWQ,GAE5C,IAAIC,EAAYxb,KAAKkD,KAAKuY,QAASF,GAC/BvZ,EAAShC,KAAKgW,WAElB,GAAKwF,EAAU/V,MAA2B,gBAAnB+V,EAAU/V,KAEhC,MAAM,IAAIlC,MAAO,qBAAuBiY,EAAU/V,KAAO,kCAK1D,QAAuBrC,IAAlBoY,EAAUE,KAAqC,IAAhBH,EAEnC,OAAOhV,QAAQC,QAASxG,KAAK2C,WAAYI,EAAWC,iBAAkB2E,MAIvE,IAAIgO,EAAU3V,KAAK2V,QAEnB,OAAO,IAAIpP,SAAS,SAAWC,EAASmV,GAEvC3Z,EAAOhB,KAAMuT,GAAYiH,EAAUE,IAAK/F,EAAQpU,MAAQiF,OAASpD,GAAW,WAE3EuY,EAAQ,IAAIpY,MAAO,4CAA8CiY,EAAUE,IAAM,cAapF7W,GAAWlE,UAAUma,eAAiB,SAAWzM,GAEhD,IAAIuN,EAAgB5b,KAAKkD,KAAK2Y,YAAaxN,GAE3C,OAAOrO,KAAKqP,cAAe,SAAUuM,EAAcE,QAASxM,MAAM,SAAWwM,GAE5E,IAAI1T,EAAawT,EAAcxT,YAAc,EACzCI,EAAaoT,EAAcpT,YAAc,EAC7C,OAAOsT,EAAO9T,MAAOQ,EAAYA,EAAaJ,OAWhDvD,GAAWlE,UAAUka,aAAe,SAAWzE,GAE9C,IAAIvP,EAAS7G,KACTkD,EAAOlD,KAAKkD,KAEZ8L,EAAchP,KAAKkD,KAAK+L,UAAWmH,GAEvC,QAAgChT,IAA3B4L,EAAYV,iBAAmDlL,IAAvB4L,EAAY+M,OAKxD,OAAOxV,QAAQC,QAAS,MAIzB,IAAIwV,EAAqB,GAmBzB,YAjBgC5Y,IAA3B4L,EAAYV,WAEhB0N,EAAmBzU,KAAMvH,KAAKqP,cAAe,aAAcL,EAAYV,aAIvE0N,EAAmBzU,KAAM,WAIEnE,IAAvB4L,EAAY+M,SAEhBC,EAAmBzU,KAAMvH,KAAKqP,cAAe,aAAcL,EAAY+M,OAAOvF,QAAQlI,aACtF0N,EAAmBzU,KAAMvH,KAAKqP,cAAe,aAAcL,EAAY+M,OAAO3L,OAAO9B,cAI/E/H,QAAQkB,IAAKuU,GAAqB1M,MAAM,SAAWuM,GAEzD,IAWIxU,EAAO4U,EAXP3N,EAAauN,EAAa,GAE1BK,EAAW7I,GAAkBrE,EAAYvJ,MACzC0W,EAAahN,GAAuBH,EAAYE,eAGhDkN,EAAeD,EAAWE,kBAC1BC,EAAYF,EAAeF,EAC3B1T,EAAawG,EAAYxG,YAAc,EACvC+T,OAAwCnZ,IAA3B4L,EAAYV,WAA2BpL,EAAK2Y,YAAa7M,EAAYV,YAAaiO,gBAAanZ,EAC5GgM,GAAwC,IAA3BJ,EAAYI,WAI7B,GAAKmN,GAAcA,IAAeD,EAAY,CAI7C,IAAIE,EAAUvW,KAAKwW,MAAOjU,EAAa+T,GACnCG,EAAa,qBAAuB1N,EAAYV,WAAa,IAAMU,EAAYE,cAAgB,IAAMsN,EAAU,IAAMxN,EAAY2J,MACjIgE,EAAK9V,EAAO+O,MAAMvV,IAAKqc,GAEpBC,IAENtV,EAAQ,IAAI8U,EAAY7N,EAAYkO,EAAUD,EAAYvN,EAAY2J,MAAQ4D,EAAaH,GAG3FO,EAAK,IAAI,IAAmBtV,EAAOkV,EAAaH,GAEhDvV,EAAO+O,MAAMrV,IAAKmc,EAAYC,IAI/BV,EAAkB,IAAI,6BAA4BU,EAAIT,EAAY1T,EAAa+T,EAAeH,EAAchN,QAM3G/H,EAFmB,OAAfiH,EAEI,IAAI6N,EAAYnN,EAAY2J,MAAQuD,GAIpC,IAAIC,EAAY7N,EAAY9F,EAAYwG,EAAY2J,MAAQuD,GAIrED,EAAkB,IAAI,kBAAiB5U,EAAO6U,EAAU9M,GAKzD,QAA4BhM,IAAvB4L,EAAY+M,OAAuB,CAEvC,IAAIa,EAAkBvJ,GAAiBwJ,OACnCC,EAAoB3N,GAAuBH,EAAY+M,OAAOvF,QAAQtH,eAEtE6N,EAAoB/N,EAAY+M,OAAOvF,QAAQhO,YAAc,EAC7DwU,EAAmBhO,EAAY+M,OAAO3L,OAAO5H,YAAc,EAE3DyU,EAAgB,IAAIH,EAAmBjB,EAAa,GAAKkB,EAAmB/N,EAAY+M,OAAOpD,MAAQiE,GACvGM,EAAe,IAAIf,EAAYN,EAAa,GAAKmB,EAAkBhO,EAAY+M,OAAOpD,MAAQuD,GAE9E,OAAf5N,IAGJ2N,EAAkB,IAAI,kBAAiBA,EAAgB5U,MAAMW,QAASiU,EAAgBC,SAAUD,EAAgB7M,aAIjH,IAAM,IAAI3L,EAAI,EAAG4I,EAAK4Q,EAAcvZ,OAAQD,EAAI4I,EAAI5I,IAAO,CAE1D,IAAIyM,EAAQ+M,EAAexZ,GAM3B,GAJAwY,EAAgBlF,KAAM7G,EAAOgN,EAAczZ,EAAIyY,IAC1CA,GAAY,GAAID,EAAgBhF,KAAM/G,EAAOgN,EAAczZ,EAAIyY,EAAW,IAC1EA,GAAY,GAAID,EAAgB/E,KAAMhH,EAAOgN,EAAczZ,EAAIyY,EAAW,IAC1EA,GAAY,GAAID,EAAgBkB,KAAMjN,EAAOgN,EAAczZ,EAAIyY,EAAW,IAC1EA,GAAY,EAAI,MAAM,IAAI3Y,MAAO,sEAMxC,OAAO0Y,MAWTpX,GAAWlE,UAAUsa,YAAc,SAAWmC,GAE7C,IAWIhR,EAXAvF,EAAS7G,KACTkD,EAAOlD,KAAKkD,KACZyS,EAAU3V,KAAK2V,QACfG,EAAgB9V,KAAK8V,cAErBuH,EAAMC,OAAOD,KAAOC,OAAOC,UAE3BC,EAAata,EAAKua,SAAUL,GAE5BM,EAAoBF,EAAW7a,YAAc,GAc7Cgb,GARHvR,EAFIsR,EAAmB3a,EAAWsB,kBAEzBnB,EAAK0a,OAAQF,EAAmB3a,EAAWsB,kBAAmB+H,QAI9DlJ,EAAK0a,OAAQJ,EAAWpR,SAIXsP,IACnBmC,GAAc,EAiBlB,YAf2Bza,IAAtBgJ,EAAOkC,aAIXqP,EAAY9W,EAAOwI,cAAe,aAAcjD,EAAOkC,YAAagB,MAAM,SAAWhB,GAEpFuP,GAAc,EACd,IAAIC,EAAO,IAAIC,KAAM,CAAEzP,GAAc,CAAE7I,KAAM2G,EAAO4R,WAEpD,OADAL,EAAYN,EAAIY,gBAAiBH,OAO5BvX,QAAQC,QAASmX,GAAYrO,MAAM,SAAWqO,GAIpD,IAAI3b,EAAS2T,EAAQ7V,QAAQoe,WAAYP,GAUzC,OARO3b,IAENA,EAAS0b,EAAmB3a,EAAWsB,kBACpCwC,EAAOlE,WAAYI,EAAWsB,kBAAmBnE,UACjD4V,GAIG,IAAIvP,SAAS,SAAWC,EAASmV,GAEvC3Z,EAAOhB,KAAMuT,GAAYoJ,EAAWhI,EAAQpU,MAAQiF,OAASpD,EAAWuY,SAItErM,MAAM,SAAWrC,IAIC,IAAhB4Q,GAEJR,EAAIc,gBAAiBR,GAItB1Q,EAAQmR,OAAQ,OAEShb,IAApBoa,EAAW1Y,OAAqBmI,EAAQnI,KAAO0Y,EAAW1Y,MAG1DsH,EAAO4R,YAAY1J,KAEvBrH,EAAQoR,OAAS/J,GAAmBlI,EAAO4R,WAI5C,IACIM,GADWpb,EAAKqb,UAAY,IACRf,EAAWc,UAAa,GAOhD,OALArR,EAAQuR,UAAY9L,GAAe4L,EAAQE,YAAe,eAC1DvR,EAAQwR,UAAY/L,GAAe4L,EAAQG,YAAe,2BAC1DxR,EAAQyR,MAAQzL,GAAiBqL,EAAQI,QAAW,iBACpDzR,EAAQ0R,MAAQ1L,GAAiBqL,EAAQK,QAAW,iBAE7C1R,MAaTpI,GAAWlE,UAAU6G,cAAgB,SAAWb,EAAgBiY,EAASC,GAExE,IAAIhY,EAAS7G,KAEb,OAAOA,KAAKqP,cAAe,UAAWwP,EAAO3O,OAAQZ,MAAM,SAAWrC,GAErE,IAAOA,EAAQ6R,oBAEd,OAASF,GAER,IAAK,QACL,IAAK,cACL,IAAK,eACL,IAAK,YACL,IAAK,eACJ3R,EAAQoR,OAAS,YAepB,QANyBjb,IAApByb,EAAO9O,UAA6C,GAAnB8O,EAAO9O,UAAiC,UAAZ6O,GAA0C,GAAnBC,EAAO9O,UAE/FnO,QAAQgD,KAAM,mCAAqCia,EAAO9O,SAAW,gBAAkB6O,EAAU,uBAI7F/X,EAAOlE,WAAYI,EAAWwB,uBAA0B,CAE5D,IAAImL,OAAkCtM,IAAtByb,EAAOlc,WAA2Bkc,EAAOlc,WAAYI,EAAWwB,4BAA0BnB,EAErGsM,IAEJzC,EAAUpG,EAAOlE,WAAYI,EAAWwB,uBAAwBkL,cAAexC,EAASyC,IAM1F/I,EAAgBiY,GAAY3R,MAc9BpI,GAAWlE,UAAUoe,oBAAsB,SAAW7J,GAErD,IAAIvI,EAAWuI,EAAKvI,SAChB/B,EAAWsK,EAAKtK,SAChBjI,EAAa3C,KAAK2C,WAElBqc,OAAoD5b,IAAhCuJ,EAAS6B,WAAWyQ,QACxCC,OAAgD9b,IAA9BuJ,EAAS6B,WAAWlJ,MACtC6Z,OAAgD/b,IAA/BuJ,EAAS6B,WAAWyJ,OACrCmH,GAAqC,IAAvBlK,EAAKqF,cACnB8E,EAAkBze,OAAO6U,KAAM9I,EAASyL,iBAAkB1U,OAAS,EACnE4b,EAAkBD,QAAuDjc,IAApCuJ,EAASyL,gBAAgBH,OAElE,GAAK/C,EAAKqK,SAAW,CAEpB,IAAI/E,EAAW,kBAAoB5P,EAAS4U,KAExCC,EAAiBzf,KAAK4V,MAAMvV,IAAKma,GAE9BiF,IAENA,EAAiB,IAAI,iBACrB,WAAS9e,UAAUmM,KAAK/M,KAAM0f,EAAgB7U,GAC9C6U,EAAena,MAAMwH,KAAMlC,EAAStF,OACpCma,EAAezU,IAAMJ,EAASI,IAC9ByU,EAAeC,iBAAkB,EAEjC1f,KAAK4V,MAAMrV,IAAKia,EAAUiF,IAI3B7U,EAAW6U,OAEL,GAAKvK,EAAKyK,OAAS,CAErBnF,EAAW,qBAAuB5P,EAAS4U,KAA/C,IAEII,EAAe5f,KAAK4V,MAAMvV,IAAKma,GAE5BoF,IAENA,EAAe,IAAI,oBACnB,WAASjf,UAAUmM,KAAK/M,KAAM6f,EAAchV,GAC5CgV,EAAata,MAAMwH,KAAMlC,EAAStF,OAElCtF,KAAK4V,MAAMrV,IAAKia,EAAUoF,IAI3BhV,EAAWgV,EAKZ,GAAKZ,GAAqBE,GAAmBC,GAAkBC,GAAeC,EAAkB,CAE3F7E,EAAW,kBAAoB5P,EAAS4U,KAAO,IAE9C5U,EAASG,mCAAmCyP,GAAY,wBACxD4E,IAAc5E,GAAY,aAC1BwE,IAAoBxE,GAAY,oBAChC0E,IAAkB1E,GAAY,kBAC9B2E,IAAiB3E,GAAY,iBAC7B6E,IAAkB7E,GAAY,kBAC9B8E,IAAkB9E,GAAY,kBAEnC,IAAIqF,EAAiB7f,KAAK4V,MAAMvV,IAAKma,GAE9BqF,IAENA,EAAiBjV,EAASG,iCACvBpI,EAAYI,EAAWkB,uCAAwCkI,cAAevB,GAC9EA,EAAS9B,QAEPsW,IAAcS,EAAeC,UAAW,GACxCd,IAAoBa,EAAeE,gBAAiB,GACpDb,IAAkBW,EAAeG,aAAe,gBAChDb,IAAiBU,EAAeI,aAAc,GAC9CZ,IAAkBQ,EAAeK,cAAe,GAChDZ,IAAkBO,EAAe1H,cAAe,GAErDnY,KAAK4V,MAAMrV,IAAKia,EAAUqF,IAI3BjV,EAAWiV,EAMPjV,EAASO,YAAqC/H,IAA5BuJ,EAAS6B,WAAW2R,UAAgD/c,IAA3BuJ,EAAS6B,WAAW4R,IAEnFzT,EAAS2J,aAAc,MAAO,IAAI,kBAAiB3J,EAAS6B,WAAW4R,GAAG/Y,MAAO,IAI7EuD,EAASG,mCAGbmK,EAAKmL,eAAiB1d,EAAYI,EAAWkB,uCAAwCsI,iBAKjF3B,EAASc,cAAiBsT,IAE9BpU,EAASc,YAAY4U,GAAM1V,EAASc,YAAY4U,GAIjDpL,EAAKtK,SAAWA,GASjB/F,GAAWlE,UAAUqa,aAAe,SAAWuF,GAE9C,IAKIC,EAJAtd,EAAOlD,KAAKkD,KACZP,EAAa3C,KAAK2C,WAClBiE,EAAc1D,EAAKud,UAAWF,GAG9B5Z,EAAiB,GACjB+Z,EAAqB9Z,EAAYjE,YAAc,GAE/CmE,EAAU,GAEd,GAAK4Z,EAAoB3d,EAAWkB,uCAA0C,CAE7E,IAAI0c,EAAche,EAAYI,EAAWkB,uCACzCuc,EAAeG,EAAYla,kBAC3BK,EAAQS,KAAMoZ,EAAYja,aAAcC,EAAgBC,EAf5C5G,YAiBN,GAAK0gB,EAAoB3d,EAAWgB,qBAAwB,CAElE,IAAI6c,EAAeje,EAAYI,EAAWgB,qBAC1Cyc,EAAeI,EAAana,kBAC5BK,EAAQS,KAAMqZ,EAAala,aAAcC,EAAgBC,EArB7C5G,WAuBN,CAKNwgB,EAAe,uBAEf,IAAIxZ,EAAoBJ,EAAYK,sBAAwB,GAK5D,GAHAN,EAAerB,MAAQ,IAAI,QAAO,EAAK,EAAK,GAC5CqB,EAAeI,QAAU,EAEpBG,MAAMC,QAASH,EAAkBI,iBAAoB,CAEzD,IAAIC,EAAQL,EAAkBI,gBAE9BT,EAAerB,MAAMC,UAAW8B,GAChCV,EAAeI,QAAUM,EAAO,QAIWjE,IAAvC4D,EAAkBM,kBAEtBR,EAAQS,KA9CGvH,KA8CUwH,cAAeb,EAAgB,MAAOK,EAAkBM,mBAI9EX,EAAe6C,eAAiDpG,IAArC4D,EAAkB6Z,eAA+B7Z,EAAkB6Z,eAAiB,EAC/Gla,EAAe4C,eAAkDnG,IAAtC4D,EAAkB8Z,gBAAgC9Z,EAAkB8Z,gBAAkB,OAE7D1d,IAA/C4D,EAAkB+Z,2BAEtBja,EAAQS,KAvDGvH,KAuDUwH,cAAeb,EAAgB,eAAgBK,EAAkB+Z,2BACtFja,EAAQS,KAxDGvH,KAwDUwH,cAAeb,EAAgB,eAAgBK,EAAkB+Z,6BAMvD,IAA5Bna,EAAYoa,cAEhBra,EAAesa,KAAO,cAIvB,IAAIC,EAAYta,EAAYsa,WAAa7M,GAwDzC,OAtDK6M,IAAc7M,GAElB1N,EAAemE,aAAc,GAI7BnE,EAAemE,aAAc,EAExBoW,IAAc7M,KAElB1N,EAAewa,eAAwC/d,IAA5BwD,EAAYwa,YAA4Bxa,EAAYwa,YAAc,UAM5Dhe,IAA9BwD,EAAYya,eAA+Bb,IAAiB,sBAEhE1Z,EAAQS,KAxFIvH,KAwFSwH,cAAeb,EAAgB,YAAaC,EAAYya,gBAE7E1a,EAAe+E,YAAc,IAAI,UAAS,EAAG,QAEJtI,IAApCwD,EAAYya,cAAcxR,OAE9BlJ,EAAe+E,YAAY9F,IAAKgB,EAAYya,cAAcxR,MAAOjJ,EAAYya,cAAcxR,aAMvDzM,IAAjCwD,EAAY0a,kBAAkCd,IAAiB,sBAEnE1Z,EAAQS,KAtGIvH,KAsGSwH,cAAeb,EAAgB,QAASC,EAAY0a,wBAE1Ble,IAA1CwD,EAAY0a,iBAAiBC,WAEjC5a,EAAeyE,eAAiBxE,EAAY0a,iBAAiBC,gBAM3Bne,IAA/BwD,EAAY4a,gBAAgChB,IAAiB,sBAEjE7Z,EAAe0D,UAAW,IAAI,SAAQ9E,UAAWqB,EAAY4a,sBAIzBpe,IAAhCwD,EAAY6a,iBAAiCjB,IAAiB,qBAElE1Z,EAAQS,KAxHIvH,KAwHSwH,cAAeb,EAAgB,cAAeC,EAAY6a,kBAIzElb,QAAQkB,IAAKX,GAAUwI,MAAM,WAEnC,IAAI1E,EAuBJ,OAnBCA,EAFI4V,IAAiB,iBAEV7d,EAAYI,EAAWkB,uCAAwCyG,eAAgB/D,GAI/E,IAAI6Z,EAAc7Z,QAIJvD,IAArBwD,EAAY9B,OAAqB8F,EAAS9F,KAAO8B,EAAY9B,MAG7D8F,EAASI,MAAMJ,EAASI,IAAI0W,SAAW,gBACvC9W,EAASU,cAAcV,EAASU,YAAYoW,SAAW,gBACvD9W,EAASb,cAAca,EAASb,YAAY2X,SAAW,gBAE5D5M,GAAwBlK,EAAUhE,GAE7BA,EAAYjE,YAAa8R,GAAgC9R,EAAYiI,EAAUhE,GAE7EgE,MAkQT/F,GAAWlE,UAAUghB,eAAiB,SAAWC,GAEhD,IAAI/a,EAAS7G,KACT2C,EAAa3C,KAAK2C,WAClBiT,EAAQ5V,KAAK6V,eAEjB,SAASgM,EAAsBzT,GAE9B,OAAOzL,EAAYI,EAAWoB,4BAC5BgK,gBAAiBC,EAAWvH,GAC5ByI,MAAM,SAAW3C,GAEjB,OAAOsJ,GAAwBtJ,EAAUyB,EAAWvH,MAQvD,IAFA,IArpC4BqP,EAExB4L,EAmpCAhb,EAAU,GAEJrD,EAAI,EAAG4I,EAAKuV,EAAWle,OAAQD,EAAI4I,EAAI5I,IAAO,CAEvD,IAaKse,EAbD3T,EAAYwT,EAAYne,GACxB+W,GAxpCDsH,aAFwB5L,EA0pCQ9H,GAxpCFzL,YAAcuT,EAAavT,WAAYI,EAAWoB,6BAKrE,SAAW2d,EAAexT,WACrC,IAAMwT,EAAetL,QACrB,IAAMjB,GAAqBuM,EAAetT,YAI/B0H,EAAaM,QAAU,IAAMjB,GAAqBW,EAAa1H,YAAe,IAAM0H,EAAa8L,MAgpC3GC,EAASrM,EAAO4E,GAEpB,GAAKyH,EAGJnb,EAAQS,KAAM0a,EAAOC,cASpBH,EAHI3T,EAAUzL,YAAcyL,EAAUzL,WAAYI,EAAWoB,4BAG3C0d,EAAsBzT,GAKtB6H,GAAwB,IAAI,iBAAkB7H,EAAWvH,GAK5E+O,EAAO4E,GAAa,CAAEpM,UAAWA,EAAW8T,QAASH,GAErDjb,EAAQS,KAAMwa,GAMhB,OAAOxb,QAAQkB,IAAKX,IASrBjC,GAAWlE,UAAUia,SAAW,SAAWuH,GAU1C,IARA,IAv3C+BvM,EAu3C3B/O,EAAS7G,KAGTmV,EAFOnV,KAAKkD,KAEG0W,OAAQuI,GACvBP,EAAazM,EAAQyM,WAErB9a,EAAU,GAEJrD,EAAI,EAAG4I,EAAKuV,EAAWle,OAAQD,EAAI4I,EAAI5I,IAAO,CAEvD,IAAImH,OAAwCxH,IAA7Bwe,EAAYne,GAAImH,eA/3CIxH,KAFLwS,EAk4CJ5V,KAAK4V,OAh4CF,kBAE7BA,EAAyB,gBAAI,IAAI,uBAAsB,CACtDtQ,MAAO,SACP+E,SAAU,EACVb,UAAW,EACXD,UAAW,EACXuB,aAAa,EACbsX,WAAW,EACXnB,KAAM,eAKDrL,EAAyB,iBAm3C5B5V,KAAKqP,cAAe,WAAYuS,EAAYne,GAAImH,UAEnD9D,EAAQS,KAAMqD,GAMf,OAFA9D,EAAQS,KAAMV,EAAO8a,eAAgBC,IAE9Brb,QAAQkB,IAAKX,GAAUwI,MAAM,SAAW+S,GAO9C,IALA,IAAI5B,EAAY4B,EAAQra,MAAO,EAAGqa,EAAQ3e,OAAS,GAC/C4e,EAAaD,EAASA,EAAQ3e,OAAS,GAEvCkW,EAAS,GAEHnW,EAAI,EAAG4I,EAAKiW,EAAW5e,OAAQD,EAAI4I,EAAI5I,IAAO,CAEvD,IAKIyR,EALAvI,EAAW2V,EAAY7e,GACvB2K,EAAYwT,EAAYne,GAMxBmH,EAAW6V,EAAWhd,GAE1B,GAAK2K,EAAU4T,OAASlQ,IACvB1D,EAAU4T,OAASlQ,IACnB1D,EAAU4T,OAASlQ,SACA1O,IAAnBgL,EAAU4T,MAOkB,KAJ5B9M,GAAiC,IAA1BC,EAAQoF,cACZ,IAAI,cAAa5N,EAAU/B,GAC3B,IAAI,OAAM+B,EAAU/B,IAEb2P,eAA4BrF,EAAKvI,SAAS6B,WAAW+T,WAAWnT,YAIzE8F,EAAKsN,uBAIDpU,EAAU4T,OAASlQ,GAEvBoD,EAAKvI,SAAW4L,GAAqBrD,EAAKvI,SAAU,yBAEzCyB,EAAU4T,OAASlQ,KAE9BoD,EAAKvI,SAAW4L,GAAqBrD,EAAKvI,SAAU,6BAI/C,GAAKyB,EAAU4T,OAASlQ,GAE9BoD,EAAO,IAAI,eAAcvI,EAAU/B,QAE7B,GAAKwD,EAAU4T,OAASlQ,GAE9BoD,EAAO,IAAI,OAAMvI,EAAU/B,QAErB,GAAKwD,EAAU4T,OAASlQ,GAE9BoD,EAAO,IAAI,IAAUvI,EAAU/B,OAEzB,IAAKwD,EAAU4T,OAASlQ,GAM9B,MAAM,IAAIvO,MAAO,iDAAmD6K,EAAU4T,MAJ9E9M,EAAO,IAAI,SAAQvI,EAAU/B,GAQzBhK,OAAO6U,KAAMP,EAAKvI,SAASyL,iBAAkB1U,OAAS,GAE1DuR,GAAoBC,EAAMC,GAI3BD,EAAKpQ,KAAOqQ,EAAQrQ,MAAU,QAAUqd,EAEnCG,EAAW5e,OAAS,IAAIwR,EAAKpQ,MAAQ,IAAMrB,GAEhDqR,GAAwBI,EAAMC,GAE9BtO,EAAOkY,oBAAqB7J,GAE5B0E,EAAOrS,KAAM2N,GAId,GAAuB,IAAlB0E,EAAOlW,OAEX,OAAOkW,EAAQ,GAIhB,IAAI6I,EAAQ,IAAI,QAEhB,IAAUhf,EAAI,EAAG4I,EAAKuN,EAAOlW,OAAQD,EAAI4I,EAAI5I,IAE5Cgf,EAAMliB,IAAKqZ,EAAQnW,IAIpB,OAAOgf,MAWT5d,GAAWlE,UAAUya,WAAa,SAAWsH,GAE5C,IAAIhW,EACAiW,EAAY3iB,KAAKkD,KAAKmW,QAASqJ,GAC/B/X,EAASgY,EAAWA,EAAUld,MAElC,GAAOkF,EAqBP,MAdwB,gBAAnBgY,EAAUld,KAEdiH,EAAS,IAAI,oBAAmB,QAAMkW,SAAUjY,EAAOkY,MAAQlY,EAAOmY,aAAe,EAAGnY,EAAOoY,OAAS,EAAGpY,EAAOqY,MAAQ,KAE5F,iBAAnBL,EAAUld,OAErBiH,EAAS,IAAI,qBAAoB/B,EAAOsY,MAAS,EAAGtY,EAAOsY,KAAO,EAAGtY,EAAOuY,KAAO,EAAGvY,EAAOuY,MAAS,EAAGvY,EAAOoY,MAAOpY,EAAOqY,YAIvG5f,IAAnBuf,EAAU7d,OAAqB4H,EAAO5H,KAAO6d,EAAU7d,MAE5DgQ,GAAwBpI,EAAQiW,GAEzBpc,QAAQC,QAASkG,GAnBvB9K,QAAQgD,KAAM,iDA4BhBC,GAAWlE,UAAUua,SAAW,SAAWnB,GAE1C,IAAIoJ,EAAUnjB,KAAKkD,KAAKwW,MAAOK,GAE3BqJ,EAAY,CAAEnJ,OAAQkJ,EAAQlJ,QAElC,YAAqC7W,IAAhC+f,EAAQE,oBAEL9c,QAAQC,QAAS4c,GAIlBpjB,KAAKqP,cAAe,WAAY8T,EAAQE,qBAAsB/T,MAAM,SAAW+G,GAIrF,OAFA+M,EAAUC,oBAAsBhN,EAEzB+M,MAWTve,GAAWlE,UAAUwa,cAAgB,SAAWmI,GAY/C,IAVA,IAEIC,EAFOvjB,KAAKkD,KAEQkW,WAAYkK,GAEhCE,EAAe,GACfC,EAAwB,GACxBC,EAAyB,GACzBC,EAAkB,GAClBC,EAAiB,GAEXngB,EAAI,EAAG4I,EAAKkX,EAAaM,SAASngB,OAAQD,EAAI4I,EAAI5I,IAAO,CAElE,IAAIqgB,EAAUP,EAAaM,SAAUpgB,GACjC6a,EAAUiF,EAAahF,SAAUuF,EAAQxF,SACzC5Y,EAASoe,EAAQpe,OACjBZ,OAAuB1B,IAAhBsC,EAAOqe,KAAqBre,EAAOqe,KAAOre,EAAOse,GACxDC,OAAoC7gB,IAA5BmgB,EAAaW,WAA2BX,EAAaW,WAAY5F,EAAQ2F,OAAU3F,EAAQ2F,MACnGE,OAAqC/gB,IAA5BmgB,EAAaW,WAA2BX,EAAaW,WAAY5F,EAAQ6F,QAAW7F,EAAQ6F,OAEzGX,EAAajc,KAAMvH,KAAKqP,cAAe,OAAQvK,IAC/C2e,EAAsBlc,KAAMvH,KAAKqP,cAAe,WAAY4U,IAC5DP,EAAuBnc,KAAMvH,KAAKqP,cAAe,WAAY8U,IAC7DR,EAAgBpc,KAAM+W,GACtBsF,EAAerc,KAAM7B,GAItB,OAAOa,QAAQkB,IAAK,CAEnBlB,QAAQkB,IAAK+b,GACbjd,QAAQkB,IAAKgc,GACbld,QAAQkB,IAAKic,GACbnd,QAAQkB,IAAKkc,GACbpd,QAAQkB,IAAKmc,KAEVtU,MAAM,SAAW4J,GAUpB,IARA,IAAIM,EAAQN,EAAc,GACtBkL,EAAiBlL,EAAc,GAC/BmL,EAAkBnL,EAAc,GAChCqF,EAAWrF,EAAc,GACzBrC,EAAUqC,EAAc,GAExBoL,EAAS,GAEH7gB,EAAI,EAAG4I,EAAKmN,EAAM9V,OAAQD,EAAI4I,EAAI5I,IAAO,CAElD,IAAIsgB,EAAOvK,EAAO/V,GACd8gB,EAAgBH,EAAgB3gB,GAChC+gB,EAAiBH,EAAiB5gB,GAClC6a,EAAUC,EAAU9a,GACpBiC,EAASmR,EAASpT,GAEtB,QAAcL,IAAT2gB,EAAL,CAKA,IAAIU,EAEJ,OALAV,EAAK5W,eACL4W,EAAK7W,kBAAmB,EAIf4G,GAAiBpO,EAAOnE,OAEhC,KAAKuS,GAAgBE,QAEpByQ,EAAqB,IACrB,MAED,KAAK3Q,GAAgBlE,SAEpB6U,EAAqB,IACrB,MAED,KAAK3Q,GAAgBnO,SACrB,KAAKmO,GAAgBjE,MACrB,QAEC4U,EAAqB,IAKvB,IAAIC,EAAaX,EAAKjf,KAAOif,EAAKjf,KAAOif,EAAKvE,KAE1CmF,OAA0CvhB,IAA1Bkb,EAAQqG,cAA8B1Q,GAAeqK,EAAQqG,eAAkB,oBAE/FtP,EAAc,GAEbvB,GAAiBpO,EAAOnE,QAAWuS,GAAgBE,QAGvD+P,EAAKa,UAAU,SAAWpkB,IAEF,IAAlBA,EAAOqkB,QAAmBrkB,EAAO4U,uBAErCC,EAAY9N,KAAM/G,EAAOsE,KAAOtE,EAAOsE,KAAOtE,EAAOgf,SAQvDnK,EAAY9N,KAAMmd,GAInB,IAAII,EAAcN,EAAend,MAEjC,GAAKmd,EAAepV,WAAa,CAEhC,IAAIS,EAEJ,GAAKiV,EAAY/jB,cAAgBiR,UAEhCnC,EAAQ,EAAI,SAEN,GAAKiV,EAAY/jB,cAAgB8B,WAEvCgN,EAAQ,EAAI,SAEN,GAAKiV,EAAY/jB,aAAeoR,WAEtCtC,EAAQ,EAAI,UAEN,IAAKiV,EAAY/jB,cAAgBsR,YAMvC,MAAM,IAAI9O,MAAO,iEAJjBsM,EAAQ,EAAI,MAUb,IAFA,IAAIkV,EAAS,IAAItS,aAAcqS,EAAYphB,QAEjCshB,EAAI,EAAGC,EAAKH,EAAYphB,OAAQshB,EAAIC,EAAID,IAEjDD,EAAQC,GAAMF,EAAaE,GAAMnV,EAIlCiV,EAAcC,EAIf,IAAUC,EAAI,EAAGC,EAAK5P,EAAY3R,OAAQshB,EAAIC,EAAID,IAAO,CAExD,IAAIE,EAAQ,IAAIT,EACfpP,EAAa2P,GAAM,IAAMlR,GAAiBpO,EAAOnE,MACjDgjB,EAAcld,MACdyd,EACAH,GAI8B,gBAA1BrG,EAAQqG,gBAEZO,EAAMC,kBAAoB,SAAkDhV,GAM3E,OAAO,IAAIrC,GAA4B9N,KAAKolB,MAAOplB,KAAKoQ,OAAQpQ,KAAKqlB,eAAiB,EAAGlV,IAK1F+U,EAAMC,kBAAkBG,2CAA4C,GAIrEhB,EAAO/c,KAAM2d,KAMf,IAAIpgB,OAA6B1B,IAAtBmgB,EAAaze,KAAqBye,EAAaze,KAAO,aAAewe,EAEhF,OAAO,IAAI,IAAexe,OAAM1B,EAAWkhB,OAW7Czf,GAAWlE,UAAUga,SAAW,SAAWR,GAE1C,IAWKrT,EAXD5D,EAAOlD,KAAKkD,KACZP,EAAa3C,KAAK2C,WAClBkE,EAAS7G,KAET6Z,EAAiB3W,EAAK2W,eACtBC,EAAW5W,EAAK4W,SAEhBO,EAAUnX,EAAKsW,MAAOW,GAE1B,OAEKrT,EAAU,QAEQ1D,IAAjBiX,EAAQnF,MAEZpO,EAAQS,KAAMV,EAAOwI,cAAe,OAAQgL,EAAQnF,MAAO5F,MAAM,SAAW4F,GAE3E,IAAI6O,EAEJ,GAAKlK,EAAgBQ,EAAQnF,MAAS,EAAI,CAEzC,IAAIqQ,EAAczL,EAAUO,EAAQnF,SAEpC6O,EAAO7O,EAAKpM,SACPhE,MAAQ,aAAeygB,EAG5BxB,EAAK1D,eAAiBnL,EAAKmL,eAE3B,IAAM,IAAI5c,EAAI,EAAG4I,EAAK0X,EAAKyB,SAAS9hB,OAAQD,EAAI4I,EAAI5I,IAEnDsgB,EAAKyB,SAAU/hB,GAAIqB,MAAQ,aAAeygB,EAC1CxB,EAAKyB,SAAU/hB,GAAI4c,eAAiBnL,EAAKsQ,SAAU/hB,GAAI4c,oBAMxD0D,EAAO7O,EAqBR,YAhByB9R,IAApBiX,EAAQrG,SAEZ+P,EAAKa,UAAU,SAAWa,GAEzB,GAAOA,EAAEZ,OAET,IAAM,IAAIphB,EAAI,EAAG4I,EAAKgO,EAAQrG,QAAQtQ,OAAQD,EAAI4I,EAAI5I,IAErDgiB,EAAErQ,sBAAuB3R,GAAM4W,EAAQrG,QAASvQ,MAQ5CsgB,WAMe3gB,IAAnBiX,EAAQ3N,QAEZ5F,EAAQS,KAAMV,EAAOwI,cAAe,SAAUgL,EAAQ3N,SAIlD2N,EAAQ1X,YACT0X,EAAQ1X,WAAYI,EAAWc,2BACgCT,IAA/DiX,EAAQ1X,WAAYI,EAAWc,qBAAsB6hB,OAExD5e,EAAQS,KAAMV,EAAOwI,cAAe,QAASgL,EAAQ1X,WAAYI,EAAWc,qBAAsB6hB,QAI5Fnf,QAAQkB,IAAKX,IAEfwI,MAAM,SAAWlP,GAEtB,IAAI2jB,EAqBJ,IAhBCA,GAFuB,IAAnB1J,EAAQH,OAEL,IAAI,OAEA9Z,EAAQsD,OAAS,EAErB,IAAI,QAEmB,IAAnBtD,EAAQsD,OAEZtD,EAAS,GAIT,IAAI,cAIEA,EAAS,GAEtB,IAAM,IAAIqD,EAAI,EAAG4I,EAAKjM,EAAQsD,OAAQD,EAAI4I,EAAI5I,IAE7CsgB,EAAKxjB,IAAKH,EAASqD,IAiBrB,QAXsBL,IAAjBiX,EAAQvV,OAEZif,EAAKnP,SAAS9P,KAAOuV,EAAQvV,KAC7Bif,EAAKjf,KAAO,IAAgB6gB,iBAAkBtL,EAAQvV,OAIvDgQ,GAAwBiP,EAAM1J,GAEzBA,EAAQ1X,YAAa8R,GAAgC9R,EAAYohB,EAAM1J,QAEpDjX,IAAnBiX,EAAQhN,OAAuB,CAEnC,IAAIA,EAAS,IAAI,UACjBA,EAAO9H,UAAW8U,EAAQhN,QAC1B0W,EAAK6B,YAAavY,aAIWjK,IAAxBiX,EAAQtG,aAEZgQ,EAAKpe,SAASJ,UAAW8U,EAAQtG,kBAIR3Q,IAArBiX,EAAQzK,UAEZmU,EAAK8B,WAAWtgB,UAAW8U,EAAQzK,eAIbxM,IAAlBiX,EAAQxK,OAEZkU,EAAKlU,MAAMtK,UAAW8U,EAAQxK,OAMhC,OAAOkU,MAWTlf,GAAWlE,UAAU+Z,UAAY,WAIhC,SAASoL,EAAmBC,EAAQC,EAAc9iB,EAAM2D,GAEvD,IAAIwT,EAAUnX,EAAKsW,MAAOuM,GAE1B,OAAOlf,EAAOwI,cAAe,OAAQ0W,GAASzW,MAAM,SAAWyU,GAE9D,YAAsB3gB,IAAjBiX,EAAQC,KAA4ByJ,EAMlCld,EAAOwI,cAAe,OAAQgL,EAAQC,MAAOhL,MAAM,SAAWgL,GAMpE,IAFA,IAAI2L,EAAgB,GAEVxiB,EAAI,EAAG4I,GAJjB+W,EAAY9I,GAIoBL,OAAOvW,OAAQD,EAAI4I,EAAI5I,IAEtDwiB,EAAc1e,KAAMV,EAAOwI,cAAe,OAAQ+T,EAAUnJ,OAAQxW,KAIrE,OAAO8C,QAAQkB,IAAKwe,MAEjB3W,MAAM,SAAW4W,GAuCpB,OArCAnC,EAAKa,UAAU,SAAW1P,GAEzB,GAAOA,EAAK2P,OAAZ,CAKA,IAHA,IAAIsB,EAAQ,GACRC,EAAe,GAETpB,EAAI,EAAGC,EAAKiB,EAAWxiB,OAAQshB,EAAIC,EAAID,IAAO,CAEvD,IAAIqB,EAAYH,EAAYlB,GAE5B,GAAKqB,EAAY,CAEhBF,EAAM5e,KAAM8e,GAEZ,IAAIC,EAAM,IAAI,eAEyBljB,IAAlCggB,EAAUC,qBAEdiD,EAAI/gB,UAAW6d,EAAUC,oBAAoBhc,MAAW,GAAJ2d,GAIrDoB,EAAa7e,KAAM+e,QAInB1kB,QAAQgD,KAAM,mDAAoDwe,EAAUnJ,OAAQ+K,IAMtF9P,EAAKqR,KAAM,IAAI,IAAUJ,EAAOC,GAAgBlR,EAAKsR,iBAI/CzC,KAvDR,IAAIX,KA2DD9T,MAAM,SAAWyU,GAIpBiC,EAAazlB,IAAKwjB,GAElB,IAAIjd,EAAU,GAEd,GAAKuT,EAAQmL,SAIZ,IAFA,IAAIA,EAAWnL,EAAQmL,SAEb/hB,EAAI,EAAG4I,EAAKmZ,EAAS9hB,OAAQD,EAAI4I,EAAI5I,IAAO,CAErD,IAAIgjB,EAAQjB,EAAU/hB,GACtBqD,EAAQS,KAAMue,EAAmBW,EAAO1C,EAAM7gB,EAAM2D,IAMtD,OAAON,QAAQkB,IAAKX,MAMtB,OAAO,SAAoB4f,GAE1B,IAAIxjB,EAAOlD,KAAKkD,KACZP,EAAa3C,KAAK2C,WAClBgkB,EAAW3mB,KAAKkD,KAAKiW,OAAQuN,GAG7Bja,EAAQ,IAAI,aACOrJ,IAAlBujB,EAAS7hB,OAAqB2H,EAAM3H,KAAO6hB,EAAS7hB,MAEzDgQ,GAAwBrI,EAAOka,GAE1BA,EAAShkB,YAAa8R,GAAgC9R,EAAY8J,EAAOka,GAM9E,IAJA,IAAIC,EAAUD,EAASnN,OAAS,GAE5B1S,EAAU,GAEJrD,EAAI,EAAG4I,EAAKua,EAAQljB,OAAQD,EAAI4I,EAAI5I,IAE7CqD,EAAQS,KAAMue,EAAmBc,EAASnjB,GAAKgJ,EAAOvJ,EAf1ClD,OAmBb,OAAOuG,QAAQkB,IAAKX,GAAUwI,MAAM,WAEnC,OAAO7C,MA9HuB,GAsI1B5M,EAvtGS","file":"modules_three-polygonjs-engine-GLTFLoader.js.js","sourcesContent":["import {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Bone} from 'three/src/objects/Bone';\nimport {Box3} from 'three/src/math/Box3';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Color} from 'three/src/math/Color';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {DoubleSide} from 'three/src/constants';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {FrontSide} from 'three/src/constants';\nimport {Group} from 'three/src/objects/Group';\nimport {InterleavedBuffer} from 'three/src/core/InterleavedBuffer';\nimport {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute';\nimport {Interpolant} from 'three/src/math/Interpolant';\nimport {InterpolateDiscrete} from 'three/src/constants';\nimport {InterpolateLinear} from 'three/src/constants';\nimport {Line} from 'three/src/objects/Line';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {LineLoop} from 'three/src/objects/LineLoop';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {LinearFilter} from 'three/src/constants';\nimport {LinearMipmapLinearFilter} from 'three/src/constants';\nimport {LinearMipmapNearestFilter} from 'three/src/constants';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {LoaderUtils} from 'three/src/loaders/LoaderUtils';\nimport {Material} from 'three/src/materials/Material';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\nimport {MirroredRepeatWrapping} from 'three/src/constants';\nimport {NearestFilter} from 'three/src/constants';\nimport {NearestMipmapLinearFilter} from 'three/src/constants';\nimport {NearestMipmapNearestFilter} from 'three/src/constants';\nimport {NumberKeyframeTrack} from 'three/src/animation/tracks/NumberKeyframeTrack';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {PointLight} from 'three/src/lights/PointLight';\nimport {Points} from 'three/src/objects/Points';\nimport {PointsMaterial} from 'three/src/materials/PointsMaterial';\nimport {PropertyBinding} from 'three/src/animation/PropertyBinding';\nimport {QuaternionKeyframeTrack} from 'three/src/animation/tracks/QuaternionKeyframeTrack';\nimport {RGBAFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\nimport {RepeatWrapping} from 'three/src/constants';\nimport {Scene} from 'three/src/scenes/Scene';\nimport {ShaderLib} from 'three/src/renderers/shaders/ShaderLib';\nimport {ShaderMaterial} from 'three/src/materials/ShaderMaterial';\nimport {Skeleton} from 'three/src/objects/Skeleton';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {Sphere} from 'three/src/math/Sphere';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {TriangleFanDrawMode} from 'three/src/constants';\nimport {TriangleStripDrawMode} from 'three/src/constants';\nimport {UniformsUtils} from 'three/src/renderers/shaders/UniformsUtils';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {VectorKeyframeTrack} from 'three/src/animation/tracks/VectorKeyframeTrack';\nimport {VertexColors} from 'three/src/constants';\nimport {_Math} from 'three/src/math/Math';\nimport {sRGBEncoding} from 'three/src/constants';\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tvar shader = ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tmaterialParams.vertexShader = shader.vertexShader;\n\t\t\t\tmaterialParams.fragmentShader = fragmentShader;\n\t\t\t\tmaterialParams.uniforms = uniforms;\n\t\t\t\tmaterialParams.defines = { 'STANDARD': '' };\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {ShaderMaterial} source\n\t\t\t * @return {ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar value = source[ params[ i ] ];\n\t\t\t\t\ttarget[ params[ i ] ] = ( value && value.isColor ) ? value.clone() : value;\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', new BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\tbox.expandByVector( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( _Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"sourceRoot":""}