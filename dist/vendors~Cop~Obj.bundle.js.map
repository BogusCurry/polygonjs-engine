{"version":3,"sources":["webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLAnimation.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLAttributes.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLBackground.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLBufferRenderer.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLCapabilities.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLClipping.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLExtensions.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLGeometries.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLInfo.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLMorphtargets.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLObjects.js","webpack://POLY/./node_modules/three/src/textures/DataTexture2DArray.js","webpack://POLY/./node_modules/three/src/textures/DataTexture3D.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLUniforms.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLShader.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLProgram.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLPrograms.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLProperties.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLRenderLists.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLLights.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLRenderStates.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLShadowMap.js","webpack://POLY/./node_modules/three/src/renderers/shaders/ShaderLib/vsm_vert.glsl.js","webpack://POLY/./node_modules/three/src/renderers/shaders/ShaderLib/vsm_frag.glsl.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLState.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLTextures.js","webpack://POLY/./node_modules/three/src/renderers/webgl/WebGLUtils.js","webpack://POLY/./node_modules/three/src/cameras/ArrayCamera.js","webpack://POLY/./node_modules/three/src/renderers/webxr/WebXRManager.js","webpack://POLY/./node_modules/three/src/renderers/WebGLRenderer.js"],"names":["WebGLAnimation","context","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","start","stop","setAnimationLoop","callback","setContext","value","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","attribute","isInterleavedBufferAttribute","data","remove","deleteBuffer","buffer","delete","update","bufferType","undefined","set","array","usage","createBuffer","bindBuffer","bufferData","onUploadCallback","type","FLOAT","Float32Array","Float64Array","console","warn","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","version","updateRange","count","bufferSubData","offset","subarray","updateBuffer","WebGLBackground","renderer","state","objects","premultipliedAlpha","planeMesh","boxMesh","clearColor","Color","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","color","alpha","r","g","b","getClearColor","setClearColor","getClearAlpha","setClearAlpha","render","renderList","scene","camera","forceClear","background","xr","session","getSession","environmentBlendMode","isColor","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","isWebGLCubeRenderTarget","mapping","Mesh","ShaderMaterial","uniforms","ShaderLib","cube","vertexShader","fragmentShader","side","depthTest","depthWrite","fog","geometry","deleteAttribute","onBeforeRender","this","matrixWorld","copyPosition","Object","defineProperty","material","envMap","texture","flipEnvMap","toneMapping","needsUpdate","unshift","isTexture","t2D","matrixAutoUpdate","updateMatrix","uvTransform","copy","matrix","WebGLBufferRenderer","extensions","info","mode","setMode","drawArrays","renderInstances","primcount","extension","methodName","error","WebGLCapabilities","parameters","maxAnisotropy","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","scope","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","plane","Plane","viewNormalMatrix","Matrix3","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","planes","dstOffset","skipTransform","nPlanes","length","dstArray","flatSize","viewMatrix","matrixWorldInverse","getNormalMatrix","i","i4","applyMatrix4","normal","toArray","constant","init","enableLocalClipping","enabled","beginShadows","endShadows","setState","clipIntersection","clipShadows","cache","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","name","getExtension","WebGLGeometries","attributes","geometries","wireframeAttributes","onGeometryDispose","event","target","buffergeometry","index","removeEventListener","memory","updateWireframeAttribute","indices","geometryIndex","geometryPosition","position","l","a","c","push","ELEMENT_ARRAY_BUFFER","previousAttribute","object","addEventListener","isBufferGeometry","isGeometry","_bufferGeometry","BufferGeometry","setFromObject","geometryAttributes","ARRAY_BUFFER","morphAttributes","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","setIndex","drawElements","WebGLInfo","calls","triangles","points","lines","textures","programs","autoReset","reset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","absNumericalSort","Math","abs","WebGLMorphtargets","influencesList","morphInfluences","program","objectInfluences","morphTargetInfluences","influences","id","morphTargets","morphNormals","influence","sort","morphInfluencesSum","setAttribute","morphBaseInfluence","morphTargetsRelative","getUniforms","setValue","WebGLObjects","updateMap","updateFromObject","isInstancedMesh","instanceMatrix","dispose","DataTexture2DArray","width","height","depth","Texture","call","image","magFilter","minFilter","wrapR","generateMipmaps","flipY","DataTexture3D","prototype","create","constructor","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","CubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","n","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","v","uniform1f","addr","setValueV2f","x","y","uniform2f","uniform2fv","setValueV3f","z","uniform3f","uniform3fv","setValueV4f","w","uniform4f","uniform4fv","setValueM2","elements","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","size","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","map","updateCache","u","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","WebGLShader","string","shader","createShader","shaderSource","compileShader","setOptional","upload","values","seqWithValue","programIdCount","getEncodingComponents","encoding","Error","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","trim","split","join","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","components","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","ShaderChunk","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","end","snippet","parseInt","generatePrecision","precisionstring","WebGLProgram","cacheKey","prefixVertex","prefixFragment","getContext","defines","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","combine","generateEnvMapBlendingDefine","gammaFactorDefine","gammaFactor","customExtensions","extensionDerivatives","envMapCubeUV","bumpMap","tangentSpaceNormalMap","clearcoatNormalMap","flatShading","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","shaderName","instancing","supportsVertexTextures","maxBones","useFog","fogExp2","lightMap","aoMap","emissiveMap","normalMap","objectSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","vertexTangents","vertexColors","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","alphaTest","matcap","sheen","gradientMap","physicallyCorrectLights","dithering","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","isShaderMaterial","cachedUniforms","cachedAttributes","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","index0AttributeName","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","detachShader","deleteShader","getAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","isWebGLRenderTarget","getParameters","lights","shadows","nClipPlanes","nClipIntersection","environment","isMeshStandardMaterial","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","floor","min","allocateBones","shaderobject","UniformsUtils","clone","getShaderObject","onBeforeCompile","currentRenderTarget","getRenderTarget","normalMapType","isFogExp2","maxMorphTargets","maxMorphNormals","directional","point","spot","rectArea","hemi","directionalShadowMap","pointShadowMap","spotShadowMap","shadowMap","toneMapped","derivatives","fragDepth","drawBuffers","shaderTextureLOD","getProgramCacheKey","toString","acquireProgram","p","pl","preexistingProgram","releaseProgram","indexOf","pop","WebGLProperties","properties","key","painterSortStable","groupOrder","renderOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transparent","defaultProgram","getNextRenderItem","group","renderItem","finish","il","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","onSceneDispose","list","cameras","UniformsCache","light","direction","Vector3","distance","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","castShadow","WebGLLights","shadowCache","shadowBias","shadowRadius","shadowMapSize","Vector2","shadowCameraNear","shadowCameraFar","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","directionalShadowMatrix","spotShadow","spotShadowMatrix","pointShadow","pointShadowMatrix","vector3","matrix4","Matrix4","matrix42","setup","intensity","shadow","isAmbientLight","isLightProbe","j","addScaledVector","sh","coefficients","isDirectionalLight","multiplyScalar","setFromMatrixPosition","sub","transformDirection","shadowUniforms","bias","radius","mapSize","isSpotLight","cos","angle","penumbra","isRectAreaLight","identity","premultiply","extractRotation","isPointLight","near","far","isHemisphereLight","normalize","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","has","WebGLShadowMap","_renderer","_objects","_frustum","Frustum","_shadowMapSize","_viewportSize","_viewport","Vector4","_depthMaterials","_distanceMaterials","_materialCache","shadowSide","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","BufferAttribute","fullScreenMesh","VSMPass","setRenderTarget","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","clippingPlanes","keyA","uuid","keyB","materialsForVariant","cachedMaterial","visible","wireframe","wireframeLinewidth","linewidth","isMeshDistanceMaterial","referencePosition","nearDistance","farDistance","renderObject","shadowCamera","layers","test","isMesh","isLine","isPoints","receiveShadow","frustumCulled","intersectsObject","modelViewMatrix","multiplyMatrices","Array","isArray","groups","k","kl","groupMaterial","materialIndex","depthMaterial","children","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","multiply","isPointLightShadow","pars","format","WebGLRenderTarget","updateProjectionMatrix","viewportCount","getViewportCount","vp","viewport","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","equals","depthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","depthFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","stencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","parseFloat","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","BLEND","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","POLYGON_OFFSET_FILL","activeTexture","webglSlot","TEXTURE0","initAttributes","enableAttribute","disableUnusedAttributes","disableVertexAttribArray","useProgram","setMaterial","frontFaceCW","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","setLineWidth","lineWidth","scissorTest","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","texImage3D","scissor","WebGLTextures","_gl","utils","_canvas","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","document","createElementNS","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","scale","max","HTMLImageElement","HTMLCanvasElement","ImageBitmap","MathUtils","floorPowerOfTwo","canvas","drawImage","isPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","internalFormatName","glFormat","glType","internalFormat","RED","R32F","HALF_FLOAT","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","f","LINEAR","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","renderTargetProperties","depthTexture","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","isDataTexture","cubeImage","mipmaps","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","onUpdate","setTextureCubeDynamic","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","textureType","TEXTURE_WRAP_S","wrapS","TEXTURE_WRAP_T","wrapT","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","anisotropy","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","UNPACK_ALIGNMENT","unpackAlignment","textureNeedsPowerOfTwo","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","samples","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","isWebGLMultisampleRenderTarget","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","updateMultisampleRenderTarget","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","mask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","WebGLUtils","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","PerspectiveCamera","assign","isArrayCamera","WebXRManager","framebufferScaleFactor","referenceSpace","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","inputSource","targetRay","dispatchEvent","grip","onSessionEnd","forEach","setFramebuffer","animation","isPresenting","onRequestReferenceSpace","updateInputSources","inputSources","removed","added","getController","Group","getControllerGrip","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","then","cameraLPos","cameraRPos","updateCamera","parent","getInverse","getCamera","depthNear","depthFar","updateMatrixWorld","ipd","distanceTo","projL","projectionMatrix","projR","topFov","bottomFov","leftFov","rightFov","left","right","zOffset","xOffset","decompose","quaternion","translateX","translateZ","compose","near2","far2","left2","right2","top2","bottom2","makePerspective","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","view","fromArray","transform","inputPose","gripPose","getPose","targetRaySpace","rotation","gripSpace","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","getTargetPixelRatio","contextAttributes","xrCompatible","onContextLost","onContextRestore","message","initGLContext","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","style","setViewport","getDrawingBufferSize","setDrawingBufferSize","pixelRatio","getCurrentViewport","isVector4","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","uv","hasColors","programAttributes","positionArray","DYNAMIC_DRAW","vertexAttribPointer","normalArray","uvArray","colorArray","tempScene","Scene","determinant","setProgram","updateBuffers","rangeFactor","isInstancedBufferGeometry","materialDefaultAttributeValues","defaultAttributeValues","programAttribute","geometryAttribute","normalized","itemSize","stride","isInstancedInterleavedBuffer","maxInstancedCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dataCount","rangeStart","drawRange","rangeCount","groupStart","groupCount","Infinity","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","traverse","isLight","compiled","initMaterial","projectObject","isGroup","isLOD","intersectsSprite","isImmediateRenderObject","renderObjects","overrideMaterial","jl","camera2","normalMatrix","renderObjectImmediate","onAfterRender","materialProperties","lightsStateVersion","programCacheKey","programChange","numSupportedMorphTargets","numSupportedMorphNormals","clipping","needsLights","isMeshLambertMaterial","isMeshToonMaterial","isMeshPhongMaterial","isShadowMaterial","materialNeedsLights","ambientLightColor","lightProbe","directionalLights","directionalLightShadows","spotLights","spotLightShadows","rectAreaLights","pointLights","pointLightShadows","hemisphereLights","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","uCamPos","cameraPosition","isMeshBasicMaterial","isOrthographicCamera","boneTexture","sqrt","ceilPowerOfTwo","boneMatrices","DataTexture","boneTextureSize","fogColor","isFog","fogNear","fogFar","fogDensity","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","specular","shininess","bumpScale","normalScale","negate","displacementScale","displacementBias","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsStandard","reflectivity","clearcoat","clearcoatRoughness","clearcoatNormalScale","transparency","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","isMeshDepthMaterial","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","diffuse","opacity","refreshUniformsLine","isLineDashedMaterial","dashSize","totalSize","gapSize","refreshUniformsDash","isPointsMaterial","uvScaleMap","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","ltc_1","UniformsLib","LTC_1","ltc_2","LTC_2","uniformsNeedUpdate","center","emissive","emissiveIntensity","uv2ScaleMap","refractionRatio","maxMipLevel","lightMapIntensity","aoMapIntensity","uv2Transform","roughness","metalness","envMapIntensity","window","isCamera","setFromProjectionMatrix","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","pow","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","__THREE_DEVTOOLS__","CustomEvent","detail","EventDispatcher"],"mappings":"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","file":"vendors~Cop~Obj.bundle.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nexport { WebGLAnimation };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.usage;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLAttributes };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { BackSide, FrontSide, CubeUVReflectionMapping } from '../../constants.js';\nimport { BoxBufferGeometry } from '../../geometries/BoxGeometry.js';\nimport { PlaneBufferGeometry } from '../../geometries/PlaneGeometry.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { Color } from '../../math/Color.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { cloneUniforms } from '../shaders/UniformsUtils.js';\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\tvar currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar xr = renderer.xr;\n\t\tvar session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLCubeRenderTarget ? background.texture : background;\n\n\t\t\tboxMesh.material.uniforms.envMap.value = texture;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== texture.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n\nexport { WebGLBackground };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tvar extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLBufferRenderer };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n","/**\n * @author tschw\n */\n\nimport { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n\nexport { WebGLClipping };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n\nexport { WebGLExtensions };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { arrayMax } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = new WeakMap();\n\tvar wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries.delete( geometry );\n\n\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries.set( geometry, buffergeometry );\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryPosition = geometry.attributes.position;\n\t\tvar version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t//\n\n\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tvar extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n\nexport { WebGLInfo };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tvar length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.deleteAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tvar morphInfluencesSum = 0;\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tvar updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n\nexport { WebGLObjects };\n","/**\n * @author Takahiro https://github.com/takahirox\n */\n\nimport { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nexport { DataTexture2DArray };\n","/**\n * @author Artur Trzesiok\n */\n\nimport { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\nexport { DataTexture3D };\n","/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataTexture2DArray } from '../../textures/DataTexture2DArray.js';\nimport { DataTexture3D } from '../../textures/DataTexture3D.js';\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// uint\n\nfunction setValueV1ui( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nexport { WebGLUniforms };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nexport { WebGLShader };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, EquirectangularRefractionMapping, CubeRefractionMapping, SphericalReflectionMapping, EquirectangularReflectionMapping, CubeUVRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, Uncharted2ToneMapping, ReinhardToneMapping, LinearToneMapping, GammaEncoding, RGBDEncoding, RGBM16Encoding, RGBM7Encoding, RGBEEncoding, sRGBEncoding, LinearEncoding, LogLuvEncoding } from '../../constants.js';\n\nvar programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tvar status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tvar source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tvar chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tvar string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nvar deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nvar unrollLoopPattern = /#pragma unroll_loop_start[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}[\\s]+?#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tvar string = '';\n\n\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tvar precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\tif ( parameters.precision === \"highp\" ) {\n\n\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters ) {\n\n\tvar gl = renderer.getContext();\n\n\tvar defines = parameters.defines;\n\n\tvar vertexShader = parameters.vertexShader;\n\tvar fragmentShader = parameters.fragmentShader;\n\tvar shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tvar envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tvar envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tvar envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tvar customDefines = generateDefines( defines );\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding || parameters.lightMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMapEncoding ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && ! parameters.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( parameters.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// clean up\n\n\tgl.detachShader( program, glVertexShader );\n\tgl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { BackSide, DoubleSide, CubeUVRefractionMapping, CubeUVReflectionMapping, LinearEncoding, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping } from '../../constants.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\tvar precision = capabilities.precision;\n\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\tvar vertexTextures = capabilities.vertexTextures;\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\",\n\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\"lightMap\", \"lightMapEncoding\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatMap\", \"clearcoatRoughnessMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\"sheen\"\n\t];\n\n\tfunction getShaderObject( material, shaderID ) {\n\n\t\tvar shaderobject;\n\n\t\tif ( shaderID ) {\n\n\t\t\tvar shader = ShaderLib[ shaderID ];\n\n\t\t\tshaderobject = {\n\t\t\t\tname: material.type,\n\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tshaderobject = {\n\t\t\t\tname: material.type,\n\t\t\t\tuniforms: material.uniforms,\n\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t};\n\n\t\t}\n\n\t\treturn shaderobject;\n\n\t}\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, scene, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar fog = scene.fog;\n\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tvar envMap = material.envMap || environment;\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar shaderobject = getShaderObject( material, shaderID );\n\t\tmaterial.onBeforeCompile( shaderobject, renderer );\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: shaderobject.name,\n\n\t\t\tuniforms: shaderobject.uniforms,\n\t\t\tvertexShader: shaderobject.vertexShader,\n\t\t\tfragmentShader: shaderobject.fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial,\n\t\t\tisShaderMaterial: material.isShaderMaterial,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.get( 'EXT_frag_depth' ) !== null,\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.get( 'WEBGL_draw_buffers' ) !== null,\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) !== null,\n\n\t\t\tonBeforeCompile: material.onBeforeCompile\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCacheKey = function ( parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( var name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === undefined ) {\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.onBeforeCompile.toString() );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( parameters, cacheKey ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n\nexport { WebGLPrograms };\n","/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLProperties };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( var i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tvar renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tlists.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists.get( scene );\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, new WeakMap() );\n\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras.get( camera );\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras.set( camera, list );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderLists };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nvar nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar shadowCache = ShadowUniformsCache();\n\n\tvar state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( var i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar numDirectionalShadows = 0;\n\t\tvar numPointShadows = 0;\n\t\tvar numSpotShadows = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tvar shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tvar shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tvar shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tvar hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nimport { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\trenderStates.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { FrontSide, BackSide, DoubleSide, RGBAFormat, NearestFilter, LinearFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Frustum } from '../../math/Frustum.js';\n\nimport vsm_frag from '../shaders/ShaderLib/vsm_frag.glsl.js';\nimport vsm_vert from '../shaders/ShaderLib/vsm_vert.glsl.js';\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\tvar fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t\"position\",\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has shadow exceeding max texture size, reducing' );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizonal pass\n\n\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tvar material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tvar material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tif ( geometry.isBufferGeometry === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry.isGeometry === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { WebGLShadowMap };\n","export default /* glsl */`\n\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n\n`;\n","export default /* glsl */`\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\n    #ifdef HORIZONAL_PASS\n\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n    #else\n\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n\n    #endif\n\n  }\n\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n\n  float std_dev = sqrt( squared_mean - mean * mean );\n\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n`;\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tvar equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tvar extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tvar factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tvar stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBFormat, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedShortType, UnsignedIntType, UnsignedInt248Type, FloatType, HalfFloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping } from '../../constants.js';\nimport { MathUtils } from '../../math/MathUtils.js';\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\tvar maxTextures = capabilities.maxTextures;\n\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\tvar maxTextureSize = capabilities.maxTextureSize;\n\tvar maxSamples = capabilities.maxSamples;\n\n\tvar _videoTextures = new WeakMap();\n\tvar _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tvar useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\tvar isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tvar cubeImage = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tvar mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tvar mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t} else {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tvar wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tvar filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isDataTexture3D ) textureType = _gl.TEXTURE_3D;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tvar glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {\n\n\t\t\trenderTarget.texture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLCubeRenderTarget\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nexport { WebGLTextures };\n","/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nimport { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, RGBFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort565Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, RGBA_BPTC_Format } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBIntegerFormat ) return gl.RGB_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n\nexport { ArrayCamera };\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nimport { ArrayCamera } from '../../cameras/ArrayCamera.js';\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { Group } from '../../objects/Group.js';\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\n\nfunction WebXRManager( renderer, gl ) {\n\n\tvar scope = this;\n\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar referenceSpace = null;\n\tvar referenceSpaceType = 'local-floor';\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSourcesMap = new Map();\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tvar _currentDepthNear = null;\n\tvar _currentDepthFar = null;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.isPresenting = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = {};\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\tif ( controller.targetRay === undefined ) {\n\n\t\t\tcontroller.targetRay = new Group();\n\t\t\tcontroller.targetRay.matrixAutoUpdate = false;\n\t\t\tcontroller.targetRay.visible = false;\n\n\t\t}\n\n\t\treturn controller.targetRay;\n\n\t};\n\n\tthis.getControllerGrip = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = {};\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\tif ( controller.grip === undefined ) {\n\n\t\t\tcontroller.grip = new Group();\n\t\t\tcontroller.grip.matrixAutoUpdate = false;\n\t\t\tcontroller.grip.visible = false;\n\n\t\t}\n\n\t\treturn controller.grip;\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = inputSourcesMap.get( event.inputSource );\n\n\t\tif ( controller ) {\n\n\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\tcontroller.targetRay.dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t\tif ( controller.grip ) {\n\n\t\t\t\tcontroller.grip.dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\tcontroller.targetRay.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tcontroller.targetRay.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( controller.grip ) {\n\n\t\t\t\tcontroller.grip.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\tcontroller.grip.visible = false;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tinputSourcesMap.clear();\n\n\t\t//\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.isPresenting = false;\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.isPresenting = true;\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t\t// Warn if function is used while presenting\n\t\tif ( scope.isPresenting == true ) {\n\n\t\t\tconsole.warn( \"WebXRManager: Cannot change framebuffer scale while presenting VR content\" );\n\n\t\t}\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.getReferenceSpace = function () {\n\n\t\treturn referenceSpace;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tvar attributes = gl.getContextAttributes();\n\n\t\t\tvar layerInit = {\n\t\t\t\tantialias: attributes.antialias,\n\t\t\t\talpha: attributes.alpha,\n\t\t\t\tdepth: attributes.depth,\n\t\t\t\tstencil: attributes.stencil,\n\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tvar baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t}\n\n\t};\n\n\tfunction updateInputSources( event ) {\n\n\t\tvar inputSources = session.inputSources;\n\n\t\t// Assign inputSources to available controllers\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t}\n\n\t\t// Notify disconnected\n\n\t\tfor ( var i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\tvar inputSource = event.removed[ i ];\n\t\t\tvar controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\t\tcontroller.targetRay.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t\tif ( controller.grip ) {\n\n\t\t\t\t\tcontroller.grip.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Notify connected\n\n\t\tfor ( var i = 0; i < event.added.length; i ++ ) {\n\n\t\t\tvar inputSource = event.added[ i ];\n\t\t\tvar controller = inputSourcesMap.get( inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\t\tcontroller.targetRay.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t\tif ( controller.grip ) {\n\n\t\t\t\t\tcontroller.grip.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar cameraLPos = new Vector3();\n\tvar cameraRPos = new Vector3();\n\n\t/**\n\t * @author jsantell / https://www.jsantell.com/\n\t *\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\tvar projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tvar left = near * leftFov;\n\t\tvar right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tvar zOffset = ipd / ( - leftFov + rightFov );\n\t\tvar xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tvar near2 = near + zOffset;\n\t\tvar far2 = far + zOffset;\n\t\tvar left2 = left - xOffset;\n\t\tvar right2 = right + ( ipd - xOffset );\n\t\tvar top2 = topFov * far / far2 * near2;\n\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\tsession.updateRenderState( {\n\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\tdepthFar: cameraVR.far\n\t\t\t} );\n\n\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t}\n\n\t\tvar parent = camera.parent;\n\t\tvar cameras = cameraVR.cameras;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\n\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\tvar children = camera.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\treturn cameraVR;\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar views = pose.views;\n\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar inputSources = session.inputSources;\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tvar inputPose = null;\n\t\t\tvar gripPose = null;\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\tcontroller.targetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\tcontroller.targetRay.matrix.decompose( controller.targetRay.position, controller.targetRay.rotation, controller.targetRay.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( controller.grip && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tcontroller.grip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tcontroller.grip.matrix.decompose( controller.grip.position, controller.grip.rotation, controller.grip.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( controller.targetRay ) {\n\n\t\t\t\tcontroller.targetRay.visible = inputPose !== null;\n\n\t\t\t}\n\n\t\t\tif ( controller.grip ) {\n\n\t\t\t\tcontroller.grip.visible = gripPose !== null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\nexport { WebXRManager };\n","/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nimport {\n\tRGBAFormat,\n\tHalfFloatType,\n\tFloatType,\n\tUnsignedByteType,\n\tLinearEncoding,\n\tLinearToneMapping,\n\tBackSide\n} from '../constants.js';\nimport { MathUtils } from '../math/MathUtils.js';\nimport { DataTexture } from '../textures/DataTexture.js';\nimport { Frustum } from '../math/Frustum.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { UniformsLib } from './shaders/UniformsLib.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Scene } from '../scenes/Scene.js';\nimport { WebGLAnimation } from './webgl/WebGLAnimation.js';\nimport { WebGLAttributes } from './webgl/WebGLAttributes.js';\nimport { WebGLBackground } from './webgl/WebGLBackground.js';\nimport { WebGLBufferRenderer } from './webgl/WebGLBufferRenderer.js';\nimport { WebGLCapabilities } from './webgl/WebGLCapabilities.js';\nimport { WebGLClipping } from './webgl/WebGLClipping.js';\nimport { WebGLExtensions } from './webgl/WebGLExtensions.js';\nimport { WebGLGeometries } from './webgl/WebGLGeometries.js';\nimport { WebGLIndexedBufferRenderer } from './webgl/WebGLIndexedBufferRenderer.js';\nimport { WebGLInfo } from './webgl/WebGLInfo.js';\nimport { WebGLMorphtargets } from './webgl/WebGLMorphtargets.js';\nimport { WebGLObjects } from './webgl/WebGLObjects.js';\nimport { WebGLPrograms } from './webgl/WebGLPrograms.js';\nimport { WebGLProperties } from './webgl/WebGLProperties.js';\nimport { WebGLRenderLists } from './webgl/WebGLRenderLists.js';\nimport { WebGLRenderStates } from './webgl/WebGLRenderStates.js';\nimport { WebGLShadowMap } from './webgl/WebGLShadowMap.js';\nimport { WebGLState } from './webgl/WebGLState.js';\nimport { WebGLTextures } from './webgl/WebGLTextures.js';\nimport { WebGLUniforms } from './webgl/WebGLUniforms.js';\nimport { WebGLUtils } from './webgl/WebGLUtils.js';\nimport { WebXRManager } from './webxr/WebXRManager.js';\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentActiveCubeFace = 0,\n\t\t_currentActiveMipmapLevel = 0,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\t\t_opaqueSort = null,\n\t\t_transparentSort = null,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\txrCompatible: true\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tvar xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\txr.dispose();\n\n\t\tanimation.stop();\n\n\t\tthis.forceContextLoss();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tvar tempScene = new Scene();\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = tempScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, geometry, material, program );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( object, geometry, material, program ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tvar attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tvar compiled = {};\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tif ( object.material[ i ].uuid in compiled === false ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene, object );\n\t\t\t\t\t\t\tcompiled[ object.material[ i ].uuid ] = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.material.uuid in compiled === false ) {\n\n\t\t\t\t\tinitMaterial( object.material, scene, object );\n\t\t\t\t\tcompiled[ object.material.uuid ] = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( xr.isPresenting ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled && xr.isPresenting ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, scene, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsStateVersion = lights.state.version;\n\n\t\tvar parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, _clipping.numPlanes, _clipping.numIntersection, object );\n\t\tvar programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.outputEncoding = _this.outputEncoding;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = scene.fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar fog = scene.fog;\n\t\tvar environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.environment !== environment ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t} else if ( materialProperties.outputEncoding !== _this.outputEncoding ) {\n\n\t\t\t\tinitMaterial( material, scene, object );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tinitMaterial( material, scene, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = MathUtils.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material, environment );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material, environment );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material, environment );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material, environment ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tvar envMap = material.envMap || environment;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tvar uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material, environment ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap || environment ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, environment ) {\n\n\t\trefreshUniformsStandard( uniforms, material, environment );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transparency.value = material.transparency;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( _gl.FRAMEBUFFER, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tif ( level === undefined ) level = 0;\n\n\t\tvar levelScale = Math.pow( 2, - level );\n\t\tvar width = Math.floor( texture.image.width * levelScale );\n\t\tvar height = Math.floor( texture.image.height * levelScale );\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nexport { WebGLRenderer };\n"],"sourceRoot":""}