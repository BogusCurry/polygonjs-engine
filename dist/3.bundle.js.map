{"version":3,"sources":["webpack://POLY/./modules/three/examples/jsm/libs/inflate.module.min.js","webpack://POLY/./node_modules/three/src/objects/Skeleton.js","webpack://POLY/./modules/three/examples/jsm/curves/NURBSUtils.js","webpack://POLY/./modules/three/examples/jsm/curves/NURBSCurve.js","webpack://POLY/./modules/three/examples/jsm/loaders/FBXLoader.js"],"names":["mod","l","aa","r","c","d","e","a","split","b","execScript","length","shift","t","Uint8Array","Uint16Array","Uint32Array","DataView","v","f","g","h","k","m","n","p","s","x","Number","POSITIVE_INFINITY","Array","w","this","input","i","y","index","bufferSize","bufferType","resize","A","z","j","Error","B","prototype","C","set","subarray","ba","ca","S","T","U","V","D","u","M","F","q","E","slice","P","fa","G","H","I","J","K","L","da","ea","N","O","R","ga","Q","W","verify","ha","method","o","push","buffer","charCodeAt","Y","Z","$","ia","X","ADAPTIVE","BLOCK","Object","keys","Zlib","_offsetMatrix","_identityMatrix","Skeleton","bones","boneInverses","boneMatrices","Float32Array","frame","undefined","calculateInverses","console","warn","il","assign","inverse","getInverse","matrixWorld","pose","bone","parent","isBone","matrix","multiply","copy","decompose","position","quaternion","scale","update","boneTexture","multiplyMatrices","toArray","needsUpdate","clone","getBoneByName","name","dispose","NURBSUtils","findSpan","low","high","mid","Math","floor","calcBasisFunctions","span","left","right","saved","rv","lv","temp","calcBSplinePoint","Vector4","point","Nj","wNj","calcBasisFunctionDerivatives","zeroArr","ders","ndu","s1","s2","rk","pk","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","multiplyScalar","add","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","Vector3","sub","divideScalar","calcNURBSDerivatives","calcSurfacePoint","target","uspan","vspan","Nu","Nv","Sw","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","Curve","call","create","constructor","getPoint","hpoint","getTangent","tangent","normalize","fbxTree","connections","sceneGraph","FBXLoader","manager","Loader","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","littleEndian","dv","offset","FBXTree","getFbxVersion","text","match","parseInt","convertFBXTimeToSeconds","time","load","url","onLoad","onProgress","onError","self","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","parse","error","setTimeout","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","FBXText","cursor","result","isFbxFormatASCII","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","Map","Connections","forEach","rawConnection","fromID","toID","relationship","has","parents","children","parentRelationship","ID","get","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","filename","pop","type","content","fileName","extension","lastIndexOf","toLowerCase","getHandler","array","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","wrapT","values","Scaling","repeat","currentPath","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","color","Color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","displacementMap","emissiveMap","normalMap","envMap","mapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","transform","generateTransform","applyMatrix4","animations","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","sanitizeNodeName","getTransformData","subBone","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","PointLight","DirectionalLight","angle","PI","InnerAngle","MathUtils","degToRad","penumbra","OuterAngle","max","SpotLight","CastShadows","castShadow","geometry","attributes","vertexColors","FBX_Deformer","skinning","SkinnedMesh","normalizeSkinWeights","Mesh","reduce","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","lookAt","bindMatrices","parsePoseNodes","geoConnParent","bind","BindPoseNode","Pose","poseNodes","PoseNode","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","AmbientLight","isMesh","morphAttributes","setupMorphMaterial","uuid","matUuid","sharedMat","mat","clonedMat","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","vertex","setAttribute","colors","weightsIndices","vertexWeights","normal","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","parseUVs","weightTable","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","KnotVector","pointsValues","Points","Form","vertices","getPoints","positions","BufferAttribute","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","modelName","rawModel","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","AnimationClip","Quaternion","Euler","setFromQuaternion","positionTrack","generateVectorTrack","rotationTrack","generateRotationTrack","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","euler","quaternionValues","premultiply","QuaternionKeyframeTrack","val","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","sort","elem","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curve","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","from","to","rest","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","skip","version","getUint32","log","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","reader2","Inflate","decompress","nullByte","decodeText","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lLSM","lParentGSM","lParentGRSM","lGlobalRS","lParentTM","copyPosition","lParentLSM","lParentGSM_noLocal","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2"],"mappings":"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","file":"3.bundle.js","sourcesContent":["/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\n}}var A=0,y=1,B={t:A,s:y};\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\nvar Zlib=mod.Zlib;\nexport { Zlib }","import { Matrix4 } from '../math/Matrix4.js';\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nvar _offsetMatrix = new Matrix4();\nvar _identityMatrix = new Matrix4();\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\tthis.frame = - 1;\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function () {\n\n\t\tvar bones = this.bones;\n\t\tvar boneInverses = this.boneInverses;\n\t\tvar boneMatrices = this.boneMatrices;\n\t\tvar boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== undefined ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tdispose: function ( ) {\n\n\t\tif ( this.boneTexture ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = undefined;\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport { Skeleton };\n","import {Vector3} from 'three/src/math/Vector3';\nimport {Vector4} from 'three/src/math/Vector4';\n/**\n * @author renej\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n *\n **/\n\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\nvar NURBSUtils = {\n\n\t/*\n\tFinds knot vector span.\n\n\tp : degree\n\tu : parametric value\n\tU : knot vector\n\n\treturns the span\n\t*/\n\tfindSpan: function ( p, u, U ) {\n\n\t\tvar n = U.length - p - 1;\n\n\t\tif ( u >= U[ n ] ) {\n\n\t\t\treturn n - 1;\n\n\t\t}\n\n\t\tif ( u <= U[ p ] ) {\n\n\t\t\treturn p;\n\n\t\t}\n\n\t\tvar low = p;\n\t\tvar high = n;\n\t\tvar mid = Math.floor( ( low + high ) / 2 );\n\n\t\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\t\tif ( u < U[ mid ] ) {\n\n\t\t\t\thigh = mid;\n\n\t\t\t} else {\n\n\t\t\t\tlow = mid;\n\n\t\t\t}\n\n\t\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t\t}\n\n\t\treturn mid;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tU    : knot vector\n\n\treturns array[p+1] with basis functions values.\n\t*/\n\tcalcBasisFunctions: function ( span, u, p, U ) {\n\n\t\tvar N = [];\n\t\tvar left = [];\n\t\tvar right = [];\n\t\tN[ 0 ] = 1.0;\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tvar temp = N[ r ] / ( rv + lv );\n\t\t\t\tN[ r ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t }\n\n\t\t\t N[ j ] = saved;\n\n\t\t }\n\n\t\t return N;\n\n\t},\n\n\n\t/*\n\tCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\n\tp : degree of B-Spline\n\tU : knot vector\n\tP : control points (x, y, z, w)\n\tu : parametric point\n\n\treturns point for given u\n\t*/\n\tcalcBSplinePoint: function ( p, U, P, u ) {\n\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar N = this.calcBasisFunctions( span, u, p, U );\n\t\tvar C = new Vector4( 0, 0, 0, 0 );\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tvar point = P[ span - p + j ];\n\t\t\tvar Nj = N[ j ];\n\t\t\tvar wNj = point.w * Nj;\n\t\t\tC.x += point.x * wNj;\n\t\t\tC.y += point.y * wNj;\n\t\t\tC.z += point.z * wNj;\n\t\t\tC.w += point.w * Nj;\n\n\t\t}\n\n\t\treturn C;\n\n\t},\n\n\n\t/*\n\tCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\n\tspan : span in which u lies\n\tu    : parametric point\n\tp    : degree\n\tn    : number of derivatives to calculate\n\tU    : knot vector\n\n\treturns array[n+1][p+1] with basis functions derivatives\n\t*/\n\tcalcBasisFunctionDerivatives: function ( span, u, p, n, U ) {\n\n\t\tvar zeroArr = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tzeroArr[ i ] = 0.0;\n\n\t\tvar ders = [];\n\t\tfor ( var i = 0; i <= n; ++ i )\n\t\t\tders[ i ] = zeroArr.slice( 0 );\n\n\t\tvar ndu = [];\n\t\tfor ( var i = 0; i <= p; ++ i )\n\t\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\t\tndu[ 0 ][ 0 ] = 1.0;\n\n\t\tvar left = zeroArr.slice( 0 );\n\t\tvar right = zeroArr.slice( 0 );\n\n\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\t\tright[ j ] = U[ span + j ] - u;\n\n\t\t\tvar saved = 0.0;\n\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\n\n\t\t\t\tvar rv = right[ r + 1 ];\n\t\t\t\tvar lv = left[ j - r ];\n\t\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\t\tvar temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\t\tsaved = lv * temp;\n\n\t\t\t}\n\n\t\t\tndu[ j ][ j ] = saved;\n\n\t\t}\n\n\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t\t}\n\n\t\tfor ( var r = 0; r <= p; ++ r ) {\n\n\t\t\tvar s1 = 0;\n\t\t\tvar s2 = 1;\n\n\t\t\tvar a = [];\n\t\t\tfor ( var i = 0; i <= p; ++ i ) {\n\n\t\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t\t}\n\t\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\t\tvar d = 0.0;\n\t\t\t\tvar rk = r - k;\n\t\t\t\tvar pk = p - k;\n\n\t\t\t\tif ( r >= k ) {\n\n\t\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tvar j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\t\tvar j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\t\tfor ( var j = j1; j <= j2; ++ j ) {\n\n\t\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( r <= pk ) {\n\n\t\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t\t}\n\n\t\t\t\tders[ k ][ r ] = d;\n\n\t\t\t\tvar j = s1;\n\t\t\t\ts1 = s2;\n\t\t\t\ts2 = j;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar r = p;\n\n\t\tfor ( var k = 1; k <= n; ++ k ) {\n\n\t\t\tfor ( var j = 0; j <= p; ++ j ) {\n\n\t\t\t\tders[ k ][ j ] *= r;\n\n\t\t\t}\n\t\t\tr *= p - k;\n\n\t\t}\n\n\t\treturn ders;\n\n\t},\n\n\n\t/*\n\t\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\t\tp  : degree\n\t\tU  : knot vector\n\t\tP  : control points\n\t\tu  : Parametric points\n\t\tnd : number of derivatives\n\n\t\treturns array[d+1] with derivatives\n\t\t*/\n\tcalcBSplineDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar du = nd < p ? nd : p;\n\t\tvar CK = [];\n\t\tvar span = this.findSpan( p, u, U );\n\t\tvar nders = this.calcBasisFunctionDerivatives( span, u, p, du, U );\n\t\tvar Pw = [];\n\n\t\tfor ( var i = 0; i < P.length; ++ i ) {\n\n\t\t\tvar point = P[ i ].clone();\n\t\t\tvar w = point.w;\n\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\n\t\t\tPw[ i ] = point;\n\n\t\t}\n\t\tfor ( var k = 0; k <= du; ++ k ) {\n\n\t\t\tvar point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\t\tfor ( var j = 1; j <= p; ++ j ) {\n\n\t\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = point;\n\n\t\t}\n\n\t\tfor ( var k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate \"K over I\"\n\n\treturns k!/(i!(k-i)!)\n\t*/\n\tcalcKoverI: function ( k, i ) {\n\n\t\tvar nom = 1;\n\n\t\tfor ( var j = 2; j <= k; ++ j ) {\n\n\t\t\tnom *= j;\n\n\t\t}\n\n\t\tvar denom = 1;\n\n\t\tfor ( var j = 2; j <= i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\tfor ( var j = 2; j <= k - i; ++ j ) {\n\n\t\t\tdenom *= j;\n\n\t\t}\n\n\t\treturn nom / denom;\n\n\t},\n\n\n\t/*\n\tCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\n\tPders : result of function calcBSplineDerivatives\n\n\treturns array with derivatives for rational curve.\n\t*/\n\tcalcRationalCurveDerivatives: function ( Pders ) {\n\n\t\tvar nd = Pders.length;\n\t\tvar Aders = [];\n\t\tvar wders = [];\n\n\t\tfor ( var i = 0; i < nd; ++ i ) {\n\n\t\t\tvar point = Pders[ i ];\n\t\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\t\twders[ i ] = point.w;\n\n\t\t}\n\n\t\tvar CK = [];\n\n\t\tfor ( var k = 0; k < nd; ++ k ) {\n\n\t\t\tvar v = Aders[ k ].clone();\n\n\t\t\tfor ( var i = 1; i <= k; ++ i ) {\n\n\t\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( this.calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t\t}\n\n\t\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t\t}\n\n\t\treturn CK;\n\n\t},\n\n\n\t/*\n\tCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points in homogeneous space\n\tu  : parametric points\n\tnd : number of derivatives\n\n\treturns array with derivatives.\n\t*/\n\tcalcNURBSDerivatives: function ( p, U, P, u, nd ) {\n\n\t\tvar Pders = this.calcBSplineDerivatives( p, U, P, u, nd );\n\t\treturn this.calcRationalCurveDerivatives( Pders );\n\n\t},\n\n\n\t/*\n\tCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\n\tp1, p2 : degrees of B-Spline surface\n\tU1, U2 : knot vectors\n\tP      : control points (x, y, z, w)\n\tu, v   : parametric values\n\n\treturns point for given (u, v)\n\t*/\n\tcalcSurfacePoint: function ( p, q, U, V, P, u, v, target ) {\n\n\t\tvar uspan = this.findSpan( p, u, U );\n\t\tvar vspan = this.findSpan( q, v, V );\n\t\tvar Nu = this.calcBasisFunctions( uspan, u, p, U );\n\t\tvar Nv = this.calcBasisFunctions( vspan, v, q, V );\n\t\tvar temp = [];\n\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( var k = 0; k <= p; ++ k ) {\n\n\t\t\t\tvar point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\t\tvar w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar Sw = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( var l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\n\t\tSw.divideScalar( Sw.w );\n\t\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n\t}\n\n};\n\nexport { NURBSUtils };\n","import {Curve} from 'three/src/extras/core/Curve';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector4} from 'three/src/math/Vector4';\n/**\n * @author renej\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n\n\n/**************************************************************\n *\tNURBS curve\n **************************************************************/\n\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tCurve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nNURBSCurve.prototype = Object.create( Curve.prototype );\nNURBSCurve.prototype.constructor = NURBSCurve;\n\n\nNURBSCurve.prototype.getPoint = function ( t ) {\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn new Vector3( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nNURBSCurve.prototype.getTangent = function ( t ) {\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\tvar tangent = ders[ 1 ].clone();\n\ttangent.normalize();\n\n\treturn tangent;\n\n};\n\nexport { NURBSCurve };\n","import {AmbientLight} from 'three/src/lights/AmbientLight';\nimport {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Bone} from 'three/src/objects/Bone';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Color} from 'three/src/math/Color';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {EquirectangularReflectionMapping} from 'three/src/constants';\nimport {Euler} from 'three/src/math/Euler';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Float32BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Group} from 'three/src/objects/Group';\nimport {Line} from 'three/src/objects/Line';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {LoaderUtils} from 'three/src/loaders/LoaderUtils';\nimport {MathUtils} from 'three/src/math/MathUtils';\nimport {Matrix3} from 'three/src/math/Matrix3';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshLambertMaterial} from 'three/src/materials/MeshLambertMaterial';\nimport {MeshPhongMaterial} from 'three/src/materials/MeshPhongMaterial';\nimport {NumberKeyframeTrack} from 'three/src/animation/tracks/NumberKeyframeTrack';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {PointLight} from 'three/src/lights/PointLight';\nimport {PropertyBinding} from 'three/src/animation/PropertyBinding';\nimport {Quaternion} from 'three/src/math/Quaternion';\nimport {QuaternionKeyframeTrack} from 'three/src/animation/tracks/QuaternionKeyframeTrack';\nimport {RepeatWrapping} from 'three/src/constants';\nimport {Skeleton} from 'three/src/objects/Skeleton';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {Texture} from 'three/src/textures/Texture';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {Uint16BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {Vector4} from 'three/src/math/Vector4';\nimport {VectorKeyframeTrack} from 'three/src/animation/tracks/VectorKeyframeTrack';\nimport {sRGBEncoding} from 'three/src/constants';\n/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\nimport { Zlib } from \"../libs/inflate.module.min.js\";\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\n\n\nvar FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFBXLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FBXLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar self = this;\n\n\t\t\tvar path = ( self.path === '' ) ? LoaderUtils.extractUrlBase( url ) : self.path;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( self.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( self.parse( buffer, path ) );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tself.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, path ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t// console.log( fbxTree );\n\n\t\t\tvar textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t\t}\n\n\t} );\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\n\tfunction FBXTreeParser( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\t\tparameters.aoMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\t\tparameters.map = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\t\tparameters.normalMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\t\tparameters.alphaMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar self = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tself.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\n\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\n\n\t\t\t\t\tnode.applyMatrix4( transform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.getTransformData( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a PerspectiveCamera or OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a DirectionalLight, PointLight or SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\t\tmodel.normalizeSkinWeights();\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform data\n\t\tgetTransformData: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\t\tmodel.userData.transformData = transformData;\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tvar self = this;\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\n\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\n\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\n\n\t\t\t\t\t\t\t\tself.setupMorphMaterial( child, material, i );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tself.setupMorphMaterial( child, child.material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\tsetupMorphMaterial: function ( child, material, index ) {\n\n\t\t\tvar uuid = child.uuid;\n\t\t\tvar matUuid = material.uuid;\n\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\tvar sharedMat = false;\n\n\t\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\t\tif ( node.isMesh ) {\n\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\n\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\n\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( sharedMat === true ) {\n\n\t\t\t\tvar clonedMat = material.clone();\n\t\t\t\tclonedMat.morphTargets = true;\n\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\n\t\t\t\telse child.material[ index ] = clonedMat;\n\n\t\t\t} else material.morphTargets = true;\n\n\t\t}\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = [];\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// Assume one model and get the preRotation from that\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t\t},\n\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\t\tvar geo = new BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar self = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tself.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\t\tif ( morphTargets.length === 0 ) return;\n\n\t\t\tparentGeo.morphTargetsRelative = true;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\t\tvar self = this;\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\t\tself.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\n\t\t\tvar morphPositions = new Float32Array( length );\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: morphPositions,\n\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips !== undefined ) {\n\n\t\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\t\tanimationClips.push( clip );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar self = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( self.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new Vector3();\n\t\t\tvar initialRotation = new Quaternion();\n\t\t\tvar initialScale = new Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotation !== undefined ) {\n\n\t\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t\t}\n\n\t\t\tif ( postRotation !== undefined ) {\n\n\t\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new Quaternion();\n\t\t\tvar euler = new Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar self = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( self.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( self.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tself.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tself.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tself.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tself.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tconsole.log( 'THREE.FBXLoader: FBX binary version: ' + version );\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t// note: do not remove this even if you get a linter warning as it moves the buffer forward\n\t\t\tvar propertyListLen = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Zlib === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Zlib.Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempEuler = new Euler();\n\tvar tempVec = new Vector3();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\n\tfunction generateTransform( transformData ) {\n\n\t\tvar lTranslationM = new Matrix4();\n\t\tvar lPreRotationM = new Matrix4();\n\t\tvar lRotationM = new Matrix4();\n\t\tvar lPostRotationM = new Matrix4();\n\n\t\tvar lScalingM = new Matrix4();\n\t\tvar lScalingPivotM = new Matrix4();\n\t\tvar lScalingOffsetM = new Matrix4();\n\t\tvar lRotationOffsetM = new Matrix4();\n\t\tvar lRotationPivotM = new Matrix4();\n\n\t\tvar lParentGX = new Matrix4();\n\t\tvar lGlobalT = new Matrix4();\n\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( MathUtils.degToRad );\n\t\t\tarray.push( transformData.eulerOrder );\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\t// Pivots and offsets\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t\t// parent transform\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\n\n\t\t// Global Rotation\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\n\t\tvar lParentGRM = new Matrix4();\n\t\tlParentGX.extractRotation( lParentGRM );\n\n\t\t// Global Shear*Scaling\n\t\tvar lParentTM = new Matrix4();\n\t\tvar lLSM;\n\t\tvar lParentGSM;\n\t\tvar lParentGRSM;\n\n\t\tlParentTM.copyPosition( lParentGX );\n\t\tlParentGRSM = lParentTM.getInverse( lParentTM ).multiply( lParentGX );\n\t\tlParentGSM = lParentGRM.getInverse( lParentGRM ).multiply( lParentGRSM );\n\t\tlLSM = lScalingM;\n\n\t\tvar lGlobalRS;\n\t\tif ( inheritType === 0 ) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t\t} else if ( inheritType === 1 ) {\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t\t} else {\n\n\t\t\tvar lParentLSM = new Matrix4().copy( lScalingM );\n\n\t\t\tvar lParentGSM_noLocal = lParentGSM.multiply( lParentLSM.getInverse( lParentLSM ) );\n\n\t\t\tlGlobalRS = lParentGRM.multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t\t}\n\n\t\t// Calculate the local transform matrix\n\t\tvar lTransform = lTranslationM.multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM.getInverse( lRotationPivotM ) ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM.getInverse( lScalingPivotM ) );\n\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\t\tvar lGlobalTranslation = lParentGX.multiply( lLocalTWithAllPivotAndOffsetInfo );\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\t\tlTransform = lGlobalT.multiply( lGlobalRS );\n\n\t\treturn lTransform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\torder = order || 0;\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n\nexport { FBXLoader };\n"],"sourceRoot":""}