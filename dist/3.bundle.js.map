{"version":3,"sources":["webpack://POLY/./node_modules/three/src/objects/Skeleton.js","webpack://POLY/./modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["_offsetMatrix","_identityMatrix","Skeleton","bones","boneInverses","this","slice","boneMatrices","Float32Array","length","frame","undefined","calculateInverses","console","warn","i","il","push","Object","assign","prototype","inverse","getInverse","matrixWorld","pose","bone","parent","isBone","matrix","multiply","copy","decompose","position","quaternion","scale","update","boneTexture","multiplyMatrices","toArray","needsUpdate","clone","getBoneByName","name","dispose","GLTFLoader","manager","call","dracoLoader","ddsLoader","GLTFRegistry","objects","get","key","add","object","remove","removeAll","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","e","error","itemError","itemEnd","loader","setPath","setResponseType","setRequestHeader","requestHeader","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","Error","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","parser","GLTFParser","fileLoader","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","fromArray","range","type","target","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","BINARY_EXTENSION_CHUNK_TYPES","body","headerView","DataView","header","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","offset","rotation","repeat","texCoord","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","options","cache","associations","Map","primitiveCache","textureLoader","setCrossOrigin","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","indices","setIndex","box","min","max","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","getX","newGeometry","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","gltfReference","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","y","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","transparent","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","depthTest","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","camera","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","o","light","sanitizeNodeName","applyMatrix4","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","jointNode","mat","bind","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","file":"3.bundle.js","sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nvar _offsetMatrix = new Matrix4();\nvar _identityMatrix = new Matrix4();\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\tthis.frame = - 1;\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function () {\n\n\t\tvar bones = this.bones;\n\t\tvar boneInverses = this.boneInverses;\n\t\tvar boneMatrices = this.boneMatrices;\n\t\tvar boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== undefined ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tdispose: function ( ) {\n\n\t\tif ( this.boneTexture ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = undefined;\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport { Skeleton };\n","import {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Bone} from 'three/src/objects/Bone';\nimport {Box3} from 'three/src/math/Box3';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Color} from 'three/src/math/Color';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {DoubleSide} from 'three/src/constants';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {FrontSide} from 'three/src/constants';\nimport {Group} from 'three/src/objects/Group';\nimport {InterleavedBuffer} from 'three/src/core/InterleavedBuffer';\nimport {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute';\nimport {Interpolant} from 'three/src/math/Interpolant';\nimport {InterpolateDiscrete} from 'three/src/constants';\nimport {InterpolateLinear} from 'three/src/constants';\nimport {Line} from 'three/src/objects/Line';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {LineLoop} from 'three/src/objects/LineLoop';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {LinearFilter} from 'three/src/constants';\nimport {LinearMipmapLinearFilter} from 'three/src/constants';\nimport {LinearMipmapNearestFilter} from 'three/src/constants';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {LoaderUtils} from 'three/src/loaders/LoaderUtils';\nimport {Material} from 'three/src/materials/Material';\nimport {MathUtils} from 'three/src/math/MathUtils';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {MeshPhysicalMaterial} from 'three/src/materials/MeshPhysicalMaterial';\nimport {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\nimport {MirroredRepeatWrapping} from 'three/src/constants';\nimport {NearestFilter} from 'three/src/constants';\nimport {NearestMipmapLinearFilter} from 'three/src/constants';\nimport {NearestMipmapNearestFilter} from 'three/src/constants';\nimport {NumberKeyframeTrack} from 'three/src/animation/tracks/NumberKeyframeTrack';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {PointLight} from 'three/src/lights/PointLight';\nimport {Points} from 'three/src/objects/Points';\nimport {PointsMaterial} from 'three/src/materials/PointsMaterial';\nimport {PropertyBinding} from 'three/src/animation/PropertyBinding';\nimport {QuaternionKeyframeTrack} from 'three/src/animation/tracks/QuaternionKeyframeTrack';\nimport {RGBAFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\nimport {RepeatWrapping} from 'three/src/constants';\nimport {Skeleton} from 'three/src/objects/Skeleton';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {Sphere} from 'three/src/math/Sphere';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {TangentSpaceNormalMap} from 'three/src/constants';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {TriangleFanDrawMode} from 'three/src/constants';\nimport {TriangleStripDrawMode} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {VectorKeyframeTrack} from 'three/src/animation/tracks/VectorKeyframeTrack';\nimport {sRGBEncoding} from 'three/src/constants';\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsClearcoatExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\tparser.associations.set( texture, {\n\t\t\t\ttype: 'textures',\n\t\t\t\tindex: textureIndex\n\t\t\t} );\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tvar gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', geometry.attributes.uv );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ] ) {\n\n\t\t\tvar clearcoatExtension = extensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ];\n\t\t\tmaterialType = clearcoatExtension.getMaterialType();\n\t\t\tpending.push( clearcoatExtension.extendParams( materialParams, { extensions: materialExtensions }, parser ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { type: 'materials', index: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tparser.associations.set( node, { type: 'nodes', index: nodeIndex } );\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"sourceRoot":""}