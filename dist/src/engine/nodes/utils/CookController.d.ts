import { BaseNodeType } from '../_Base';
import { BaseContainer } from '../../containers/_Base';
export declare class CookController {
    private node;
    _cooking: boolean;
    _cooks_count: number;
    _max_cook_time: number;
    _cooking_dirty_timestamp: number | undefined;
    _cook_time_with_inputs: number;
    _cook_time_with_inputs_start: number | undefined;
    _cook_time_start: number | undefined;
    _cook_time: number;
    _cook_time_params_start: number | undefined;
    _cook_time_params: number;
    _last_eval_key: string | undefined;
    _inputs_evaluation_required: boolean;
    constructor(node: BaseNodeType);
    disallow_inputs_evaluation(): void;
    get is_cooking(): boolean;
    get cooks_count(): number;
    get cook_time(): number;
    private _init_cooking_state;
    private _init_cooking_start_time;
    private _start_cook_if_no_errors;
    cook_main(): Promise<void>;
    cook_main_without_inputs(): Promise<void>;
    end_cook(message?: string | null): void;
    _terminate_cook_process(): void;
    private _increment_cooks_count;
    _record_cook_time(): void;
    evaluate_inputs_and_params(): Promise<(BaseContainer | null)[]>;
    get cook_time_with_inputs(): number;
    get cook_time_params(): number;
    _time_with_precision(time: number): number;
}
