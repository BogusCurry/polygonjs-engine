{"version":3,"sources":["webpack://POLY/./modules/three/examples/jsm/loaders/DRACOLoader.js"],"names":["DRACOLoader","manager","call","this","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","position","normal","color","uv","defaultAttributeTypes","prototype","Object","assign","create","constructor","setDecoderPath","path","setDecoderConfig","config","setWorkerLimit","setVerbosity","console","warn","setDrawMode","setSkipDequantization","load","url","onLoad","onProgress","onError","loader","setPath","setResponseType","crossOrigin","setWithCredentials","buffer","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","then","catch","decodeDracoFile","callback","attribute","type","undefined","BYTES_PER_ELEMENT","name","worker","taskKey","JSON","stringify","taskCache","has","cachedTask","get","key","promise","byteLength","Error","taskID","taskCost","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","id","message","_createGeometry","geometry","finally","_releaseTask","set","geometryData","index","setIndex","array","i","attributes","length","itemSize","setAttribute","_loadLibrary","responseType","preload","_initDecoder","useJS","WebAssembly","librariesPending","push","all","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","_taskLoad","onmessage","e","data","error","sort","a","b","debug","log","map","dispose","terminate","decodeAttribute","draco","decoder","dracoGeometry","attributeName","attributeType","dracoArray","numComponents","num_components","numValues","num_points","Float32Array","DracoFloat32Array","GetAttributeFloatForAllPoints","Int8Array","DracoInt8Array","GetAttributeInt8ForAllPoints","Int16Array","DracoInt16Array","GetAttributeInt16ForAllPoints","Int32Array","DracoInt32Array","GetAttributeInt32ForAllPoints","Uint8Array","DracoUInt8Array","GetAttributeUInt8ForAllPoints","Uint16Array","DracoUInt16Array","GetAttributeUInt16ForAllPoints","Uint32Array","DracoUInt32Array","GetAttributeUInt32ForAllPoints","GetValue","destroy","onModuleLoaded","DracoDecoderModule","module","Decoder","decoderBuffer","DecoderBuffer","Init","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","ptr","error_msg","attributeID","self","GetAttributeByUniqueId","GetAttributeId","GetAttribute","numFaces","num_faces","indexArray","GetFaceFromMesh","j","buffers","attr","WeakMap","releaseDecoderModule","getDecoderModule"],"mappings":"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","file":"1.bundle.js","sourcesContent":["import {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {Loader} from 'three/src/loaders/Loader';\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\nvar DRACOLoader = function ( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.decoderPath = '';\n\tthis.decoderConfig = {};\n\tthis.decoderBinary = null;\n\tthis.decoderPending = null;\n\n\tthis.workerLimit = 4;\n\tthis.workerPool = [];\n\tthis.workerNextTaskID = 1;\n\tthis.workerSourceURL = '';\n\n\tthis.defaultAttributeIDs = {\n\t\tposition: 'POSITION',\n\t\tnormal: 'NORMAL',\n\t\tcolor: 'COLOR',\n\t\tuv: 'TEX_COORD'\n\t};\n\tthis.defaultAttributeTypes = {\n\t\tposition: 'Float32Array',\n\t\tnormal: 'Float32Array',\n\t\tcolor: 'Float32Array',\n\t\tuv: 'Float32Array'\n\t};\n\n};\n\nDRACOLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DRACOLoader,\n\n\tsetDecoderPath: function ( path ) {\n\n\t\tthis.decoderPath = path;\n\n\t\treturn this;\n\n\t},\n\n\tsetDecoderConfig: function ( config ) {\n\n\t\tthis.decoderConfig = config;\n\n\t\treturn this;\n\n\t},\n\n\tsetWorkerLimit: function ( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t},\n\n\t/** @deprecated */\n\tsetVerbosity: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setVerbosity() method has been removed.' );\n\n\t},\n\n\t/** @deprecated */\n\tsetDrawMode: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setDrawMode() method has been removed.' );\n\n\t},\n\n\t/** @deprecated */\n\tsetSkipDequantization: function () {\n\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setSkipDequantization() method has been removed.' );\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.crossOrigin === 'use-credentials' ) {\n\n\t\t\tloader.setWithCredentials( true );\n\n\t\t}\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\tvar taskConfig = {\n\t\t\t\tattributeIDs: this.defaultAttributeIDs,\n\t\t\t\tattributeTypes: this.defaultAttributeTypes,\n\t\t\t\tuseUniqueIDs: false\n\t\t\t};\n\n\t\t\tthis.decodeGeometry( buffer, taskConfig )\n\t\t\t\t.then( onLoad )\n\t\t\t\t.catch( onError );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\t/** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n\tdecodeDracoFile: function ( buffer, callback, attributeIDs, attributeTypes ) {\n\n\t\tvar taskConfig = {\n\t\t\tattributeIDs: attributeIDs || this.defaultAttributeIDs,\n\t\t\tattributeTypes: attributeTypes || this.defaultAttributeTypes,\n\t\t\tuseUniqueIDs: !! attributeIDs\n\t\t};\n\n\t\tthis.decodeGeometry( buffer, taskConfig ).then( callback );\n\n\t},\n\n\tdecodeGeometry: function ( buffer, taskConfig ) {\n\n\t\t// TODO: For backward-compatibility, support 'attributeTypes' objects containing\n\t\t// references (rather than names) to typed array constructors. These must be\n\t\t// serialized before sending them to the worker.\n\t\tfor ( var attribute in taskConfig.attributeTypes ) {\n\n\t\t\tvar type = taskConfig.attributeTypes[ attribute ];\n\n\t\t\tif ( type.BYTES_PER_ELEMENT !== undefined ) {\n\n\t\t\t\ttaskConfig.attributeTypes[ attribute ] = type.name;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar taskKey = JSON.stringify( taskConfig );\n\n\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t// again from this thread.\n\t\tif ( DRACOLoader.taskCache.has( buffer ) ) {\n\n\t\t\tvar cachedTask = DRACOLoader.taskCache.get( buffer );\n\n\t\t\tif ( cachedTask.key === taskKey ) {\n\n\t\t\t\treturn cachedTask.promise;\n\n\t\t\t} else if ( buffer.byteLength === 0 ) {\n\n\t\t\t\t// Technically, it would be possible to wait for the previous task to complete,\n\t\t\t\t// transfer the buffer back, and decode again with the second configuration. That\n\t\t\t\t// is complex, and I don't know of any reason to decode a Draco buffer twice in\n\t\t\t\t// different ways, so this is left unimplemented.\n\t\t\t\tthrow new Error(\n\n\t\t\t\t\t'THREE.DRACOLoader: Unable to re-decode a buffer with different ' +\n\t\t\t\t\t'settings. Buffer has already been transferred.'\n\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar worker;\n\t\tvar taskID = this.workerNextTaskID ++;\n\t\tvar taskCost = buffer.byteLength;\n\n\t\t// Obtain a worker and assign a task, and construct a geometry instance\n\t\t// when the task completes.\n\t\tvar geometryPending = this._getWorker( taskID, taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, taskConfig, buffer }, [ buffer ] );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => this._createGeometry( message.geometry ) );\n\n\t\t// Remove task from the task list.\n\t\tgeometryPending\n\t\t\t.finally( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tthis._releaseTask( worker, taskID );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\tDRACOLoader.taskCache.set( buffer, {\n\n\t\t\tkey: taskKey,\n\t\t\tpromise: geometryPending\n\n\t\t} );\n\n\t\treturn geometryPending;\n\n\t},\n\n\t_createGeometry: function ( geometryData ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tif ( geometryData.index ) {\n\n\t\t\tgeometry.setIndex( new BufferAttribute( geometryData.index.array, 1 ) );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < geometryData.attributes.length; i ++ ) {\n\n\t\t\tvar attribute = geometryData.attributes[ i ];\n\t\t\tvar name = attribute.name;\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tgeometry.setAttribute( name, new BufferAttribute( array, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t},\n\n\t_loadLibrary: function ( url, responseType ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.decoderPath );\n\t\tloader.setResponseType( responseType );\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tloader.load( url, resolve, undefined, reject );\n\n\t\t} );\n\n\t},\n\n\tpreload: function () {\n\n\t\tthis._initDecoder();\n\n\t\treturn this;\n\n\t},\n\n\t_initDecoder: function () {\n\n\t\tif ( this.decoderPending ) return this.decoderPending;\n\n\t\tvar useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n\t\tvar librariesPending = [];\n\n\t\tif ( useJS ) {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.js', 'text' ) );\n\n\t\t} else {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_wasm_wrapper.js', 'text' ) );\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.wasm', 'arraybuffer' ) );\n\n\t\t}\n\n\t\tthis.decoderPending = Promise.all( librariesPending )\n\t\t\t.then( ( libraries ) => {\n\n\t\t\t\tvar jsContent = libraries[ 0 ];\n\n\t\t\t\tif ( ! useJS ) {\n\n\t\t\t\t\tthis.decoderConfig.wasmBinary = libraries[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar fn = DRACOLoader.DRACOWorker.toString();\n\n\t\t\t\tvar body = [\n\t\t\t\t\t'/* draco decoder */',\n\t\t\t\t\tjsContent,\n\t\t\t\t\t'',\n\t\t\t\t\t'/* worker */',\n\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\n\t\t\t} );\n\n\t\treturn this.decoderPending;\n\n\t},\n\n\t_getWorker: function ( taskID, taskCost ) {\n\n\t\treturn this._initDecoder().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tvar worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskCosts = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( { type: 'init', decoderConfig: this.decoderConfig } );\n\n\t\t\t\tworker.onmessage = function ( e ) {\n\n\t\t\t\t\tvar message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'decode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tvar worker = this.workerPool[ this.workerPool.length - 1 ];\n\t\t\tworker._taskCosts[ taskID ] = taskCost;\n\t\t\tworker._taskLoad += taskCost;\n\t\t\treturn worker;\n\n\t\t} );\n\n\t},\n\n\t_releaseTask: function ( worker, taskID ) {\n\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\n\t\tdelete worker._callbacks[ taskID ];\n\t\tdelete worker._taskCosts[ taskID ];\n\n\t},\n\n\tdebug: function () {\n\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\n\n\t},\n\n\tdispose: function () {\n\n\t\tfor ( var i = 0; i < this.workerPool.length; ++ i ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/* WEB WORKER */\n\nDRACOLoader.DRACOWorker = function () {\n\n\tvar decoderConfig;\n\tvar decoderPending;\n\n\tonmessage = function ( e ) {\n\n\t\tvar message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\t\t\t\tdecoderConfig = message.decoderConfig;\n\t\t\t\tdecoderPending = new Promise( function ( resolve/*, reject*/ ) {\n\n\t\t\t\t\tdecoderConfig.onModuleLoaded = function ( draco ) {\n\n\t\t\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\n\t\t\t\t\t\tresolve( { draco: draco } );\n\n\t\t\t\t\t};\n\n\t\t\t\t\tDracoDecoderModule( decoderConfig );\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t\tcase 'decode':\n\t\t\t\tvar buffer = message.buffer;\n\t\t\t\tvar taskConfig = message.taskConfig;\n\t\t\t\tdecoderPending.then( ( module ) => {\n\n\t\t\t\t\tvar draco = module.draco;\n\t\t\t\t\tvar decoder = new draco.Decoder();\n\t\t\t\t\tvar decoderBuffer = new draco.DecoderBuffer();\n\t\t\t\t\tdecoderBuffer.Init( new Int8Array( buffer ), buffer.byteLength );\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar geometry = decodeGeometry( draco, decoder, decoderBuffer, taskConfig );\n\n\t\t\t\t\t\tvar buffers = geometry.attributes.map( ( attr ) => attr.array.buffer );\n\n\t\t\t\t\t\tif ( geometry.index ) buffers.push( geometry.index.array.buffer );\n\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, geometry }, buffers );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.error( error );\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\n\n\t\t\t\t\t} finally {\n\n\t\t\t\t\t\tdraco.destroy( decoderBuffer );\n\t\t\t\t\t\tdraco.destroy( decoder );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction decodeGeometry( draco, decoder, decoderBuffer, taskConfig ) {\n\n\t\tvar attributeIDs = taskConfig.attributeIDs;\n\t\tvar attributeTypes = taskConfig.attributeTypes;\n\n\t\tvar dracoGeometry;\n\t\tvar decodingStatus;\n\n\t\tvar geometryType = decoder.GetEncodedGeometryType( decoderBuffer );\n\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tdracoGeometry = new draco.Mesh();\n\t\t\tdecodingStatus = decoder.DecodeBufferToMesh( decoderBuffer, dracoGeometry );\n\n\t\t} else if ( geometryType === draco.POINT_CLOUD ) {\n\n\t\t\tdracoGeometry = new draco.PointCloud();\n\t\t\tdecodingStatus = decoder.DecodeBufferToPointCloud( decoderBuffer, dracoGeometry );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected geometry type.' );\n\n\t\t}\n\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\n\n\t\t}\n\n\t\tvar geometry = { index: null, attributes: [] };\n\n\t\t// Gather all vertex attributes.\n\t\tfor ( var attributeName in attributeIDs ) {\n\n\t\t\tvar attributeType = self[ attributeTypes[ attributeName ] ];\n\n\t\t\tvar attribute;\n\t\t\tvar attributeID;\n\n\t\t\t// A Draco file may be created with default vertex attributes, whose attribute IDs\n\t\t\t// are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n\t\t\t// a Draco file may contain a custom set of attributes, identified by known unique\n\t\t\t// IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\t\t\tif ( taskConfig.useUniqueIDs ) {\n\n\t\t\t\tattributeID = attributeIDs[ attributeName ];\n\t\t\t\tattribute = decoder.GetAttributeByUniqueId( dracoGeometry, attributeID );\n\n\t\t\t} else {\n\n\t\t\t\tattributeID = decoder.GetAttributeId( dracoGeometry, draco[ attributeIDs[ attributeName ] ] );\n\n\t\t\t\tif ( attributeID === - 1 ) continue;\n\n\t\t\t\tattribute = decoder.GetAttribute( dracoGeometry, attributeID );\n\n\t\t\t}\n\n\t\t\tgeometry.attributes.push( decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) );\n\n\t\t}\n\n\t\t// Add index.\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\t// Generate mesh faces.\n\t\t\tvar numFaces = dracoGeometry.num_faces();\n\t\t\tvar numIndices = numFaces * 3;\n\t\t\tvar index = new Uint32Array( numIndices );\n\t\t\tvar indexArray = new draco.DracoInt32Array();\n\n\t\t\tfor ( var i = 0; i < numFaces; ++ i ) {\n\n\t\t\t\tdecoder.GetFaceFromMesh( dracoGeometry, i, indexArray );\n\n\t\t\t\tfor ( var j = 0; j < 3; ++ j ) {\n\n\t\t\t\t\tindex[ i * 3 + j ] = indexArray.GetValue( j );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.index = { array: index, itemSize: 1 };\n\n\t\t\tdraco.destroy( indexArray );\n\n\t\t}\n\n\t\tdraco.destroy( dracoGeometry );\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) {\n\n\t\tvar numComponents = attribute.num_components();\n\t\tvar numPoints = dracoGeometry.num_points();\n\t\tvar numValues = numPoints * numComponents;\n\t\tvar dracoArray;\n\n\t\tvar array;\n\n\t\tswitch ( attributeType ) {\n\n\t\t\tcase Float32Array:\n\t\t\t\tdracoArray = new draco.DracoFloat32Array();\n\t\t\t\tdecoder.GetAttributeFloatForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Float32Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Int8Array:\n\t\t\t\tdracoArray = new draco.DracoInt8Array();\n\t\t\t\tdecoder.GetAttributeInt8ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Int8Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Int16Array:\n\t\t\t\tdracoArray = new draco.DracoInt16Array();\n\t\t\t\tdecoder.GetAttributeInt16ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Int16Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Int32Array:\n\t\t\t\tdracoArray = new draco.DracoInt32Array();\n\t\t\t\tdecoder.GetAttributeInt32ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Int32Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Uint8Array:\n\t\t\t\tdracoArray = new draco.DracoUInt8Array();\n\t\t\t\tdecoder.GetAttributeUInt8ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Uint8Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Uint16Array:\n\t\t\t\tdracoArray = new draco.DracoUInt16Array();\n\t\t\t\tdecoder.GetAttributeUInt16ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Uint16Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tcase Uint32Array:\n\t\t\t\tdracoArray = new draco.DracoUInt32Array();\n\t\t\t\tdecoder.GetAttributeUInt32ForAllPoints( dracoGeometry, attribute, dracoArray );\n\t\t\t\tarray = new Uint32Array( numValues );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected attribute type.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < numValues; i ++ ) {\n\n\t\t\tarray[ i ] = dracoArray.GetValue( i );\n\n\t\t}\n\n\t\tdraco.destroy( dracoArray );\n\n\t\treturn {\n\t\t\tname: attributeName,\n\t\t\tarray: array,\n\t\t\titemSize: numComponents\n\t\t};\n\n\t}\n\n};\n\nDRACOLoader.taskCache = new WeakMap();\n\n/** Deprecated static methods */\n\n/** @deprecated */\nDRACOLoader.setDecoderPath = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.setDecoderConfig = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.releaseDecoderModule = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.' );\n\n};\n\n/** @deprecated */\nDRACOLoader.getDecoderModule = function () {\n\n\tconsole.warn( 'THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.' );\n\n};\n\nexport { DRACOLoader };\n"],"sourceRoot":""}