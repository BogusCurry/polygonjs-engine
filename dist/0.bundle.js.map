{"version":3,"sources":["webpack://POLY/./node_modules/three/src/objects/Skeleton.js","webpack://POLY/./modules/three/examples/jsm/loaders/GLTFLoader.js"],"names":["_offsetMatrix","_identityMatrix","Skeleton","bones","boneInverses","this","slice","boneMatrices","Float32Array","length","frame","undefined","calculateInverses","console","warn","i","il","push","Object","assign","prototype","inverse","getInverse","matrixWorld","pose","bone","parent","isBone","matrix","multiply","copy","decompose","position","quaternion","scale","update","boneTexture","multiplyMatrices","toArray","needsUpdate","clone","getBoneByName","name","dispose","GLTFLoader","manager","call","dracoLoader","ddsLoader","GLTFRegistry","objects","get","key","add","object","remove","removeAll","create","constructor","load","url","onLoad","onProgress","onError","resourcePath","scope","path","extractUrlBase","itemStart","_onError","e","error","itemError","itemEnd","loader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","Error","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_CLEARCOAT","GLTFMaterialsClearcoatExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","GLTFParser","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","color","fromArray","range","type","target","set","distance","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","extendParams","materialParams","materialDef","parser","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","clearcoatFactor","clearcoat","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessTexture","clearcoatNormalTexture","clearcoatNormalScale","BINARY_EXTENSION_CHUNK_TYPES","body","headerView","DataView","header","magic","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","GLTFMeshStandardSGMaterial","params","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","offset","rotation","repeat","texCoord","source","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","LINEAR","STEP","ALPHA_MODES","MIME_TYPE_FORMATS","resolveURL","test","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createAttributesKey","attributesKey","keys","sort","options","cache","primitiveCache","textureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","accessorIndex","accessor","setAttribute","gltfAttributeName","indices","setIndex","box","min","max","targets","maxDisplacement","vector","setX","abs","setY","setZ","expandByVector","boundingBox","sphere","getCenter","center","radius","distanceTo","boundingSphere","computeBounds","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","addMorphTargets","toTrianglesDrawMode","drawMode","getIndex","getAttribute","count","numberOfTriangles","newIndices","getX","newGeometry","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibSlice","floor","ibCacheKey","ib","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setW","textureIndex","URL","self","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","sizeAttenuation","isLine","lineMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","y","materialIndex","materialType","materials","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","alphaMode","transparent","depthWrite","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","clearcoatExtension","encoding","loadGeometries","primitives","createDracoPrimitive","dracoExtension","geometryPromise","mode","cached","promise","meshIndex","depthTest","results","geometries","skinWeight","normalizeSkinWeights","group","cameraIndex","camera","cameraDef","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","updateMatrix","matrixAutoUpdate","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","instanceNum","o","light","sanitizeNodeName","applyMatrix4","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","jointNode","mat","bind","children","child","sceneIndex","sceneDef","nodeIds"],"mappings":"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","file":"0.bundle.js","sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nvar _offsetMatrix = new Matrix4();\nvar _identityMatrix = new Matrix4();\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\tthis.frame = - 1;\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function () {\n\n\t\tvar bones = this.bones;\n\t\tvar boneInverses = this.boneInverses;\n\t\tvar boneMatrices = this.boneMatrices;\n\t\tvar boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== undefined ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tdispose: function ( ) {\n\n\t\tif ( this.boneTexture ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = undefined;\n\n\t\t}\n\n\t}\n\n} );\n\n\nexport { Skeleton };\n","import {AnimationClip} from 'three/src/animation/AnimationClip';\nimport {Bone} from 'three/src/objects/Bone';\nimport {Box3} from 'three/src/math/Box3';\nimport {BufferAttribute} from 'three/src/core/BufferAttribute';\nimport {BufferGeometry} from 'three/src/core/BufferGeometry';\nimport {ClampToEdgeWrapping} from 'three/src/constants';\nimport {Color} from 'three/src/math/Color';\nimport {DirectionalLight} from 'three/src/lights/DirectionalLight';\nimport {DoubleSide} from 'three/src/constants';\nimport {FileLoader} from 'three/src/loaders/FileLoader';\nimport {FrontSide} from 'three/src/constants';\nimport {Group} from 'three/src/objects/Group';\nimport {InterleavedBuffer} from 'three/src/core/InterleavedBuffer';\nimport {InterleavedBufferAttribute} from 'three/src/core/InterleavedBufferAttribute';\nimport {Interpolant} from 'three/src/math/Interpolant';\nimport {InterpolateDiscrete} from 'three/src/constants';\nimport {InterpolateLinear} from 'three/src/constants';\nimport {Line} from 'three/src/objects/Line';\nimport {LineBasicMaterial} from 'three/src/materials/LineBasicMaterial';\nimport {LineLoop} from 'three/src/objects/LineLoop';\nimport {LineSegments} from 'three/src/objects/LineSegments';\nimport {LinearFilter} from 'three/src/constants';\nimport {LinearMipmapLinearFilter} from 'three/src/constants';\nimport {LinearMipmapNearestFilter} from 'three/src/constants';\nimport {Loader} from 'three/src/loaders/Loader';\nimport {LoaderUtils} from 'three/src/loaders/LoaderUtils';\nimport {Material} from 'three/src/materials/Material';\nimport {MathUtils} from 'three/src/math/MathUtils';\nimport {Matrix4} from 'three/src/math/Matrix4';\nimport {Mesh} from 'three/src/objects/Mesh';\nimport {MeshBasicMaterial} from 'three/src/materials/MeshBasicMaterial';\nimport {MeshPhysicalMaterial} from 'three/src/materials/MeshPhysicalMaterial';\nimport {MeshStandardMaterial} from 'three/src/materials/MeshStandardMaterial';\nimport {MirroredRepeatWrapping} from 'three/src/constants';\nimport {NearestFilter} from 'three/src/constants';\nimport {NearestMipmapLinearFilter} from 'three/src/constants';\nimport {NearestMipmapNearestFilter} from 'three/src/constants';\nimport {NumberKeyframeTrack} from 'three/src/animation/tracks/NumberKeyframeTrack';\nimport {Object3D} from 'three/src/core/Object3D';\nimport {OrthographicCamera} from 'three/src/cameras/OrthographicCamera';\nimport {PerspectiveCamera} from 'three/src/cameras/PerspectiveCamera';\nimport {PointLight} from 'three/src/lights/PointLight';\nimport {Points} from 'three/src/objects/Points';\nimport {PointsMaterial} from 'three/src/materials/PointsMaterial';\nimport {PropertyBinding} from 'three/src/animation/PropertyBinding';\nimport {QuaternionKeyframeTrack} from 'three/src/animation/tracks/QuaternionKeyframeTrack';\nimport {RGBAFormat} from 'three/src/constants';\nimport {RGBFormat} from 'three/src/constants';\nimport {RepeatWrapping} from 'three/src/constants';\nimport {Skeleton} from 'three/src/objects/Skeleton';\nimport {SkinnedMesh} from 'three/src/objects/SkinnedMesh';\nimport {Sphere} from 'three/src/math/Sphere';\nimport {SpotLight} from 'three/src/lights/SpotLight';\nimport {TangentSpaceNormalMap} from 'three/src/constants';\nimport {TextureLoader} from 'three/src/loaders/TextureLoader';\nimport {TriangleFanDrawMode} from 'three/src/constants';\nimport {TriangleStripDrawMode} from 'three/src/constants';\nimport {Vector2} from 'three/src/math/Vector2';\nimport {Vector3} from 'three/src/math/Vector3';\nimport {VectorKeyframeTrack} from 'three/src/animation/tracks/VectorKeyframeTrack';\nimport {sRGBEncoding} from 'three/src/constants';\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n\nvar GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_CLEARCOAT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsClearcoatExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Clearcoat Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n\t */\n\tfunction GLTFMaterialsClearcoatExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tGLTFMaterialsClearcoatExtension.prototype.getMaterialType = function () {\n\n\t\treturn MeshPhysicalMaterial;\n\n\t};\n\n\tGLTFMaterialsClearcoatExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tvar extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tvar scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: NearestFilter,\n\t\t9729: LinearFilter,\n\t\t9984: NearestMipmapNearestFilter,\n\t\t9985: LinearMipmapNearestFilter,\n\t\t9986: NearestMipmapLinearFilter,\n\t\t9987: LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: ClampToEdgeWrapping,\n\t\t33648: MirroredRepeatWrapping,\n\t\t10497: RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: InterpolateLinear,\n\t\tSTEP: InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': RGBAFormat,\n\t\t'image/jpeg': RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {Object3D|Material|BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = self.URL || self.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', geometry.attributes.uv );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.clearcoatNormalScale.y = - material.clearcoatNormalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ] ) {\n\n\t\t\tvar clearcoatExtension = extensions[ EXTENSIONS.KHR_MATERIALS_CLEARCOAT ];\n\t\t\tmaterialType = clearcoatExtension.getMaterialType();\n\t\t\tpending.push( clearcoatExtension.extendParams( materialParams, { extensions: materialExtensions }, parser ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar maxDisplacement = new Vector3();\n\t\t\tvar vector = new Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\t\tbox.expandByVector( maxDisplacement );\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a Group (glTF mesh with several primitives) or a Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n\nexport { GLTFLoader };\n"],"sourceRoot":""}