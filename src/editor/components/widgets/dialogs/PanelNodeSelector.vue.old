<template lang='pug'>

	include /mixins.pug

	doctype html

	.NodeSelector(
		v-if = 'display'
		)
		Modal(
			title = 'Choose an event node:'
			ref = 'modal'
			)
			.full_height_container.grid-y
				.cell.auto
					NodeTree(
						:node = 'root'
						:selected_graph_node_id = 'selected_graph_node_id'
						@select = 'on_select'
						)
				.cell.shrink.text-right
					.buttons
						.button.success(
							@click = 'accept_selected'
							:class = 'accept_button_class_object'
							) Accept
						.button.clear(@click = 'close') Cancel


</template>

<script lang='ts'>
import lodash_clone from 'lodash/clone';

// components
import Modal from './Modal.vue';
import NodeTree from './NodeTree.vue';

import {defineComponent, ref, computed, watch} from '@vue/composition-api';
import { StoreController } from '../../../store/controllers/StoreController';
import { BaseNodeType } from '../../../../engine/nodes/_Base';
export default defineComponent({

	name: 'panel-node-selector',
	components: {Modal, NodeTree},

	setup(props){

		const selected_graph_node_id = ref<string|null>(null)


		const panel_id = computed(()=>{
			return StoreController.editor.panel_node_selector.panel_id()
		})

		const display = computed(()=>{
			return panel_id.value != null;
		})
		watch(display, ()=>{
			selected_graph_node_id.value = null
		})

		// const root = computed(()=>{
		// 	return StoreController.scene.root;
		// })

		const accept_button_class_object = computed(()=>{
			return {disabled: selected_graph_node_id.value == null};
		})

		function on_select(node: BaseNodeType) {
			selected_graph_node_id.value = node.graph_node_id
		}

		function accept_selected() {
			if(selected_graph_node_id.value){
				const selected_node = StoreController.engine.node(selected_graph_node_id.value);

				const editor = this.$root.$children[0];
				const viewer = editor.panel_with_id(lodash_clone(this.panel_id));
				viewer.set_event_node(selected_node);

				close();
			}
		}

		function close() {
			this.$store.commit('editor/panel_node_selector/close');
		}

		// to_json() {
		// 	return this.refs.modal.to_json();
		// }

		return {selected_graph_node_id}
	}



	methods: {
		,
	},
};
</script>

<style lang='sass'>
	@import "globals.sass"

	.NodeSelector
		background-color: red

		.buttons
			margin-bottom: 10px

</style>
